uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t result;
  _OWORD *v7;
  long long v8;
  long long v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  long long v14;
  _OWORD *v15;
  _OWORD *v16;
  float32x4_t v17;
  float32x4_t *v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int16x8_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  unint64_t v26;
  int8x16_t v27;
  int8x16_t v28;
  unint64_t v29;
  int64x2_t v30;
  int64x2_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  BOOL v35;
  int v36;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int8x16_t v42;
  int64x2_t *v43;
  int64x2_t v44;
  int32x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int16x8_t v48;
  int16x8_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int32x4_t v54;
  int8x8_t v55;
  int16x8_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  unint64_t v60;
  int64x2_t v61;
  int64x2_t v62;
  unint64_t v63;
  BOOL v64;
  int v65;
  int64x2_t v67;
  int64x2_t *v68;
  int32x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int16x8_t v72;
  int16x8_t v73;
  int16x8_t v74;
  int16x8_t v75;
  int8x16_t v76;
  int v77;
  unint64_t v78;
  unint64_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int8x16_t v82;
  unint64_t v83;
  int64x2_t v84;
  int64x2_t v85;
  unint64_t v86;
  unint64_t v87;
  BOOL v88;
  int v89;
  unint64_t v90;
  int64x2_t v91;
  unint64_t v92;
  int64x2_t *v93;
  int v94;
  int32x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int16x8_t v98;
  int16x8_t v99;
  int16x8_t v100;
  int16x8_t v101;
  int16x8_t v102;
  int8x16_t v103;
  int64x2_t v104;
  unint64_t v105;
  unint64_t v106;
  BOOL v107;
  char v108;
  int8x16_t v109;
  unint64_t v110;
  int64x2_t v111;
  int64x2_t *v112;
  int8x16_t v113;
  int32x2_t v114;
  int64x2_t v115;
  uint64x2_t v116;
  int64x2_t v117;
  int16x8_t v118;
  uint32x4_t v119;
  int16x8_t v120;
  int16x8_t v121;
  int16x8_t v122;
  int16x8_t v123;
  unint64_t v124;
  BOOL v125;
  char v126;
  unint64_t v127;
  int64x2_t v128;
  int64x2_t *v129;
  int64x2_t v130;
  int16x8_t v131;
  int16x8_t v132;
  int16x8_t v133;
  unint64_t v134;
  BOOL v135;
  char v136;
  int8x16_t v137;
  unint64_t v138;
  int64x2_t v139;
  int64x2_t *v140;
  int8x16_t v141;
  int64x2_t v142;
  int16x8_t v143;
  int16x8_t v144;
  int16x8_t v145;
  int8x16_t v146;
  unint64_t v147;
  int64x2_t v148;
  int64x2_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  BOOL v153;
  char v154;
  unint64_t v155;
  int64x2_t v156;
  int64x2_t *v157;
  int32x4_t v158;
  int32x2_t v159;
  int64x2_t v160;
  uint64x2_t v161;
  int64x2_t v162;
  int16x8_t v163;
  uint32x4_t v164;
  int16x8_t v165;
  int16x8_t v166;
  int16x8_t v167;
  int16x8_t v168;
  int16x8_t v169;
  unint64_t v170;
  BOOL v171;
  char v172;
  int8x16_t v173;
  unint64_t v174;
  int64x2_t v175;
  int64x2_t *v176;
  int8x16_t v177;
  int64x2_t v178;
  int16x8_t v179;
  int16x8_t v180;
  int16x8_t v181;
  unint64_t v182;
  BOOL v183;
  char v184;
  unint64_t v185;
  int64x2_t v186;
  int64x2_t *v187;
  int64x2_t v188;
  int16x8_t v189;
  int16x8_t v190;
  int16x8_t v191;
  unint64_t v192;
  BOOL v193;
  char v194;
  int8x16_t v195;
  unint64_t v196;
  int64x2_t v197;
  int64x2_t *v198;
  int8x16_t v199;
  int64x2_t v200;
  int16x8_t v201;
  int16x8_t v202;
  int16x8_t v203;
  int8x16_t v204;
  unint64_t v205;
  int64x2_t v206;
  int64x2_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  BOOL v211;
  char v212;
  unint64_t v213;
  int64x2_t v214;
  int64x2_t *v215;
  int32x4_t v216;
  int32x2_t v217;
  int64x2_t v218;
  uint64x2_t v219;
  int64x2_t v220;
  int16x8_t v221;
  uint32x4_t v222;
  int16x8_t v223;
  int16x8_t v224;
  int16x8_t v225;
  int16x8_t v226;
  int16x8_t v227;
  unint64_t v228;
  BOOL v229;
  char v230;
  int8x16_t v231;
  unint64_t v232;
  int64x2_t v233;
  int64x2_t *v234;
  int8x16_t v235;
  int64x2_t v236;
  int16x8_t v237;
  int16x8_t v238;
  int16x8_t v239;
  unint64_t v240;
  BOOL v241;
  char v242;
  unint64_t v243;
  int64x2_t v244;
  int64x2_t *v245;
  int64x2_t v246;
  int16x8_t v247;
  int16x8_t v248;
  int16x8_t v249;
  unint64_t v250;
  BOOL v251;
  char v252;
  int8x16_t v253;
  unint64_t v254;
  int64x2_t v255;
  int64x2_t *v256;
  int8x16_t v257;
  int64x2_t v258;
  int16x8_t v259;
  int16x8_t v260;
  int16x8_t v261;
  int8x16_t v262;
  unint64_t v263;
  int64x2_t v264;
  int64x2_t v265;
  unint64_t v266;
  unint64_t v267;
  unint64_t v268;
  BOOL v269;
  char v270;
  unint64_t v271;
  int64x2_t v272;
  int64x2_t *v273;
  int32x2_t v274;
  int64x2_t v275;
  int32x4_t v276;
  int64x2_t v277;
  int16x8_t v278;
  uint32x4_t v279;
  int16x8_t v280;
  int16x8_t v281;
  int16x8_t v282;
  int16x8_t v283;
  int16x8_t v284;
  unint64_t v285;
  BOOL v286;
  char v287;
  int8x16_t v288;
  unint64_t v289;
  int64x2_t v290;
  int64x2_t *v291;
  int8x16_t v292;
  int64x2_t v293;
  int16x8_t v294;
  int16x8_t v295;
  int16x8_t v296;
  unint64_t v297;
  BOOL v298;
  char v299;
  unint64_t v300;
  int64x2_t v301;
  int64x2_t *v302;
  int64x2_t v303;
  int16x8_t v304;
  int16x8_t v305;
  int16x8_t v306;
  unint64_t v307;
  BOOL v308;
  char v309;
  int8x16_t v310;
  int64x2_t v311;
  int64x2_t *v312;
  int64x2_t v313;
  int16x8_t v314;
  int16x8_t v315;
  int16x8_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  unint64_t v320;
  unint64_t v321;
  unint64_t v322;
  uint64_t v323;
  void *v324;
  int16x8_t v325;
  int8x16_t v326;
  int16x8_t v327;
  int16x8_t v328;
  int16x8_t v329;
  int16x8_t v330;
  int16x8_t v331;
  int16x8_t v332;
  int8x16_t v333;
  int8x16_t v334;
  int16x8_t v335;
  int16x8_t v336;
  int16x8_t v337;
  int16x8_t v338;
  int16x8_t v339;
  int16x8_t v340;
  int16x8_t v341;
  int16x8_t v342;
  int16x8_t v343;
  int16x8_t v344;
  int16x8_t v345;
  int16x8_t v346;
  int8x16_t v347;
  int8x16_t v348;
  int8x16_t v349;
  int8x16_t v350;
  int16x8_t v351;
  int16x8_t v352;
  int8x16_t v353;
  int16x8_t v354;
  int16x8_t v355;
  int16x8_t v356;
  int16x8_t v357;
  int16x8_t v358;
  int16x8_t v359;
  int16x8_t v360;
  int16x8_t v361;
  int8x16_t v362;
  int8x16_t v363;
  int8x16_t v364;
  int8x16_t v365;
  int8x16_t v366;
  int8x16_t v367;
  int8x16_t v368;
  int8x16_t v369;
  int8x16_t v370;
  int8x16_t v371;
  int8x16_t v372;
  int8x16_t v373;
  int8x16_t v374;
  int8x16_t v375;
  int8x16_t v376;
  int8x16_t v377;
  int8x16_t v378;
  int8x16_t v379;
  int64x2_t v380;
  int64x2_t v381;
  int64x2_t v382;
  int64x2_t v383;
  int64x2_t v384;
  int64x2_t v385;
  int64x2_t v386;
  int64x2_t v387;
  int64x2_t v388;
  int64x2_t v389;
  int64x2_t v390;
  int64x2_t v391;
  int64x2_t v392;
  int64x2_t v393;
  int8x16_t *v394;
  int8x16_t *v395;
  int64x2_t v396;
  int64x2_t v397;
  unint64_t v398;
  unint64_t v399;
  unint64_t v400;
  unsigned __int8 v401;
  int16x8_t v402;
  int16x8_t v403;
  int16x8_t v404;
  int16x8_t v405;
  int16x8_t v406;
  int16x8_t v407;
  int16x8_t v408;
  int16x8_t v409;
  int16x8_t v410;
  int16x8_t v411;
  int16x8_t v412;
  int16x8_t v413;
  int8x16_t v414;
  int8x16_t v415;
  int8x16_t v416;
  int16x8_t v417;
  int16x8_t v418;
  int8x16_t v419;
  int16x8_t v420;
  int16x8_t v421;
  int16x8_t v422;
  int16x8_t v423;
  int8x16_t v424[4];
  uint64_t v425;
  uint64_t vars0;
  int8x16x4_t v427;
  int8x16x4_t v428;

  switch(a4)
  {
    case 0x7Fu:
      v8 = *(_OWORD *)(a3 + 16);
      v9 = *(_OWORD *)(a3 + 32);
      v10 = *(_OWORD *)(a3 + 48);
      v11 = *(_OWORD *)(a3 + 64);
      v12 = *(_OWORD *)(a3 + 80);
      v13 = *(_OWORD *)(a3 + 96);
      v14 = *(_OWORD *)(a3 + 112);
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *(_OWORD *)(a1 + 16) = v8;
      v15 = (_OWORD *)(a1 + a2);
      *(_OWORD *)(a1 + 32) = v11;
      *(_OWORD *)(a1 + 48) = v12;
      *v15 = v9;
      v15[1] = v10;
      v16 = (_OWORD *)(a1 + a2 + 32);
      *v16 = v13;
      v16[1] = v14;
      return 128;
    case 3u:
      v17 = vld1q_dup_f32((const float *)a3);
      *(float32x4_t *)a1 = v17;
      *(float32x4_t *)(a1 + 16) = v17;
      *(float32x4_t *)(a1 + 32) = v17;
      *(float32x4_t *)(a1 + 48) = v17;
      v18 = (float32x4_t *)(a1 + a2);
      *v18 = v17;
      v18[1] = v17;
      v18[2] = v17;
      v18[3] = v17;
      return 4;
    case 0u:
      result = 0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      v7 = (_OWORD *)(a1 + a2);
      v7[2] = 0u;
      v7[3] = 0u;
      *v7 = 0u;
      v7[1] = 0u;
      return result;
  }
  v401 = 0;
  v398 = 8 * (a3 & 7);
  v399 = a3 & 0xFFFFFFFFFFFFFFF8;
  v400 = v398 | 0x400;
  result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)14,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v419, (uint64_t)v424, (uint64_t)&v418, &v398, a4);
  v20.i64[0] = 0x3000300030003;
  v20.i64[1] = 0x3000300030003;
  v21 = v419;
  v22 = (int16x8_t)vandq_s8(v419, v20);
  v23 = vbicq_s8(v424[0], (int8x16_t)vceqq_s16(v22, (int16x8_t)v20));
  v424[0] = v23;
  v420 = (int16x8_t)v23;
  v421 = (int16x8_t)v23;
  v422 = (int16x8_t)v23;
  v423 = (int16x8_t)v23;
  v24.i64[0] = 0x202020202020202;
  v24.i64[1] = 0x202020202020202;
  v25 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v419.i8, (int16x4_t)0x4000400040004)), v24);
  v26 = v398;
  if (vmaxvq_s8(v25) < 1)
  {
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    v40.i64[0] = -1;
    v40.i64[1] = -1;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    v42.i64[0] = -1;
    v42.i64[1] = -1;
  }
  else
  {
    v27 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v25, v25));
    v28 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v27, (int16x8_t)v27));
    v29 = vpaddq_s32((int32x4_t)v28, (int32x4_t)v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    v31 = v30;
    v32 = vaddvq_s64(v30);
    v33 = v32;
    v34 = v398 + v32;
    if (v400) {
      v35 = v400 >= v34;
    }
    else {
      v35 = 1;
    }
    v36 = !v35;
    if (v32 <= 0x80 && v36 == 0)
    {
      v19.i64[0] = 63;
      v43 = (int64x2_t *)(v399 + 8 * (v398 >> 6));
      v44 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v398, v19).i64[0], 0), vzip1q_s64((int64x2_t)0, v31));
      v38 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v43, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v44)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v43->i64[0], 0), (uint64x2_t)vnegq_s64(v44)));
      if ((v398 & 0x3F) + v33 >= 0x81) {
        v38 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v43[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v44)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v43[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v44))), v38);
      }
      v398 = v34;
      v26 = v34;
    }
    else
    {
      v401 = 1;
      v38 = 0uLL;
    }
    v45 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v28, v28, 8uLL));
    v46.i64[0] = v45.u32[0];
    v46.i64[1] = v45.u32[1];
    v47 = (int64x2_t)vshlq_u64((uint64x2_t)v38, (uint64x2_t)vnegq_s64(v46));
    *(int32x2_t *)v38.i8 = vmovn_s64((int64x2_t)v38);
    *(int32x2_t *)v47.i8 = vmovn_s64(v47);
    v48 = (int16x8_t)vzip1q_s32((int32x4_t)v38, (int32x4_t)v47);
    v49 = (int16x8_t)vshlq_u32((uint32x4_t)v48, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v27, v27, 8uLL)))));
    *(int16x4_t *)v48.i8 = vmovn_s32((int32x4_t)v48);
    *(int16x4_t *)v49.i8 = vmovn_s32((int32x4_t)v49);
    v50 = (int8x16_t)vzip1q_s16(v48, v49);
    v51 = (int8x16_t)vshlq_u16((uint16x8_t)v50, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)))));
    *(int8x8_t *)v50.i8 = vmovn_s16((int16x8_t)v50);
    *(int8x8_t *)v51.i8 = vmovn_s16((int16x8_t)v51);
    v52 = vzip1q_s8(v50, v51);
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    v53 = vshlq_s8(v51, v25);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54 = (int32x4_t)vqtbl1q_s8(vandq_s8(v52, vaddq_s8(v53, v51)), (int8x16_t)xmmword_242EA7560);
    *(int32x2_t *)v52.i8 = vdup_lane_s32(*(int32x2_t *)v54.i8, 0);
    *(int32x2_t *)v51.i8 = vdup_lane_s32(*(int32x2_t *)v54.i8, 1);
    v55 = (int8x8_t)vdupq_laneq_s32(v54, 2).u64[0];
    v54.i64[0] = vdupq_laneq_s32(v54, 3).u64[0];
    v420 = vsubw_s8(v420, *(int8x8_t *)v52.i8);
    v421 = vsubw_s8(v421, *(int8x8_t *)v51.i8);
    v422 = vsubw_s8(v422, v55);
    v423 = vsubw_s8(v423, *(int8x8_t *)v54.i8);
    v42 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v52.i8));
    v41 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v51.i8));
    v40 = (int8x16_t)vmovl_s8(vceqz_s8(v55));
    v39 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v54.i8));
  }
  v56.i64[0] = 0x8000800080008;
  v56.i64[1] = 0x8000800080008;
  v57 = 0uLL;
  v58 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v419, v56), (int8x16_t)0, 8uLL), v23);
  v59 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v58, (int16x8_t)v58));
  v60 = vpaddq_s32((int32x4_t)v59, (int32x4_t)v59).u64[0];
  v61.i64[0] = v60;
  v61.i64[1] = HIDWORD(v60);
  v62 = v61;
  v63 = vaddvq_s64(v61);
  if (v400) {
    v64 = v400 >= v26 + v63;
  }
  else {
    v64 = 1;
  }
  v65 = !v64;
  if (v63 <= 0x80 && v65 == 0)
  {
    v67 = vaddq_s64(vdupq_n_s64(v26 & 0x3F), vzip1q_s64((int64x2_t)0, v62));
    v68 = (int64x2_t *)(v399 + 8 * (v26 >> 6));
    v57 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v68, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v67)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v68->i64[0], 0), (uint64x2_t)vnegq_s64(v67)));
    if ((v26 & 0x3F) + v63 >= 0x81) {
      v57 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v68[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v67)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v68[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v67))), v57);
    }
    v26 += v63;
  }
  else
  {
    v401 = 1;
  }
  v69 = vzip1_s32(*(int32x2_t *)v59.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL));
  v70.i64[0] = v69.u32[0];
  v70.i64[1] = v69.u32[1];
  v71 = (int64x2_t)vshlq_u64((uint64x2_t)v57, (uint64x2_t)vnegq_s64(v70));
  *(int32x2_t *)v57.i8 = vmovn_s64((int64x2_t)v57);
  *(int32x2_t *)v71.i8 = vmovn_s64(v71);
  v72 = (int16x8_t)vzip1q_s32((int32x4_t)v57, (int32x4_t)v71);
  v73 = (int16x8_t)vshlq_u32((uint32x4_t)v72, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v58.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL)))));
  *(int16x4_t *)v72.i8 = vmovn_s32((int32x4_t)v72);
  *(int16x4_t *)v73.i8 = vmovn_s32((int32x4_t)v73);
  v74 = vzip1q_s16(v72, v73);
  v73.i64[0] = 0xF000F000F000FLL;
  v73.i64[1] = 0xF000F000F000FLL;
  v75.i64[0] = 0x10001000100010;
  v75.i64[1] = 0x10001000100010;
  v76 = (int8x16_t)vshlq_s16(vshlq_s16(v74, vsubq_s16(v75, (int16x8_t)v58)), vaddq_s16((int16x8_t)v58, v73));
  v424[3] = v76;
  v77 = v419.i8[0] & 3;
  if (v77 == 2)
  {
    v78 = v26 + 8;
    if (v400)
    {
      if (v400 < v78)
      {
        v401 = 1;
LABEL_45:
        v401 = 1;
        goto LABEL_46;
      }
      v79 = v26 + 16;
      v26 += 8;
      if (v400 < v79) {
        goto LABEL_45;
      }
      v78 = v26;
    }
    v26 = v78 + 8;
  }
LABEL_46:
  v80 = 0uLL;
  v81 = vextq_s8((int8x16_t)0, (int8x16_t)v420, 8uLL);
  v82 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v81, (int16x8_t)v81));
  v83 = vpaddq_s32((int32x4_t)v82, (int32x4_t)v82).u64[0];
  v84.i64[0] = v83;
  v84.i64[1] = HIDWORD(v83);
  v85 = v84;
  v86 = vaddvq_s64(v84);
  v87 = v26 + v86;
  if (v400) {
    v88 = v400 >= v87;
  }
  else {
    v88 = 1;
  }
  v89 = !v88;
  if (v86 > 0x80 || v89)
  {
    v94 = 1;
    v92 = v399;
  }
  else
  {
    v90 = v26 & 0x3F;
    v91 = vaddq_s64(vdupq_n_s64(v90), vzip1q_s64((int64x2_t)0, v85));
    v92 = v399;
    v93 = (int64x2_t *)(v399 + 8 * (v26 >> 6));
    v80 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v93, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v93->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
    if (v90 + v86 >= 0x81) {
      v80 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v93[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v93[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), v80);
    }
    v94 = v401;
    v26 = v87;
  }
  v95 = vzip1_s32(*(int32x2_t *)v82.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v82, v82, 8uLL));
  v96.i64[0] = v95.u32[0];
  v96.i64[1] = v95.u32[1];
  v97 = (int64x2_t)vshlq_u64((uint64x2_t)v80, (uint64x2_t)vnegq_s64(v96));
  *(int32x2_t *)v80.i8 = vmovn_s64((int64x2_t)v80);
  *(int32x2_t *)v97.i8 = vmovn_s64(v97);
  v98 = (int16x8_t)vzip1q_s32((int32x4_t)v80, (int32x4_t)v97);
  v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v81.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)))));
  *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
  *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
  v100.i64[0] = 0xF000F000F000FLL;
  v100.i64[1] = 0xF000F000F000FLL;
  v101.i64[0] = 0x10001000100010;
  v101.i64[1] = 0x10001000100010;
  v102 = vshlq_s16(vshlq_s16(vzip1q_s16(v98, v99), vsubq_s16(v101, (int16x8_t)v81)), vaddq_s16((int16x8_t)v81, v100));
  v402 = v102;
  v103 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v420, v420));
  v98.i64[0] = vpaddq_s32((int32x4_t)v103, (int32x4_t)v103).u64[0];
  v96.i64[0] = v98.u32[0];
  v96.i64[1] = v98.u32[1];
  v104 = v96;
  v105 = vaddvq_s64(v96);
  v106 = v26 + v105;
  if (v400) {
    v107 = v400 >= v106;
  }
  else {
    v107 = 1;
  }
  v108 = !v107;
  v109 = 0uLL;
  if (v105 > 0x80 || (v108 & 1) != 0)
  {
    v94 = 1;
    v106 = v26;
    v113 = 0uLL;
  }
  else
  {
    v110 = v26 & 0x3F;
    v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v104));
    v112 = (int64x2_t *)(v92 + 8 * (v26 >> 6));
    v113 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v105 >= 0x81) {
      v113 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v113);
    }
  }
  v114 = vzip1_s32(*(int32x2_t *)v103.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v103, v103, 8uLL));
  v115.i64[0] = v114.u32[0];
  v115.i64[1] = v114.u32[1];
  v116 = (uint64x2_t)vnegq_s64(v115);
  v117 = (int64x2_t)vshlq_u64((uint64x2_t)v113, v116);
  *(int32x2_t *)v113.i8 = vmovn_s64((int64x2_t)v113);
  *(int32x2_t *)v117.i8 = vmovn_s64(v117);
  v118 = (int16x8_t)vzip1q_s32((int32x4_t)v113, (int32x4_t)v117);
  v119 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v420.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v420, (int8x16_t)v420, 8uLL))));
  v120 = (int16x8_t)vshlq_u32((uint32x4_t)v118, v119);
  *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v118);
  *(int16x4_t *)v120.i8 = vmovn_s32((int32x4_t)v120);
  v121 = vaddq_s16(v420, v100);
  v122 = vsubq_s16(v101, v420);
  v123 = vshlq_s16(vshlq_s16(vzip1q_s16(v118, v120), v122), v121);
  v403 = v123;
  v124 = v106 + v105;
  if (v400) {
    v125 = v400 >= v124;
  }
  else {
    v125 = 1;
  }
  v126 = !v125;
  if (v105 > 0x80 || (v126 & 1) != 0)
  {
    v94 = 1;
    v124 = v106;
  }
  else
  {
    v127 = v106 & 0x3F;
    v128 = vaddq_s64(vdupq_n_s64(v127), vzip1q_s64((int64x2_t)0, v104));
    v129 = (int64x2_t *)(v92 + 8 * (v106 >> 6));
    v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v129, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v128)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v129->i64[0], 0), (uint64x2_t)vnegq_s64(v128)));
    if (v127 + v105 >= 0x81) {
      v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v129[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v128)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v129[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v128))), v109);
    }
  }
  v130 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v116);
  *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
  *(int32x2_t *)v130.i8 = vmovn_s64(v130);
  v131 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v130);
  v132 = (int16x8_t)vshlq_u32((uint32x4_t)v131, v119);
  *(int16x4_t *)v131.i8 = vmovn_s32((int32x4_t)v131);
  *(int16x4_t *)v132.i8 = vmovn_s32((int32x4_t)v132);
  v133 = vshlq_s16(vshlq_s16(vzip1q_s16(v131, v132), v122), v121);
  v404 = v133;
  v134 = v124 + v105;
  if (v400) {
    v135 = v400 >= v134;
  }
  else {
    v135 = 1;
  }
  v136 = !v135;
  v137 = 0uLL;
  if (v105 > 0x80 || (v136 & 1) != 0)
  {
    v94 = 1;
    v134 = v124;
    v141 = 0uLL;
  }
  else
  {
    v138 = v124 & 0x3F;
    v139 = vaddq_s64(vdupq_n_s64(v138), vzip1q_s64((int64x2_t)0, v104));
    v140 = (int64x2_t *)(v92 + 8 * (v124 >> 6));
    v141 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
    if (v138 + v105 >= 0x81) {
      v141 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), v141);
    }
  }
  v142 = (int64x2_t)vshlq_u64((uint64x2_t)v141, v116);
  *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v141);
  *(int32x2_t *)v142.i8 = vmovn_s64(v142);
  v143 = (int16x8_t)vzip1q_s32((int32x4_t)v141, (int32x4_t)v142);
  v144 = (int16x8_t)vshlq_u32((uint32x4_t)v143, v119);
  *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
  *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
  v145 = vshlq_s16(vshlq_s16(vzip1q_s16(v143, v144), v122), v121);
  v405 = v145;
  v146 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v421, v421));
  v147 = vpaddq_s32((int32x4_t)v146, (int32x4_t)v146).u64[0];
  v148.i64[0] = v147;
  v148.i64[1] = HIDWORD(v147);
  v149 = v148;
  v150 = vaddvq_s64(v148);
  v151 = v150;
  v152 = v134 + v150;
  if (v400) {
    v153 = v400 >= v152;
  }
  else {
    v153 = 1;
  }
  v154 = !v153;
  if (v150 > 0x80 || (v154 & 1) != 0)
  {
    v94 = 1;
    v152 = v134;
  }
  else
  {
    v155 = v134 & 0x3F;
    v156 = vaddq_s64(vdupq_n_s64(v155), vzip1q_s64((int64x2_t)0, v149));
    v157 = (int64x2_t *)(v92 + 8 * (v134 >> 6));
    v137 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v157, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v156)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v157->i64[0], 0), (uint64x2_t)vnegq_s64(v156)));
    if (v155 + v151 >= 0x81) {
      v137 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v157[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v156)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v157[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v156))), v137);
    }
  }
  v158 = (int32x4_t)vextq_s8(v146, v146, 8uLL);
  v159 = vzip1_s32(*(int32x2_t *)v146.i8, *(int32x2_t *)v158.i8);
  v160.i64[0] = v159.u32[0];
  v160.i64[1] = v159.u32[1];
  v161 = (uint64x2_t)vnegq_s64(v160);
  v162 = (int64x2_t)vshlq_u64((uint64x2_t)v137, v161);
  *(int32x2_t *)v158.i8 = vmovn_s64((int64x2_t)v137);
  *(int32x2_t *)v162.i8 = vmovn_s64(v162);
  v163 = (int16x8_t)vzip1q_s32(v158, (int32x4_t)v162);
  v164 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v421.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v421, (int8x16_t)v421, 8uLL))));
  v165 = (int16x8_t)vshlq_u32((uint32x4_t)v163, v164);
  *(int16x4_t *)v163.i8 = vmovn_s32((int32x4_t)v163);
  *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
  v166 = vzip1q_s16(v163, v165);
  v165.i64[0] = 0xF000F000F000FLL;
  v165.i64[1] = 0xF000F000F000FLL;
  v167 = vaddq_s16(v421, v165);
  v165.i64[0] = 0x10001000100010;
  v165.i64[1] = 0x10001000100010;
  v168 = vsubq_s16(v165, v421);
  v169 = vshlq_s16(vshlq_s16(v166, v168), v167);
  v406 = v169;
  v170 = v152 + v151;
  if (v400) {
    v171 = v400 >= v170;
  }
  else {
    v171 = 1;
  }
  v172 = !v171;
  v173 = 0uLL;
  if (v151 > 0x80 || (v172 & 1) != 0)
  {
    v94 = 1;
    v170 = v152;
    v177 = 0uLL;
  }
  else
  {
    v174 = v152 & 0x3F;
    v175 = vaddq_s64(vdupq_n_s64(v174), vzip1q_s64((int64x2_t)0, v149));
    v176 = (int64x2_t *)(v92 + 8 * (v152 >> 6));
    v177 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v176, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176->i64[0], 0), (uint64x2_t)vnegq_s64(v175)));
    if (v174 + v151 >= 0x81) {
      v177 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v176[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v175))), v177);
    }
  }
  v178 = (int64x2_t)vshlq_u64((uint64x2_t)v177, v161);
  *(int32x2_t *)v177.i8 = vmovn_s64((int64x2_t)v177);
  *(int32x2_t *)v178.i8 = vmovn_s64(v178);
  v179 = (int16x8_t)vzip1q_s32((int32x4_t)v177, (int32x4_t)v178);
  v180 = (int16x8_t)vshlq_u32((uint32x4_t)v179, v164);
  *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v179);
  *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
  v181 = vshlq_s16(vshlq_s16(vzip1q_s16(v179, v180), v168), v167);
  v407 = v181;
  v182 = v170 + v151;
  if (v400) {
    v183 = v400 >= v182;
  }
  else {
    v183 = 1;
  }
  v184 = !v183;
  if (v151 > 0x80 || (v184 & 1) != 0)
  {
    v94 = 1;
    v182 = v170;
  }
  else
  {
    v185 = v170 & 0x3F;
    v186 = vaddq_s64(vdupq_n_s64(v185), vzip1q_s64((int64x2_t)0, v149));
    v187 = (int64x2_t *)(v92 + 8 * (v170 >> 6));
    v173 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v187, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v186)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v187->i64[0], 0), (uint64x2_t)vnegq_s64(v186)));
    if (v185 + v151 >= 0x81) {
      v173 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v187[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v186)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v187[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v186))), v173);
    }
  }
  v188 = (int64x2_t)vshlq_u64((uint64x2_t)v173, v161);
  *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v173);
  *(int32x2_t *)v188.i8 = vmovn_s64(v188);
  v189 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v188);
  v190 = (int16x8_t)vshlq_u32((uint32x4_t)v189, v164);
  *(int16x4_t *)v189.i8 = vmovn_s32((int32x4_t)v189);
  *(int16x4_t *)v190.i8 = vmovn_s32((int32x4_t)v190);
  v191 = vshlq_s16(vshlq_s16(vzip1q_s16(v189, v190), v168), v167);
  v408 = v191;
  v192 = v182 + v151;
  if (v400) {
    v193 = v400 >= v192;
  }
  else {
    v193 = 1;
  }
  v194 = !v193;
  v195 = 0uLL;
  if (v151 > 0x80 || (v194 & 1) != 0)
  {
    v94 = 1;
    v192 = v182;
    v199 = 0uLL;
  }
  else
  {
    v196 = v182 & 0x3F;
    v197 = vaddq_s64(vdupq_n_s64(v196), vzip1q_s64((int64x2_t)0, v149));
    v198 = (int64x2_t *)(v92 + 8 * (v182 >> 6));
    v199 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v198, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v197)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v198->i64[0], 0), (uint64x2_t)vnegq_s64(v197)));
    if (v196 + v151 >= 0x81) {
      v199 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v198[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v197)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v198[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v197))), v199);
    }
  }
  v200 = (int64x2_t)vshlq_u64((uint64x2_t)v199, v161);
  *(int32x2_t *)v199.i8 = vmovn_s64((int64x2_t)v199);
  *(int32x2_t *)v200.i8 = vmovn_s64(v200);
  v201 = (int16x8_t)vzip1q_s32((int32x4_t)v199, (int32x4_t)v200);
  v202 = (int16x8_t)vshlq_u32((uint32x4_t)v201, v164);
  *(int16x4_t *)v201.i8 = vmovn_s32((int32x4_t)v201);
  *(int16x4_t *)v202.i8 = vmovn_s32((int32x4_t)v202);
  v203 = vshlq_s16(vshlq_s16(vzip1q_s16(v201, v202), v168), v167);
  v409 = v203;
  v204 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v422, v422));
  v205 = vpaddq_s32((int32x4_t)v204, (int32x4_t)v204).u64[0];
  v206.i64[0] = v205;
  v206.i64[1] = HIDWORD(v205);
  v207 = v206;
  v208 = vaddvq_s64(v206);
  v209 = v208;
  v210 = v192 + v208;
  if (v400) {
    v211 = v400 >= v210;
  }
  else {
    v211 = 1;
  }
  v212 = !v211;
  if (v208 > 0x80 || (v212 & 1) != 0)
  {
    v94 = 1;
    v210 = v192;
  }
  else
  {
    v213 = v192 & 0x3F;
    v214 = vaddq_s64(vdupq_n_s64(v213), vzip1q_s64((int64x2_t)0, v207));
    v215 = (int64x2_t *)(v92 + 8 * (v192 >> 6));
    v195 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v215, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215->i64[0], 0), (uint64x2_t)vnegq_s64(v214)));
    if (v213 + v209 >= 0x81) {
      v195 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v215[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v214))), v195);
    }
  }
  v216 = (int32x4_t)vextq_s8(v204, v204, 8uLL);
  v217 = vzip1_s32(*(int32x2_t *)v204.i8, *(int32x2_t *)v216.i8);
  v218.i64[0] = v217.u32[0];
  v218.i64[1] = v217.u32[1];
  v219 = (uint64x2_t)vnegq_s64(v218);
  v220 = (int64x2_t)vshlq_u64((uint64x2_t)v195, v219);
  *(int32x2_t *)v216.i8 = vmovn_s64((int64x2_t)v195);
  *(int32x2_t *)v220.i8 = vmovn_s64(v220);
  v221 = (int16x8_t)vzip1q_s32(v216, (int32x4_t)v220);
  v222 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v422.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v422, (int8x16_t)v422, 8uLL))));
  v223 = (int16x8_t)vshlq_u32((uint32x4_t)v221, v222);
  *(int16x4_t *)v221.i8 = vmovn_s32((int32x4_t)v221);
  *(int16x4_t *)v223.i8 = vmovn_s32((int32x4_t)v223);
  v224 = vzip1q_s16(v221, v223);
  v223.i64[0] = 0xF000F000F000FLL;
  v223.i64[1] = 0xF000F000F000FLL;
  v225 = vaddq_s16(v422, v223);
  v223.i64[0] = 0x10001000100010;
  v223.i64[1] = 0x10001000100010;
  v226 = vsubq_s16(v223, v422);
  v227 = vshlq_s16(vshlq_s16(v224, v226), v225);
  v410 = v227;
  v228 = v210 + v209;
  if (v400) {
    v229 = v400 >= v228;
  }
  else {
    v229 = 1;
  }
  v230 = !v229;
  v231 = 0uLL;
  if (v209 > 0x80 || (v230 & 1) != 0)
  {
    v94 = 1;
    v228 = v210;
    v235 = 0uLL;
  }
  else
  {
    v232 = v210 & 0x3F;
    v233 = vaddq_s64(vdupq_n_s64(v232), vzip1q_s64((int64x2_t)0, v207));
    v234 = (int64x2_t *)(v92 + 8 * (v210 >> 6));
    v235 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v234, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v233)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v234->i64[0], 0), (uint64x2_t)vnegq_s64(v233)));
    if (v232 + v209 >= 0x81) {
      v235 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v234[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v233)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v234[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v233))), v235);
    }
  }
  v236 = (int64x2_t)vshlq_u64((uint64x2_t)v235, v219);
  *(int32x2_t *)v235.i8 = vmovn_s64((int64x2_t)v235);
  *(int32x2_t *)v236.i8 = vmovn_s64(v236);
  v237 = (int16x8_t)vzip1q_s32((int32x4_t)v235, (int32x4_t)v236);
  v238 = (int16x8_t)vshlq_u32((uint32x4_t)v237, v222);
  *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v237);
  *(int16x4_t *)v238.i8 = vmovn_s32((int32x4_t)v238);
  v239 = vshlq_s16(vshlq_s16(vzip1q_s16(v237, v238), v226), v225);
  v411 = v239;
  v240 = v228 + v209;
  if (v400) {
    v241 = v400 >= v240;
  }
  else {
    v241 = 1;
  }
  v242 = !v241;
  if (v209 > 0x80 || (v242 & 1) != 0)
  {
    v94 = 1;
    v240 = v228;
  }
  else
  {
    v243 = v228 & 0x3F;
    v244 = vaddq_s64(vdupq_n_s64(v243), vzip1q_s64((int64x2_t)0, v207));
    v245 = (int64x2_t *)(v92 + 8 * (v228 >> 6));
    v231 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v245, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v244)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v245->i64[0], 0), (uint64x2_t)vnegq_s64(v244)));
    if (v243 + v209 >= 0x81) {
      v231 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v245[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v244)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v245[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v244))), v231);
    }
  }
  v246 = (int64x2_t)vshlq_u64((uint64x2_t)v231, v219);
  *(int32x2_t *)v231.i8 = vmovn_s64((int64x2_t)v231);
  *(int32x2_t *)v246.i8 = vmovn_s64(v246);
  v247 = (int16x8_t)vzip1q_s32((int32x4_t)v231, (int32x4_t)v246);
  v248 = (int16x8_t)vshlq_u32((uint32x4_t)v247, v222);
  *(int16x4_t *)v247.i8 = vmovn_s32((int32x4_t)v247);
  *(int16x4_t *)v248.i8 = vmovn_s32((int32x4_t)v248);
  v249 = vshlq_s16(vshlq_s16(vzip1q_s16(v247, v248), v226), v225);
  v412 = v249;
  v250 = v240 + v209;
  if (v400) {
    v251 = v400 >= v250;
  }
  else {
    v251 = 1;
  }
  v252 = !v251;
  v253 = 0uLL;
  if (v209 > 0x80 || (v252 & 1) != 0)
  {
    v94 = 1;
    v250 = v240;
    v257 = 0uLL;
  }
  else
  {
    v254 = v240 & 0x3F;
    v255 = vaddq_s64(vdupq_n_s64(v254), vzip1q_s64((int64x2_t)0, v207));
    v256 = (int64x2_t *)(v92 + 8 * (v240 >> 6));
    v257 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v256, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256->i64[0], 0), (uint64x2_t)vnegq_s64(v255)));
    if (v254 + v209 >= 0x81) {
      v257 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v256[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v255))), v257);
    }
  }
  v258 = (int64x2_t)vshlq_u64((uint64x2_t)v257, v219);
  *(int32x2_t *)v257.i8 = vmovn_s64((int64x2_t)v257);
  *(int32x2_t *)v258.i8 = vmovn_s64(v258);
  v259 = (int16x8_t)vzip1q_s32((int32x4_t)v257, (int32x4_t)v258);
  v260 = (int16x8_t)vshlq_u32((uint32x4_t)v259, v222);
  *(int16x4_t *)v259.i8 = vmovn_s32((int32x4_t)v259);
  *(int16x4_t *)v260.i8 = vmovn_s32((int32x4_t)v260);
  v261 = vshlq_s16(vshlq_s16(vzip1q_s16(v259, v260), v226), v225);
  v413 = v261;
  v262 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v423, v423));
  v263 = vpaddq_s32((int32x4_t)v262, (int32x4_t)v262).u64[0];
  v264.i64[0] = v263;
  v264.i64[1] = HIDWORD(v263);
  v265 = v264;
  v266 = vaddvq_s64(v264);
  v267 = v266;
  v268 = v250 + v266;
  if (v400) {
    v269 = v400 >= v268;
  }
  else {
    v269 = 1;
  }
  v270 = !v269;
  if (v266 > 0x80 || (v270 & 1) != 0)
  {
    v94 = 1;
    v268 = v250;
  }
  else
  {
    v271 = v250 & 0x3F;
    v272 = vaddq_s64(vdupq_n_s64(v271), vzip1q_s64((int64x2_t)0, v265));
    v273 = (int64x2_t *)(v92 + 8 * (v250 >> 6));
    v253 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v273, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v272)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v273->i64[0], 0), (uint64x2_t)vnegq_s64(v272)));
    if (v271 + v267 >= 0x81) {
      v253 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v273[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v272)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v273[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v272))), v253);
    }
  }
  v274 = vzip1_s32(*(int32x2_t *)v262.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL));
  v275.i64[0] = v274.u32[0];
  v275.i64[1] = v274.u32[1];
  v276 = (int32x4_t)vnegq_s64(v275);
  v277 = (int64x2_t)vshlq_u64((uint64x2_t)v253, (uint64x2_t)v276);
  *(int32x2_t *)v253.i8 = vmovn_s64((int64x2_t)v253);
  *(int32x2_t *)v277.i8 = vmovn_s64(v277);
  v278 = (int16x8_t)vzip1q_s32((int32x4_t)v253, (int32x4_t)v277);
  v279 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v423.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v423, (int8x16_t)v423, 8uLL))));
  v280 = (int16x8_t)vshlq_u32((uint32x4_t)v278, v279);
  *(int16x4_t *)v278.i8 = vmovn_s32((int32x4_t)v278);
  *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
  v281 = vzip1q_s16(v278, v280);
  v278.i64[0] = 0xF000F000F000FLL;
  v278.i64[1] = 0xF000F000F000FLL;
  v282 = vaddq_s16(v423, v278);
  v280.i64[0] = 0x10001000100010;
  v280.i64[1] = 0x10001000100010;
  v283 = vsubq_s16(v280, v423);
  v284 = vshlq_s16(vshlq_s16(v281, v283), v282);
  v414 = (int8x16_t)v284;
  v285 = v268 + v267;
  if (v400) {
    v286 = v400 >= v285;
  }
  else {
    v286 = 1;
  }
  v287 = !v286;
  v288 = 0uLL;
  if (v267 > 0x80 || (v287 & 1) != 0)
  {
    v94 = 1;
    v285 = v268;
    v292 = 0uLL;
  }
  else
  {
    v289 = v268 & 0x3F;
    v290 = vaddq_s64(vdupq_n_s64(v289), vzip1q_s64((int64x2_t)0, v265));
    v291 = (int64x2_t *)(v92 + 8 * (v268 >> 6));
    v292 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v291, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v290)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v291->i64[0], 0), (uint64x2_t)vnegq_s64(v290)));
    if (v289 + v267 >= 0x81) {
      v292 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v291[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v290)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v291[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v290))), v292);
    }
  }
  v293 = (int64x2_t)vshlq_u64((uint64x2_t)v292, (uint64x2_t)v276);
  *(int32x2_t *)v292.i8 = vmovn_s64((int64x2_t)v292);
  *(int32x2_t *)v293.i8 = vmovn_s64(v293);
  v294 = (int16x8_t)vzip1q_s32((int32x4_t)v292, (int32x4_t)v293);
  v295 = (int16x8_t)vshlq_u32((uint32x4_t)v294, v279);
  *(int16x4_t *)v294.i8 = vmovn_s32((int32x4_t)v294);
  *(int16x4_t *)v295.i8 = vmovn_s32((int32x4_t)v295);
  v296 = vshlq_s16(vshlq_s16(vzip1q_s16(v294, v295), v283), v282);
  v415 = (int8x16_t)v296;
  v297 = v285 + v267;
  if (v400) {
    v298 = v400 >= v297;
  }
  else {
    v298 = 1;
  }
  v299 = !v298;
  if (v267 > 0x80 || (v299 & 1) != 0)
  {
    v94 = 1;
    v297 = v285;
  }
  else
  {
    v300 = v285 & 0x3F;
    v301 = vaddq_s64(vdupq_n_s64(v300), vzip1q_s64((int64x2_t)0, v265));
    v302 = (int64x2_t *)(v92 + 8 * (v285 >> 6));
    v288 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v302, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v301)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v302->i64[0], 0), (uint64x2_t)vnegq_s64(v301)));
    if (v300 + v267 >= 0x81) {
      v288 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v302[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v301)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v302[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v301))), v288);
    }
  }
  v303 = (int64x2_t)vshlq_u64((uint64x2_t)v288, (uint64x2_t)v276);
  *(int32x2_t *)v288.i8 = vmovn_s64((int64x2_t)v288);
  *(int32x2_t *)v303.i8 = vmovn_s64(v303);
  v304 = (int16x8_t)vzip1q_s32((int32x4_t)v288, (int32x4_t)v303);
  v305 = (int16x8_t)vshlq_u32((uint32x4_t)v304, v279);
  *(int16x4_t *)v304.i8 = vmovn_s32((int32x4_t)v304);
  *(int16x4_t *)v305.i8 = vmovn_s32((int32x4_t)v305);
  v306 = vshlq_s16(vshlq_s16(vzip1q_s16(v304, v305), v283), v282);
  v416 = (int8x16_t)v306;
  v307 = v297 + v267;
  if (v400) {
    v308 = v400 >= v307;
  }
  else {
    v308 = 1;
  }
  v309 = !v308;
  v310 = 0uLL;
  if (v267 > 0x80 || (v309 & 1) != 0)
  {
    v94 = 1;
    v307 = v297;
  }
  else
  {
    v311 = vaddq_s64(vdupq_n_s64(v297 & 0x3F), vzip1q_s64((int64x2_t)0, v265));
    v312 = (int64x2_t *)(v92 + 8 * (v297 >> 6));
    v310 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v312, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v311)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v312->i64[0], 0), (uint64x2_t)vnegq_s64(v311)));
    if ((v297 & 0x3F) + v267 >= 0x81) {
      v310 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v312[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v311)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v312[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v311))), v310);
    }
  }
  v313 = (int64x2_t)vshlq_u64((uint64x2_t)v310, (uint64x2_t)v276);
  *(int32x2_t *)v276.i8 = vmovn_s64((int64x2_t)v310);
  *(int32x2_t *)v313.i8 = vmovn_s64(v313);
  v314 = (int16x8_t)vzip1q_s32(v276, (int32x4_t)v313);
  v315 = (int16x8_t)vshlq_u32((uint32x4_t)v314, v279);
  *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
  *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
  v316 = vshlq_s16(vshlq_s16(vzip1q_s16(v314, v315), v283), v282);
  v417 = v316;
  if (v94 || v400 + 8 * result - v307 - 1024 >= 9 || v77 == 2)
  {
    v317 = (8 * (&vars0 - 100)) & 0x20;
    v318 = v425 | (511 << v317);
    v425 = v318;
    v319 = (32 * ((((unint64_t)&v425 + 4) >> 2) & 1)) | 9;
    v320 = v319 - v317 + 9;
    v321 = (32 * ((((unint64_t)&v425 + 4) >> 2) & 1)) | 0x12;
    if (v319 - v317 > 0x17)
    {
      v322 = v319 - v317;
    }
    else
    {
      v320 = (v321 - v317) | 9;
      v322 = v321 - v317;
    }
    if (v319 - v317 <= 0x17) {
      LOBYTE(v323) = (32 * ((((unint64_t)&v425 + 4) & 4) != 0)) | 0x12;
    }
    else {
      LOBYTE(v323) = (32 * ((((unint64_t)&v425 + 4) & 4) != 0)) | 9;
    }
    if (v320 <= 0x20)
    {
      v318 |= 511 << v323;
      v425 = v318;
      v323 = ((_BYTE)v323 + 9) & 0x3F;
      v322 = v323 - v317;
    }
    if (v322 - 28 >= 0xFFFFFFFFFFFFFFDFLL) {
      v425 = v318 | (31 << v323);
    }
    result = 0;
    v324 = (void *)(a1 + a2);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *v324 = 0;
    v324[1] = 0;
  }
  else
  {
    v325 = vaddq_s16((int16x8_t)vandq_s8(v76, v42), v102);
    v326 = (int8x16_t)vdupq_lane_s64(v76.i64[0], 0);
    v327 = (int16x8_t)vandq_s8(v42, v326);
    v328 = vsubq_s16(v123, v327);
    v329 = vsubq_s16(v133, v327);
    v330 = (int16x8_t)vandq_s8(v41, v326);
    v331 = vsubq_s16(v169, v330);
    v332 = vsubq_s16(v181, v330);
    v333 = (int8x16_t)vsubq_s16(v145, v327);
    v334 = (int8x16_t)vsubq_s16(v325, v327);
    v335 = vsubq_s16(v191, v330);
    v336 = vsubq_s16(v203, v330);
    v337 = (int16x8_t)vandq_s8(v40, v326);
    v338 = vsubq_s16(v227, v337);
    v339 = vsubq_s16(v239, v337);
    v340 = vsubq_s16(v249, v337);
    v341 = vsubq_s16(v261, v337);
    v342 = (int16x8_t)vandq_s8(v39, v326);
    v343 = vsubq_s16(v284, v342);
    v402 = v325;
    v344 = vsubq_s16(v296, v342);
    v345 = vsubq_s16(v306, v342);
    v414 = (int8x16_t)v343;
    v415 = (int8x16_t)v344;
    v346 = vsubq_s16(v316, v342);
    v416 = (int8x16_t)v345;
    v417 = v346;
    v347.i64[0] = 0x1000100010001;
    v347.i64[1] = 0x1000100010001;
    if (vaddvq_s16(vceqq_s16(v22, (int16x8_t)v347)))
    {
      v348 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v419, v347));
      v349.i64[1] = v334.i64[1];
      v349.i64[0] = v333.i64[1];
      v350.i64[0] = v333.i64[0];
      v350.i64[1] = v334.i64[0];
      v351 = (int16x8_t)vbslq_s8(v348, v349, v334);
      v352 = (int16x8_t)vbslq_s8(v348, v350, v333);
      v353.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v353.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v354 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v328 - 1), v353), v348);
      v428.val[0] = (int8x16_t)vaddq_s16(v351, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v328 - 1), (int8x16_t)xmmword_242EA7710), v348));
      v428.val[1] = (int8x16_t)vaddq_s16(v328, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v328 - 1), (int8x16_t)xmmword_242EA7720), v348));
      v428.val[2] = (int8x16_t)vaddq_s16(v329, v354);
      v428.val[3] = (int8x16_t)vaddq_s16(v352, v354);
      v355 = (int16x8_t)vandq_s8(vqtbl4q_s8(v428, v353), v348);
      v334 = (int8x16_t)vaddq_s16((int16x8_t)v428.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v428, (int8x16_t)xmmword_242EA7730), v348));
      v328 = vaddq_s16((int16x8_t)v428.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v428, (int8x16_t)xmmword_242EA7740), v348));
      v402 = (int16x8_t)v334;
      v403 = v328;
      v329 = vaddq_s16((int16x8_t)v428.val[2], v355);
      v333 = (int8x16_t)vaddq_s16((int16x8_t)v428.val[3], v355);
      v427.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v331.i8, (int8x16_t)xmmword_242EA7710), v348), v331);
      v427.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v331.i8, (int8x16_t)xmmword_242EA7750), v348), v332);
      v427.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v331.i8, v353), v348), v335);
      v427.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v331.i8, (int8x16_t)xmmword_242EA7760), v348), v336);
      v356 = (int16x8_t)vandq_s8(vqtbl4q_s8(v427, (int8x16_t)xmmword_242EA7730), v348);
      v357 = (int16x8_t)vandq_s8(vqtbl4q_s8(v427, v353), v348);
      v331 = vaddq_s16(v356, (int16x8_t)v427.val[0]);
      v332 = vaddq_s16((int16x8_t)v427.val[1], v356);
      v335 = vaddq_s16((int16x8_t)v427.val[2], v357);
      v336 = vaddq_s16((int16x8_t)v427.val[3], v357);
      v427.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v338.i8, (int8x16_t)xmmword_242EA74D0), v348), v338);
      v427.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v338.i8, (int8x16_t)xmmword_242EA75A0), v348), v339);
      v427.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v338.i8, (int8x16_t)xmmword_242EA7710), v348), v340);
      v427.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v338.i8, (int8x16_t)xmmword_242EA7720), v348), v341);
      v358 = (int16x8_t)vandq_s8(vqtbl4q_s8(v427, v353), v348);
      v338 = vaddq_s16((int16x8_t)v427.val[0], v358);
      v339 = vaddq_s16((int16x8_t)v427.val[1], v358);
      v340 = vaddq_s16((int16x8_t)v427.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v427, (int8x16_t)xmmword_242EA75D0), v348));
      v341 = vaddq_s16((int16x8_t)v427.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v427, (int8x16_t)xmmword_242EA7770), v348));
      v428.val[1] = v414;
      v428.val[2] = v415;
      v21 = v419;
      v428.val[3] = v416;
      v359 = v417;
      v427.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v428 + 16), (int8x16_t)xmmword_242EA74D0), v348), (int16x8_t)v414);
      v427.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v428 + 16), (int8x16_t)xmmword_242EA7780), v348), (int16x8_t)v415);
      v404 = v329;
      v405 = (int16x8_t)v333;
      v427.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v428 + 16), (int8x16_t)xmmword_242EA7710), v348), (int16x8_t)v416);
      v360 = vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v428 + 16), (int8x16_t)xmmword_242EA7720), v348), v417);
      v361 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v427 + 16), v353), v348);
      v343 = vaddq_s16((int16x8_t)v427.val[1], v361);
      v344 = vaddq_s16((int16x8_t)v427.val[2], v361);
      v345 = vaddq_s16((int16x8_t)v427.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v427 + 16), (int8x16_t)xmmword_242EA75D0), v348));
      v346 = vaddq_s16(v360, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v427 + 16), (int8x16_t)xmmword_242EA7790), v348));
    }
    v362 = (int8x16_t)vaddq_s16(v418, (int16x8_t)v334);
    v363 = (int8x16_t)vaddq_s16(v328, v418);
    v364 = (int8x16_t)vaddq_s16(v329, v418);
    v365 = (int8x16_t)vaddq_s16((int16x8_t)v333, v418);
    v366 = (int8x16_t)vaddq_s16(v331, v418);
    v367 = (int8x16_t)vaddq_s16(v332, v418);
    v368 = (int8x16_t)vaddq_s16(v335, v418);
    v369 = (int8x16_t)vaddq_s16(v336, v418);
    v370 = (int8x16_t)vaddq_s16(v338, v418);
    v371 = (int8x16_t)vaddq_s16(v339, v418);
    v372 = (int8x16_t)vaddq_s16(v340, v418);
    v373 = (int8x16_t)vaddq_s16(v341, v418);
    v374 = (int8x16_t)vaddq_s16(v343, v418);
    v375 = (int8x16_t)vaddq_s16(v344, v418);
    v376 = (int8x16_t)vaddq_s16(v345, v418);
    v377 = (int8x16_t)vaddq_s16(v346, v418);
    v378.i64[0] = 0x10001000100010;
    v378.i64[1] = 0x10001000100010;
    v379 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v21, v378));
    v380 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v362, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v362);
    v381 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v363, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v363);
    v382 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v364, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v364);
    v383 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v365, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v365);
    v384 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v366, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v366);
    v385 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v367, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v367);
    v386 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v368, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v368);
    v387 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v369, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v369);
    v388 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v370, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v370);
    v389 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v371, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v371);
    v390 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v372, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v372);
    v391 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v373, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v373);
    v392 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v374, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v374);
    v393 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v375, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v375);
    v373.i64[0] = 0xF8000000F8000000;
    v373.i64[1] = 0xF8000000F8000000;
    v394 = (int8x16_t *)(a1 + 32);
    *(int8x16_t *)a1 = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v380, 0x15uLL), v381, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v380, 0xEuLL), v381, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v380, 7uLL), v381, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v380, (int32x4_t)v381))));
    *(int8x16_t *)(a1 + 16) = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v382, 0x15uLL), v383, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v382, 0xEuLL), v383, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v382, 7uLL), v383, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v382, (int32x4_t)v383))));
    v395 = (int8x16_t *)(a1 + a2);
    v396 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v376, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v376);
    v397 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v377, (int8x16_t)xmmword_242EA7910), v379), (int16x8_t)v377);
    *v394 = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v388, 0x15uLL), v389, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v388, 0xEuLL), v389, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v388, 7uLL), v389, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v388, (int32x4_t)v389))));
    v394[1] = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v390, 0x15uLL), v391, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v390, 0xEuLL), v391, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v390, 7uLL), v391, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v390, (int32x4_t)v391))));
    *v395 = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v384, 0x15uLL), v385, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v384, 0xEuLL), v385, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v384, 7uLL), v385, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v384, (int32x4_t)v385))));
    v395[1] = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v386, 0x15uLL), v387, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v386, 0xEuLL), v387, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v386, 7uLL), v387, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v386, (int32x4_t)v387))));
    v395 += 2;
    *v395 = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v392, 0x15uLL), v393, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v392, 0xEuLL), v393, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v392, 7uLL), v393, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v392, (int32x4_t)v393))));
    v395[1] = vbslq_s8(v373, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v396, 0x15uLL), v397, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A40, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v396, 0xEuLL), v397, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A30, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v396, 7uLL), v397, 7uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v396, (int32x4_t)v397))));
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1, 128, a2, *a3);
  uint64_t v6 = v5
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 256, 128, v5, a3[1]);
  uint64_t v7 = v6
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 64, 128, v6, a3[2]);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 320, 128, v7, a3[3]);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 512, 128, v8, a3[4]);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 768, 128, v9, a3[5]);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 576, 128, v10, a3[6]);
  unsigned int v12 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 832, 128, v11, v12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(unint64_t a1, char *a2, uint32x4_t *a3, uint64_t a4, unsigned int a5)
{
  uint32x4_t v5 = a3[1];
  int16x8_t v6 = (int16x8_t)a3[2];
  uint32x4_t v7 = a3[3];
  int16x8_t v8 = *(int16x8_t *)((char *)a3 + a4);
  uint32x4_t v9 = *(uint32x4_t *)((char *)&a3[1] + a4);
  uint32x4_t v10 = *(uint32x4_t *)((char *)&a3[2] + a4);
  uint32x4_t v11 = *(uint32x4_t *)((char *)&a3[3] + a4);
  v12.i64[0] = a3->u32[0];
  v12.i64[1] = HIDWORD(a3->i64[0]);
  int8x16_t v13 = v12;
  v12.i64[0] = a3->i64[1];
  v12.i64[1] = HIDWORD(*(unsigned long long *)a3);
  int8x16_t v14 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v13, (int8x16_t)0);
  int8x16_t v15 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0);
  v12.i64[0] = v5.u32[0];
  v12.i64[1] = v5.u32[1];
  int8x16_t v16 = v12;
  v12.i64[0] = v5.u32[2];
  v12.i64[1] = v5.u32[3];
  int16x8_t v17 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)a3->i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)a3->i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)a3->i8, 7uLL), v14)));
  int16x8_t v18 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32(*a3, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32(*a3, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32(*a3, 7uLL), v15)));
  uint32x4_t v477 = *a3;
  uint32x4_t v478 = v5;
  int16x8_t v19 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v5.i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v5.i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v5.i8, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v16, (int8x16_t)0))));
  int16x8_t v20 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32(v5, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32(v5, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32(v5, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0))));
  v12.i64[0] = v8.u32[0];
  v12.i64[1] = v8.u32[1];
  int8x16_t v21 = v12;
  v12.i64[0] = v8.u32[2];
  v12.i64[1] = v8.u32[3];
  int8x16_t v22 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v21, (int8x16_t)0);
  int8x16_t v23 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0);
  v12.i64[0] = v9.u32[0];
  v12.i64[1] = v9.u32[1];
  int8x16_t v24 = v12;
  v12.i64[0] = v9.u32[2];
  v12.i64[1] = v9.u32[3];
  int16x8_t v25 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v8.i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v8.i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v8.i8, 7uLL), v22)));
  int16x8_t v26 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32((uint32x4_t)v8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32((uint32x4_t)v8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32((uint32x4_t)v8, 7uLL), v23)));
  int16x8_t v475 = v8;
  uint32x4_t v476 = v9;
  int16x8_t v27 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v9.i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v9.i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v9.i8, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v24, (int8x16_t)0))));
  int16x8_t v28 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32(v9, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32(v9, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32(v9, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0))));
  v12.i64[0] = v6.u32[0];
  v12.i64[1] = v6.u32[1];
  int8x16_t v29 = v12;
  v12.i64[0] = v6.u32[2];
  v12.i64[1] = v6.u32[3];
  int8x16_t v30 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v29, (int8x16_t)0);
  int8x16_t v31 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0);
  v12.i64[0] = v7.u32[0];
  v12.i64[1] = v7.u32[1];
  int8x16_t v32 = v12;
  v12.i64[0] = v7.u32[2];
  v12.i64[1] = v7.u32[3];
  int16x8_t v33 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v6.i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v6.i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v6.i8, 7uLL), v30)));
  int16x8_t v34 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32((uint32x4_t)v6, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32((uint32x4_t)v6, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32((uint32x4_t)v6, 7uLL), v31)));
  int16x8_t v479 = v6;
  uint32x4_t v480 = v7;
  int16x8_t v35 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v7.i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v7.i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v7.i8, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v32, (int8x16_t)0))));
  int16x8_t v36 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32(v7, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32(v7, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32(v7, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0))));
  v12.i64[0] = v10.u32[0];
  v12.i64[1] = v10.u32[1];
  int8x16_t v37 = v12;
  v12.i64[0] = v10.u32[2];
  v12.i64[1] = v10.u32[3];
  int8x16_t v38 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v37, (int8x16_t)0);
  int8x16_t v39 = vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0);
  v12.i64[0] = v11.u32[0];
  v12.i64[1] = v11.u32[1];
  int8x16_t v40 = v12;
  v12.i64[0] = v11.u32[2];
  v12.i64[1] = v11.u32[3];
  int16x8_t v41 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v10.i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v10.i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v10.i8, 7uLL), v38)));
  int16x8_t v42 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32(v10, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32(v10, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32(v10, 7uLL), v39)));
  int16x8_t v43 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v40, (int8x16_t)0))));
  int16x8_t v44 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7A80, (int8x16_t)vshll_high_n_u32(v11, 0x15uLL), vbslq_s8((int8x16_t)xmmword_242EA7A70, (int8x16_t)vshll_high_n_u32(v11, 0xEuLL), vbslq_s8((int8x16_t)xmmword_242EA7A60, (int8x16_t)vshll_high_n_u32(v11, 7uLL), vbslq_s8((int8x16_t)xmmword_242EA7A50, v12, (int8x16_t)0))));
  int16x8_t v45 = (int16x8_t)vdupq_lane_s64(v17.i64[0], 0);
  int8x16_t v488 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v17, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int8x16_t v489 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v18, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v484 = v17;
  int16x8_t v485 = v18;
  int16x8_t v486 = v19;
  int8x16_t v487 = (int8x16_t)v20;
  int16x8_t v46 = vshlq_s16(vshlq_s16(vsubq_s16(v19, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v47 = vminq_s16(vminq_s16((int16x8_t)v488, (int16x8_t)v489), v46);
  int8x16_t v490 = (int8x16_t)v46;
  int8x16_t v491 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v20, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v48 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v488, (int16x8_t)v489), v46), (int16x8_t)v491), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v49 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v47, (int16x8_t)v491), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v50 = vpmaxq_s16(v48, v48);
  int16x8_t v51 = vpminq_s16(v49, v49);
  int16x8_t v52 = vzip1q_s16(v50, v51);
  v20.i64[0] = 0x10001000100010;
  v20.i64[1] = 0x10001000100010;
  int16x8_t v53 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v20, vclsq_s16(v52)), (int8x16_t)vceqzq_s16(v52));
  int8x16_t v492 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v25, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int8x16_t v493 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v26, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v54 = vshlq_s16(vshlq_s16(vsubq_s16(v27, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v55 = vminq_s16(vminq_s16((int16x8_t)v492, (int16x8_t)v493), v54);
  int8x16_t v494 = (int8x16_t)v54;
  int8x16_t v495 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v28, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  v6.i64[0] = 0x8000800080008000;
  v6.i64[1] = 0x8000800080008000;
  int16x8_t v56 = vmaxq_s16(v50, v6);
  v6.i64[0] = 0x8000800080008000;
  v6.i64[1] = 0x8000800080008000;
  int16x8_t v57 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v492, (int16x8_t)v493), v54), (int16x8_t)v495), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v58 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v55, (int16x8_t)v495), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v59 = vpmaxq_s16(v57, v57);
  int16x8_t v60 = vpminq_s16(v58, v58);
  int16x8_t v61 = vmaxq_s16(v56, v59);
  int16x8_t v62 = vminq_s16(vminq_s16(v51, v6), v60);
  int16x8_t v63 = vzip1q_s16(v59, v60);
  int16x8_t v64 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v20, vclsq_s16(v63)), (int8x16_t)vceqzq_s16(v63));
  int8x16_t v496 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v33, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int8x16_t v497 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v34, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v65 = vshlq_s16(vshlq_s16(vsubq_s16(v35, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v66 = vminq_s16(vminq_s16((int16x8_t)v496, (int16x8_t)v497), v65);
  int8x16_t v498 = (int8x16_t)v65;
  int8x16_t v499 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v36, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v67 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v496, (int16x8_t)v497), v65), (int16x8_t)v499), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v68 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v66, (int16x8_t)v499), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int16x8_t v71 = vmaxq_s16(v61, v69);
  int16x8_t v72 = vminq_s16(v62, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v20, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  int8x16_t v500 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v41, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int8x16_t v501 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v42, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int8x16_t v504 = (int8x16_t)v45;
  int8x16_t v502 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v43, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int8x16_t v503 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v44, v45), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
  int16x8_t v75 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v500, (int16x8_t)v501), (int16x8_t)v502), (int16x8_t)v503), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v76 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v500, (int16x8_t)v501), (int16x8_t)v502), (int16x8_t)v503), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v77 = vpmaxq_s16(v75, v75);
  int16x8_t v78 = vpminq_s16(v76, v76);
  int16x8_t v79 = vmaxq_s16(v71, v77);
  int16x8_t v80 = vminq_s16(v72, v78);
  int16x8_t v81 = vzip1q_s16(v77, v78);
  int16x8_t v82 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v20, vclsq_s16(v81)), (int8x16_t)vceqzq_s16(v81));
  int16x8_t v83 = vpmaxq_s16(v53, v53);
  int16x8_t v84 = vpmaxq_s16(v64, v64);
  int16x8_t v85 = vpmaxq_s16(v74, v74);
  int16x8_t v86 = vpmaxq_s16(v82, v82);
  int8x16_t v87 = (int8x16_t)vmaxq_s16(vmaxq_s16(v83, v84), vmaxq_s16(v85, v86));
  int16x8_t v88 = vclzq_s16(vsubq_s16(v79, v80));
  v8.i64[0] = 0xF000F000F000FLL;
  v8.i64[1] = 0xF000F000F000FLL;
  v17.i64[0] = -1;
  v17.i64[1] = -1;
  int8x16_t v512 = (int8x16_t)v79;
  int8x16_t v511 = (int8x16_t)v80;
  int8x16_t v89 = (int8x16_t)vsubq_s16(vshlq_s16(v17, vsubq_s16(v8, v88)), v80);
  int8x16_t v90 = (int8x16_t)vsubq_s16(v20, v88);
  int8x16_t v91 = (int8x16_t)vcgtq_s16((int16x8_t)v87, (int16x8_t)v90);
  int16x8_t v92 = (int16x8_t)vbslq_s8(v91, v90, v87);
  int8x16_t v513 = vandq_s8(v89, v91);
  v89.i64[0] = 0x8000800080008;
  v89.i64[1] = 0x8000800080008;
  int8x16_t v93 = vorrq_s8((int8x16_t)0, vandq_s8(v91, v89));
  v90.i64[0] = 0x3000300030003;
  v90.i64[1] = 0x3000300030003;
  int16x8_t v94 = vmaxq_s16(vminq_s16(vsubq_s16(v92, v84), (int16x8_t)v90), (int16x8_t)0);
  int16x8_t v95 = vmaxq_s16(vminq_s16(vsubq_s16(v92, v85), (int16x8_t)v90), (int16x8_t)0);
  int16x8_t v507 = vsubq_s16(v92, v94);
  int16x8_t v508 = vsubq_s16(v92, v95);
  int16x8_t v96 = vmaxq_s16(vminq_s16(vsubq_s16(v92, v86), (int16x8_t)v90), (int16x8_t)0);
  int16x8_t v509 = vsubq_s16(v92, v96);
  int8x16_t v510 = (int8x16_t)v92;
  int16x8_t v97 = vmaxq_s16(vminq_s16(vsubq_s16(v92, v83), (int16x8_t)v90), (int16x8_t)0);
  int8x16_t v98 = (int8x16_t)vceqq_s16(vaddq_s16(v96, v95), vnegq_s16(vaddq_s16(v97, v94)));
  int8x16_t v99 = vandq_s8((int8x16_t)vceqzq_s16(v92), v90);
  v90.i64[0] = 0x4000400040004;
  v90.i64[1] = 0x4000400040004;
  int8x16_t v100 = vorrq_s8(vorrq_s8(v99, v93), vbicq_s8(v90, v98));
  int8x16_t v505 = v100;
  int16x8_t v506 = vsubq_s16(v92, v97);
  if (vmaxvq_s16(v92))
  {
    int16x8_t v442 = v36;
    int16x8_t v443 = v28;
    uint32x4_t v444 = v10;
    uint32x4_t v445 = v11;
    int8x16_t v471 = v93;
    int8x16_t v473 = v100;
    int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v500, (int16x8_t)vqtbl1q_s8(v500, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v481 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v501, (int16x8_t)vqtbl1q_s8(v501, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v451 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v488, (int16x8_t)vqtbl1q_s8(v488, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v452 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v489, (int16x8_t)vqtbl1q_s8(v489, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v455 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v490, (int16x8_t)vqtbl1q_s8(v490, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v453 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v491, (int16x8_t)vqtbl1q_s8(v491, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int16x8_t v101 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v451, (int16x8_t)v452), (int16x8_t)v455), (int16x8_t)v453), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v102 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v451, (int16x8_t)v452), (int16x8_t)v455), (int16x8_t)v453), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v103 = vpmaxq_s16(v101, v101);
    int16x8_t v104 = vpminq_s16(v102, v102);
    v105.i64[0] = 0x8000800080008000;
    v105.i64[1] = 0x8000800080008000;
    int16x8_t v106 = vmaxq_s16(v103, v105);
    v105.i64[0] = 0x8000800080008000;
    v105.i64[1] = 0x8000800080008000;
    int8x16_t v107 = (int8x16_t)vminq_s16(v104, v105);
    int16x8_t v108 = vzip1q_s16(v103, v104);
    v105.i64[0] = 0x10001000100010;
    v105.i64[1] = 0x10001000100010;
    int16x8_t v109 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v108)), (int8x16_t)vceqzq_s16(v108));
    int16x8_t v110 = vpmaxq_s16(v109, v109);
    int8x16_t v460 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v494, (int16x8_t)vqtbl1q_s8(v494, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v461 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v492, (int16x8_t)vqtbl1q_s8(v492, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v458 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v495, (int16x8_t)vqtbl1q_s8(v495, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v459 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v493, (int16x8_t)vqtbl1q_s8(v493, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int16x8_t v111 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v461, (int16x8_t)v459), (int16x8_t)v460), (int16x8_t)v458), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v112 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v461, (int16x8_t)v459), (int16x8_t)v460), (int16x8_t)v458), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v106, v113);
    int8x16_t v116 = v473;
    int16x8_t v117 = vminq_s16((int16x8_t)v107, v114);
    int16x8_t v118 = vzip1q_s16(v113, v114);
    v119.i64[0] = 0x10001000100010;
    v119.i64[1] = 0x10001000100010;
    int16x8_t v120 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v119, vclsq_s16(v118)), (int8x16_t)vceqzq_s16(v118));
    int16x8_t v121 = vpmaxq_s16(v120, v120);
    int8x16_t v464 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v498, (int16x8_t)vqtbl1q_s8(v498, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v465 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v496, (int16x8_t)vqtbl1q_s8(v496, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v462 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v499, (int16x8_t)vqtbl1q_s8(v499, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v463 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v497, (int16x8_t)vqtbl1q_s8(v497, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int16x8_t v122 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v465, (int16x8_t)v463), (int16x8_t)v464), (int16x8_t)v462), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v123 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v465, (int16x8_t)v463), (int16x8_t)v464), (int16x8_t)v462), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int16x8_t v127 = vminq_s16(v117, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v119, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int8x16_t v454 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v502, (int16x8_t)vqtbl1q_s8(v502, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v503, (int16x8_t)vqtbl1q_s8(v503, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v469, (int16x8_t)v481), (int16x8_t)v454), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v469, (int16x8_t)v481), (int16x8_t)v454), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vmaxq_s16(v126, v133);
    int8x16_t v136 = (int8x16_t)vminq_s16(v127, v134);
    int16x8_t v137 = vzip1q_s16(v133, v134);
    v134.i64[0] = 0x10001000100010;
    v134.i64[1] = 0x10001000100010;
    int16x8_t v138 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v134, vclsq_s16(v137)), (int8x16_t)vceqzq_s16(v137));
    int16x8_t v139 = vpmaxq_s16(v138, v138);
    int8x16_t v140 = (int8x16_t)vmaxq_s16(vmaxq_s16(v110, v121), vmaxq_s16(v130, v139));
    int8x16_t v456 = v136;
    int8x16_t v457 = (int8x16_t)v135;
    int16x8_t v446 = vclzq_s16(vsubq_s16(v135, (int16x8_t)v136));
    int8x16_t v141 = (int8x16_t)vsubq_s16(v134, v446);
    v142.i64[0] = 0x10001000100010;
    v142.i64[1] = 0x10001000100010;
    int8x16_t v143 = (int8x16_t)vcgtq_s16((int16x8_t)v140, (int16x8_t)v141);
    int8x16_t v144 = vbslq_s8(v143, v141, v140);
    v141.i64[0] = 0x3000300030003;
    v141.i64[1] = 0x3000300030003;
    int16x8_t v145 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v110), (int16x8_t)v141), (int16x8_t)0);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v121), (int16x8_t)v141), (int16x8_t)0);
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v130), (int16x8_t)v141), (int16x8_t)0);
    v107.i64[0] = 0x3000300030003;
    v107.i64[1] = 0x3000300030003;
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v139), (int16x8_t)v141), (int16x8_t)0);
    v136.i64[0] = 0x4000400040004;
    v136.i64[1] = 0x4000400040004;
    int8x16_t v149 = vbicq_s8(v136, (int8x16_t)vceqq_s16(vaddq_s16(v148, v147), vnegq_s16(vaddq_s16(v145, v146))));
    v141.i64[0] = 0x18001800180018;
    v141.i64[1] = 0x18001800180018;
    int8x16_t v150 = vbslq_s8(v143, v141, v142);
    int8x16_t v448 = (int8x16_t)vsubq_s16((int16x8_t)v144, v146);
    int8x16_t v449 = (int8x16_t)vsubq_s16((int16x8_t)v144, v147);
    int8x16_t v450 = (int8x16_t)vsubq_s16((int16x8_t)v144, v148);
    v147.i64[0] = 0x7000700070007;
    v147.i64[1] = 0x7000700070007;
    int8x16_t v447 = (int8x16_t)vsubq_s16((int16x8_t)v144, v145);
    v141.i64[0] = 0x8000800080008;
    v141.i64[1] = 0x8000800080008;
    int16x8_t v151 = (int16x8_t)vandq_s8(v471, v141);
    int16x8_t v152 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v116, (int16x8_t)v116), v141);
    v110.i64[0] = 0x2000200020002;
    v110.i64[1] = 0x2000200020002;
    int16x8_t v153 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v473, v107), v110), v142);
    int8x16_t v154 = (int8x16_t)vceqzq_s16(v151);
    int8x16_t v155 = v510;
    int16x8_t v157 = v506;
    int16x8_t v156 = v507;
    int16x8_t v158 = vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v510, v154), v152), v153), v506, v147);
    int16x8_t v160 = v508;
    int16x8_t v159 = v509;
    int8x16_t v161 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(v158, vshlq_n_s16(vaddq_s16(vaddq_s16(v508, v507), v509), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v144, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v150 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v149, (int16x8_t)v149)), (int16x8_t)v447, v147), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v449, (int16x8_t)v448), (int16x8_t)v450), 3uLL))).i64[0], 0);
    if (vaddvq_s16((int16x8_t)v161))
    {
      v162.i64[0] = 0x3000300030003;
      v162.i64[1] = 0x3000300030003;
      int8x16_t v163 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v144), v162), v150), v149);
      v164.i64[0] = 0xF000F000F000FLL;
      v164.i64[1] = 0xF000F000F000FLL;
      int8x16_t v488 = vbslq_s8(v161, v451, v488);
      int8x16_t v489 = vbslq_s8(v161, v452, v489);
      v162.i64[0] = -1;
      v162.i64[1] = -1;
      int8x16_t v490 = vbslq_s8(v161, v455, v490);
      int8x16_t v491 = vbslq_s8(v161, v453, v491);
      int8x16_t v492 = vbslq_s8(v161, v461, v492);
      int8x16_t v493 = vbslq_s8(v161, v459, v493);
      int8x16_t v494 = vbslq_s8(v161, v460, v494);
      int8x16_t v495 = vbslq_s8(v161, v458, v495);
      int8x16_t v496 = vbslq_s8(v161, v465, v496);
      int8x16_t v497 = vbslq_s8(v161, v463, v497);
      int8x16_t v498 = vbslq_s8(v161, v464, v498);
      int8x16_t v499 = vbslq_s8(v161, v462, v499);
      int8x16_t v500 = vbslq_s8(v161, v469, v500);
      int8x16_t v501 = vbslq_s8(v161, v481, v501);
      int8x16_t v502 = vbslq_s8(v161, v454, v502);
      int8x16_t v503 = vbslq_s8(v161, v467, v503);
      int16x8_t v157 = (int16x8_t)vbslq_s8(v161, v447, (int8x16_t)v506);
      int16x8_t v156 = (int16x8_t)vbslq_s8(v161, v448, (int8x16_t)v507);
      int16x8_t v506 = v157;
      int16x8_t v507 = v156;
      int16x8_t v160 = (int16x8_t)vbslq_s8(v161, v449, (int8x16_t)v508);
      int16x8_t v159 = (int16x8_t)vbslq_s8(v161, v450, (int8x16_t)v509);
      int16x8_t v508 = v160;
      int16x8_t v509 = v159;
      int8x16_t v512 = vbslq_s8(v161, v457, v512);
      int8x16_t v513 = vbslq_s8(v161, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v162, vsubq_s16(v164, v446)), (int16x8_t)v456), v143), v513);
      int8x16_t v155 = vbslq_s8(v161, v144, v510);
      int8x16_t v510 = v155;
      int8x16_t v511 = vbslq_s8(v161, v456, v511);
      int8x16_t v116 = vbslq_s8(v161, v163, v505);
      int8x16_t v504 = vbslq_s8(v161, (int8x16_t)vsubq_s16((int16x8_t)v504, (int16x8_t)vqtbl1q_s8(v504, (int8x16_t)xmmword_242EA7910)), v504);
      int8x16_t v505 = v116;
    }
    int16x8_t v165 = v484;
    int16x8_t v166 = v485;
    int16x8_t v167 = v486;
    int8x16_t v168 = v487;
    if (a5 >= 2)
    {
      int16x8_t v169 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v165.i8, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v170 = vsubq_s16(v484, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v165.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v171 = vsubq_s16(v485, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v165.i8, (int8x16_t)xmmword_242EA7720));
      int16x8_t v482 = vsubq_s16(v486, v169);
      int16x8_t v172 = vsubq_s16((int16x8_t)v487, v169);
      uint64_t v173 = v443.i64[0];
      uint64_t v174 = v487.i64[1];
      int16x8_t v175 = vsubq_s16(v27, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v25.i8, (int8x16_t)xmmword_242EA77C0));
      uint64_t v176 = v442.i64[0];
      uint64_t v177 = v487.i64[1];
      uint64_t v178 = v44.i64[0];
      uint64_t v179 = v487.i64[1];
      v180.i64[1] = v170.i64[1];
      v180.i64[0] = v172.i64[1];
      v172.i64[1] = v170.i64[0];
      int16x8_t v181 = vshlq_s16(v172, (int16x8_t)xmmword_242EA7A90);
      int16x8_t v182 = vshlq_s16(vsubq_s16(v25, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v25.i8, (int8x16_t)xmmword_242EA7710)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v183 = vshlq_s16(vsubq_s16(v26, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v25.i8, (int8x16_t)xmmword_242EA7750)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v184 = vshlq_s16(vsubq_s16(v443, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v25.i8, (int8x16_t)xmmword_242EA7760)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v185 = vshlq_s16(vsubq_s16(v33, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v33.i8, (int8x16_t)xmmword_242EA77D0)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v186 = vshlq_s16(vsubq_s16(v34, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v33.i8, (int8x16_t)xmmword_242EA77E0)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v187 = vshlq_s16(vsubq_s16(v35, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v33.i8, (int8x16_t)xmmword_242EA7710)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v188 = vshlq_s16(vsubq_s16(v442, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v33.i8, (int8x16_t)xmmword_242EA7720)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v189 = vshlq_s16(vsubq_s16(v41, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v41.i8, (int8x16_t)xmmword_242EA77D0)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v190 = vshlq_s16(vsubq_s16(v42, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v41.i8, (int8x16_t)xmmword_242EA7780)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v191 = vshlq_s16(vsubq_s16(v43, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v41.i8, (int8x16_t)xmmword_242EA7710)), (int16x8_t)xmmword_242EA7A90);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vsubq_s16(v44, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v41.i8, (int8x16_t)xmmword_242EA7720)), (int16x8_t)xmmword_242EA7A90);
      int16x8_t v193 = vshlq_s16(vshlq_s16(v180, (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v194 = (int8x16_t)vshlq_s16(vshlq_s16(v171, (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
      int16x8_t v195 = vshlq_s16(vshlq_s16(v482, (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v181, (int16x8_t)xmmword_242EA7AA0);
      int16x8_t v197 = vshlq_s16(v182, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v198 = (int8x16_t)vshlq_s16(v183, (int16x8_t)xmmword_242EA7AA0);
      int16x8_t v199 = vshlq_s16(vshlq_s16(v175, (int16x8_t)xmmword_242EA7A90), (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v200 = (int8x16_t)vshlq_s16(v184, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v201 = (int8x16_t)vshlq_s16(v185, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v202 = (int8x16_t)vshlq_s16(v186, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v203 = (int8x16_t)vshlq_s16(v187, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v204 = (int8x16_t)vshlq_s16(v188, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v205 = (int8x16_t)vshlq_s16(v189, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v206 = (int8x16_t)vshlq_s16(v190, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v207 = (int8x16_t)vshlq_s16(v191, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v208 = (int8x16_t)vshlq_s16((int16x8_t)v192, (int16x8_t)xmmword_242EA7AA0);
      int8x16_t v483 = (int8x16_t)v193;
      int8x16_t v474 = (int8x16_t)v195;
      int16x8_t v209 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v193, (int16x8_t)v194), v195), (int16x8_t)v196), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v210 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v193, (int16x8_t)v194), v195), (int16x8_t)v196), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v211 = vpmaxq_s16(v209, v209);
      int16x8_t v212 = vpminq_s16(v210, v210);
      v192.i64[0] = 0x8000800080008000;
      v192.i64[1] = 0x8000800080008000;
      int16x8_t v213 = vmaxq_s16(v211, (int16x8_t)v192);
      v192.i64[0] = 0x8000800080008000;
      v192.i64[1] = 0x8000800080008000;
      int16x8_t v214 = vminq_s16(v212, (int16x8_t)v192);
      int16x8_t v215 = vzip1q_s16(v211, v212);
      v192.i64[0] = 0x10001000100010;
      v192.i64[1] = 0x10001000100010;
      int16x8_t v216 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v192, vclsq_s16(v215)), (int8x16_t)vceqzq_s16(v215));
      int8x16_t v217 = (int8x16_t)vpmaxq_s16(v216, v216);
      int8x16_t v470 = (int8x16_t)v199;
      int8x16_t v472 = (int8x16_t)v197;
      int16x8_t v218 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v197, (int16x8_t)v198), v199), (int16x8_t)v200), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v219 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v197, (int16x8_t)v198), v199), (int16x8_t)v200), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v220 = vpmaxq_s16(v218, v218);
      int16x8_t v221 = vpminq_s16(v219, v219);
      int16x8_t v222 = vmaxq_s16(v213, v220);
      int16x8_t v223 = vminq_s16(v214, v221);
      int16x8_t v224 = vzip1q_s16(v220, v221);
      int16x8_t v225 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v192, vclsq_s16(v224)), (int8x16_t)vceqzq_s16(v224));
      int16x8_t v226 = vpmaxq_s16(v225, v225);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v201, (int16x8_t)v202), (int16x8_t)v203), (int16x8_t)v204), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v228 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v201, (int16x8_t)v202), (int16x8_t)v203), (int16x8_t)v204), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v229 = vpmaxq_s16(v227, v227);
      int16x8_t v230 = vpminq_s16(v228, v228);
      int16x8_t v231 = vmaxq_s16(v222, v229);
      int16x8_t v232 = vminq_s16(v223, v230);
      int16x8_t v233 = vzip1q_s16(v229, v230);
      int16x8_t v234 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v192, vclsq_s16(v233)), (int8x16_t)vceqzq_s16(v233));
      int16x8_t v235 = vpmaxq_s16(v234, v234);
      int16x8_t v236 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v205, (int16x8_t)v206), (int16x8_t)v207), (int16x8_t)v208), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v237 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v205, (int16x8_t)v206), (int16x8_t)v207), (int16x8_t)v208), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v238 = vpmaxq_s16(v236, v236);
      int16x8_t v239 = vpminq_s16(v237, v237);
      int16x8_t v240 = vmaxq_s16(v231, v238);
      int8x16_t v241 = (int8x16_t)vminq_s16(v232, v239);
      int16x8_t v242 = vzip1q_s16(v238, v239);
      int16x8_t v243 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v192, vclsq_s16(v242)), (int8x16_t)vceqzq_s16(v242));
      int16x8_t v244 = vpmaxq_s16(v243, v243);
      int8x16_t v245 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v217, v226), vmaxq_s16(v235, v244));
      int8x16_t v468 = (int8x16_t)v240;
      int16x8_t v246 = vclzq_s16(vsubq_s16(v240, (int16x8_t)v241));
      int8x16_t v247 = (int8x16_t)vsubq_s16((int16x8_t)v192, v246);
      int8x16_t v248 = (int8x16_t)vcgtq_s16((int16x8_t)v245, (int16x8_t)v247);
      int8x16_t v249 = vbslq_s8(v248, v247, v245);
      int16x8_t v250 = vsubq_s16((int16x8_t)v249, (int16x8_t)v217);
      v217.i64[0] = 0x3000300030003;
      v217.i64[1] = 0x3000300030003;
      int16x8_t v251 = vmaxq_s16(vminq_s16(v250, (int16x8_t)v217), (int16x8_t)0);
      int8x16_t v252 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v249, v226), (int16x8_t)v217), (int16x8_t)0);
      int16x8_t v253 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v249, v235), (int16x8_t)v217), (int16x8_t)0);
      int16x8_t v254 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v249, v244), (int16x8_t)v217), (int16x8_t)0);
      int8x16_t v255 = (int8x16_t)vsubq_s16((int16x8_t)v249, v251);
      int16x8_t v256 = vsubq_s16((int16x8_t)v249, (int16x8_t)v252);
      int8x16_t v257 = (int8x16_t)vsubq_s16((int16x8_t)v249, v253);
      int8x16_t v258 = (int8x16_t)vsubq_s16((int16x8_t)v249, v254);
      int8x16_t v259 = (int8x16_t)vceqq_s16(vaddq_s16(v254, v253), vnegq_s16(vaddq_s16(v251, (int16x8_t)v252)));
      v252.i64[0] = 0x4000400040004;
      v252.i64[1] = 0x4000400040004;
      int8x16_t v260 = vbicq_s8(v252, v259);
      int16x8_t v261 = (int16x8_t)vandq_s8(v247, v248);
      v247.i64[0] = 0x7000700070007;
      v247.i64[1] = 0x7000700070007;
      int8x16_t v466 = (int8x16_t)v256;
      int16x8_t v262 = vaddq_s16(vmlaq_s16(vaddq_s16(v261, vaddq_s16((int16x8_t)v260, (int16x8_t)v260)), (int16x8_t)v255, (int16x8_t)v247), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v257, v256), (int16x8_t)v258), 3uLL));
      int8x16_t v116 = v505;
      int8x16_t v263 = (int8x16_t)v506;
      v264.i64[0] = 0x2000200020002;
      v264.i64[1] = 0x2000200020002;
      int16x8_t v265 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v505, v217), (int16x8_t)v264), v192);
      v192.i64[0] = 0x8000800080008;
      v192.i64[1] = 0x8000800080008;
      int16x8_t v266 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v116, (int16x8_t)v116), v192);
      int8x16_t v267 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v505, v192));
      int16x8_t v159 = v509;
      int8x16_t v155 = v510;
      int16x8_t v268 = vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v510, v267), v266), v265), v506, (int16x8_t)v247);
      int16x8_t v156 = v507;
      int16x8_t v160 = v508;
      int8x16_t v269 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(v268, vshlq_n_s16(vaddq_s16(vaddq_s16(v508, v507), v509), 3uLL)), v262).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v269))
      {
        v270.i64[0] = 0x9000900090009;
        v270.i64[1] = 0x9000900090009;
        int8x16_t v271 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v249), v264), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v248, v270), (int16x8_t)vmvnq_s8(v248)));
        v270.i64[0] = -1;
        v270.i64[1] = -1;
        int8x16_t v272 = vorrq_s8(v271, v260);
        v271.i64[0] = 0xF000F000F000FLL;
        v271.i64[1] = 0xF000F000F000FLL;
        int8x16_t v273 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v270, vsubq_s16((int16x8_t)v271, v246)), (int16x8_t)v241), v248);
        int8x16_t v263 = vbslq_s8(v269, v255, (int8x16_t)v506);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v269, v466, (int8x16_t)v507);
        int16x8_t v160 = (int16x8_t)vbslq_s8(v269, v257, (int8x16_t)v508);
        int16x8_t v159 = (int16x8_t)vbslq_s8(v269, v258, (int8x16_t)v509);
        int8x16_t v155 = vbslq_s8(v269, v249, v510);
        int8x16_t v503 = vbslq_s8(v269, v208, v503);
        int8x16_t v504 = vbslq_s8(v269, vextq_s8(v487, v487, 8uLL), v504);
        int8x16_t v488 = vbslq_s8(v269, v483, v488);
        int8x16_t v489 = vbslq_s8(v269, v194, v489);
        int8x16_t v490 = vbslq_s8(v269, v474, v490);
        int8x16_t v491 = vbslq_s8(v269, v196, v491);
        int8x16_t v492 = vbslq_s8(v269, v472, v492);
        int8x16_t v493 = vbslq_s8(v269, v198, v493);
        int8x16_t v494 = vbslq_s8(v269, v470, v494);
        int8x16_t v495 = vbslq_s8(v269, v200, v495);
        int8x16_t v496 = vbslq_s8(v269, v201, v496);
        int8x16_t v497 = vbslq_s8(v269, v202, v497);
        int8x16_t v498 = vbslq_s8(v269, v203, v498);
        int8x16_t v499 = vbslq_s8(v269, v204, v499);
        int8x16_t v500 = vbslq_s8(v269, v205, v500);
        int8x16_t v501 = vbslq_s8(v269, v206, v501);
        int8x16_t v502 = vbslq_s8(v269, v207, v502);
        int8x16_t v510 = v155;
        int8x16_t v511 = vbslq_s8(v269, v241, v511);
        int8x16_t v512 = vbslq_s8(v269, v468, v512);
        int8x16_t v116 = vbslq_s8(v269, v272, v505);
        int8x16_t v513 = vbslq_s8(v269, v273, v513);
        int16x8_t v506 = (int16x8_t)v263;
        int16x8_t v507 = v156;
        int16x8_t v508 = v160;
        int16x8_t v509 = v159;
        int8x16_t v505 = v116;
      }
      int16x8_t v157 = (int16x8_t)v263;
    }
    int16x8_t v274 = (int16x8_t)vandq_s8(v513, (int8x16_t)vceqq_s16((int16x8_t)v155, v157));
    int8x16_t v488 = (int8x16_t)vaddq_s16(v274, (int16x8_t)v488);
    int8x16_t v489 = (int8x16_t)vaddq_s16((int16x8_t)v489, v274);
    int8x16_t v490 = (int8x16_t)vaddq_s16((int16x8_t)v490, v274);
    int8x16_t v491 = (int8x16_t)vaddq_s16((int16x8_t)v491, v274);
    int16x8_t v275 = (int16x8_t)vandq_s8(v513, (int8x16_t)vceqq_s16((int16x8_t)v155, v156));
    int8x16_t v492 = (int8x16_t)vaddq_s16((int16x8_t)v492, v275);
    int8x16_t v493 = (int8x16_t)vaddq_s16((int16x8_t)v493, v275);
    int8x16_t v494 = (int8x16_t)vaddq_s16((int16x8_t)v494, v275);
    int8x16_t v495 = (int8x16_t)vaddq_s16((int16x8_t)v495, v275);
    int16x8_t v276 = (int16x8_t)vandq_s8(v513, (int8x16_t)vceqq_s16((int16x8_t)v155, v160));
    int8x16_t v496 = (int8x16_t)vaddq_s16((int16x8_t)v496, v276);
    int8x16_t v497 = (int8x16_t)vaddq_s16((int16x8_t)v497, v276);
    int8x16_t v498 = (int8x16_t)vaddq_s16((int16x8_t)v498, v276);
    int8x16_t v499 = (int8x16_t)vaddq_s16((int16x8_t)v499, v276);
    int8x16_t v277 = vandq_s8(v513, (int8x16_t)vceqq_s16((int16x8_t)v155, v159));
    int8x16_t v500 = (int8x16_t)vaddq_s16((int16x8_t)v500, (int16x8_t)v277);
    int8x16_t v501 = (int8x16_t)vaddq_s16((int16x8_t)v501, (int16x8_t)v277);
    int8x16_t v502 = (int8x16_t)vaddq_s16((int16x8_t)v502, (int16x8_t)v277);
    int8x16_t v503 = (int8x16_t)vaddq_s16((int16x8_t)v503, (int16x8_t)v277);
    v277.i64[0] = 0x8000800080008;
    v277.i64[1] = 0x8000800080008;
    v278.i64[0] = 0x3000300030003;
    v278.i64[1] = 0x3000300030003;
    v279.i64[0] = 0x2000200020002;
    v279.i64[1] = 0x2000200020002;
    int8x16_t v280 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v116, v278), v279);
    v279.i64[0] = 0x10001000100010;
    v279.i64[1] = 0x10001000100010;
    int16x8_t v281 = (int16x8_t)vandq_s8(v280, (int8x16_t)v279);
    v279.i64[0] = 0x7000700070007;
    v279.i64[1] = 0x7000700070007;
    int16x8_t v282 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v155, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v116, v277))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v116, (int16x8_t)v116), v277)), v281), v157, v279), vshlq_n_s16(vaddq_s16(v160, vaddq_s16(v156, v159)), 3uLL));
    int16x8_t v283 = vpaddq_s16(v282, v282);
    if ((unint64_t)(vpaddq_s16(v283, v283).i16[0] + 75) > 0x3FF)
    {
      *(uint32x4_t *)a1 = v477;
      *(uint32x4_t *)(a1 + 16) = v478;
      *(int16x8_t *)(a1 + 32) = v475;
      *(uint32x4_t *)(a1 + 48) = v476;
      *(int16x8_t *)(a1 + 64) = v479;
      *(uint32x4_t *)(a1 + 80) = v480;
      v289 = (uint32x4_t *)(a1 + 96);
      char v287 = 127;
      unint64_t result = 128;
      uint32x4_t *v289 = v444;
      v289[1] = v445;
    }
    else
    {
      v284 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v285 = 8 * (a1 & 7);
      if (v285) {
        uint64_t v286 = *v284 & ~(-1 << v285);
      }
      else {
        uint64_t v286 = 0;
      }
      *a2 = 0;
      uint64_t v290 = v504.i64[0];
      v291.i32[0] = v116.u16[1];
      v291.i32[1] = v116.u16[2];
      int8x8_t v292 = vand_s8((int8x8_t)vshl_u32(v291, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v293 = v292.i32[1];
      __int32 v294 = v292.i32[0] | v116.i8[0] & 0x1F;
      int32x4_t v295 = vmovl_s16(vceqz_s16(*(int16x4_t *)v155.i8));
      v296.i64[0] = v295.i32[0];
      v296.i64[1] = v295.i32[1];
      int8x16_t v297 = (int8x16_t)v296;
      v296.i64[0] = v295.i32[2];
      v296.i64[1] = v295.i32[3];
      int8x16_t v298 = (int8x16_t)v296;
      uint32x4_t v299 = vmovl_u16((uint16x4_t)vand_s8((int8x8_t)vadd_s16(*(int16x4_t *)v155.i8, (int16x4_t)0x7000F000F000FLL), (int8x8_t)0x7000F000F000FLL));
      v296.i64[0] = v299.u32[2];
      v296.i64[1] = v299.u32[3];
      uint64x2_t v300 = v296;
      v296.i64[0] = v299.u32[0];
      v296.i64[1] = v299.u32[1];
      int8x16_t v301 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64(v296, (uint64x2_t)xmmword_242EA7AB0), v297), vbicq_s8((int8x16_t)vshlq_u64(v300, (uint64x2_t)xmmword_242EA7AC0), v298));
      unint64_t v302 = *(void *)&vorr_s8(*(int8x8_t *)v301.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v301, v301, 8uLL)) | ((unint64_t)(v116.i8[6] & 0x1F) << 15) | v294 | v293;
      unint64_t v303 = (v302 << v285) | v286;
      if (v285 >= 0x1C)
      {
        void *v284 = v303;
        unint64_t v303 = v302 >> (-8 * (a1 & 7u));
      }
      unint64_t v304 = v290 & 0x1FF | ((unint64_t)(WORD1(v290) & 0x1FF) << 9);
      v305.i32[0] = WORD2(v290);
      v305.i32[1] = HIWORD(v290);
      int8x8_t v306 = vand_s8(v305, (int8x8_t)0x1F000001FFLL);
      v307.i64[0] = v306.u32[0];
      v307.i64[1] = v306.u32[1];
      uint64x2_t v308 = vshlq_u64(v307, (uint64x2_t)xmmword_242EA7AD0);
      unint64_t v309 = v304 | v308.i64[0] | v308.i64[1];
      unint64_t v310 = (v285 + 36) & 0x3C;
      unint64_t v311 = v303 | (v309 << v310);
      if (v310 >= 0x20)
      {
        *(void *)((char *)v284 + (((v285 + 36) >> 3) & 8)) = v311;
        unint64_t v311 = v309 >> -(char)v310;
      }
      int8x16_t v312 = (int8x16_t)vsubq_s16((int16x8_t)v510, v506);
      int8x16_t v313 = (int8x16_t)vsubq_s16((int16x8_t)v510, v507);
      int8x16_t v314 = (int8x16_t)vsubq_s16((int16x8_t)v510, v508);
      int8x16_t v315 = (int8x16_t)vsubq_s16((int16x8_t)v510, v509);
      *(uint8x8_t *)v312.i8 = vqmovn_u16((uint16x8_t)v312);
      *(uint8x8_t *)v313.i8 = vqmovn_u16((uint16x8_t)v313);
      *(uint8x8_t *)v314.i8 = vqmovn_u16((uint16x8_t)v314);
      *(uint8x8_t *)v315.i8 = vqmovn_u16((uint16x8_t)v315);
      int16x8_t v316 = (int16x8_t)vtrn1q_s8(v312, v313);
      int16x8_t v317 = (int16x8_t)vtrn2q_s8(v312, v313);
      int8x16_t v318 = vtrn1q_s8(v314, v315);
      int16x8_t v319 = (int16x8_t)vtrn2q_s8(v314, v315);
      int8x16_t v320 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v316, (int16x8_t)v318), (int32x4_t)vzip1q_s16(v317, v319)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v316, (int16x8_t)v318), (int32x4_t)vtrn2q_s16(v317, v319)));
      v318.i64[0] = 0x202020202020202;
      v318.i64[1] = 0x202020202020202;
      int8x16_t v321 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v505.i8, (int16x4_t)0x4000400040004)), v318);
      v318.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v318.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v314.i64[0] = -1;
      v314.i64[1] = -1;
      uint8x16_t v322 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v314, (uint8x16_t)vorrq_s8(v321, v318)), v320);
      int16x8_t v323 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v321.i8);
      int16x8_t v324 = (int16x8_t)vmovl_high_u8((uint8x16_t)v321);
      uint16x8_t v325 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v322.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v323)), (int16x8_t)vshlq_u16(vmovl_high_u8(v322), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v324)));
      uint16x8_t v326 = (uint16x8_t)vpaddq_s16(v323, v324);
      int32x4_t v327 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v326.i8);
      int32x4_t v328 = (int32x4_t)vmovl_high_u16(v326);
      int32x4_t v329 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v325.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v327)), (int32x4_t)vshlq_u32(vmovl_high_u16(v325), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)));
      int32x4_t v330 = vpaddq_s32(v327, v328);
      v331.i64[0] = v329.u32[0];
      v331.i64[1] = v329.u32[1];
      uint64x2_t v332 = (uint64x2_t)v331;
      v331.i64[0] = v329.u32[2];
      v331.i64[1] = v329.u32[3];
      uint64x2_t v333 = (uint64x2_t)v331;
      v331.i64[0] = v330.u32[0];
      v331.i64[1] = v330.u32[1];
      int64x2_t v334 = v331;
      v331.i64[0] = v330.u32[2];
      v331.i64[1] = v330.u32[3];
      int64x2_t v335 = vpaddq_s64((int64x2_t)vshlq_u64(v332, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)), (int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v331)));
      int64x2_t v336 = vpaddq_s64(v334, v331);
      unint64_t v337 = (v335.i64[0] << (v285 | 4u)) | v311;
      if (v336.i64[0] + (v285 | 4) >= 0x40)
      {
        v284[1] = v337;
        unint64_t v337 = (unint64_t)v335.i64[0] >> -(v285 | 4);
      }
      unint64_t v338 = v336.i64[0] + (v285 | 0x44);
      unint64_t v339 = v337 | (v335.i64[1] << v338);
      if ((v338 & 0x3F) + v336.i64[1] >= 0x40)
      {
        *(void *)((char *)v284 + ((v338 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
        unint64_t v339 = (unint64_t)v335.i64[1] >> -(v338 & 0x3F);
        if ((v338 & 0x3F) == 0) {
          unint64_t v339 = 0;
        }
      }
      unint64_t v340 = v338 + v336.i64[1];
      v341.i64[0] = 0x8000800080008;
      v341.i64[1] = 0x8000800080008;
      v342.i64[0] = -1;
      v342.i64[1] = -1;
      int16x8_t v343 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v505, v341), (int8x16_t)0, 8uLL), v510);
      v344.i64[0] = 0xF000F000F000FLL;
      v344.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v345 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v342, (uint16x8_t)vaddq_s16(v343, v344)), v513);
      int32x4_t v346 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v343.i8);
      int32x4_t v347 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v345.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)), (int32x4_t)vmovl_high_u16(v345));
      int32x4_t v348 = vpaddq_s32(v346, (int32x4_t)vmovl_high_u16((uint16x8_t)v343));
      v349.i64[0] = v347.u32[0];
      v349.i64[1] = v347.u32[1];
      uint64x2_t v350 = (uint64x2_t)v349;
      v349.i64[0] = v347.u32[2];
      v349.i64[1] = v347.u32[3];
      uint64x2_t v351 = (uint64x2_t)v349;
      v349.i64[0] = v348.u32[0];
      v349.i64[1] = v348.u32[1];
      int64x2_t v352 = v349;
      v349.i64[0] = v348.u32[2];
      v349.i64[1] = v348.u32[3];
      int64x2_t v353 = vpaddq_s64((int64x2_t)vshlq_u64(v350, (uint64x2_t)vzip1q_s64((int64x2_t)0, v352)), (int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)));
      int64x2_t v354 = vpaddq_s64(v352, v349);
      unint64_t v355 = (v353.i64[0] << v340) | v339;
      if (v354.i64[0] + (v340 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v284 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v355;
        unint64_t v355 = (unint64_t)v353.i64[0] >> -(v340 & 0x3F);
        if ((v340 & 0x3F) == 0) {
          unint64_t v355 = 0;
        }
      }
      unint64_t v356 = v354.i64[0] + v340;
      unint64_t v357 = v355 | (v353.i64[1] << v356);
      if ((v356 & 0x3F) + v354.i64[1] >= 0x40)
      {
        *(void *)((char *)v284 + ((v356 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
        unint64_t v357 = (unint64_t)v353.i64[1] >> -(v356 & 0x3F);
        if ((v356 & 0x3F) == 0) {
          unint64_t v357 = 0;
        }
      }
      unint64_t v358 = v356 + v354.i64[1];
      int16x8_t v359 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v506, 8uLL);
      v360.i64[0] = 0xF000F000F000FLL;
      v360.i64[1] = 0xF000F000F000FLL;
      v361.i64[0] = -1;
      v361.i64[1] = -1;
      uint16x8_t v362 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v361, (uint16x8_t)vaddq_s16(v359, v360)), v488);
      int32x4_t v363 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v359.i8);
      int32x4_t v364 = (int32x4_t)vmovl_high_u16((uint16x8_t)v359);
      int32x4_t v365 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v362.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v362), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)));
      int32x4_t v366 = vpaddq_s32(v363, v364);
      v367.i64[0] = v365.u32[0];
      v367.i64[1] = v365.u32[1];
      uint64x2_t v368 = (uint64x2_t)v367;
      v367.i64[0] = v365.u32[2];
      v367.i64[1] = v365.u32[3];
      uint64x2_t v369 = (uint64x2_t)v367;
      v367.i64[0] = v366.u32[0];
      v367.i64[1] = v366.u32[1];
      int64x2_t v370 = v367;
      v367.i64[0] = v366.u32[2];
      v367.i64[1] = v366.u32[3];
      int64x2_t v371 = vpaddq_s64((int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)), (int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v367)));
      int64x2_t v372 = vpaddq_s64(v370, v367);
      unint64_t v373 = (v371.i64[0] << v358) | v357;
      if (v372.i64[0] + (v358 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v284 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v373;
        if ((v358 & 0x3F) != 0) {
          unint64_t v373 = (unint64_t)v371.i64[0] >> -(v358 & 0x3F);
        }
        else {
          unint64_t v373 = 0;
        }
      }
      unint64_t v374 = v372.i64[0] + v358;
      uint64_t v375 = (v372.i64[0] + v358) & 0x3F;
      unint64_t v376 = v373 | (v371.i64[1] << v374);
      if ((unint64_t)(v375 + v372.i64[1]) >= 0x40)
      {
        *(void *)((char *)v284 + ((v374 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
        unint64_t v376 = (unint64_t)v371.i64[1] >> -(char)v375;
        if (!v375) {
          unint64_t v376 = 0;
        }
      }
      unint64_t v377 = v374 + v372.i64[1];
      v378.i64[0] = 0xF000F000F000FLL;
      v378.i64[1] = 0xF000F000F000FLL;
      v379.i64[0] = -1;
      v379.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v381 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v379, (uint16x8_t)vaddq_s16(v506, v378)), *(int8x16_t *)((char *)&v488 + i));
        int32x4_t v382 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v506.i8);
        int32x4_t v383 = (int32x4_t)vmovl_high_u16((uint16x8_t)v506);
        int32x4_t v384 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v381.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v382)), (int32x4_t)vshlq_u32(vmovl_high_u16(v381), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v383)));
        int32x4_t v385 = vpaddq_s32(v382, v383);
        v386.i64[0] = v384.u32[0];
        v386.i64[1] = v384.u32[1];
        uint64x2_t v387 = (uint64x2_t)v386;
        v386.i64[0] = v384.u32[2];
        v386.i64[1] = v384.u32[3];
        uint64x2_t v388 = (uint64x2_t)v386;
        v386.i64[0] = v385.u32[0];
        v386.i64[1] = v385.u32[1];
        int64x2_t v389 = v386;
        v386.i64[0] = v385.u32[2];
        v386.i64[1] = v385.u32[3];
        int64x2_t v390 = vpaddq_s64((int64x2_t)vshlq_u64(v387, (uint64x2_t)vzip1q_s64((int64x2_t)0, v389)), (int64x2_t)vshlq_u64(v388, (uint64x2_t)vzip1q_s64((int64x2_t)0, v386)));
        int64x2_t v391 = vpaddq_s64(v389, v386);
        unint64_t v392 = (v390.i64[0] << v377) | v376;
        if (v391.i64[0] + (v377 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v284 + ((v377 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v392;
          unint64_t v392 = (unint64_t)v390.i64[0] >> -(v377 & 0x3F);
          if ((v377 & 0x3F) == 0) {
            unint64_t v392 = 0;
          }
        }
        unint64_t v393 = v391.i64[0] + v377;
        unint64_t v376 = v392 | (v390.i64[1] << v393);
        if ((v393 & 0x3F) + v391.i64[1] >= 0x40)
        {
          *(void *)((char *)v284 + ((v393 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
          unint64_t v376 = (unint64_t)v390.i64[1] >> -(v393 & 0x3F);
          if ((v393 & 0x3F) == 0) {
            unint64_t v376 = 0;
          }
        }
        unint64_t v377 = v393 + v391.i64[1];
      }
      uint64_t v394 = 0;
      v395.i64[0] = 0xF000F000F000FLL;
      v395.i64[1] = 0xF000F000F000FLL;
      v396.i64[0] = -1;
      v396.i64[1] = -1;
      do
      {
        uint16x8_t v397 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v396, (uint16x8_t)vaddq_s16(v507, v395)), *(int8x16_t *)((char *)&v492 + v394));
        int32x4_t v398 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v507.i8);
        int32x4_t v399 = (int32x4_t)vmovl_high_u16((uint16x8_t)v507);
        int32x4_t v400 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v397.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v398)), (int32x4_t)vshlq_u32(vmovl_high_u16(v397), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v399)));
        int32x4_t v401 = vpaddq_s32(v398, v399);
        v402.i64[0] = v400.u32[0];
        v402.i64[1] = v400.u32[1];
        uint64x2_t v403 = (uint64x2_t)v402;
        v402.i64[0] = v400.u32[2];
        v402.i64[1] = v400.u32[3];
        uint64x2_t v404 = (uint64x2_t)v402;
        v402.i64[0] = v401.u32[0];
        v402.i64[1] = v401.u32[1];
        int64x2_t v405 = v402;
        v402.i64[0] = v401.u32[2];
        v402.i64[1] = v401.u32[3];
        int64x2_t v406 = vpaddq_s64((int64x2_t)vshlq_u64(v403, (uint64x2_t)vzip1q_s64((int64x2_t)0, v405)), (int64x2_t)vshlq_u64(v404, (uint64x2_t)vzip1q_s64((int64x2_t)0, v402)));
        int64x2_t v407 = vpaddq_s64(v405, v402);
        unint64_t v408 = (v406.i64[0] << v377) | v376;
        if (v407.i64[0] + (v377 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v284 + ((v377 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v408;
          unint64_t v408 = (unint64_t)v406.i64[0] >> -(v377 & 0x3F);
          if ((v377 & 0x3F) == 0) {
            unint64_t v408 = 0;
          }
        }
        unint64_t v409 = v407.i64[0] + v377;
        unint64_t v376 = v408 | (v406.i64[1] << v409);
        if ((v409 & 0x3F) + v407.i64[1] >= 0x40)
        {
          *(void *)((char *)v284 + ((v409 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
          unint64_t v376 = (unint64_t)v406.i64[1] >> -(v409 & 0x3F);
          if ((v409 & 0x3F) == 0) {
            unint64_t v376 = 0;
          }
        }
        unint64_t v377 = v409 + v407.i64[1];
        v394 += 16;
      }
      while (v394 != 64);
      uint64_t v410 = 0;
      v411.i64[0] = 0xF000F000F000FLL;
      v411.i64[1] = 0xF000F000F000FLL;
      v412.i64[0] = -1;
      v412.i64[1] = -1;
      do
      {
        uint16x8_t v413 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v412, (uint16x8_t)vaddq_s16(v508, v411)), *(int8x16_t *)((char *)&v496 + v410));
        int32x4_t v414 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v508.i8);
        int32x4_t v415 = (int32x4_t)vmovl_high_u16((uint16x8_t)v508);
        int32x4_t v416 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v413.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v414)), (int32x4_t)vshlq_u32(vmovl_high_u16(v413), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v415)));
        int32x4_t v417 = vpaddq_s32(v414, v415);
        v418.i64[0] = v416.u32[0];
        v418.i64[1] = v416.u32[1];
        uint64x2_t v419 = (uint64x2_t)v418;
        v418.i64[0] = v416.u32[2];
        v418.i64[1] = v416.u32[3];
        uint64x2_t v420 = (uint64x2_t)v418;
        v418.i64[0] = v417.u32[0];
        v418.i64[1] = v417.u32[1];
        int64x2_t v421 = v418;
        v418.i64[0] = v417.u32[2];
        v418.i64[1] = v417.u32[3];
        int64x2_t v422 = vpaddq_s64((int64x2_t)vshlq_u64(v419, (uint64x2_t)vzip1q_s64((int64x2_t)0, v421)), (int64x2_t)vshlq_u64(v420, (uint64x2_t)vzip1q_s64((int64x2_t)0, v418)));
        int64x2_t v423 = vpaddq_s64(v421, v418);
        unint64_t v424 = (v422.i64[0] << v377) | v376;
        if (v423.i64[0] + (v377 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v284 + ((v377 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v424;
          unint64_t v424 = (unint64_t)v422.i64[0] >> -(v377 & 0x3F);
          if ((v377 & 0x3F) == 0) {
            unint64_t v424 = 0;
          }
        }
        unint64_t v425 = v423.i64[0] + v377;
        unint64_t v376 = v424 | (v422.i64[1] << v425);
        if ((v425 & 0x3F) + v423.i64[1] >= 0x40)
        {
          *(void *)((char *)v284 + ((v425 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
          unint64_t v376 = (unint64_t)v422.i64[1] >> -(v425 & 0x3F);
          if ((v425 & 0x3F) == 0) {
            unint64_t v376 = 0;
          }
        }
        unint64_t v377 = v425 + v423.i64[1];
        v410 += 16;
      }
      while (v410 != 64);
      uint64_t v426 = 0;
      v427.i64[0] = 0xF000F000F000FLL;
      v427.i64[1] = 0xF000F000F000FLL;
      v428.i64[0] = -1;
      v428.i64[1] = -1;
      do
      {
        uint16x8_t v429 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v428, (uint16x8_t)vaddq_s16(v509, v427)), *(int8x16_t *)((char *)&v500 + v426));
        int32x4_t v430 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v509.i8);
        int32x4_t v431 = (int32x4_t)vmovl_high_u16((uint16x8_t)v509);
        int32x4_t v432 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v429.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v430)), (int32x4_t)vshlq_u32(vmovl_high_u16(v429), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v431)));
        int32x4_t v433 = vpaddq_s32(v430, v431);
        v434.i64[0] = v432.u32[0];
        v434.i64[1] = v432.u32[1];
        uint64x2_t v435 = (uint64x2_t)v434;
        v434.i64[0] = v432.u32[2];
        v434.i64[1] = v432.u32[3];
        uint64x2_t v436 = (uint64x2_t)v434;
        v434.i64[0] = v433.u32[0];
        v434.i64[1] = v433.u32[1];
        int64x2_t v437 = v434;
        v434.i64[0] = v433.u32[2];
        v434.i64[1] = v433.u32[3];
        int64x2_t v438 = vpaddq_s64((int64x2_t)vshlq_u64(v435, (uint64x2_t)vzip1q_s64((int64x2_t)0, v437)), (int64x2_t)vshlq_u64(v436, (uint64x2_t)vzip1q_s64((int64x2_t)0, v434)));
        int64x2_t v439 = vpaddq_s64(v437, v434);
        unint64_t v440 = (v438.i64[0] << v377) | v376;
        if (v439.i64[0] + (v377 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v284 + ((v377 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v440;
          unint64_t v440 = (unint64_t)v438.i64[0] >> -(v377 & 0x3F);
          if ((v377 & 0x3F) == 0) {
            unint64_t v440 = 0;
          }
        }
        unint64_t v441 = v439.i64[0] + v377;
        unint64_t v376 = v440 | (v438.i64[1] << v441);
        if ((v441 & 0x3F) + v439.i64[1] >= 0x40)
        {
          *(void *)((char *)v284 + ((v441 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
          unint64_t v376 = (unint64_t)v438.i64[1] >> -(v441 & 0x3F);
          if ((v441 & 0x3F) == 0) {
            unint64_t v376 = 0;
          }
        }
        unint64_t v377 = v441 + v439.i64[1];
        v426 += 16;
      }
      while (v426 != 64);
      if ((v377 & 0x3F) != 0) {
        *(void *)((char *)v284 + ((v377 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
      }
      unint64_t result = (v377 - v285 + 7) >> 3;
      char v287 = *a2 | (result - 1);
    }
  }
  else
  {
    *(_DWORD *)a1 = a3->i32[0];
    char v287 = 3;
    unint64_t result = 4;
  }
  *a2 = v287;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, char *a4, int a5, int a6)
{
  unint64_t v9 = a3;
  uint32x4_t v11 = (uint32x4_t *)result;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 2) {
    int v13 = 2;
  }
  else {
    int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (uint32x4_t *)result, a2, v12);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v14 = 2 * a2;
  int8x16_t v15 = a4 + 1;
  if (a6 <= 2) {
    int v16 = 2;
  }
  else {
    int v16 = a6;
  }
  unsigned int v17 = v16 - 2;
  if (v17 >= 2) {
    int v18 = 2;
  }
  else {
    int v18 = v17;
  }
  if (v12 && v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v15, (uint32x4_t *)((char *)v11 + v14), a2, v12);
    v9 += result;
  }
  else
  {
    *int8x16_t v15 = 0;
  }
  int16x8_t v19 = a4 + 2;
  if (a5 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a5;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v22 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, v11 + 4, a2, v22);
    v9 += result;
    int8x16_t v23 = a4 + 3;
  }
  else
  {
    *int16x8_t v19 = 0;
    int8x16_t v23 = a4 + 3;
    if (!v22) {
      goto LABEL_33;
    }
  }
  if (v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (uint32x4_t *)((char *)v11 + v14 + 64), a2, v22);
    v9 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v23 = 0;
LABEL_34:
  int8x16_t v24 = a4 + 4;
  if (a6 <= 4) {
    int v25 = 4;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 4;
  if (v26 >= 2) {
    int v27 = 2;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (uint32x4_t *)((char *)v11 + 4 * a2), a2, v12);
    v9 += result;
  }
  else
  {
    *int8x16_t v24 = 0;
  }
  int16x8_t v28 = a4 + 5;
  if (a6 <= 6) {
    int v29 = 6;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 6;
  if (v30 >= 2) {
    int v31 = 2;
  }
  else {
    int v31 = v30;
  }
  if (v12 && v31)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (uint32x4_t *)((char *)v11 + 6 * a2), a2, v12);
    v9 += result;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  else
  {
    *int16x8_t v28 = 0;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v32, (uint32x4_t *)((char *)v11 + 4 * a2 + 64), a2, v22);
    v9 += result;
    int16x8_t v33 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v32 = 0;
  int16x8_t v33 = a4 + 7;
  if (!v22)
  {
LABEL_62:
    *int16x8_t v33 = 0;
    return result;
  }
LABEL_58:
  if (!v31) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)14,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (uint32x4_t *)((char *)v11 + 6 * a2 + 64), a2, v22);
}

uint64_t AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, unsigned int a5)
{
  unint64_t v5 = a4[2];
  unint64_t v6 = *a4;
  unint64_t v7 = *a4 + 36;
  if (v5) {
    BOOL v8 = v5 >= v7;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    unint64_t v9 = v6 >> 6;
    unint64_t v10 = *a4 & 0x3F;
    unint64_t v11 = a4[1];
    uint64_t v12 = *(void *)(v11 + 8 * (v6 >> 6)) >> v6;
    if (v10 >= 0x1D) {
      v12 |= *(void *)(v11 + 8 * v9 + 8) << -(char)v10;
    }
    *a4 = v7;
    uint64_t v13 = v12 & 0xFFFFFFFFFLL;
  }
  else
  {
    uint64_t v13 = 0;
    *((unsigned char *)a4 + 24) = 1;
  }
  *(_WORD *)a1 = v13 & 0x1F;
  *(_WORD *)(a1 + 2) = (v13 >> 5) & 0x1F;
  *(_WORD *)(a1 + 4) = (v13 >> 10) & 0x1F;
  *(_WORD *)(a1 + 6) = (v13 >> 15) & 0x1F;
  *(_WORD *)a2 = ((v13 >> 20) & 0xF) + 1;
  *(_WORD *)(a2 + 2) = (BYTE3(v13) & 0xF) + 1;
  *(_WORD *)(a2 + 4) = (v13 >> 28) + 1;
  *(_WORD *)(a2 + 6) = WORD2(v13) + 1;
  unint64_t v14 = a4[2];
  unint64_t v15 = *a4;
  unint64_t v16 = *a4 + 40;
  if (v14 && v14 < v16)
  {
    unint64_t v17 = 0;
    *((unsigned char *)a4 + 24) = 1;
  }
  else
  {
    unint64_t v18 = v15 >> 6;
    unint64_t v19 = *a4 & 0x3F;
    unint64_t v20 = a4[1];
    uint64_t v21 = *(void *)(v20 + 8 * (v15 >> 6)) >> v15;
    if (v19 >= 0x19) {
      v21 |= *(void *)(v20 + 8 * v18 + 8) << -(char)v19;
    }
    *a4 = v16;
    unint64_t v17 = v21 & 0xFFFFFFFFFFLL;
  }
  *(_WORD *)a3 = v17 & 0x3FF;
  *(_WORD *)(a3 + 2) = (v17 >> 10) & 0x3FF;
  *(_WORD *)(a3 + 4) = (v17 >> 20) & 0x3FF;
  *(_WORD *)(a3 + 6) = v17 >> 30;
  float64x2_t v22 = vld1q_dup_f64((const double *)a1);
  *(float64x2_t *)a1 = v22;
  float64x2_t v23 = vld1q_dup_f64((const double *)a2);
  *(float64x2_t *)a2 = v23;
  float64x2_t v24 = vld1q_dup_f64((const double *)a3);
  *(float64x2_t *)a3 = v24;
  return a5 + 1;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(_OWORD *a1, uint64_t a2, uint64_t a3, signed int a4)
{
  if (a4 <= 158)
  {
    if (!a4)
    {
      uint64_t result = 0;
      a1[2] = 0u;
      a1[3] = 0u;
      *a1 = 0u;
      a1[1] = 0u;
      int8x16_t v32 = (_OWORD *)((char *)a1 + a2);
      v32[2] = 0u;
      v32[3] = 0u;
      *int8x16_t v32 = 0u;
      v32[1] = 0u;
      int16x8_t v33 = (_OWORD *)((char *)a1 + 2 * a2);
      v33[2] = 0u;
      v33[3] = 0u;
      *int16x8_t v33 = 0u;
      v33[1] = 0u;
      int16x8_t v34 = (_OWORD *)((char *)a1 + 2 * a2 + a2);
      v34[2] = 0u;
      v34[3] = 0u;
      *int16x8_t v34 = 0u;
      v34[1] = 0u;
      return result;
    }
    if (a4 == 4)
    {
      uint64x2_t v7 = (uint64x2_t)vld1q_dup_f64((const double *)a3);
      int8x16_t v8 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v7, (uint64x2_t)xmmword_242EA7AE0), (int8x16_t)xmmword_242EA7B10), vandq_s8((int8x16_t)vshlq_u64(v7, (uint64x2_t)xmmword_242EA7AF0), (int8x16_t)xmmword_242EA7B00));
      int64x2_t v9 = vdupq_n_s64(*(void *)&vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)));
      *a1 = v9;
      a1[1] = v9;
      a1[2] = v9;
      a1[3] = v9;
      unint64_t v10 = (int64x2_t *)((char *)a1 + a2);
      *unint64_t v10 = v9;
      v10[1] = v9;
      v10[2] = v9;
      v10[3] = v9;
      unint64_t v11 = (int64x2_t *)((char *)a1 + 2 * a2);
      *unint64_t v11 = v9;
      v11[1] = v9;
      v11[2] = v9;
      v11[3] = v9;
      uint64_t v12 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
      *uint64_t v12 = v9;
      v12[1] = v9;
      v12[2] = v9;
      v12[3] = v9;
      return 5;
    }
LABEL_11:
    unsigned __int8 v603 = 0;
    unint64_t v600 = 8 * (a3 & 7);
    unint64_t v601 = a3 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v602 = v600 | 0x500;
    uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v613, (uint64_t)v618, (uint64_t)&v612, &v600, a4);
    v58.i64[0] = 0x3000300030003;
    v58.i64[1] = 0x3000300030003;
    int8x16_t v59 = v613;
    int16x8_t v60 = (int16x8_t)vandq_s8(v613, v58);
    int8x16_t v61 = vbicq_s8(v618[0], (int8x16_t)vceqq_s16(v60, (int16x8_t)v58));
    v618[0] = v61;
    int16x8_t v614 = (int16x8_t)v61;
    int16x8_t v615 = (int16x8_t)v61;
    int16x8_t v616 = (int16x8_t)v61;
    int16x8_t v617 = (int16x8_t)v61;
    v62.i64[0] = 0x202020202020202;
    v62.i64[1] = 0x202020202020202;
    int8x16_t v63 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v613.i8, (int16x4_t)0x4000400040004)), v62);
    unint64_t v64 = v600;
    if (vmaxvq_s8(v63) < 1)
    {
      v236.i64[0] = -1;
      v236.i64[1] = -1;
      v237.i64[0] = -1;
      v237.i64[1] = -1;
      v238.i64[0] = -1;
      v238.i64[1] = -1;
      v239.i64[0] = -1;
      v239.i64[1] = -1;
    }
    else
    {
      int8x16_t v65 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v63, v63));
      int8x16_t v66 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v65, (int16x8_t)v65));
      unint64_t v67 = vpaddq_s32((int32x4_t)v66, (int32x4_t)v66).u64[0];
      v68.i64[0] = v67;
      v68.i64[1] = HIDWORD(v67);
      int64x2_t v69 = v68;
      unint64_t v70 = vaddvq_s64(v68);
      unint64_t v71 = v70;
      unint64_t v72 = v600 + v70;
      if (v602) {
        BOOL v73 = v602 >= v72;
      }
      else {
        BOOL v73 = 1;
      }
      int v74 = !v73;
      if (v70 <= 0x80 && v74 == 0)
      {
        v57.i64[0] = 63;
        int16x8_t v240 = (int64x2_t *)(v601 + 8 * (v600 >> 6));
        int64x2_t v241 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v600, v57).i64[0], 0), vzip1q_s64((int64x2_t)0, v69));
        int8x16_t v76 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v240, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v241)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v240->i64[0], 0), (uint64x2_t)vnegq_s64(v241)));
        if ((v600 & 0x3F) + v71 >= 0x81) {
          int8x16_t v76 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v240[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v241)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v240[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v241))), v76);
        }
        unint64_t v600 = v72;
        unint64_t v64 = v72;
      }
      else
      {
        unsigned __int8 v603 = 1;
        int8x16_t v76 = 0uLL;
      }
      int32x2_t v242 = vzip1_s32(*(int32x2_t *)v66.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL));
      v243.i64[0] = v242.u32[0];
      v243.i64[1] = v242.u32[1];
      int64x2_t v244 = (int64x2_t)vshlq_u64((uint64x2_t)v76, (uint64x2_t)vnegq_s64(v243));
      *(int32x2_t *)v76.i8 = vmovn_s64((int64x2_t)v76);
      *(int32x2_t *)v244.i8 = vmovn_s64(v244);
      int16x8_t v245 = (int16x8_t)vzip1q_s32((int32x4_t)v76, (int32x4_t)v244);
      int16x8_t v246 = (int16x8_t)vshlq_u32((uint32x4_t)v245, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v65.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))));
      *(int16x4_t *)v245.i8 = vmovn_s32((int32x4_t)v245);
      *(int16x4_t *)v246.i8 = vmovn_s32((int32x4_t)v246);
      int8x16_t v247 = (int8x16_t)vzip1q_s16(v245, v246);
      int8x16_t v248 = (int8x16_t)vshlq_u16((uint16x8_t)v247, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v63.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL)))));
      *(int8x8_t *)v247.i8 = vmovn_s16((int16x8_t)v247);
      *(int8x8_t *)v248.i8 = vmovn_s16((int16x8_t)v248);
      int8x16_t v249 = vzip1q_s8(v247, v248);
      v248.i64[0] = 0x101010101010101;
      v248.i64[1] = 0x101010101010101;
      int8x16_t v250 = vshlq_s8(v248, v63);
      v248.i64[0] = -1;
      v248.i64[1] = -1;
      int32x4_t v251 = (int32x4_t)vqtbl1q_s8(vandq_s8(v249, vaddq_s8(v250, v248)), (int8x16_t)xmmword_242EA7560);
      *(int32x2_t *)v249.i8 = vdup_lane_s32(*(int32x2_t *)v251.i8, 0);
      *(int32x2_t *)v248.i8 = vdup_lane_s32(*(int32x2_t *)v251.i8, 1);
      int8x8_t v252 = (int8x8_t)vdupq_laneq_s32(v251, 2).u64[0];
      v251.i64[0] = vdupq_laneq_s32(v251, 3).u64[0];
      int16x8_t v614 = vsubw_s8(v614, *(int8x8_t *)v249.i8);
      int16x8_t v615 = vsubw_s8(v615, *(int8x8_t *)v248.i8);
      int16x8_t v616 = vsubw_s8(v616, v252);
      int16x8_t v617 = vsubw_s8(v617, *(int8x8_t *)v251.i8);
      int16x8_t v239 = vmovl_s8(vceqz_s8(*(int8x8_t *)v249.i8));
      int16x8_t v238 = vmovl_s8(vceqz_s8(*(int8x8_t *)v248.i8));
      int16x8_t v237 = vmovl_s8(vceqz_s8(v252));
      int16x8_t v236 = vmovl_s8(vceqz_s8(*(int8x8_t *)v251.i8));
    }
    v253.i64[0] = 0x8000800080008;
    v253.i64[1] = 0x8000800080008;
    int8x16_t v254 = 0uLL;
    int8x16_t v255 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v613, v253), (int8x16_t)0, 8uLL), v61);
    int8x16_t v256 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v255, (int16x8_t)v255));
    unint64_t v257 = vpaddq_s32((int32x4_t)v256, (int32x4_t)v256).u64[0];
    v258.i64[0] = v257;
    v258.i64[1] = HIDWORD(v257);
    int64x2_t v259 = v258;
    unint64_t v260 = vaddvq_s64(v258);
    if (v602) {
      BOOL v261 = v602 >= v64 + v260;
    }
    else {
      BOOL v261 = 1;
    }
    int v262 = !v261;
    if (v260 <= 0x80 && v262 == 0)
    {
      int64x2_t v264 = vaddq_s64(vdupq_n_s64(v64 & 0x3F), vzip1q_s64((int64x2_t)0, v259));
      int16x8_t v265 = (int64x2_t *)(v601 + 8 * (v64 >> 6));
      int8x16_t v254 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v265, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v264)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v265->i64[0], 0), (uint64x2_t)vnegq_s64(v264)));
      if ((v64 & 0x3F) + v260 >= 0x81) {
        int8x16_t v254 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v265[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v264)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v265[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v264))), v254);
      }
      v64 += v260;
    }
    else
    {
      unsigned __int8 v603 = 1;
    }
    int v266 = v613.i8[0] & 3;
    if (v266 != 2) {
      goto LABEL_84;
    }
    unint64_t v267 = v64 + 8;
    if (v602)
    {
      if (v602 < v267)
      {
        unsigned __int8 v603 = 1;
LABEL_83:
        unsigned __int8 v603 = 1;
        goto LABEL_84;
      }
      unint64_t v268 = v64 + 16;
      v64 += 8;
      if (v602 < v268) {
        goto LABEL_83;
      }
      unint64_t v267 = v64;
    }
    unint64_t v64 = v267 + 8;
LABEL_84:
    int8x16_t v269 = 0uLL;
    int8x16_t v270 = vextq_s8((int8x16_t)0, (int8x16_t)v614, 8uLL);
    int8x16_t v271 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v270, (int16x8_t)v270));
    unint64_t v272 = vpaddq_s32((int32x4_t)v271, (int32x4_t)v271).u64[0];
    v273.i64[0] = v272;
    v273.i64[1] = HIDWORD(v272);
    int64x2_t v274 = v273;
    unint64_t v275 = vaddvq_s64(v273);
    unint64_t v276 = v64 + v275;
    if (v602) {
      BOOL v277 = v602 >= v276;
    }
    else {
      BOOL v277 = 1;
    }
    int v278 = !v277;
    if (v275 > 0x80 || v278)
    {
      int v283 = 1;
      unint64_t v281 = v601;
    }
    else
    {
      unint64_t v279 = v64 & 0x3F;
      int64x2_t v280 = vaddq_s64(vdupq_n_s64(v279), vzip1q_s64((int64x2_t)0, v274));
      unint64_t v281 = v601;
      int16x8_t v282 = (int64x2_t *)(v601 + 8 * (v64 >> 6));
      int8x16_t v269 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v282, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v280)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v282->i64[0], 0), (uint64x2_t)vnegq_s64(v280)));
      if (v279 + v275 >= 0x81) {
        int8x16_t v269 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v282[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v280)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v282[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v280))), v269);
      }
      int v283 = v603;
      unint64_t v64 = v276;
    }
    v284.i64[0] = 0xF000F000F000FLL;
    v284.i64[1] = 0xF000F000F000FLL;
    v285.i64[0] = 0x10001000100010;
    v285.i64[1] = 0x10001000100010;
    int8x16_t v286 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v614, v614));
    unint64_t v287 = vpaddq_s32((int32x4_t)v286, (int32x4_t)v286).u64[0];
    v288.i64[0] = v287;
    v288.i64[1] = HIDWORD(v287);
    int64x2_t v289 = v288;
    unint64_t v290 = vaddvq_s64(v288);
    unint64_t v291 = v290;
    unint64_t v292 = v64 + v290;
    if (v602) {
      BOOL v293 = v602 >= v292;
    }
    else {
      BOOL v293 = 1;
    }
    char v294 = !v293;
    int8x16_t v295 = 0uLL;
    if (v290 > 0x80 || (v294 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v292 = v64;
      int8x16_t v299 = 0uLL;
    }
    else
    {
      unint64_t v296 = v64 & 0x3F;
      int64x2_t v297 = vaddq_s64(vdupq_n_s64(v296), vzip1q_s64((int64x2_t)0, v289));
      int8x16_t v298 = (int64x2_t *)(v281 + 8 * (v64 >> 6));
      int8x16_t v299 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v298, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v297)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v298->i64[0], 0), (uint64x2_t)vnegq_s64(v297)));
      if (v296 + v291 >= 0x81) {
        int8x16_t v299 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v298[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v297)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v298[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v297))), v299);
      }
    }
    int32x2_t v300 = vzip1_s32(*(int32x2_t *)v286.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v286, v286, 8uLL));
    v301.i64[0] = v300.u32[0];
    v301.i64[1] = v300.u32[1];
    uint64x2_t v302 = (uint64x2_t)vnegq_s64(v301);
    int64x2_t v303 = (int64x2_t)vshlq_u64((uint64x2_t)v299, v302);
    *(int32x2_t *)v299.i8 = vmovn_s64((int64x2_t)v299);
    *(int32x2_t *)v303.i8 = vmovn_s64(v303);
    int16x8_t v304 = (int16x8_t)vzip1q_s32((int32x4_t)v299, (int32x4_t)v303);
    uint32x4_t v305 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v614.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v614, (int8x16_t)v614, 8uLL))));
    int16x8_t v306 = (int16x8_t)vshlq_u32((uint32x4_t)v304, v305);
    *(int16x4_t *)v304.i8 = vmovn_s32((int32x4_t)v304);
    *(int16x4_t *)v306.i8 = vmovn_s32((int32x4_t)v306);
    int16x8_t v307 = vzip1q_s16(v304, v306);
    int16x8_t v308 = vaddq_s16(v614, v284);
    int16x8_t v309 = vsubq_s16(v285, v614);
    int16x8_t v310 = vshlq_s16(vshlq_s16(v307, v309), v308);
    int16x8_t v605 = v310;
    unint64_t v311 = v292 + v291;
    if (v602) {
      BOOL v312 = v602 >= v311;
    }
    else {
      BOOL v312 = 1;
    }
    char v313 = !v312;
    if (v291 > 0x80 || (v313 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v311 = v292;
    }
    else
    {
      unint64_t v314 = v292 & 0x3F;
      int64x2_t v315 = vaddq_s64(vdupq_n_s64(v314), vzip1q_s64((int64x2_t)0, v289));
      int16x8_t v316 = (int64x2_t *)(v281 + 8 * (v292 >> 6));
      int8x16_t v295 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v316, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v315)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v316->i64[0], 0), (uint64x2_t)vnegq_s64(v315)));
      if (v314 + v291 >= 0x81) {
        int8x16_t v295 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v316[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v315)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v316[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v315))), v295);
      }
    }
    int64x2_t v317 = (int64x2_t)vshlq_u64((uint64x2_t)v295, v302);
    *(int32x2_t *)v295.i8 = vmovn_s64((int64x2_t)v295);
    *(int32x2_t *)v317.i8 = vmovn_s64(v317);
    int16x8_t v318 = (int16x8_t)vzip1q_s32((int32x4_t)v295, (int32x4_t)v317);
    int16x8_t v319 = (int16x8_t)vshlq_u32((uint32x4_t)v318, v305);
    *(int16x4_t *)v318.i8 = vmovn_s32((int32x4_t)v318);
    *(int16x4_t *)v319.i8 = vmovn_s32((int32x4_t)v319);
    int16x8_t v320 = vshlq_s16(vshlq_s16(vzip1q_s16(v318, v319), v309), v308);
    int16x8_t v606 = v320;
    unint64_t v321 = v311 + v291;
    if (v602) {
      BOOL v322 = v602 >= v321;
    }
    else {
      BOOL v322 = 1;
    }
    char v323 = !v322;
    int8x16_t v324 = 0uLL;
    if (v291 > 0x80 || (v323 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v321 = v311;
      int8x16_t v328 = 0uLL;
    }
    else
    {
      unint64_t v325 = v311 & 0x3F;
      int64x2_t v326 = vaddq_s64(vdupq_n_s64(v325), vzip1q_s64((int64x2_t)0, v289));
      int32x4_t v327 = (int64x2_t *)(v281 + 8 * (v311 >> 6));
      int8x16_t v328 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v327, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327->i64[0], 0), (uint64x2_t)vnegq_s64(v326)));
      if (v325 + v291 >= 0x81) {
        int8x16_t v328 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v327[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v326))), v328);
      }
    }
    int64x2_t v329 = (int64x2_t)vshlq_u64((uint64x2_t)v328, v302);
    *(int32x2_t *)v328.i8 = vmovn_s64((int64x2_t)v328);
    *(int32x2_t *)v329.i8 = vmovn_s64(v329);
    int16x8_t v330 = (int16x8_t)vzip1q_s32((int32x4_t)v328, (int32x4_t)v329);
    int16x8_t v331 = (int16x8_t)vshlq_u32((uint32x4_t)v330, v305);
    *(int16x4_t *)v330.i8 = vmovn_s32((int32x4_t)v330);
    *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
    int16x8_t v332 = vshlq_s16(vshlq_s16(vzip1q_s16(v330, v331), v309), v308);
    int16x8_t v607 = v332;
    int8x16_t v333 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v615, v615));
    v330.i64[0] = vpaddq_s32((int32x4_t)v333, (int32x4_t)v333).u64[0];
    v334.i64[0] = v330.u32[0];
    v334.i64[1] = v330.u32[1];
    int64x2_t v335 = v334;
    unint64_t v336 = vaddvq_s64(v334);
    unint64_t v337 = v336;
    unint64_t v338 = v321 + v336;
    if (v602) {
      BOOL v339 = v602 >= v338;
    }
    else {
      BOOL v339 = 1;
    }
    char v340 = !v339;
    if (v336 > 0x80 || (v340 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v338 = v321;
    }
    else
    {
      unint64_t v341 = v321 & 0x3F;
      int64x2_t v342 = vaddq_s64(vdupq_n_s64(v341), vzip1q_s64((int64x2_t)0, v335));
      int16x8_t v343 = (int64x2_t *)(v281 + 8 * (v321 >> 6));
      int8x16_t v324 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v343, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v342)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v343->i64[0], 0), (uint64x2_t)vnegq_s64(v342)));
      if (v341 + v337 >= 0x81) {
        int8x16_t v324 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v343[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v342)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v343[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v342))), v324);
      }
    }
    unint64_t v344 = v338 + v337;
    if (v602) {
      BOOL v345 = v602 >= v344;
    }
    else {
      BOOL v345 = 1;
    }
    char v346 = !v345;
    int8x16_t v347 = 0uLL;
    if (v337 > 0x80 || (v346 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v344 = v338;
      int8x16_t v351 = 0uLL;
    }
    else
    {
      unint64_t v348 = v338 & 0x3F;
      int64x2_t v349 = vaddq_s64(vdupq_n_s64(v348), vzip1q_s64((int64x2_t)0, v335));
      uint64x2_t v350 = (int64x2_t *)(v281 + 8 * (v338 >> 6));
      int8x16_t v351 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v350, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v349)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v350->i64[0], 0), (uint64x2_t)vnegq_s64(v349)));
      if (v348 + v337 >= 0x81) {
        int8x16_t v351 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v350[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v349)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v350[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v349))), v351);
      }
    }
    unint64_t v352 = v344 + v337;
    if (v602) {
      BOOL v353 = v602 >= v352;
    }
    else {
      BOOL v353 = 1;
    }
    char v354 = !v353;
    int8x16_t v596 = (int8x16_t)v239;
    if (v337 > 0x80 || (v354 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v352 = v344;
    }
    else
    {
      int64x2_t v355 = vaddq_s64(vdupq_n_s64(v344 & 0x3F), vzip1q_s64((int64x2_t)0, v335));
      unint64_t v356 = (int64x2_t *)(v281 + 8 * (v344 >> 6));
      int8x16_t v347 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v356, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v355)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v356->i64[0], 0), (uint64x2_t)vnegq_s64(v355)));
      if ((v344 & 0x3F) + v337 >= 0x81) {
        int8x16_t v347 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v356[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v355)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v356[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v355))), v347);
      }
    }
    unint64_t v357 = v352 + v337;
    if (v602) {
      BOOL v358 = v602 >= v357;
    }
    else {
      BOOL v358 = 1;
    }
    char v359 = !v358;
    int8x16_t v360 = 0uLL;
    int8x16_t v597 = (int8x16_t)v236;
    int16x8_t v599 = v60;
    int8x16_t v594 = (int8x16_t)v238;
    if (v337 > 0x80 || (v359 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v357 = v352;
      int8x16_t v363 = 0uLL;
    }
    else
    {
      int64x2_t v361 = vaddq_s64(vdupq_n_s64(v352 & 0x3F), vzip1q_s64((int64x2_t)0, v335));
      uint16x8_t v362 = (int64x2_t *)(v281 + 8 * (v352 >> 6));
      int8x16_t v363 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v362, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v361)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v362->i64[0], 0), (uint64x2_t)vnegq_s64(v361)));
      if ((v352 & 0x3F) + v337 >= 0x81) {
        int8x16_t v363 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v362[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v361)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v362[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v361))), v363);
      }
    }
    int8x16_t v364 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v616, v616));
    unint64_t v365 = vpaddq_s32((int32x4_t)v364, (int32x4_t)v364).u64[0];
    v366.i64[0] = v365;
    v366.i64[1] = HIDWORD(v365);
    int64x2_t v367 = v366;
    unint64_t v368 = vaddvq_s64(v366);
    unint64_t v369 = v368;
    unint64_t v370 = v357 + v368;
    if (v602) {
      BOOL v371 = v602 >= v370;
    }
    else {
      BOOL v371 = 1;
    }
    char v372 = !v371;
    int8x16_t v595 = (int8x16_t)v237;
    if (v368 > 0x80 || (v372 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v370 = v357;
    }
    else
    {
      unint64_t v373 = v357 & 0x3F;
      int64x2_t v374 = vaddq_s64(vdupq_n_s64(v373), vzip1q_s64((int64x2_t)0, v367));
      uint64_t v375 = (int64x2_t *)(v281 + 8 * (v357 >> 6));
      int8x16_t v360 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v375, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v374)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v375->i64[0], 0), (uint64x2_t)vnegq_s64(v374)));
      if (v373 + v369 >= 0x81) {
        int8x16_t v360 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v375[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v374)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v375[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v374))), v360);
      }
    }
    unint64_t v376 = v370 + v369;
    if (v602) {
      BOOL v377 = v602 >= v376;
    }
    else {
      BOOL v377 = 1;
    }
    char v378 = !v377;
    int8x16_t v379 = 0uLL;
    if (v369 > 0x80 || (v378 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v376 = v370;
      int8x16_t v383 = 0uLL;
    }
    else
    {
      unint64_t v380 = v370 & 0x3F;
      int64x2_t v381 = vaddq_s64(vdupq_n_s64(v380), vzip1q_s64((int64x2_t)0, v367));
      int32x4_t v382 = (int64x2_t *)(v281 + 8 * (v370 >> 6));
      int8x16_t v383 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v382, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v381)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v382->i64[0], 0), (uint64x2_t)vnegq_s64(v381)));
      if (v380 + v369 >= 0x81) {
        int8x16_t v383 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v382[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v381)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v382[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v381))), v383);
      }
    }
    unint64_t v384 = v376 + v369;
    if (v602) {
      BOOL v385 = v602 >= v384;
    }
    else {
      BOOL v385 = 1;
    }
    char v386 = !v385;
    if (v369 > 0x80 || (v386 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v384 = v376;
    }
    else
    {
      unint64_t v387 = v376 & 0x3F;
      int64x2_t v388 = vaddq_s64(vdupq_n_s64(v387), vzip1q_s64((int64x2_t)0, v367));
      int64x2_t v389 = (int64x2_t *)(v281 + 8 * (v376 >> 6));
      int8x16_t v379 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v389, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v388)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v389->i64[0], 0), (uint64x2_t)vnegq_s64(v388)));
      if (v387 + v369 >= 0x81) {
        int8x16_t v379 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v389[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v388)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v389[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v388))), v379);
      }
    }
    unint64_t v390 = v384 + v369;
    if (v602) {
      BOOL v391 = v602 >= v390;
    }
    else {
      BOOL v391 = 1;
    }
    char v392 = !v391;
    int8x16_t v393 = 0uLL;
    if (v369 > 0x80 || (v392 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v390 = v384;
      int8x16_t v397 = 0uLL;
    }
    else
    {
      unint64_t v394 = v384 & 0x3F;
      int64x2_t v395 = vaddq_s64(vdupq_n_s64(v394), vzip1q_s64((int64x2_t)0, v367));
      uint16x8_t v396 = (int64x2_t *)(v281 + 8 * (v384 >> 6));
      int8x16_t v397 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v396, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v395)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v396->i64[0], 0), (uint64x2_t)vnegq_s64(v395)));
      if (v394 + v369 >= 0x81) {
        int8x16_t v397 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v396[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v395)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v396[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v395))), v397);
      }
    }
    int8x16_t v398 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v617, v617));
    unint64_t v399 = vpaddq_s32((int32x4_t)v398, (int32x4_t)v398).u64[0];
    v400.i64[0] = v399;
    v400.i64[1] = HIDWORD(v399);
    int64x2_t v401 = v400;
    unint64_t v402 = vaddvq_s64(v400);
    unint64_t v403 = v402;
    unint64_t v404 = v390 + v402;
    if (v602) {
      BOOL v405 = v602 >= v404;
    }
    else {
      BOOL v405 = 1;
    }
    char v406 = !v405;
    if (v402 > 0x80 || (v406 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v404 = v390;
    }
    else
    {
      unint64_t v407 = v390 & 0x3F;
      int64x2_t v408 = vaddq_s64(vdupq_n_s64(v407), vzip1q_s64((int64x2_t)0, v401));
      unint64_t v409 = (int64x2_t *)(v281 + 8 * (v390 >> 6));
      int8x16_t v393 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v409, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v408)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v409->i64[0], 0), (uint64x2_t)vnegq_s64(v408)));
      if (v407 + v403 >= 0x81) {
        int8x16_t v393 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v409[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v408)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v409[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v408))), v393);
      }
    }
    unint64_t v410 = v404 + v403;
    if (v602) {
      BOOL v411 = v602 >= v410;
    }
    else {
      BOOL v411 = 1;
    }
    char v412 = !v411;
    int8x16_t v413 = 0uLL;
    if (v403 > 0x80 || (v412 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v410 = v404;
      int8x16_t v417 = 0uLL;
    }
    else
    {
      unint64_t v414 = v404 & 0x3F;
      int64x2_t v415 = vaddq_s64(vdupq_n_s64(v414), vzip1q_s64((int64x2_t)0, v401));
      int32x4_t v416 = (int64x2_t *)(v281 + 8 * (v404 >> 6));
      int8x16_t v417 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v416, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v415)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v416->i64[0], 0), (uint64x2_t)vnegq_s64(v415)));
      if (v414 + v403 >= 0x81) {
        int8x16_t v417 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v416[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v415)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v416[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v415))), v417);
      }
    }
    unint64_t v418 = v410 + v403;
    if (v602) {
      BOOL v419 = v602 >= v418;
    }
    else {
      BOOL v419 = 1;
    }
    char v420 = !v419;
    if (v403 > 0x80 || (v420 & 1) != 0)
    {
      int v283 = 1;
      unint64_t v418 = v410;
    }
    else
    {
      unint64_t v421 = v410 & 0x3F;
      int64x2_t v422 = vaddq_s64(vdupq_n_s64(v421), vzip1q_s64((int64x2_t)0, v401));
      int64x2_t v423 = (int64x2_t *)(v281 + 8 * (v410 >> 6));
      int8x16_t v413 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v423, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v422)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v423->i64[0], 0), (uint64x2_t)vnegq_s64(v422)));
      if (v421 + v403 >= 0x81) {
        int8x16_t v413 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v423[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v422)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v423[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v422))), v413);
      }
    }
    unint64_t v424 = v418 + v403;
    if (v602) {
      BOOL v425 = v602 >= v424;
    }
    else {
      BOOL v425 = 1;
    }
    char v426 = !v425;
    if (v403 > 0x80 || (v426 & 1) != 0) {
      goto LABEL_265;
    }
    int64x2_t v427 = vaddq_s64(vdupq_n_s64(v418 & 0x3F), vzip1q_s64((int64x2_t)0, v401));
    uint16x8_t v428 = (int64x2_t *)(v281 + 8 * (v418 >> 6));
    int64x2_t v429 = vdupq_n_s64(0x40uLL);
    int8x16_t v430 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v428, 1), (uint64x2_t)vsubq_s64(v429, v427)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v428->i64[0], 0), (uint64x2_t)vnegq_s64(v427)));
    if ((v418 & 0x3F) + v403 >= 0x81)
    {
      int64x2_t v429 = vdupq_n_s64(0xC0uLL);
      int8x16_t v430 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v428[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v427)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v428[1], 1), (uint64x2_t)vsubq_s64(v429, v427))), v430);
    }
    if (v283 || v602 + 8 * result - v424 - 1280 >= 9 || v266 == 2)
    {
LABEL_265:
      uint64_t result = 0;
      int64x2_t v431 = vdupq_n_s64(0xFFFFF003FFuLL);
      *a1 = v431;
      a1[1] = v431;
      a1[2] = v431;
      a1[3] = v431;
      int32x4_t v432 = (int64x2_t *)((char *)a1 + a2);
      *int32x4_t v432 = v431;
      v432[1] = v431;
      v432[2] = v431;
      v432[3] = v431;
      int32x4_t v433 = (int64x2_t *)((char *)a1 + 2 * a2);
      *int32x4_t v433 = v431;
      v433[1] = v431;
      v433[2] = v431;
      v433[3] = v431;
      int64x2_t v434 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
      *int64x2_t v434 = v431;
      v434[1] = v431;
      v434[2] = v431;
      v434[3] = v431;
    }
    else
    {
      int32x2_t v435 = vzip1_s32(*(int32x2_t *)v256.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v256, v256, 8uLL));
      int32x2_t v436 = vzip1_s32(*(int32x2_t *)v271.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v271, v271, 8uLL));
      *(int32x2_t *)v256.i8 = vzip1_s32(*(int32x2_t *)v333.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v333, v333, 8uLL));
      int32x2_t v437 = vzip1_s32(*(int32x2_t *)v364.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v364, v364, 8uLL));
      int32x4_t v438 = (int32x4_t)vextq_s8(v398, v398, 8uLL);
      int32x2_t v439 = vzip1_s32(*(int32x2_t *)v398.i8, *(int32x2_t *)v438.i8);
      v440.i64[0] = v435.u32[0];
      v440.i64[1] = v435.u32[1];
      int64x2_t v441 = (int64x2_t)vshlq_u64((uint64x2_t)v254, (uint64x2_t)vnegq_s64(v440));
      *(int32x2_t *)v254.i8 = vmovn_s64((int64x2_t)v254);
      *(int32x2_t *)v441.i8 = vmovn_s64(v441);
      int16x8_t v442 = (int16x8_t)vzip1q_s32((int32x4_t)v254, (int32x4_t)v441);
      v440.i64[0] = v436.u32[0];
      v440.i64[1] = v436.u32[1];
      int64x2_t v443 = (int64x2_t)vshlq_u64((uint64x2_t)v269, (uint64x2_t)vnegq_s64(v440));
      *(int32x2_t *)v438.i8 = vmovn_s64((int64x2_t)v269);
      *(int32x2_t *)v443.i8 = vmovn_s64(v443);
      int32x4_t v444 = vzip1q_s32(v438, (int32x4_t)v443);
      v440.i64[0] = v256.u32[0];
      v440.i64[1] = v256.u32[1];
      int32x4_t v445 = (int32x4_t)vnegq_s64(v440);
      int64x2_t v446 = (int64x2_t)vshlq_u64((uint64x2_t)v324, (uint64x2_t)v445);
      *(int32x2_t *)v429.i8 = vmovn_s64((int64x2_t)v324);
      *(int32x2_t *)v446.i8 = vmovn_s64(v446);
      int16x8_t v447 = (int16x8_t)vzip1q_s32((int32x4_t)v429, (int32x4_t)v446);
      int64x2_t v448 = (int64x2_t)vshlq_u64((uint64x2_t)v351, (uint64x2_t)v445);
      *(int32x2_t *)v256.i8 = vmovn_s64((int64x2_t)v351);
      *(int32x2_t *)v448.i8 = vmovn_s64(v448);
      int16x8_t v449 = (int16x8_t)vzip1q_s32((int32x4_t)v256, (int32x4_t)v448);
      int64x2_t v450 = (int64x2_t)vshlq_u64((uint64x2_t)v347, (uint64x2_t)v445);
      *(int32x2_t *)v256.i8 = vmovn_s64((int64x2_t)v347);
      *(int32x2_t *)v450.i8 = vmovn_s64(v450);
      int16x8_t v451 = (int16x8_t)vzip1q_s32((int32x4_t)v256, (int32x4_t)v450);
      v440.i64[0] = v437.u32[0];
      v440.i64[1] = v437.u32[1];
      int64x2_t v452 = v440;
      v440.i64[0] = v439.u32[0];
      v440.i64[1] = v439.u32[1];
      int32x4_t v453 = (int32x4_t)vnegq_s64(v452);
      int64x2_t v454 = (int64x2_t)vshlq_u64((uint64x2_t)v363, (uint64x2_t)v445);
      *(int32x2_t *)v445.i8 = vmovn_s64((int64x2_t)v363);
      *(int32x2_t *)v454.i8 = vmovn_s64(v454);
      int16x8_t v455 = (int16x8_t)vzip1q_s32(v445, (int32x4_t)v454);
      int64x2_t v456 = (int64x2_t)vshlq_u64((uint64x2_t)v360, (uint64x2_t)v453);
      *(int32x2_t *)v445.i8 = vmovn_s64((int64x2_t)v360);
      *(int32x2_t *)v456.i8 = vmovn_s64(v456);
      int16x8_t v457 = (int16x8_t)vzip1q_s32(v445, (int32x4_t)v456);
      int64x2_t v458 = (int64x2_t)vshlq_u64((uint64x2_t)v383, (uint64x2_t)v453);
      *(int32x2_t *)v445.i8 = vmovn_s64((int64x2_t)v383);
      *(int32x2_t *)v458.i8 = vmovn_s64(v458);
      int16x8_t v459 = (int16x8_t)vzip1q_s32(v445, (int32x4_t)v458);
      int64x2_t v460 = (int64x2_t)vshlq_u64((uint64x2_t)v379, (uint64x2_t)v453);
      *(int32x2_t *)v445.i8 = vmovn_s64((int64x2_t)v379);
      *(int32x2_t *)v460.i8 = vmovn_s64(v460);
      int16x8_t v461 = (int16x8_t)vzip1q_s32(v445, (int32x4_t)v460);
      uint64x2_t v462 = (uint64x2_t)vnegq_s64(v440);
      int64x2_t v463 = (int64x2_t)vshlq_u64((uint64x2_t)v397, (uint64x2_t)v453);
      *(int32x2_t *)v445.i8 = vmovn_s64((int64x2_t)v397);
      *(int32x2_t *)v463.i8 = vmovn_s64(v463);
      int16x8_t v464 = (int16x8_t)vzip1q_s32(v445, (int32x4_t)v463);
      int64x2_t v465 = (int64x2_t)vshlq_u64((uint64x2_t)v393, v462);
      *(int32x2_t *)v453.i8 = vmovn_s64((int64x2_t)v393);
      *(int32x2_t *)v465.i8 = vmovn_s64(v465);
      int16x8_t v466 = (int16x8_t)vzip1q_s32(v453, (int32x4_t)v465);
      int64x2_t v467 = (int64x2_t)vshlq_u64((uint64x2_t)v417, v462);
      *(int32x2_t *)v417.i8 = vmovn_s64((int64x2_t)v417);
      *(int32x2_t *)v467.i8 = vmovn_s64(v467);
      int16x8_t v468 = (int16x8_t)vzip1q_s32((int32x4_t)v417, (int32x4_t)v467);
      int64x2_t v469 = (int64x2_t)vshlq_u64((uint64x2_t)v413, v462);
      *(int32x2_t *)v467.i8 = vmovn_s64((int64x2_t)v413);
      *(int32x2_t *)v469.i8 = vmovn_s64(v469);
      int16x8_t v470 = (int16x8_t)vzip1q_s32((int32x4_t)v467, (int32x4_t)v469);
      int16x8_t v471 = (int16x8_t)vshlq_u32((uint32x4_t)v442, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v255.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v255, v255, 8uLL)))));
      *(int16x4_t *)v442.i8 = vmovn_s32((int32x4_t)v442);
      *(int16x4_t *)v471.i8 = vmovn_s32((int32x4_t)v471);
      int16x8_t v472 = vzip1q_s16(v442, v471);
      uint32x4_t v473 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v615.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v615, (int8x16_t)v615, 8uLL))));
      int16x8_t v474 = (int16x8_t)vshlq_u32((uint32x4_t)v444, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v270.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v270, v270, 8uLL)))));
      *(int16x4_t *)v363.i8 = vmovn_s32(v444);
      *(int16x4_t *)v474.i8 = vmovn_s32((int32x4_t)v474);
      int16x8_t v475 = vzip1q_s16((int16x8_t)v363, v474);
      int16x8_t v476 = (int16x8_t)vshlq_u32((uint32x4_t)v447, v473);
      *(int16x4_t *)v447.i8 = vmovn_s32((int32x4_t)v447);
      *(int16x4_t *)v476.i8 = vmovn_s32((int32x4_t)v476);
      int16x8_t v477 = vzip1q_s16(v447, v476);
      int16x8_t v478 = (int16x8_t)vshlq_u32((uint32x4_t)v449, v473);
      *(int16x4_t *)v449.i8 = vmovn_s32((int32x4_t)v449);
      *(int16x4_t *)v478.i8 = vmovn_s32((int32x4_t)v478);
      int16x8_t v479 = vzip1q_s16(v449, v478);
      int16x8_t v480 = (int16x8_t)vshlq_u32((uint32x4_t)v451, v473);
      *(int16x4_t *)v451.i8 = vmovn_s32((int32x4_t)v451);
      *(int16x4_t *)v480.i8 = vmovn_s32((int32x4_t)v480);
      int16x8_t v481 = vzip1q_s16(v451, v480);
      uint32x4_t v482 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v616.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v616, (int8x16_t)v616, 8uLL))));
      int16x8_t v483 = (int16x8_t)vshlq_u32((uint32x4_t)v455, v473);
      *(int16x4_t *)v455.i8 = vmovn_s32((int32x4_t)v455);
      *(int16x4_t *)v483.i8 = vmovn_s32((int32x4_t)v483);
      int16x8_t v484 = vzip1q_s16(v455, v483);
      int16x8_t v485 = (int16x8_t)vshlq_u32((uint32x4_t)v457, v482);
      *(int16x4_t *)v457.i8 = vmovn_s32((int32x4_t)v457);
      *(int16x4_t *)v485.i8 = vmovn_s32((int32x4_t)v485);
      int16x8_t v486 = vzip1q_s16(v457, v485);
      int16x8_t v487 = (int16x8_t)vshlq_u32((uint32x4_t)v459, v482);
      *(int16x4_t *)v459.i8 = vmovn_s32((int32x4_t)v459);
      *(int16x4_t *)v487.i8 = vmovn_s32((int32x4_t)v487);
      int16x8_t v488 = vzip1q_s16(v459, v487);
      int16x8_t v489 = (int16x8_t)vshlq_u32((uint32x4_t)v461, v482);
      *(int16x4_t *)v461.i8 = vmovn_s32((int32x4_t)v461);
      *(int16x4_t *)v489.i8 = vmovn_s32((int32x4_t)v489);
      int16x8_t v490 = vzip1q_s16(v461, v489);
      uint32x4_t v491 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v617.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v617, (int8x16_t)v617, 8uLL))));
      int16x8_t v492 = (int16x8_t)vshlq_u32((uint32x4_t)v464, v482);
      *(int16x4_t *)v464.i8 = vmovn_s32((int32x4_t)v464);
      *(int16x4_t *)v492.i8 = vmovn_s32((int32x4_t)v492);
      int16x8_t v493 = vzip1q_s16(v464, v492);
      int16x8_t v494 = (int16x8_t)vshlq_u32((uint32x4_t)v466, v491);
      *(int16x4_t *)v466.i8 = vmovn_s32((int32x4_t)v466);
      *(int16x4_t *)v494.i8 = vmovn_s32((int32x4_t)v494);
      int16x8_t v495 = vzip1q_s16(v466, v494);
      int16x8_t v496 = (int16x8_t)vshlq_u32((uint32x4_t)v468, v491);
      *(int16x4_t *)v468.i8 = vmovn_s32((int32x4_t)v468);
      *(int16x4_t *)v496.i8 = vmovn_s32((int32x4_t)v496);
      int16x8_t v497 = vzip1q_s16(v468, v496);
      int16x8_t v498 = (int16x8_t)vshlq_u32((uint32x4_t)v470, v491);
      *(int16x4_t *)v470.i8 = vmovn_s32((int32x4_t)v470);
      *(int16x4_t *)v498.i8 = vmovn_s32((int32x4_t)v498);
      int16x8_t v499 = vzip1q_s16(v470, v498);
      v498.i64[0] = 0x10001000100010;
      v498.i64[1] = 0x10001000100010;
      int16x8_t v500 = vsubq_s16(v498, (int16x8_t)v255);
      v501.i64[0] = 0xF000F000F000FLL;
      v501.i64[1] = 0xF000F000F000FLL;
      int16x8_t v502 = vaddq_s16((int16x8_t)v255, v501);
      int16x8_t v503 = vshlq_s16(v472, v500);
      v500.i64[0] = 0x10001000100010;
      v500.i64[1] = 0x10001000100010;
      int16x8_t v504 = vsubq_s16(v500, (int16x8_t)v270);
      int16x8_t v505 = vaddq_s16((int16x8_t)v270, v501);
      v501.i64[0] = 0x10001000100010;
      v501.i64[1] = 0x10001000100010;
      int16x8_t v506 = vshlq_s16(v475, v504);
      v504.i64[0] = 0xF000F000F000FLL;
      v504.i64[1] = 0xF000F000F000FLL;
      int16x8_t v507 = vsubq_s16(v501, v615);
      int16x8_t v508 = vaddq_s16(v615, v504);
      v504.i64[0] = 0x10001000100010;
      v504.i64[1] = 0x10001000100010;
      int16x8_t v509 = vshlq_s16(v477, v507);
      int16x8_t v510 = vshlq_s16(v479, v507);
      int16x8_t v511 = vshlq_s16(v481, v507);
      int16x8_t v512 = vshlq_s16(v484, v507);
      v507.i64[0] = 0xF000F000F000FLL;
      v507.i64[1] = 0xF000F000F000FLL;
      int16x8_t v513 = vsubq_s16(v504, v616);
      int16x8_t v514 = vaddq_s16(v616, v507);
      v507.i64[0] = 0x10001000100010;
      v507.i64[1] = 0x10001000100010;
      int16x8_t v515 = vshlq_s16(v486, v513);
      int16x8_t v516 = vshlq_s16(v488, v513);
      int16x8_t v517 = vshlq_s16(v490, v513);
      int16x8_t v518 = vshlq_s16(v493, v513);
      v513.i64[0] = 0xF000F000F000FLL;
      v513.i64[1] = 0xF000F000F000FLL;
      int16x8_t v519 = vsubq_s16(v507, v617);
      int16x8_t v520 = vaddq_s16(v617, v513);
      int8x16_t v521 = (int8x16_t)vshlq_s16(v503, v502);
      int16x8_t v522 = vshlq_s16(v506, v505);
      int16x8_t v523 = vshlq_s16(v509, v508);
      int16x8_t v524 = vshlq_s16(v510, v508);
      int16x8_t v525 = vshlq_s16(v511, v508);
      int16x8_t v526 = vshlq_s16(v512, v508);
      int16x8_t v527 = vshlq_s16(v515, v514);
      int16x8_t v528 = vshlq_s16(v516, v514);
      int16x8_t v529 = vshlq_s16(v517, v514);
      int16x8_t v530 = vshlq_s16(v518, v514);
      int64x2_t v531 = (int64x2_t)vshlq_u64((uint64x2_t)v430, v462);
      *(int32x2_t *)v430.i8 = vmovn_s64((int64x2_t)v430);
      *(int32x2_t *)v531.i8 = vmovn_s64(v531);
      int16x8_t v532 = (int16x8_t)vzip1q_s32((int32x4_t)v430, (int32x4_t)v531);
      int16x8_t v533 = vshlq_s16(vshlq_s16(v495, v519), v520);
      int16x8_t v534 = vshlq_s16(vshlq_s16(v497, v519), v520);
      int16x8_t v535 = vshlq_s16(vshlq_s16(v499, v519), v520);
      int16x8_t v536 = (int16x8_t)vshlq_u32((uint32x4_t)v532, v491);
      *(int16x4_t *)v532.i8 = vmovn_s32((int32x4_t)v532);
      *(int16x4_t *)v536.i8 = vmovn_s32((int32x4_t)v536);
      int16x8_t v537 = vshlq_s16(vshlq_s16(vzip1q_s16(v532, v536), v519), v520);
      int16x8_t v538 = vaddq_s16((int16x8_t)vandq_s8(v521, v596), v522);
      int8x16_t v539 = (int8x16_t)vdupq_lane_s64(v521.i64[0], 0);
      int16x8_t v540 = (int16x8_t)vandq_s8(v594, v539);
      int16x8_t v541 = vsubq_s16(v523, v540);
      int16x8_t v542 = vsubq_s16(v524, v540);
      int16x8_t v543 = vsubq_s16(v525, v540);
      int16x8_t v544 = vsubq_s16(v526, v540);
      int16x8_t v545 = (int16x8_t)vandq_s8(v595, v539);
      int16x8_t v546 = vsubq_s16(v527, v545);
      int16x8_t v547 = vsubq_s16(v528, v545);
      int16x8_t v548 = (int16x8_t)vandq_s8(v596, v539);
      int16x8_t v549 = vsubq_s16(v529, v545);
      int16x8_t v550 = vsubq_s16(v530, v545);
      v551.i64[0] = 0x1000100010001;
      v551.i64[1] = 0x1000100010001;
      int16x8_t v552 = vsubq_s16(v310, v548);
      int16x8_t v553 = vsubq_s16(v320, v548);
      int16x8_t v554 = (int16x8_t)vandq_s8(v597, v539);
      int16x8_t v555 = vsubq_s16(v533, v554);
      int16x8_t v556 = vsubq_s16(v534, v554);
      int16x8_t v557 = vsubq_s16(v535, v554);
      int16x8_t v558 = vsubq_s16(v537, v554);
      int8x16_t v559 = (int8x16_t)vsubq_s16(v332, v548);
      int8x16_t v560 = (int8x16_t)vsubq_s16(v538, v548);
      int16x8_t v604 = v538;
      int8x16_t v608 = (int8x16_t)v555;
      int8x16_t v609 = (int8x16_t)v556;
      int8x16_t v610 = (int8x16_t)v557;
      int8x16_t v611 = (int8x16_t)v558;
      if (vaddvq_s16(vceqq_s16(v599, (int16x8_t)v551)))
      {
        int8x16_t v561 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v613, v551));
        v562.i64[1] = v560.i64[1];
        v562.i64[0] = v559.i64[1];
        v563.i64[0] = v559.i64[0];
        v563.i64[1] = v560.i64[0];
        int16x8_t v564 = (int16x8_t)vbslq_s8(v561, v562, v560);
        int16x8_t v565 = (int16x8_t)vbslq_s8(v561, v563, v559);
        v566.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
        v566.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
        int16x8_t v567 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v552 - 1), v566), v561);
        v621.val[0] = (int8x16_t)vaddq_s16(v564, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v552 - 1), (int8x16_t)xmmword_242EA7710), v561));
        v621.val[1] = (int8x16_t)vaddq_s16(v552, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v552 - 1), (int8x16_t)xmmword_242EA7720), v561));
        v621.val[2] = (int8x16_t)vaddq_s16(v553, v567);
        v621.val[3] = (int8x16_t)vaddq_s16(v565, v567);
        int16x8_t v568 = (int16x8_t)vandq_s8(vqtbl4q_s8(v621, v566), v561);
        int8x16_t v560 = (int8x16_t)vaddq_s16((int16x8_t)v621.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v621, (int8x16_t)xmmword_242EA7730), v561));
        int16x8_t v552 = vaddq_s16((int16x8_t)v621.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v621, (int8x16_t)xmmword_242EA7740), v561));
        int16x8_t v604 = (int16x8_t)v560;
        int16x8_t v605 = v552;
        int16x8_t v553 = vaddq_s16((int16x8_t)v621.val[2], v568);
        int8x16_t v559 = (int8x16_t)vaddq_s16((int16x8_t)v621.val[3], v568);
        v619.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v541.i8, (int8x16_t)xmmword_242EA7710), v561), v541);
        v619.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v541.i8, (int8x16_t)xmmword_242EA7750), v561), v542);
        v619.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v541.i8, v566), v561), v543);
        v619.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v541.i8, (int8x16_t)xmmword_242EA7760), v561), v544);
        v621.val[3] = vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7730), v561);
        int16x8_t v569 = (int16x8_t)vandq_s8(vqtbl4q_s8(v619, v566), v561);
        int16x8_t v541 = vaddq_s16((int16x8_t)v621.val[3], (int16x8_t)v619.val[0]);
        int16x8_t v542 = vaddq_s16((int16x8_t)v619.val[1], (int16x8_t)v621.val[3]);
        int16x8_t v543 = vaddq_s16((int16x8_t)v619.val[2], v569);
        int16x8_t v544 = vaddq_s16((int16x8_t)v619.val[3], v569);
        v619.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v546.i8, (int8x16_t)xmmword_242EA74D0), v561), v546);
        v619.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v546.i8, (int8x16_t)xmmword_242EA75A0), v561), v547);
        v619.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v546.i8, (int8x16_t)xmmword_242EA7710), v561), v549);
        v619.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v546.i8, (int8x16_t)xmmword_242EA7720), v561), v550);
        v621.val[3] = vandq_s8(vqtbl4q_s8(v619, v566), v561);
        int16x8_t v546 = vaddq_s16((int16x8_t)v619.val[0], (int16x8_t)v621.val[3]);
        int16x8_t v547 = vaddq_s16((int16x8_t)v619.val[1], (int16x8_t)v621.val[3]);
        int16x8_t v549 = vaddq_s16((int16x8_t)v619.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA75D0), v561));
        int16x8_t v550 = vaddq_s16((int16x8_t)v619.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7770), v561));
        v619.val[0] = v608;
        v619.val[1] = v609;
        int8x16_t v59 = v613;
        v619.val[2] = v610;
        v619.val[3] = v611;
        v620.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA74D0), v561), (int16x8_t)v608);
        v620.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7780), v561), (int16x8_t)v609);
        int16x8_t v606 = v553;
        int16x8_t v607 = (int16x8_t)v559;
        v620.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7710), v561), (int16x8_t)v610);
        v620.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7720), v561), (int16x8_t)v611);
        int16x8_t v570 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, v566), v561);
        int16x8_t v571 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA75D0), v561);
        int16x8_t v572 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA7790), v561);
        int16x8_t v555 = vaddq_s16((int16x8_t)v620.val[0], v570);
        int16x8_t v556 = vaddq_s16((int16x8_t)v620.val[1], v570);
        int16x8_t v557 = vaddq_s16((int16x8_t)v620.val[2], v571);
        int16x8_t v558 = vaddq_s16((int16x8_t)v620.val[3], v572);
      }
      int8x16_t v573 = (int8x16_t)vaddq_s16(v612, (int16x8_t)v560);
      int8x16_t v574 = (int8x16_t)vaddq_s16(v552, v612);
      int8x16_t v575 = (int8x16_t)vaddq_s16(v553, v612);
      int8x16_t v576 = (int8x16_t)vaddq_s16((int16x8_t)v559, v612);
      int8x16_t v577 = (int8x16_t)vaddq_s16(v541, v612);
      int8x16_t v578 = (int8x16_t)vaddq_s16(v542, v612);
      int8x16_t v579 = (int8x16_t)vaddq_s16(v543, v612);
      int8x16_t v580 = (int8x16_t)vaddq_s16(v544, v612);
      int8x16_t v581 = (int8x16_t)vaddq_s16(v546, v612);
      int8x16_t v582 = (int8x16_t)vaddq_s16(v547, v612);
      int8x16_t v583 = (int8x16_t)vaddq_s16(v549, v612);
      int8x16_t v584 = (int8x16_t)vaddq_s16(v550, v612);
      int8x16_t v585 = (int8x16_t)vaddq_s16(v555, v612);
      int8x16_t v586 = (int8x16_t)vaddq_s16(v556, v612);
      int8x16_t v587 = (int8x16_t)vaddq_s16(v557, v612);
      int8x16_t v588 = (int8x16_t)vaddq_s16(v558, v612);
      v589.i64[0] = 0x10001000100010;
      v589.i64[1] = 0x10001000100010;
      int8x16_t v590 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v59, v589));
      v591 = (int16x8_t *)((char *)a1 + a2);
      *a1 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v573, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v573), 6uLL);
      a1[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v575, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v575), 6uLL);
      a1[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v581, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v581), 6uLL);
      a1[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v583, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v583), 6uLL);
      v592 = (int16x8_t *)((char *)a1 + 2 * a2);
      int16x8_t *v591 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v574, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v574), 6uLL);
      v591[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v576, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v576), 6uLL);
      v591[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v582, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v582), 6uLL);
      v591[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v584, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v584), 6uLL);
      int16x8_t *v592 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v577, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v577), 6uLL);
      v592[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v579, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v579), 6uLL);
      v592[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v585, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v585), 6uLL);
      v592[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v587, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v587), 6uLL);
      v593 = (int16x8_t *)((char *)v592 + a2);
      int16x8_t *v593 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v578, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v578), 6uLL);
      v593[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v580, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v580), 6uLL);
      v593[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v586, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v586), 6uLL);
      v593[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v588, (int8x16_t)xmmword_242EA77A0), v590), (int16x8_t)v588), 6uLL);
    }
    return result;
  }
  if (a4 != 159)
  {
    if (a4 == 255)
    {
      long long v14 = *(_OWORD *)(a3 + 16);
      long long v15 = *(_OWORD *)(a3 + 48);
      long long v16 = *(_OWORD *)(a3 + 144);
      long long v17 = *(_OWORD *)(a3 + 176);
      long long v18 = *(_OWORD *)(a3 + 64);
      long long v19 = *(_OWORD *)(a3 + 96);
      long long v20 = *(_OWORD *)(a3 + 32);
      long long v21 = *(_OWORD *)(a3 + 192);
      long long v22 = *(_OWORD *)(a3 + 224);
      long long v23 = *(_OWORD *)(a3 + 240);
      long long v24 = *(_OWORD *)(a3 + 128);
      long long v25 = *(_OWORD *)(a3 + 160);
      long long v26 = *(_OWORD *)(a3 + 80);
      long long v27 = *(_OWORD *)(a3 + 112);
      long long v28 = *(_OWORD *)(a3 + 208);
      int v29 = (_OWORD *)((char *)a1 + a2);
      *a1 = *(_OWORD *)a3;
      a1[1] = v20;
      a1[2] = v24;
      a1[3] = v25;
      unsigned int v30 = (_OWORD *)((char *)a1 + 2 * a2);
      *int v29 = v14;
      v29[1] = v15;
      v29[2] = v16;
      v29[3] = v17;
      *unsigned int v30 = v18;
      v30[1] = v19;
      v30[2] = v21;
      v30[3] = v22;
      int v31 = (_OWORD *)((char *)v30 + a2);
      uint64_t result = 256;
      *int v31 = v26;
      v31[1] = v27;
      v31[2] = v28;
      v31[3] = v23;
      return result;
    }
    goto LABEL_11;
  }
  v35.i64[0] = 0xA000A000A000ALL;
  v35.i64[1] = 0xA000A000A000ALL;
  int8x16_t v36 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v35, v35));
  v35.i64[0] = vpaddq_s32((int32x4_t)v36, (int32x4_t)v36).u64[0];
  v37.i64[0] = v35.u32[0];
  v37.i64[1] = v35.u32[1];
  int64x2_t v38 = v37;
  unint64_t v39 = vaddvq_s64(v37);
  unint64_t v40 = v39;
  int16x8_t v41 = 0uLL;
  if (v39 <= 0x80)
  {
    int16x8_t v77 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
    int64x2_t v78 = vzip1q_s64((int64x2_t)0, v38);
    unint64_t v79 = 8 * (a3 & 7);
    unint64_t v80 = v39 + v79;
    int64x2_t v81 = vaddq_s64(v78, vdupq_n_s64(v79));
    int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v81)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v81)));
    if (v80 > 0x80) {
      int8x16_t v82 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v81)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v77[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v81))), v82);
    }
    unint64_t v83 = v80 & 0x3F;
    int16x8_t v84 = (int64x2_t *)((char *)v77 + 8 * (v80 >> 6));
    int64x2_t v85 = vaddq_s64(v78, vdupq_n_s64(v83));
    unint64_t v86 = v40 + v80;
    int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v84, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v85)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v84->i64[0], 0), (uint64x2_t)vnegq_s64(v85)));
    if (v40 + v83 >= 0x81) {
      int8x16_t v87 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v84[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v85)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v84[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v85))), v87);
    }
    unint64_t v88 = v86 & 0x3F;
    int8x16_t v89 = (int64x2_t *)((char *)v77 + 8 * (v86 >> 6));
    int64x2_t v90 = vaddq_s64(v78, vdupq_n_s64(v88));
    unint64_t v91 = v40 + v86;
    int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v89, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v89->i64[0], 0), (uint64x2_t)vnegq_s64(v90)));
    if (v40 + v88 >= 0x81) {
      int8x16_t v92 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v89[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v89[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v90))), v92);
    }
    int32x2_t v93 = (int32x2_t)vextq_s8(v36, v36, 8uLL).u64[0];
    unint64_t v94 = v91 & 0x3F;
    int16x8_t v95 = (int64x2_t *)((char *)v77 + 8 * (v91 >> 6));
    int64x2_t v96 = vaddq_s64(v78, vdupq_n_s64(v94));
    unint64_t v97 = v40 + v91;
    int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v95, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v96)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95->i64[0], 0), (uint64x2_t)vnegq_s64(v96)));
    if (v40 + v94 >= 0x81) {
      int8x16_t v98 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v96)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v95[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v96))), v98);
    }
    unint64_t v99 = v97 & 0x3F;
    int8x16_t v100 = (int64x2_t *)((char *)v77 + 8 * (v97 >> 6));
    int64x2_t v101 = vaddq_s64(v78, vdupq_n_s64(v99));
    unint64_t v102 = v40 + v97;
    int8x16_t v103 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v100, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v100->i64[0], 0), (uint64x2_t)vnegq_s64(v101)));
    if (v40 + v99 > 0x80) {
      int8x16_t v103 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v100[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v100[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v101))), v103);
    }
    int32x2_t v104 = vzip1_s32(*(int32x2_t *)v36.i8, v93);
    unint64_t v105 = v102 & 0x3F;
    int16x8_t v106 = (int64x2_t *)((char *)v77 + 8 * (v102 >> 6));
    int64x2_t v107 = vaddq_s64(v78, vdupq_n_s64(v105));
    unint64_t v108 = v40 + v102;
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v106, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v107)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106->i64[0], 0), (uint64x2_t)vnegq_s64(v107)));
    if (v40 + v105 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v107)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v106[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v107))), v109);
    }
    v110.i64[0] = v104.u32[0];
    v110.i64[1] = v104.u32[1];
    int64x2_t v111 = v110;
    unint64_t v112 = v108 & 0x3F;
    int16x8_t v113 = (int64x2_t *)((char *)v77 + 8 * (v108 >> 6));
    int64x2_t v114 = vaddq_s64(v78, vdupq_n_s64(v112));
    unint64_t v115 = v40 + v108;
    int8x16_t v116 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v113, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v113->i64[0], 0), (uint64x2_t)vnegq_s64(v114)));
    if (v40 + v112 >= 0x81) {
      int8x16_t v116 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v113[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v113[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v114))), v116);
    }
    uint64x2_t v117 = (uint64x2_t)vnegq_s64(v111);
    unint64_t v118 = v115 & 0x3F;
    int16x8_t v119 = (int64x2_t *)((char *)v77 + 8 * (v115 >> 6));
    int64x2_t v120 = vaddq_s64(v78, vdupq_n_s64(v118));
    unint64_t v121 = v40 + v115;
    int8x16_t v122 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v120)));
    if (v40 + v118 >= 0x81) {
      int8x16_t v122 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v120))), v122);
    }
    int64x2_t v123 = (int64x2_t)vshlq_u64((uint64x2_t)v82, v117);
    int64x2_t v124 = (int64x2_t)vshlq_u64((uint64x2_t)v87, v117);
    int64x2_t v125 = (int64x2_t)vshlq_u64((uint64x2_t)v92, v117);
    int64x2_t v126 = (int64x2_t)vshlq_u64((uint64x2_t)v98, v117);
    int64x2_t v127 = (int64x2_t)vshlq_u64((uint64x2_t)v103, v117);
    int64x2_t v128 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v117);
    int64x2_t v129 = (int64x2_t)vshlq_u64((uint64x2_t)v116, v117);
    int64x2_t v130 = (int64x2_t)vshlq_u64((uint64x2_t)v122, v117);
    unint64_t v131 = v121 & 0x3F;
    int16x8_t v132 = (int64x2_t *)((char *)v77 + 8 * (v121 >> 6));
    int64x2_t v133 = vaddq_s64(v78, vdupq_n_s64(v131));
    unint64_t v134 = v40 + v121;
    int8x16_t v135 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v133)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v133)));
    if (v40 + v131 > 0x80) {
      int8x16_t v135 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v133)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v133))), v135);
    }
    *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v82);
    *(int32x2_t *)v123.i8 = vmovn_s64(v123);
    *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
    *(int32x2_t *)v124.i8 = vmovn_s64(v124);
    *(int32x2_t *)v92.i8 = vmovn_s64((int64x2_t)v92);
    *(int32x2_t *)v125.i8 = vmovn_s64(v125);
    *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v98);
    *(int32x2_t *)v126.i8 = vmovn_s64(v126);
    *(int32x2_t *)v103.i8 = vmovn_s64((int64x2_t)v103);
    *(int32x2_t *)v127.i8 = vmovn_s64(v127);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
    *(int32x2_t *)v128.i8 = vmovn_s64(v128);
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v129.i8 = vmovn_s64(v129);
    *(int32x2_t *)v122.i8 = vmovn_s64((int64x2_t)v122);
    *(int32x2_t *)v130.i8 = vmovn_s64(v130);
    int64x2_t v136 = (int64x2_t)vshlq_u64((uint64x2_t)v135, v117);
    *(int32x2_t *)v135.i8 = vmovn_s64((int64x2_t)v135);
    *(int32x2_t *)v136.i8 = vmovn_s64(v136);
    unint64_t v137 = v134 & 0x3F;
    int16x8_t v138 = (int64x2_t *)((char *)v77 + 8 * (v134 >> 6));
    int64x2_t v139 = vaddq_s64(v78, vdupq_n_s64(v137));
    unint64_t v140 = v40 + v134;
    int8x16_t v141 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v138, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139));
    int8x16_t v142 = vorrq_s8(v141, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
    if (v40 + v137 >= 0x81)
    {
      int64x2_t v143 = v138[1];
      uint64x2_t v144 = (uint64x2_t)vdupq_lane_s64(v143.i64[0], 0);
      int8x16_t v141 = (int8x16_t)vdupq_laneq_s64(v143, 1);
      int64x2_t v4 = vdupq_n_s64(0xC0uLL);
      int8x16_t v142 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64(v144, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vsubq_s64(v4, v139))), v142);
    }
    *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v142);
    *(int32x2_t *)v4.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v142, v117));
    int16x8_t v145 = (int64x2_t *)((char *)v77 + 8 * (v140 >> 6));
    int64x2_t v146 = vaddq_s64(v78, vdupq_n_s64(v140 & 0x3F));
    unint64_t v147 = v40 + v140;
    int8x16_t v148 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v145, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v145->i64[0], 0), (uint64x2_t)vnegq_s64(v146)));
    if (v40 + (v140 & 0x3F) >= 0x81) {
      int8x16_t v148 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v145[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v145[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v146))), v148);
    }
    int32x4_t v149 = vzip1q_s32((int32x4_t)v82, (int32x4_t)v123);
    int32x4_t v150 = vzip1q_s32((int32x4_t)v87, (int32x4_t)v124);
    int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v92, (int32x4_t)v125);
    int16x8_t v152 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v126);
    int16x8_t v153 = (int16x8_t)vzip1q_s32((int32x4_t)v103, (int32x4_t)v127);
    int16x8_t v154 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v128);
    int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v116, (int32x4_t)v129);
    int16x8_t v156 = (int16x8_t)vzip1q_s32((int32x4_t)v122, (int32x4_t)v130);
    int16x8_t v157 = (int16x8_t)vzip1q_s32((int32x4_t)v135, (int32x4_t)v136);
    int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v141, (int32x4_t)v4);
    int64x2_t v159 = (int64x2_t)vshlq_u64((uint64x2_t)v148, v117);
    *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v148);
    *(int32x2_t *)v159.i8 = vmovn_s64(v159);
    int16x8_t v160 = (int16x8_t)vzip1q_s32((int32x4_t)v87, (int32x4_t)v159);
    unint64_t v161 = v40 + v147;
    unint64_t v162 = v147 & 0x3F;
    int64x2_t v163 = vaddq_s64(v78, vdupq_n_s64(v162));
    int16x8_t v164 = (int64x2_t *)((char *)v77 + 8 * (v147 >> 6));
    int64x2_t v165 = vdupq_n_s64(0x40uLL);
    int8x16_t v166 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v164->i64[0], 0), (uint64x2_t)vnegq_s64(v163));
    int64x2_t v167 = vsubq_s64(v165, v163);
    int8x16_t v168 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v164, 1), (uint64x2_t)v167);
    int8x16_t v169 = vorrq_s8(v168, v166);
    if (v40 + v162 >= 0x81)
    {
      int64x2_t v170 = v164[1];
      uint64x2_t v171 = (uint64x2_t)vdupq_lane_s64(v170.i64[0], 0);
      int8x16_t v168 = (int8x16_t)vdupq_laneq_s64(v170, 1);
      int8x16_t v166 = (int8x16_t)vshlq_u64(v171, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v163));
      int64x2_t v167 = vdupq_n_s64(0xC0uLL);
      int8x16_t v169 = vorrq_s8(vorrq_s8(v166, (int8x16_t)vshlq_u64((uint64x2_t)v168, (uint64x2_t)vsubq_s64(v167, v163))), v169);
    }
    v172.i64[0] = 0x1000100010001;
    v172.i64[1] = 0x1000100010001;
    *(int16x4_t *)v166.i8 = vmovn_s32(v149);
    *(int16x4_t *)v167.i8 = vshrn_n_s32(v149, 0xAuLL);
    *(int16x4_t *)v165.i8 = vmovn_s32(v150);
    *(int16x4_t *)v109.i8 = vshrn_n_s32(v150, 0xAuLL);
    *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v151);
    *(int16x4_t *)v151.i8 = vshrn_n_s32((int32x4_t)v151, 0xAuLL);
    *(int16x4_t *)v125.i8 = vmovn_s32((int32x4_t)v152);
    *(int16x4_t *)v152.i8 = vshrn_n_s32((int32x4_t)v152, 0xAuLL);
    *(int16x4_t *)v127.i8 = vmovn_s32((int32x4_t)v153);
    *(int16x4_t *)v153.i8 = vshrn_n_s32((int32x4_t)v153, 0xAuLL);
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v154);
    *(int16x4_t *)v154.i8 = vshrn_n_s32((int32x4_t)v154, 0xAuLL);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v155);
    *(int16x4_t *)v130.i8 = vshrn_n_s32((int32x4_t)v155, 0xAuLL);
    *(int16x4_t *)v136.i8 = vmovn_s32((int32x4_t)v156);
    *(int16x4_t *)v135.i8 = vshrn_n_s32((int32x4_t)v156, 0xAuLL);
    *(int16x4_t *)v168.i8 = vmovn_s32((int32x4_t)v157);
    *(int16x4_t *)v157.i8 = vshrn_n_s32((int32x4_t)v157, 0xAuLL);
    *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v158);
    *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xAuLL);
    *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v160);
    *(int16x4_t *)v160.i8 = vshrn_n_s32((int32x4_t)v160, 0xAuLL);
    int64x2_t v173 = (int64x2_t)vshlq_u64((uint64x2_t)v169, v117);
    *(int32x2_t *)v149.i8 = vmovn_s64((int64x2_t)v169);
    *(int32x2_t *)v173.i8 = vmovn_s64(v173);
    int16x8_t v174 = (int16x8_t)vzip1q_s32(v149, (int32x4_t)v173);
    *(int16x4_t *)v173.i8 = vmovn_s32((int32x4_t)v174);
    *(int16x4_t *)v174.i8 = vshrn_n_s32((int32x4_t)v174, 0xAuLL);
    unint64_t v175 = v161 & 0x3F;
    uint64_t v176 = (int64x2_t *)((char *)v77 + 8 * (v161 >> 6));
    int64x2_t v177 = vaddq_s64(v78, vdupq_n_s64(v175));
    unint64_t v178 = v40 + v161;
    int8x16_t v179 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v176, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v177)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176->i64[0], 0), (uint64x2_t)vnegq_s64(v177)));
    int16x8_t v598 = (int16x8_t)v168;
    if (v40 + v175 > 0x80) {
      int8x16_t v179 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v177)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v176[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v177))), v179);
    }
    int16x8_t v180 = vshlq_n_s16(v172, 0xAuLL);
    int64x2_t v181 = (int64x2_t)vshlq_u64((uint64x2_t)v179, v117);
    *(int32x2_t *)v179.i8 = vmovn_s64((int64x2_t)v179);
    *(int32x2_t *)v181.i8 = vmovn_s64(v181);
    int16x8_t v182 = (int16x8_t)vzip1q_s32((int32x4_t)v179, (int32x4_t)v181);
    *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v182);
    *(int16x4_t *)v182.i8 = vshrn_n_s32((int32x4_t)v182, 0xAuLL);
    int16x8_t v183 = (int64x2_t *)((char *)v77 + 8 * (v178 >> 6));
    int64x2_t v184 = vaddq_s64(v78, vdupq_n_s64(v178 & 0x3F));
    unint64_t v185 = v40 + v178;
    int8x16_t v186 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v183, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v184)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v183->i64[0], 0), (uint64x2_t)vnegq_s64(v184)));
    if (v40 + (v178 & 0x3F) >= 0x81) {
      int8x16_t v186 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v183[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v184)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v183[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v184))), v186);
    }
    v187.i64[0] = -1;
    v187.i64[1] = -1;
    int8x16_t v188 = (int8x16_t)vaddq_s16(v180, v187);
    int8x16_t v189 = (int8x16_t)vzip1q_s16((int16x8_t)v166, (int16x8_t)v167);
    int8x16_t v190 = (int8x16_t)vzip1q_s16((int16x8_t)v165, (int16x8_t)v109);
    int8x16_t v191 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v151);
    int8x16_t v192 = (int8x16_t)vzip1q_s16((int16x8_t)v125, v152);
    int8x16_t v193 = (int8x16_t)vzip1q_s16((int16x8_t)v127, v153);
    int8x16_t v194 = (int8x16_t)vzip1q_s16((int16x8_t)v129, v154);
    int8x16_t v195 = (int8x16_t)vzip1q_s16((int16x8_t)v122, (int16x8_t)v130);
    int8x16_t v196 = (int8x16_t)vzip1q_s16((int16x8_t)v136, (int16x8_t)v135);
    int8x16_t v197 = (int8x16_t)vzip1q_s16(v598, v157);
    int8x16_t v198 = (int8x16_t)vzip1q_s16(v156, v158);
    int8x16_t v199 = (int8x16_t)vzip1q_s16(v155, v160);
    int8x16_t v200 = (int8x16_t)vzip1q_s16((int16x8_t)v173, v174);
    int8x16_t v201 = (int8x16_t)vzip1q_s16((int16x8_t)v179, v182);
    int64x2_t v202 = (int64x2_t)vshlq_u64((uint64x2_t)v186, v117);
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v186);
    *(int32x2_t *)v202.i8 = vmovn_s64(v202);
    int16x8_t v203 = (int16x8_t)vzip1q_s32((int32x4_t)v116, (int32x4_t)v202);
    *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v203);
    *(int16x4_t *)v203.i8 = vshrn_n_s32((int32x4_t)v203, 0xAuLL);
    int8x16_t v204 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v203);
    unint64_t v205 = v40 + v185;
    unint64_t v206 = v185 & 0x3F;
    int64x2_t v207 = vaddq_s64(v78, vdupq_n_s64(v206));
    int8x16_t v208 = (int64x2_t *)((char *)v77 + 8 * (v185 >> 6));
    int8x16_t v209 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v208, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v207)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v208->i64[0], 0), (uint64x2_t)vnegq_s64(v207)));
    if (v40 + v206 >= 0x81) {
      int8x16_t v209 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v208[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v207)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v208[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v207))), v209);
    }
    int16x8_t v210 = (int16x8_t)vandq_s8(v189, v188);
    int16x8_t v211 = (int16x8_t)vandq_s8(v190, v188);
    int16x8_t v212 = (int16x8_t)vandq_s8(v191, v188);
    int16x8_t v213 = (int16x8_t)vandq_s8(v192, v188);
    int16x8_t v214 = (int16x8_t)vandq_s8(v193, v188);
    int16x8_t v215 = (int16x8_t)vandq_s8(v194, v188);
    int16x8_t v216 = (int16x8_t)vandq_s8(v195, v188);
    int16x8_t v217 = (int16x8_t)vandq_s8(v196, v188);
    int16x8_t v218 = (int16x8_t)vandq_s8(v197, v188);
    int16x8_t v219 = (int16x8_t)vandq_s8(v198, v188);
    int16x8_t v220 = (int16x8_t)vandq_s8(v199, v188);
    int16x8_t v221 = (int16x8_t)vandq_s8(v200, v188);
    int16x8_t v222 = (int16x8_t)vandq_s8(v201, v188);
    int16x8_t v223 = (int16x8_t)vandq_s8(v204, v188);
    int64x2_t v224 = (int64x2_t)vshlq_u64((uint64x2_t)v209, v117);
    *(int32x2_t *)v192.i8 = vmovn_s64((int64x2_t)v209);
    *(int32x2_t *)v224.i8 = vmovn_s64(v224);
    int16x8_t v225 = (int16x8_t)vzip1q_s32((int32x4_t)v192, (int32x4_t)v224);
    *(int16x4_t *)v192.i8 = vmovn_s32((int32x4_t)v225);
    *(int16x4_t *)v225.i8 = vshrn_n_s32((int32x4_t)v225, 0xAuLL);
    int8x16_t v226 = (int8x16_t)vzip1q_s16((int16x8_t)v192, v225);
    int16x8_t v227 = (int64x2_t *)((char *)v77 + 8 * (v205 >> 6));
    int64x2_t v228 = vaddq_s64(v78, vdupq_n_s64(v205 & 0x3F));
    int16x8_t v229 = (int16x8_t)vandq_s8(v226, v188);
    int8x16_t v230 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v228)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v228)));
    if (v40 + (v205 & 0x3F) >= 0x81) {
      int8x16_t v230 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v228)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v228))), v230);
    }
    int16x8_t v52 = vshlq_n_s16(v214, 6uLL);
    int16x8_t v51 = vshlq_n_s16(v215, 6uLL);
    int16x8_t v50 = vshlq_n_s16(v216, 6uLL);
    int16x8_t v49 = vshlq_n_s16(v217, 6uLL);
    int16x8_t v41 = vshlq_n_s16(v218, 6uLL);
    int16x8_t v42 = vshlq_n_s16(v219, 6uLL);
    int16x8_t v43 = vshlq_n_s16(v220, 6uLL);
    int16x8_t v44 = vshlq_n_s16(v221, 6uLL);
    int64x2_t v231 = (int64x2_t)vshlq_u64((uint64x2_t)v230, v117);
    *(int32x2_t *)v220.i8 = vmovn_s64((int64x2_t)v230);
    *(int32x2_t *)v231.i8 = vmovn_s64(v231);
    int16x8_t v232 = (int16x8_t)vzip1q_s32((int32x4_t)v220, (int32x4_t)v231);
    *(int16x4_t *)v220.i8 = vmovn_s32((int32x4_t)v232);
    *(int16x4_t *)v232.i8 = vshrn_n_s32((int32x4_t)v232, 0xAuLL);
    int16x8_t v56 = vshlq_n_s16(v222, 6uLL);
    int16x8_t v55 = vshlq_n_s16(v223, 6uLL);
    int16x8_t v54 = vshlq_n_s16(v229, 6uLL);
    int16x8_t v53 = vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v220, v232), v188), 6uLL);
    int16x8_t v45 = vshlq_n_s16(v210, 6uLL);
    int16x8_t v46 = vshlq_n_s16(v211, 6uLL);
    int16x8_t v47 = vshlq_n_s16(v212, 6uLL);
    int16x8_t v48 = vshlq_n_s16(v213, 6uLL);
  }
  else
  {
    int16x8_t v42 = 0uLL;
    int16x8_t v43 = 0uLL;
    int16x8_t v44 = 0uLL;
    int16x8_t v45 = 0uLL;
    int16x8_t v46 = 0uLL;
    int16x8_t v47 = 0uLL;
    int16x8_t v48 = 0uLL;
    int16x8_t v49 = 0uLL;
    int16x8_t v50 = 0uLL;
    int16x8_t v51 = 0uLL;
    int16x8_t v52 = 0uLL;
    int16x8_t v53 = 0uLL;
    int16x8_t v54 = 0uLL;
    int16x8_t v55 = 0uLL;
    int16x8_t v56 = 0uLL;
  }
  int16x8_t v233 = (int16x8_t *)((char *)a1 + a2);
  *a1 = v45;
  a1[1] = v47;
  a1[2] = v41;
  a1[3] = v43;
  int16x8_t v234 = (int16x8_t *)((char *)a1 + 2 * a2);
  *int16x8_t v233 = v46;
  v233[1] = v48;
  v233[2] = v42;
  v233[3] = v44;
  *int16x8_t v234 = v52;
  v234[1] = v50;
  v234[2] = v56;
  v234[3] = v54;
  int16x8_t v235 = (int16x8_t *)((char *)v234 + a2);
  uint64_t result = 160;
  *int16x8_t v235 = v51;
  v235[1] = v49;
  v235[2] = v55;
  v235[3] = v53;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(_OWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1, 128, a2, *a3);
  uint64_t v6 = v5
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 32, 128, v5, a3[1]);
  uint64_t v7 = v6
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 4, 128, v6, a3[2]);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 36, 128, v7, a3[3]);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 64, 128, v8, a3[4]);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 96, 128, v9, a3[5]);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 68, 128, v10, a3[6]);
  signed int v12 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 100, 128, v11, v12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(uint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v10 = *v8;
  int16x8_t v11 = v8[1];
  int16x8_t v12 = v8[2];
  int16x8_t v13 = v8[3];
  uint64_t v9 = (int16x8_t *)((char *)v8 + a4);
  __n128 v14 = (__n128)vshrq_n_s16(*a3, 6uLL);
  __n128 v15 = (__n128)vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  __n128 v16 = (__n128)vshrq_n_s16(a3[1], 6uLL);
  __n128 v17 = (__n128)vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v18 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v19 = vshrq_n_s16(*v9, 6uLL);
  int16x8_t v20 = vshrq_n_s16(v11, 6uLL);
  int8x16_t v21 = (int8x16_t)vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v22 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int8x16_t v23 = (int8x16_t)vshrq_n_s16(a3[3], 6uLL);
  long long v459 = (__int128)vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v24 = vshrq_n_s16(v12, 6uLL);
  int16x8_t v25 = vshrq_n_s16(v9[2], 6uLL);
  int16x8_t v26 = vshrq_n_s16(v13, 6uLL);
  int16x8_t v27 = vshrq_n_s16(v9[3], 6uLL);
  int16x8_t v28 = vshrq_n_s16(v9[1], 6uLL);
  int16x8_t v29 = (int16x8_t)vdupq_lane_s64(v14.n128_i64[0], 0);
  v30.i64[0] = 0x5000500050005;
  v30.i64[1] = 0x5000500050005;
  int8x16_t v460 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v14, v29), 6uLL), v30);
  int8x16_t v461 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v15, v29), 6uLL), v30);
  int8x16_t v462 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v16, v29), 6uLL), v30);
  int8x16_t v463 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v17, v29), 6uLL), v30);
  int8x16_t v464 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v29), 6uLL), v30);
  int8x16_t v465 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v29), 6uLL), v30);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v460, (int16x8_t)v461), (int16x8_t)v462), (int16x8_t)v463), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v32 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v460, (int16x8_t)v461), (int16x8_t)v462), (int16x8_t)v463), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  int16x8_t v35 = vzip1q_s16(v33, v34);
  int8x16_t v36 = (int8x16_t)vceqzq_s16(v35);
  int16x8_t v37 = vclsq_s16(v35);
  v38.i64[0] = 0x10001000100010;
  v38.i64[1] = 0x10001000100010;
  int16x8_t v39 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, v37), v36);
  int8x16_t v466 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v29), 6uLL), v30);
  int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v28, v29), 6uLL), v30);
  int8x16_t v468 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v21, v29), 6uLL), v30);
  int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v29), 6uLL), v30);
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x8_t v40 = vmaxq_s16(v33, v10);
  v41.i64[0] = 0x8000800080008000;
  v41.i64[1] = 0x8000800080008000;
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v464, (int16x8_t)v465), (int16x8_t)v466), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v464, (int16x8_t)v465), (int16x8_t)v466), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vmaxq_s16(v40, v44);
  int16x8_t v47 = vminq_s16(vminq_s16(v34, v41), v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int16x8_t v49 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, vclsq_s16(v48)), (int8x16_t)vceqzq_s16(v48));
  long long v456 = (__int128)v21;
  long long v457 = (__int128)v22;
  long long v458 = (__int128)v23;
  int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v23, v29), 6uLL), v30);
  int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v459, v29), 6uLL), v30);
  int16x8_t v50 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v468, (int16x8_t)v469), (int16x8_t)v470), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v468, (int16x8_t)v469), (int16x8_t)v470), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v52 = vpmaxq_s16(v50, v50);
  int16x8_t v53 = vpminq_s16(v51, v51);
  int16x8_t v54 = vmaxq_s16(v46, v52);
  int16x8_t v55 = vminq_s16(v47, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int8x16_t v472 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v29), 6uLL), v30);
  int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v29), 6uLL), v30);
  int8x16_t v476 = (int8x16_t)v29;
  long long v453 = (__int128)v24;
  long long v454 = (__int128)v25;
  long long v455 = (__int128)v26;
  int16x8_t v58 = vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v29), 6uLL), v30);
  int16x8_t v59 = vmaxq_s16(vmaxq_s16((int16x8_t)v472, (int16x8_t)v473), v58);
  int16x8_t v60 = vminq_s16(vminq_s16((int16x8_t)v472, (int16x8_t)v473), v58);
  int8x16_t v474 = (int8x16_t)v58;
  int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v29), 6uLL), v30);
  int16x8_t v61 = vpmaxq_s16(v39, v39);
  int16x8_t v62 = vpmaxq_s16(v49, v49);
  int16x8_t v63 = vpmaxq_s16(v57, v57);
  int8x16_t v64 = (int8x16_t)vminq_s16(v60, (int16x8_t)v475);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v59, (int16x8_t)v475), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v66 = (int16x8_t)vqtbl1q_s8(v64, (int8x16_t)xmmword_242EA77B0);
  int16x8_t v67 = vpmaxq_s16(v65, v65);
  int16x8_t v68 = vpminq_s16(v66, v66);
  int16x8_t v69 = vmaxq_s16(v54, v67);
  int16x8_t v70 = vminq_s16(v55, v68);
  int16x8_t v71 = vzip1q_s16(v67, v68);
  int16x8_t v72 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, vclsq_s16(v71)), (int8x16_t)vceqzq_s16(v71));
  int16x8_t v73 = vpmaxq_s16(v72, v72);
  int8x16_t v74 = (int8x16_t)vmaxq_s16(vmaxq_s16(v61, v62), vmaxq_s16(v63, v73));
  int16x8_t v75 = vclzq_s16(vsubq_s16(v69, v70));
  v39.i64[0] = 0xF000F000F000FLL;
  v39.i64[1] = 0xF000F000F000FLL;
  v37.i64[0] = -1;
  v37.i64[1] = -1;
  int8x16_t v483 = (int8x16_t)v70;
  int8x16_t v484 = (int8x16_t)v69;
  int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v38, v75);
  int8x16_t v77 = (int8x16_t)vsubq_s16(vshlq_s16(v37, vsubq_s16(v39, v75)), v70);
  int8x16_t v78 = (int8x16_t)vcgtq_s16((int16x8_t)v74, (int16x8_t)v76);
  int16x8_t v79 = (int16x8_t)vbslq_s8(v78, v76, v74);
  int8x16_t v485 = vandq_s8(v77, v78);
  v21.i64[0] = 0x8000800080008;
  v21.i64[1] = 0x8000800080008;
  int8x16_t v80 = vorrq_s8((int8x16_t)0, vandq_s8(v78, v21));
  int16x8_t v81 = vsubq_s16(v79, v62);
  v82.i64[0] = 0x3000300030003;
  v82.i64[1] = 0x3000300030003;
  int16x8_t v83 = vmaxq_s16(vminq_s16(v81, (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v84 = vmaxq_s16(vminq_s16(vsubq_s16(v79, v63), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v479 = vsubq_s16(v79, v83);
  int16x8_t v480 = vsubq_s16(v79, v84);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16(v79, v73), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v481 = vsubq_s16(v79, v85);
  int8x16_t v482 = (int8x16_t)v79;
  int16x8_t v86 = vaddq_s16(v85, v84);
  int16x8_t v87 = vmaxq_s16(vminq_s16(vsubq_s16(v79, v61), (int16x8_t)v82), (int16x8_t)0);
  v23.i64[0] = 0x4000400040004;
  v23.i64[1] = 0x4000400040004;
  int8x16_t v88 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v79), v82), v80), vbicq_s8(v23, (int8x16_t)vceqq_s16(v86, vnegq_s16(vaddq_s16(v87, v83)))));
  int8x16_t v477 = v88;
  int16x8_t v478 = vsubq_s16(v79, v87);
  if (vmaxvq_s16(v79))
  {
    long long v448 = (__int128)v27;
    __n128 v449 = (__n128)v28;
    __n128 v450 = (__n128)v18;
    __n128 v451 = (__n128)v19;
    __n128 v452 = (__n128)v20;
    int8x16_t v446 = v80;
    int8x16_t v89 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v460, (int16x8_t)vqtbl1q_s8(v460, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v461, (int16x8_t)vqtbl1q_s8(v461, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v91 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v464, (int16x8_t)vqtbl1q_s8(v464, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v465, (int16x8_t)vqtbl1q_s8(v465, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v93 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v466, (int16x8_t)vqtbl1q_s8(v466, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v94 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v467, (int16x8_t)vqtbl1q_s8(v467, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v468, (int16x8_t)vqtbl1q_s8(v468, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v96 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v97 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v471, (int16x8_t)vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v98 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v472, (int16x8_t)vqtbl1q_s8(v472, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v99 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v473, (int16x8_t)vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v100 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v474, (int16x8_t)vqtbl1q_s8(v474, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v101 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v102 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v475, (int16x8_t)vqtbl1q_s8(v475, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v428 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v463, (int16x8_t)vqtbl1q_s8(v463, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v430 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v462, (int16x8_t)vqtbl1q_s8(v462, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v103 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v89, (int16x8_t)v90), (int16x8_t)v430), (int16x8_t)v428), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v104 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v89, (int16x8_t)v90), (int16x8_t)v430), (int16x8_t)v428), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v105 = vpmaxq_s16(v103, v103);
    int16x8_t v106 = vpminq_s16(v104, v104);
    v107.i64[0] = 0x8000800080008000;
    v107.i64[1] = 0x8000800080008000;
    int16x8_t v108 = vmaxq_s16(v105, v107);
    v109.i64[0] = 0x8000800080008000;
    v109.i64[1] = 0x8000800080008000;
    int16x8_t v110 = vminq_s16(v106, v109);
    int16x8_t v111 = vzip1q_s16(v105, v106);
    int16x8_t v112 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, vclsq_s16(v111)), (int8x16_t)vceqzq_s16(v111));
    int8x16_t v113 = (int8x16_t)vpmaxq_s16(v112, v112);
    int8x16_t v438 = (int8x16_t)v93;
    int8x16_t v440 = (int8x16_t)v91;
    int8x16_t v434 = (int8x16_t)v94;
    int8x16_t v436 = (int8x16_t)v92;
    int16x8_t v114 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v91, v92), v93), v94), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v115 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v91, v92), v93), v94), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v116 = vpmaxq_s16(v114, v114);
    int16x8_t v117 = vpminq_s16(v115, v115);
    int16x8_t v118 = vmaxq_s16(v108, v116);
    int16x8_t v119 = vminq_s16(v110, v117);
    int16x8_t v120 = vzip1q_s16(v116, v117);
    int16x8_t v121 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, vclsq_s16(v120)), (int8x16_t)vceqzq_s16(v120));
    int16x8_t v122 = vpmaxq_s16(v121, v121);
    int8x16_t v442 = (int8x16_t)v97;
    int8x16_t v444 = (int8x16_t)v96;
    int16x8_t v123 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v95, v96), (int16x8_t)v101), v97), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v124 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v95, v96), (int16x8_t)v101), v97), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v125 = vpmaxq_s16(v123, v123);
    int16x8_t v126 = vpminq_s16(v124, v124);
    int16x8_t v127 = vmaxq_s16(v118, v125);
    int16x8_t v128 = vminq_s16(v119, v126);
    int16x8_t v129 = vzip1q_s16(v125, v126);
    int16x8_t v130 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, vclsq_s16(v129)), (int8x16_t)vceqzq_s16(v129));
    int16x8_t v131 = vpmaxq_s16(v130, v130);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v98, (int16x8_t)v99), (int16x8_t)v100), (int16x8_t)v102), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v133 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v98, (int16x8_t)v99), (int16x8_t)v100), (int16x8_t)v102), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v134 = vpmaxq_s16(v132, v132);
    int16x8_t v135 = vpminq_s16(v133, v133);
    int16x8_t v136 = vmaxq_s16(v127, v134);
    int16x8_t v137 = vminq_s16(v128, v135);
    int16x8_t v138 = vzip1q_s16(v134, v135);
    int16x8_t v139 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v38, vclsq_s16(v138)), (int8x16_t)vceqzq_s16(v138));
    int16x8_t v140 = vpmaxq_s16(v139, v139);
    int8x16_t v141 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v113, v122), vmaxq_s16(v131, v140));
    int8x16_t v432 = (int8x16_t)v136;
    int8x16_t v142 = (int8x16_t)v137;
    int16x8_t v143 = vclzq_s16(vsubq_s16(v136, v137));
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v38, v143);
    int8x16_t v145 = (int8x16_t)vcgtq_s16((int16x8_t)v141, (int16x8_t)v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v141);
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, (int16x8_t)v113), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v122), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v131), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v140), (int16x8_t)v82), (int16x8_t)0);
    v144.i64[0] = 0x4000400040004;
    v144.i64[1] = 0x4000400040004;
    int8x16_t v151 = vbicq_s8(v144, (int8x16_t)vceqq_s16(vaddq_s16(v150, v149), vnegq_s16(vaddq_s16(v147, v148))));
    v113.i64[0] = 0x18001800180018;
    v113.i64[1] = 0x18001800180018;
    int8x16_t v152 = vbslq_s8(v145, v113, v38);
    int8x16_t v423 = (int8x16_t)vsubq_s16((int16x8_t)v146, v148);
    int8x16_t v424 = (int8x16_t)vsubq_s16((int16x8_t)v146, v149);
    int8x16_t v426 = (int8x16_t)vsubq_s16((int16x8_t)v146, v150);
    v149.i64[0] = 0x7000700070007;
    v149.i64[1] = 0x7000700070007;
    int8x16_t v422 = (int8x16_t)vsubq_s16((int16x8_t)v146, v147);
    v113.i64[0] = 0x8000800080008;
    v113.i64[1] = 0x8000800080008;
    v144.i64[0] = 0x2000200020002;
    v144.i64[1] = 0x2000200020002;
    int16x8_t v154 = v481;
    int8x16_t v153 = v482;
    int16x8_t v155 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v482, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v446, v113))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v113)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v82), (int16x8_t)v144), v38));
    int16x8_t v157 = v478;
    int16x8_t v156 = v479;
    int16x8_t v158 = v480;
    int8x16_t v159 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(v155, v478, v149), vshlq_n_s16(vaddq_s16(vaddq_s16(v480, v479), v481), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v146, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v152 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v151, (int16x8_t)v151)), (int16x8_t)v422, v149), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v424, (int16x8_t)v423), (int16x8_t)v426), 3uLL))).i64[0], 0);
    int v160 = (unsigned __int16)vaddvq_s16((int16x8_t)v159);
    BOOL v162 = a5 < 4 || a6 < 2;
    if (v160)
    {
      v163.i64[0] = 0x3000300030003;
      v163.i64[1] = 0x3000300030003;
      int8x16_t v164 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v146), v163), v152), v151);
      v165.i64[0] = 0xF000F000F000FLL;
      v165.i64[1] = 0xF000F000F000FLL;
      int8x16_t v460 = vbslq_s8(v159, v89, v460);
      int8x16_t v461 = vbslq_s8(v159, v90, v461);
      v163.i64[0] = -1;
      v163.i64[1] = -1;
      int8x16_t v462 = vbslq_s8(v159, v430, v462);
      int8x16_t v463 = vbslq_s8(v159, v428, v463);
      int8x16_t v464 = vbslq_s8(v159, v440, v464);
      int8x16_t v465 = vbslq_s8(v159, v436, v465);
      int8x16_t v466 = vbslq_s8(v159, v438, v466);
      int8x16_t v467 = vbslq_s8(v159, v434, v467);
      int8x16_t v468 = vbslq_s8(v159, v95, v468);
      int8x16_t v469 = vbslq_s8(v159, v444, v469);
      int8x16_t v470 = vbslq_s8(v159, v101, v470);
      int8x16_t v471 = vbslq_s8(v159, v442, v471);
      int8x16_t v472 = vbslq_s8(v159, v98, v472);
      int8x16_t v473 = vbslq_s8(v159, v99, v473);
      int8x16_t v474 = vbslq_s8(v159, v100, v474);
      int8x16_t v475 = vbslq_s8(v159, v102, v475);
      int16x8_t v157 = (int16x8_t)vbslq_s8(v159, v422, (int8x16_t)v478);
      int16x8_t v156 = (int16x8_t)vbslq_s8(v159, v423, (int8x16_t)v479);
      int16x8_t v478 = v157;
      int16x8_t v479 = v156;
      int16x8_t v158 = (int16x8_t)vbslq_s8(v159, v424, (int8x16_t)v480);
      int16x8_t v154 = (int16x8_t)vbslq_s8(v159, v426, (int8x16_t)v481);
      int16x8_t v480 = v158;
      int16x8_t v481 = v154;
      int8x16_t v484 = vbslq_s8(v159, v432, v484);
      int8x16_t v485 = vbslq_s8(v159, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v163, vsubq_s16(v165, v143)), (int16x8_t)v142), v145), v485);
      int8x16_t v153 = vbslq_s8(v159, v146, v482);
      int8x16_t v482 = v153;
      int8x16_t v483 = vbslq_s8(v159, v142, v483);
      int8x16_t v88 = vbslq_s8(v159, v164, v477);
      int8x16_t v476 = vbslq_s8(v159, (int8x16_t)vsubq_s16((int16x8_t)v476, (int16x8_t)vqtbl1q_s8(v476, (int8x16_t)xmmword_242EA77A0)), v476);
      int8x16_t v477 = v88;
    }
    if (!v162)
    {
      int16x8_t v166 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v14.n128_u64, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v167 = vsubq_s16((int16x8_t)v14, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v14.n128_u64, (int8x16_t)xmmword_242EA7710));
      int16x8_t v168 = vsubq_s16((int16x8_t)v16, v166);
      int16x8_t v169 = vsubq_s16((int16x8_t)v17, v166);
      v487.val[0] = (int8x16_t)v450;
      v487.val[1] = (int8x16_t)v451;
      v487.val[2] = (int8x16_t)v452;
      v487.val[3].i64[0] = v449.n128_u64[0];
      v487.val[3].i64[1] = v17.n128_i64[1];
      int16x8_t v170 = vsubq_s16((int16x8_t)v450, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA7710));
      int16x8_t v171 = vsubq_s16((int16x8_t)v451, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA7750));
      int8x16_t v172 = (int8x16_t)vsubq_s16((int16x8_t)v452, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v173 = vsubq_s16((int16x8_t)v449, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA7760));
      v488.val[0] = (int8x16_t)v456;
      v488.val[1] = (int8x16_t)v457;
      v488.val[2] = (int8x16_t)v458;
      v488.val[3].i64[0] = v459;
      v488.val[3].i64[1] = v17.n128_i64[1];
      v487.val[1] = (int8x16_t)vsubq_s16((int16x8_t)v456, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA77D0));
      v487.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v457, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA77E0));
      v487.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v458, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA7710));
      int16x8_t v174 = vsubq_s16((int16x8_t)v459, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA7720));
      v486.val[0] = (int8x16_t)v453;
      v486.val[1] = (int8x16_t)v454;
      v486.val[2] = (int8x16_t)v455;
      v486.val[3].i64[0] = v448;
      v486.val[3].i64[1] = v17.n128_i64[1];
      v488.val[1].i64[1] = v167.i64[1];
      v488.val[1].i64[0] = v169.i64[1];
      v169.i64[1] = v167.i64[0];
      int16x8_t v175 = vshlq_n_s16(v169, 6uLL);
      int16x8_t v176 = vshlq_n_s16(v170, 6uLL);
      int16x8_t v177 = vshlq_n_s16(v171, 6uLL);
      int16x8_t v178 = vshlq_n_s16(v173, 6uLL);
      int16x8_t v179 = vshlq_n_s16((int16x8_t)v487.val[1], 6uLL);
      v487.val[1] = (int8x16_t)vshlq_n_s16((int16x8_t)v487.val[2], 6uLL);
      v487.val[2] = (int8x16_t)vshlq_n_s16((int16x8_t)v487.val[3], 6uLL);
      v487.val[3] = (int8x16_t)vshlq_n_s16(v174, 6uLL);
      v487.val[0] = (int8x16_t)vshlq_n_s16(vsubq_s16((int16x8_t)v453, (int16x8_t)vqtbl4q_s8(v486, (int8x16_t)xmmword_242EA77D0)), 6uLL);
      int16x8_t v180 = vshlq_n_s16(vsubq_s16((int16x8_t)v454, (int16x8_t)vqtbl4q_s8(v486, (int8x16_t)xmmword_242EA7780)), 6uLL);
      int16x8_t v181 = vshlq_n_s16(vsubq_s16((int16x8_t)v455, (int16x8_t)vqtbl4q_s8(v486, (int8x16_t)xmmword_242EA7710)), 6uLL);
      int16x8_t v182 = vshlq_n_s16(vsubq_s16((int16x8_t)v448, (int16x8_t)vqtbl4q_s8(v486, (int8x16_t)xmmword_242EA7720)), 6uLL);
      v488.val[0].i64[0] = 0x5000500050005;
      v488.val[0].i64[1] = 0x5000500050005;
      int8x16_t v183 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v488.val[1], 6uLL), (int16x8_t)v488.val[0]);
      int16x8_t v184 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v15, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v14.n128_u64, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v488.val[0]);
      int8x16_t v185 = (int8x16_t)vshlq_s16(vshlq_n_s16(v168, 6uLL), (int16x8_t)v488.val[0]);
      int16x8_t v186 = vshlq_s16(v175, (int16x8_t)v488.val[0]);
      int8x16_t v187 = (int8x16_t)vshlq_s16(v176, (int16x8_t)v488.val[0]);
      int16x8_t v188 = vshlq_s16(v177, (int16x8_t)v488.val[0]);
      int16x8_t v189 = vshlq_s16(v178, (int16x8_t)v488.val[0]);
      int8x16_t v190 = (int8x16_t)vshlq_s16(v179, (int16x8_t)v488.val[0]);
      v488.val[1] = (int8x16_t)vshlq_s16((int16x8_t)v487.val[1], (int16x8_t)v488.val[0]);
      int8x16_t v191 = (int8x16_t)vshlq_s16((int16x8_t)v487.val[2], (int16x8_t)v488.val[0]);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v172, 6uLL), (int16x8_t)v488.val[0]);
      v488.val[2] = (int8x16_t)vshlq_s16((int16x8_t)v487.val[3], (int16x8_t)v488.val[0]);
      int8x16_t v193 = (int8x16_t)vshlq_s16((int16x8_t)v487.val[0], (int16x8_t)v488.val[0]);
      int16x8_t v194 = vshlq_s16(v180, (int16x8_t)v488.val[0]);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v181, (int16x8_t)v488.val[0]);
      v488.val[0] = (int8x16_t)vshlq_s16(v182, (int16x8_t)v488.val[0]);
      int8x16_t v445 = (int8x16_t)v186;
      int8x16_t v447 = (int8x16_t)v184;
      int16x8_t v196 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v183, v184), (int16x8_t)v185), v186), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v197 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v183, v184), (int16x8_t)v185), v186), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v198 = vpmaxq_s16(v196, v196);
      int16x8_t v199 = vpminq_s16(v197, v197);
      v182.i64[0] = 0x8000800080008000;
      v182.i64[1] = 0x8000800080008000;
      int16x8_t v200 = vmaxq_s16(v198, v182);
      v184.i64[0] = 0x8000800080008000;
      v184.i64[1] = 0x8000800080008000;
      int16x8_t v201 = vminq_s16(v199, v184);
      int16x8_t v202 = vzip1q_s16(v198, v199);
      v172.i64[0] = 0x10001000100010;
      v172.i64[1] = 0x10001000100010;
      int16x8_t v203 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v172, vclsq_s16(v202)), (int8x16_t)vceqzq_s16(v202));
      int16x8_t v204 = vpmaxq_s16(v203, v203);
      int8x16_t v441 = (int8x16_t)v189;
      int8x16_t v443 = (int8x16_t)v188;
      int16x8_t v205 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v187, v188), (int16x8_t)v192), v189), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v187, v188), (int16x8_t)v192), v189), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v207 = vpmaxq_s16(v205, v205);
      int16x8_t v208 = vpminq_s16(v206, v206);
      int16x8_t v209 = vmaxq_s16(v200, v207);
      int16x8_t v210 = vminq_s16(v201, v208);
      int16x8_t v211 = vzip1q_s16(v207, v208);
      int16x8_t v212 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v172, vclsq_s16(v211)), (int8x16_t)vceqzq_s16(v211));
      int16x8_t v213 = vpmaxq_s16(v212, v212);
      int8x16_t v437 = v488.val[2];
      int8x16_t v439 = v488.val[1];
      int16x8_t v214 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v190, (int16x8_t)v488.val[1]), (int16x8_t)v191), (int16x8_t)v488.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v215 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v190, (int16x8_t)v488.val[1]), (int16x8_t)v191), (int16x8_t)v488.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v216 = vpmaxq_s16(v214, v214);
      int16x8_t v217 = vpminq_s16(v215, v215);
      int16x8_t v218 = vmaxq_s16(v209, v216);
      int16x8_t v219 = vminq_s16(v210, v217);
      int16x8_t v220 = vzip1q_s16(v216, v217);
      int16x8_t v221 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v172, vclsq_s16(v220)), (int8x16_t)vceqzq_s16(v220));
      int16x8_t v222 = vpmaxq_s16(v221, v221);
      int8x16_t v433 = v488.val[0];
      int8x16_t v435 = (int8x16_t)v194;
      int16x8_t v223 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v193, v194), (int16x8_t)v195), (int16x8_t)v488.val[0]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v224 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v193, v194), (int16x8_t)v195), (int16x8_t)v488.val[0]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v225 = vpmaxq_s16(v223, v223);
      int16x8_t v226 = vpminq_s16(v224, v224);
      int8x16_t v227 = (int8x16_t)vmaxq_s16(v218, v225);
      int16x8_t v228 = vminq_s16(v219, v226);
      int16x8_t v229 = vzip1q_s16(v225, v226);
      int16x8_t v230 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v172, vclsq_s16(v229)), (int8x16_t)vceqzq_s16(v229));
      int16x8_t v231 = vpmaxq_s16(v230, v230);
      int8x16_t v232 = (int8x16_t)vmaxq_s16(vmaxq_s16(v204, v213), vmaxq_s16(v222, v231));
      int8x16_t v233 = (int8x16_t)v228;
      int16x8_t v234 = vclzq_s16(vsubq_s16((int16x8_t)v227, v228));
      int8x16_t v235 = (int8x16_t)vsubq_s16((int16x8_t)v172, v234);
      int8x16_t v236 = (int8x16_t)vcgtq_s16((int16x8_t)v232, (int16x8_t)v235);
      int8x16_t v237 = vbslq_s8(v236, v235, v232);
      v232.i64[0] = 0x3000300030003;
      v232.i64[1] = 0x3000300030003;
      int16x8_t v238 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v237, v204), (int16x8_t)v232), (int16x8_t)0);
      int8x16_t v239 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v237, v213), (int16x8_t)v232), (int16x8_t)0);
      int16x8_t v240 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v237, v222), (int16x8_t)v232), (int16x8_t)0);
      int16x8_t v241 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v237, v231), (int16x8_t)v232), (int16x8_t)0);
      v488.val[1] = (int8x16_t)vsubq_s16((int16x8_t)v237, v238);
      int16x8_t v242 = vsubq_s16((int16x8_t)v237, (int16x8_t)v239);
      v488.val[0] = (int8x16_t)vsubq_s16((int16x8_t)v237, v241);
      int8x16_t v243 = (int8x16_t)vceqq_s16(vaddq_s16(v241, v240), vnegq_s16(vaddq_s16(v238, (int16x8_t)v239)));
      v239.i64[0] = 0x4000400040004;
      v239.i64[1] = 0x4000400040004;
      int8x16_t v244 = vbicq_s8(v239, v243);
      v241.i64[0] = 0x7000700070007;
      v241.i64[1] = 0x7000700070007;
      int8x16_t v429 = v488.val[0];
      int8x16_t v431 = (int8x16_t)v242;
      int8x16_t v425 = (int8x16_t)vsubq_s16((int16x8_t)v237, v240);
      int8x16_t v427 = v488.val[1];
      int16x8_t v245 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v235, v236), vaddq_s16((int16x8_t)v244, (int16x8_t)v244)), (int16x8_t)v488.val[1], v241), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v425, v242), (int16x8_t)v488.val[0]), 3uLL));
      int8x16_t v88 = v477;
      int16x8_t v157 = v478;
      v246.i64[0] = 0x2000200020002;
      v246.i64[1] = 0x2000200020002;
      int16x8_t v247 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v477, v232), (int16x8_t)v246), v172);
      v232.i64[0] = 0x8000800080008;
      v232.i64[1] = 0x8000800080008;
      int16x8_t v154 = v481;
      int8x16_t v153 = v482;
      int16x8_t v156 = v479;
      int16x8_t v158 = v480;
      int8x16_t v248 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v482, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v477, v232))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v232)), v247), v478, v241), vshlq_n_s16(vaddq_s16(vaddq_s16(v480, v479), v481), 3uLL)), v245).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v248))
      {
        v249.i64[0] = 0x9000900090009;
        v249.i64[1] = 0x9000900090009;
        v250.i64[0] = 0xF000F000F000FLL;
        v250.i64[1] = 0xF000F000F000FLL;
        v251.i64[0] = -1;
        v251.i64[1] = -1;
        int16x8_t v157 = (int16x8_t)vbslq_s8(v248, v427, (int8x16_t)v478);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v248, v431, (int8x16_t)v479);
        int16x8_t v158 = (int16x8_t)vbslq_s8(v248, v425, (int8x16_t)v480);
        int16x8_t v154 = (int16x8_t)vbslq_s8(v248, v429, (int8x16_t)v481);
        int8x16_t v153 = vbslq_s8(v248, v237, v482);
        int8x16_t v88 = vbslq_s8(v248, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v237), v246), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v236, v249), (int16x8_t)vmvnq_s8(v236))), v244), v477);
        int8x16_t v475 = vbslq_s8(v248, v433, v475);
        int8x16_t v476 = vbslq_s8(v248, vextq_s8((int8x16_t)v17, (int8x16_t)v17, 8uLL), v476);
        int8x16_t v460 = vbslq_s8(v248, v183, v460);
        int8x16_t v461 = vbslq_s8(v248, v447, v461);
        int8x16_t v462 = vbslq_s8(v248, v185, v462);
        int8x16_t v463 = vbslq_s8(v248, v445, v463);
        int8x16_t v464 = vbslq_s8(v248, v187, v464);
        int8x16_t v465 = vbslq_s8(v248, v443, v465);
        int8x16_t v466 = vbslq_s8(v248, v192, v466);
        int8x16_t v467 = vbslq_s8(v248, v441, v467);
        int8x16_t v468 = vbslq_s8(v248, v190, v468);
        int8x16_t v469 = vbslq_s8(v248, v439, v469);
        int8x16_t v470 = vbslq_s8(v248, v191, v470);
        int8x16_t v471 = vbslq_s8(v248, v437, v471);
        int8x16_t v472 = vbslq_s8(v248, v193, v472);
        int8x16_t v473 = vbslq_s8(v248, v435, v473);
        int8x16_t v474 = vbslq_s8(v248, v195, v474);
        int8x16_t v483 = vbslq_s8(v248, v233, v483);
        int8x16_t v484 = vbslq_s8(v248, v227, v484);
        int8x16_t v485 = vbslq_s8(v248, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v251, vsubq_s16(v250, v234)), (int16x8_t)v233), v236), v485);
        int16x8_t v478 = v157;
        int16x8_t v479 = v156;
        int16x8_t v480 = v158;
        int16x8_t v481 = v154;
        int8x16_t v482 = v153;
        int8x16_t v477 = v88;
      }
    }
    int16x8_t v252 = (int16x8_t)vandq_s8(v485, (int8x16_t)vceqq_s16((int16x8_t)v153, v157));
    int8x16_t v460 = (int8x16_t)vaddq_s16(v252, (int16x8_t)v460);
    int8x16_t v461 = (int8x16_t)vaddq_s16((int16x8_t)v461, v252);
    int8x16_t v462 = (int8x16_t)vaddq_s16((int16x8_t)v462, v252);
    int8x16_t v463 = (int8x16_t)vaddq_s16((int16x8_t)v463, v252);
    int16x8_t v253 = (int16x8_t)vandq_s8(v485, (int8x16_t)vceqq_s16((int16x8_t)v153, v156));
    int8x16_t v464 = (int8x16_t)vaddq_s16((int16x8_t)v464, v253);
    int8x16_t v465 = (int8x16_t)vaddq_s16((int16x8_t)v465, v253);
    int8x16_t v466 = (int8x16_t)vaddq_s16((int16x8_t)v466, v253);
    int8x16_t v467 = (int8x16_t)vaddq_s16((int16x8_t)v467, v253);
    int16x8_t v254 = (int16x8_t)vandq_s8(v485, (int8x16_t)vceqq_s16((int16x8_t)v153, v158));
    int8x16_t v468 = (int8x16_t)vaddq_s16((int16x8_t)v468, v254);
    int8x16_t v469 = (int8x16_t)vaddq_s16((int16x8_t)v469, v254);
    int8x16_t v470 = (int8x16_t)vaddq_s16((int16x8_t)v470, v254);
    int8x16_t v471 = (int8x16_t)vaddq_s16((int16x8_t)v471, v254);
    int8x16_t v255 = vandq_s8(v485, (int8x16_t)vceqq_s16((int16x8_t)v153, v154));
    int8x16_t v472 = (int8x16_t)vaddq_s16((int16x8_t)v472, (int16x8_t)v255);
    int8x16_t v473 = (int8x16_t)vaddq_s16((int16x8_t)v473, (int16x8_t)v255);
    int8x16_t v474 = (int8x16_t)vaddq_s16((int16x8_t)v474, (int16x8_t)v255);
    int8x16_t v475 = (int8x16_t)vaddq_s16((int16x8_t)v475, (int16x8_t)v255);
    v255.i64[0] = 0x8000800080008;
    v255.i64[1] = 0x8000800080008;
    v256.i64[0] = 0x3000300030003;
    v256.i64[1] = 0x3000300030003;
    v257.i64[0] = 0x2000200020002;
    v257.i64[1] = 0x2000200020002;
    int8x16_t v258 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v256), v257);
    v257.i64[0] = 0x10001000100010;
    v257.i64[1] = 0x10001000100010;
    int16x8_t v259 = (int16x8_t)vandq_s8(v258, (int8x16_t)v257);
    v257.i64[0] = 0x7000700070007;
    v257.i64[1] = 0x7000700070007;
    int16x8_t v260 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v153, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v88, v255))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v255)), v259), v157, v257), vshlq_n_s16(vaddq_s16(v158, vaddq_s16(v156, v154)), 3uLL));
    int16x8_t v261 = vpaddq_s16(v260, v260);
    if ((unint64_t)(vpaddq_s16(v261, v261).i16[0] + 83) > 0x4FF)
    {
      AGX::AppleCompressionGen2::writePackedUncompressedSubblock<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::VecArray<short,4ul>>(a1, a2, v14, v15, v16, v17, v450, v451, v452, v449, (uint64_t)a3, a4, a5, a6, a7, a8, v456, v457, v458,
        v459,
        v453,
        v454,
        v455,
        v448);
      return 160;
    }
    else
    {
      int v262 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v263 = 8 * (a1 & 7);
      if (v263) {
        uint64_t v264 = *v262 & ~(-1 << v263);
      }
      else {
        uint64_t v264 = 0;
      }
      *a2 = 0;
      uint64_t v268 = ((v153.u16[0] << 20) - 0x100000) & 0xF00000;
      v269.i32[0] = v88.u16[1];
      v269.i32[1] = v88.u16[2];
      int8x8_t v270 = vand_s8((int8x8_t)vshl_u32(v269, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v271 = v270.i32[1];
      __int32 v272 = v270.i32[0] | v88.i8[0] & 0x1F;
      if (!v153.i16[0]) {
        uint64_t v268 = 0;
      }
      unint64_t v273 = (unint64_t)((v153.i8[4] - 1) & 0xF) << 28;
      if (!v153.i16[2]) {
        unint64_t v273 = 0;
      }
      v274.i32[0] = v153.u16[3];
      v274.i32[1] = v153.u16[1];
      int32x2_t v275 = vceqz_s32((int32x2_t)vand_s8(v274, (int8x8_t)0xFFFF0000FFFFLL));
      v276.i64[0] = v275.i32[0];
      v276.i64[1] = v275.i32[1];
      int8x16_t v277 = (int8x16_t)v276;
      int8x8_t v278 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v274, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v276.i64[0] = v278.u32[0];
      v276.i64[1] = v278.u32[1];
      int8x16_t v279 = vbicq_s8((int8x16_t)vshlq_u64(v276, (uint64x2_t)xmmword_242EA77F0), v277);
      v277.i64[0] = v273;
      v277.i64[1] = v272 | v271 | ((unint64_t)(v88.i8[6] & 0x1F) << 15) | v268;
      int8x16_t v280 = vorrq_s8(v277, v279);
      uint64_t v281 = v476.i64[0];
      unint64_t v282 = vorrq_s8(v280, (int8x16_t)vdupq_laneq_s64((int64x2_t)v280, 1)).u64[0];
      unint64_t v283 = (v282 << v263) | v264;
      if (v263 >= 0x1C)
      {
        *int v262 = v283;
        unint64_t v283 = v282 >> (-8 * (a1 & 7u));
      }
      v284.i64[0] = WORD1(v281);
      v284.i64[1] = WORD2(v281);
      v285.i64[0] = 0xFFFFLL;
      v285.i64[1] = 0xFFFFLL;
      int8x16_t v286 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v284, v285), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v287 = v286.i64[0] | v281 & 0x3FF | v286.i64[1] | ((unint64_t)(HIWORD(v281) & 0x3FF) << 30);
      unint64_t v288 = (v263 + 36) & 0x3C;
      unint64_t v289 = v283 | (v287 << v288);
      if (v288 >= 0x18)
      {
        *(void *)((char *)v262 + (((v263 + 36) >> 3) & 8)) = v289;
        unint64_t v289 = v287 >> -(char)v288;
      }
      unint64_t v290 = v263 + 76;
      int8x16_t v291 = (int8x16_t)vsubq_s16((int16x8_t)v482, v478);
      int8x16_t v292 = (int8x16_t)vsubq_s16((int16x8_t)v482, v479);
      int8x16_t v293 = (int8x16_t)vsubq_s16((int16x8_t)v482, v480);
      int8x16_t v294 = (int8x16_t)vsubq_s16((int16x8_t)v482, v481);
      *(uint8x8_t *)v291.i8 = vqmovn_u16((uint16x8_t)v291);
      *(uint8x8_t *)v292.i8 = vqmovn_u16((uint16x8_t)v292);
      *(uint8x8_t *)v293.i8 = vqmovn_u16((uint16x8_t)v293);
      *(uint8x8_t *)v294.i8 = vqmovn_u16((uint16x8_t)v294);
      int16x8_t v295 = (int16x8_t)vtrn1q_s8(v291, v292);
      int16x8_t v296 = (int16x8_t)vtrn2q_s8(v291, v292);
      int8x16_t v297 = vtrn1q_s8(v293, v294);
      int16x8_t v298 = (int16x8_t)vtrn2q_s8(v293, v294);
      int8x16_t v299 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v295, (int16x8_t)v297), (int32x4_t)vzip1q_s16(v296, v298)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v295, (int16x8_t)v297), (int32x4_t)vtrn2q_s16(v296, v298)));
      v297.i64[0] = 0x202020202020202;
      v297.i64[1] = 0x202020202020202;
      int8x16_t v300 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v477.i8, (int16x4_t)0x4000400040004)), v297);
      v297.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v297.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v293.i64[0] = -1;
      v293.i64[1] = -1;
      uint8x16_t v301 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v293, (uint8x16_t)vorrq_s8(v300, v297)), v299);
      int16x8_t v302 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v300.i8);
      int16x8_t v303 = (int16x8_t)vmovl_high_u8((uint8x16_t)v300);
      uint16x8_t v304 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v301.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v302)), (int16x8_t)vshlq_u16(vmovl_high_u8(v301), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v303)));
      uint16x8_t v305 = (uint16x8_t)vpaddq_s16(v302, v303);
      int32x4_t v306 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v305.i8);
      int32x4_t v307 = (int32x4_t)vmovl_high_u16(v305);
      int32x4_t v308 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v304.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v306)), (int32x4_t)vshlq_u32(vmovl_high_u16(v304), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v307)));
      int32x4_t v309 = vpaddq_s32(v306, v307);
      v310.i64[0] = v308.u32[0];
      v310.i64[1] = v308.u32[1];
      uint64x2_t v311 = (uint64x2_t)v310;
      v310.i64[0] = v308.u32[2];
      v310.i64[1] = v308.u32[3];
      uint64x2_t v312 = (uint64x2_t)v310;
      v310.i64[0] = v309.u32[0];
      v310.i64[1] = v309.u32[1];
      int64x2_t v313 = v310;
      v310.i64[0] = v309.u32[2];
      v310.i64[1] = v309.u32[3];
      int64x2_t v314 = vpaddq_s64((int64x2_t)vshlq_u64(v311, (uint64x2_t)vzip1q_s64((int64x2_t)0, v313)), (int64x2_t)vshlq_u64(v312, (uint64x2_t)vzip1q_s64((int64x2_t)0, v310)));
      int64x2_t v315 = vpaddq_s64(v313, v310);
      uint64_t v316 = (v263 + 76) & 0x3C;
      unint64_t v317 = (v314.i64[0] << v316) | v289;
      if ((unint64_t)(v315.i64[0] + v316) >= 0x40)
      {
        *(void *)((char *)v262 + ((v290 >> 3) & 0x18)) = v317;
        unint64_t v317 = (unint64_t)v314.i64[0] >> -(char)v316;
      }
      unint64_t v318 = v315.i64[0] + v290;
      unint64_t v319 = v317 | (v314.i64[1] << v318);
      if ((v318 & 0x3F) + v315.i64[1] >= 0x40)
      {
        *(void *)((char *)v262 + ((v318 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v319;
        unint64_t v319 = (unint64_t)v314.i64[1] >> -(v318 & 0x3F);
        if ((v318 & 0x3F) == 0) {
          unint64_t v319 = 0;
        }
      }
      unint64_t v320 = v318 + v315.i64[1];
      v321.i64[0] = 0x8000800080008;
      v321.i64[1] = 0x8000800080008;
      v322.i64[0] = -1;
      v322.i64[1] = -1;
      int16x8_t v323 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v477, v321), (int8x16_t)0, 8uLL), v482);
      v324.i64[0] = 0xF000F000F000FLL;
      v324.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v325 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v322, (uint16x8_t)vaddq_s16(v323, v324)), v485);
      int32x4_t v326 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v323.i8);
      int32x4_t v327 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v325.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v326)), (int32x4_t)vmovl_high_u16(v325));
      int32x4_t v328 = vpaddq_s32(v326, (int32x4_t)vmovl_high_u16((uint16x8_t)v323));
      v329.i64[0] = v327.u32[0];
      v329.i64[1] = v327.u32[1];
      uint64x2_t v330 = (uint64x2_t)v329;
      v329.i64[0] = v327.u32[2];
      v329.i64[1] = v327.u32[3];
      uint64x2_t v331 = (uint64x2_t)v329;
      v329.i64[0] = v328.u32[0];
      v329.i64[1] = v328.u32[1];
      int64x2_t v332 = v329;
      v329.i64[0] = v328.u32[2];
      v329.i64[1] = v328.u32[3];
      int64x2_t v333 = vpaddq_s64((int64x2_t)vshlq_u64(v330, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)), (int64x2_t)vshlq_u64(v331, (uint64x2_t)vzip1q_s64((int64x2_t)0, v329)));
      int64x2_t v334 = vpaddq_s64(v332, v329);
      unint64_t v335 = (v333.i64[0] << v320) | v319;
      if (v334.i64[0] + (v320 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v262 + ((v320 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v335;
        unint64_t v335 = (unint64_t)v333.i64[0] >> -(v320 & 0x3F);
        if ((v320 & 0x3F) == 0) {
          unint64_t v335 = 0;
        }
      }
      unint64_t v336 = v334.i64[0] + v320;
      unint64_t v337 = v335 | (v333.i64[1] << v336);
      if ((v336 & 0x3F) + v334.i64[1] >= 0x40)
      {
        *(void *)((char *)v262 + ((v336 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v337;
        unint64_t v337 = (unint64_t)v333.i64[1] >> -(v336 & 0x3F);
        if ((v336 & 0x3F) == 0) {
          unint64_t v337 = 0;
        }
      }
      unint64_t v338 = v336 + v334.i64[1];
      int16x8_t v339 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v478, 8uLL);
      v340.i64[0] = 0xF000F000F000FLL;
      v340.i64[1] = 0xF000F000F000FLL;
      v341.i64[0] = -1;
      v341.i64[1] = -1;
      uint16x8_t v342 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v341, (uint16x8_t)vaddq_s16(v339, v340)), v460);
      int32x4_t v343 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v339.i8);
      int32x4_t v344 = (int32x4_t)vmovl_high_u16((uint16x8_t)v339);
      int32x4_t v345 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v342.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v342), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v344)));
      int32x4_t v346 = vpaddq_s32(v343, v344);
      v347.i64[0] = v345.u32[0];
      v347.i64[1] = v345.u32[1];
      uint64x2_t v348 = (uint64x2_t)v347;
      v347.i64[0] = v345.u32[2];
      v347.i64[1] = v345.u32[3];
      uint64x2_t v349 = (uint64x2_t)v347;
      v347.i64[0] = v346.u32[0];
      v347.i64[1] = v346.u32[1];
      int64x2_t v350 = v347;
      v347.i64[0] = v346.u32[2];
      v347.i64[1] = v346.u32[3];
      int64x2_t v351 = vpaddq_s64((int64x2_t)vshlq_u64(v348, (uint64x2_t)vzip1q_s64((int64x2_t)0, v350)), (int64x2_t)vshlq_u64(v349, (uint64x2_t)vzip1q_s64((int64x2_t)0, v347)));
      int64x2_t v352 = vpaddq_s64(v350, v347);
      unint64_t v353 = (v351.i64[0] << v338) | v337;
      if (v352.i64[0] + (v338 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v262 + ((v338 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v353;
        if ((v338 & 0x3F) != 0) {
          unint64_t v353 = (unint64_t)v351.i64[0] >> -(v338 & 0x3F);
        }
        else {
          unint64_t v353 = 0;
        }
      }
      unint64_t v354 = v352.i64[0] + v338;
      uint64_t v355 = (v352.i64[0] + v338) & 0x3F;
      unint64_t v356 = v353 | (v351.i64[1] << v354);
      if ((unint64_t)(v355 + v352.i64[1]) >= 0x40)
      {
        *(void *)((char *)v262 + ((v354 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
        unint64_t v356 = (unint64_t)v351.i64[1] >> -(char)v355;
        if (!v355) {
          unint64_t v356 = 0;
        }
      }
      unint64_t v357 = v354 + v352.i64[1];
      v358.i64[0] = 0xF000F000F000FLL;
      v358.i64[1] = 0xF000F000F000FLL;
      v359.i64[0] = -1;
      v359.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v361 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v359, (uint16x8_t)vaddq_s16(v478, v358)), *(int8x16_t *)((char *)&v460 + i));
        int32x4_t v362 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v478.i8);
        int32x4_t v363 = (int32x4_t)vmovl_high_u16((uint16x8_t)v478);
        int32x4_t v364 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v361.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v362)), (int32x4_t)vshlq_u32(vmovl_high_u16(v361), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v363)));
        int32x4_t v365 = vpaddq_s32(v362, v363);
        v366.i64[0] = v364.u32[0];
        v366.i64[1] = v364.u32[1];
        uint64x2_t v367 = (uint64x2_t)v366;
        v366.i64[0] = v364.u32[2];
        v366.i64[1] = v364.u32[3];
        uint64x2_t v368 = (uint64x2_t)v366;
        v366.i64[0] = v365.u32[0];
        v366.i64[1] = v365.u32[1];
        int64x2_t v369 = v366;
        v366.i64[0] = v365.u32[2];
        v366.i64[1] = v365.u32[3];
        int64x2_t v370 = vpaddq_s64((int64x2_t)vshlq_u64(v367, (uint64x2_t)vzip1q_s64((int64x2_t)0, v369)), (int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v366)));
        int64x2_t v371 = vpaddq_s64(v369, v366);
        unint64_t v372 = (v370.i64[0] << v357) | v356;
        if (v371.i64[0] + (v357 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v262 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v372;
          unint64_t v372 = (unint64_t)v370.i64[0] >> -(v357 & 0x3F);
          if ((v357 & 0x3F) == 0) {
            unint64_t v372 = 0;
          }
        }
        unint64_t v373 = v371.i64[0] + v357;
        unint64_t v356 = v372 | (v370.i64[1] << v373);
        if ((v373 & 0x3F) + v371.i64[1] >= 0x40)
        {
          *(void *)((char *)v262 + ((v373 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
          unint64_t v356 = (unint64_t)v370.i64[1] >> -(v373 & 0x3F);
          if ((v373 & 0x3F) == 0) {
            unint64_t v356 = 0;
          }
        }
        unint64_t v357 = v373 + v371.i64[1];
      }
      uint64_t v374 = 0;
      v375.i64[0] = 0xF000F000F000FLL;
      v375.i64[1] = 0xF000F000F000FLL;
      v376.i64[0] = -1;
      v376.i64[1] = -1;
      do
      {
        uint16x8_t v377 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v376, (uint16x8_t)vaddq_s16(v479, v375)), *(int8x16_t *)((char *)&v464 + v374));
        int32x4_t v378 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v479.i8);
        int32x4_t v379 = (int32x4_t)vmovl_high_u16((uint16x8_t)v479);
        int32x4_t v380 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v377.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v378)), (int32x4_t)vshlq_u32(vmovl_high_u16(v377), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v379)));
        int32x4_t v381 = vpaddq_s32(v378, v379);
        v382.i64[0] = v380.u32[0];
        v382.i64[1] = v380.u32[1];
        uint64x2_t v383 = (uint64x2_t)v382;
        v382.i64[0] = v380.u32[2];
        v382.i64[1] = v380.u32[3];
        uint64x2_t v384 = (uint64x2_t)v382;
        v382.i64[0] = v381.u32[0];
        v382.i64[1] = v381.u32[1];
        int64x2_t v385 = v382;
        v382.i64[0] = v381.u32[2];
        v382.i64[1] = v381.u32[3];
        int64x2_t v386 = vpaddq_s64((int64x2_t)vshlq_u64(v383, (uint64x2_t)vzip1q_s64((int64x2_t)0, v385)), (int64x2_t)vshlq_u64(v384, (uint64x2_t)vzip1q_s64((int64x2_t)0, v382)));
        int64x2_t v387 = vpaddq_s64(v385, v382);
        unint64_t v388 = (v386.i64[0] << v357) | v356;
        if (v387.i64[0] + (v357 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v262 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v388;
          unint64_t v388 = (unint64_t)v386.i64[0] >> -(v357 & 0x3F);
          if ((v357 & 0x3F) == 0) {
            unint64_t v388 = 0;
          }
        }
        unint64_t v389 = v387.i64[0] + v357;
        unint64_t v356 = v388 | (v386.i64[1] << v389);
        if ((v389 & 0x3F) + v387.i64[1] >= 0x40)
        {
          *(void *)((char *)v262 + ((v389 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
          unint64_t v356 = (unint64_t)v386.i64[1] >> -(v389 & 0x3F);
          if ((v389 & 0x3F) == 0) {
            unint64_t v356 = 0;
          }
        }
        unint64_t v357 = v389 + v387.i64[1];
        v374 += 16;
      }
      while (v374 != 64);
      uint64_t v390 = 0;
      v391.i64[0] = 0xF000F000F000FLL;
      v391.i64[1] = 0xF000F000F000FLL;
      v392.i64[0] = -1;
      v392.i64[1] = -1;
      do
      {
        uint16x8_t v393 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v392, (uint16x8_t)vaddq_s16(v480, v391)), *(int8x16_t *)((char *)&v468 + v390));
        int32x4_t v394 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v480.i8);
        int32x4_t v395 = (int32x4_t)vmovl_high_u16((uint16x8_t)v480);
        int32x4_t v396 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v393.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v394)), (int32x4_t)vshlq_u32(vmovl_high_u16(v393), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v395)));
        int32x4_t v397 = vpaddq_s32(v394, v395);
        v398.i64[0] = v396.u32[0];
        v398.i64[1] = v396.u32[1];
        uint64x2_t v399 = (uint64x2_t)v398;
        v398.i64[0] = v396.u32[2];
        v398.i64[1] = v396.u32[3];
        uint64x2_t v400 = (uint64x2_t)v398;
        v398.i64[0] = v397.u32[0];
        v398.i64[1] = v397.u32[1];
        int64x2_t v401 = v398;
        v398.i64[0] = v397.u32[2];
        v398.i64[1] = v397.u32[3];
        int64x2_t v402 = vpaddq_s64((int64x2_t)vshlq_u64(v399, (uint64x2_t)vzip1q_s64((int64x2_t)0, v401)), (int64x2_t)vshlq_u64(v400, (uint64x2_t)vzip1q_s64((int64x2_t)0, v398)));
        int64x2_t v403 = vpaddq_s64(v401, v398);
        unint64_t v404 = (v402.i64[0] << v357) | v356;
        if (v403.i64[0] + (v357 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v262 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v404;
          unint64_t v404 = (unint64_t)v402.i64[0] >> -(v357 & 0x3F);
          if ((v357 & 0x3F) == 0) {
            unint64_t v404 = 0;
          }
        }
        unint64_t v405 = v403.i64[0] + v357;
        unint64_t v356 = v404 | (v402.i64[1] << v405);
        if ((v405 & 0x3F) + v403.i64[1] >= 0x40)
        {
          *(void *)((char *)v262 + ((v405 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
          unint64_t v356 = (unint64_t)v402.i64[1] >> -(v405 & 0x3F);
          if ((v405 & 0x3F) == 0) {
            unint64_t v356 = 0;
          }
        }
        unint64_t v357 = v405 + v403.i64[1];
        v390 += 16;
      }
      while (v390 != 64);
      uint64_t v406 = 0;
      v407.i64[0] = 0xF000F000F000FLL;
      v407.i64[1] = 0xF000F000F000FLL;
      v408.i64[0] = -1;
      v408.i64[1] = -1;
      do
      {
        uint16x8_t v409 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v408, (uint16x8_t)vaddq_s16(v481, v407)), *(int8x16_t *)((char *)&v472 + v406));
        int32x4_t v410 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v481.i8);
        int32x4_t v411 = (int32x4_t)vmovl_high_u16((uint16x8_t)v481);
        int32x4_t v412 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v409.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v410)), (int32x4_t)vshlq_u32(vmovl_high_u16(v409), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v411)));
        int32x4_t v413 = vpaddq_s32(v410, v411);
        v414.i64[0] = v412.u32[0];
        v414.i64[1] = v412.u32[1];
        uint64x2_t v415 = (uint64x2_t)v414;
        v414.i64[0] = v412.u32[2];
        v414.i64[1] = v412.u32[3];
        uint64x2_t v416 = (uint64x2_t)v414;
        v414.i64[0] = v413.u32[0];
        v414.i64[1] = v413.u32[1];
        int64x2_t v417 = v414;
        v414.i64[0] = v413.u32[2];
        v414.i64[1] = v413.u32[3];
        int64x2_t v418 = vpaddq_s64((int64x2_t)vshlq_u64(v415, (uint64x2_t)vzip1q_s64((int64x2_t)0, v417)), (int64x2_t)vshlq_u64(v416, (uint64x2_t)vzip1q_s64((int64x2_t)0, v414)));
        int64x2_t v419 = vpaddq_s64(v417, v414);
        unint64_t v420 = (v418.i64[0] << v357) | v356;
        if (v419.i64[0] + (v357 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v262 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v420;
          unint64_t v420 = (unint64_t)v418.i64[0] >> -(v357 & 0x3F);
          if ((v357 & 0x3F) == 0) {
            unint64_t v420 = 0;
          }
        }
        unint64_t v421 = v419.i64[0] + v357;
        unint64_t v356 = v420 | (v418.i64[1] << v421);
        if ((v421 & 0x3F) + v419.i64[1] >= 0x40)
        {
          *(void *)((char *)v262 + ((v421 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
          unint64_t v356 = (unint64_t)v418.i64[1] >> -(v421 & 0x3F);
          if ((v421 & 0x3F) == 0) {
            unint64_t v356 = 0;
          }
        }
        unint64_t v357 = v421 + v419.i64[1];
        v406 += 16;
      }
      while (v406 != 64);
      if ((v357 & 0x3F) != 0) {
        *(void *)((char *)v262 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
      }
      unint64_t result = (v357 - v263 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v265 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v266 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v265, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v265, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v266.i8 = vorr_s8(*(int8x8_t *)v266.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v266, v266, 8uLL));
    *(_DWORD *)a1 = v266.i32[0];
    *(unsigned char *)(a1 + 4) = v266.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::writePackedUncompressedSubblock<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::VecArray<short,4ul>>(uint64_t a1, unsigned char *a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, long long a18, long long a19, long long a20,long long a21,long long a22,long long a23,long long a24)
{
  v86[0] = a3;
  v86[1] = a4;
  v86[2] = a5;
  v86[3] = a6;
  v85[0] = a7;
  v85[1] = a8;
  v85[2] = a9;
  v85[3] = a10;
  v84[0] = a17;
  v84[1] = a18;
  v84[2] = a19;
  v84[3] = a20;
  v83[0] = a21;
  v83[1] = a22;
  int16x8_t v24 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = 8 * (a1 & 7);
  v83[2] = a23;
  v83[3] = a24;
  if (v25) {
    uint64_t v26 = *v24 & ~(-1 << v25);
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  v29.i64[0] = 0x5000500050005;
  v29.i64[1] = 0x5000500050005;
  v30.i64[0] = -1;
  v30.i64[1] = -1;
  int8x16_t v31 = (int8x16_t)vshlq_u16(v30, v29);
  v30.i64[0] = 0xA0000000ALL;
  v30.i64[1] = 0xA0000000ALL;
  int32x4_t v32 = vpaddq_s32((int32x4_t)v30, (int32x4_t)v30);
  v33.i64[0] = v32.u32[0];
  v33.i64[1] = v32.u32[1];
  int64x2_t v34 = v33;
  v33.i64[0] = v32.u32[2];
  v33.i64[1] = v32.u32[3];
  uint64x2_t v35 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v34);
  uint64x2_t v36 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v33);
  int64x2_t v37 = vpaddq_s64(v34, v33);
  uint64_t v38 = vaddvq_s64(v37);
  uint64_t v39 = v37.i64[0] + v25;
  do
  {
    uint16x8_t v40 = (uint16x8_t)vandq_s8(v31, (int8x16_t)v86[v27]);
    int32x4_t v41 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v40.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v40), (uint32x4_t)xmmword_242EA7B80));
    v42.i64[0] = v41.u32[0];
    v42.i64[1] = v41.u32[1];
    uint64x2_t v43 = v42;
    v42.i64[0] = v41.u32[2];
    v42.i64[1] = v41.u32[3];
    int64x2_t v44 = vpaddq_s64((int64x2_t)vshlq_u64(v43, v35), (int64x2_t)vshlq_u64(v42, v36));
    uint64_t v45 = (v25 + v28) & 0x3F;
    unint64_t v46 = (v44.i64[0] << (v25 + v28)) | v26;
    if ((unint64_t)(v37.i64[0] + v45) >= 0x40)
    {
      *(void *)((char *)v24 + (((unint64_t)(v25 + v28) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v46;
      unint64_t v46 = (unint64_t)v44.i64[0] >> -(char)v45;
      if (!v45) {
        unint64_t v46 = 0;
      }
    }
    uint64_t v47 = (v39 + v28) & 0x3F;
    uint64_t v26 = v46 | (v44.i64[1] << (v39 + v28));
    if ((unint64_t)(v47 + v37.i64[1]) >= 0x40)
    {
      *(void *)((char *)v24 + (((unint64_t)(v39 + v28) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v26;
      uint64_t v26 = (unint64_t)v44.i64[1] >> -(char)v47;
      if (!v47) {
        uint64_t v26 = 0;
      }
    }
    v28 += v38;
    ++v27;
  }
  while (v27 != 4);
  uint64_t v48 = 0;
  uint64_t v49 = v37.i64[0] + v37.i64[1];
  uint64_t v50 = v37.i64[0] + v25;
  uint64_t v51 = v37.i64[0] + v37.i64[1] + v28;
  do
  {
    uint64_t v52 = v51;
    uint16x8_t v53 = (uint16x8_t)vandq_s8(v31, (int8x16_t)v85[v48]);
    int32x4_t v54 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v53.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v53), (uint32x4_t)xmmword_242EA7B80));
    v55.i64[0] = v54.u32[0];
    v55.i64[1] = v54.u32[1];
    uint64x2_t v56 = v55;
    v55.i64[0] = v54.u32[2];
    v55.i64[1] = v54.u32[3];
    int64x2_t v57 = vpaddq_s64((int64x2_t)vshlq_u64(v56, v35), (int64x2_t)vshlq_u64(v55, v36));
    uint64_t v58 = (v25 + v28) & 0x3F;
    unint64_t v59 = (v57.i64[0] << (v25 + v28)) | v26;
    if ((unint64_t)(v37.i64[0] + v58) >= 0x40)
    {
      *(void *)((char *)v24 + (((unint64_t)(v25 + v28) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v59;
      unint64_t v59 = (unint64_t)v57.i64[0] >> -(char)v58;
      if (!v58) {
        unint64_t v59 = 0;
      }
    }
    uint64_t v60 = (v50 + v28) & 0x3F;
    uint64_t v26 = v59 | (v57.i64[1] << (v50 + v28));
    if ((unint64_t)(v60 + v37.i64[1]) >= 0x40)
    {
      *(void *)((char *)v24 + (((unint64_t)(v50 + v28) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v26;
      uint64_t v26 = (unint64_t)v57.i64[1] >> -(char)v60;
      if (!v60) {
        uint64_t v26 = 0;
      }
    }
    v51 += v49;
    v28 += v49;
    ++v48;
  }
  while (v48 != 4);
  uint64_t v61 = 0;
  uint64_t v62 = v37.i64[0] + v37.i64[1];
  uint64_t v63 = v37.i64[0] + v25;
  do
  {
    uint16x8_t v64 = (uint16x8_t)vandq_s8(v31, (int8x16_t)v84[v61]);
    int32x4_t v65 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v64.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v64), (uint32x4_t)xmmword_242EA7B80));
    v66.i64[0] = v65.u32[0];
    v66.i64[1] = v65.u32[1];
    uint64x2_t v67 = v66;
    v66.i64[0] = v65.u32[2];
    v66.i64[1] = v65.u32[3];
    int64x2_t v68 = vpaddq_s64((int64x2_t)vshlq_u64(v67, v35), (int64x2_t)vshlq_u64(v66, v36));
    uint64_t v69 = (v25 + v28) & 0x3F;
    unint64_t v70 = (v68.i64[0] << (v25 + v28)) | v26;
    if ((unint64_t)(v37.i64[0] + v69) >= 0x40)
    {
      *(void *)((char *)v24 + (((unint64_t)(v25 + v28) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v70;
      unint64_t v70 = (unint64_t)v68.i64[0] >> -(char)v69;
      if (!v69) {
        unint64_t v70 = 0;
      }
    }
    uint64_t v71 = ((_BYTE)v63 + (_BYTE)v28) & 0x3F;
    uint64_t v26 = v70 | (v68.i64[1] << (v63 + v28));
    if ((unint64_t)(v71 + v37.i64[1]) >= 0x40)
    {
      *(void *)((char *)v24 + (((unint64_t)(v63 + v28) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v26;
      uint64_t v26 = (unint64_t)v68.i64[1] >> -(char)v71;
      if ((((_BYTE)v63 + (_BYTE)v28) & 0x3F) == 0) {
        uint64_t v26 = 0;
      }
    }
    v52 += v62;
    v28 += v62;
    ++v61;
  }
  while (v61 != 4);
  uint64_t v72 = 0;
  uint64_t v73 = v37.i64[0] + v37.i64[1];
  unint64_t v74 = v25 + v52;
  unint64_t v75 = v74 + v37.i64[0];
  do
  {
    uint16x8_t v76 = (uint16x8_t)vandq_s8(v31, (int8x16_t)v83[v72]);
    int32x4_t v77 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v76.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v76), (uint32x4_t)xmmword_242EA7B80));
    v78.i64[0] = v77.u32[0];
    v78.i64[1] = v77.u32[1];
    uint64x2_t v79 = v78;
    v78.i64[0] = v77.u32[2];
    v78.i64[1] = v77.u32[3];
    int64x2_t v80 = vpaddq_s64((int64x2_t)vshlq_u64(v79, v35), (int64x2_t)vshlq_u64(v78, v36));
    unint64_t v81 = (v80.i64[0] << v74) | v26;
    if (v37.i64[0] + (v74 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v24 + ((v74 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v81;
      unint64_t v81 = (unint64_t)v80.i64[0] >> -(v74 & 0x3F);
      if ((v74 & 0x3F) == 0) {
        unint64_t v81 = 0;
      }
    }
    uint64_t result = v75 & 0x3F;
    uint64_t v26 = v81 | (v80.i64[1] << v75);
    if ((unint64_t)(result + v37.i64[1]) >= 0x40)
    {
      *(void *)((char *)v24 + ((v75 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v26;
      uint64_t v26 = (unint64_t)v80.i64[1] >> -(char)result;
      if ((v75 & 0x3F) == 0) {
        uint64_t v26 = 0;
      }
    }
    ++v72;
    v75 += v73;
    v74 += v73;
  }
  while (v72 != 4);
  *a2 = -97;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = a3;
  int16x8_t v13 = (int16x8_t *)result;
  if (a5 >= 8) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = a5;
  }
  if (a6 >= 4) {
    uint64_t v15 = 4;
  }
  else {
    uint64_t v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v14, v15, a7, a8);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v16 = 4 * a2;
  __n128 v17 = a4 + 1;
  if (a6 <= 4) {
    int v18 = 4;
  }
  else {
    int v18 = a6;
  }
  unsigned int v19 = v18 - 4;
  if (v19 >= 4) {
    int v20 = 4;
  }
  else {
    int v20 = v19;
  }
  if (v14 && v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v17, (int16x8_t *)((char *)v13 + v16), a2, v14, v20, a7, a8);
    v11 += result;
  }
  else
  {
    *__n128 v17 = 0;
  }
  int8x16_t v21 = a4 + 2;
  if (a5 <= 8) {
    int v22 = 8;
  }
  else {
    int v22 = a5;
  }
  unsigned int v23 = v22 - 8;
  if (v23 >= 8) {
    int v24 = 8;
  }
  else {
    int v24 = v23;
  }
  if (v24 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v21, v13 + 4, a2, v24, v15, a7, a8);
    v11 += result;
    uint64_t v25 = a4 + 3;
  }
  else
  {
    *int8x16_t v21 = 0;
    uint64_t v25 = a4 + 3;
    if (!v24) {
      goto LABEL_33;
    }
  }
  if (v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v25, (int16x8_t *)((char *)v13 + v16 + 64), a2, v24, v20, a7, a8);
    v11 += result;
    goto LABEL_34;
  }
LABEL_33:
  *uint64_t v25 = 0;
LABEL_34:
  uint64_t v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v26, (int16x8_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7, a8);
    v11 += result;
  }
  else
  {
    *uint64_t v26 = 0;
  }
  uint16x8_t v30 = a4 + 5;
  if (a6 <= 12) {
    int v31 = 12;
  }
  else {
    int v31 = a6;
  }
  unsigned int v32 = v31 - 12;
  if (v32 >= 4) {
    int v33 = 4;
  }
  else {
    int v33 = v32;
  }
  if (v14 && v33)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v30, (int16x8_t *)((char *)v13 + 12 * a2), a2, v14, v33, a7, a8);
    v11 += result;
    int64x2_t v34 = a4 + 6;
    if (!v24) {
      goto LABEL_57;
    }
  }
  else
  {
    *uint16x8_t v30 = 0;
    int64x2_t v34 = a4 + 6;
    if (!v24) {
      goto LABEL_57;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v34, (int16x8_t *)((char *)v13 + 8 * a2 + 64), a2, v24, v29, a7, a8);
    v11 += result;
    uint64x2_t v35 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int64x2_t v34 = 0;
  uint64x2_t v35 = a4 + 7;
  if (!v24)
  {
LABEL_62:
    *uint64x2_t v35 = 0;
    return result;
  }
LABEL_58:
  if (!v33) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v35, (int16x8_t *)((char *)v13 + 12 * a2 + 64), a2, v24, v33, a7, a8);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(_OWORD *a1, uint64_t a2, uint64_t a3, signed int a4)
{
  if (a4 > 158)
  {
    if (a4 == 159)
    {
      v36.i64[0] = 0xA000A000A000ALL;
      v36.i64[1] = 0xA000A000A000ALL;
      int8x16_t v37 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v36, v36));
      v36.i64[0] = vpaddq_s32((int32x4_t)v37, (int32x4_t)v37).u64[0];
      v38.i64[0] = v36.u32[0];
      v38.i64[1] = v36.u32[1];
      int64x2_t v39 = v38;
      unint64_t v40 = vaddvq_s64(v38);
      unint64_t v41 = v40;
      int16x8_t v42 = 0uLL;
      if (v40 <= 0x80)
      {
        uint64x2_t v78 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int64x2_t v79 = vzip1q_s64((int64x2_t)0, v39);
        unint64_t v80 = 8 * (a3 & 7);
        unint64_t v81 = v40 + v80;
        int64x2_t v82 = vaddq_s64(v79, vdupq_n_s64(v80));
        int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v82)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v82)));
        if (v81 > 0x80) {
          int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v78[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v82)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v78[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v82))), v83);
        }
        unint64_t v84 = v81 & 0x3F;
        int16x8_t v85 = (int64x2_t *)((char *)v78 + 8 * (v81 >> 6));
        int64x2_t v86 = vaddq_s64(v79, vdupq_n_s64(v84));
        unint64_t v87 = v41 + v81;
        int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v85, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v86)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85->i64[0], 0), (uint64x2_t)vnegq_s64(v86)));
        if (v41 + v84 >= 0x81) {
          int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v86)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v86))), v88);
        }
        unint64_t v89 = v87 & 0x3F;
        int8x16_t v90 = (int64x2_t *)((char *)v78 + 8 * (v87 >> 6));
        int64x2_t v91 = vaddq_s64(v79, vdupq_n_s64(v89));
        unint64_t v92 = v41 + v87;
        int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
        if (v41 + v89 >= 0x81) {
          int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), v93);
        }
        int32x2_t v94 = (int32x2_t)vextq_s8(v37, v37, 8uLL).u64[0];
        unint64_t v95 = v92 & 0x3F;
        int16x8_t v96 = (int64x2_t *)((char *)v78 + 8 * (v92 >> 6));
        int64x2_t v97 = vaddq_s64(v79, vdupq_n_s64(v95));
        unint64_t v98 = v41 + v92;
        int8x16_t v99 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v97)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v97)));
        if (v41 + v95 >= 0x81) {
          int8x16_t v99 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v97)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v97))), v99);
        }
        unint64_t v100 = v98 & 0x3F;
        int8x16_t v101 = (int64x2_t *)((char *)v78 + 8 * (v98 >> 6));
        int64x2_t v102 = vaddq_s64(v79, vdupq_n_s64(v100));
        unint64_t v103 = v41 + v98;
        int8x16_t v104 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v101, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v101->i64[0], 0), (uint64x2_t)vnegq_s64(v102)));
        if (v41 + v100 > 0x80) {
          int8x16_t v104 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v101[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v101[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v102))), v104);
        }
        int32x2_t v105 = vzip1_s32(*(int32x2_t *)v37.i8, v94);
        unint64_t v106 = v103 & 0x3F;
        int16x8_t v107 = (int64x2_t *)((char *)v78 + 8 * (v103 >> 6));
        int64x2_t v108 = vaddq_s64(v79, vdupq_n_s64(v106));
        unint64_t v109 = v41 + v103;
        int8x16_t v110 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v107, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v108)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v107->i64[0], 0), (uint64x2_t)vnegq_s64(v108)));
        if (v41 + v106 >= 0x81) {
          int8x16_t v110 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v107[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v108)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v107[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v108))), v110);
        }
        v111.i64[0] = v105.u32[0];
        v111.i64[1] = v105.u32[1];
        int64x2_t v112 = v111;
        unint64_t v113 = v109 & 0x3F;
        int16x8_t v114 = (int64x2_t *)((char *)v78 + 8 * (v109 >> 6));
        int64x2_t v115 = vaddq_s64(v79, vdupq_n_s64(v113));
        unint64_t v116 = v41 + v109;
        int8x16_t v117 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v114, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v115)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v114->i64[0], 0), (uint64x2_t)vnegq_s64(v115)));
        if (v41 + v113 >= 0x81) {
          int8x16_t v117 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v114[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v115)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v114[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v115))), v117);
        }
        uint64x2_t v118 = (uint64x2_t)vnegq_s64(v112);
        unint64_t v119 = v116 & 0x3F;
        int16x8_t v120 = (int64x2_t *)((char *)v78 + 8 * (v116 >> 6));
        int64x2_t v121 = vaddq_s64(v79, vdupq_n_s64(v119));
        unint64_t v122 = v41 + v116;
        int8x16_t v123 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v121)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v121)));
        if (v41 + v119 >= 0x81) {
          int8x16_t v123 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v121)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v121))), v123);
        }
        int64x2_t v124 = (int64x2_t)vshlq_u64((uint64x2_t)v83, v118);
        int64x2_t v125 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v118);
        int64x2_t v126 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v118);
        int64x2_t v127 = (int64x2_t)vshlq_u64((uint64x2_t)v99, v118);
        int64x2_t v128 = (int64x2_t)vshlq_u64((uint64x2_t)v104, v118);
        int64x2_t v129 = (int64x2_t)vshlq_u64((uint64x2_t)v110, v118);
        int64x2_t v130 = (int64x2_t)vshlq_u64((uint64x2_t)v117, v118);
        int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v123, v118);
        unint64_t v132 = v122 & 0x3F;
        int16x8_t v133 = (int64x2_t *)((char *)v78 + 8 * (v122 >> 6));
        int64x2_t v134 = vaddq_s64(v79, vdupq_n_s64(v132));
        unint64_t v135 = v41 + v122;
        int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
        if (v41 + v132 > 0x80) {
          int8x16_t v136 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v134))), v136);
        }
        *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
        *(int32x2_t *)v124.i8 = vmovn_s64(v124);
        *(int32x2_t *)v88.i8 = vmovn_s64((int64x2_t)v88);
        *(int32x2_t *)v125.i8 = vmovn_s64(v125);
        *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
        *(int32x2_t *)v126.i8 = vmovn_s64(v126);
        *(int32x2_t *)v99.i8 = vmovn_s64((int64x2_t)v99);
        *(int32x2_t *)v127.i8 = vmovn_s64(v127);
        *(int32x2_t *)v104.i8 = vmovn_s64((int64x2_t)v104);
        *(int32x2_t *)v128.i8 = vmovn_s64(v128);
        *(int32x2_t *)v110.i8 = vmovn_s64((int64x2_t)v110);
        *(int32x2_t *)v129.i8 = vmovn_s64(v129);
        *(int32x2_t *)v117.i8 = vmovn_s64((int64x2_t)v117);
        *(int32x2_t *)v130.i8 = vmovn_s64(v130);
        *(int32x2_t *)v123.i8 = vmovn_s64((int64x2_t)v123);
        *(int32x2_t *)v131.i8 = vmovn_s64(v131);
        int64x2_t v137 = (int64x2_t)vshlq_u64((uint64x2_t)v136, v118);
        *(int32x2_t *)v136.i8 = vmovn_s64((int64x2_t)v136);
        *(int32x2_t *)v137.i8 = vmovn_s64(v137);
        unint64_t v138 = v135 & 0x3F;
        int16x8_t v139 = (int64x2_t *)((char *)v78 + 8 * (v135 >> 6));
        int64x2_t v140 = vaddq_s64(v79, vdupq_n_s64(v138));
        unint64_t v141 = v41 + v135;
        int8x16_t v142 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v139, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v140));
        int8x16_t v143 = vorrq_s8(v142, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139->i64[0], 0), (uint64x2_t)vnegq_s64(v140)));
        if (v41 + v138 >= 0x81)
        {
          int64x2_t v144 = v139[1];
          uint64x2_t v145 = (uint64x2_t)vdupq_lane_s64(v144.i64[0], 0);
          int8x16_t v142 = (int8x16_t)vdupq_laneq_s64(v144, 1);
          int64x2_t v4 = vdupq_n_s64(0xC0uLL);
          int8x16_t v143 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64(v145, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v140)), (int8x16_t)vshlq_u64((uint64x2_t)v142, (uint64x2_t)vsubq_s64(v4, v140))), v143);
        }
        *(int32x2_t *)v142.i8 = vmovn_s64((int64x2_t)v143);
        *(int32x2_t *)v4.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v143, v118));
        int8x16_t v146 = (int64x2_t *)((char *)v78 + 8 * (v141 >> 6));
        int64x2_t v147 = vaddq_s64(v79, vdupq_n_s64(v141 & 0x3F));
        unint64_t v148 = v41 + v141;
        int8x16_t v149 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v146, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v147)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v146->i64[0], 0), (uint64x2_t)vnegq_s64(v147)));
        if (v41 + (v141 & 0x3F) >= 0x81) {
          int8x16_t v149 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v146[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v147)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v146[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v147))), v149);
        }
        int32x4_t v150 = vzip1q_s32((int32x4_t)v83, (int32x4_t)v124);
        int32x4_t v151 = vzip1q_s32((int32x4_t)v88, (int32x4_t)v125);
        int16x8_t v152 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v126);
        int16x8_t v153 = (int16x8_t)vzip1q_s32((int32x4_t)v99, (int32x4_t)v127);
        int16x8_t v154 = (int16x8_t)vzip1q_s32((int32x4_t)v104, (int32x4_t)v128);
        int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v110, (int32x4_t)v129);
        int16x8_t v156 = (int16x8_t)vzip1q_s32((int32x4_t)v117, (int32x4_t)v130);
        int16x8_t v157 = (int16x8_t)vzip1q_s32((int32x4_t)v123, (int32x4_t)v131);
        int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v136, (int32x4_t)v137);
        int16x8_t v159 = (int16x8_t)vzip1q_s32((int32x4_t)v142, (int32x4_t)v4);
        int64x2_t v160 = (int64x2_t)vshlq_u64((uint64x2_t)v149, v118);
        *(int32x2_t *)v88.i8 = vmovn_s64((int64x2_t)v149);
        *(int32x2_t *)v160.i8 = vmovn_s64(v160);
        int16x8_t v161 = (int16x8_t)vzip1q_s32((int32x4_t)v88, (int32x4_t)v160);
        unint64_t v162 = v41 + v148;
        unint64_t v163 = v148 & 0x3F;
        int64x2_t v164 = vaddq_s64(v79, vdupq_n_s64(v163));
        int16x8_t v165 = (int64x2_t *)((char *)v78 + 8 * (v148 >> 6));
        int64x2_t v166 = vdupq_n_s64(0x40uLL);
        int8x16_t v167 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v165->i64[0], 0), (uint64x2_t)vnegq_s64(v164));
        int64x2_t v168 = vsubq_s64(v166, v164);
        int8x16_t v169 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v165, 1), (uint64x2_t)v168);
        int8x16_t v170 = vorrq_s8(v169, v167);
        if (v41 + v163 >= 0x81)
        {
          int64x2_t v171 = v165[1];
          uint64x2_t v172 = (uint64x2_t)vdupq_lane_s64(v171.i64[0], 0);
          int8x16_t v169 = (int8x16_t)vdupq_laneq_s64(v171, 1);
          int8x16_t v167 = (int8x16_t)vshlq_u64(v172, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v164));
          int64x2_t v168 = vdupq_n_s64(0xC0uLL);
          int8x16_t v170 = vorrq_s8(vorrq_s8(v167, (int8x16_t)vshlq_u64((uint64x2_t)v169, (uint64x2_t)vsubq_s64(v168, v164))), v170);
        }
        v173.i64[0] = 0x1000100010001;
        v173.i64[1] = 0x1000100010001;
        *(int16x4_t *)v167.i8 = vmovn_s32(v150);
        *(int16x4_t *)v168.i8 = vshrn_n_s32(v150, 0xAuLL);
        *(int16x4_t *)v166.i8 = vmovn_s32(v151);
        *(int16x4_t *)v110.i8 = vshrn_n_s32(v151, 0xAuLL);
        *(int16x4_t *)v117.i8 = vmovn_s32((int32x4_t)v152);
        *(int16x4_t *)v152.i8 = vshrn_n_s32((int32x4_t)v152, 0xAuLL);
        *(int16x4_t *)v126.i8 = vmovn_s32((int32x4_t)v153);
        *(int16x4_t *)v153.i8 = vshrn_n_s32((int32x4_t)v153, 0xAuLL);
        *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v154);
        *(int16x4_t *)v154.i8 = vshrn_n_s32((int32x4_t)v154, 0xAuLL);
        *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v155);
        *(int16x4_t *)v155.i8 = vshrn_n_s32((int32x4_t)v155, 0xAuLL);
        *(int16x4_t *)v123.i8 = vmovn_s32((int32x4_t)v156);
        *(int16x4_t *)v131.i8 = vshrn_n_s32((int32x4_t)v156, 0xAuLL);
        *(int16x4_t *)v137.i8 = vmovn_s32((int32x4_t)v157);
        *(int16x4_t *)v136.i8 = vshrn_n_s32((int32x4_t)v157, 0xAuLL);
        *(int16x4_t *)v169.i8 = vmovn_s32((int32x4_t)v158);
        *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xAuLL);
        *(int16x4_t *)v157.i8 = vmovn_s32((int32x4_t)v159);
        *(int16x4_t *)v159.i8 = vshrn_n_s32((int32x4_t)v159, 0xAuLL);
        *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v161);
        *(int16x4_t *)v161.i8 = vshrn_n_s32((int32x4_t)v161, 0xAuLL);
        int64x2_t v174 = (int64x2_t)vshlq_u64((uint64x2_t)v170, v118);
        *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v170);
        *(int32x2_t *)v174.i8 = vmovn_s64(v174);
        int16x8_t v175 = (int16x8_t)vzip1q_s32(v150, (int32x4_t)v174);
        *(int16x4_t *)v174.i8 = vmovn_s32((int32x4_t)v175);
        *(int16x4_t *)v175.i8 = vshrn_n_s32((int32x4_t)v175, 0xAuLL);
        unint64_t v176 = v162 & 0x3F;
        int16x8_t v177 = (int64x2_t *)((char *)v78 + 8 * (v162 >> 6));
        int64x2_t v178 = vaddq_s64(v79, vdupq_n_s64(v176));
        unint64_t v179 = v41 + v162;
        int8x16_t v180 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v177, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v177->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
        int16x8_t v597 = (int16x8_t)v169;
        if (v41 + v176 > 0x80) {
          int8x16_t v180 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v177[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v177[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v180);
        }
        int16x8_t v181 = vshlq_n_s16(v173, 0xAuLL);
        int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v180, v118);
        *(int32x2_t *)v180.i8 = vmovn_s64((int64x2_t)v180);
        *(int32x2_t *)v182.i8 = vmovn_s64(v182);
        int16x8_t v183 = (int16x8_t)vzip1q_s32((int32x4_t)v180, (int32x4_t)v182);
        *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v183);
        *(int16x4_t *)v183.i8 = vshrn_n_s32((int32x4_t)v183, 0xAuLL);
        int16x8_t v184 = (int64x2_t *)((char *)v78 + 8 * (v179 >> 6));
        int64x2_t v185 = vaddq_s64(v79, vdupq_n_s64(v179 & 0x3F));
        unint64_t v186 = v41 + v179;
        int8x16_t v187 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v184, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v185)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v184->i64[0], 0), (uint64x2_t)vnegq_s64(v185)));
        if (v41 + (v179 & 0x3F) >= 0x81) {
          int8x16_t v187 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v184[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v185)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v184[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v185))), v187);
        }
        v188.i64[0] = -1;
        v188.i64[1] = -1;
        int8x16_t v189 = (int8x16_t)vaddq_s16(v181, v188);
        int8x16_t v190 = (int8x16_t)vzip1q_s16((int16x8_t)v167, (int16x8_t)v168);
        int8x16_t v191 = (int8x16_t)vzip1q_s16((int16x8_t)v166, (int16x8_t)v110);
        int8x16_t v192 = (int8x16_t)vzip1q_s16((int16x8_t)v117, v152);
        int8x16_t v193 = (int8x16_t)vzip1q_s16((int16x8_t)v126, v153);
        int8x16_t v194 = (int8x16_t)vzip1q_s16((int16x8_t)v128, v154);
        int8x16_t v195 = (int8x16_t)vzip1q_s16((int16x8_t)v130, v155);
        int8x16_t v196 = (int8x16_t)vzip1q_s16((int16x8_t)v123, (int16x8_t)v131);
        int8x16_t v197 = (int8x16_t)vzip1q_s16((int16x8_t)v137, (int16x8_t)v136);
        int8x16_t v198 = (int8x16_t)vzip1q_s16(v597, v158);
        int8x16_t v199 = (int8x16_t)vzip1q_s16(v157, v159);
        int8x16_t v200 = (int8x16_t)vzip1q_s16(v156, v161);
        int8x16_t v201 = (int8x16_t)vzip1q_s16((int16x8_t)v174, v175);
        int8x16_t v202 = (int8x16_t)vzip1q_s16((int16x8_t)v180, v183);
        int64x2_t v203 = (int64x2_t)vshlq_u64((uint64x2_t)v187, v118);
        *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v187);
        *(int32x2_t *)v203.i8 = vmovn_s64(v203);
        int16x8_t v204 = (int16x8_t)vzip1q_s32((int32x4_t)v154, (int32x4_t)v203);
        *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v204);
        *(int16x4_t *)v204.i8 = vshrn_n_s32((int32x4_t)v204, 0xAuLL);
        int8x16_t v205 = (int8x16_t)vzip1q_s16(v154, v204);
        unint64_t v206 = v41 + v186;
        unint64_t v207 = v186 & 0x3F;
        int64x2_t v208 = vaddq_s64(v79, vdupq_n_s64(v207));
        int16x8_t v209 = (int64x2_t *)((char *)v78 + 8 * (v186 >> 6));
        int8x16_t v210 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v209, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209->i64[0], 0), (uint64x2_t)vnegq_s64(v208)));
        if (v41 + v207 >= 0x81) {
          int8x16_t v210 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v209[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v208))), v210);
        }
        int16x8_t v211 = (int16x8_t)vandq_s8(v190, v189);
        int16x8_t v212 = (int16x8_t)vandq_s8(v191, v189);
        int16x8_t v213 = (int16x8_t)vandq_s8(v192, v189);
        int16x8_t v214 = (int16x8_t)vandq_s8(v193, v189);
        int16x8_t v215 = (int16x8_t)vandq_s8(v194, v189);
        int16x8_t v216 = (int16x8_t)vandq_s8(v195, v189);
        int16x8_t v217 = (int16x8_t)vandq_s8(v196, v189);
        int16x8_t v218 = (int16x8_t)vandq_s8(v197, v189);
        int16x8_t v219 = (int16x8_t)vandq_s8(v198, v189);
        int16x8_t v220 = (int16x8_t)vandq_s8(v199, v189);
        int16x8_t v221 = (int16x8_t)vandq_s8(v200, v189);
        int16x8_t v222 = (int16x8_t)vandq_s8(v201, v189);
        int16x8_t v223 = (int16x8_t)vandq_s8(v202, v189);
        int16x8_t v224 = (int16x8_t)vandq_s8(v205, v189);
        int64x2_t v225 = (int64x2_t)vshlq_u64((uint64x2_t)v210, v118);
        *(int32x2_t *)v198.i8 = vmovn_s64((int64x2_t)v210);
        *(int32x2_t *)v225.i8 = vmovn_s64(v225);
        int16x8_t v226 = (int16x8_t)vzip1q_s32((int32x4_t)v198, (int32x4_t)v225);
        *(int16x4_t *)v198.i8 = vmovn_s32((int32x4_t)v226);
        *(int16x4_t *)v226.i8 = vshrn_n_s32((int32x4_t)v226, 0xAuLL);
        int8x16_t v227 = (int8x16_t)vzip1q_s16((int16x8_t)v198, v226);
        int16x8_t v228 = (int64x2_t *)((char *)v78 + 8 * (v206 >> 6));
        int64x2_t v229 = vaddq_s64(v79, vdupq_n_s64(v206 & 0x3F));
        int16x8_t v230 = (int16x8_t)vandq_s8(v227, v189);
        int8x16_t v231 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v228, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228->i64[0], 0), (uint64x2_t)vnegq_s64(v229)));
        if (v41 + (v206 & 0x3F) >= 0x81) {
          int8x16_t v231 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v228[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v229))), v231);
        }
        int16x8_t v53 = vshlq_n_s16(v215, 6uLL);
        int16x8_t v52 = vshlq_n_s16(v216, 6uLL);
        int16x8_t v51 = vshlq_n_s16(v217, 6uLL);
        int16x8_t v50 = vshlq_n_s16(v218, 6uLL);
        int16x8_t v42 = vshlq_n_s16(v219, 6uLL);
        int16x8_t v43 = vshlq_n_s16(v220, 6uLL);
        int16x8_t v44 = vshlq_n_s16(v221, 6uLL);
        int16x8_t v45 = vshlq_n_s16(v222, 6uLL);
        int64x2_t v232 = (int64x2_t)vshlq_u64((uint64x2_t)v231, v118);
        *(int32x2_t *)v222.i8 = vmovn_s64((int64x2_t)v231);
        *(int32x2_t *)v232.i8 = vmovn_s64(v232);
        int16x8_t v233 = (int16x8_t)vzip1q_s32((int32x4_t)v222, (int32x4_t)v232);
        *(int16x4_t *)v222.i8 = vmovn_s32((int32x4_t)v233);
        *(int16x4_t *)v233.i8 = vshrn_n_s32((int32x4_t)v233, 0xAuLL);
        int16x8_t v57 = vshlq_n_s16(v223, 6uLL);
        int16x8_t v56 = vshlq_n_s16(v224, 6uLL);
        int16x8_t v55 = vshlq_n_s16(v230, 6uLL);
        int16x8_t v54 = vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v222, v233), v189), 6uLL);
        int16x8_t v46 = vshlq_n_s16(v211, 6uLL);
        int16x8_t v47 = vshlq_n_s16(v212, 6uLL);
        int16x8_t v48 = vshlq_n_s16(v213, 6uLL);
        int16x8_t v49 = vshlq_n_s16(v214, 6uLL);
      }
      else
      {
        int16x8_t v43 = 0uLL;
        int16x8_t v44 = 0uLL;
        int16x8_t v45 = 0uLL;
        int16x8_t v46 = 0uLL;
        int16x8_t v47 = 0uLL;
        int16x8_t v48 = 0uLL;
        int16x8_t v49 = 0uLL;
        int16x8_t v50 = 0uLL;
        int16x8_t v51 = 0uLL;
        int16x8_t v52 = 0uLL;
        int16x8_t v53 = 0uLL;
        int16x8_t v54 = 0uLL;
        int16x8_t v55 = 0uLL;
        int16x8_t v56 = 0uLL;
        int16x8_t v57 = 0uLL;
      }
      int16x8_t v234 = (int16x8_t *)((char *)a1 + a2);
      *a1 = v46;
      a1[1] = v47;
      a1[2] = v53;
      a1[3] = v52;
      int8x16_t v235 = (int16x8_t *)((char *)a1 + 2 * a2);
      *int16x8_t v234 = v48;
      v234[1] = v49;
      v234[2] = v51;
      v234[3] = v50;
      *int8x16_t v235 = v42;
      v235[1] = v43;
      v235[2] = v57;
      v235[3] = v56;
      int8x16_t v236 = (int16x8_t *)((char *)v235 + a2);
      uint64_t result = 160;
      *int8x16_t v236 = v44;
      v236[1] = v45;
      v236[2] = v55;
      v236[3] = v54;
      return result;
    }
    if (a4 == 255)
    {
      long long v14 = *(_OWORD *)(a3 + 16);
      long long v15 = *(_OWORD *)(a3 + 32);
      long long v16 = *(_OWORD *)(a3 + 48);
      long long v17 = *(_OWORD *)(a3 + 128);
      long long v18 = *(_OWORD *)(a3 + 144);
      long long v19 = *(_OWORD *)(a3 + 96);
      long long v20 = *(_OWORD *)(a3 + 192);
      long long v21 = *(_OWORD *)(a3 + 208);
      long long v22 = *(_OWORD *)(a3 + 224);
      long long v23 = *(_OWORD *)(a3 + 240);
      long long v24 = *(_OWORD *)(a3 + 112);
      long long v25 = *(_OWORD *)(a3 + 64);
      long long v26 = *(_OWORD *)(a3 + 80);
      long long v27 = *(_OWORD *)(a3 + 160);
      long long v28 = *(_OWORD *)(a3 + 176);
      int v29 = (_OWORD *)((char *)a1 + a2);
      *a1 = *(_OWORD *)a3;
      a1[1] = v14;
      a1[2] = v25;
      a1[3] = v26;
      uint16x8_t v30 = (_OWORD *)((char *)a1 + 2 * a2);
      *int v29 = v15;
      v29[1] = v16;
      v29[2] = v19;
      v29[3] = v24;
      *uint16x8_t v30 = v17;
      v30[1] = v18;
      v30[2] = v20;
      v30[3] = v21;
      int v31 = (_OWORD *)((char *)v30 + a2);
      uint64_t result = 256;
      *int v31 = v27;
      v31[1] = v28;
      v31[2] = v22;
      v31[3] = v23;
      return result;
    }
  }
  else
  {
    if (!a4)
    {
      uint64_t result = 0;
      int64x2_t v32 = 0uLL;
      a1[2] = 0u;
      a1[3] = 0u;
      *a1 = 0u;
      a1[1] = 0u;
      int v33 = (_OWORD *)((char *)a1 + a2);
      v33[2] = 0u;
      v33[3] = 0u;
      *int v33 = 0u;
      v33[1] = 0u;
      int64x2_t v34 = (_OWORD *)((char *)a1 + 2 * a2);
      v34[2] = 0u;
      v34[3] = 0u;
      *int64x2_t v34 = 0u;
      v34[1] = 0u;
      uint64x2_t v35 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
      v35[2] = 0u;
      v35[3] = 0u;
LABEL_266:
      *uint64x2_t v35 = v32;
      v35[1] = v32;
      return result;
    }
    if (a4 == 4)
    {
      uint64x2_t v7 = (uint64x2_t)vld1q_dup_f64((const double *)a3);
      int8x16_t v8 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v7, (uint64x2_t)xmmword_242EA7AE0), (int8x16_t)xmmword_242EA7B10), vandq_s8((int8x16_t)vshlq_u64(v7, (uint64x2_t)xmmword_242EA7AF0), (int8x16_t)xmmword_242EA7B00));
      int64x2_t v9 = vdupq_n_s64(*(void *)&vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)));
      *a1 = v9;
      a1[1] = v9;
      a1[2] = v9;
      a1[3] = v9;
      int16x8_t v10 = (int64x2_t *)((char *)a1 + a2);
      *int16x8_t v10 = v9;
      v10[1] = v9;
      v10[2] = v9;
      v10[3] = v9;
      uint64_t v11 = (int64x2_t *)((char *)a1 + 2 * a2);
      *uint64_t v11 = v9;
      v11[1] = v9;
      v11[2] = v9;
      v11[3] = v9;
      int16x8_t v12 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
      *int16x8_t v12 = v9;
      v12[1] = v9;
      v12[2] = v9;
      v12[3] = v9;
      return 5;
    }
  }
  unsigned __int8 v602 = 0;
  unint64_t v599 = 8 * (a3 & 7);
  unint64_t v600 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v601 = v599 | 0x500;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v612, (uint64_t)v617, (uint64_t)&v611, &v599, a4);
  v59.i64[0] = 0x3000300030003;
  v59.i64[1] = 0x3000300030003;
  int8x16_t v60 = v612;
  int16x8_t v61 = (int16x8_t)vandq_s8(v612, v59);
  int8x16_t v62 = vbicq_s8(v617[0], (int8x16_t)vceqq_s16(v61, (int16x8_t)v59));
  v617[0] = v62;
  int16x8_t v613 = (int16x8_t)v62;
  int16x8_t v614 = (int16x8_t)v62;
  int16x8_t v615 = (int16x8_t)v62;
  int16x8_t v616 = (int16x8_t)v62;
  v63.i64[0] = 0x202020202020202;
  v63.i64[1] = 0x202020202020202;
  int8x16_t v64 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v612.i8, (int16x4_t)0x4000400040004)), v63);
  unint64_t v65 = v599;
  if (vmaxvq_s8(v64) < 1)
  {
    v237.i64[0] = -1;
    v237.i64[1] = -1;
    v238.i64[0] = -1;
    v238.i64[1] = -1;
    v239.i64[0] = -1;
    v239.i64[1] = -1;
    v240.i64[0] = -1;
    v240.i64[1] = -1;
  }
  else
  {
    int8x16_t v66 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v64, v64));
    int8x16_t v67 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v66, (int16x8_t)v66));
    unint64_t v68 = vpaddq_s32((int32x4_t)v67, (int32x4_t)v67).u64[0];
    v69.i64[0] = v68;
    v69.i64[1] = HIDWORD(v68);
    int64x2_t v70 = v69;
    unint64_t v71 = vaddvq_s64(v69);
    unint64_t v72 = v71;
    unint64_t v73 = v599 + v71;
    if (v601) {
      BOOL v74 = v601 >= v73;
    }
    else {
      BOOL v74 = 1;
    }
    int v75 = !v74;
    if (v71 <= 0x80 && v75 == 0)
    {
      v58.i64[0] = 63;
      int16x8_t v241 = (int64x2_t *)(v600 + 8 * (v599 >> 6));
      int64x2_t v242 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v599, v58).i64[0], 0), vzip1q_s64((int64x2_t)0, v70));
      int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v241, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v241->i64[0], 0), (uint64x2_t)vnegq_s64(v242)));
      if ((v599 & 0x3F) + v72 >= 0x81) {
        int8x16_t v77 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v241[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v241[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v242))), v77);
      }
      unint64_t v65 = v73;
    }
    else
    {
      unsigned __int8 v602 = 1;
      int8x16_t v77 = 0uLL;
    }
    int32x2_t v243 = vzip1_s32(*(int32x2_t *)v67.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL));
    v244.i64[0] = v243.u32[0];
    v244.i64[1] = v243.u32[1];
    int64x2_t v245 = (int64x2_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v244));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v245.i8 = vmovn_s64(v245);
    int16x8_t v246 = (int16x8_t)vzip1q_s32((int32x4_t)v77, (int32x4_t)v245);
    int16x8_t v247 = (int16x8_t)vshlq_u32((uint32x4_t)v246, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v66.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL)))));
    *(int16x4_t *)v246.i8 = vmovn_s32((int32x4_t)v246);
    *(int16x4_t *)v247.i8 = vmovn_s32((int32x4_t)v247);
    int8x16_t v248 = (int8x16_t)vzip1q_s16(v246, v247);
    int8x16_t v249 = (int8x16_t)vshlq_u16((uint16x8_t)v248, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))));
    *(int8x8_t *)v248.i8 = vmovn_s16((int16x8_t)v248);
    *(int8x8_t *)v249.i8 = vmovn_s16((int16x8_t)v249);
    int8x16_t v250 = vzip1q_s8(v248, v249);
    v249.i64[0] = 0x101010101010101;
    v249.i64[1] = 0x101010101010101;
    int8x16_t v251 = vshlq_s8(v249, v64);
    v249.i64[0] = -1;
    v249.i64[1] = -1;
    int32x4_t v252 = (int32x4_t)vqtbl1q_s8(vandq_s8(v250, vaddq_s8(v251, v249)), (int8x16_t)xmmword_242EA7560);
    *(int32x2_t *)v250.i8 = vdup_lane_s32(*(int32x2_t *)v252.i8, 0);
    *(int32x2_t *)v249.i8 = vdup_lane_s32(*(int32x2_t *)v252.i8, 1);
    int8x8_t v253 = (int8x8_t)vdupq_laneq_s32(v252, 2).u64[0];
    v252.i64[0] = vdupq_laneq_s32(v252, 3).u64[0];
    int16x8_t v613 = vsubw_s8(v613, *(int8x8_t *)v250.i8);
    int16x8_t v614 = vsubw_s8(v614, *(int8x8_t *)v249.i8);
    int16x8_t v615 = vsubw_s8(v615, v253);
    int16x8_t v616 = vsubw_s8(v616, *(int8x8_t *)v252.i8);
    int16x8_t v240 = vmovl_s8(vceqz_s8(*(int8x8_t *)v250.i8));
    int16x8_t v239 = vmovl_s8(vceqz_s8(*(int8x8_t *)v249.i8));
    int16x8_t v238 = vmovl_s8(vceqz_s8(v253));
    int16x8_t v237 = vmovl_s8(vceqz_s8(*(int8x8_t *)v252.i8));
  }
  v254.i64[0] = 0x8000800080008;
  v254.i64[1] = 0x8000800080008;
  int8x16_t v255 = 0uLL;
  int8x16_t v256 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v612, v254), (int8x16_t)0, 8uLL), v62);
  int8x16_t v257 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v256, (int16x8_t)v256));
  unint64_t v258 = vpaddq_s32((int32x4_t)v257, (int32x4_t)v257).u64[0];
  v259.i64[0] = v258;
  v259.i64[1] = HIDWORD(v258);
  int64x2_t v260 = v259;
  unint64_t v261 = vaddvq_s64(v259);
  if (v601) {
    BOOL v262 = v601 >= v65 + v261;
  }
  else {
    BOOL v262 = 1;
  }
  int v263 = !v262;
  if (v261 <= 0x80 && v263 == 0)
  {
    int64x2_t v265 = vaddq_s64(vdupq_n_s64(v65 & 0x3F), vzip1q_s64((int64x2_t)0, v260));
    int8x16_t v266 = (int64x2_t *)(v600 + 8 * (v65 >> 6));
    int8x16_t v255 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v266, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266->i64[0], 0), (uint64x2_t)vnegq_s64(v265)));
    if ((v65 & 0x3F) + v261 >= 0x81) {
      int8x16_t v255 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v266[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v265))), v255);
    }
    v65 += v261;
  }
  else
  {
    unsigned __int8 v602 = 1;
  }
  int v267 = v612.i8[0] & 3;
  if (v267 == 2)
  {
    unint64_t v268 = v65 + 8;
    if (v601)
    {
      if (v601 < v268)
      {
        unsigned __int8 v602 = 1;
LABEL_83:
        unsigned __int8 v602 = 1;
        goto LABEL_84;
      }
      unint64_t v269 = v65 + 16;
      v65 += 8;
      if (v601 < v269) {
        goto LABEL_83;
      }
      unint64_t v268 = v65;
    }
    unint64_t v65 = v268 + 8;
  }
LABEL_84:
  int8x16_t v270 = 0uLL;
  int8x16_t v271 = vextq_s8((int8x16_t)0, (int8x16_t)v613, 8uLL);
  int8x16_t v272 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v271, (int16x8_t)v271));
  unint64_t v273 = vpaddq_s32((int32x4_t)v272, (int32x4_t)v272).u64[0];
  v274.i64[0] = v273;
  v274.i64[1] = HIDWORD(v273);
  int64x2_t v275 = v274;
  unint64_t v276 = vaddvq_s64(v274);
  unint64_t v277 = v65 + v276;
  if (v601) {
    BOOL v278 = v601 >= v277;
  }
  else {
    BOOL v278 = 1;
  }
  int v279 = !v278;
  if (v276 > 0x80 || v279)
  {
    int v284 = 1;
    unint64_t v282 = v600;
  }
  else
  {
    unint64_t v280 = v65 & 0x3F;
    int64x2_t v281 = vaddq_s64(vdupq_n_s64(v280), vzip1q_s64((int64x2_t)0, v275));
    unint64_t v282 = v600;
    unint64_t v283 = (int64x2_t *)(v600 + 8 * (v65 >> 6));
    int8x16_t v270 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v283, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v281)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v283->i64[0], 0), (uint64x2_t)vnegq_s64(v281)));
    if (v280 + v276 >= 0x81) {
      int8x16_t v270 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v283[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v281)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v283[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v281))), v270);
    }
    int v284 = v602;
    unint64_t v65 = v277;
  }
  v285.i64[0] = 0xF000F000F000FLL;
  v285.i64[1] = 0xF000F000F000FLL;
  v286.i64[0] = 0x10001000100010;
  v286.i64[1] = 0x10001000100010;
  int8x16_t v287 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v613, v613));
  unint64_t v288 = vpaddq_s32((int32x4_t)v287, (int32x4_t)v287).u64[0];
  v289.i64[0] = v288;
  v289.i64[1] = HIDWORD(v288);
  int64x2_t v290 = v289;
  unint64_t v291 = vaddvq_s64(v289);
  unint64_t v292 = v291;
  unint64_t v293 = v65 + v291;
  if (v601) {
    BOOL v294 = v601 >= v293;
  }
  else {
    BOOL v294 = 1;
  }
  char v295 = !v294;
  int8x16_t v296 = 0uLL;
  if (v291 > 0x80 || (v295 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v293 = v65;
    int8x16_t v300 = 0uLL;
  }
  else
  {
    unint64_t v297 = v65 & 0x3F;
    int64x2_t v298 = vaddq_s64(vdupq_n_s64(v297), vzip1q_s64((int64x2_t)0, v290));
    int8x16_t v299 = (int64x2_t *)(v282 + 8 * (v65 >> 6));
    int8x16_t v300 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v299, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v298)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v299->i64[0], 0), (uint64x2_t)vnegq_s64(v298)));
    if (v297 + v292 >= 0x81) {
      int8x16_t v300 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v299[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v298)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v299[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v298))), v300);
    }
  }
  int32x2_t v301 = vzip1_s32(*(int32x2_t *)v287.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v287, v287, 8uLL));
  v302.i64[0] = v301.u32[0];
  v302.i64[1] = v301.u32[1];
  uint64x2_t v303 = (uint64x2_t)vnegq_s64(v302);
  int64x2_t v304 = (int64x2_t)vshlq_u64((uint64x2_t)v300, v303);
  *(int32x2_t *)v300.i8 = vmovn_s64((int64x2_t)v300);
  *(int32x2_t *)v304.i8 = vmovn_s64(v304);
  int16x8_t v305 = (int16x8_t)vzip1q_s32((int32x4_t)v300, (int32x4_t)v304);
  uint32x4_t v306 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v613.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v613, (int8x16_t)v613, 8uLL))));
  int16x8_t v307 = (int16x8_t)vshlq_u32((uint32x4_t)v305, v306);
  *(int16x4_t *)v305.i8 = vmovn_s32((int32x4_t)v305);
  *(int16x4_t *)v307.i8 = vmovn_s32((int32x4_t)v307);
  int16x8_t v308 = vzip1q_s16(v305, v307);
  int16x8_t v309 = vaddq_s16(v613, v285);
  int16x8_t v310 = vsubq_s16(v286, v613);
  int16x8_t v311 = vshlq_s16(vshlq_s16(v308, v310), v309);
  int16x8_t v604 = v311;
  unint64_t v312 = v293 + v292;
  if (v601) {
    BOOL v313 = v601 >= v312;
  }
  else {
    BOOL v313 = 1;
  }
  char v314 = !v313;
  if (v292 > 0x80 || (v314 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v312 = v293;
  }
  else
  {
    unint64_t v315 = v293 & 0x3F;
    int64x2_t v316 = vaddq_s64(vdupq_n_s64(v315), vzip1q_s64((int64x2_t)0, v290));
    unint64_t v317 = (int64x2_t *)(v282 + 8 * (v293 >> 6));
    int8x16_t v296 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v317, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v316)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v317->i64[0], 0), (uint64x2_t)vnegq_s64(v316)));
    if (v315 + v292 >= 0x81) {
      int8x16_t v296 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v317[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v316)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v317[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v316))), v296);
    }
  }
  int64x2_t v318 = (int64x2_t)vshlq_u64((uint64x2_t)v296, v303);
  *(int32x2_t *)v296.i8 = vmovn_s64((int64x2_t)v296);
  *(int32x2_t *)v318.i8 = vmovn_s64(v318);
  int16x8_t v319 = (int16x8_t)vzip1q_s32((int32x4_t)v296, (int32x4_t)v318);
  int16x8_t v320 = (int16x8_t)vshlq_u32((uint32x4_t)v319, v306);
  *(int16x4_t *)v319.i8 = vmovn_s32((int32x4_t)v319);
  *(int16x4_t *)v320.i8 = vmovn_s32((int32x4_t)v320);
  int16x8_t v321 = vshlq_s16(vshlq_s16(vzip1q_s16(v319, v320), v310), v309);
  int16x8_t v605 = v321;
  unint64_t v322 = v312 + v292;
  if (v601) {
    BOOL v323 = v601 >= v322;
  }
  else {
    BOOL v323 = 1;
  }
  char v324 = !v323;
  int8x16_t v325 = 0uLL;
  if (v292 > 0x80 || (v324 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v322 = v312;
    int8x16_t v329 = 0uLL;
  }
  else
  {
    unint64_t v326 = v312 & 0x3F;
    int64x2_t v327 = vaddq_s64(vdupq_n_s64(v326), vzip1q_s64((int64x2_t)0, v290));
    int32x4_t v328 = (int64x2_t *)(v282 + 8 * (v312 >> 6));
    int8x16_t v329 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v328, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v327)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v328->i64[0], 0), (uint64x2_t)vnegq_s64(v327)));
    if (v326 + v292 >= 0x81) {
      int8x16_t v329 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v328[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v327)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v328[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v327))), v329);
    }
  }
  int64x2_t v330 = (int64x2_t)vshlq_u64((uint64x2_t)v329, v303);
  *(int32x2_t *)v329.i8 = vmovn_s64((int64x2_t)v329);
  *(int32x2_t *)v330.i8 = vmovn_s64(v330);
  int16x8_t v331 = (int16x8_t)vzip1q_s32((int32x4_t)v329, (int32x4_t)v330);
  int16x8_t v332 = (int16x8_t)vshlq_u32((uint32x4_t)v331, v306);
  *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
  *(int16x4_t *)v332.i8 = vmovn_s32((int32x4_t)v332);
  int16x8_t v333 = vshlq_s16(vshlq_s16(vzip1q_s16(v331, v332), v310), v309);
  int16x8_t v606 = v333;
  int8x16_t v334 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v614, v614));
  v331.i64[0] = vpaddq_s32((int32x4_t)v334, (int32x4_t)v334).u64[0];
  v335.i64[0] = v331.u32[0];
  v335.i64[1] = v331.u32[1];
  int64x2_t v336 = v335;
  unint64_t v337 = vaddvq_s64(v335);
  unint64_t v338 = v337;
  unint64_t v339 = v322 + v337;
  if (v601) {
    BOOL v340 = v601 >= v339;
  }
  else {
    BOOL v340 = 1;
  }
  char v341 = !v340;
  if (v337 > 0x80 || (v341 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v339 = v322;
  }
  else
  {
    unint64_t v342 = v322 & 0x3F;
    int64x2_t v343 = vaddq_s64(vdupq_n_s64(v342), vzip1q_s64((int64x2_t)0, v336));
    int32x4_t v344 = (int64x2_t *)(v282 + 8 * (v322 >> 6));
    int8x16_t v325 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v344, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v343)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v344->i64[0], 0), (uint64x2_t)vnegq_s64(v343)));
    if (v342 + v338 >= 0x81) {
      int8x16_t v325 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v344[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v343)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v344[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v343))), v325);
    }
  }
  unint64_t v345 = v339 + v338;
  if (v601) {
    BOOL v346 = v601 >= v345;
  }
  else {
    BOOL v346 = 1;
  }
  char v347 = !v346;
  int8x16_t v348 = 0uLL;
  if (v338 > 0x80 || (v347 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v345 = v339;
    int8x16_t v352 = 0uLL;
  }
  else
  {
    unint64_t v349 = v339 & 0x3F;
    int64x2_t v350 = vaddq_s64(vdupq_n_s64(v349), vzip1q_s64((int64x2_t)0, v336));
    int64x2_t v351 = (int64x2_t *)(v282 + 8 * (v339 >> 6));
    int8x16_t v352 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v351, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v350)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v351->i64[0], 0), (uint64x2_t)vnegq_s64(v350)));
    if (v349 + v338 >= 0x81) {
      int8x16_t v352 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v351[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v350)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v351[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v350))), v352);
    }
  }
  unint64_t v353 = v345 + v338;
  if (v601) {
    BOOL v354 = v601 >= v353;
  }
  else {
    BOOL v354 = 1;
  }
  char v355 = !v354;
  int8x16_t v595 = (int8x16_t)v240;
  if (v338 > 0x80 || (v355 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v353 = v345;
  }
  else
  {
    int64x2_t v356 = vaddq_s64(vdupq_n_s64(v345 & 0x3F), vzip1q_s64((int64x2_t)0, v336));
    unint64_t v357 = (int64x2_t *)(v282 + 8 * (v345 >> 6));
    int8x16_t v348 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v357, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v356)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v357->i64[0], 0), (uint64x2_t)vnegq_s64(v356)));
    if ((v345 & 0x3F) + v338 >= 0x81) {
      int8x16_t v348 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v357[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v356)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v357[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v356))), v348);
    }
  }
  unint64_t v358 = v353 + v338;
  if (v601) {
    BOOL v359 = v601 >= v358;
  }
  else {
    BOOL v359 = 1;
  }
  char v360 = !v359;
  int8x16_t v361 = 0uLL;
  int8x16_t v596 = (int8x16_t)v237;
  int16x8_t v598 = v61;
  int8x16_t v593 = (int8x16_t)v239;
  if (v338 > 0x80 || (v360 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v358 = v353;
    int8x16_t v364 = 0uLL;
  }
  else
  {
    int64x2_t v362 = vaddq_s64(vdupq_n_s64(v353 & 0x3F), vzip1q_s64((int64x2_t)0, v336));
    int32x4_t v363 = (int64x2_t *)(v282 + 8 * (v353 >> 6));
    int8x16_t v364 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v363, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v362)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v363->i64[0], 0), (uint64x2_t)vnegq_s64(v362)));
    if ((v353 & 0x3F) + v338 >= 0x81) {
      int8x16_t v364 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v363[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v362)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v363[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v362))), v364);
    }
  }
  int8x16_t v365 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v615, v615));
  unint64_t v366 = vpaddq_s32((int32x4_t)v365, (int32x4_t)v365).u64[0];
  v367.i64[0] = v366;
  v367.i64[1] = HIDWORD(v366);
  int64x2_t v368 = v367;
  unint64_t v369 = vaddvq_s64(v367);
  unint64_t v370 = v369;
  unint64_t v371 = v358 + v369;
  if (v601) {
    BOOL v372 = v601 >= v371;
  }
  else {
    BOOL v372 = 1;
  }
  char v373 = !v372;
  int8x16_t v594 = (int8x16_t)v238;
  if (v369 > 0x80 || (v373 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v371 = v358;
  }
  else
  {
    unint64_t v374 = v358 & 0x3F;
    int64x2_t v375 = vaddq_s64(vdupq_n_s64(v374), vzip1q_s64((int64x2_t)0, v368));
    uint16x8_t v376 = (int64x2_t *)(v282 + 8 * (v358 >> 6));
    int8x16_t v361 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v376, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v375)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v376->i64[0], 0), (uint64x2_t)vnegq_s64(v375)));
    if (v374 + v370 >= 0x81) {
      int8x16_t v361 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v376[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v375)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v376[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v375))), v361);
    }
  }
  unint64_t v377 = v371 + v370;
  if (v601) {
    BOOL v378 = v601 >= v377;
  }
  else {
    BOOL v378 = 1;
  }
  char v379 = !v378;
  int8x16_t v380 = 0uLL;
  if (v370 > 0x80 || (v379 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v377 = v371;
    int8x16_t v384 = 0uLL;
  }
  else
  {
    unint64_t v381 = v371 & 0x3F;
    int64x2_t v382 = vaddq_s64(vdupq_n_s64(v381), vzip1q_s64((int64x2_t)0, v368));
    uint64x2_t v383 = (int64x2_t *)(v282 + 8 * (v371 >> 6));
    int8x16_t v384 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v383, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v382)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v383->i64[0], 0), (uint64x2_t)vnegq_s64(v382)));
    if (v381 + v370 >= 0x81) {
      int8x16_t v384 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v383[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v382)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v383[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v382))), v384);
    }
  }
  unint64_t v385 = v377 + v370;
  if (v601) {
    BOOL v386 = v601 >= v385;
  }
  else {
    BOOL v386 = 1;
  }
  char v387 = !v386;
  if (v370 > 0x80 || (v387 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v385 = v377;
  }
  else
  {
    unint64_t v388 = v377 & 0x3F;
    int64x2_t v389 = vaddq_s64(vdupq_n_s64(v388), vzip1q_s64((int64x2_t)0, v368));
    uint64_t v390 = (int64x2_t *)(v282 + 8 * (v377 >> 6));
    int8x16_t v380 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v390, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v389)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v390->i64[0], 0), (uint64x2_t)vnegq_s64(v389)));
    if (v388 + v370 >= 0x81) {
      int8x16_t v380 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v390[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v389)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v390[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v389))), v380);
    }
  }
  unint64_t v391 = v385 + v370;
  if (v601) {
    BOOL v392 = v601 >= v391;
  }
  else {
    BOOL v392 = 1;
  }
  char v393 = !v392;
  int8x16_t v394 = 0uLL;
  if (v370 > 0x80 || (v393 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v391 = v385;
    int8x16_t v398 = 0uLL;
  }
  else
  {
    unint64_t v395 = v385 & 0x3F;
    int64x2_t v396 = vaddq_s64(vdupq_n_s64(v395), vzip1q_s64((int64x2_t)0, v368));
    int32x4_t v397 = (int64x2_t *)(v282 + 8 * (v385 >> 6));
    int8x16_t v398 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v397, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v396)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v397->i64[0], 0), (uint64x2_t)vnegq_s64(v396)));
    if (v395 + v370 >= 0x81) {
      int8x16_t v398 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v397[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v396)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v397[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v396))), v398);
    }
  }
  int8x16_t v399 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v616, v616));
  unint64_t v400 = vpaddq_s32((int32x4_t)v399, (int32x4_t)v399).u64[0];
  v401.i64[0] = v400;
  v401.i64[1] = HIDWORD(v400);
  int64x2_t v402 = v401;
  unint64_t v403 = vaddvq_s64(v401);
  unint64_t v404 = v403;
  unint64_t v405 = v391 + v403;
  if (v601) {
    BOOL v406 = v601 >= v405;
  }
  else {
    BOOL v406 = 1;
  }
  char v407 = !v406;
  if (v403 > 0x80 || (v407 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v405 = v391;
  }
  else
  {
    unint64_t v408 = v391 & 0x3F;
    int64x2_t v409 = vaddq_s64(vdupq_n_s64(v408), vzip1q_s64((int64x2_t)0, v402));
    int32x4_t v410 = (int64x2_t *)(v282 + 8 * (v391 >> 6));
    int8x16_t v394 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v410, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v409)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v410->i64[0], 0), (uint64x2_t)vnegq_s64(v409)));
    if (v408 + v404 >= 0x81) {
      int8x16_t v394 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v410[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v409)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v410[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v409))), v394);
    }
  }
  unint64_t v411 = v405 + v404;
  if (v601) {
    BOOL v412 = v601 >= v411;
  }
  else {
    BOOL v412 = 1;
  }
  char v413 = !v412;
  int8x16_t v414 = 0uLL;
  if (v404 > 0x80 || (v413 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v411 = v405;
    int8x16_t v418 = 0uLL;
  }
  else
  {
    unint64_t v415 = v405 & 0x3F;
    int64x2_t v416 = vaddq_s64(vdupq_n_s64(v415), vzip1q_s64((int64x2_t)0, v402));
    int64x2_t v417 = (int64x2_t *)(v282 + 8 * (v405 >> 6));
    int8x16_t v418 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v417, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v416)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v417->i64[0], 0), (uint64x2_t)vnegq_s64(v416)));
    if (v415 + v404 >= 0x81) {
      int8x16_t v418 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v417[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v416)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v417[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v416))), v418);
    }
  }
  unint64_t v419 = v411 + v404;
  if (v601) {
    BOOL v420 = v601 >= v419;
  }
  else {
    BOOL v420 = 1;
  }
  char v421 = !v420;
  if (v404 > 0x80 || (v421 & 1) != 0)
  {
    int v284 = 1;
    unint64_t v419 = v411;
  }
  else
  {
    unint64_t v422 = v411 & 0x3F;
    int64x2_t v423 = vaddq_s64(vdupq_n_s64(v422), vzip1q_s64((int64x2_t)0, v402));
    int8x16_t v424 = (int64x2_t *)(v282 + 8 * (v411 >> 6));
    int8x16_t v414 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v424, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v423)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v424->i64[0], 0), (uint64x2_t)vnegq_s64(v423)));
    if (v422 + v404 >= 0x81) {
      int8x16_t v414 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v424[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v423)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v424[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v423))), v414);
    }
  }
  unint64_t v425 = v419 + v404;
  if (v601) {
    BOOL v426 = v601 >= v425;
  }
  else {
    BOOL v426 = 1;
  }
  char v427 = !v426;
  if (v404 > 0x80 || (v427 & 1) != 0) {
    goto LABEL_265;
  }
  int64x2_t v428 = vaddq_s64(vdupq_n_s64(v419 & 0x3F), vzip1q_s64((int64x2_t)0, v402));
  int8x16_t v429 = (int64x2_t *)(v282 + 8 * (v419 >> 6));
  int64x2_t v430 = vdupq_n_s64(0x40uLL);
  int8x16_t v431 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v429, 1), (uint64x2_t)vsubq_s64(v430, v428)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v429->i64[0], 0), (uint64x2_t)vnegq_s64(v428)));
  if ((v419 & 0x3F) + v404 >= 0x81)
  {
    int64x2_t v430 = vdupq_n_s64(0xC0uLL);
    int8x16_t v431 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v429[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v428)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v429[1], 1), (uint64x2_t)vsubq_s64(v430, v428))), v431);
  }
  if (v284 || v601 + 8 * result - v425 - 1280 >= 9 || v267 == 2)
  {
LABEL_265:
    uint64_t result = 0;
    int64x2_t v32 = vdupq_n_s64(0xFFFFF003FFuLL);
    *a1 = v32;
    a1[1] = v32;
    int8x16_t v432 = (int64x2_t *)((char *)a1 + a2);
    *int8x16_t v432 = v32;
    v432[1] = v32;
    int8x16_t v433 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int8x16_t v433 = v32;
    v433[1] = v32;
    uint64x2_t v35 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
    goto LABEL_266;
  }
  int32x2_t v434 = vzip1_s32(*(int32x2_t *)v257.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v257, v257, 8uLL));
  int32x2_t v435 = vzip1_s32(*(int32x2_t *)v272.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v272, v272, 8uLL));
  *(int32x2_t *)v257.i8 = vzip1_s32(*(int32x2_t *)v334.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v334, v334, 8uLL));
  int32x2_t v436 = vzip1_s32(*(int32x2_t *)v365.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v365, v365, 8uLL));
  int32x4_t v437 = (int32x4_t)vextq_s8(v399, v399, 8uLL);
  int32x2_t v438 = vzip1_s32(*(int32x2_t *)v399.i8, *(int32x2_t *)v437.i8);
  v439.i64[0] = v434.u32[0];
  v439.i64[1] = v434.u32[1];
  int64x2_t v440 = (int64x2_t)vshlq_u64((uint64x2_t)v255, (uint64x2_t)vnegq_s64(v439));
  *(int32x2_t *)v255.i8 = vmovn_s64((int64x2_t)v255);
  *(int32x2_t *)v440.i8 = vmovn_s64(v440);
  int16x8_t v441 = (int16x8_t)vzip1q_s32((int32x4_t)v255, (int32x4_t)v440);
  v439.i64[0] = v435.u32[0];
  v439.i64[1] = v435.u32[1];
  int64x2_t v442 = (int64x2_t)vshlq_u64((uint64x2_t)v270, (uint64x2_t)vnegq_s64(v439));
  *(int32x2_t *)v437.i8 = vmovn_s64((int64x2_t)v270);
  *(int32x2_t *)v442.i8 = vmovn_s64(v442);
  int32x4_t v443 = vzip1q_s32(v437, (int32x4_t)v442);
  v439.i64[0] = v257.u32[0];
  v439.i64[1] = v257.u32[1];
  int32x4_t v444 = (int32x4_t)vnegq_s64(v439);
  int64x2_t v445 = (int64x2_t)vshlq_u64((uint64x2_t)v325, (uint64x2_t)v444);
  *(int32x2_t *)v430.i8 = vmovn_s64((int64x2_t)v325);
  *(int32x2_t *)v445.i8 = vmovn_s64(v445);
  int16x8_t v446 = (int16x8_t)vzip1q_s32((int32x4_t)v430, (int32x4_t)v445);
  int64x2_t v447 = (int64x2_t)vshlq_u64((uint64x2_t)v352, (uint64x2_t)v444);
  *(int32x2_t *)v257.i8 = vmovn_s64((int64x2_t)v352);
  *(int32x2_t *)v447.i8 = vmovn_s64(v447);
  int16x8_t v448 = (int16x8_t)vzip1q_s32((int32x4_t)v257, (int32x4_t)v447);
  int64x2_t v449 = (int64x2_t)vshlq_u64((uint64x2_t)v348, (uint64x2_t)v444);
  *(int32x2_t *)v257.i8 = vmovn_s64((int64x2_t)v348);
  *(int32x2_t *)v449.i8 = vmovn_s64(v449);
  int16x8_t v450 = (int16x8_t)vzip1q_s32((int32x4_t)v257, (int32x4_t)v449);
  v439.i64[0] = v436.u32[0];
  v439.i64[1] = v436.u32[1];
  int64x2_t v451 = v439;
  v439.i64[0] = v438.u32[0];
  v439.i64[1] = v438.u32[1];
  int32x4_t v452 = (int32x4_t)vnegq_s64(v451);
  int64x2_t v453 = (int64x2_t)vshlq_u64((uint64x2_t)v364, (uint64x2_t)v444);
  *(int32x2_t *)v444.i8 = vmovn_s64((int64x2_t)v364);
  *(int32x2_t *)v453.i8 = vmovn_s64(v453);
  int16x8_t v454 = (int16x8_t)vzip1q_s32(v444, (int32x4_t)v453);
  int64x2_t v455 = (int64x2_t)vshlq_u64((uint64x2_t)v361, (uint64x2_t)v452);
  *(int32x2_t *)v444.i8 = vmovn_s64((int64x2_t)v361);
  *(int32x2_t *)v455.i8 = vmovn_s64(v455);
  int16x8_t v456 = (int16x8_t)vzip1q_s32(v444, (int32x4_t)v455);
  int64x2_t v457 = (int64x2_t)vshlq_u64((uint64x2_t)v384, (uint64x2_t)v452);
  *(int32x2_t *)v444.i8 = vmovn_s64((int64x2_t)v384);
  *(int32x2_t *)v457.i8 = vmovn_s64(v457);
  int16x8_t v458 = (int16x8_t)vzip1q_s32(v444, (int32x4_t)v457);
  int64x2_t v459 = (int64x2_t)vshlq_u64((uint64x2_t)v380, (uint64x2_t)v452);
  *(int32x2_t *)v444.i8 = vmovn_s64((int64x2_t)v380);
  *(int32x2_t *)v459.i8 = vmovn_s64(v459);
  int16x8_t v460 = (int16x8_t)vzip1q_s32(v444, (int32x4_t)v459);
  uint64x2_t v461 = (uint64x2_t)vnegq_s64(v439);
  int64x2_t v462 = (int64x2_t)vshlq_u64((uint64x2_t)v398, (uint64x2_t)v452);
  *(int32x2_t *)v444.i8 = vmovn_s64((int64x2_t)v398);
  *(int32x2_t *)v462.i8 = vmovn_s64(v462);
  int16x8_t v463 = (int16x8_t)vzip1q_s32(v444, (int32x4_t)v462);
  int64x2_t v464 = (int64x2_t)vshlq_u64((uint64x2_t)v394, v461);
  *(int32x2_t *)v452.i8 = vmovn_s64((int64x2_t)v394);
  *(int32x2_t *)v464.i8 = vmovn_s64(v464);
  int16x8_t v465 = (int16x8_t)vzip1q_s32(v452, (int32x4_t)v464);
  int64x2_t v466 = (int64x2_t)vshlq_u64((uint64x2_t)v418, v461);
  *(int32x2_t *)v418.i8 = vmovn_s64((int64x2_t)v418);
  *(int32x2_t *)v466.i8 = vmovn_s64(v466);
  int16x8_t v467 = (int16x8_t)vzip1q_s32((int32x4_t)v418, (int32x4_t)v466);
  int64x2_t v468 = (int64x2_t)vshlq_u64((uint64x2_t)v414, v461);
  *(int32x2_t *)v466.i8 = vmovn_s64((int64x2_t)v414);
  *(int32x2_t *)v468.i8 = vmovn_s64(v468);
  int16x8_t v469 = (int16x8_t)vzip1q_s32((int32x4_t)v466, (int32x4_t)v468);
  int16x8_t v470 = (int16x8_t)vshlq_u32((uint32x4_t)v441, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v256.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v256, v256, 8uLL)))));
  *(int16x4_t *)v441.i8 = vmovn_s32((int32x4_t)v441);
  *(int16x4_t *)v470.i8 = vmovn_s32((int32x4_t)v470);
  int16x8_t v471 = vzip1q_s16(v441, v470);
  uint32x4_t v472 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v614.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v614, (int8x16_t)v614, 8uLL))));
  int16x8_t v473 = (int16x8_t)vshlq_u32((uint32x4_t)v443, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v271.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v271, v271, 8uLL)))));
  *(int16x4_t *)v364.i8 = vmovn_s32(v443);
  *(int16x4_t *)v473.i8 = vmovn_s32((int32x4_t)v473);
  int16x8_t v474 = vzip1q_s16((int16x8_t)v364, v473);
  int16x8_t v475 = (int16x8_t)vshlq_u32((uint32x4_t)v446, v472);
  *(int16x4_t *)v446.i8 = vmovn_s32((int32x4_t)v446);
  *(int16x4_t *)v475.i8 = vmovn_s32((int32x4_t)v475);
  int16x8_t v476 = vzip1q_s16(v446, v475);
  int16x8_t v477 = (int16x8_t)vshlq_u32((uint32x4_t)v448, v472);
  *(int16x4_t *)v448.i8 = vmovn_s32((int32x4_t)v448);
  *(int16x4_t *)v477.i8 = vmovn_s32((int32x4_t)v477);
  int16x8_t v478 = vzip1q_s16(v448, v477);
  int16x8_t v479 = (int16x8_t)vshlq_u32((uint32x4_t)v450, v472);
  *(int16x4_t *)v450.i8 = vmovn_s32((int32x4_t)v450);
  *(int16x4_t *)v479.i8 = vmovn_s32((int32x4_t)v479);
  int16x8_t v480 = vzip1q_s16(v450, v479);
  uint32x4_t v481 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v615.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v615, (int8x16_t)v615, 8uLL))));
  int16x8_t v482 = (int16x8_t)vshlq_u32((uint32x4_t)v454, v472);
  *(int16x4_t *)v454.i8 = vmovn_s32((int32x4_t)v454);
  *(int16x4_t *)v482.i8 = vmovn_s32((int32x4_t)v482);
  int16x8_t v483 = vzip1q_s16(v454, v482);
  int16x8_t v484 = (int16x8_t)vshlq_u32((uint32x4_t)v456, v481);
  *(int16x4_t *)v456.i8 = vmovn_s32((int32x4_t)v456);
  *(int16x4_t *)v484.i8 = vmovn_s32((int32x4_t)v484);
  int16x8_t v485 = vzip1q_s16(v456, v484);
  int16x8_t v486 = (int16x8_t)vshlq_u32((uint32x4_t)v458, v481);
  *(int16x4_t *)v458.i8 = vmovn_s32((int32x4_t)v458);
  *(int16x4_t *)v486.i8 = vmovn_s32((int32x4_t)v486);
  int16x8_t v487 = vzip1q_s16(v458, v486);
  int16x8_t v488 = (int16x8_t)vshlq_u32((uint32x4_t)v460, v481);
  *(int16x4_t *)v460.i8 = vmovn_s32((int32x4_t)v460);
  *(int16x4_t *)v488.i8 = vmovn_s32((int32x4_t)v488);
  int16x8_t v489 = vzip1q_s16(v460, v488);
  uint32x4_t v490 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v616.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v616, (int8x16_t)v616, 8uLL))));
  int16x8_t v491 = (int16x8_t)vshlq_u32((uint32x4_t)v463, v481);
  *(int16x4_t *)v463.i8 = vmovn_s32((int32x4_t)v463);
  *(int16x4_t *)v491.i8 = vmovn_s32((int32x4_t)v491);
  int16x8_t v492 = vzip1q_s16(v463, v491);
  int16x8_t v493 = (int16x8_t)vshlq_u32((uint32x4_t)v465, v490);
  *(int16x4_t *)v465.i8 = vmovn_s32((int32x4_t)v465);
  *(int16x4_t *)v493.i8 = vmovn_s32((int32x4_t)v493);
  int16x8_t v494 = vzip1q_s16(v465, v493);
  int16x8_t v495 = (int16x8_t)vshlq_u32((uint32x4_t)v467, v490);
  *(int16x4_t *)v467.i8 = vmovn_s32((int32x4_t)v467);
  *(int16x4_t *)v495.i8 = vmovn_s32((int32x4_t)v495);
  int16x8_t v496 = vzip1q_s16(v467, v495);
  int16x8_t v497 = (int16x8_t)vshlq_u32((uint32x4_t)v469, v490);
  *(int16x4_t *)v469.i8 = vmovn_s32((int32x4_t)v469);
  *(int16x4_t *)v497.i8 = vmovn_s32((int32x4_t)v497);
  int16x8_t v498 = vzip1q_s16(v469, v497);
  v497.i64[0] = 0x10001000100010;
  v497.i64[1] = 0x10001000100010;
  int16x8_t v499 = vsubq_s16(v497, (int16x8_t)v256);
  v500.i64[0] = 0xF000F000F000FLL;
  v500.i64[1] = 0xF000F000F000FLL;
  int16x8_t v501 = vaddq_s16((int16x8_t)v256, v500);
  int16x8_t v502 = vshlq_s16(v471, v499);
  v499.i64[0] = 0x10001000100010;
  v499.i64[1] = 0x10001000100010;
  int16x8_t v503 = vsubq_s16(v499, (int16x8_t)v271);
  int16x8_t v504 = vaddq_s16((int16x8_t)v271, v500);
  v500.i64[0] = 0x10001000100010;
  v500.i64[1] = 0x10001000100010;
  int16x8_t v505 = vshlq_s16(v474, v503);
  v503.i64[0] = 0xF000F000F000FLL;
  v503.i64[1] = 0xF000F000F000FLL;
  int16x8_t v506 = vsubq_s16(v500, v614);
  int16x8_t v507 = vaddq_s16(v614, v503);
  v503.i64[0] = 0x10001000100010;
  v503.i64[1] = 0x10001000100010;
  int16x8_t v508 = vshlq_s16(v476, v506);
  int16x8_t v509 = vshlq_s16(v478, v506);
  int16x8_t v510 = vshlq_s16(v480, v506);
  int16x8_t v511 = vshlq_s16(v483, v506);
  v506.i64[0] = 0xF000F000F000FLL;
  v506.i64[1] = 0xF000F000F000FLL;
  int16x8_t v512 = vsubq_s16(v503, v615);
  int16x8_t v513 = vaddq_s16(v615, v506);
  v506.i64[0] = 0x10001000100010;
  v506.i64[1] = 0x10001000100010;
  int16x8_t v514 = vshlq_s16(v485, v512);
  int16x8_t v515 = vshlq_s16(v487, v512);
  int16x8_t v516 = vshlq_s16(v489, v512);
  int16x8_t v517 = vshlq_s16(v492, v512);
  v512.i64[0] = 0xF000F000F000FLL;
  v512.i64[1] = 0xF000F000F000FLL;
  int16x8_t v518 = vsubq_s16(v506, v616);
  int16x8_t v519 = vaddq_s16(v616, v512);
  int8x16_t v520 = (int8x16_t)vshlq_s16(v502, v501);
  int16x8_t v521 = vshlq_s16(v505, v504);
  int16x8_t v522 = vshlq_s16(v508, v507);
  int16x8_t v523 = vshlq_s16(v509, v507);
  int16x8_t v524 = vshlq_s16(v510, v507);
  int16x8_t v525 = vshlq_s16(v511, v507);
  int16x8_t v526 = vshlq_s16(v514, v513);
  int16x8_t v527 = vshlq_s16(v515, v513);
  int16x8_t v528 = vshlq_s16(v516, v513);
  int16x8_t v529 = vshlq_s16(v517, v513);
  int64x2_t v530 = (int64x2_t)vshlq_u64((uint64x2_t)v431, v461);
  *(int32x2_t *)v431.i8 = vmovn_s64((int64x2_t)v431);
  *(int32x2_t *)v530.i8 = vmovn_s64(v530);
  int16x8_t v531 = (int16x8_t)vzip1q_s32((int32x4_t)v431, (int32x4_t)v530);
  int16x8_t v532 = vshlq_s16(vshlq_s16(v494, v518), v519);
  int16x8_t v533 = vshlq_s16(vshlq_s16(v496, v518), v519);
  int16x8_t v534 = vshlq_s16(vshlq_s16(v498, v518), v519);
  int16x8_t v535 = (int16x8_t)vshlq_u32((uint32x4_t)v531, v490);
  *(int16x4_t *)v531.i8 = vmovn_s32((int32x4_t)v531);
  *(int16x4_t *)v535.i8 = vmovn_s32((int32x4_t)v535);
  int16x8_t v536 = vshlq_s16(vshlq_s16(vzip1q_s16(v531, v535), v518), v519);
  int16x8_t v537 = vaddq_s16((int16x8_t)vandq_s8(v520, v595), v521);
  int8x16_t v538 = (int8x16_t)vdupq_lane_s64(v520.i64[0], 0);
  int16x8_t v539 = (int16x8_t)vandq_s8(v593, v538);
  int16x8_t v540 = vsubq_s16(v522, v539);
  int16x8_t v541 = vsubq_s16(v523, v539);
  int16x8_t v542 = vsubq_s16(v524, v539);
  int16x8_t v543 = vsubq_s16(v525, v539);
  int16x8_t v544 = (int16x8_t)vandq_s8(v594, v538);
  int16x8_t v545 = vsubq_s16(v526, v544);
  int16x8_t v546 = vsubq_s16(v527, v544);
  int16x8_t v547 = (int16x8_t)vandq_s8(v595, v538);
  int16x8_t v548 = vsubq_s16(v528, v544);
  int16x8_t v549 = vsubq_s16(v529, v544);
  v550.i64[0] = 0x1000100010001;
  v550.i64[1] = 0x1000100010001;
  int16x8_t v551 = vsubq_s16(v311, v547);
  int16x8_t v552 = vsubq_s16(v321, v547);
  int16x8_t v553 = (int16x8_t)vandq_s8(v596, v538);
  int16x8_t v554 = vsubq_s16(v532, v553);
  int16x8_t v555 = vsubq_s16(v533, v553);
  int16x8_t v556 = vsubq_s16(v534, v553);
  int16x8_t v557 = vsubq_s16(v536, v553);
  int8x16_t v558 = (int8x16_t)vsubq_s16(v333, v547);
  int8x16_t v559 = (int8x16_t)vsubq_s16(v537, v547);
  int16x8_t v603 = v537;
  int8x16_t v607 = (int8x16_t)v554;
  int8x16_t v608 = (int8x16_t)v555;
  int8x16_t v609 = (int8x16_t)v556;
  int8x16_t v610 = (int8x16_t)v557;
  if (vaddvq_s16(vceqq_s16(v598, (int16x8_t)v550)))
  {
    int8x16_t v560 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v612, v550));
    v561.i64[1] = v559.i64[1];
    v561.i64[0] = v558.i64[1];
    v562.i64[0] = v558.i64[0];
    v562.i64[1] = v559.i64[0];
    int16x8_t v563 = (int16x8_t)vbslq_s8(v560, v561, v559);
    int16x8_t v564 = (int16x8_t)vbslq_s8(v560, v562, v558);
    v565.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v565.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int16x8_t v566 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v551 - 1), v565), v560);
    v620.val[0] = (int8x16_t)vaddq_s16(v563, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v551 - 1), (int8x16_t)xmmword_242EA7710), v560));
    v620.val[1] = (int8x16_t)vaddq_s16(v551, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v551 - 1), (int8x16_t)xmmword_242EA7720), v560));
    v620.val[2] = (int8x16_t)vaddq_s16(v552, v566);
    v620.val[3] = (int8x16_t)vaddq_s16(v564, v566);
    int16x8_t v567 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, v565), v560);
    int8x16_t v559 = (int8x16_t)vaddq_s16((int16x8_t)v620.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA7730), v560));
    int16x8_t v551 = vaddq_s16((int16x8_t)v620.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA7740), v560));
    int16x8_t v603 = (int16x8_t)v559;
    int16x8_t v604 = v551;
    int16x8_t v552 = vaddq_s16((int16x8_t)v620.val[2], v567);
    int8x16_t v558 = (int8x16_t)vaddq_s16((int16x8_t)v620.val[3], v567);
    v618.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v540.i8, (int8x16_t)xmmword_242EA7710), v560), v540);
    v618.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v540.i8, (int8x16_t)xmmword_242EA7750), v560), v541);
    v618.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v540.i8, v565), v560), v542);
    v618.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v540.i8, (int8x16_t)xmmword_242EA7760), v560), v543);
    v620.val[3] = vandq_s8(vqtbl4q_s8(v618, (int8x16_t)xmmword_242EA7730), v560);
    int16x8_t v568 = (int16x8_t)vandq_s8(vqtbl4q_s8(v618, v565), v560);
    int16x8_t v540 = vaddq_s16((int16x8_t)v620.val[3], (int16x8_t)v618.val[0]);
    int16x8_t v541 = vaddq_s16((int16x8_t)v618.val[1], (int16x8_t)v620.val[3]);
    int16x8_t v542 = vaddq_s16((int16x8_t)v618.val[2], v568);
    int16x8_t v543 = vaddq_s16((int16x8_t)v618.val[3], v568);
    v618.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v545.i8, (int8x16_t)xmmword_242EA74D0), v560), v545);
    v618.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v545.i8, (int8x16_t)xmmword_242EA75A0), v560), v546);
    v618.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v545.i8, (int8x16_t)xmmword_242EA7710), v560), v548);
    v618.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v545.i8, (int8x16_t)xmmword_242EA7720), v560), v549);
    v620.val[3] = vandq_s8(vqtbl4q_s8(v618, v565), v560);
    int16x8_t v545 = vaddq_s16((int16x8_t)v618.val[0], (int16x8_t)v620.val[3]);
    int16x8_t v546 = vaddq_s16((int16x8_t)v618.val[1], (int16x8_t)v620.val[3]);
    int16x8_t v548 = vaddq_s16((int16x8_t)v618.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v618, (int8x16_t)xmmword_242EA75D0), v560));
    int16x8_t v549 = vaddq_s16((int16x8_t)v618.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v618, (int8x16_t)xmmword_242EA7770), v560));
    v618.val[0] = v607;
    v618.val[1] = v608;
    int8x16_t v60 = v612;
    v618.val[2] = v609;
    v618.val[3] = v610;
    v619.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v618, (int8x16_t)xmmword_242EA74D0), v560), (int16x8_t)v607);
    v619.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v618, (int8x16_t)xmmword_242EA7780), v560), (int16x8_t)v608);
    int16x8_t v605 = v552;
    int16x8_t v606 = (int16x8_t)v558;
    v619.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v618, (int8x16_t)xmmword_242EA7710), v560), (int16x8_t)v609);
    v619.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v618, (int8x16_t)xmmword_242EA7720), v560), (int16x8_t)v610);
    int16x8_t v569 = (int16x8_t)vandq_s8(vqtbl4q_s8(v619, v565), v560);
    int16x8_t v570 = (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA75D0), v560);
    int16x8_t v571 = (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7790), v560);
    int16x8_t v554 = vaddq_s16((int16x8_t)v619.val[0], v569);
    int16x8_t v555 = vaddq_s16((int16x8_t)v619.val[1], v569);
    int16x8_t v556 = vaddq_s16((int16x8_t)v619.val[2], v570);
    int16x8_t v557 = vaddq_s16((int16x8_t)v619.val[3], v571);
  }
  int8x16_t v572 = (int8x16_t)vaddq_s16(v611, (int16x8_t)v559);
  int8x16_t v573 = (int8x16_t)vaddq_s16(v551, v611);
  int8x16_t v574 = (int8x16_t)vaddq_s16(v552, v611);
  int8x16_t v575 = (int8x16_t)vaddq_s16((int16x8_t)v558, v611);
  int8x16_t v576 = (int8x16_t)vaddq_s16(v540, v611);
  int8x16_t v577 = (int8x16_t)vaddq_s16(v541, v611);
  int8x16_t v578 = (int8x16_t)vaddq_s16(v542, v611);
  int8x16_t v579 = (int8x16_t)vaddq_s16(v543, v611);
  int8x16_t v580 = (int8x16_t)vaddq_s16(v545, v611);
  int8x16_t v581 = (int8x16_t)vaddq_s16(v546, v611);
  int8x16_t v582 = (int8x16_t)vaddq_s16(v548, v611);
  int8x16_t v583 = (int8x16_t)vaddq_s16(v549, v611);
  int8x16_t v584 = (int8x16_t)vaddq_s16(v554, v611);
  int8x16_t v585 = (int8x16_t)vaddq_s16(v555, v611);
  int8x16_t v586 = (int8x16_t)vaddq_s16(v556, v611);
  int8x16_t v587 = (int8x16_t)vaddq_s16(v557, v611);
  v588.i64[0] = 0x10001000100010;
  v588.i64[1] = 0x10001000100010;
  int8x16_t v589 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v60, v588));
  int8x16_t v590 = (int16x8_t *)((char *)a1 + a2);
  *a1 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v572, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v572), 6uLL);
  a1[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v573, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v573), 6uLL);
  a1[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v576, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v576), 6uLL);
  a1[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v577, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v577), 6uLL);
  v591 = (int16x8_t *)((char *)a1 + 2 * a2);
  *int8x16_t v590 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v574, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v574), 6uLL);
  v590[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v575, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v575), 6uLL);
  v590[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v578, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v578), 6uLL);
  v590[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v579, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v579), 6uLL);
  int16x8_t *v591 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v580, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v580), 6uLL);
  v591[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v581, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v581), 6uLL);
  v591[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v584, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v584), 6uLL);
  v591[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v585, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v585), 6uLL);
  v592 = (int16x8_t *)((char *)v591 + a2);
  int16x8_t *v592 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v582, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v582), 6uLL);
  v592[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v583, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v583), 6uLL);
  v592[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v586, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v586), 6uLL);
  v592[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v587, (int8x16_t)xmmword_242EA77A0), v589), (int16x8_t)v587), 6uLL);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(_OWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1, 256, a2, *a3);
  uint64_t v6 = v5
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 4, 256, v5, a3[1]);
  uint64_t v7 = v6
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 64, 256, v6, a3[2]);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 68, 256, v7, a3[3]);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 8, 256, v8, a3[4]);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 12, 256, v9, a3[5]);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 72, 256, v10, a3[6]);
  signed int v12 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 76, 256, v11, v12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(uint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v10 = *v8;
  int16x8_t v11 = v8[1];
  int16x8_t v12 = v8[2];
  int16x8_t v13 = v8[3];
  uint64_t v9 = (int16x8_t *)((char *)v8 + a4);
  __n128 v14 = (__n128)vshrq_n_s16(*a3, 6uLL);
  __n128 v15 = (__n128)vshrq_n_s16(a3[1], 6uLL);
  __n128 v16 = (__n128)vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  __n128 v17 = (__n128)vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v18 = vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v19 = vshrq_n_s16(a3[3], 6uLL);
  int16x8_t v20 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v21 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v22 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v23 = vshrq_n_s16(v11, 6uLL);
  int16x8_t v24 = vshrq_n_s16(*v9, 6uLL);
  int16x8_t v25 = vshrq_n_s16(v9[1], 6uLL);
  int8x16_t v26 = (int8x16_t)vshrq_n_s16(v12, 6uLL);
  int8x16_t v27 = (int8x16_t)vshrq_n_s16(v13, 6uLL);
  int16x8_t v28 = vshrq_n_s16(v9[2], 6uLL);
  int16x8_t v29 = vshrq_n_s16(v9[3], 6uLL);
  int16x8_t v30 = (int16x8_t)vdupq_lane_s64(v14.n128_i64[0], 0);
  v31.i64[0] = 0x5000500050005;
  v31.i64[1] = 0x5000500050005;
  int8x16_t v461 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v14, v30), 6uLL), v31);
  int8x16_t v462 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v15, v30), 6uLL), v31);
  int8x16_t v463 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v16, v30), 6uLL), v31);
  int8x16_t v464 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v17, v30), 6uLL), v31);
  int8x16_t v465 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v30), 6uLL), v31);
  int8x16_t v466 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v30), 6uLL), v31);
  int16x8_t v32 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v461, (int16x8_t)v462), (int16x8_t)v463), (int16x8_t)v464), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v33 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v461, (int16x8_t)v462), (int16x8_t)v463), (int16x8_t)v464), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v34 = vpmaxq_s16(v32, v32);
  int16x8_t v35 = vpminq_s16(v33, v33);
  int16x8_t v36 = vzip1q_s16(v34, v35);
  int8x16_t v37 = (int8x16_t)vceqzq_s16(v36);
  int16x8_t v38 = vclsq_s16(v36);
  v39.i64[0] = 0x10001000100010;
  v39.i64[1] = 0x10001000100010;
  int16x8_t v40 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, v38), v37);
  int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v30), 6uLL), v31);
  int8x16_t v468 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v30), 6uLL), v31);
  int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v30), 6uLL), v31);
  int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v30), 6uLL), v31);
  v41.i64[0] = 0x8000800080008000;
  v41.i64[1] = 0x8000800080008000;
  int16x8_t v42 = vmaxq_s16(v34, v41);
  v12.i64[0] = 0x8000800080008000;
  v12.i64[1] = 0x8000800080008000;
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v465, (int16x8_t)v466), (int16x8_t)v467), (int16x8_t)v468), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v44 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v465, (int16x8_t)v466), (int16x8_t)v467), (int16x8_t)v468), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v45 = vpmaxq_s16(v43, v43);
  int16x8_t v46 = vpminq_s16(v44, v44);
  int16x8_t v47 = vmaxq_s16(v42, v45);
  int16x8_t v48 = vminq_s16(vminq_s16(v35, v12), v46);
  int16x8_t v49 = vzip1q_s16(v45, v46);
  int16x8_t v50 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v49)), (int8x16_t)vceqzq_s16(v49));
  int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v30), 6uLL), v31);
  int8x16_t v472 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v30), 6uLL), v31);
  int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v52 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v53 = vpmaxq_s16(v51, v51);
  int16x8_t v54 = vpminq_s16(v52, v52);
  int16x8_t v55 = vmaxq_s16(v47, v53);
  int16x8_t v56 = vminq_s16(v48, v54);
  int16x8_t v57 = vzip1q_s16(v53, v54);
  int16x8_t v58 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v57)), (int8x16_t)vceqzq_s16(v57));
  int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v26, v30), 6uLL), v31);
  int8x16_t v474 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v27, v30), 6uLL), v31);
  int8x16_t v477 = (int8x16_t)v30;
  long long v458 = (__int128)v26;
  long long v459 = (__int128)v27;
  long long v460 = (__int128)v28;
  long long v457 = (__int128)v29;
  int16x8_t v59 = vshlq_s16(vshlq_n_s16(vsubq_s16(v28, v30), 6uLL), v31);
  int16x8_t v60 = vmaxq_s16(vmaxq_s16((int16x8_t)v473, (int16x8_t)v474), v59);
  int16x8_t v61 = vminq_s16(vminq_s16((int16x8_t)v473, (int16x8_t)v474), v59);
  int8x16_t v475 = (int8x16_t)v59;
  int8x16_t v476 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v29, v30), 6uLL), v31);
  int16x8_t v62 = vpmaxq_s16(v40, v40);
  int16x8_t v63 = vpmaxq_s16(v50, v50);
  int16x8_t v64 = vpmaxq_s16(v58, v58);
  int8x16_t v65 = (int8x16_t)vminq_s16(v61, (int16x8_t)v476);
  int16x8_t v66 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v60, (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v67 = (int16x8_t)vqtbl1q_s8(v65, (int8x16_t)xmmword_242EA77B0);
  int16x8_t v68 = vpmaxq_s16(v66, v66);
  int16x8_t v69 = vpminq_s16(v67, v67);
  int16x8_t v70 = vmaxq_s16(v55, v68);
  int16x8_t v71 = vminq_s16(v56, v69);
  int16x8_t v72 = vzip1q_s16(v68, v69);
  int16x8_t v73 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v72)), (int8x16_t)vceqzq_s16(v72));
  int16x8_t v74 = vpmaxq_s16(v73, v73);
  int8x16_t v75 = (int8x16_t)vmaxq_s16(vmaxq_s16(v62, v63), vmaxq_s16(v64, v74));
  int16x8_t v76 = vclzq_s16(vsubq_s16(v70, v71));
  v40.i64[0] = 0xF000F000F000FLL;
  v40.i64[1] = 0xF000F000F000FLL;
  v38.i64[0] = -1;
  v38.i64[1] = -1;
  int8x16_t v484 = (int8x16_t)v71;
  int8x16_t v485 = (int8x16_t)v70;
  int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v39, v76);
  int8x16_t v78 = (int8x16_t)vsubq_s16(vshlq_s16(v38, vsubq_s16(v40, v76)), v71);
  int8x16_t v79 = (int8x16_t)vcgtq_s16((int16x8_t)v75, (int16x8_t)v77);
  int16x8_t v80 = (int16x8_t)vbslq_s8(v79, v77, v75);
  int8x16_t v486 = vandq_s8(v78, v79);
  v26.i64[0] = 0x8000800080008;
  v26.i64[1] = 0x8000800080008;
  int8x16_t v81 = vorrq_s8((int8x16_t)0, vandq_s8(v79, v26));
  int16x8_t v82 = vsubq_s16(v80, v63);
  v83.i64[0] = 0x3000300030003;
  v83.i64[1] = 0x3000300030003;
  int16x8_t v84 = vmaxq_s16(vminq_s16(v82, (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16(v80, v64), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v480 = vsubq_s16(v80, v84);
  int16x8_t v481 = vsubq_s16(v80, v85);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16(v80, v74), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v482 = vsubq_s16(v80, v86);
  int8x16_t v483 = (int8x16_t)v80;
  int16x8_t v87 = vaddq_s16(v86, v85);
  int16x8_t v88 = vmaxq_s16(vminq_s16(vsubq_s16(v80, v62), (int16x8_t)v83), (int16x8_t)0);
  v27.i64[0] = 0x4000400040004;
  v27.i64[1] = 0x4000400040004;
  int8x16_t v89 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v80), v83), v81), vbicq_s8(v27, (int8x16_t)vceqq_s16(v87, vnegq_s16(vaddq_s16(v88, v84)))));
  int8x16_t v478 = v89;
  int16x8_t v479 = vsubq_s16(v80, v88);
  if (vmaxvq_s16(v80))
  {
    long long v449 = (__int128)v25;
    long long v451 = (__int128)v22;
    long long v452 = (__int128)v23;
    long long v453 = (__int128)v24;
    __n128 v450 = (__n128)v21;
    __n128 v454 = (__n128)v18;
    __n128 v455 = (__n128)v19;
    __n128 v456 = (__n128)v20;
    int8x16_t v447 = v81;
    int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v461, (int16x8_t)vqtbl1q_s8(v461, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v462, (int16x8_t)vqtbl1q_s8(v462, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v465, (int16x8_t)vqtbl1q_s8(v465, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int16x8_t v93 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v466, (int16x8_t)vqtbl1q_s8(v466, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int16x8_t v94 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v467, (int16x8_t)vqtbl1q_s8(v467, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int16x8_t v95 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v468, (int16x8_t)vqtbl1q_s8(v468, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int16x8_t v97 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int16x8_t v98 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v472, (int16x8_t)vqtbl1q_s8(v472, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v99 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v473, (int16x8_t)vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v100 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v474, (int16x8_t)vqtbl1q_s8(v474, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v101 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v475, (int16x8_t)vqtbl1q_s8(v475, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v102 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v471, (int16x8_t)vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v103 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v476, (int16x8_t)vqtbl1q_s8(v476, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v429 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v464, (int16x8_t)vqtbl1q_s8(v464, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int8x16_t v431 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v463, (int16x8_t)vqtbl1q_s8(v463, (int8x16_t)xmmword_242EA77A0)), 6uLL), v31);
    int16x8_t v104 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v90, (int16x8_t)v91), (int16x8_t)v431), (int16x8_t)v429), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v105 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v90, (int16x8_t)v91), (int16x8_t)v431), (int16x8_t)v429), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v106 = vpmaxq_s16(v104, v104);
    int16x8_t v107 = vpminq_s16(v105, v105);
    v108.i64[0] = 0x8000800080008000;
    v108.i64[1] = 0x8000800080008000;
    int16x8_t v109 = vmaxq_s16(v106, v108);
    v110.i64[0] = 0x8000800080008000;
    v110.i64[1] = 0x8000800080008000;
    int16x8_t v111 = vminq_s16(v107, v110);
    int16x8_t v112 = vzip1q_s16(v106, v107);
    int16x8_t v113 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v112)), (int8x16_t)vceqzq_s16(v112));
    int8x16_t v114 = (int8x16_t)vpmaxq_s16(v113, v113);
    int8x16_t v439 = (int8x16_t)v94;
    int8x16_t v441 = (int8x16_t)v92;
    int8x16_t v435 = (int8x16_t)v95;
    int8x16_t v437 = (int8x16_t)v93;
    int16x8_t v115 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v92, v93), v94), v95), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v116 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v92, v93), v94), v95), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v117 = vpmaxq_s16(v115, v115);
    int16x8_t v118 = vpminq_s16(v116, v116);
    int16x8_t v119 = vmaxq_s16(v109, v117);
    int16x8_t v120 = vminq_s16(v111, v118);
    int16x8_t v121 = vzip1q_s16(v117, v118);
    int16x8_t v122 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v121)), (int8x16_t)vceqzq_s16(v121));
    int16x8_t v123 = vpmaxq_s16(v122, v122);
    int8x16_t v443 = (int8x16_t)v98;
    int8x16_t v445 = (int8x16_t)v97;
    int16x8_t v124 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v96, v97), (int16x8_t)v102), v98), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v125 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v96, v97), (int16x8_t)v102), v98), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v126 = vpmaxq_s16(v124, v124);
    int16x8_t v127 = vpminq_s16(v125, v125);
    int16x8_t v128 = vmaxq_s16(v119, v126);
    int16x8_t v129 = vminq_s16(v120, v127);
    int16x8_t v130 = vzip1q_s16(v126, v127);
    int16x8_t v131 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v130)), (int8x16_t)vceqzq_s16(v130));
    int16x8_t v132 = vpmaxq_s16(v131, v131);
    int16x8_t v133 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v99, (int16x8_t)v100), (int16x8_t)v101), (int16x8_t)v103), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v134 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v99, (int16x8_t)v100), (int16x8_t)v101), (int16x8_t)v103), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v128, v135);
    int16x8_t v138 = vminq_s16(v129, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v114, v123), vmaxq_s16(v132, v141));
    int8x16_t v433 = (int8x16_t)v137;
    int8x16_t v143 = (int8x16_t)v138;
    int16x8_t v144 = vclzq_s16(vsubq_s16(v137, v138));
    int8x16_t v145 = (int8x16_t)vsubq_s16((int16x8_t)v39, v144);
    int8x16_t v146 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v145);
    int8x16_t v147 = vbslq_s8(v146, v145, v142);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, (int16x8_t)v114), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v123), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v132), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v141), (int16x8_t)v83), (int16x8_t)0);
    v145.i64[0] = 0x4000400040004;
    v145.i64[1] = 0x4000400040004;
    int8x16_t v152 = vbicq_s8(v145, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v114.i64[0] = 0x18001800180018;
    v114.i64[1] = 0x18001800180018;
    int8x16_t v153 = vbslq_s8(v146, v114, v39);
    int8x16_t v424 = (int8x16_t)vsubq_s16((int16x8_t)v147, v149);
    int8x16_t v425 = (int8x16_t)vsubq_s16((int16x8_t)v147, v150);
    int8x16_t v427 = (int8x16_t)vsubq_s16((int16x8_t)v147, v151);
    v150.i64[0] = 0x7000700070007;
    v150.i64[1] = 0x7000700070007;
    int8x16_t v423 = (int8x16_t)vsubq_s16((int16x8_t)v147, v148);
    v114.i64[0] = 0x8000800080008;
    v114.i64[1] = 0x8000800080008;
    v145.i64[0] = 0x2000200020002;
    v145.i64[1] = 0x2000200020002;
    int16x8_t v155 = v482;
    int8x16_t v154 = v483;
    int16x8_t v156 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v483, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v447, v114))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v89, (int16x8_t)v89), v114)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v89, v83), (int16x8_t)v145), v39));
    int16x8_t v158 = v479;
    int16x8_t v157 = v480;
    int16x8_t v159 = v481;
    int8x16_t v160 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(v156, v479, v150), vshlq_n_s16(vaddq_s16(vaddq_s16(v481, v480), v482), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v147, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v153 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v152, (int16x8_t)v152)), (int16x8_t)v423, v150), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v425, (int16x8_t)v424), (int16x8_t)v427), 3uLL))).i64[0], 0);
    int v161 = (unsigned __int16)vaddvq_s16((int16x8_t)v160);
    BOOL v163 = a5 < 2 || a6 < 2;
    if (v161)
    {
      v164.i64[0] = 0x3000300030003;
      v164.i64[1] = 0x3000300030003;
      int8x16_t v165 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v147), v164), v153), v152);
      v166.i64[0] = 0xF000F000F000FLL;
      v166.i64[1] = 0xF000F000F000FLL;
      int8x16_t v461 = vbslq_s8(v160, v90, v461);
      int8x16_t v462 = vbslq_s8(v160, v91, v462);
      v164.i64[0] = -1;
      v164.i64[1] = -1;
      int8x16_t v463 = vbslq_s8(v160, v431, v463);
      int8x16_t v464 = vbslq_s8(v160, v429, v464);
      int8x16_t v465 = vbslq_s8(v160, v441, v465);
      int8x16_t v466 = vbslq_s8(v160, v437, v466);
      int8x16_t v467 = vbslq_s8(v160, v439, v467);
      int8x16_t v468 = vbslq_s8(v160, v435, v468);
      int8x16_t v469 = vbslq_s8(v160, v96, v469);
      int8x16_t v470 = vbslq_s8(v160, v445, v470);
      int8x16_t v471 = vbslq_s8(v160, v102, v471);
      int8x16_t v472 = vbslq_s8(v160, v443, v472);
      int8x16_t v473 = vbslq_s8(v160, v99, v473);
      int8x16_t v474 = vbslq_s8(v160, v100, v474);
      int8x16_t v475 = vbslq_s8(v160, v101, v475);
      int8x16_t v476 = vbslq_s8(v160, v103, v476);
      int16x8_t v158 = (int16x8_t)vbslq_s8(v160, v423, (int8x16_t)v479);
      int16x8_t v157 = (int16x8_t)vbslq_s8(v160, v424, (int8x16_t)v480);
      int16x8_t v479 = v158;
      int16x8_t v480 = v157;
      int16x8_t v159 = (int16x8_t)vbslq_s8(v160, v425, (int8x16_t)v481);
      int16x8_t v155 = (int16x8_t)vbslq_s8(v160, v427, (int8x16_t)v482);
      int16x8_t v481 = v159;
      int16x8_t v482 = v155;
      int8x16_t v485 = vbslq_s8(v160, v433, v485);
      int8x16_t v486 = vbslq_s8(v160, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v164, vsubq_s16(v166, v144)), (int16x8_t)v143), v146), v486);
      int8x16_t v154 = vbslq_s8(v160, v147, v483);
      int8x16_t v483 = v154;
      int8x16_t v484 = vbslq_s8(v160, v143, v484);
      int8x16_t v89 = vbslq_s8(v160, v165, v478);
      int8x16_t v477 = vbslq_s8(v160, (int8x16_t)vsubq_s16((int16x8_t)v477, (int16x8_t)vqtbl1q_s8(v477, (int8x16_t)xmmword_242EA77A0)), v477);
      int8x16_t v478 = v89;
    }
    if (!v163)
    {
      int16x8_t v167 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v14.n128_u64, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v168 = vsubq_s16((int16x8_t)v14, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v14.n128_u64, (int8x16_t)xmmword_242EA7710));
      int16x8_t v169 = vsubq_s16((int16x8_t)v16, v167);
      int16x8_t v170 = vsubq_s16((int16x8_t)v17, v167);
      v488.val[0] = (int8x16_t)v454;
      v488.val[1] = (int8x16_t)v455;
      v488.val[2] = (int8x16_t)v456;
      v488.val[3].i64[0] = v450.n128_u64[0];
      v488.val[3].i64[1] = v17.n128_i64[1];
      int16x8_t v171 = vsubq_s16((int16x8_t)v454, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA7710));
      int16x8_t v172 = vsubq_s16((int16x8_t)v455, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA7750));
      int8x16_t v173 = (int8x16_t)vsubq_s16((int16x8_t)v456, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v174 = vsubq_s16((int16x8_t)v450, (int16x8_t)vqtbl4q_s8(v488, (int8x16_t)xmmword_242EA7760));
      v489.val[0] = (int8x16_t)v451;
      v489.val[1] = (int8x16_t)v452;
      v489.val[2] = (int8x16_t)v453;
      v489.val[3].i64[0] = v449;
      v489.val[3].i64[1] = v17.n128_i64[1];
      v488.val[1] = (int8x16_t)vsubq_s16((int16x8_t)v451, (int16x8_t)vqtbl4q_s8(v489, (int8x16_t)xmmword_242EA77D0));
      v488.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v452, (int16x8_t)vqtbl4q_s8(v489, (int8x16_t)xmmword_242EA77E0));
      v488.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v453, (int16x8_t)vqtbl4q_s8(v489, (int8x16_t)xmmword_242EA7710));
      int16x8_t v175 = vsubq_s16((int16x8_t)v449, (int16x8_t)vqtbl4q_s8(v489, (int8x16_t)xmmword_242EA7720));
      v487.val[0] = (int8x16_t)v458;
      v487.val[1] = (int8x16_t)v459;
      v487.val[2] = (int8x16_t)v460;
      v487.val[3].i64[0] = v457;
      v487.val[3].i64[1] = v17.n128_i64[1];
      v489.val[1].i64[1] = v168.i64[1];
      v489.val[1].i64[0] = v170.i64[1];
      v170.i64[1] = v168.i64[0];
      int16x8_t v176 = vshlq_n_s16(v170, 6uLL);
      int16x8_t v177 = vshlq_n_s16(v171, 6uLL);
      int16x8_t v178 = vshlq_n_s16(v172, 6uLL);
      int16x8_t v179 = vshlq_n_s16(v174, 6uLL);
      int16x8_t v180 = vshlq_n_s16((int16x8_t)v488.val[1], 6uLL);
      v488.val[1] = (int8x16_t)vshlq_n_s16((int16x8_t)v488.val[2], 6uLL);
      v488.val[2] = (int8x16_t)vshlq_n_s16((int16x8_t)v488.val[3], 6uLL);
      v488.val[3] = (int8x16_t)vshlq_n_s16(v175, 6uLL);
      v488.val[0] = (int8x16_t)vshlq_n_s16(vsubq_s16((int16x8_t)v458, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA77D0)), 6uLL);
      int16x8_t v181 = vshlq_n_s16(vsubq_s16((int16x8_t)v459, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA7780)), 6uLL);
      int16x8_t v182 = vshlq_n_s16(vsubq_s16((int16x8_t)v460, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA7710)), 6uLL);
      int16x8_t v183 = vshlq_n_s16(vsubq_s16((int16x8_t)v457, (int16x8_t)vqtbl4q_s8(v487, (int8x16_t)xmmword_242EA7720)), 6uLL);
      v489.val[0].i64[0] = 0x5000500050005;
      v489.val[0].i64[1] = 0x5000500050005;
      int8x16_t v184 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v489.val[1], 6uLL), (int16x8_t)v489.val[0]);
      int16x8_t v185 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v15, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v14.n128_u64, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v489.val[0]);
      int8x16_t v186 = (int8x16_t)vshlq_s16(vshlq_n_s16(v169, 6uLL), (int16x8_t)v489.val[0]);
      int16x8_t v187 = vshlq_s16(v176, (int16x8_t)v489.val[0]);
      int8x16_t v188 = (int8x16_t)vshlq_s16(v177, (int16x8_t)v489.val[0]);
      int16x8_t v189 = vshlq_s16(v178, (int16x8_t)v489.val[0]);
      int16x8_t v190 = vshlq_s16(v179, (int16x8_t)v489.val[0]);
      int8x16_t v191 = (int8x16_t)vshlq_s16(v180, (int16x8_t)v489.val[0]);
      v489.val[1] = (int8x16_t)vshlq_s16((int16x8_t)v488.val[1], (int16x8_t)v489.val[0]);
      int8x16_t v192 = (int8x16_t)vshlq_s16((int16x8_t)v488.val[2], (int16x8_t)v489.val[0]);
      int8x16_t v193 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v173, 6uLL), (int16x8_t)v489.val[0]);
      v489.val[2] = (int8x16_t)vshlq_s16((int16x8_t)v488.val[3], (int16x8_t)v489.val[0]);
      int8x16_t v194 = (int8x16_t)vshlq_s16((int16x8_t)v488.val[0], (int16x8_t)v489.val[0]);
      int16x8_t v195 = vshlq_s16(v181, (int16x8_t)v489.val[0]);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v182, (int16x8_t)v489.val[0]);
      v489.val[0] = (int8x16_t)vshlq_s16(v183, (int16x8_t)v489.val[0]);
      int8x16_t v446 = (int8x16_t)v187;
      int8x16_t v448 = (int8x16_t)v185;
      int16x8_t v197 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v184, v185), (int16x8_t)v186), v187), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v198 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v184, v185), (int16x8_t)v186), v187), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v199 = vpmaxq_s16(v197, v197);
      int16x8_t v200 = vpminq_s16(v198, v198);
      v183.i64[0] = 0x8000800080008000;
      v183.i64[1] = 0x8000800080008000;
      int16x8_t v201 = vmaxq_s16(v199, v183);
      v185.i64[0] = 0x8000800080008000;
      v185.i64[1] = 0x8000800080008000;
      int16x8_t v202 = vminq_s16(v200, v185);
      int16x8_t v203 = vzip1q_s16(v199, v200);
      v173.i64[0] = 0x10001000100010;
      v173.i64[1] = 0x10001000100010;
      int16x8_t v204 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v173, vclsq_s16(v203)), (int8x16_t)vceqzq_s16(v203));
      int16x8_t v205 = vpmaxq_s16(v204, v204);
      int8x16_t v442 = (int8x16_t)v190;
      int8x16_t v444 = (int8x16_t)v189;
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v188, v189), (int16x8_t)v193), v190), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v207 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v188, v189), (int16x8_t)v193), v190), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v208 = vpmaxq_s16(v206, v206);
      int16x8_t v209 = vpminq_s16(v207, v207);
      int16x8_t v210 = vmaxq_s16(v201, v208);
      int16x8_t v211 = vminq_s16(v202, v209);
      int16x8_t v212 = vzip1q_s16(v208, v209);
      int16x8_t v213 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v173, vclsq_s16(v212)), (int8x16_t)vceqzq_s16(v212));
      int16x8_t v214 = vpmaxq_s16(v213, v213);
      int8x16_t v438 = v489.val[2];
      int8x16_t v440 = v489.val[1];
      int16x8_t v215 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v191, (int16x8_t)v489.val[1]), (int16x8_t)v192), (int16x8_t)v489.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v216 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v191, (int16x8_t)v489.val[1]), (int16x8_t)v192), (int16x8_t)v489.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v217 = vpmaxq_s16(v215, v215);
      int16x8_t v218 = vpminq_s16(v216, v216);
      int16x8_t v219 = vmaxq_s16(v210, v217);
      int16x8_t v220 = vminq_s16(v211, v218);
      int16x8_t v221 = vzip1q_s16(v217, v218);
      int16x8_t v222 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v173, vclsq_s16(v221)), (int8x16_t)vceqzq_s16(v221));
      int16x8_t v223 = vpmaxq_s16(v222, v222);
      int8x16_t v434 = v489.val[0];
      int8x16_t v436 = (int8x16_t)v195;
      int16x8_t v224 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v194, v195), (int16x8_t)v196), (int16x8_t)v489.val[0]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v225 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v194, v195), (int16x8_t)v196), (int16x8_t)v489.val[0]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v226 = vpmaxq_s16(v224, v224);
      int16x8_t v227 = vpminq_s16(v225, v225);
      int8x16_t v228 = (int8x16_t)vmaxq_s16(v219, v226);
      int16x8_t v229 = vminq_s16(v220, v227);
      int16x8_t v230 = vzip1q_s16(v226, v227);
      int16x8_t v231 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v173, vclsq_s16(v230)), (int8x16_t)vceqzq_s16(v230));
      int16x8_t v232 = vpmaxq_s16(v231, v231);
      int8x16_t v233 = (int8x16_t)vmaxq_s16(vmaxq_s16(v205, v214), vmaxq_s16(v223, v232));
      int8x16_t v234 = (int8x16_t)v229;
      int16x8_t v235 = vclzq_s16(vsubq_s16((int16x8_t)v228, v229));
      int8x16_t v236 = (int8x16_t)vsubq_s16((int16x8_t)v173, v235);
      int8x16_t v237 = (int8x16_t)vcgtq_s16((int16x8_t)v233, (int16x8_t)v236);
      int8x16_t v238 = vbslq_s8(v237, v236, v233);
      v233.i64[0] = 0x3000300030003;
      v233.i64[1] = 0x3000300030003;
      int16x8_t v239 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v238, v205), (int16x8_t)v233), (int16x8_t)0);
      int8x16_t v240 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v238, v214), (int16x8_t)v233), (int16x8_t)0);
      int16x8_t v241 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v238, v223), (int16x8_t)v233), (int16x8_t)0);
      int16x8_t v242 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v238, v232), (int16x8_t)v233), (int16x8_t)0);
      v489.val[1] = (int8x16_t)vsubq_s16((int16x8_t)v238, v239);
      int16x8_t v243 = vsubq_s16((int16x8_t)v238, (int16x8_t)v240);
      v489.val[0] = (int8x16_t)vsubq_s16((int16x8_t)v238, v242);
      int8x16_t v244 = (int8x16_t)vceqq_s16(vaddq_s16(v242, v241), vnegq_s16(vaddq_s16(v239, (int16x8_t)v240)));
      v240.i64[0] = 0x4000400040004;
      v240.i64[1] = 0x4000400040004;
      int8x16_t v245 = vbicq_s8(v240, v244);
      v242.i64[0] = 0x7000700070007;
      v242.i64[1] = 0x7000700070007;
      int8x16_t v430 = v489.val[0];
      int8x16_t v432 = (int8x16_t)v243;
      int8x16_t v426 = (int8x16_t)vsubq_s16((int16x8_t)v238, v241);
      int8x16_t v428 = v489.val[1];
      int16x8_t v246 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v236, v237), vaddq_s16((int16x8_t)v245, (int16x8_t)v245)), (int16x8_t)v489.val[1], v242), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v426, v243), (int16x8_t)v489.val[0]), 3uLL));
      int8x16_t v89 = v478;
      int16x8_t v158 = v479;
      v247.i64[0] = 0x2000200020002;
      v247.i64[1] = 0x2000200020002;
      int16x8_t v248 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v478, v233), (int16x8_t)v247), v173);
      v233.i64[0] = 0x8000800080008;
      v233.i64[1] = 0x8000800080008;
      int16x8_t v155 = v482;
      int8x16_t v154 = v483;
      int16x8_t v157 = v480;
      int16x8_t v159 = v481;
      int8x16_t v249 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v483, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v478, v233))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v89, (int16x8_t)v89), v233)), v248), v479, v242), vshlq_n_s16(vaddq_s16(vaddq_s16(v481, v480), v482), 3uLL)), v246).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v249))
      {
        v250.i64[0] = 0x9000900090009;
        v250.i64[1] = 0x9000900090009;
        v251.i64[0] = 0xF000F000F000FLL;
        v251.i64[1] = 0xF000F000F000FLL;
        v252.i64[0] = -1;
        v252.i64[1] = -1;
        int16x8_t v158 = (int16x8_t)vbslq_s8(v249, v428, (int8x16_t)v479);
        int16x8_t v157 = (int16x8_t)vbslq_s8(v249, v432, (int8x16_t)v480);
        int16x8_t v159 = (int16x8_t)vbslq_s8(v249, v426, (int8x16_t)v481);
        int16x8_t v155 = (int16x8_t)vbslq_s8(v249, v430, (int8x16_t)v482);
        int8x16_t v154 = vbslq_s8(v249, v238, v483);
        int8x16_t v89 = vbslq_s8(v249, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v238), v247), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v237, v250), (int16x8_t)vmvnq_s8(v237))), v245), v478);
        int8x16_t v476 = vbslq_s8(v249, v434, v476);
        int8x16_t v477 = vbslq_s8(v249, vextq_s8((int8x16_t)v17, (int8x16_t)v17, 8uLL), v477);
        int8x16_t v461 = vbslq_s8(v249, v184, v461);
        int8x16_t v462 = vbslq_s8(v249, v448, v462);
        int8x16_t v463 = vbslq_s8(v249, v186, v463);
        int8x16_t v464 = vbslq_s8(v249, v446, v464);
        int8x16_t v465 = vbslq_s8(v249, v188, v465);
        int8x16_t v466 = vbslq_s8(v249, v444, v466);
        int8x16_t v467 = vbslq_s8(v249, v193, v467);
        int8x16_t v468 = vbslq_s8(v249, v442, v468);
        int8x16_t v469 = vbslq_s8(v249, v191, v469);
        int8x16_t v470 = vbslq_s8(v249, v440, v470);
        int8x16_t v471 = vbslq_s8(v249, v192, v471);
        int8x16_t v472 = vbslq_s8(v249, v438, v472);
        int8x16_t v473 = vbslq_s8(v249, v194, v473);
        int8x16_t v474 = vbslq_s8(v249, v436, v474);
        int8x16_t v475 = vbslq_s8(v249, v196, v475);
        int8x16_t v484 = vbslq_s8(v249, v234, v484);
        int8x16_t v485 = vbslq_s8(v249, v228, v485);
        int8x16_t v486 = vbslq_s8(v249, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v252, vsubq_s16(v251, v235)), (int16x8_t)v234), v237), v486);
        int16x8_t v479 = v158;
        int16x8_t v480 = v157;
        int16x8_t v481 = v159;
        int16x8_t v482 = v155;
        int8x16_t v483 = v154;
        int8x16_t v478 = v89;
      }
    }
    int16x8_t v253 = (int16x8_t)vandq_s8(v486, (int8x16_t)vceqq_s16((int16x8_t)v154, v158));
    int8x16_t v461 = (int8x16_t)vaddq_s16(v253, (int16x8_t)v461);
    int8x16_t v462 = (int8x16_t)vaddq_s16((int16x8_t)v462, v253);
    int8x16_t v463 = (int8x16_t)vaddq_s16((int16x8_t)v463, v253);
    int8x16_t v464 = (int8x16_t)vaddq_s16((int16x8_t)v464, v253);
    int16x8_t v254 = (int16x8_t)vandq_s8(v486, (int8x16_t)vceqq_s16((int16x8_t)v154, v157));
    int8x16_t v465 = (int8x16_t)vaddq_s16((int16x8_t)v465, v254);
    int8x16_t v466 = (int8x16_t)vaddq_s16((int16x8_t)v466, v254);
    int8x16_t v467 = (int8x16_t)vaddq_s16((int16x8_t)v467, v254);
    int8x16_t v468 = (int8x16_t)vaddq_s16((int16x8_t)v468, v254);
    int16x8_t v255 = (int16x8_t)vandq_s8(v486, (int8x16_t)vceqq_s16((int16x8_t)v154, v159));
    int8x16_t v469 = (int8x16_t)vaddq_s16((int16x8_t)v469, v255);
    int8x16_t v470 = (int8x16_t)vaddq_s16((int16x8_t)v470, v255);
    int8x16_t v471 = (int8x16_t)vaddq_s16((int16x8_t)v471, v255);
    int8x16_t v472 = (int8x16_t)vaddq_s16((int16x8_t)v472, v255);
    int8x16_t v256 = vandq_s8(v486, (int8x16_t)vceqq_s16((int16x8_t)v154, v155));
    int8x16_t v473 = (int8x16_t)vaddq_s16((int16x8_t)v473, (int16x8_t)v256);
    int8x16_t v474 = (int8x16_t)vaddq_s16((int16x8_t)v474, (int16x8_t)v256);
    int8x16_t v475 = (int8x16_t)vaddq_s16((int16x8_t)v475, (int16x8_t)v256);
    int8x16_t v476 = (int8x16_t)vaddq_s16((int16x8_t)v476, (int16x8_t)v256);
    v256.i64[0] = 0x8000800080008;
    v256.i64[1] = 0x8000800080008;
    v257.i64[0] = 0x3000300030003;
    v257.i64[1] = 0x3000300030003;
    v258.i64[0] = 0x2000200020002;
    v258.i64[1] = 0x2000200020002;
    int8x16_t v259 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v89, v257), v258);
    v258.i64[0] = 0x10001000100010;
    v258.i64[1] = 0x10001000100010;
    int16x8_t v260 = (int16x8_t)vandq_s8(v259, (int8x16_t)v258);
    v258.i64[0] = 0x7000700070007;
    v258.i64[1] = 0x7000700070007;
    int16x8_t v261 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v154, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v89, v256))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v89, (int16x8_t)v89), v256)), v260), v158, v258), vshlq_n_s16(vaddq_s16(v159, vaddq_s16(v157, v155)), 3uLL));
    int16x8_t v262 = vpaddq_s16(v261, v261);
    if ((unint64_t)(vpaddq_s16(v262, v262).i16[0] + 83) > 0x4FF)
    {
      AGX::AppleCompressionGen2::writePackedUncompressedSubblock<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::VecArray<short,4ul>>(a1, a2, v14, v15, v16, v17, v454, v455, v456, v450, (uint64_t)a3, a4, a5, a6, a7, a8, v451, v452, v453,
        v449,
        v458,
        v459,
        v460,
        v457);
      return 160;
    }
    else
    {
      int v263 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v264 = 8 * (a1 & 7);
      if (v264) {
        uint64_t v265 = *v263 & ~(-1 << v264);
      }
      else {
        uint64_t v265 = 0;
      }
      *a2 = 0;
      uint64_t v269 = ((v154.u16[0] << 20) - 0x100000) & 0xF00000;
      v270.i32[0] = v89.u16[1];
      v270.i32[1] = v89.u16[2];
      int8x8_t v271 = vand_s8((int8x8_t)vshl_u32(v270, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v272 = v271.i32[1];
      __int32 v273 = v271.i32[0] | v89.i8[0] & 0x1F;
      if (!v154.i16[0]) {
        uint64_t v269 = 0;
      }
      unint64_t v274 = (unint64_t)((v154.i8[4] - 1) & 0xF) << 28;
      if (!v154.i16[2]) {
        unint64_t v274 = 0;
      }
      v275.i32[0] = v154.u16[3];
      v275.i32[1] = v154.u16[1];
      int32x2_t v276 = vceqz_s32((int32x2_t)vand_s8(v275, (int8x8_t)0xFFFF0000FFFFLL));
      v277.i64[0] = v276.i32[0];
      v277.i64[1] = v276.i32[1];
      int8x16_t v278 = (int8x16_t)v277;
      int8x8_t v279 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v275, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v277.i64[0] = v279.u32[0];
      v277.i64[1] = v279.u32[1];
      int8x16_t v280 = vbicq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA77F0), v278);
      v278.i64[0] = v274;
      v278.i64[1] = v273 | v272 | ((unint64_t)(v89.i8[6] & 0x1F) << 15) | v269;
      int8x16_t v281 = vorrq_s8(v278, v280);
      uint64_t v282 = v477.i64[0];
      unint64_t v283 = vorrq_s8(v281, (int8x16_t)vdupq_laneq_s64((int64x2_t)v281, 1)).u64[0];
      unint64_t v284 = (v283 << v264) | v265;
      if (v264 >= 0x1C)
      {
        *int v263 = v284;
        unint64_t v284 = v283 >> (-8 * (a1 & 7u));
      }
      v285.i64[0] = WORD1(v282);
      v285.i64[1] = WORD2(v282);
      v286.i64[0] = 0xFFFFLL;
      v286.i64[1] = 0xFFFFLL;
      int8x16_t v287 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v285, v286), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v288 = v287.i64[0] | v282 & 0x3FF | v287.i64[1] | ((unint64_t)(HIWORD(v282) & 0x3FF) << 30);
      unint64_t v289 = (v264 + 36) & 0x3C;
      unint64_t v290 = v284 | (v288 << v289);
      if (v289 >= 0x18)
      {
        *(void *)((char *)v263 + (((v264 + 36) >> 3) & 8)) = v290;
        unint64_t v290 = v288 >> -(char)v289;
      }
      unint64_t v291 = v264 + 76;
      int8x16_t v292 = (int8x16_t)vsubq_s16((int16x8_t)v483, v479);
      int8x16_t v293 = (int8x16_t)vsubq_s16((int16x8_t)v483, v480);
      int8x16_t v294 = (int8x16_t)vsubq_s16((int16x8_t)v483, v481);
      int8x16_t v295 = (int8x16_t)vsubq_s16((int16x8_t)v483, v482);
      *(uint8x8_t *)v292.i8 = vqmovn_u16((uint16x8_t)v292);
      *(uint8x8_t *)v293.i8 = vqmovn_u16((uint16x8_t)v293);
      *(uint8x8_t *)v294.i8 = vqmovn_u16((uint16x8_t)v294);
      *(uint8x8_t *)v295.i8 = vqmovn_u16((uint16x8_t)v295);
      int16x8_t v296 = (int16x8_t)vtrn1q_s8(v292, v293);
      int16x8_t v297 = (int16x8_t)vtrn2q_s8(v292, v293);
      int8x16_t v298 = vtrn1q_s8(v294, v295);
      int16x8_t v299 = (int16x8_t)vtrn2q_s8(v294, v295);
      int8x16_t v300 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v296, (int16x8_t)v298), (int32x4_t)vzip1q_s16(v297, v299)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v296, (int16x8_t)v298), (int32x4_t)vtrn2q_s16(v297, v299)));
      v298.i64[0] = 0x202020202020202;
      v298.i64[1] = 0x202020202020202;
      int8x16_t v301 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v478.i8, (int16x4_t)0x4000400040004)), v298);
      v298.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v298.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v294.i64[0] = -1;
      v294.i64[1] = -1;
      uint8x16_t v302 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v294, (uint8x16_t)vorrq_s8(v301, v298)), v300);
      int16x8_t v303 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v301.i8);
      int16x8_t v304 = (int16x8_t)vmovl_high_u8((uint8x16_t)v301);
      uint16x8_t v305 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v302.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v303)), (int16x8_t)vshlq_u16(vmovl_high_u8(v302), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v304)));
      uint16x8_t v306 = (uint16x8_t)vpaddq_s16(v303, v304);
      int32x4_t v307 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v306.i8);
      int32x4_t v308 = (int32x4_t)vmovl_high_u16(v306);
      int32x4_t v309 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v305.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v307)), (int32x4_t)vshlq_u32(vmovl_high_u16(v305), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v308)));
      int32x4_t v310 = vpaddq_s32(v307, v308);
      v311.i64[0] = v309.u32[0];
      v311.i64[1] = v309.u32[1];
      uint64x2_t v312 = (uint64x2_t)v311;
      v311.i64[0] = v309.u32[2];
      v311.i64[1] = v309.u32[3];
      uint64x2_t v313 = (uint64x2_t)v311;
      v311.i64[0] = v310.u32[0];
      v311.i64[1] = v310.u32[1];
      int64x2_t v314 = v311;
      v311.i64[0] = v310.u32[2];
      v311.i64[1] = v310.u32[3];
      int64x2_t v315 = vpaddq_s64((int64x2_t)vshlq_u64(v312, (uint64x2_t)vzip1q_s64((int64x2_t)0, v314)), (int64x2_t)vshlq_u64(v313, (uint64x2_t)vzip1q_s64((int64x2_t)0, v311)));
      int64x2_t v316 = vpaddq_s64(v314, v311);
      uint64_t v317 = (v264 + 76) & 0x3C;
      unint64_t v318 = (v315.i64[0] << v317) | v290;
      if ((unint64_t)(v316.i64[0] + v317) >= 0x40)
      {
        *(void *)((char *)v263 + ((v291 >> 3) & 0x18)) = v318;
        unint64_t v318 = (unint64_t)v315.i64[0] >> -(char)v317;
      }
      unint64_t v319 = v316.i64[0] + v291;
      unint64_t v320 = v318 | (v315.i64[1] << v319);
      if ((v319 & 0x3F) + v316.i64[1] >= 0x40)
      {
        *(void *)((char *)v263 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v320;
        unint64_t v320 = (unint64_t)v315.i64[1] >> -(v319 & 0x3F);
        if ((v319 & 0x3F) == 0) {
          unint64_t v320 = 0;
        }
      }
      unint64_t v321 = v319 + v316.i64[1];
      v322.i64[0] = 0x8000800080008;
      v322.i64[1] = 0x8000800080008;
      v323.i64[0] = -1;
      v323.i64[1] = -1;
      int16x8_t v324 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v478, v322), (int8x16_t)0, 8uLL), v483);
      v325.i64[0] = 0xF000F000F000FLL;
      v325.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v326 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v323, (uint16x8_t)vaddq_s16(v324, v325)), v486);
      int32x4_t v327 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v324.i8);
      int32x4_t v328 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v326.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v327)), (int32x4_t)vmovl_high_u16(v326));
      int32x4_t v329 = vpaddq_s32(v327, (int32x4_t)vmovl_high_u16((uint16x8_t)v324));
      v330.i64[0] = v328.u32[0];
      v330.i64[1] = v328.u32[1];
      uint64x2_t v331 = (uint64x2_t)v330;
      v330.i64[0] = v328.u32[2];
      v330.i64[1] = v328.u32[3];
      uint64x2_t v332 = (uint64x2_t)v330;
      v330.i64[0] = v329.u32[0];
      v330.i64[1] = v329.u32[1];
      int64x2_t v333 = v330;
      v330.i64[0] = v329.u32[2];
      v330.i64[1] = v329.u32[3];
      int64x2_t v334 = vpaddq_s64((int64x2_t)vshlq_u64(v331, (uint64x2_t)vzip1q_s64((int64x2_t)0, v333)), (int64x2_t)vshlq_u64(v332, (uint64x2_t)vzip1q_s64((int64x2_t)0, v330)));
      int64x2_t v335 = vpaddq_s64(v333, v330);
      unint64_t v336 = (v334.i64[0] << v321) | v320;
      if (v335.i64[0] + (v321 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v263 + ((v321 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v336;
        unint64_t v336 = (unint64_t)v334.i64[0] >> -(v321 & 0x3F);
        if ((v321 & 0x3F) == 0) {
          unint64_t v336 = 0;
        }
      }
      unint64_t v337 = v335.i64[0] + v321;
      unint64_t v338 = v336 | (v334.i64[1] << v337);
      if ((v337 & 0x3F) + v335.i64[1] >= 0x40)
      {
        *(void *)((char *)v263 + ((v337 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v338;
        unint64_t v338 = (unint64_t)v334.i64[1] >> -(v337 & 0x3F);
        if ((v337 & 0x3F) == 0) {
          unint64_t v338 = 0;
        }
      }
      unint64_t v339 = v337 + v335.i64[1];
      int16x8_t v340 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v479, 8uLL);
      v341.i64[0] = 0xF000F000F000FLL;
      v341.i64[1] = 0xF000F000F000FLL;
      v342.i64[0] = -1;
      v342.i64[1] = -1;
      uint16x8_t v343 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v342, (uint16x8_t)vaddq_s16(v340, v341)), v461);
      int32x4_t v344 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v340.i8);
      int32x4_t v345 = (int32x4_t)vmovl_high_u16((uint16x8_t)v340);
      int32x4_t v346 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v343.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v343), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v345)));
      int32x4_t v347 = vpaddq_s32(v344, v345);
      v348.i64[0] = v346.u32[0];
      v348.i64[1] = v346.u32[1];
      uint64x2_t v349 = (uint64x2_t)v348;
      v348.i64[0] = v346.u32[2];
      v348.i64[1] = v346.u32[3];
      uint64x2_t v350 = (uint64x2_t)v348;
      v348.i64[0] = v347.u32[0];
      v348.i64[1] = v347.u32[1];
      int64x2_t v351 = v348;
      v348.i64[0] = v347.u32[2];
      v348.i64[1] = v347.u32[3];
      int64x2_t v352 = vpaddq_s64((int64x2_t)vshlq_u64(v349, (uint64x2_t)vzip1q_s64((int64x2_t)0, v351)), (int64x2_t)vshlq_u64(v350, (uint64x2_t)vzip1q_s64((int64x2_t)0, v348)));
      int64x2_t v353 = vpaddq_s64(v351, v348);
      unint64_t v354 = (v352.i64[0] << v339) | v338;
      if (v353.i64[0] + (v339 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v263 + ((v339 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v354;
        if ((v339 & 0x3F) != 0) {
          unint64_t v354 = (unint64_t)v352.i64[0] >> -(v339 & 0x3F);
        }
        else {
          unint64_t v354 = 0;
        }
      }
      unint64_t v355 = v353.i64[0] + v339;
      uint64_t v356 = (v353.i64[0] + v339) & 0x3F;
      unint64_t v357 = v354 | (v352.i64[1] << v355);
      if ((unint64_t)(v356 + v353.i64[1]) >= 0x40)
      {
        *(void *)((char *)v263 + ((v355 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
        unint64_t v357 = (unint64_t)v352.i64[1] >> -(char)v356;
        if (!v356) {
          unint64_t v357 = 0;
        }
      }
      unint64_t v358 = v355 + v353.i64[1];
      v359.i64[0] = 0xF000F000F000FLL;
      v359.i64[1] = 0xF000F000F000FLL;
      v360.i64[0] = -1;
      v360.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v362 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v360, (uint16x8_t)vaddq_s16(v479, v359)), *(int8x16_t *)((char *)&v461 + i));
        int32x4_t v363 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v479.i8);
        int32x4_t v364 = (int32x4_t)vmovl_high_u16((uint16x8_t)v479);
        int32x4_t v365 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v362.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v363)), (int32x4_t)vshlq_u32(vmovl_high_u16(v362), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)));
        int32x4_t v366 = vpaddq_s32(v363, v364);
        v367.i64[0] = v365.u32[0];
        v367.i64[1] = v365.u32[1];
        uint64x2_t v368 = (uint64x2_t)v367;
        v367.i64[0] = v365.u32[2];
        v367.i64[1] = v365.u32[3];
        uint64x2_t v369 = (uint64x2_t)v367;
        v367.i64[0] = v366.u32[0];
        v367.i64[1] = v366.u32[1];
        int64x2_t v370 = v367;
        v367.i64[0] = v366.u32[2];
        v367.i64[1] = v366.u32[3];
        int64x2_t v371 = vpaddq_s64((int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)), (int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v367)));
        int64x2_t v372 = vpaddq_s64(v370, v367);
        unint64_t v373 = (v371.i64[0] << v358) | v357;
        if (v372.i64[0] + (v358 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v263 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v373;
          unint64_t v373 = (unint64_t)v371.i64[0] >> -(v358 & 0x3F);
          if ((v358 & 0x3F) == 0) {
            unint64_t v373 = 0;
          }
        }
        unint64_t v374 = v372.i64[0] + v358;
        unint64_t v357 = v373 | (v371.i64[1] << v374);
        if ((v374 & 0x3F) + v372.i64[1] >= 0x40)
        {
          *(void *)((char *)v263 + ((v374 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
          unint64_t v357 = (unint64_t)v371.i64[1] >> -(v374 & 0x3F);
          if ((v374 & 0x3F) == 0) {
            unint64_t v357 = 0;
          }
        }
        unint64_t v358 = v374 + v372.i64[1];
      }
      uint64_t v375 = 0;
      v376.i64[0] = 0xF000F000F000FLL;
      v376.i64[1] = 0xF000F000F000FLL;
      v377.i64[0] = -1;
      v377.i64[1] = -1;
      do
      {
        uint16x8_t v378 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v377, (uint16x8_t)vaddq_s16(v480, v376)), *(int8x16_t *)((char *)&v465 + v375));
        int32x4_t v379 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v480.i8);
        int32x4_t v380 = (int32x4_t)vmovl_high_u16((uint16x8_t)v480);
        int32x4_t v381 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v378.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v379)), (int32x4_t)vshlq_u32(vmovl_high_u16(v378), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v380)));
        int32x4_t v382 = vpaddq_s32(v379, v380);
        v383.i64[0] = v381.u32[0];
        v383.i64[1] = v381.u32[1];
        uint64x2_t v384 = (uint64x2_t)v383;
        v383.i64[0] = v381.u32[2];
        v383.i64[1] = v381.u32[3];
        uint64x2_t v385 = (uint64x2_t)v383;
        v383.i64[0] = v382.u32[0];
        v383.i64[1] = v382.u32[1];
        int64x2_t v386 = v383;
        v383.i64[0] = v382.u32[2];
        v383.i64[1] = v382.u32[3];
        int64x2_t v387 = vpaddq_s64((int64x2_t)vshlq_u64(v384, (uint64x2_t)vzip1q_s64((int64x2_t)0, v386)), (int64x2_t)vshlq_u64(v385, (uint64x2_t)vzip1q_s64((int64x2_t)0, v383)));
        int64x2_t v388 = vpaddq_s64(v386, v383);
        unint64_t v389 = (v387.i64[0] << v358) | v357;
        if (v388.i64[0] + (v358 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v263 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
          unint64_t v389 = (unint64_t)v387.i64[0] >> -(v358 & 0x3F);
          if ((v358 & 0x3F) == 0) {
            unint64_t v389 = 0;
          }
        }
        unint64_t v390 = v388.i64[0] + v358;
        unint64_t v357 = v389 | (v387.i64[1] << v390);
        if ((v390 & 0x3F) + v388.i64[1] >= 0x40)
        {
          *(void *)((char *)v263 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
          unint64_t v357 = (unint64_t)v387.i64[1] >> -(v390 & 0x3F);
          if ((v390 & 0x3F) == 0) {
            unint64_t v357 = 0;
          }
        }
        unint64_t v358 = v390 + v388.i64[1];
        v375 += 16;
      }
      while (v375 != 64);
      uint64_t v391 = 0;
      v392.i64[0] = 0xF000F000F000FLL;
      v392.i64[1] = 0xF000F000F000FLL;
      v393.i64[0] = -1;
      v393.i64[1] = -1;
      do
      {
        uint16x8_t v394 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v393, (uint16x8_t)vaddq_s16(v481, v392)), *(int8x16_t *)((char *)&v469 + v391));
        int32x4_t v395 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v481.i8);
        int32x4_t v396 = (int32x4_t)vmovl_high_u16((uint16x8_t)v481);
        int32x4_t v397 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v394.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v395)), (int32x4_t)vshlq_u32(vmovl_high_u16(v394), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v396)));
        int32x4_t v398 = vpaddq_s32(v395, v396);
        v399.i64[0] = v397.u32[0];
        v399.i64[1] = v397.u32[1];
        uint64x2_t v400 = (uint64x2_t)v399;
        v399.i64[0] = v397.u32[2];
        v399.i64[1] = v397.u32[3];
        uint64x2_t v401 = (uint64x2_t)v399;
        v399.i64[0] = v398.u32[0];
        v399.i64[1] = v398.u32[1];
        int64x2_t v402 = v399;
        v399.i64[0] = v398.u32[2];
        v399.i64[1] = v398.u32[3];
        int64x2_t v403 = vpaddq_s64((int64x2_t)vshlq_u64(v400, (uint64x2_t)vzip1q_s64((int64x2_t)0, v402)), (int64x2_t)vshlq_u64(v401, (uint64x2_t)vzip1q_s64((int64x2_t)0, v399)));
        int64x2_t v404 = vpaddq_s64(v402, v399);
        unint64_t v405 = (v403.i64[0] << v358) | v357;
        if (v404.i64[0] + (v358 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v263 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v405;
          unint64_t v405 = (unint64_t)v403.i64[0] >> -(v358 & 0x3F);
          if ((v358 & 0x3F) == 0) {
            unint64_t v405 = 0;
          }
        }
        unint64_t v406 = v404.i64[0] + v358;
        unint64_t v357 = v405 | (v403.i64[1] << v406);
        if ((v406 & 0x3F) + v404.i64[1] >= 0x40)
        {
          *(void *)((char *)v263 + ((v406 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
          unint64_t v357 = (unint64_t)v403.i64[1] >> -(v406 & 0x3F);
          if ((v406 & 0x3F) == 0) {
            unint64_t v357 = 0;
          }
        }
        unint64_t v358 = v406 + v404.i64[1];
        v391 += 16;
      }
      while (v391 != 64);
      uint64_t v407 = 0;
      v408.i64[0] = 0xF000F000F000FLL;
      v408.i64[1] = 0xF000F000F000FLL;
      v409.i64[0] = -1;
      v409.i64[1] = -1;
      do
      {
        uint16x8_t v410 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v409, (uint16x8_t)vaddq_s16(v482, v408)), *(int8x16_t *)((char *)&v473 + v407));
        int32x4_t v411 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v482.i8);
        int32x4_t v412 = (int32x4_t)vmovl_high_u16((uint16x8_t)v482);
        int32x4_t v413 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v410.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v411)), (int32x4_t)vshlq_u32(vmovl_high_u16(v410), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v412)));
        int32x4_t v414 = vpaddq_s32(v411, v412);
        v415.i64[0] = v413.u32[0];
        v415.i64[1] = v413.u32[1];
        uint64x2_t v416 = (uint64x2_t)v415;
        v415.i64[0] = v413.u32[2];
        v415.i64[1] = v413.u32[3];
        uint64x2_t v417 = (uint64x2_t)v415;
        v415.i64[0] = v414.u32[0];
        v415.i64[1] = v414.u32[1];
        int64x2_t v418 = v415;
        v415.i64[0] = v414.u32[2];
        v415.i64[1] = v414.u32[3];
        int64x2_t v419 = vpaddq_s64((int64x2_t)vshlq_u64(v416, (uint64x2_t)vzip1q_s64((int64x2_t)0, v418)), (int64x2_t)vshlq_u64(v417, (uint64x2_t)vzip1q_s64((int64x2_t)0, v415)));
        int64x2_t v420 = vpaddq_s64(v418, v415);
        unint64_t v421 = (v419.i64[0] << v358) | v357;
        if (v420.i64[0] + (v358 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v263 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v421;
          unint64_t v421 = (unint64_t)v419.i64[0] >> -(v358 & 0x3F);
          if ((v358 & 0x3F) == 0) {
            unint64_t v421 = 0;
          }
        }
        unint64_t v422 = v420.i64[0] + v358;
        unint64_t v357 = v421 | (v419.i64[1] << v422);
        if ((v422 & 0x3F) + v420.i64[1] >= 0x40)
        {
          *(void *)((char *)v263 + ((v422 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
          unint64_t v357 = (unint64_t)v419.i64[1] >> -(v422 & 0x3F);
          if ((v422 & 0x3F) == 0) {
            unint64_t v357 = 0;
          }
        }
        unint64_t v358 = v422 + v420.i64[1];
        v407 += 16;
      }
      while (v407 != 64);
      if ((v358 & 0x3F) != 0) {
        *(void *)((char *)v263 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
      }
      unint64_t result = (v358 - v264 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v266 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v267 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v266, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v266, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v267.i8 = vorr_s8(*(int8x8_t *)v267.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v267, v267, 8uLL));
    *(_DWORD *)a1 = v267.i32[0];
    *(unsigned char *)(a1 + 4) = v267.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = a3;
  int16x8_t v13 = (int16x8_t *)result;
  if (a5 >= 4) {
    uint64_t v14 = 4;
  }
  else {
    uint64_t v14 = a5;
  }
  if (a6 >= 4) {
    uint64_t v15 = 4;
  }
  else {
    uint64_t v15 = a6;
  }
  if (v14 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v14, v15, a7, a8);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  __n128 v16 = a4 + 1;
  if (a5 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    int v19 = 4;
  }
  else {
    int v19 = v18;
  }
  if (v19) {
    BOOL v20 = v15 == 0;
  }
  else {
    BOOL v20 = 1;
  }
  if (v20)
  {
    *__n128 v16 = 0;
  }
  else
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v16, v13 + 4, a2, v19, v15, a7, a8);
    v11 += result;
  }
  uint64_t v21 = 4 * a2;
  int16x8_t v22 = a4 + 2;
  if (a6 <= 4) {
    int v23 = 4;
  }
  else {
    int v23 = a6;
  }
  unsigned int v24 = v23 - 4;
  if (v24 >= 4) {
    int v25 = 4;
  }
  else {
    int v25 = v24;
  }
  if (v14 && v25)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v22, (int16x8_t *)((char *)v13 + v21), a2, v14, v25, a7, a8);
    v11 += result;
    int8x16_t v26 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  else
  {
    *int16x8_t v22 = 0;
    int8x16_t v26 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  if (v25)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v26, (int16x8_t *)((char *)v13 + v21 + 64), a2, v19, v25, a7, a8);
    v11 += result;
    goto LABEL_37;
  }
LABEL_36:
  *int8x16_t v26 = 0;
LABEL_37:
  int8x16_t v27 = a4 + 4;
  if (a5 <= 8) {
    int v28 = 8;
  }
  else {
    int v28 = a5;
  }
  unsigned int v29 = v28 - 8;
  if (v29 >= 4) {
    int v30 = 4;
  }
  else {
    int v30 = v29;
  }
  if (v30 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v27, v13 + 8, a2, v30, v15, a7, a8);
    v11 += result;
  }
  else
  {
    *int8x16_t v27 = 0;
  }
  int16x8_t v31 = a4 + 5;
  if (a5 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a5;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v34 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v31, v13 + 12, a2, v34, v15, a7, a8);
    v11 += result;
    int16x8_t v35 = a4 + 6;
    if (!v30) {
      goto LABEL_61;
    }
  }
  else
  {
    *int16x8_t v31 = 0;
    int16x8_t v35 = a4 + 6;
    if (!v30) {
      goto LABEL_61;
    }
  }
  if (v25)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v35, (int16x8_t *)((char *)v13 + v21 + 128), a2, v30, v25, a7, a8);
    v11 += result;
    int16x8_t v36 = a4 + 7;
    if (!v34) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *int16x8_t v35 = 0;
  int16x8_t v36 = a4 + 7;
  if (!v34)
  {
LABEL_66:
    *int16x8_t v36 = 0;
    return result;
  }
LABEL_62:
  if (!v25) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v36, (int16x8_t *)((char *)v13 + v21 + 192), a2, v34, v25, a7, a8);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(int16x8_t *a1, uint64_t a2, uint64_t a3, signed int a4)
{
  if (a4 > 158)
  {
    if (a4 == 159)
    {
      v32.i64[0] = 0xA000A000A000ALL;
      v32.i64[1] = 0xA000A000A000ALL;
      int8x16_t v33 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
      v32.i64[0] = vpaddq_s32((int32x4_t)v33, (int32x4_t)v33).u64[0];
      v34.i64[0] = v32.u32[0];
      v34.i64[1] = v32.u32[1];
      int64x2_t v35 = v34;
      unint64_t v36 = vaddvq_s64(v34);
      unint64_t v37 = v36;
      int16x8_t v38 = 0uLL;
      if (v36 <= 0x80)
      {
        int16x8_t v74 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int64x2_t v75 = vzip1q_s64((int64x2_t)0, v35);
        unint64_t v76 = 8 * (a3 & 7);
        unint64_t v77 = v36 + v76;
        int64x2_t v78 = vaddq_s64(v75, vdupq_n_s64(v76));
        int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v78)));
        if (v77 > 0x80) {
          int8x16_t v79 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v74[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v74[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v78))), v79);
        }
        unint64_t v80 = v77 & 0x3F;
        int8x16_t v81 = (int64x2_t *)((char *)v74 + 8 * (v77 >> 6));
        int64x2_t v82 = vaddq_s64(v75, vdupq_n_s64(v80));
        unint64_t v83 = v37 + v77;
        int8x16_t v84 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v81, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v82)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v81->i64[0], 0), (uint64x2_t)vnegq_s64(v82)));
        if (v37 + v80 >= 0x81) {
          int8x16_t v84 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v81[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v82)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v81[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v82))), v84);
        }
        int32x2_t v85 = (int32x2_t)vextq_s8(v33, v33, 8uLL).u64[0];
        unint64_t v86 = v83 & 0x3F;
        int16x8_t v87 = (int64x2_t *)((char *)v74 + 8 * (v83 >> 6));
        int64x2_t v88 = vaddq_s64(v75, vdupq_n_s64(v86));
        unint64_t v89 = v37 + v83;
        int8x16_t v90 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v87, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v88)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v87->i64[0], 0), (uint64x2_t)vnegq_s64(v88)));
        if (v37 + v86 >= 0x81) {
          int8x16_t v90 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v87[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v88)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v87[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v88))), v90);
        }
        unint64_t v91 = v89 & 0x3F;
        int16x8_t v92 = (int64x2_t *)((char *)v74 + 8 * (v89 >> 6));
        int64x2_t v93 = vaddq_s64(v75, vdupq_n_s64(v91));
        unint64_t v94 = v37 + v89;
        int8x16_t v95 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v93)));
        if (v37 + v91 >= 0x81) {
          int8x16_t v95 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v93))), v95);
        }
        int32x2_t v96 = vzip1_s32(*(int32x2_t *)v33.i8, v85);
        unint64_t v97 = v94 & 0x3F;
        int16x8_t v98 = (int64x2_t *)((char *)v74 + 8 * (v94 >> 6));
        int64x2_t v99 = vaddq_s64(v75, vdupq_n_s64(v97));
        unint64_t v100 = v37 + v94;
        int8x16_t v101 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v98, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v99)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v98->i64[0], 0), (uint64x2_t)vnegq_s64(v99)));
        if (v37 + v97 > 0x80) {
          int8x16_t v101 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v98[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v99)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v98[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v99))), v101);
        }
        v102.i64[0] = v96.u32[0];
        v102.i64[1] = v96.u32[1];
        int64x2_t v103 = v102;
        unint64_t v104 = v100 & 0x3F;
        int16x8_t v105 = (int64x2_t *)((char *)v74 + 8 * (v100 >> 6));
        int64x2_t v106 = vaddq_s64(v75, vdupq_n_s64(v104));
        unint64_t v107 = v37 + v100;
        int8x16_t v108 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v106)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v106)));
        if (v37 + v104 >= 0x81) {
          int8x16_t v108 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v106)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v106))), v108);
        }
        uint64x2_t v109 = (uint64x2_t)vnegq_s64(v103);
        unint64_t v110 = v107 & 0x3F;
        int16x8_t v111 = (int64x2_t *)((char *)v74 + 8 * (v107 >> 6));
        int64x2_t v112 = vaddq_s64(v75, vdupq_n_s64(v110));
        unint64_t v113 = v37 + v107;
        int8x16_t v114 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v111, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v112)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v111->i64[0], 0), (uint64x2_t)vnegq_s64(v112)));
        if (v37 + v110 >= 0x81) {
          int8x16_t v114 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v111[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v112)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v111[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v112))), v114);
        }
        int64x2_t v115 = (int64x2_t)vshlq_u64((uint64x2_t)v101, v109);
        int64x2_t v116 = (int64x2_t)vshlq_u64((uint64x2_t)v108, v109);
        int64x2_t v117 = (int64x2_t)vshlq_u64((uint64x2_t)v114, v109);
        unint64_t v118 = v113 & 0x3F;
        int16x8_t v119 = (int64x2_t *)((char *)v74 + 8 * (v113 >> 6));
        int8x16_t v120 = (int8x16_t)vaddq_s64(v75, vdupq_n_s64(v118));
        int8x16_t v121 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v120));
        unint64_t v122 = v37 + v113;
        int64x2_t v123 = vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v120);
        int8x16_t v124 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)v123), v121);
        if (v37 + v118 >= 0x81)
        {
          int64x2_t v125 = v119[1];
          int8x16_t v121 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125.i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v120));
          int64x2_t v123 = vdupq_n_s64(0xC0uLL);
          int8x16_t v120 = vorrq_s8(v121, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v125, 1), (uint64x2_t)vsubq_s64(v123, (int64x2_t)v120)));
          int8x16_t v124 = vorrq_s8(v120, v124);
        }
        int64x2_t v126 = (int64x2_t)vshlq_u64((uint64x2_t)v79, v109);
        int64x2_t v127 = (int64x2_t)vshlq_u64((uint64x2_t)v84, v109);
        int64x2_t v128 = (int64x2_t)vshlq_u64((uint64x2_t)v90, v109);
        int64x2_t v129 = (int64x2_t)vshlq_u64((uint64x2_t)v95, v109);
        *(int32x2_t *)v120.i8 = vmovn_s64((int64x2_t)v101);
        *(int32x2_t *)v115.i8 = vmovn_s64(v115);
        *(int32x2_t *)v121.i8 = vmovn_s64((int64x2_t)v108);
        *(int32x2_t *)v116.i8 = vmovn_s64(v116);
        *(int32x2_t *)v123.i8 = vmovn_s64((int64x2_t)v114);
        *(int32x2_t *)v117.i8 = vmovn_s64(v117);
        int64x2_t v130 = (int64x2_t)vshlq_u64((uint64x2_t)v124, v109);
        *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
        *(int32x2_t *)v5.i8 = vmovn_s64(v130);
        unint64_t v131 = v122 & 0x3F;
        int16x8_t v132 = (int64x2_t *)((char *)v74 + 8 * (v122 >> 6));
        int8x16_t v133 = (int8x16_t)vaddq_s64(v75, vdupq_n_s64(v131));
        int8x16_t v134 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v133));
        unint64_t v135 = v37 + v122;
        int8x16_t v136 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v133));
        int8x16_t v137 = vorrq_s8(v136, v134);
        if (v37 + v131 > 0x80)
        {
          int64x2_t v138 = v132[1];
          uint64x2_t v139 = (uint64x2_t)vdupq_lane_s64(v138.i64[0], 0);
          int8x16_t v136 = (int8x16_t)vdupq_laneq_s64(v138, 1);
          int8x16_t v134 = (int8x16_t)vshlq_u64(v139, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v133));
          int8x16_t v133 = vorrq_s8(v134, (int8x16_t)vshlq_u64((uint64x2_t)v136, (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v133)));
          int8x16_t v137 = vorrq_s8(v133, v137);
        }
        *(int32x2_t *)v79.i8 = vmovn_s64((int64x2_t)v79);
        *(int32x2_t *)v133.i8 = vmovn_s64(v126);
        *(int32x2_t *)v84.i8 = vmovn_s64((int64x2_t)v84);
        *(int32x2_t *)v136.i8 = vmovn_s64(v127);
        *(int32x2_t *)v90.i8 = vmovn_s64((int64x2_t)v90);
        *(int32x2_t *)v134.i8 = vmovn_s64(v128);
        *(int32x2_t *)v95.i8 = vmovn_s64((int64x2_t)v95);
        *(int32x2_t *)v129.i8 = vmovn_s64(v129);
        *(int32x2_t *)v127.i8 = vmovn_s64((int64x2_t)v137);
        *(int32x2_t *)v137.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v137, v109));
        int16x8_t v140 = (int64x2_t *)((char *)v74 + 8 * (v135 >> 6));
        int64x2_t v141 = vaddq_s64(v75, vdupq_n_s64(v135 & 0x3F));
        unint64_t v142 = v37 + v135;
        int8x16_t v143 = (int8x16_t)vsubq_s64(vdupq_n_s64(0x40uLL), v141);
        int8x16_t v144 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)v143), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v141)));
        if (v37 + (v135 & 0x3F) >= 0x81)
        {
          int64x2_t v145 = v140[1];
          int8x16_t v143 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v145.i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v141));
          int64x2_t v4 = vdupq_n_s64(0xC0uLL);
          int8x16_t v144 = vorrq_s8(vorrq_s8(v143, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v145, 1), (uint64x2_t)vsubq_s64(v4, v141))), v144);
        }
        int16x8_t v146 = (int16x8_t)vzip1q_s32((int32x4_t)v120, (int32x4_t)v115);
        int16x8_t v147 = (int16x8_t)vzip1q_s32((int32x4_t)v121, (int32x4_t)v116);
        int16x8_t v148 = (int16x8_t)vzip1q_s32((int32x4_t)v123, (int32x4_t)v117);
        int32x4_t v149 = vzip1q_s32((int32x4_t)v124, v5);
        int32x4_t v150 = vzip1q_s32((int32x4_t)v127, (int32x4_t)v137);
        int64x2_t v151 = (int64x2_t)vshlq_u64((uint64x2_t)v144, v109);
        *(int32x2_t *)v123.i8 = vmovn_s64((int64x2_t)v144);
        *(int32x2_t *)v151.i8 = vmovn_s64(v151);
        int32x4_t v152 = vzip1q_s32((int32x4_t)v123, (int32x4_t)v151);
        unint64_t v153 = v37 + v142;
        unint64_t v154 = v142 & 0x3F;
        int64x2_t v155 = vaddq_s64(v75, vdupq_n_s64(v154));
        int16x8_t v156 = (int64x2_t *)((char *)v74 + 8 * (v142 >> 6));
        int64x2_t v157 = vsubq_s64(vdupq_n_s64(0x40uLL), v155);
        int8x16_t v158 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v156, 1), (uint64x2_t)v157);
        int8x16_t v159 = vorrq_s8(v158, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v156->i64[0], 0), (uint64x2_t)vnegq_s64(v155)));
        if (v37 + v154 >= 0x81)
        {
          int64x2_t v160 = v156[1];
          uint64x2_t v161 = (uint64x2_t)vdupq_lane_s64(v160.i64[0], 0);
          int8x16_t v158 = (int8x16_t)vdupq_laneq_s64(v160, 1);
          int64x2_t v157 = vdupq_n_s64(0xC0uLL);
          int8x16_t v159 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64(v161, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v155)), (int8x16_t)vshlq_u64((uint64x2_t)v158, (uint64x2_t)vsubq_s64(v157, v155))), v159);
        }
        int16x8_t v162 = (int16x8_t)vzip1q_s32((int32x4_t)v79, (int32x4_t)v133);
        int16x8_t v163 = (int16x8_t)vzip1q_s32((int32x4_t)v84, (int32x4_t)v136);
        int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v90, (int32x4_t)v134);
        v165.i64[0] = 0x1000100010001;
        v165.i64[1] = 0x1000100010001;
        int16x8_t v166 = (int16x8_t)vzip1q_s32((int32x4_t)v95, (int32x4_t)v129);
        *(int16x4_t *)v84.i8 = vmovn_s32((int32x4_t)v146);
        *(int16x4_t *)v90.i8 = vshrn_n_s32((int32x4_t)v146, 0xAuLL);
        *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v147);
        *(int16x4_t *)v133.i8 = vshrn_n_s32((int32x4_t)v147, 0xAuLL);
        *(int16x4_t *)v136.i8 = vmovn_s32((int32x4_t)v148);
        *(int16x4_t *)v134.i8 = vshrn_n_s32((int32x4_t)v148, 0xAuLL);
        *(int16x4_t *)v129.i8 = vmovn_s32(v149);
        *(int16x4_t *)v148.i8 = vshrn_n_s32(v149, 0xAuLL);
        *(int16x4_t *)v158.i8 = vmovn_s32(v150);
        *(int16x4_t *)v157.i8 = vshrn_n_s32(v150, 0xAuLL);
        *(int16x4_t *)v147.i8 = vmovn_s32(v152);
        *(int16x4_t *)v146.i8 = vshrn_n_s32(v152, 0xAuLL);
        int64x2_t v167 = (int64x2_t)vshlq_u64((uint64x2_t)v159, v109);
        *(int32x2_t *)v149.i8 = vmovn_s64((int64x2_t)v159);
        *(int32x2_t *)v167.i8 = vmovn_s64(v167);
        int32x4_t v168 = vzip1q_s32(v149, (int32x4_t)v167);
        *(int16x4_t *)v143.i8 = vmovn_s32(v168);
        *(int16x4_t *)v4.i8 = vshrn_n_s32(v168, 0xAuLL);
        unint64_t v169 = v153 & 0x3F;
        int16x8_t v170 = (int64x2_t *)((char *)v74 + 8 * (v153 >> 6));
        int8x16_t v171 = (int8x16_t)vaddq_s64(v75, vdupq_n_s64(v169));
        int8x16_t v172 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v170->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v171));
        unint64_t v173 = v37 + v153;
        int64x2_t v174 = vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v171);
        int8x16_t v175 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v170, 1), (uint64x2_t)v174);
        int8x16_t v176 = vorrq_s8(v175, v172);
        if (v37 + v169 >= 0x81)
        {
          int64x2_t v177 = v170[1];
          uint64x2_t v178 = (uint64x2_t)vdupq_lane_s64(v177.i64[0], 0);
          int8x16_t v175 = (int8x16_t)vdupq_laneq_s64(v177, 1);
          int8x16_t v172 = (int8x16_t)vshlq_u64(v178, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v171));
          int64x2_t v174 = vdupq_n_s64(0xC0uLL);
          int8x16_t v171 = vorrq_s8(v172, (int8x16_t)vshlq_u64((uint64x2_t)v175, (uint64x2_t)vsubq_s64(v174, (int64x2_t)v171)));
          int8x16_t v176 = vorrq_s8(v171, v176);
        }
        *(int16x4_t *)v171.i8 = vmovn_s32((int32x4_t)v162);
        *(int16x4_t *)v162.i8 = vshrn_n_s32((int32x4_t)v162, 0xAuLL);
        *(int16x4_t *)v175.i8 = vmovn_s32((int32x4_t)v163);
        *(int16x4_t *)v163.i8 = vshrn_n_s32((int32x4_t)v163, 0xAuLL);
        *(int16x4_t *)v172.i8 = vmovn_s32((int32x4_t)v164);
        *(int16x4_t *)v164.i8 = vshrn_n_s32((int32x4_t)v164, 0xAuLL);
        int16x8_t v179 = vshlq_n_s16(v165, 0xAuLL);
        v180.i64[0] = -1;
        v180.i64[1] = -1;
        *(int16x4_t *)v174.i8 = vmovn_s32((int32x4_t)v166);
        *(int16x4_t *)v166.i8 = vshrn_n_s32((int32x4_t)v166, 0xAuLL);
        int64x2_t v181 = (int64x2_t)vshlq_u64((uint64x2_t)v176, v109);
        *(int32x2_t *)v176.i8 = vmovn_s64((int64x2_t)v176);
        *(int32x2_t *)v181.i8 = vmovn_s64(v181);
        int16x8_t v182 = (int16x8_t)vzip1q_s32((int32x4_t)v176, (int32x4_t)v181);
        *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v182);
        *(int16x4_t *)v182.i8 = vshrn_n_s32((int32x4_t)v182, 0xAuLL);
        unint64_t v183 = v173 & 0x3F;
        int8x16_t v184 = (int64x2_t *)((char *)v74 + 8 * (v173 >> 6));
        int64x2_t v185 = vaddq_s64(v75, vdupq_n_s64(v183));
        unint64_t v186 = v37 + v173;
        int8x16_t v187 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v184, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v185)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v184->i64[0], 0), (uint64x2_t)vnegq_s64(v185)));
        if (v37 + v183 > 0x80)
        {
          int8x16_t v187 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v184[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v185)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v184[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v185))), v187);
          v180.i64[0] = -1;
          v180.i64[1] = -1;
        }
        int8x16_t v188 = (int8x16_t)vaddq_s16(v179, v180);
        int8x16_t v189 = (int8x16_t)vzip1q_s16((int16x8_t)v84, (int16x8_t)v90);
        int8x16_t v190 = (int8x16_t)vzip1q_s16((int16x8_t)v95, (int16x8_t)v133);
        int8x16_t v191 = (int8x16_t)vzip1q_s16((int16x8_t)v136, (int16x8_t)v134);
        int8x16_t v192 = (int8x16_t)vzip1q_s16((int16x8_t)v129, v148);
        int8x16_t v193 = (int8x16_t)vzip1q_s16((int16x8_t)v158, (int16x8_t)v157);
        int8x16_t v194 = (int8x16_t)vzip1q_s16(v147, v146);
        int8x16_t v195 = (int8x16_t)vzip1q_s16((int16x8_t)v143, (int16x8_t)v4);
        int8x16_t v196 = (int8x16_t)vzip1q_s16((int16x8_t)v176, v182);
        int64x2_t v197 = (int64x2_t)vshlq_u64((uint64x2_t)v187, v109);
        *(int32x2_t *)v134.i8 = vmovn_s64((int64x2_t)v187);
        *(int32x2_t *)v197.i8 = vmovn_s64(v197);
        int32x4_t v198 = vzip1q_s32((int32x4_t)v134, (int32x4_t)v197);
        *(int16x4_t *)v143.i8 = vmovn_s32(v198);
        *(int16x4_t *)v4.i8 = vshrn_n_s32(v198, 0xAuLL);
        unint64_t v199 = v37 + v186;
        unint64_t v200 = v186 & 0x3F;
        int64x2_t v201 = vaddq_s64(v75, vdupq_n_s64(v200));
        int16x8_t v202 = (int64x2_t *)((char *)v74 + 8 * (v186 >> 6));
        int8x16_t v203 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v202, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v201)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v202->i64[0], 0), (uint64x2_t)vnegq_s64(v201)));
        if (v37 + v200 >= 0x81) {
          int8x16_t v203 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v202[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v201)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v202[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v201))), v203);
        }
        int8x16_t v204 = (int8x16_t)vzip1q_s16((int16x8_t)v171, v162);
        int8x16_t v205 = (int8x16_t)vzip1q_s16((int16x8_t)v175, v163);
        int8x16_t v206 = (int8x16_t)vzip1q_s16((int16x8_t)v172, v164);
        int8x16_t v207 = (int8x16_t)vzip1q_s16((int16x8_t)v174, v166);
        int16x8_t v208 = (int16x8_t)vandq_s8(v189, v188);
        int16x8_t v209 = (int16x8_t)vandq_s8(v190, v188);
        int16x8_t v210 = (int16x8_t)vandq_s8(v191, v188);
        int16x8_t v211 = (int16x8_t)vandq_s8(v192, v188);
        int16x8_t v212 = (int16x8_t)vandq_s8(v193, v188);
        int16x8_t v213 = (int16x8_t)vandq_s8(v194, v188);
        int16x8_t v214 = (int16x8_t)vandq_s8(v195, v188);
        int16x8_t v215 = (int16x8_t)vandq_s8(v196, v188);
        int8x16_t v216 = (int8x16_t)vzip1q_s16((int16x8_t)v143, (int16x8_t)v4);
        int64x2_t v217 = (int64x2_t)vshlq_u64((uint64x2_t)v203, v109);
        *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v203);
        *(int32x2_t *)v217.i8 = vmovn_s64(v217);
        int16x8_t v218 = (int16x8_t)vzip1q_s32((int32x4_t)v175, (int32x4_t)v217);
        *(int16x4_t *)v175.i8 = vmovn_s32((int32x4_t)v218);
        *(int16x4_t *)v218.i8 = vshrn_n_s32((int32x4_t)v218, 0xAuLL);
        int8x16_t v219 = (int8x16_t)vzip1q_s16((int16x8_t)v175, v218);
        unint64_t v220 = v37 + v199;
        unint64_t v221 = v199 & 0x3F;
        int64x2_t v222 = vaddq_s64(v75, vdupq_n_s64(v221));
        int16x8_t v223 = (int64x2_t *)((char *)v74 + 8 * (v199 >> 6));
        int8x16_t v224 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v223, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v223->i64[0], 0), (uint64x2_t)vnegq_s64(v222)));
        if (v37 + v221 >= 0x81) {
          int8x16_t v224 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v223[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v223[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v222))), v224);
        }
        int16x8_t v225 = (int16x8_t)vandq_s8(v204, v188);
        int16x8_t v226 = (int16x8_t)vandq_s8(v205, v188);
        int16x8_t v227 = (int16x8_t)vandq_s8(v206, v188);
        int16x8_t v228 = (int16x8_t)vandq_s8(v207, v188);
        int16x8_t v49 = vshlq_n_s16(v208, 6uLL);
        int16x8_t v48 = vshlq_n_s16(v209, 6uLL);
        int16x8_t v47 = vshlq_n_s16(v210, 6uLL);
        int16x8_t v46 = vshlq_n_s16(v211, 6uLL);
        int16x8_t v38 = vshlq_n_s16(v212, 6uLL);
        int16x8_t v39 = vshlq_n_s16(v213, 6uLL);
        int16x8_t v40 = vshlq_n_s16(v214, 6uLL);
        int16x8_t v41 = vshlq_n_s16(v215, 6uLL);
        int16x8_t v229 = (int16x8_t)vandq_s8(v216, v188);
        int16x8_t v230 = (int16x8_t)vandq_s8(v219, v188);
        int64x2_t v231 = (int64x2_t)vshlq_u64((uint64x2_t)v224, v109);
        *(int32x2_t *)v211.i8 = vmovn_s64((int64x2_t)v224);
        *(int32x2_t *)v231.i8 = vmovn_s64(v231);
        int16x8_t v232 = (int16x8_t)vzip1q_s32((int32x4_t)v211, (int32x4_t)v231);
        *(int16x4_t *)v211.i8 = vmovn_s32((int32x4_t)v232);
        *(int16x4_t *)v232.i8 = vshrn_n_s32((int32x4_t)v232, 0xAuLL);
        int8x16_t v233 = (int8x16_t)vzip1q_s16(v211, v232);
        int8x16_t v234 = (int64x2_t *)((char *)v74 + 8 * (v220 >> 6));
        int64x2_t v235 = vaddq_s64(v75, vdupq_n_s64(v220 & 0x3F));
        int16x8_t v236 = (int16x8_t)vandq_s8(v233, v188);
        int8x16_t v237 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v234, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v235)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v234->i64[0], 0), (uint64x2_t)vnegq_s64(v235)));
        if (v37 + (v220 & 0x3F) >= 0x81) {
          int8x16_t v237 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v234[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v235)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v234[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v235))), v237);
        }
        int64x2_t v238 = (int64x2_t)vshlq_u64((uint64x2_t)v237, v109);
        *(int32x2_t *)v237.i8 = vmovn_s64((int64x2_t)v237);
        *(int32x2_t *)v238.i8 = vmovn_s64(v238);
        int16x8_t v239 = (int16x8_t)vzip1q_s32((int32x4_t)v237, (int32x4_t)v238);
        *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v239);
        *(int16x4_t *)v239.i8 = vshrn_n_s32((int32x4_t)v239, 0xAuLL);
        int16x8_t v240 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v237, v239), v188);
        int16x8_t v53 = vshlq_n_s16(v229, 6uLL);
        int16x8_t v52 = vshlq_n_s16(v230, 6uLL);
        int16x8_t v51 = vshlq_n_s16(v236, 6uLL);
        int16x8_t v50 = vshlq_n_s16(v240, 6uLL);
        int16x8_t v42 = vshlq_n_s16(v225, 6uLL);
        int16x8_t v43 = vshlq_n_s16(v226, 6uLL);
        int16x8_t v44 = vshlq_n_s16(v227, 6uLL);
        int16x8_t v45 = vshlq_n_s16(v228, 6uLL);
      }
      else
      {
        int16x8_t v39 = 0uLL;
        int16x8_t v40 = 0uLL;
        int16x8_t v41 = 0uLL;
        int16x8_t v42 = 0uLL;
        int16x8_t v43 = 0uLL;
        int16x8_t v44 = 0uLL;
        int16x8_t v45 = 0uLL;
        int16x8_t v46 = 0uLL;
        int16x8_t v47 = 0uLL;
        int16x8_t v48 = 0uLL;
        int16x8_t v49 = 0uLL;
        int16x8_t v50 = 0uLL;
        int16x8_t v51 = 0uLL;
        int16x8_t v52 = 0uLL;
        int16x8_t v53 = 0uLL;
      }
      *a1 = v42;
      a1[1] = v43;
      a1[2] = v44;
      a1[3] = v45;
      int16x8_t v241 = (int16x8_t *)((char *)a1 + a2);
      a1[4] = v38;
      a1[5] = v39;
      a1[6] = v40;
      a1[7] = v41;
      *int16x8_t v241 = v49;
      v241[1] = v48;
      v241[2] = v47;
      v241[3] = v46;
      int16x8_t v242 = (int16x8_t *)((char *)a1 + a2 + 64);
      uint64_t result = 160;
      *int16x8_t v242 = v53;
      v242[1] = v52;
      v242[2] = v51;
      v242[3] = v50;
      return result;
    }
    if (a4 == 255)
    {
      int16x8_t v13 = *(int16x8_t *)(a3 + 16);
      int16x8_t v14 = *(int16x8_t *)(a3 + 32);
      int16x8_t v15 = *(int16x8_t *)(a3 + 48);
      long long v16 = *(_OWORD *)(a3 + 64);
      long long v17 = *(_OWORD *)(a3 + 80);
      long long v18 = *(_OWORD *)(a3 + 96);
      long long v19 = *(_OWORD *)(a3 + 112);
      int16x8_t v20 = *(int16x8_t *)(a3 + 128);
      int16x8_t v21 = *(int16x8_t *)(a3 + 144);
      int16x8_t v22 = *(int16x8_t *)(a3 + 160);
      int16x8_t v23 = *(int16x8_t *)(a3 + 176);
      long long v24 = *(_OWORD *)(a3 + 192);
      long long v25 = *(_OWORD *)(a3 + 208);
      long long v26 = *(_OWORD *)(a3 + 224);
      long long v27 = *(_OWORD *)(a3 + 240);
      *a1 = *(int16x8_t *)a3;
      a1[1] = v13;
      a1[2] = v14;
      a1[3] = v15;
      int v28 = &a1->i8[a2];
      a1[4] = v20;
      a1[5] = v21;
      a1[6] = v22;
      a1[7] = v23;
      *(_OWORD *)int v28 = v16;
      *((_OWORD *)v28 + 1) = v17;
      *((_OWORD *)v28 + 2) = v18;
      *((_OWORD *)v28 + 3) = v19;
      unsigned int v29 = &a1[4].i8[a2];
      uint64_t result = 256;
      *(_OWORD *)unsigned int v29 = v24;
      *((_OWORD *)v29 + 1) = v25;
      *((_OWORD *)v29 + 2) = v26;
      *((_OWORD *)v29 + 3) = v27;
      return result;
    }
  }
  else
  {
    if (!a4)
    {
      uint64_t result = 0;
      int64x2_t v30 = 0uLL;
      a1[6] = 0u;
      a1[7] = 0u;
      a1[4] = 0u;
      a1[5] = 0u;
      a1[2] = 0u;
      a1[3] = 0u;
      *a1 = 0u;
      a1[1] = 0u;
      int16x8_t v31 = (int64x2_t *)&a1->i8[a2];
      v31[6] = 0u;
      v31[7] = 0u;
      v31[4] = 0u;
      v31[5] = 0u;
      v31[2] = 0u;
      v31[3] = 0u;
LABEL_266:
      *int16x8_t v31 = v30;
      v31[1] = v30;
      return result;
    }
    if (a4 == 4)
    {
      uint64x2_t v8 = (uint64x2_t)vld1q_dup_f64((const double *)a3);
      int8x16_t v9 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v8, (uint64x2_t)xmmword_242EA7AE0), (int8x16_t)xmmword_242EA7B10), vandq_s8((int8x16_t)vshlq_u64(v8, (uint64x2_t)xmmword_242EA7AF0), (int8x16_t)xmmword_242EA7B00));
      int64x2_t v10 = vdupq_n_s64(*(void *)&vorr_s8(*(int8x8_t *)v9.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)));
      *a1 = (int16x8_t)v10;
      a1[1] = (int16x8_t)v10;
      a1[2] = (int16x8_t)v10;
      a1[3] = (int16x8_t)v10;
      a1[4] = (int16x8_t)v10;
      a1[5] = (int16x8_t)v10;
      a1[6] = (int16x8_t)v10;
      a1[7] = (int16x8_t)v10;
      uint64_t v11 = (int64x2_t *)&a1->i8[a2];
      *uint64_t v11 = v10;
      v11[1] = v10;
      v11[2] = v10;
      v11[3] = v10;
      v11[4] = v10;
      v11[5] = v10;
      v11[6] = v10;
      v11[7] = v10;
      return 5;
    }
  }
  unsigned __int8 v581 = 0;
  unint64_t v578 = 8 * (a3 & 7);
  unint64_t v579 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v580 = v578 | 0x500;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v599, (uint64_t)v604, (uint64_t)&v598, &v578, a4);
  v55.i64[0] = 0x3000300030003;
  v55.i64[1] = 0x3000300030003;
  int8x16_t v56 = v599;
  int16x8_t v57 = (int16x8_t)vandq_s8(v599, v55);
  int8x16_t v58 = vbicq_s8(v604[0], (int8x16_t)vceqq_s16(v57, (int16x8_t)v55));
  v604[0] = v58;
  int16x8_t v600 = (int16x8_t)v58;
  int16x8_t v601 = (int16x8_t)v58;
  int16x8_t v602 = (int16x8_t)v58;
  int16x8_t v603 = (int16x8_t)v58;
  v59.i64[0] = 0x202020202020202;
  v59.i64[1] = 0x202020202020202;
  int8x16_t v60 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v599.i8, (int16x4_t)0x4000400040004)), v59);
  unint64_t v61 = v578;
  if (vmaxvq_s8(v60) < 1)
  {
    v243.i64[0] = -1;
    v243.i64[1] = -1;
    v244.i64[0] = -1;
    v244.i64[1] = -1;
    v245.i64[0] = -1;
    v245.i64[1] = -1;
    v246.i64[0] = -1;
    v246.i64[1] = -1;
  }
  else
  {
    int8x16_t v62 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v60, v60));
    int8x16_t v63 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v62, (int16x8_t)v62));
    unint64_t v64 = vpaddq_s32((int32x4_t)v63, (int32x4_t)v63).u64[0];
    v65.i64[0] = v64;
    v65.i64[1] = HIDWORD(v64);
    int64x2_t v66 = v65;
    unint64_t v67 = vaddvq_s64(v65);
    unint64_t v68 = v67;
    unint64_t v69 = v578 + v67;
    if (v580) {
      BOOL v70 = v580 >= v69;
    }
    else {
      BOOL v70 = 1;
    }
    int v71 = !v70;
    if (v67 <= 0x80 && v71 == 0)
    {
      v54.i64[0] = 63;
      int8x16_t v247 = (int64x2_t *)(v579 + 8 * (v578 >> 6));
      int64x2_t v248 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v578, v54).i64[0], 0), vzip1q_s64((int64x2_t)0, v66));
      int8x16_t v73 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v247, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v248)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v247->i64[0], 0), (uint64x2_t)vnegq_s64(v248)));
      if ((v578 & 0x3F) + v68 >= 0x81) {
        int8x16_t v73 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v247[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v248)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v247[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v248))), v73);
      }
      unint64_t v578 = v69;
      unint64_t v61 = v69;
    }
    else
    {
      unsigned __int8 v581 = 1;
      int8x16_t v73 = 0uLL;
    }
    int32x2_t v249 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL));
    v250.i64[0] = v249.u32[0];
    v250.i64[1] = v249.u32[1];
    int64x2_t v251 = (int64x2_t)vshlq_u64((uint64x2_t)v73, (uint64x2_t)vnegq_s64(v250));
    *(int32x2_t *)v73.i8 = vmovn_s64((int64x2_t)v73);
    *(int32x2_t *)v251.i8 = vmovn_s64(v251);
    int16x8_t v252 = (int16x8_t)vzip1q_s32((int32x4_t)v73, (int32x4_t)v251);
    int16x8_t v253 = (int16x8_t)vshlq_u32((uint32x4_t)v252, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL)))));
    *(int16x4_t *)v252.i8 = vmovn_s32((int32x4_t)v252);
    *(int16x4_t *)v253.i8 = vmovn_s32((int32x4_t)v253);
    int8x16_t v254 = (int8x16_t)vzip1q_s16(v252, v253);
    int8x16_t v255 = (int8x16_t)vshlq_u16((uint16x8_t)v254, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v60.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL)))));
    *(int8x8_t *)v254.i8 = vmovn_s16((int16x8_t)v254);
    *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
    int8x16_t v256 = vzip1q_s8(v254, v255);
    v255.i64[0] = 0x101010101010101;
    v255.i64[1] = 0x101010101010101;
    int8x16_t v257 = vshlq_s8(v255, v60);
    v255.i64[0] = -1;
    v255.i64[1] = -1;
    int32x4_t v258 = (int32x4_t)vqtbl1q_s8(vandq_s8(v256, vaddq_s8(v257, v255)), (int8x16_t)xmmword_242EA7560);
    *(int32x2_t *)v256.i8 = vdup_lane_s32(*(int32x2_t *)v258.i8, 0);
    *(int32x2_t *)v255.i8 = vdup_lane_s32(*(int32x2_t *)v258.i8, 1);
    int8x8_t v259 = (int8x8_t)vdupq_laneq_s32(v258, 2).u64[0];
    v258.i64[0] = vdupq_laneq_s32(v258, 3).u64[0];
    int16x8_t v600 = vsubw_s8(v600, *(int8x8_t *)v256.i8);
    int16x8_t v601 = vsubw_s8(v601, *(int8x8_t *)v255.i8);
    int16x8_t v602 = vsubw_s8(v602, v259);
    int16x8_t v603 = vsubw_s8(v603, *(int8x8_t *)v258.i8);
    int8x16_t v246 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v256.i8));
    int8x16_t v245 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v255.i8));
    int8x16_t v244 = (int8x16_t)vmovl_s8(vceqz_s8(v259));
    int8x16_t v243 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v258.i8));
  }
  v260.i64[0] = 0x8000800080008;
  v260.i64[1] = 0x8000800080008;
  int8x16_t v261 = 0uLL;
  int8x16_t v262 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v599, v260), (int8x16_t)0, 8uLL), v58);
  int8x16_t v263 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v262, (int16x8_t)v262));
  unint64_t v264 = vpaddq_s32((int32x4_t)v263, (int32x4_t)v263).u64[0];
  v265.i64[0] = v264;
  v265.i64[1] = HIDWORD(v264);
  int64x2_t v266 = v265;
  unint64_t v267 = vaddvq_s64(v265);
  if (v580) {
    BOOL v268 = v580 >= v61 + v267;
  }
  else {
    BOOL v268 = 1;
  }
  int v269 = !v268;
  if (v267 <= 0x80 && v269 == 0)
  {
    int64x2_t v271 = vaddq_s64(vdupq_n_s64(v61 & 0x3F), vzip1q_s64((int64x2_t)0, v266));
    __int32 v272 = (int64x2_t *)(v579 + 8 * (v61 >> 6));
    int8x16_t v261 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v272, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v271)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v272->i64[0], 0), (uint64x2_t)vnegq_s64(v271)));
    if ((v61 & 0x3F) + v267 >= 0x81) {
      int8x16_t v261 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v272[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v271)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v272[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v271))), v261);
    }
    v61 += v267;
  }
  else
  {
    unsigned __int8 v581 = 1;
  }
  int32x2_t v273 = vzip1_s32(*(int32x2_t *)v263.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v263, v263, 8uLL));
  v274.i64[0] = v273.u32[0];
  v274.i64[1] = v273.u32[1];
  int64x2_t v275 = (int64x2_t)vshlq_u64((uint64x2_t)v261, (uint64x2_t)vnegq_s64(v274));
  *(int32x2_t *)v261.i8 = vmovn_s64((int64x2_t)v261);
  *(int32x2_t *)v275.i8 = vmovn_s64(v275);
  int16x8_t v276 = (int16x8_t)vzip1q_s32((int32x4_t)v261, (int32x4_t)v275);
  int16x8_t v277 = (int16x8_t)vshlq_u32((uint32x4_t)v276, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v262.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL)))));
  *(int16x4_t *)v276.i8 = vmovn_s32((int32x4_t)v276);
  *(int16x4_t *)v277.i8 = vmovn_s32((int32x4_t)v277);
  int16x8_t v278 = vzip1q_s16(v276, v277);
  v277.i64[0] = 0xF000F000F000FLL;
  v277.i64[1] = 0xF000F000F000FLL;
  v279.i64[0] = 0x10001000100010;
  v279.i64[1] = 0x10001000100010;
  int8x16_t v280 = (int8x16_t)vshlq_s16(vshlq_s16(v278, vsubq_s16(v279, (int16x8_t)v262)), vaddq_s16((int16x8_t)v262, v277));
  v604[3] = v280;
  int v281 = v599.i8[0] & 3;
  if (v281 == 2)
  {
    unint64_t v282 = v61 + 8;
    if (v580)
    {
      if (v580 < v282)
      {
        unsigned __int8 v581 = 1;
LABEL_83:
        unsigned __int8 v581 = 1;
        goto LABEL_84;
      }
      unint64_t v283 = v61 + 16;
      v61 += 8;
      if (v580 < v283) {
        goto LABEL_83;
      }
      unint64_t v282 = v61;
    }
    unint64_t v61 = v282 + 8;
  }
LABEL_84:
  int8x16_t v284 = 0uLL;
  int8x16_t v285 = vextq_s8((int8x16_t)0, (int8x16_t)v600, 8uLL);
  int8x16_t v286 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v285, (int16x8_t)v285));
  unint64_t v287 = vpaddq_s32((int32x4_t)v286, (int32x4_t)v286).u64[0];
  v288.i64[0] = v287;
  v288.i64[1] = HIDWORD(v287);
  int64x2_t v289 = v288;
  unint64_t v290 = vaddvq_s64(v288);
  unint64_t v291 = v61 + v290;
  if (v580) {
    BOOL v292 = v580 >= v291;
  }
  else {
    BOOL v292 = 1;
  }
  int v293 = !v292;
  if (v290 > 0x80 || v293)
  {
    int v298 = 1;
    unint64_t v296 = v579;
  }
  else
  {
    unint64_t v294 = v61 & 0x3F;
    int64x2_t v295 = vaddq_s64(vdupq_n_s64(v294), vzip1q_s64((int64x2_t)0, v289));
    unint64_t v296 = v579;
    int16x8_t v297 = (int64x2_t *)(v579 + 8 * (v61 >> 6));
    int8x16_t v284 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v297, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v295)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v297->i64[0], 0), (uint64x2_t)vnegq_s64(v295)));
    if (v294 + v290 >= 0x81) {
      int8x16_t v284 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v297[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v295)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v297[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v295))), v284);
    }
    int v298 = v581;
    unint64_t v61 = v291;
  }
  int32x2_t v299 = vzip1_s32(*(int32x2_t *)v286.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v286, v286, 8uLL));
  v300.i64[0] = v299.u32[0];
  v300.i64[1] = v299.u32[1];
  int64x2_t v301 = (int64x2_t)vshlq_u64((uint64x2_t)v284, (uint64x2_t)vnegq_s64(v300));
  *(int32x2_t *)v284.i8 = vmovn_s64((int64x2_t)v284);
  *(int32x2_t *)v301.i8 = vmovn_s64(v301);
  int16x8_t v302 = (int16x8_t)vzip1q_s32((int32x4_t)v284, (int32x4_t)v301);
  int16x8_t v303 = (int16x8_t)vshlq_u32((uint32x4_t)v302, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v285.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v285, v285, 8uLL)))));
  *(int16x4_t *)v302.i8 = vmovn_s32((int32x4_t)v302);
  *(int16x4_t *)v303.i8 = vmovn_s32((int32x4_t)v303);
  v304.i64[0] = 0xF000F000F000FLL;
  v304.i64[1] = 0xF000F000F000FLL;
  v305.i64[0] = 0x10001000100010;
  v305.i64[1] = 0x10001000100010;
  int16x8_t v306 = vshlq_s16(vshlq_s16(vzip1q_s16(v302, v303), vsubq_s16(v305, (int16x8_t)v285)), vaddq_s16((int16x8_t)v285, v304));
  int16x8_t v582 = v306;
  int8x16_t v307 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v600, v600));
  v302.i64[0] = vpaddq_s32((int32x4_t)v307, (int32x4_t)v307).u64[0];
  v300.i64[0] = v302.u32[0];
  v300.i64[1] = v302.u32[1];
  int64x2_t v308 = v300;
  unint64_t v309 = vaddvq_s64(v300);
  unint64_t v310 = v61 + v309;
  if (v580) {
    BOOL v311 = v580 >= v310;
  }
  else {
    BOOL v311 = 1;
  }
  char v312 = !v311;
  int8x16_t v313 = 0uLL;
  if (v309 > 0x80 || (v312 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v310 = v61;
    int8x16_t v317 = 0uLL;
  }
  else
  {
    unint64_t v314 = v61 & 0x3F;
    int64x2_t v315 = vaddq_s64(vdupq_n_s64(v314), vzip1q_s64((int64x2_t)0, v308));
    int64x2_t v316 = (int64x2_t *)(v296 + 8 * (v61 >> 6));
    int8x16_t v317 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v316, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v315)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v316->i64[0], 0), (uint64x2_t)vnegq_s64(v315)));
    if (v314 + v309 >= 0x81) {
      int8x16_t v317 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v316[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v315)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v316[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v315))), v317);
    }
  }
  int32x2_t v318 = vzip1_s32(*(int32x2_t *)v307.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v307, v307, 8uLL));
  v319.i64[0] = v318.u32[0];
  v319.i64[1] = v318.u32[1];
  uint64x2_t v320 = (uint64x2_t)vnegq_s64(v319);
  int64x2_t v321 = (int64x2_t)vshlq_u64((uint64x2_t)v317, v320);
  *(int32x2_t *)v317.i8 = vmovn_s64((int64x2_t)v317);
  *(int32x2_t *)v321.i8 = vmovn_s64(v321);
  int16x8_t v322 = (int16x8_t)vzip1q_s32((int32x4_t)v317, (int32x4_t)v321);
  uint32x4_t v323 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v600.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v600, (int8x16_t)v600, 8uLL))));
  int16x8_t v324 = (int16x8_t)vshlq_u32((uint32x4_t)v322, v323);
  *(int16x4_t *)v322.i8 = vmovn_s32((int32x4_t)v322);
  *(int16x4_t *)v324.i8 = vmovn_s32((int32x4_t)v324);
  int16x8_t v325 = vaddq_s16(v600, v304);
  int16x8_t v326 = vsubq_s16(v305, v600);
  int16x8_t v327 = vshlq_s16(vshlq_s16(vzip1q_s16(v322, v324), v326), v325);
  int16x8_t v583 = v327;
  unint64_t v328 = v310 + v309;
  if (v580) {
    BOOL v329 = v580 >= v328;
  }
  else {
    BOOL v329 = 1;
  }
  char v330 = !v329;
  if (v309 > 0x80 || (v330 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v328 = v310;
  }
  else
  {
    unint64_t v331 = v310 & 0x3F;
    int64x2_t v332 = vaddq_s64(vdupq_n_s64(v331), vzip1q_s64((int64x2_t)0, v308));
    int64x2_t v333 = (int64x2_t *)(v296 + 8 * (v310 >> 6));
    int8x16_t v313 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v333, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v332)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v333->i64[0], 0), (uint64x2_t)vnegq_s64(v332)));
    if (v331 + v309 >= 0x81) {
      int8x16_t v313 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v333[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v332)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v333[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v332))), v313);
    }
  }
  int64x2_t v334 = (int64x2_t)vshlq_u64((uint64x2_t)v313, v320);
  *(int32x2_t *)v313.i8 = vmovn_s64((int64x2_t)v313);
  *(int32x2_t *)v334.i8 = vmovn_s64(v334);
  int16x8_t v335 = (int16x8_t)vzip1q_s32((int32x4_t)v313, (int32x4_t)v334);
  int16x8_t v336 = (int16x8_t)vshlq_u32((uint32x4_t)v335, v323);
  *(int16x4_t *)v335.i8 = vmovn_s32((int32x4_t)v335);
  *(int16x4_t *)v336.i8 = vmovn_s32((int32x4_t)v336);
  int16x8_t v337 = vshlq_s16(vshlq_s16(vzip1q_s16(v335, v336), v326), v325);
  int16x8_t v584 = v337;
  unint64_t v338 = v328 + v309;
  if (v580) {
    BOOL v339 = v580 >= v338;
  }
  else {
    BOOL v339 = 1;
  }
  char v340 = !v339;
  int8x16_t v341 = 0uLL;
  if (v309 > 0x80 || (v340 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v338 = v328;
    int8x16_t v345 = 0uLL;
  }
  else
  {
    unint64_t v342 = v328 & 0x3F;
    int64x2_t v343 = vaddq_s64(vdupq_n_s64(v342), vzip1q_s64((int64x2_t)0, v308));
    int32x4_t v344 = (int64x2_t *)(v296 + 8 * (v328 >> 6));
    int8x16_t v345 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v344, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v343)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v344->i64[0], 0), (uint64x2_t)vnegq_s64(v343)));
    if (v342 + v309 >= 0x81) {
      int8x16_t v345 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v344[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v343)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v344[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v343))), v345);
    }
  }
  int64x2_t v346 = (int64x2_t)vshlq_u64((uint64x2_t)v345, v320);
  *(int32x2_t *)v345.i8 = vmovn_s64((int64x2_t)v345);
  *(int32x2_t *)v346.i8 = vmovn_s64(v346);
  int16x8_t v347 = (int16x8_t)vzip1q_s32((int32x4_t)v345, (int32x4_t)v346);
  int16x8_t v348 = (int16x8_t)vshlq_u32((uint32x4_t)v347, v323);
  *(int16x4_t *)v347.i8 = vmovn_s32((int32x4_t)v347);
  *(int16x4_t *)v348.i8 = vmovn_s32((int32x4_t)v348);
  int16x8_t v349 = vshlq_s16(vshlq_s16(vzip1q_s16(v347, v348), v326), v325);
  int16x8_t v585 = v349;
  int8x16_t v350 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v601, v601));
  unint64_t v351 = vpaddq_s32((int32x4_t)v350, (int32x4_t)v350).u64[0];
  v352.i64[0] = v351;
  v352.i64[1] = HIDWORD(v351);
  int64x2_t v353 = v352;
  unint64_t v354 = vaddvq_s64(v352);
  unint64_t v355 = v354;
  unint64_t v356 = v338 + v354;
  if (v580) {
    BOOL v357 = v580 >= v356;
  }
  else {
    BOOL v357 = 1;
  }
  char v358 = !v357;
  if (v354 > 0x80 || (v358 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v356 = v338;
  }
  else
  {
    unint64_t v359 = v338 & 0x3F;
    int64x2_t v360 = vaddq_s64(vdupq_n_s64(v359), vzip1q_s64((int64x2_t)0, v353));
    int8x16_t v361 = (int64x2_t *)(v296 + 8 * (v338 >> 6));
    int8x16_t v341 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v361, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v360)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v361->i64[0], 0), (uint64x2_t)vnegq_s64(v360)));
    if (v359 + v355 >= 0x81) {
      int8x16_t v341 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v361[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v360)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v361[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v360))), v341);
    }
  }
  int32x4_t v362 = (int32x4_t)vextq_s8(v350, v350, 8uLL);
  int32x2_t v363 = vzip1_s32(*(int32x2_t *)v350.i8, *(int32x2_t *)v362.i8);
  v364.i64[0] = v363.u32[0];
  v364.i64[1] = v363.u32[1];
  uint64x2_t v365 = (uint64x2_t)vnegq_s64(v364);
  int64x2_t v366 = (int64x2_t)vshlq_u64((uint64x2_t)v341, v365);
  *(int32x2_t *)v362.i8 = vmovn_s64((int64x2_t)v341);
  *(int32x2_t *)v366.i8 = vmovn_s64(v366);
  int16x8_t v367 = (int16x8_t)vzip1q_s32(v362, (int32x4_t)v366);
  uint32x4_t v368 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v601.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v601, (int8x16_t)v601, 8uLL))));
  int16x8_t v369 = (int16x8_t)vshlq_u32((uint32x4_t)v367, v368);
  *(int16x4_t *)v367.i8 = vmovn_s32((int32x4_t)v367);
  *(int16x4_t *)v369.i8 = vmovn_s32((int32x4_t)v369);
  int16x8_t v370 = vzip1q_s16(v367, v369);
  v369.i64[0] = 0xF000F000F000FLL;
  v369.i64[1] = 0xF000F000F000FLL;
  int16x8_t v371 = vaddq_s16(v601, v369);
  v369.i64[0] = 0x10001000100010;
  v369.i64[1] = 0x10001000100010;
  int16x8_t v372 = vsubq_s16(v369, v601);
  int16x8_t v373 = vshlq_s16(vshlq_s16(v370, v372), v371);
  int16x8_t v586 = v373;
  unint64_t v374 = v356 + v355;
  if (v580) {
    BOOL v375 = v580 >= v374;
  }
  else {
    BOOL v375 = 1;
  }
  char v376 = !v375;
  int8x16_t v377 = 0uLL;
  if (v355 > 0x80 || (v376 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v374 = v356;
    int8x16_t v381 = 0uLL;
  }
  else
  {
    unint64_t v378 = v356 & 0x3F;
    int64x2_t v379 = vaddq_s64(vdupq_n_s64(v378), vzip1q_s64((int64x2_t)0, v353));
    int32x4_t v380 = (int64x2_t *)(v296 + 8 * (v356 >> 6));
    int8x16_t v381 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v380, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v379)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v380->i64[0], 0), (uint64x2_t)vnegq_s64(v379)));
    if (v378 + v355 >= 0x81) {
      int8x16_t v381 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v380[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v379)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v380[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v379))), v381);
    }
  }
  int64x2_t v382 = (int64x2_t)vshlq_u64((uint64x2_t)v381, v365);
  *(int32x2_t *)v381.i8 = vmovn_s64((int64x2_t)v381);
  *(int32x2_t *)v382.i8 = vmovn_s64(v382);
  int16x8_t v383 = (int16x8_t)vzip1q_s32((int32x4_t)v381, (int32x4_t)v382);
  int16x8_t v384 = (int16x8_t)vshlq_u32((uint32x4_t)v383, v368);
  *(int16x4_t *)v383.i8 = vmovn_s32((int32x4_t)v383);
  *(int16x4_t *)v384.i8 = vmovn_s32((int32x4_t)v384);
  int16x8_t v385 = vshlq_s16(vshlq_s16(vzip1q_s16(v383, v384), v372), v371);
  int16x8_t v587 = v385;
  unint64_t v386 = v374 + v355;
  if (v580) {
    BOOL v387 = v580 >= v386;
  }
  else {
    BOOL v387 = 1;
  }
  char v388 = !v387;
  if (v355 > 0x80 || (v388 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v386 = v374;
  }
  else
  {
    unint64_t v389 = v374 & 0x3F;
    int64x2_t v390 = vaddq_s64(vdupq_n_s64(v389), vzip1q_s64((int64x2_t)0, v353));
    uint64_t v391 = (int64x2_t *)(v296 + 8 * (v374 >> 6));
    int8x16_t v377 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v391, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v390)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v391->i64[0], 0), (uint64x2_t)vnegq_s64(v390)));
    if (v389 + v355 >= 0x81) {
      int8x16_t v377 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v391[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v390)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v391[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v390))), v377);
    }
  }
  int64x2_t v392 = (int64x2_t)vshlq_u64((uint64x2_t)v377, v365);
  *(int32x2_t *)v377.i8 = vmovn_s64((int64x2_t)v377);
  *(int32x2_t *)v392.i8 = vmovn_s64(v392);
  int16x8_t v393 = (int16x8_t)vzip1q_s32((int32x4_t)v377, (int32x4_t)v392);
  int16x8_t v394 = (int16x8_t)vshlq_u32((uint32x4_t)v393, v368);
  *(int16x4_t *)v393.i8 = vmovn_s32((int32x4_t)v393);
  *(int16x4_t *)v394.i8 = vmovn_s32((int32x4_t)v394);
  int16x8_t v395 = vshlq_s16(vshlq_s16(vzip1q_s16(v393, v394), v372), v371);
  int16x8_t v588 = v395;
  unint64_t v396 = v386 + v355;
  if (v580) {
    BOOL v397 = v580 >= v396;
  }
  else {
    BOOL v397 = 1;
  }
  char v398 = !v397;
  int8x16_t v399 = 0uLL;
  if (v355 > 0x80 || (v398 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v396 = v386;
    int8x16_t v403 = 0uLL;
  }
  else
  {
    unint64_t v400 = v386 & 0x3F;
    int64x2_t v401 = vaddq_s64(vdupq_n_s64(v400), vzip1q_s64((int64x2_t)0, v353));
    int64x2_t v402 = (int64x2_t *)(v296 + 8 * (v386 >> 6));
    int8x16_t v403 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v402, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v401)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v402->i64[0], 0), (uint64x2_t)vnegq_s64(v401)));
    if (v400 + v355 >= 0x81) {
      int8x16_t v403 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v402[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v401)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v402[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v401))), v403);
    }
  }
  int64x2_t v404 = (int64x2_t)vshlq_u64((uint64x2_t)v403, v365);
  *(int32x2_t *)v403.i8 = vmovn_s64((int64x2_t)v403);
  *(int32x2_t *)v404.i8 = vmovn_s64(v404);
  int16x8_t v405 = (int16x8_t)vzip1q_s32((int32x4_t)v403, (int32x4_t)v404);
  int16x8_t v406 = (int16x8_t)vshlq_u32((uint32x4_t)v405, v368);
  *(int16x4_t *)v405.i8 = vmovn_s32((int32x4_t)v405);
  *(int16x4_t *)v406.i8 = vmovn_s32((int32x4_t)v406);
  int16x8_t v407 = vshlq_s16(vshlq_s16(vzip1q_s16(v405, v406), v372), v371);
  int16x8_t v589 = v407;
  int8x16_t v408 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v602, v602));
  unint64_t v409 = vpaddq_s32((int32x4_t)v408, (int32x4_t)v408).u64[0];
  v410.i64[0] = v409;
  v410.i64[1] = HIDWORD(v409);
  int64x2_t v411 = v410;
  unint64_t v412 = vaddvq_s64(v410);
  unint64_t v413 = v412;
  unint64_t v414 = v396 + v412;
  if (v580) {
    BOOL v415 = v580 >= v414;
  }
  else {
    BOOL v415 = 1;
  }
  char v416 = !v415;
  if (v412 > 0x80 || (v416 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v414 = v396;
  }
  else
  {
    unint64_t v417 = v396 & 0x3F;
    int64x2_t v418 = vaddq_s64(vdupq_n_s64(v417), vzip1q_s64((int64x2_t)0, v411));
    int64x2_t v419 = (int64x2_t *)(v296 + 8 * (v396 >> 6));
    int8x16_t v399 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v419, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v418)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v419->i64[0], 0), (uint64x2_t)vnegq_s64(v418)));
    if (v417 + v413 >= 0x81) {
      int8x16_t v399 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v419[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v418)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v419[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v418))), v399);
    }
  }
  int32x4_t v420 = (int32x4_t)vextq_s8(v408, v408, 8uLL);
  int32x2_t v421 = vzip1_s32(*(int32x2_t *)v408.i8, *(int32x2_t *)v420.i8);
  v422.i64[0] = v421.u32[0];
  v422.i64[1] = v421.u32[1];
  uint64x2_t v423 = (uint64x2_t)vnegq_s64(v422);
  int64x2_t v424 = (int64x2_t)vshlq_u64((uint64x2_t)v399, v423);
  *(int32x2_t *)v420.i8 = vmovn_s64((int64x2_t)v399);
  *(int32x2_t *)v424.i8 = vmovn_s64(v424);
  int16x8_t v425 = (int16x8_t)vzip1q_s32(v420, (int32x4_t)v424);
  uint32x4_t v426 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v602.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v602, (int8x16_t)v602, 8uLL))));
  int16x8_t v427 = (int16x8_t)vshlq_u32((uint32x4_t)v425, v426);
  *(int16x4_t *)v425.i8 = vmovn_s32((int32x4_t)v425);
  *(int16x4_t *)v427.i8 = vmovn_s32((int32x4_t)v427);
  int16x8_t v428 = vzip1q_s16(v425, v427);
  v427.i64[0] = 0xF000F000F000FLL;
  v427.i64[1] = 0xF000F000F000FLL;
  int16x8_t v429 = vaddq_s16(v602, v427);
  v427.i64[0] = 0x10001000100010;
  v427.i64[1] = 0x10001000100010;
  int16x8_t v430 = vsubq_s16(v427, v602);
  int16x8_t v431 = vshlq_s16(vshlq_s16(v428, v430), v429);
  int16x8_t v590 = v431;
  unint64_t v432 = v414 + v413;
  if (v580) {
    BOOL v433 = v580 >= v432;
  }
  else {
    BOOL v433 = 1;
  }
  char v434 = !v433;
  int8x16_t v435 = 0uLL;
  if (v413 > 0x80 || (v434 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v432 = v414;
    int8x16_t v439 = 0uLL;
  }
  else
  {
    unint64_t v436 = v414 & 0x3F;
    int64x2_t v437 = vaddq_s64(vdupq_n_s64(v436), vzip1q_s64((int64x2_t)0, v411));
    int8x16_t v438 = (int64x2_t *)(v296 + 8 * (v414 >> 6));
    int8x16_t v439 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v438, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v437)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v438->i64[0], 0), (uint64x2_t)vnegq_s64(v437)));
    if (v436 + v413 >= 0x81) {
      int8x16_t v439 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v438[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v437)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v438[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v437))), v439);
    }
  }
  int64x2_t v440 = (int64x2_t)vshlq_u64((uint64x2_t)v439, v423);
  *(int32x2_t *)v439.i8 = vmovn_s64((int64x2_t)v439);
  *(int32x2_t *)v440.i8 = vmovn_s64(v440);
  int16x8_t v441 = (int16x8_t)vzip1q_s32((int32x4_t)v439, (int32x4_t)v440);
  int16x8_t v442 = (int16x8_t)vshlq_u32((uint32x4_t)v441, v426);
  *(int16x4_t *)v441.i8 = vmovn_s32((int32x4_t)v441);
  *(int16x4_t *)v442.i8 = vmovn_s32((int32x4_t)v442);
  int16x8_t v443 = vshlq_s16(vshlq_s16(vzip1q_s16(v441, v442), v430), v429);
  int16x8_t v591 = v443;
  unint64_t v444 = v432 + v413;
  if (v580) {
    BOOL v445 = v580 >= v444;
  }
  else {
    BOOL v445 = 1;
  }
  char v446 = !v445;
  if (v413 > 0x80 || (v446 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v444 = v432;
  }
  else
  {
    unint64_t v447 = v432 & 0x3F;
    int64x2_t v448 = vaddq_s64(vdupq_n_s64(v447), vzip1q_s64((int64x2_t)0, v411));
    long long v449 = (int64x2_t *)(v296 + 8 * (v432 >> 6));
    int8x16_t v435 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v449, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v448)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v449->i64[0], 0), (uint64x2_t)vnegq_s64(v448)));
    if (v447 + v413 >= 0x81) {
      int8x16_t v435 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v449[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v448)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v449[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v448))), v435);
    }
  }
  int64x2_t v450 = (int64x2_t)vshlq_u64((uint64x2_t)v435, v423);
  *(int32x2_t *)v435.i8 = vmovn_s64((int64x2_t)v435);
  *(int32x2_t *)v450.i8 = vmovn_s64(v450);
  int16x8_t v451 = (int16x8_t)vzip1q_s32((int32x4_t)v435, (int32x4_t)v450);
  int16x8_t v452 = (int16x8_t)vshlq_u32((uint32x4_t)v451, v426);
  *(int16x4_t *)v451.i8 = vmovn_s32((int32x4_t)v451);
  *(int16x4_t *)v452.i8 = vmovn_s32((int32x4_t)v452);
  int16x8_t v453 = vshlq_s16(vshlq_s16(vzip1q_s16(v451, v452), v430), v429);
  int16x8_t v592 = v453;
  unint64_t v454 = v444 + v413;
  if (v580) {
    BOOL v455 = v580 >= v454;
  }
  else {
    BOOL v455 = 1;
  }
  char v456 = !v455;
  int8x16_t v457 = 0uLL;
  if (v413 > 0x80 || (v456 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v454 = v444;
    int8x16_t v461 = 0uLL;
  }
  else
  {
    unint64_t v458 = v444 & 0x3F;
    int64x2_t v459 = vaddq_s64(vdupq_n_s64(v458), vzip1q_s64((int64x2_t)0, v411));
    long long v460 = (int64x2_t *)(v296 + 8 * (v444 >> 6));
    int8x16_t v461 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v460, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v459)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v460->i64[0], 0), (uint64x2_t)vnegq_s64(v459)));
    if (v458 + v413 >= 0x81) {
      int8x16_t v461 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v460[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v459)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v460[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v459))), v461);
    }
  }
  int64x2_t v462 = (int64x2_t)vshlq_u64((uint64x2_t)v461, v423);
  *(int32x2_t *)v461.i8 = vmovn_s64((int64x2_t)v461);
  *(int32x2_t *)v462.i8 = vmovn_s64(v462);
  int16x8_t v463 = (int16x8_t)vzip1q_s32((int32x4_t)v461, (int32x4_t)v462);
  int16x8_t v464 = (int16x8_t)vshlq_u32((uint32x4_t)v463, v426);
  *(int16x4_t *)v463.i8 = vmovn_s32((int32x4_t)v463);
  *(int16x4_t *)v464.i8 = vmovn_s32((int32x4_t)v464);
  int16x8_t v465 = vshlq_s16(vshlq_s16(vzip1q_s16(v463, v464), v430), v429);
  int16x8_t v593 = v465;
  int8x16_t v466 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v603, v603));
  unint64_t v467 = vpaddq_s32((int32x4_t)v466, (int32x4_t)v466).u64[0];
  v468.i64[0] = v467;
  v468.i64[1] = HIDWORD(v467);
  int64x2_t v469 = v468;
  unint64_t v470 = vaddvq_s64(v468);
  unint64_t v471 = v470;
  unint64_t v472 = v454 + v470;
  if (v580) {
    BOOL v473 = v580 >= v472;
  }
  else {
    BOOL v473 = 1;
  }
  char v474 = !v473;
  if (v470 > 0x80 || (v474 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v472 = v454;
  }
  else
  {
    unint64_t v475 = v454 & 0x3F;
    int64x2_t v476 = vaddq_s64(vdupq_n_s64(v475), vzip1q_s64((int64x2_t)0, v469));
    int8x16_t v477 = (int64x2_t *)(v296 + 8 * (v454 >> 6));
    int8x16_t v457 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v477, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v476)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v477->i64[0], 0), (uint64x2_t)vnegq_s64(v476)));
    if (v475 + v471 >= 0x81) {
      int8x16_t v457 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v477[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v476)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v477[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v476))), v457);
    }
  }
  int32x2_t v478 = vzip1_s32(*(int32x2_t *)v466.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v466, v466, 8uLL));
  v479.i64[0] = v478.u32[0];
  v479.i64[1] = v478.u32[1];
  int32x4_t v480 = (int32x4_t)vnegq_s64(v479);
  int64x2_t v481 = (int64x2_t)vshlq_u64((uint64x2_t)v457, (uint64x2_t)v480);
  *(int32x2_t *)v457.i8 = vmovn_s64((int64x2_t)v457);
  *(int32x2_t *)v481.i8 = vmovn_s64(v481);
  int16x8_t v482 = (int16x8_t)vzip1q_s32((int32x4_t)v457, (int32x4_t)v481);
  uint32x4_t v483 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v603.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v603, (int8x16_t)v603, 8uLL))));
  int16x8_t v484 = (int16x8_t)vshlq_u32((uint32x4_t)v482, v483);
  *(int16x4_t *)v482.i8 = vmovn_s32((int32x4_t)v482);
  *(int16x4_t *)v484.i8 = vmovn_s32((int32x4_t)v484);
  int16x8_t v485 = vzip1q_s16(v482, v484);
  v482.i64[0] = 0xF000F000F000FLL;
  v482.i64[1] = 0xF000F000F000FLL;
  int16x8_t v486 = vaddq_s16(v603, v482);
  v484.i64[0] = 0x10001000100010;
  v484.i64[1] = 0x10001000100010;
  int16x8_t v487 = vsubq_s16(v484, v603);
  int16x8_t v488 = vshlq_s16(vshlq_s16(v485, v487), v486);
  int8x16_t v594 = (int8x16_t)v488;
  unint64_t v489 = v472 + v471;
  if (v580) {
    BOOL v490 = v580 >= v489;
  }
  else {
    BOOL v490 = 1;
  }
  char v491 = !v490;
  int8x16_t v492 = 0uLL;
  if (v471 > 0x80 || (v491 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v489 = v472;
    int8x16_t v496 = 0uLL;
  }
  else
  {
    unint64_t v493 = v472 & 0x3F;
    int64x2_t v494 = vaddq_s64(vdupq_n_s64(v493), vzip1q_s64((int64x2_t)0, v469));
    int16x8_t v495 = (int64x2_t *)(v296 + 8 * (v472 >> 6));
    int8x16_t v496 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v495, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v494)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v495->i64[0], 0), (uint64x2_t)vnegq_s64(v494)));
    if (v493 + v471 >= 0x81) {
      int8x16_t v496 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v495[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v494)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v495[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v494))), v496);
    }
  }
  int64x2_t v497 = (int64x2_t)vshlq_u64((uint64x2_t)v496, (uint64x2_t)v480);
  *(int32x2_t *)v496.i8 = vmovn_s64((int64x2_t)v496);
  *(int32x2_t *)v497.i8 = vmovn_s64(v497);
  int16x8_t v498 = (int16x8_t)vzip1q_s32((int32x4_t)v496, (int32x4_t)v497);
  int16x8_t v499 = (int16x8_t)vshlq_u32((uint32x4_t)v498, v483);
  *(int16x4_t *)v498.i8 = vmovn_s32((int32x4_t)v498);
  *(int16x4_t *)v499.i8 = vmovn_s32((int32x4_t)v499);
  int16x8_t v500 = vshlq_s16(vshlq_s16(vzip1q_s16(v498, v499), v487), v486);
  int8x16_t v595 = (int8x16_t)v500;
  unint64_t v501 = v489 + v471;
  if (v580) {
    BOOL v502 = v580 >= v501;
  }
  else {
    BOOL v502 = 1;
  }
  char v503 = !v502;
  if (v471 > 0x80 || (v503 & 1) != 0)
  {
    int v298 = 1;
    unint64_t v501 = v489;
  }
  else
  {
    unint64_t v504 = v489 & 0x3F;
    int64x2_t v505 = vaddq_s64(vdupq_n_s64(v504), vzip1q_s64((int64x2_t)0, v469));
    int16x8_t v506 = (int64x2_t *)(v296 + 8 * (v489 >> 6));
    int8x16_t v492 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v506, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v505)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v506->i64[0], 0), (uint64x2_t)vnegq_s64(v505)));
    if (v504 + v471 >= 0x81) {
      int8x16_t v492 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v506[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v505)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v506[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v505))), v492);
    }
  }
  int64x2_t v507 = (int64x2_t)vshlq_u64((uint64x2_t)v492, (uint64x2_t)v480);
  *(int32x2_t *)v492.i8 = vmovn_s64((int64x2_t)v492);
  *(int32x2_t *)v507.i8 = vmovn_s64(v507);
  int16x8_t v508 = (int16x8_t)vzip1q_s32((int32x4_t)v492, (int32x4_t)v507);
  int16x8_t v509 = (int16x8_t)vshlq_u32((uint32x4_t)v508, v483);
  *(int16x4_t *)v508.i8 = vmovn_s32((int32x4_t)v508);
  *(int16x4_t *)v509.i8 = vmovn_s32((int32x4_t)v509);
  int16x8_t v510 = vshlq_s16(vshlq_s16(vzip1q_s16(v508, v509), v487), v486);
  int8x16_t v596 = (int8x16_t)v510;
  unint64_t v511 = v501 + v471;
  if (v580) {
    BOOL v512 = v580 >= v511;
  }
  else {
    BOOL v512 = 1;
  }
  char v513 = !v512;
  if (v471 > 0x80 || (v513 & 1) != 0) {
    goto LABEL_265;
  }
  int64x2_t v514 = vaddq_s64(vdupq_n_s64(v501 & 0x3F), vzip1q_s64((int64x2_t)0, v469));
  int16x8_t v515 = (int64x2_t *)(v296 + 8 * (v501 >> 6));
  int8x16_t v516 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v515, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v514)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v515->i64[0], 0), (uint64x2_t)vnegq_s64(v514)));
  if ((v501 & 0x3F) + v471 >= 0x81) {
    int8x16_t v516 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v515[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v514)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v515[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v514))), v516);
  }
  if (v298 || v580 + 8 * result - v511 - 1280 >= 9 || v281 == 2)
  {
LABEL_265:
    uint64_t result = 0;
    int64x2_t v30 = vdupq_n_s64(0xFFFFF003FFuLL);
    *a1 = (int16x8_t)v30;
    a1[1] = (int16x8_t)v30;
    int16x8_t v31 = (int64x2_t *)&a1->i8[a2];
    goto LABEL_266;
  }
  int64x2_t v517 = (int64x2_t)vshlq_u64((uint64x2_t)v516, (uint64x2_t)v480);
  *(int32x2_t *)v480.i8 = vmovn_s64((int64x2_t)v516);
  *(int32x2_t *)v517.i8 = vmovn_s64(v517);
  int16x8_t v518 = (int16x8_t)vzip1q_s32(v480, (int32x4_t)v517);
  int16x8_t v519 = (int16x8_t)vshlq_u32((uint32x4_t)v518, v483);
  *(int16x4_t *)v518.i8 = vmovn_s32((int32x4_t)v518);
  *(int16x4_t *)v519.i8 = vmovn_s32((int32x4_t)v519);
  int16x8_t v520 = vshlq_s16(vshlq_s16(vzip1q_s16(v518, v519), v487), v486);
  int16x8_t v521 = vaddq_s16((int16x8_t)vandq_s8(v280, v246), v306);
  int8x16_t v522 = (int8x16_t)vdupq_lane_s64(v280.i64[0], 0);
  int16x8_t v523 = (int16x8_t)vandq_s8(v246, v522);
  int16x8_t v524 = vsubq_s16(v327, v523);
  int16x8_t v525 = vsubq_s16(v337, v523);
  int16x8_t v526 = (int16x8_t)vandq_s8(v245, v522);
  int16x8_t v527 = vsubq_s16(v373, v526);
  int16x8_t v528 = vsubq_s16(v385, v526);
  int8x16_t v529 = (int8x16_t)vsubq_s16(v349, v523);
  int8x16_t v530 = (int8x16_t)vsubq_s16(v521, v523);
  int16x8_t v531 = vsubq_s16(v395, v526);
  int16x8_t v532 = vsubq_s16(v407, v526);
  int16x8_t v533 = (int16x8_t)vandq_s8(v244, v522);
  int16x8_t v534 = vsubq_s16(v431, v533);
  int16x8_t v535 = vsubq_s16(v443, v533);
  int16x8_t v536 = vsubq_s16(v453, v533);
  int16x8_t v537 = vsubq_s16(v465, v533);
  int16x8_t v538 = (int16x8_t)vandq_s8(v243, v522);
  int16x8_t v539 = vsubq_s16(v488, v538);
  int16x8_t v582 = v521;
  int16x8_t v540 = vsubq_s16(v500, v538);
  int16x8_t v541 = vsubq_s16(v510, v538);
  int8x16_t v594 = (int8x16_t)v539;
  int8x16_t v595 = (int8x16_t)v540;
  int16x8_t v542 = vsubq_s16(v520, v538);
  int8x16_t v596 = (int8x16_t)v541;
  int16x8_t v597 = v542;
  v543.i64[0] = 0x1000100010001;
  v543.i64[1] = 0x1000100010001;
  if (vaddvq_s16(vceqq_s16(v57, (int16x8_t)v543)))
  {
    int8x16_t v544 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v599, v543));
    v545.i64[1] = v530.i64[1];
    v545.i64[0] = v529.i64[1];
    v546.i64[0] = v529.i64[0];
    v546.i64[1] = v530.i64[0];
    int16x8_t v547 = (int16x8_t)vbslq_s8(v544, v545, v530);
    int16x8_t v548 = (int16x8_t)vbslq_s8(v544, v546, v529);
    v549.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v549.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int16x8_t v550 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v524 - 1), v549), v544);
    v606.val[0] = (int8x16_t)vaddq_s16(v547, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v524 - 1), (int8x16_t)xmmword_242EA7710), v544));
    v606.val[1] = (int8x16_t)vaddq_s16(v524, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v524 - 1), (int8x16_t)xmmword_242EA7720), v544));
    v606.val[2] = (int8x16_t)vaddq_s16(v525, v550);
    v606.val[3] = (int8x16_t)vaddq_s16(v548, v550);
    int16x8_t v551 = (int16x8_t)vandq_s8(vqtbl4q_s8(v606, v549), v544);
    int8x16_t v530 = (int8x16_t)vaddq_s16((int16x8_t)v606.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v606, (int8x16_t)xmmword_242EA7730), v544));
    int16x8_t v524 = vaddq_s16((int16x8_t)v606.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v606, (int8x16_t)xmmword_242EA7740), v544));
    int16x8_t v582 = (int16x8_t)v530;
    int16x8_t v583 = v524;
    int16x8_t v525 = vaddq_s16((int16x8_t)v606.val[2], v551);
    int8x16_t v529 = (int8x16_t)vaddq_s16((int16x8_t)v606.val[3], v551);
    v605.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v527.i8, (int8x16_t)xmmword_242EA7710), v544), v527);
    v605.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v527.i8, (int8x16_t)xmmword_242EA7750), v544), v528);
    v605.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v527.i8, v549), v544), v531);
    v605.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v527.i8, (int8x16_t)xmmword_242EA7760), v544), v532);
    int16x8_t v552 = (int16x8_t)vandq_s8(vqtbl4q_s8(v605, (int8x16_t)xmmword_242EA7730), v544);
    int16x8_t v553 = (int16x8_t)vandq_s8(vqtbl4q_s8(v605, v549), v544);
    int16x8_t v527 = vaddq_s16(v552, (int16x8_t)v605.val[0]);
    int16x8_t v528 = vaddq_s16((int16x8_t)v605.val[1], v552);
    int16x8_t v531 = vaddq_s16((int16x8_t)v605.val[2], v553);
    int16x8_t v532 = vaddq_s16((int16x8_t)v605.val[3], v553);
    v605.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v534.i8, (int8x16_t)xmmword_242EA74D0), v544), v534);
    v605.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v534.i8, (int8x16_t)xmmword_242EA75A0), v544), v535);
    v605.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v534.i8, (int8x16_t)xmmword_242EA7710), v544), v536);
    v605.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v534.i8, (int8x16_t)xmmword_242EA7720), v544), v537);
    int16x8_t v554 = (int16x8_t)vandq_s8(vqtbl4q_s8(v605, v549), v544);
    int16x8_t v534 = vaddq_s16((int16x8_t)v605.val[0], v554);
    int16x8_t v535 = vaddq_s16((int16x8_t)v605.val[1], v554);
    int16x8_t v536 = vaddq_s16((int16x8_t)v605.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v605, (int8x16_t)xmmword_242EA75D0), v544));
    int16x8_t v537 = vaddq_s16((int16x8_t)v605.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v605, (int8x16_t)xmmword_242EA7770), v544));
    v606.val[1] = v594;
    v606.val[2] = v595;
    int8x16_t v56 = v599;
    v606.val[3] = v596;
    int16x8_t v555 = v597;
    v605.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v606 + 16), (int8x16_t)xmmword_242EA74D0), v544), (int16x8_t)v594);
    v605.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v606 + 16), (int8x16_t)xmmword_242EA7780), v544), (int16x8_t)v595);
    int16x8_t v584 = v525;
    int16x8_t v585 = (int16x8_t)v529;
    v605.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v606 + 16), (int8x16_t)xmmword_242EA7710), v544), (int16x8_t)v596);
    int16x8_t v556 = vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v606 + 16), (int8x16_t)xmmword_242EA7720), v544), v597);
    int16x8_t v557 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v605 + 16), v549), v544);
    int16x8_t v539 = vaddq_s16((int16x8_t)v605.val[1], v557);
    int16x8_t v540 = vaddq_s16((int16x8_t)v605.val[2], v557);
    int16x8_t v541 = vaddq_s16((int16x8_t)v605.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v605 + 16), (int8x16_t)xmmword_242EA75D0), v544));
    int16x8_t v542 = vaddq_s16(v556, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v605 + 16), (int8x16_t)xmmword_242EA7790), v544));
  }
  int8x16_t v558 = (int8x16_t)vaddq_s16(v598, (int16x8_t)v530);
  int8x16_t v559 = (int8x16_t)vaddq_s16(v524, v598);
  int8x16_t v560 = (int8x16_t)vaddq_s16(v525, v598);
  int8x16_t v561 = (int8x16_t)vaddq_s16((int16x8_t)v529, v598);
  int8x16_t v562 = (int8x16_t)vaddq_s16(v527, v598);
  int8x16_t v563 = (int8x16_t)vaddq_s16(v528, v598);
  int8x16_t v564 = (int8x16_t)vaddq_s16(v531, v598);
  int8x16_t v565 = (int8x16_t)vaddq_s16(v532, v598);
  int8x16_t v566 = (int8x16_t)vaddq_s16(v534, v598);
  int8x16_t v567 = (int8x16_t)vaddq_s16(v535, v598);
  int8x16_t v568 = (int8x16_t)vaddq_s16(v536, v598);
  int8x16_t v569 = (int8x16_t)vaddq_s16(v537, v598);
  int8x16_t v570 = (int8x16_t)vaddq_s16(v539, v598);
  int8x16_t v571 = (int8x16_t)vaddq_s16(v540, v598);
  int8x16_t v572 = (int8x16_t)vaddq_s16(v541, v598);
  int8x16_t v573 = (int8x16_t)vaddq_s16(v542, v598);
  v574.i64[0] = 0x10001000100010;
  v574.i64[1] = 0x10001000100010;
  int8x16_t v575 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v56, v574));
  int8x16_t v576 = a1 + 4;
  *a1 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v558, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v558), 6uLL);
  a1[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v559, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v559), 6uLL);
  a1[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v560, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v560), 6uLL);
  a1[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v561, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v561), 6uLL);
  int8x16_t v577 = (int16x8_t *)((char *)a1 + a2);
  *int8x16_t v576 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v566, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v566), 6uLL);
  v576[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v567, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v567), 6uLL);
  v576[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v568, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v568), 6uLL);
  v576[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v569, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v569), 6uLL);
  *int8x16_t v577 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v562, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v562), 6uLL);
  v577[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v563, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v563), 6uLL);
  v577[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v564, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v564), 6uLL);
  v577[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v565, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v565), 6uLL);
  v577 += 4;
  *int8x16_t v577 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v570, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v570), 6uLL);
  v577[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v571, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v571), 6uLL);
  v577[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v572, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v572), 6uLL);
  v577[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v573, (int8x16_t)xmmword_242EA77A0), v575), (int16x8_t)v573), 6uLL);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(int16x8_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1, 256, a2, *a3);
  uint64_t v6 = v5
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 32, 256, v5, a3[1]);
  uint64_t v7 = v6
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 8, 256, v6, a3[2]);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 40, 256, v7, a3[3]);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 64, 256, v8, a3[4]);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 96, 256, v9, a3[5]);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 72, 256, v10, a3[6]);
  signed int v12 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 104, 256, v11, v12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(uint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __n128 v8 = (__n128)vshrq_n_s16(*a3, 6uLL);
  __n128 v9 = (__n128)vshrq_n_s16(a3[1], 6uLL);
  __n128 v10 = (__n128)vshrq_n_s16(a3[2], 6uLL);
  __n128 v11 = (__n128)vshrq_n_s16(a3[3], 6uLL);
  int16x8_t v12 = vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  int16x8_t v13 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v14 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v15 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int8x16_t v16 = (int8x16_t)vshrq_n_s16(a3[4], 6uLL);
  int8x16_t v17 = (int8x16_t)vshrq_n_s16(a3[5], 6uLL);
  int16x8_t v18 = vshrq_n_s16(a3[6], 6uLL);
  int16x8_t v19 = vshrq_n_s16(a3[7], 6uLL);
  int16x8_t v20 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[4] + a4), 6uLL);
  int16x8_t v21 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[5] + a4), 6uLL);
  int16x8_t v22 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[6] + a4), 6uLL);
  int16x8_t v23 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[7] + a4), 6uLL);
  int16x8_t v24 = (int16x8_t)vdupq_lane_s64(v8.n128_i64[0], 0);
  v25.i64[0] = 0x5000500050005;
  v25.i64[1] = 0x5000500050005;
  int8x16_t v455 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v8, v24), 6uLL), v25);
  int8x16_t v456 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v9, v24), 6uLL), v25);
  int8x16_t v457 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v10, v24), 6uLL), v25);
  int8x16_t v458 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v11, v24), 6uLL), v25);
  int8x16_t v459 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v12, v24), 6uLL), v25);
  int8x16_t v460 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v13, v24), 6uLL), v25);
  int16x8_t v26 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v455, (int16x8_t)v456), (int16x8_t)v457), (int16x8_t)v458), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v27 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v455, (int16x8_t)v456), (int16x8_t)v457), (int16x8_t)v458), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v28 = vpmaxq_s16(v26, v26);
  int16x8_t v29 = vpminq_s16(v27, v27);
  int16x8_t v30 = vzip1q_s16(v28, v29);
  int8x16_t v31 = (int8x16_t)vceqzq_s16(v30);
  int16x8_t v32 = vclsq_s16(v30);
  v33.i64[0] = 0x10001000100010;
  v33.i64[1] = 0x10001000100010;
  int16x8_t v34 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, v32), v31);
  int8x16_t v461 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v14, v24), 6uLL), v25);
  int8x16_t v462 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v15, v24), 6uLL), v25);
  int8x16_t v463 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v16, v24), 6uLL), v25);
  int8x16_t v464 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v17, v24), 6uLL), v25);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  int16x8_t v36 = vmaxq_s16(v28, v35);
  v37.i64[0] = 0x8000800080008000;
  v37.i64[1] = 0x8000800080008000;
  int16x8_t v38 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v459, (int16x8_t)v460), (int16x8_t)v461), (int16x8_t)v462), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v39 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v459, (int16x8_t)v460), (int16x8_t)v461), (int16x8_t)v462), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v40 = vpmaxq_s16(v38, v38);
  int16x8_t v41 = vpminq_s16(v39, v39);
  int16x8_t v42 = vmaxq_s16(v36, v40);
  int16x8_t v43 = vminq_s16(vminq_s16(v29, v37), v41);
  int16x8_t v44 = vzip1q_s16(v40, v41);
  int16x8_t v45 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v44)), (int8x16_t)vceqzq_s16(v44));
  long long v452 = (__int128)v16;
  long long v453 = (__int128)v17;
  long long v454 = (__int128)v18;
  int8x16_t v465 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v24), 6uLL), v25);
  int8x16_t v466 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v24), 6uLL), v25);
  int16x8_t v46 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v463, (int16x8_t)v464), (int16x8_t)v465), (int16x8_t)v466), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v47 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v463, (int16x8_t)v464), (int16x8_t)v465), (int16x8_t)v466), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v48 = vpmaxq_s16(v46, v46);
  int16x8_t v49 = vpminq_s16(v47, v47);
  int16x8_t v50 = vmaxq_s16(v42, v48);
  int16x8_t v51 = vminq_s16(v43, v49);
  int16x8_t v52 = vzip1q_s16(v48, v49);
  int16x8_t v53 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v52)), (int8x16_t)vceqzq_s16(v52));
  int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v24), 6uLL), v25);
  int8x16_t v468 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v24), 6uLL), v25);
  int8x16_t v471 = (int8x16_t)v24;
  long long v449 = (__int128)v20;
  long long v450 = (__int128)v21;
  long long v451 = (__int128)v22;
  int16x8_t v54 = vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v24), 6uLL), v25);
  int16x8_t v55 = vmaxq_s16(vmaxq_s16((int16x8_t)v467, (int16x8_t)v468), v54);
  int16x8_t v56 = vminq_s16(vminq_s16((int16x8_t)v467, (int16x8_t)v468), v54);
  int8x16_t v469 = (int8x16_t)v54;
  int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v24), 6uLL), v25);
  int16x8_t v57 = vpmaxq_s16(v34, v34);
  int16x8_t v58 = vpmaxq_s16(v45, v45);
  int16x8_t v59 = vpmaxq_s16(v53, v53);
  int8x16_t v60 = (int8x16_t)vminq_s16(v56, (int16x8_t)v470);
  int16x8_t v61 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v55, (int16x8_t)v470), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v62 = (int16x8_t)vqtbl1q_s8(v60, (int8x16_t)xmmword_242EA77B0);
  int16x8_t v63 = vpmaxq_s16(v61, v61);
  int16x8_t v64 = vpminq_s16(v62, v62);
  int16x8_t v65 = vmaxq_s16(v50, v63);
  int16x8_t v66 = vminq_s16(v51, v64);
  int16x8_t v67 = vzip1q_s16(v63, v64);
  int16x8_t v68 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v67)), (int8x16_t)vceqzq_s16(v67));
  int16x8_t v69 = vpmaxq_s16(v68, v68);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(vmaxq_s16(v57, v58), vmaxq_s16(v59, v69));
  int16x8_t v71 = vclzq_s16(vsubq_s16(v65, v66));
  v34.i64[0] = 0xF000F000F000FLL;
  v34.i64[1] = 0xF000F000F000FLL;
  v32.i64[0] = -1;
  v32.i64[1] = -1;
  int8x16_t v478 = (int8x16_t)v66;
  int8x16_t v479 = (int8x16_t)v65;
  int8x16_t v72 = (int8x16_t)vsubq_s16((int16x8_t)v33, v71);
  int8x16_t v73 = (int8x16_t)vsubq_s16(vshlq_s16(v32, vsubq_s16(v34, v71)), v66);
  int8x16_t v74 = (int8x16_t)vcgtq_s16((int16x8_t)v70, (int16x8_t)v72);
  int16x8_t v75 = (int16x8_t)vbslq_s8(v74, v72, v70);
  int8x16_t v480 = vandq_s8(v73, v74);
  v16.i64[0] = 0x8000800080008;
  v16.i64[1] = 0x8000800080008;
  int8x16_t v76 = vorrq_s8((int8x16_t)0, vandq_s8(v74, v16));
  int16x8_t v77 = vsubq_s16(v75, v58);
  v78.i64[0] = 0x3000300030003;
  v78.i64[1] = 0x3000300030003;
  int16x8_t v79 = vmaxq_s16(vminq_s16(v77, (int16x8_t)v78), (int16x8_t)0);
  int16x8_t v80 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v59), (int16x8_t)v78), (int16x8_t)0);
  int16x8_t v474 = vsubq_s16(v75, v79);
  int16x8_t v475 = vsubq_s16(v75, v80);
  int16x8_t v81 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v69), (int16x8_t)v78), (int16x8_t)0);
  int16x8_t v476 = vsubq_s16(v75, v81);
  int8x16_t v477 = (int8x16_t)v75;
  int16x8_t v82 = vaddq_s16(v81, v80);
  int16x8_t v83 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v57), (int16x8_t)v78), (int16x8_t)0);
  v17.i64[0] = 0x4000400040004;
  v17.i64[1] = 0x4000400040004;
  int8x16_t v84 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v75), v78), v76), vbicq_s8(v17, (int8x16_t)vceqq_s16(v82, vnegq_s16(vaddq_s16(v83, v79)))));
  int8x16_t v472 = v84;
  int16x8_t v473 = vsubq_s16(v75, v83);
  if (vmaxvq_s16(v75))
  {
    __n128 v444 = (__n128)v15;
    int16x8_t v445 = v23;
    long long v443 = (__int128)v19;
    __n128 v446 = (__n128)v12;
    __n128 v447 = (__n128)v13;
    __n128 v448 = (__n128)v14;
    int8x16_t v441 = v76;
    int8x16_t v85 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v455, (int16x8_t)vqtbl1q_s8(v455, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v86 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v456, (int16x8_t)vqtbl1q_s8(v456, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int16x8_t v87 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v459, (int16x8_t)vqtbl1q_s8(v459, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int16x8_t v88 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v460, (int16x8_t)vqtbl1q_s8(v460, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int16x8_t v89 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v461, (int16x8_t)vqtbl1q_s8(v461, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int16x8_t v90 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v462, (int16x8_t)vqtbl1q_s8(v462, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v463, (int16x8_t)vqtbl1q_s8(v463, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v464, (int16x8_t)vqtbl1q_s8(v464, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int16x8_t v93 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v466, (int16x8_t)vqtbl1q_s8(v466, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v467, (int16x8_t)vqtbl1q_s8(v467, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v468, (int16x8_t)vqtbl1q_s8(v468, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v465, (int16x8_t)vqtbl1q_s8(v465, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v98 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v423 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v458, (int16x8_t)vqtbl1q_s8(v458, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int8x16_t v425 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v457, (int16x8_t)vqtbl1q_s8(v457, (int8x16_t)xmmword_242EA77A0)), 6uLL), v25);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v85, (int16x8_t)v86), (int16x8_t)v425), (int16x8_t)v423), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v100 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v85, (int16x8_t)v86), (int16x8_t)v425), (int16x8_t)v423), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v101 = vpmaxq_s16(v99, v99);
    int16x8_t v102 = vpminq_s16(v100, v100);
    v103.i64[0] = 0x8000800080008000;
    v103.i64[1] = 0x8000800080008000;
    int16x8_t v104 = vmaxq_s16(v101, v103);
    v105.i64[0] = 0x8000800080008000;
    v105.i64[1] = 0x8000800080008000;
    int16x8_t v106 = vminq_s16(v102, v105);
    int16x8_t v107 = vzip1q_s16(v101, v102);
    int16x8_t v108 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v107)), (int8x16_t)vceqzq_s16(v107));
    int8x16_t v109 = (int8x16_t)vpmaxq_s16(v108, v108);
    int8x16_t v433 = (int8x16_t)v89;
    int8x16_t v435 = (int8x16_t)v87;
    int8x16_t v429 = (int8x16_t)v90;
    int8x16_t v431 = (int8x16_t)v88;
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v87, v88), v89), v90), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v111 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v87, v88), v89), v90), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v112 = vpmaxq_s16(v110, v110);
    int16x8_t v113 = vpminq_s16(v111, v111);
    int16x8_t v114 = vmaxq_s16(v104, v112);
    int16x8_t v115 = vminq_s16(v106, v113);
    int16x8_t v116 = vzip1q_s16(v112, v113);
    int16x8_t v117 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v116)), (int8x16_t)vceqzq_s16(v116));
    int16x8_t v118 = vpmaxq_s16(v117, v117);
    int8x16_t v437 = (int8x16_t)v93;
    int8x16_t v439 = (int8x16_t)v92;
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v91, v92), (int16x8_t)v97), v93), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v91, v92), (int16x8_t)v97), v93), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v121 = vpmaxq_s16(v119, v119);
    int16x8_t v122 = vpminq_s16(v120, v120);
    int16x8_t v123 = vmaxq_s16(v114, v121);
    int16x8_t v124 = vminq_s16(v115, v122);
    int16x8_t v125 = vzip1q_s16(v121, v122);
    int16x8_t v126 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v125)), (int8x16_t)vceqzq_s16(v125));
    int16x8_t v127 = vpmaxq_s16(v126, v126);
    int16x8_t v128 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int16x8_t)v96), (int16x8_t)v98), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int16x8_t)v96), (int16x8_t)v98), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v130 = vpmaxq_s16(v128, v128);
    int16x8_t v131 = vpminq_s16(v129, v129);
    int16x8_t v132 = vmaxq_s16(v123, v130);
    int16x8_t v133 = vminq_s16(v124, v131);
    int16x8_t v134 = vzip1q_s16(v130, v131);
    int16x8_t v135 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v134)), (int8x16_t)vceqzq_s16(v134));
    int16x8_t v136 = vpmaxq_s16(v135, v135);
    int8x16_t v137 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v109, v118), vmaxq_s16(v127, v136));
    int8x16_t v427 = (int8x16_t)v132;
    int8x16_t v138 = (int8x16_t)v133;
    int16x8_t v139 = vclzq_s16(vsubq_s16(v132, v133));
    int8x16_t v140 = (int8x16_t)vsubq_s16((int16x8_t)v33, v139);
    int8x16_t v141 = (int8x16_t)vcgtq_s16((int16x8_t)v137, (int16x8_t)v140);
    int8x16_t v142 = vbslq_s8(v141, v140, v137);
    int16x8_t v143 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, (int16x8_t)v109), (int16x8_t)v78), (int16x8_t)0);
    int16x8_t v144 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v118), (int16x8_t)v78), (int16x8_t)0);
    int16x8_t v145 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v127), (int16x8_t)v78), (int16x8_t)0);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v136), (int16x8_t)v78), (int16x8_t)0);
    v140.i64[0] = 0x4000400040004;
    v140.i64[1] = 0x4000400040004;
    int8x16_t v147 = vbicq_s8(v140, (int8x16_t)vceqq_s16(vaddq_s16(v146, v145), vnegq_s16(vaddq_s16(v143, v144))));
    v109.i64[0] = 0x18001800180018;
    v109.i64[1] = 0x18001800180018;
    int8x16_t v148 = vbslq_s8(v141, v109, v33);
    int8x16_t v417 = (int8x16_t)vsubq_s16((int16x8_t)v142, v144);
    int8x16_t v419 = (int8x16_t)vsubq_s16((int16x8_t)v142, v145);
    int8x16_t v421 = (int8x16_t)vsubq_s16((int16x8_t)v142, v146);
    v145.i64[0] = 0x7000700070007;
    v145.i64[1] = 0x7000700070007;
    int8x16_t v416 = (int8x16_t)vsubq_s16((int16x8_t)v142, v143);
    v109.i64[0] = 0x8000800080008;
    v109.i64[1] = 0x8000800080008;
    v140.i64[0] = 0x2000200020002;
    v140.i64[1] = 0x2000200020002;
    int16x8_t v150 = v476;
    int8x16_t v149 = v477;
    int16x8_t v151 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v477, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v441, v109))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v84, (int16x8_t)v84), v109)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v84, v78), (int16x8_t)v140), v33));
    int16x8_t v153 = v473;
    int16x8_t v152 = v474;
    int16x8_t v154 = v475;
    int8x16_t v155 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(v151, v473, v145), vshlq_n_s16(vaddq_s16(vaddq_s16(v475, v474), v476), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v142, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v148 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v147, (int16x8_t)v147)), (int16x8_t)v416, v145), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v419, (int16x8_t)v417), (int16x8_t)v421), 3uLL))).i64[0], 0);
    if (vaddvq_s16((int16x8_t)v155))
    {
      v156.i64[0] = 0x3000300030003;
      v156.i64[1] = 0x3000300030003;
      int8x16_t v157 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v142), v156), v148), v147);
      v158.i64[0] = 0xF000F000F000FLL;
      v158.i64[1] = 0xF000F000F000FLL;
      int8x16_t v455 = vbslq_s8(v155, v85, v455);
      int8x16_t v456 = vbslq_s8(v155, v86, v456);
      v156.i64[0] = -1;
      v156.i64[1] = -1;
      int8x16_t v457 = vbslq_s8(v155, v425, v457);
      int8x16_t v458 = vbslq_s8(v155, v423, v458);
      int8x16_t v459 = vbslq_s8(v155, v435, v459);
      int8x16_t v460 = vbslq_s8(v155, v431, v460);
      int8x16_t v461 = vbslq_s8(v155, v433, v461);
      int8x16_t v462 = vbslq_s8(v155, v429, v462);
      int8x16_t v463 = vbslq_s8(v155, v91, v463);
      int8x16_t v464 = vbslq_s8(v155, v439, v464);
      int8x16_t v465 = vbslq_s8(v155, v97, v465);
      int8x16_t v466 = vbslq_s8(v155, v437, v466);
      int8x16_t v467 = vbslq_s8(v155, v94, v467);
      int8x16_t v468 = vbslq_s8(v155, v95, v468);
      int8x16_t v469 = vbslq_s8(v155, v96, v469);
      int8x16_t v470 = vbslq_s8(v155, v98, v470);
      int16x8_t v153 = (int16x8_t)vbslq_s8(v155, v416, (int8x16_t)v473);
      int16x8_t v152 = (int16x8_t)vbslq_s8(v155, v417, (int8x16_t)v474);
      int16x8_t v473 = v153;
      int16x8_t v474 = v152;
      int16x8_t v154 = (int16x8_t)vbslq_s8(v155, v419, (int8x16_t)v475);
      int16x8_t v150 = (int16x8_t)vbslq_s8(v155, v421, (int8x16_t)v476);
      int16x8_t v475 = v154;
      int16x8_t v476 = v150;
      int8x16_t v479 = vbslq_s8(v155, v427, v479);
      int8x16_t v480 = vbslq_s8(v155, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v156, vsubq_s16(v158, v139)), (int16x8_t)v138), v141), v480);
      int8x16_t v149 = vbslq_s8(v155, v142, v477);
      int8x16_t v477 = v149;
      int8x16_t v478 = vbslq_s8(v155, v138, v478);
      int8x16_t v84 = vbslq_s8(v155, v157, v472);
      int8x16_t v471 = vbslq_s8(v155, (int8x16_t)vsubq_s16((int16x8_t)v471, (int16x8_t)vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA77A0)), v471);
      int8x16_t v472 = v84;
    }
    long long v159 = (__int128)v445;
    if (a5 >= 2)
    {
      int16x8_t v160 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v8.n128_u64, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v161 = vsubq_s16((int16x8_t)v8, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v8.n128_u64, (int8x16_t)xmmword_242EA7710));
      int16x8_t v162 = vsubq_s16((int16x8_t)v10, v160);
      int16x8_t v163 = vsubq_s16((int16x8_t)v11, v160);
      v482.val[0] = (int8x16_t)v446;
      v482.val[1] = (int8x16_t)v447;
      v482.val[2] = (int8x16_t)v448;
      v482.val[3].i64[0] = v444.n128_u64[0];
      v482.val[3].i64[1] = v11.n128_i64[1];
      int16x8_t v164 = vsubq_s16((int16x8_t)v446, (int16x8_t)vqtbl4q_s8(v482, (int8x16_t)xmmword_242EA7710));
      int16x8_t v165 = vsubq_s16((int16x8_t)v447, (int16x8_t)vqtbl4q_s8(v482, (int8x16_t)xmmword_242EA7750));
      int8x16_t v166 = (int8x16_t)vsubq_s16((int16x8_t)v448, (int16x8_t)vqtbl4q_s8(v482, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v167 = vsubq_s16((int16x8_t)v444, (int16x8_t)vqtbl4q_s8(v482, (int8x16_t)xmmword_242EA7760));
      v483.val[0] = (int8x16_t)v452;
      v483.val[1] = (int8x16_t)v453;
      v483.val[2] = (int8x16_t)v454;
      v483.val[3].i64[0] = v443;
      v483.val[3].i64[1] = v11.n128_i64[1];
      v482.val[1] = (int8x16_t)vsubq_s16((int16x8_t)v452, (int16x8_t)vqtbl4q_s8(v483, (int8x16_t)xmmword_242EA77D0));
      v482.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v453, (int16x8_t)vqtbl4q_s8(v483, (int8x16_t)xmmword_242EA77E0));
      v482.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v454, (int16x8_t)vqtbl4q_s8(v483, (int8x16_t)xmmword_242EA7710));
      int16x8_t v168 = vsubq_s16((int16x8_t)v443, (int16x8_t)vqtbl4q_s8(v483, (int8x16_t)xmmword_242EA7720));
      v481.val[0] = (int8x16_t)v449;
      v481.val[1] = (int8x16_t)v450;
      v481.val[2] = (int8x16_t)v451;
      v481.val[3].i64[0] = v445.i64[0];
      v481.val[3].i64[1] = v11.n128_i64[1];
      v483.val[1].i64[1] = v161.i64[1];
      v483.val[1].i64[0] = v163.i64[1];
      v163.i64[1] = v161.i64[0];
      int16x8_t v169 = vshlq_n_s16(v163, 6uLL);
      int16x8_t v170 = vshlq_n_s16(v164, 6uLL);
      int16x8_t v171 = vshlq_n_s16(v165, 6uLL);
      int16x8_t v172 = vshlq_n_s16(v167, 6uLL);
      int16x8_t v173 = vshlq_n_s16((int16x8_t)v482.val[1], 6uLL);
      v482.val[1] = (int8x16_t)vshlq_n_s16((int16x8_t)v482.val[2], 6uLL);
      v482.val[2] = (int8x16_t)vshlq_n_s16((int16x8_t)v482.val[3], 6uLL);
      v482.val[3] = (int8x16_t)vshlq_n_s16(v168, 6uLL);
      v482.val[0] = (int8x16_t)vshlq_n_s16(vsubq_s16((int16x8_t)v449, (int16x8_t)vqtbl4q_s8(v481, (int8x16_t)xmmword_242EA77D0)), 6uLL);
      int16x8_t v174 = vshlq_n_s16(vsubq_s16((int16x8_t)v450, (int16x8_t)vqtbl4q_s8(v481, (int8x16_t)xmmword_242EA7780)), 6uLL);
      int16x8_t v175 = vshlq_n_s16(vsubq_s16((int16x8_t)v451, (int16x8_t)vqtbl4q_s8(v481, (int8x16_t)xmmword_242EA7710)), 6uLL);
      int16x8_t v176 = vshlq_n_s16(vsubq_s16(v445, (int16x8_t)vqtbl4q_s8(v481, (int8x16_t)xmmword_242EA7720)), 6uLL);
      v483.val[0].i64[0] = 0x5000500050005;
      v483.val[0].i64[1] = 0x5000500050005;
      int8x16_t v177 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v483.val[1], 6uLL), (int16x8_t)v483.val[0]);
      v483.val[1] = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v9, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v8.n128_u64, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v483.val[0]);
      int8x16_t v178 = (int8x16_t)vshlq_s16(vshlq_n_s16(v162, 6uLL), (int16x8_t)v483.val[0]);
      int16x8_t v179 = vshlq_s16(v169, (int16x8_t)v483.val[0]);
      int16x8_t v180 = vshlq_s16(v170, (int16x8_t)v483.val[0]);
      int16x8_t v181 = vshlq_s16(v171, (int16x8_t)v483.val[0]);
      int16x8_t v182 = vshlq_s16(v172, (int16x8_t)v483.val[0]);
      int8x16_t v183 = (int8x16_t)vshlq_s16(v173, (int16x8_t)v483.val[0]);
      v483.val[2] = (int8x16_t)vshlq_s16((int16x8_t)v482.val[1], (int16x8_t)v483.val[0]);
      int8x16_t v184 = (int8x16_t)vshlq_s16((int16x8_t)v482.val[2], (int16x8_t)v483.val[0]);
      int8x16_t v185 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v166, 6uLL), (int16x8_t)v483.val[0]);
      v483.val[3] = (int8x16_t)vshlq_s16((int16x8_t)v482.val[3], (int16x8_t)v483.val[0]);
      int8x16_t v186 = (int8x16_t)vshlq_s16((int16x8_t)v482.val[0], (int16x8_t)v483.val[0]);
      int8x16_t v187 = (int8x16_t)v180;
      v481.val[0] = (int8x16_t)vshlq_s16(v174, (int16x8_t)v483.val[0]);
      int16x8_t v188 = vshlq_s16(v175, (int16x8_t)v483.val[0]);
      v483.val[0] = (int8x16_t)vshlq_s16(v176, (int16x8_t)v483.val[0]);
      int8x16_t v438 = (int8x16_t)v179;
      int8x16_t v440 = v483.val[1];
      int16x8_t v189 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v177, (int16x8_t)v483.val[1]), (int16x8_t)v178), v179), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v190 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v177, (int16x8_t)v483.val[1]), (int16x8_t)v178), v179), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v191 = vpmaxq_s16(v189, v189);
      int16x8_t v192 = vpminq_s16(v190, v190);
      v176.i64[0] = 0x8000800080008000;
      v176.i64[1] = 0x8000800080008000;
      int16x8_t v193 = vmaxq_s16(v191, v176);
      v194.i64[0] = 0x8000800080008000;
      v194.i64[1] = 0x8000800080008000;
      int16x8_t v195 = vminq_s16(v192, v194);
      int16x8_t v196 = vzip1q_s16(v191, v192);
      v166.i64[0] = 0x10001000100010;
      v166.i64[1] = 0x10001000100010;
      int16x8_t v197 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v166, vclsq_s16(v196)), (int8x16_t)vceqzq_s16(v196));
      int16x8_t v198 = vpmaxq_s16(v197, v197);
      int8x16_t v434 = (int8x16_t)v182;
      int8x16_t v436 = (int8x16_t)v181;
      int16x8_t v199 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v187, v181), (int16x8_t)v185), v182), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v200 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v187, v181), (int16x8_t)v185), v182), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v201 = vpmaxq_s16(v199, v199);
      int16x8_t v202 = vpminq_s16(v200, v200);
      int16x8_t v203 = vmaxq_s16(v193, v201);
      int16x8_t v204 = vminq_s16(v195, v202);
      int16x8_t v205 = vzip1q_s16(v201, v202);
      int16x8_t v206 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v166, vclsq_s16(v205)), (int8x16_t)vceqzq_s16(v205));
      int16x8_t v207 = vpmaxq_s16(v206, v206);
      int8x16_t v430 = v483.val[3];
      int8x16_t v432 = v483.val[2];
      int16x8_t v208 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v183, (int16x8_t)v483.val[2]), (int16x8_t)v184), (int16x8_t)v483.val[3]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v209 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v183, (int16x8_t)v483.val[2]), (int16x8_t)v184), (int16x8_t)v483.val[3]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v210 = vpmaxq_s16(v208, v208);
      int16x8_t v211 = vpminq_s16(v209, v209);
      int16x8_t v212 = vmaxq_s16(v203, v210);
      int16x8_t v213 = vminq_s16(v204, v211);
      int16x8_t v214 = vzip1q_s16(v210, v211);
      int16x8_t v215 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v166, vclsq_s16(v214)), (int8x16_t)vceqzq_s16(v214));
      int16x8_t v216 = vpmaxq_s16(v215, v215);
      int8x16_t v426 = v483.val[0];
      int8x16_t v428 = v481.val[0];
      int8x16_t v442 = (int8x16_t)v188;
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v186, (int16x8_t)v481.val[0]), v188), (int16x8_t)v483.val[0]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v218 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v186, (int16x8_t)v481.val[0]), v188), (int16x8_t)v483.val[0]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v219 = vpmaxq_s16(v217, v217);
      int16x8_t v220 = vpminq_s16(v218, v218);
      int8x16_t v221 = (int8x16_t)vmaxq_s16(v212, v219);
      int16x8_t v222 = vminq_s16(v213, v220);
      int16x8_t v223 = vzip1q_s16(v219, v220);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v166, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int8x16_t v226 = (int8x16_t)vmaxq_s16(vmaxq_s16(v198, v207), vmaxq_s16(v216, v225));
      int8x16_t v227 = (int8x16_t)v222;
      int16x8_t v228 = vclzq_s16(vsubq_s16((int16x8_t)v221, v222));
      int8x16_t v229 = (int8x16_t)vsubq_s16((int16x8_t)v166, v228);
      int8x16_t v230 = (int8x16_t)vcgtq_s16((int16x8_t)v226, (int16x8_t)v229);
      int8x16_t v231 = vbslq_s8(v230, v229, v226);
      v226.i64[0] = 0x3000300030003;
      v226.i64[1] = 0x3000300030003;
      int16x8_t v232 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, v198), (int16x8_t)v226), (int16x8_t)0);
      int8x16_t v233 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, v207), (int16x8_t)v226), (int16x8_t)0);
      int16x8_t v234 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, v216), (int16x8_t)v226), (int16x8_t)0);
      int16x8_t v235 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, v225), (int16x8_t)v226), (int16x8_t)0);
      v483.val[1] = (int8x16_t)vsubq_s16((int16x8_t)v231, v232);
      int16x8_t v236 = vsubq_s16((int16x8_t)v231, (int16x8_t)v233);
      v483.val[0] = (int8x16_t)vsubq_s16((int16x8_t)v231, v235);
      int8x16_t v237 = (int8x16_t)vceqq_s16(vaddq_s16(v235, v234), vnegq_s16(vaddq_s16(v232, (int16x8_t)v233)));
      v233.i64[0] = 0x4000400040004;
      v233.i64[1] = 0x4000400040004;
      int8x16_t v238 = vbicq_s8(v233, v237);
      v235.i64[0] = 0x7000700070007;
      v235.i64[1] = 0x7000700070007;
      int8x16_t v422 = v483.val[0];
      int8x16_t v424 = (int8x16_t)v236;
      int8x16_t v418 = (int8x16_t)vsubq_s16((int16x8_t)v231, v234);
      int8x16_t v420 = v483.val[1];
      int16x8_t v239 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v229, v230), vaddq_s16((int16x8_t)v238, (int16x8_t)v238)), (int16x8_t)v483.val[1], v235), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v418, v236), (int16x8_t)v483.val[0]), 3uLL));
      int8x16_t v84 = v472;
      int16x8_t v153 = v473;
      v240.i64[0] = 0x2000200020002;
      v240.i64[1] = 0x2000200020002;
      int16x8_t v241 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v472, v226), (int16x8_t)v240), v166);
      v226.i64[0] = 0x8000800080008;
      v226.i64[1] = 0x8000800080008;
      int16x8_t v150 = v476;
      int8x16_t v149 = v477;
      int16x8_t v152 = v474;
      int16x8_t v154 = v475;
      int8x16_t v242 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v477, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v472, v226))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v84, (int16x8_t)v84), v226)), v241), v473, v235), vshlq_n_s16(vaddq_s16(vaddq_s16(v475, v474), v476), 3uLL)), v239).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v242))
      {
        v243.i64[0] = 0x9000900090009;
        v243.i64[1] = 0x9000900090009;
        v244.i64[0] = 0xF000F000F000FLL;
        v244.i64[1] = 0xF000F000F000FLL;
        v245.i64[0] = -1;
        v245.i64[1] = -1;
        int16x8_t v153 = (int16x8_t)vbslq_s8(v242, v420, (int8x16_t)v473);
        int16x8_t v152 = (int16x8_t)vbslq_s8(v242, v424, (int8x16_t)v474);
        int16x8_t v154 = (int16x8_t)vbslq_s8(v242, v418, (int8x16_t)v475);
        int16x8_t v150 = (int16x8_t)vbslq_s8(v242, v422, (int8x16_t)v476);
        int8x16_t v149 = vbslq_s8(v242, v231, v477);
        int8x16_t v84 = vbslq_s8(v242, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v231), v240), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v230, v243), (int16x8_t)vmvnq_s8(v230))), v238), v472);
        int8x16_t v470 = vbslq_s8(v242, v426, v470);
        int8x16_t v471 = vbslq_s8(v242, vextq_s8((int8x16_t)v11, (int8x16_t)v11, 8uLL), v471);
        int8x16_t v455 = vbslq_s8(v242, v177, v455);
        int8x16_t v456 = vbslq_s8(v242, v440, v456);
        int8x16_t v457 = vbslq_s8(v242, v178, v457);
        int8x16_t v458 = vbslq_s8(v242, v438, v458);
        int8x16_t v459 = vbslq_s8(v242, v187, v459);
        int8x16_t v460 = vbslq_s8(v242, v436, v460);
        int8x16_t v461 = vbslq_s8(v242, v185, v461);
        int8x16_t v462 = vbslq_s8(v242, v434, v462);
        int8x16_t v463 = vbslq_s8(v242, v183, v463);
        int8x16_t v464 = vbslq_s8(v242, v432, v464);
        int8x16_t v465 = vbslq_s8(v242, v184, v465);
        int8x16_t v466 = vbslq_s8(v242, v430, v466);
        int8x16_t v467 = vbslq_s8(v242, v186, v467);
        int8x16_t v468 = vbslq_s8(v242, v428, v468);
        int8x16_t v469 = vbslq_s8(v242, v442, v469);
        long long v159 = (__int128)v445;
        int8x16_t v478 = vbslq_s8(v242, v227, v478);
        int8x16_t v479 = vbslq_s8(v242, v221, v479);
        int8x16_t v480 = vbslq_s8(v242, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v245, vsubq_s16(v244, v228)), (int16x8_t)v227), v230), v480);
        int16x8_t v473 = v153;
        int16x8_t v474 = v152;
        int16x8_t v475 = v154;
        int16x8_t v476 = v150;
        int8x16_t v477 = v149;
        int8x16_t v472 = v84;
      }
    }
    int16x8_t v246 = (int16x8_t)vandq_s8(v480, (int8x16_t)vceqq_s16((int16x8_t)v149, v153));
    int8x16_t v455 = (int8x16_t)vaddq_s16(v246, (int16x8_t)v455);
    int8x16_t v456 = (int8x16_t)vaddq_s16((int16x8_t)v456, v246);
    int8x16_t v457 = (int8x16_t)vaddq_s16((int16x8_t)v457, v246);
    int8x16_t v458 = (int8x16_t)vaddq_s16((int16x8_t)v458, v246);
    int16x8_t v247 = (int16x8_t)vandq_s8(v480, (int8x16_t)vceqq_s16((int16x8_t)v149, v152));
    int8x16_t v459 = (int8x16_t)vaddq_s16((int16x8_t)v459, v247);
    int8x16_t v460 = (int8x16_t)vaddq_s16((int16x8_t)v460, v247);
    int8x16_t v461 = (int8x16_t)vaddq_s16((int16x8_t)v461, v247);
    int8x16_t v462 = (int8x16_t)vaddq_s16((int16x8_t)v462, v247);
    int16x8_t v248 = (int16x8_t)vandq_s8(v480, (int8x16_t)vceqq_s16((int16x8_t)v149, v154));
    int8x16_t v463 = (int8x16_t)vaddq_s16((int16x8_t)v463, v248);
    int8x16_t v464 = (int8x16_t)vaddq_s16((int16x8_t)v464, v248);
    int8x16_t v465 = (int8x16_t)vaddq_s16((int16x8_t)v465, v248);
    int8x16_t v466 = (int8x16_t)vaddq_s16((int16x8_t)v466, v248);
    int8x16_t v249 = vandq_s8(v480, (int8x16_t)vceqq_s16((int16x8_t)v149, v150));
    int8x16_t v467 = (int8x16_t)vaddq_s16((int16x8_t)v467, (int16x8_t)v249);
    int8x16_t v468 = (int8x16_t)vaddq_s16((int16x8_t)v468, (int16x8_t)v249);
    int8x16_t v469 = (int8x16_t)vaddq_s16((int16x8_t)v469, (int16x8_t)v249);
    int8x16_t v470 = (int8x16_t)vaddq_s16((int16x8_t)v470, (int16x8_t)v249);
    v249.i64[0] = 0x8000800080008;
    v249.i64[1] = 0x8000800080008;
    v250.i64[0] = 0x3000300030003;
    v250.i64[1] = 0x3000300030003;
    v251.i64[0] = 0x2000200020002;
    v251.i64[1] = 0x2000200020002;
    int8x16_t v252 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v84, v250), v251);
    v251.i64[0] = 0x10001000100010;
    v251.i64[1] = 0x10001000100010;
    int16x8_t v253 = (int16x8_t)vandq_s8(v252, (int8x16_t)v251);
    v251.i64[0] = 0x7000700070007;
    v251.i64[1] = 0x7000700070007;
    int16x8_t v254 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v149, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v84, v249))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v84, (int16x8_t)v84), v249)), v253), v153, v251), vshlq_n_s16(vaddq_s16(v154, vaddq_s16(v152, v150)), 3uLL));
    int16x8_t v255 = vpaddq_s16(v254, v254);
    if ((unint64_t)(vpaddq_s16(v255, v255).i16[0] + 83) > 0x4FF)
    {
      AGX::AppleCompressionGen2::writePackedUncompressedSubblock<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::VecArray<short,4ul>>(a1, a2, v8, v9, v10, v11, v446, v447, v448, v444, (uint64_t)a3, a4, a5, a6, a7, a8, v452, v453, v454,
        v443,
        v449,
        v450,
        v451,
        v159);
      return 160;
    }
    else
    {
      int8x16_t v256 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v257 = 8 * (a1 & 7);
      if (v257) {
        uint64_t v258 = *v256 & ~(-1 << v257);
      }
      else {
        uint64_t v258 = 0;
      }
      *a2 = 0;
      uint64_t v262 = ((v149.u16[0] << 20) - 0x100000) & 0xF00000;
      v263.i32[0] = v84.u16[1];
      v263.i32[1] = v84.u16[2];
      int8x8_t v264 = vand_s8((int8x8_t)vshl_u32(v263, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v265 = v264.i32[1];
      __int32 v266 = v264.i32[0] | v84.i8[0] & 0x1F;
      if (!v149.i16[0]) {
        uint64_t v262 = 0;
      }
      unint64_t v267 = (unint64_t)((v149.i8[4] - 1) & 0xF) << 28;
      if (!v149.i16[2]) {
        unint64_t v267 = 0;
      }
      v268.i32[0] = v149.u16[3];
      v268.i32[1] = v149.u16[1];
      int32x2_t v269 = vceqz_s32((int32x2_t)vand_s8(v268, (int8x8_t)0xFFFF0000FFFFLL));
      v270.i64[0] = v269.i32[0];
      v270.i64[1] = v269.i32[1];
      int8x16_t v271 = (int8x16_t)v270;
      int8x8_t v272 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v268, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v270.i64[0] = v272.u32[0];
      v270.i64[1] = v272.u32[1];
      int8x16_t v273 = vbicq_s8((int8x16_t)vshlq_u64(v270, (uint64x2_t)xmmword_242EA77F0), v271);
      v271.i64[0] = v267;
      v271.i64[1] = v266 | v265 | ((unint64_t)(v84.i8[6] & 0x1F) << 15) | v262;
      int8x16_t v274 = vorrq_s8(v271, v273);
      uint64_t v275 = v471.i64[0];
      unint64_t v276 = vorrq_s8(v274, (int8x16_t)vdupq_laneq_s64((int64x2_t)v274, 1)).u64[0];
      unint64_t v277 = (v276 << v257) | v258;
      if (v257 >= 0x1C)
      {
        *int8x16_t v256 = v277;
        unint64_t v277 = v276 >> (-8 * (a1 & 7u));
      }
      v278.i64[0] = WORD1(v275);
      v278.i64[1] = WORD2(v275);
      v279.i64[0] = 0xFFFFLL;
      v279.i64[1] = 0xFFFFLL;
      int8x16_t v280 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v278, v279), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v281 = v280.i64[0] | v275 & 0x3FF | v280.i64[1] | ((unint64_t)(HIWORD(v275) & 0x3FF) << 30);
      unint64_t v282 = (v257 + 36) & 0x3C;
      unint64_t v283 = v277 | (v281 << v282);
      if (v282 >= 0x18)
      {
        *(void *)((char *)v256 + (((v257 + 36) >> 3) & 8)) = v283;
        unint64_t v283 = v281 >> -(char)v282;
      }
      unint64_t v284 = v257 + 76;
      int8x16_t v285 = (int8x16_t)vsubq_s16((int16x8_t)v477, v473);
      int8x16_t v286 = (int8x16_t)vsubq_s16((int16x8_t)v477, v474);
      int8x16_t v287 = (int8x16_t)vsubq_s16((int16x8_t)v477, v475);
      int8x16_t v288 = (int8x16_t)vsubq_s16((int16x8_t)v477, v476);
      *(uint8x8_t *)v285.i8 = vqmovn_u16((uint16x8_t)v285);
      *(uint8x8_t *)v286.i8 = vqmovn_u16((uint16x8_t)v286);
      *(uint8x8_t *)v287.i8 = vqmovn_u16((uint16x8_t)v287);
      *(uint8x8_t *)v288.i8 = vqmovn_u16((uint16x8_t)v288);
      int16x8_t v289 = (int16x8_t)vtrn1q_s8(v285, v286);
      int16x8_t v290 = (int16x8_t)vtrn2q_s8(v285, v286);
      int8x16_t v291 = vtrn1q_s8(v287, v288);
      int16x8_t v292 = (int16x8_t)vtrn2q_s8(v287, v288);
      int8x16_t v293 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v289, (int16x8_t)v291), (int32x4_t)vzip1q_s16(v290, v292)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v289, (int16x8_t)v291), (int32x4_t)vtrn2q_s16(v290, v292)));
      v291.i64[0] = 0x202020202020202;
      v291.i64[1] = 0x202020202020202;
      int8x16_t v294 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v472.i8, (int16x4_t)0x4000400040004)), v291);
      v291.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v291.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      uint8x16_t v295 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v287, (uint8x16_t)vorrq_s8(v294, v291)), v293);
      int16x8_t v296 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v294.i8);
      int16x8_t v297 = (int16x8_t)vmovl_high_u8((uint8x16_t)v294);
      uint16x8_t v298 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v295.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v296)), (int16x8_t)vshlq_u16(vmovl_high_u8(v295), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v297)));
      uint16x8_t v299 = (uint16x8_t)vpaddq_s16(v296, v297);
      int32x4_t v300 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v299.i8);
      int32x4_t v301 = (int32x4_t)vmovl_high_u16(v299);
      int32x4_t v302 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v298.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v300)), (int32x4_t)vshlq_u32(vmovl_high_u16(v298), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v301)));
      int32x4_t v303 = vpaddq_s32(v300, v301);
      v304.i64[0] = v302.u32[0];
      v304.i64[1] = v302.u32[1];
      uint64x2_t v305 = (uint64x2_t)v304;
      v304.i64[0] = v302.u32[2];
      v304.i64[1] = v302.u32[3];
      uint64x2_t v306 = (uint64x2_t)v304;
      v304.i64[0] = v303.u32[0];
      v304.i64[1] = v303.u32[1];
      int64x2_t v307 = v304;
      v304.i64[0] = v303.u32[2];
      v304.i64[1] = v303.u32[3];
      int64x2_t v308 = vpaddq_s64((int64x2_t)vshlq_u64(v305, (uint64x2_t)vzip1q_s64((int64x2_t)0, v307)), (int64x2_t)vshlq_u64(v306, (uint64x2_t)vzip1q_s64((int64x2_t)0, v304)));
      int64x2_t v309 = vpaddq_s64(v307, v304);
      uint64_t v310 = (v257 + 76) & 0x3C;
      unint64_t v311 = (v308.i64[0] << v310) | v283;
      if ((unint64_t)(v309.i64[0] + v310) >= 0x40)
      {
        *(void *)((char *)v256 + ((v284 >> 3) & 0x18)) = v311;
        unint64_t v311 = (unint64_t)v308.i64[0] >> -(char)v310;
      }
      unint64_t v312 = v309.i64[0] + v284;
      unint64_t v313 = v311 | (v308.i64[1] << v312);
      if ((v312 & 0x3F) + v309.i64[1] >= 0x40)
      {
        *(void *)((char *)v256 + ((v312 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v313;
        unint64_t v313 = (unint64_t)v308.i64[1] >> -(v312 & 0x3F);
        if ((v312 & 0x3F) == 0) {
          unint64_t v313 = 0;
        }
      }
      unint64_t v314 = v312 + v309.i64[1];
      v315.i64[0] = 0x8000800080008;
      v315.i64[1] = 0x8000800080008;
      v316.i64[0] = -1;
      v316.i64[1] = -1;
      int16x8_t v317 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v472, v315), (int8x16_t)0, 8uLL), v477);
      v318.i64[0] = 0xF000F000F000FLL;
      v318.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v319 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v316, (uint16x8_t)vaddq_s16(v317, v318)), v480);
      int32x4_t v320 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v317.i8);
      int32x4_t v321 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v319.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v320)), (int32x4_t)vmovl_high_u16(v319));
      int32x4_t v322 = vpaddq_s32(v320, (int32x4_t)vmovl_high_u16((uint16x8_t)v317));
      v323.i64[0] = v321.u32[0];
      v323.i64[1] = v321.u32[1];
      uint64x2_t v324 = (uint64x2_t)v323;
      v323.i64[0] = v321.u32[2];
      v323.i64[1] = v321.u32[3];
      uint64x2_t v325 = (uint64x2_t)v323;
      v323.i64[0] = v322.u32[0];
      v323.i64[1] = v322.u32[1];
      int64x2_t v326 = v323;
      v323.i64[0] = v322.u32[2];
      v323.i64[1] = v322.u32[3];
      int64x2_t v327 = vpaddq_s64((int64x2_t)vshlq_u64(v324, (uint64x2_t)vzip1q_s64((int64x2_t)0, v326)), (int64x2_t)vshlq_u64(v325, (uint64x2_t)vzip1q_s64((int64x2_t)0, v323)));
      int64x2_t v328 = vpaddq_s64(v326, v323);
      unint64_t v329 = (v327.i64[0] << v314) | v313;
      if (v328.i64[0] + (v314 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v256 + ((v314 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v329;
        unint64_t v329 = (unint64_t)v327.i64[0] >> -(v314 & 0x3F);
        if ((v314 & 0x3F) == 0) {
          unint64_t v329 = 0;
        }
      }
      unint64_t v330 = v328.i64[0] + v314;
      unint64_t v331 = v329 | (v327.i64[1] << v330);
      if ((v330 & 0x3F) + v328.i64[1] >= 0x40)
      {
        *(void *)((char *)v256 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v327.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      unint64_t v332 = v330 + v328.i64[1];
      int16x8_t v333 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v473, 8uLL);
      v334.i64[0] = 0xF000F000F000FLL;
      v334.i64[1] = 0xF000F000F000FLL;
      v335.i64[0] = -1;
      v335.i64[1] = -1;
      uint16x8_t v336 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v335, (uint16x8_t)vaddq_s16(v333, v334)), v455);
      int32x4_t v337 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v333.i8);
      int32x4_t v338 = (int32x4_t)vmovl_high_u16((uint16x8_t)v333);
      int32x4_t v339 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v336.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v336), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v338)));
      int32x4_t v340 = vpaddq_s32(v337, v338);
      v341.i64[0] = v339.u32[0];
      v341.i64[1] = v339.u32[1];
      uint64x2_t v342 = (uint64x2_t)v341;
      v341.i64[0] = v339.u32[2];
      v341.i64[1] = v339.u32[3];
      uint64x2_t v343 = (uint64x2_t)v341;
      v341.i64[0] = v340.u32[0];
      v341.i64[1] = v340.u32[1];
      int64x2_t v344 = v341;
      v341.i64[0] = v340.u32[2];
      v341.i64[1] = v340.u32[3];
      int64x2_t v345 = vpaddq_s64((int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)), (int64x2_t)vshlq_u64(v343, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)));
      int64x2_t v346 = vpaddq_s64(v344, v341);
      unint64_t v347 = (v345.i64[0] << v332) | v331;
      if (v346.i64[0] + (v332 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v256 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        if ((v332 & 0x3F) != 0) {
          unint64_t v347 = (unint64_t)v345.i64[0] >> -(v332 & 0x3F);
        }
        else {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346.i64[0] + v332;
      uint64_t v349 = (v346.i64[0] + v332) & 0x3F;
      unint64_t v350 = v347 | (v345.i64[1] << v348);
      if ((unint64_t)(v349 + v346.i64[1]) >= 0x40)
      {
        *(void *)((char *)v256 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
        unint64_t v350 = (unint64_t)v345.i64[1] >> -(char)v349;
        if (!v349) {
          unint64_t v350 = 0;
        }
      }
      unint64_t v351 = v348 + v346.i64[1];
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      v353.i64[0] = -1;
      v353.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v355 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v353, (uint16x8_t)vaddq_s16(v473, v352)), *(int8x16_t *)((char *)&v455 + i));
        int32x4_t v356 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v473.i8);
        int32x4_t v357 = (int32x4_t)vmovl_high_u16((uint16x8_t)v473);
        int32x4_t v358 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v355.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)), (int32x4_t)vshlq_u32(vmovl_high_u16(v355), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v357)));
        int32x4_t v359 = vpaddq_s32(v356, v357);
        v360.i64[0] = v358.u32[0];
        v360.i64[1] = v358.u32[1];
        uint64x2_t v361 = (uint64x2_t)v360;
        v360.i64[0] = v358.u32[2];
        v360.i64[1] = v358.u32[3];
        uint64x2_t v362 = (uint64x2_t)v360;
        v360.i64[0] = v359.u32[0];
        v360.i64[1] = v359.u32[1];
        int64x2_t v363 = v360;
        v360.i64[0] = v359.u32[2];
        v360.i64[1] = v359.u32[3];
        int64x2_t v364 = vpaddq_s64((int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v363)), (int64x2_t)vshlq_u64(v362, (uint64x2_t)vzip1q_s64((int64x2_t)0, v360)));
        int64x2_t v365 = vpaddq_s64(v363, v360);
        unint64_t v366 = (v364.i64[0] << v351) | v350;
        if (v365.i64[0] + (v351 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v256 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
          unint64_t v366 = (unint64_t)v364.i64[0] >> -(v351 & 0x3F);
          if ((v351 & 0x3F) == 0) {
            unint64_t v366 = 0;
          }
        }
        unint64_t v367 = v365.i64[0] + v351;
        unint64_t v350 = v366 | (v364.i64[1] << v367);
        if ((v367 & 0x3F) + v365.i64[1] >= 0x40)
        {
          *(void *)((char *)v256 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
          unint64_t v350 = (unint64_t)v364.i64[1] >> -(v367 & 0x3F);
          if ((v367 & 0x3F) == 0) {
            unint64_t v350 = 0;
          }
        }
        unint64_t v351 = v367 + v365.i64[1];
      }
      uint64_t v368 = 0;
      v369.i64[0] = 0xF000F000F000FLL;
      v369.i64[1] = 0xF000F000F000FLL;
      v370.i64[0] = -1;
      v370.i64[1] = -1;
      do
      {
        uint16x8_t v371 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v370, (uint16x8_t)vaddq_s16(v474, v369)), *(int8x16_t *)((char *)&v459 + v368));
        int32x4_t v372 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v474.i8);
        int32x4_t v373 = (int32x4_t)vmovl_high_u16((uint16x8_t)v474);
        int32x4_t v374 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v371.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v372)), (int32x4_t)vshlq_u32(vmovl_high_u16(v371), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v373)));
        int32x4_t v375 = vpaddq_s32(v372, v373);
        v376.i64[0] = v374.u32[0];
        v376.i64[1] = v374.u32[1];
        uint64x2_t v377 = (uint64x2_t)v376;
        v376.i64[0] = v374.u32[2];
        v376.i64[1] = v374.u32[3];
        uint64x2_t v378 = (uint64x2_t)v376;
        v376.i64[0] = v375.u32[0];
        v376.i64[1] = v375.u32[1];
        int64x2_t v379 = v376;
        v376.i64[0] = v375.u32[2];
        v376.i64[1] = v375.u32[3];
        int64x2_t v380 = vpaddq_s64((int64x2_t)vshlq_u64(v377, (uint64x2_t)vzip1q_s64((int64x2_t)0, v379)), (int64x2_t)vshlq_u64(v378, (uint64x2_t)vzip1q_s64((int64x2_t)0, v376)));
        int64x2_t v381 = vpaddq_s64(v379, v376);
        unint64_t v382 = (v380.i64[0] << v351) | v350;
        if (v381.i64[0] + (v351 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v256 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v382;
          unint64_t v382 = (unint64_t)v380.i64[0] >> -(v351 & 0x3F);
          if ((v351 & 0x3F) == 0) {
            unint64_t v382 = 0;
          }
        }
        unint64_t v383 = v381.i64[0] + v351;
        unint64_t v350 = v382 | (v380.i64[1] << v383);
        if ((v383 & 0x3F) + v381.i64[1] >= 0x40)
        {
          *(void *)((char *)v256 + ((v383 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
          unint64_t v350 = (unint64_t)v380.i64[1] >> -(v383 & 0x3F);
          if ((v383 & 0x3F) == 0) {
            unint64_t v350 = 0;
          }
        }
        unint64_t v351 = v383 + v381.i64[1];
        v368 += 16;
      }
      while (v368 != 64);
      uint64_t v384 = 0;
      v385.i64[0] = 0xF000F000F000FLL;
      v385.i64[1] = 0xF000F000F000FLL;
      v386.i64[0] = -1;
      v386.i64[1] = -1;
      do
      {
        uint16x8_t v387 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v386, (uint16x8_t)vaddq_s16(v475, v385)), *(int8x16_t *)((char *)&v463 + v384));
        int32x4_t v388 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v475.i8);
        int32x4_t v389 = (int32x4_t)vmovl_high_u16((uint16x8_t)v475);
        int32x4_t v390 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v387.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v388)), (int32x4_t)vshlq_u32(vmovl_high_u16(v387), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v389)));
        int32x4_t v391 = vpaddq_s32(v388, v389);
        v392.i64[0] = v390.u32[0];
        v392.i64[1] = v390.u32[1];
        uint64x2_t v393 = (uint64x2_t)v392;
        v392.i64[0] = v390.u32[2];
        v392.i64[1] = v390.u32[3];
        uint64x2_t v394 = (uint64x2_t)v392;
        v392.i64[0] = v391.u32[0];
        v392.i64[1] = v391.u32[1];
        int64x2_t v395 = v392;
        v392.i64[0] = v391.u32[2];
        v392.i64[1] = v391.u32[3];
        int64x2_t v396 = vpaddq_s64((int64x2_t)vshlq_u64(v393, (uint64x2_t)vzip1q_s64((int64x2_t)0, v395)), (int64x2_t)vshlq_u64(v394, (uint64x2_t)vzip1q_s64((int64x2_t)0, v392)));
        int64x2_t v397 = vpaddq_s64(v395, v392);
        unint64_t v398 = (v396.i64[0] << v351) | v350;
        if (v397.i64[0] + (v351 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v256 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v398;
          unint64_t v398 = (unint64_t)v396.i64[0] >> -(v351 & 0x3F);
          if ((v351 & 0x3F) == 0) {
            unint64_t v398 = 0;
          }
        }
        unint64_t v399 = v397.i64[0] + v351;
        unint64_t v350 = v398 | (v396.i64[1] << v399);
        if ((v399 & 0x3F) + v397.i64[1] >= 0x40)
        {
          *(void *)((char *)v256 + ((v399 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
          unint64_t v350 = (unint64_t)v396.i64[1] >> -(v399 & 0x3F);
          if ((v399 & 0x3F) == 0) {
            unint64_t v350 = 0;
          }
        }
        unint64_t v351 = v399 + v397.i64[1];
        v384 += 16;
      }
      while (v384 != 64);
      uint64_t v400 = 0;
      v401.i64[0] = 0xF000F000F000FLL;
      v401.i64[1] = 0xF000F000F000FLL;
      v402.i64[0] = -1;
      v402.i64[1] = -1;
      do
      {
        uint16x8_t v403 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v402, (uint16x8_t)vaddq_s16(v476, v401)), *(int8x16_t *)((char *)&v467 + v400));
        int32x4_t v404 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v476.i8);
        int32x4_t v405 = (int32x4_t)vmovl_high_u16((uint16x8_t)v476);
        int32x4_t v406 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v403.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v404)), (int32x4_t)vshlq_u32(vmovl_high_u16(v403), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v405)));
        int32x4_t v407 = vpaddq_s32(v404, v405);
        v408.i64[0] = v406.u32[0];
        v408.i64[1] = v406.u32[1];
        uint64x2_t v409 = (uint64x2_t)v408;
        v408.i64[0] = v406.u32[2];
        v408.i64[1] = v406.u32[3];
        uint64x2_t v410 = (uint64x2_t)v408;
        v408.i64[0] = v407.u32[0];
        v408.i64[1] = v407.u32[1];
        int64x2_t v411 = v408;
        v408.i64[0] = v407.u32[2];
        v408.i64[1] = v407.u32[3];
        int64x2_t v412 = vpaddq_s64((int64x2_t)vshlq_u64(v409, (uint64x2_t)vzip1q_s64((int64x2_t)0, v411)), (int64x2_t)vshlq_u64(v410, (uint64x2_t)vzip1q_s64((int64x2_t)0, v408)));
        int64x2_t v413 = vpaddq_s64(v411, v408);
        unint64_t v414 = (v412.i64[0] << v351) | v350;
        if (v413.i64[0] + (v351 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v256 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v414;
          unint64_t v414 = (unint64_t)v412.i64[0] >> -(v351 & 0x3F);
          if ((v351 & 0x3F) == 0) {
            unint64_t v414 = 0;
          }
        }
        unint64_t v415 = v413.i64[0] + v351;
        unint64_t v350 = v414 | (v412.i64[1] << v415);
        if ((v415 & 0x3F) + v413.i64[1] >= 0x40)
        {
          *(void *)((char *)v256 + ((v415 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
          unint64_t v350 = (unint64_t)v412.i64[1] >> -(v415 & 0x3F);
          if ((v415 & 0x3F) == 0) {
            unint64_t v350 = 0;
          }
        }
        unint64_t v351 = v415 + v413.i64[1];
        v400 += 16;
      }
      while (v400 != 64);
      if ((v351 & 0x3F) != 0) {
        *(void *)((char *)v256 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
      }
      unint64_t result = (v351 - v257 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v259 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v260 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v259, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v259, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v260.i8 = vorr_s8(*(int8x8_t *)v260.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v260, v260, 8uLL));
    *(_DWORD *)a1 = v260.i32[0];
    *(unsigned char *)(a1 + 4) = v260.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a6;
  uint64_t v11 = a3;
  int16x8_t v13 = (int16x8_t *)result;
  if (a5 >= 4) {
    uint64_t v14 = 4;
  }
  else {
    uint64_t v14 = a5;
  }
  if (a6 >= 2) {
    int v15 = 2;
  }
  else {
    int v15 = a6;
  }
  if (v14 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v14, a6, a7, a8);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v16 = 2 * a2;
  int8x16_t v17 = a4 + 1;
  if (v8 <= 2) {
    int v18 = 2;
  }
  else {
    int v18 = v8;
  }
  unsigned int v19 = v18 - 2;
  if (v19 >= 2) {
    int v20 = 2;
  }
  else {
    int v20 = v19;
  }
  if (v14 && v20)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v17, (int16x8_t *)((char *)v13 + v16), a2, v14, a6, a7, a8);
    v11 += result;
  }
  else
  {
    *int8x16_t v17 = 0;
  }
  int16x8_t v21 = a4 + 2;
  if (a5 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a5;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v24 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v21, v13 + 8, a2, v24, a6, a7, a8);
    v11 += result;
    int16x8_t v25 = a4 + 3;
  }
  else
  {
    *int16x8_t v21 = 0;
    int16x8_t v25 = a4 + 3;
    if (!v24) {
      goto LABEL_33;
    }
  }
  if (v20)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v25, (int16x8_t *)((char *)v13 + v16 + 128), a2, v24, a6, a7, a8);
    v11 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int16x8_t v25 = 0;
LABEL_34:
  int16x8_t v26 = a4 + 4;
  if (v8 <= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v8;
  }
  unsigned int v28 = v27 - 4;
  if (v28 >= 2) {
    int v29 = 2;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v26, (int16x8_t *)((char *)v13 + 4 * a2), a2, v14, a6, a7, a8);
    v11 += result;
  }
  else
  {
    *int16x8_t v26 = 0;
  }
  int16x8_t v30 = a4 + 5;
  if (v8 <= 6) {
    int v31 = 6;
  }
  else {
    int v31 = v8;
  }
  unsigned int v32 = v31 - 6;
  if (v32 >= 2) {
    int v33 = 2;
  }
  else {
    int v33 = v32;
  }
  if (v14 && v33)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v30, (int16x8_t *)((char *)v13 + 6 * a2), a2, v14, a6, a7, a8);
    v11 += result;
    int16x8_t v34 = a4 + 6;
    if (!v24) {
      goto LABEL_57;
    }
  }
  else
  {
    *int16x8_t v30 = 0;
    int16x8_t v34 = a4 + 6;
    if (!v24) {
      goto LABEL_57;
    }
  }
  if (v29)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v34, (int16x8_t *)((char *)v13 + 4 * a2 + 128), a2, v24, a6, a7, a8);
    v11 += result;
    int16x8_t v35 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int16x8_t v34 = 0;
  int16x8_t v35 = a4 + 7;
  if (!v24)
  {
LABEL_62:
    *int16x8_t v35 = 0;
    return result;
  }
LABEL_58:
  if (!v33) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v11, v35, (int16x8_t *)((char *)v13 + 6 * a2 + 128), a2, v24, a6, a7, a8);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(unint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v7 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v9 = *v7;
  int16x8_t v10 = v7[1];
  int16x8_t v11 = v7[2];
  int16x8_t v12 = v7[3];
  int v8 = (int16x8_t *)((char *)v7 + a4);
  int16x8_t v13 = vshrq_n_s16(*a3, 6uLL);
  int16x8_t v14 = vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  int16x8_t v15 = vshrq_n_s16(a3[1], 6uLL);
  int16x8_t v16 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v17 = vshrq_n_s16(v9, 6uLL);
  int16x8_t v18 = vshrq_n_s16(*v8, 6uLL);
  int16x8_t v19 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v20 = vshrq_n_s16(v8[1], 6uLL);
  int16x8_t v21 = vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v22 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v23 = vshrq_n_s16(a3[3], 6uLL);
  int16x8_t v24 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v25 = vshrq_n_s16(v11, 6uLL);
  int16x8_t v26 = vshrq_n_s16(v8[2], 6uLL);
  int16x8_t v27 = vshrq_n_s16(v12, 6uLL);
  int16x8_t v28 = vshrq_n_s16(v8[3], 6uLL);
  int16x8_t v29 = (int16x8_t)vdupq_lane_s64(v13.i64[0], 0);
  v30.i64[0] = 0x5000500050005;
  v30.i64[1] = 0x5000500050005;
  int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v13, v29), 6uLL), v30);
  int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v14, v29), 6uLL), v30);
  int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v15, v29), 6uLL), v30);
  int8x16_t v472 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v16, v29), 6uLL), v30);
  int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v17, v29), 6uLL), v30);
  int8x16_t v474 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v29), 6uLL), v30);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v32 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  int16x8_t v35 = vzip1q_s16(v33, v34);
  int8x16_t v36 = (int8x16_t)vceqzq_s16(v35);
  int16x8_t v37 = vclsq_s16(v35);
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v38 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, v37), v36);
  int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v29), 6uLL), v30);
  int8x16_t v476 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v29), 6uLL), v30);
  int8x16_t v477 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v29), 6uLL), v30);
  int8x16_t v478 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v29), 6uLL), v30);
  v39.i64[0] = 0x8000800080008000;
  v39.i64[1] = 0x8000800080008000;
  int16x8_t v40 = vmaxq_s16(v33, v39);
  v41.i64[0] = 0x8000800080008000;
  v41.i64[1] = 0x8000800080008000;
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vmaxq_s16(v40, v44);
  int16x8_t v47 = vminq_s16(vminq_s16(v34, v41), v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int16x8_t v49 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v48)), (int8x16_t)vceqzq_s16(v48));
  int8x16_t v479 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v29), 6uLL), v30);
  int8x16_t v480 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v29), 6uLL), v30);
  int16x8_t v50 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v52 = vpmaxq_s16(v50, v50);
  int16x8_t v53 = vpminq_s16(v51, v51);
  int16x8_t v54 = vmaxq_s16(v46, v52);
  int16x8_t v55 = vminq_s16(v47, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int8x16_t v481 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v29), 6uLL), v30);
  int8x16_t v482 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v29), 6uLL), v30);
  int8x16_t v485 = (int8x16_t)v29;
  int8x16_t v483 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v29), 6uLL), v30);
  int8x16_t v484 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v28, v29), 6uLL), v30);
  int16x8_t v58 = vpmaxq_s16(v38, v38);
  int16x8_t v59 = vpmaxq_s16(v49, v49);
  int8x16_t v60 = (int8x16_t)vpmaxq_s16(v57, v57);
  int16x8_t v61 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v62 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v63 = vpmaxq_s16(v61, v61);
  int16x8_t v64 = vpminq_s16(v62, v62);
  int16x8_t v65 = vmaxq_s16(v54, v63);
  int16x8_t v66 = vminq_s16(v55, v64);
  int16x8_t v67 = vzip1q_s16(v63, v64);
  int16x8_t v68 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v67)), (int8x16_t)vceqzq_s16(v67));
  int16x8_t v69 = vpmaxq_s16(v68, v68);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(vmaxq_s16(v58, v59), vmaxq_s16((int16x8_t)v60, v69));
  int16x8_t v71 = vclzq_s16(vsubq_s16(v65, v66));
  v34.i64[0] = 0xF000F000F000FLL;
  v34.i64[1] = 0xF000F000F000FLL;
  v37.i64[0] = -1;
  v37.i64[1] = -1;
  int8x16_t v492 = (int8x16_t)v66;
  int8x16_t v493 = (int8x16_t)v65;
  int8x16_t v72 = (int8x16_t)vsubq_s16(v35, v71);
  int8x16_t v73 = (int8x16_t)vsubq_s16(vshlq_s16(v37, vsubq_s16(v34, v71)), v66);
  int8x16_t v74 = (int8x16_t)vcgtq_s16((int16x8_t)v70, (int16x8_t)v72);
  int16x8_t v75 = (int16x8_t)vbslq_s8(v74, v72, v70);
  int8x16_t v494 = vandq_s8(v73, v74);
  v73.i64[0] = 0x8000800080008;
  v73.i64[1] = 0x8000800080008;
  int8x16_t v76 = vorrq_s8((int8x16_t)0, vandq_s8(v74, v73));
  v70.i64[0] = 0x3000300030003;
  v70.i64[1] = 0x3000300030003;
  int16x8_t v77 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v59), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v78 = vmaxq_s16(vminq_s16(vsubq_s16(v75, (int16x8_t)v60), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v488 = vsubq_s16(v75, v77);
  int16x8_t v489 = vsubq_s16(v75, v78);
  int16x8_t v79 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v69), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v490 = vsubq_s16(v75, v79);
  int8x16_t v491 = (int8x16_t)v75;
  int16x8_t v80 = vaddq_s16(v79, v78);
  int16x8_t v81 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v58), (int16x8_t)v70), (int16x8_t)0);
  v60.i64[0] = 0x4000400040004;
  v60.i64[1] = 0x4000400040004;
  int8x16_t v82 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v75), v70), v76), vbicq_s8(v60, (int8x16_t)vceqq_s16(v80, vnegq_s16(vaddq_s16(v81, v77)))));
  int8x16_t v486 = v82;
  int16x8_t v487 = vsubq_s16(v75, v81);
  if (vmaxvq_s16(v75))
  {
    int16x8_t v467 = v20;
    int16x8_t v434 = v24;
    int16x8_t v435 = v28;
    int16x8_t v436 = v25;
    int16x8_t v437 = v26;
    int16x8_t v438 = v27;
    v439.val[0] = (int8x16_t)v13;
    v439.val[1] = (int8x16_t)v14;
    v439.val[2] = (int8x16_t)v15;
    v439.val[3] = (int8x16_t)v16;
    int8x16_t v465 = v76;
    int8x16_t v83 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v84 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v85 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v473, (int16x8_t)vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v86 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v474, (int16x8_t)vqtbl1q_s8(v474, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v87 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v475, (int16x8_t)vqtbl1q_s8(v475, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v88 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v476, (int16x8_t)vqtbl1q_s8(v476, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v89 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v477, (int16x8_t)vqtbl1q_s8(v477, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v90 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v478, (int16x8_t)vqtbl1q_s8(v478, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v91 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v479, (int16x8_t)vqtbl1q_s8(v479, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v480, (int16x8_t)vqtbl1q_s8(v480, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v93 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v481, (int16x8_t)vqtbl1q_s8(v481, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v482, (int16x8_t)vqtbl1q_s8(v482, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v483, (int16x8_t)vqtbl1q_s8(v483, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v96 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v484, (int16x8_t)vqtbl1q_s8(v484, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v444 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v472, (int16x8_t)vqtbl1q_s8(v472, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v445 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v471, (int16x8_t)vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v97 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v99 = vpmaxq_s16(v97, v97);
    int16x8_t v100 = vpminq_s16(v98, v98);
    v101.i64[0] = 0x8000800080008000;
    v101.i64[1] = 0x8000800080008000;
    int16x8_t v102 = vmaxq_s16(v99, v101);
    v103.i64[0] = 0x8000800080008000;
    v103.i64[1] = 0x8000800080008000;
    int16x8_t v104 = vminq_s16(v100, v103);
    int16x8_t v105 = vzip1q_s16(v99, v100);
    v106.i64[0] = 0x10001000100010;
    v106.i64[1] = 0x10001000100010;
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v105)), (int8x16_t)vceqzq_s16(v105));
    int8x16_t v108 = (int8x16_t)vpmaxq_s16(v107, v107);
    int8x16_t v451 = (int8x16_t)v87;
    int8x16_t v453 = (int8x16_t)v85;
    int8x16_t v448 = (int8x16_t)v88;
    int8x16_t v449 = (int8x16_t)v86;
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vmaxq_s16(v102, v111);
    int16x8_t v114 = vminq_s16(v104, v112);
    int16x8_t v115 = vzip1q_s16(v111, v112);
    v116.i64[0] = 0x10001000100010;
    v116.i64[1] = 0x10001000100010;
    int16x8_t v117 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v115)), (int8x16_t)vceqzq_s16(v115));
    int16x8_t v118 = vpmaxq_s16(v117, v117);
    int8x16_t v459 = (int8x16_t)v91;
    int8x16_t v461 = (int8x16_t)v89;
    int8x16_t v455 = (int8x16_t)v92;
    int8x16_t v457 = (int8x16_t)v90;
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v121 = vpmaxq_s16(v119, v119);
    int16x8_t v122 = vpminq_s16(v120, v120);
    int16x8_t v123 = vmaxq_s16(v113, v121);
    int16x8_t v124 = vminq_s16(v114, v122);
    int16x8_t v125 = vzip1q_s16(v121, v122);
    int16x8_t v126 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v125)), (int8x16_t)vceqzq_s16(v125));
    int16x8_t v127 = vpmaxq_s16(v126, v126);
    int8x16_t v463 = (int8x16_t)v96;
    int16x8_t v128 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v130 = vpmaxq_s16(v128, v128);
    int16x8_t v131 = vpminq_s16(v129, v129);
    int8x16_t v132 = (int8x16_t)vmaxq_s16(v123, v130);
    int16x8_t v133 = vminq_s16(v124, v131);
    int16x8_t v134 = vzip1q_s16(v130, v131);
    int16x8_t v135 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v134)), (int8x16_t)vceqzq_s16(v134));
    int16x8_t v136 = vpmaxq_s16(v135, v135);
    int8x16_t v137 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v108, v118), vmaxq_s16(v127, v136));
    int8x16_t v446 = (int8x16_t)v93;
    int8x16_t v447 = v132;
    int8x16_t v138 = (int8x16_t)v133;
    int16x8_t v139 = vclzq_s16(vsubq_s16((int16x8_t)v132, v133));
    int8x16_t v140 = (int8x16_t)vsubq_s16(v116, v139);
    int8x16_t v141 = (int8x16_t)vcgtq_s16((int16x8_t)v137, (int16x8_t)v140);
    int8x16_t v142 = vbslq_s8(v141, v140, v137);
    int16x8_t v143 = vsubq_s16((int16x8_t)v142, (int16x8_t)v108);
    v108.i64[0] = 0x3000300030003;
    v108.i64[1] = 0x3000300030003;
    int16x8_t v144 = vmaxq_s16(vminq_s16(v143, (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v145 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v118), (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v127), (int16x8_t)v108), (int16x8_t)0);
    v132.i64[0] = 0x3000300030003;
    v132.i64[1] = 0x3000300030003;
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v136), (int16x8_t)v108), (int16x8_t)0);
    v140.i64[0] = 0x4000400040004;
    v140.i64[1] = 0x4000400040004;
    int8x16_t v148 = vbicq_s8(v140, (int8x16_t)vceqq_s16(vaddq_s16(v147, v146), vnegq_s16(vaddq_s16(v144, v145))));
    v108.i64[0] = 0x18001800180018;
    v108.i64[1] = 0x18001800180018;
    int8x16_t v149 = vbslq_s8(v141, v108, (int8x16_t)v116);
    int8x16_t v441 = (int8x16_t)vsubq_s16((int16x8_t)v142, v145);
    int8x16_t v442 = (int8x16_t)vsubq_s16((int16x8_t)v142, v146);
    int8x16_t v443 = (int8x16_t)vsubq_s16((int16x8_t)v142, v147);
    v146.i64[0] = 0x7000700070007;
    v146.i64[1] = 0x7000700070007;
    int8x16_t v440 = (int8x16_t)vsubq_s16((int16x8_t)v142, v144);
    v108.i64[0] = 0x8000800080008;
    v108.i64[1] = 0x8000800080008;
    int16x8_t v150 = (int16x8_t)vandq_s8(v465, v108);
    int16x8_t v151 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v108);
    v140.i64[0] = 0x2000200020002;
    v140.i64[1] = 0x2000200020002;
    int16x8_t v152 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v132), (int16x8_t)v140), (int8x16_t)v116);
    int16x8_t v154 = v490;
    int8x16_t v153 = v491;
    int16x8_t v155 = v487;
    int16x8_t v156 = v488;
    int16x8_t v157 = vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16(v150)), v151), v152), v487, v146);
    int16x8_t v158 = v489;
    int8x16_t v159 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(v157, vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v142, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v149 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v148, (int16x8_t)v148)), (int16x8_t)v440, v146), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v442, (int16x8_t)v441), (int16x8_t)v443), 3uLL))).i64[0], 0);
    int v160 = (unsigned __int16)vaddvq_s16((int16x8_t)v159);
    BOOL v162 = a5 < 4 || a6 < 2;
    if (v160)
    {
      v163.i64[0] = 0x3000300030003;
      v163.i64[1] = 0x3000300030003;
      int8x16_t v164 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v142), v163), v149), v148);
      v165.i64[0] = 0xF000F000F000FLL;
      v165.i64[1] = 0xF000F000F000FLL;
      int8x16_t v469 = vbslq_s8(v159, v83, v469);
      int8x16_t v470 = vbslq_s8(v159, v84, v470);
      v163.i64[0] = -1;
      v163.i64[1] = -1;
      int8x16_t v471 = vbslq_s8(v159, v445, v471);
      int8x16_t v472 = vbslq_s8(v159, v444, v472);
      int8x16_t v473 = vbslq_s8(v159, v453, v473);
      int8x16_t v474 = vbslq_s8(v159, v449, v474);
      int8x16_t v475 = vbslq_s8(v159, v451, v475);
      int8x16_t v476 = vbslq_s8(v159, v448, v476);
      int8x16_t v477 = vbslq_s8(v159, v461, v477);
      int8x16_t v478 = vbslq_s8(v159, v457, v478);
      int8x16_t v479 = vbslq_s8(v159, v459, v479);
      int8x16_t v480 = vbslq_s8(v159, v455, v480);
      int8x16_t v481 = vbslq_s8(v159, v446, v481);
      int8x16_t v482 = vbslq_s8(v159, v94, v482);
      int8x16_t v483 = vbslq_s8(v159, v95, v483);
      int8x16_t v484 = vbslq_s8(v159, v463, v484);
      int16x8_t v155 = (int16x8_t)vbslq_s8(v159, v440, (int8x16_t)v487);
      int16x8_t v156 = (int16x8_t)vbslq_s8(v159, v441, (int8x16_t)v488);
      int16x8_t v487 = v155;
      int16x8_t v488 = v156;
      int16x8_t v158 = (int16x8_t)vbslq_s8(v159, v442, (int8x16_t)v489);
      int16x8_t v154 = (int16x8_t)vbslq_s8(v159, v443, (int8x16_t)v490);
      int16x8_t v489 = v158;
      int16x8_t v490 = v154;
      int8x16_t v493 = vbslq_s8(v159, v447, v493);
      int8x16_t v494 = vbslq_s8(v159, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v163, vsubq_s16(v165, v139)), (int16x8_t)v138), v141), v494);
      int8x16_t v153 = vbslq_s8(v159, v142, v491);
      int8x16_t v491 = v153;
      int8x16_t v492 = vbslq_s8(v159, v138, v492);
      int8x16_t v82 = vbslq_s8(v159, v164, v486);
      int8x16_t v485 = vbslq_s8(v159, (int8x16_t)vsubq_s16((int16x8_t)v485, (int16x8_t)vqtbl1q_s8(v485, (int8x16_t)xmmword_242EA77A0)), v485);
      int8x16_t v486 = v82;
    }
    if (!v162)
    {
      int16x8_t v166 = (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v167 = vsubq_s16((int16x8_t)v439.val[0], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7710));
      int16x8_t v168 = vsubq_s16((int16x8_t)v439.val[2], v166);
      int16x8_t v169 = vsubq_s16((int16x8_t)v439.val[3], v166);
      uint64_t v170 = v467.i64[0];
      uint64_t v171 = v439.val[3].i64[1];
      int16x8_t v172 = vsubq_s16(v17, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v173 = vsubq_s16(v18, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v174 = vsubq_s16(v19, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v175 = vsubq_s16(v467, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7760));
      uint64_t v176 = v434.i64[0];
      uint64_t v177 = v439.val[3].i64[1];
      int16x8_t v178 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v179 = vsubq_s16(v21, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v180 = vsubq_s16(v22, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v181 = vsubq_s16(v23, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v182 = vsubq_s16(v434, v178);
      v495.val[0] = (int8x16_t)v436;
      v495.val[1] = (int8x16_t)v437;
      v495.val[2] = (int8x16_t)v438;
      v495.val[3].i64[0] = v435.i64[0];
      v495.val[3].i64[1] = v439.val[3].i64[1];
      int16x8_t v183 = vsubq_s16(v436, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v184 = vsubq_s16(v437, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7780));
      int16x8_t v185 = vsubq_s16(v438, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7710));
      int16x8_t v186 = vsubq_s16(v435, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7720));
      v187.i64[1] = v167.i64[1];
      v187.i64[0] = v169.i64[1];
      v169.i64[1] = v167.i64[0];
      int16x8_t v188 = vshlq_n_s16(v169, 6uLL);
      int8x16_t v189 = (int8x16_t)vshlq_n_s16(v172, 6uLL);
      int16x8_t v190 = vshlq_n_s16(v173, 6uLL);
      int16x8_t v191 = vshlq_n_s16(v175, 6uLL);
      int16x8_t v192 = vshlq_n_s16(v179, 6uLL);
      v495.val[0] = (int8x16_t)vshlq_n_s16(v182, 6uLL);
      v495.val[1] = (int8x16_t)vshlq_n_s16(v184, 6uLL);
      v495.val[2].i64[0] = 0x5000500050005;
      v495.val[2].i64[1] = 0x5000500050005;
      int8x16_t v193 = (int8x16_t)vshlq_s16(vshlq_n_s16(v187, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v194 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v439.val[1], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v188, (int16x8_t)v495.val[2]);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v190, (int16x8_t)v495.val[2]);
      int16x8_t v197 = vshlq_s16(vshlq_n_s16(v174, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v198 = (int8x16_t)vshlq_s16(v191, (int16x8_t)v495.val[2]);
      int16x8_t v199 = vshlq_s16(v192, (int16x8_t)v495.val[2]);
      int8x16_t v200 = (int8x16_t)vshlq_s16(vshlq_n_s16(v180, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v201 = vshlq_s16(vshlq_n_s16(v181, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v202 = (int8x16_t)vshlq_s16((int16x8_t)v189, (int16x8_t)v495.val[2]);
      int8x16_t v203 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[0], (int16x8_t)v495.val[2]);
      v495.val[3] = (int8x16_t)vshlq_s16(vshlq_n_s16(v183, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v204 = (int8x16_t)vshlq_s16(vshlq_n_s16(v168, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v205 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[1], (int16x8_t)v495.val[2]);
      int16x8_t v206 = vshlq_s16(vshlq_n_s16(v185, 6uLL), (int16x8_t)v495.val[2]);
      v495.val[2] = (int8x16_t)vshlq_s16(vshlq_n_s16(v186, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v207 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v208 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v209 = vpmaxq_s16(v207, v207);
      int16x8_t v210 = vpminq_s16(v208, v208);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v211 = vmaxq_s16(v209, v186);
      v212.i64[0] = 0x8000800080008000;
      v212.i64[1] = 0x8000800080008000;
      int16x8_t v213 = vminq_s16(v210, v212);
      int16x8_t v214 = vzip1q_s16(v209, v210);
      v189.i64[0] = 0x10001000100010;
      v189.i64[1] = 0x10001000100010;
      int16x8_t v215 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v214)), (int8x16_t)vceqzq_s16(v214));
      int16x8_t v216 = vpmaxq_s16(v215, v215);
      int8x16_t v466 = (int8x16_t)v199;
      int8x16_t v468 = (int8x16_t)v197;
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v218 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v219 = vpmaxq_s16(v217, v217);
      int16x8_t v220 = vpminq_s16(v218, v218);
      int16x8_t v221 = vmaxq_s16(v211, v219);
      int16x8_t v222 = vminq_s16(v213, v220);
      int16x8_t v223 = vzip1q_s16(v219, v220);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int8x16_t v462 = v495.val[3];
      int8x16_t v464 = (int8x16_t)v201;
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int16x8_t v230 = vmaxq_s16(v221, v228);
      int16x8_t v231 = vminq_s16(v222, v229);
      int16x8_t v232 = vzip1q_s16(v228, v229);
      int16x8_t v233 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v232)), (int8x16_t)vceqzq_s16(v232));
      int16x8_t v234 = vpmaxq_s16(v233, v233);
      int8x16_t v458 = v495.val[2];
      int8x16_t v460 = (int8x16_t)v206;
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v237 = vpmaxq_s16(v235, v235);
      int16x8_t v238 = vpminq_s16(v236, v236);
      int16x8_t v239 = vmaxq_s16(v230, v237);
      int8x16_t v240 = (int8x16_t)vminq_s16(v231, v238);
      int16x8_t v241 = vzip1q_s16(v237, v238);
      int16x8_t v242 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v241)), (int8x16_t)vceqzq_s16(v241));
      int16x8_t v243 = vpmaxq_s16(v242, v242);
      int8x16_t v244 = (int8x16_t)vmaxq_s16(vmaxq_s16(v216, v225), vmaxq_s16(v234, v243));
      int8x16_t v456 = (int8x16_t)v239;
      int16x8_t v245 = vclzq_s16(vsubq_s16(v239, (int16x8_t)v240));
      int8x16_t v246 = (int8x16_t)vsubq_s16((int16x8_t)v189, v245);
      int8x16_t v247 = (int8x16_t)vcgtq_s16((int16x8_t)v244, (int16x8_t)v246);
      int8x16_t v248 = vbslq_s8(v247, v246, v244);
      v244.i64[0] = 0x3000300030003;
      v244.i64[1] = 0x3000300030003;
      int16x8_t v249 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v216), (int16x8_t)v244), (int16x8_t)0);
      int8x16_t v250 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v225), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v251 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v234), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v252 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v243), (int16x8_t)v244), (int16x8_t)0);
      v495.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v248, v249);
      int8x16_t v253 = (int8x16_t)vsubq_s16((int16x8_t)v248, (int16x8_t)v250);
      int16x8_t v254 = vsubq_s16((int16x8_t)v248, v251);
      v495.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v248, v252);
      int8x16_t v255 = (int8x16_t)vceqq_s16(vaddq_s16(v252, v251), vnegq_s16(vaddq_s16(v249, (int16x8_t)v250)));
      v250.i64[0] = 0x4000400040004;
      v250.i64[1] = 0x4000400040004;
      int8x16_t v256 = vbicq_s8(v250, v255);
      v252.i64[0] = 0x7000700070007;
      v252.i64[1] = 0x7000700070007;
      int8x16_t v450 = (int8x16_t)v254;
      int8x16_t v452 = v495.val[3];
      int8x16_t v454 = v495.val[2];
      int16x8_t v257 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v246, v247), vaddq_s16((int16x8_t)v256, (int16x8_t)v256)), (int16x8_t)v495.val[3], v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v254, (int16x8_t)v253), (int16x8_t)v495.val[2]), 3uLL));
      int8x16_t v82 = v486;
      int16x8_t v155 = v487;
      v258.i64[0] = 0x2000200020002;
      v258.i64[1] = 0x2000200020002;
      int16x8_t v259 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v486, v244), (int16x8_t)v258), v189);
      v244.i64[0] = 0x8000800080008;
      v244.i64[1] = 0x8000800080008;
      int16x8_t v154 = v490;
      int8x16_t v153 = v491;
      int16x8_t v156 = v488;
      int16x8_t v158 = v489;
      int8x16_t v260 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v486, v244))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v244)), v259), v487, v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), v257).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v260))
      {
        v261.i64[0] = 0x9000900090009;
        v261.i64[1] = 0x9000900090009;
        int8x16_t v262 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v248), v258), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v247, v261), (int16x8_t)vmvnq_s8(v247)));
        v261.i64[0] = -1;
        v261.i64[1] = -1;
        v263.i64[0] = 0xF000F000F000FLL;
        v263.i64[1] = 0xF000F000F000FLL;
        int16x8_t v155 = (int16x8_t)vbslq_s8(v260, v452, (int8x16_t)v487);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v260, v253, (int8x16_t)v488);
        int16x8_t v158 = (int16x8_t)vbslq_s8(v260, v450, (int8x16_t)v489);
        int16x8_t v154 = (int16x8_t)vbslq_s8(v260, v454, (int8x16_t)v490);
        int8x16_t v153 = vbslq_s8(v260, v248, v491);
        int8x16_t v82 = vbslq_s8(v260, vorrq_s8(v262, v256), v486);
        int8x16_t v484 = vbslq_s8(v260, v458, v484);
        int8x16_t v485 = vbslq_s8(v260, vextq_s8(v439.val[3], v439.val[3], 8uLL), v485);
        int8x16_t v469 = vbslq_s8(v260, v193, v469);
        int8x16_t v470 = vbslq_s8(v260, v194, v470);
        int8x16_t v471 = vbslq_s8(v260, v204, v471);
        int8x16_t v472 = vbslq_s8(v260, v195, v472);
        int8x16_t v473 = vbslq_s8(v260, v202, v473);
        int8x16_t v474 = vbslq_s8(v260, v196, v474);
        int8x16_t v475 = vbslq_s8(v260, v468, v475);
        int8x16_t v476 = vbslq_s8(v260, v198, v476);
        int8x16_t v477 = vbslq_s8(v260, v466, v477);
        int8x16_t v478 = vbslq_s8(v260, v200, v478);
        int8x16_t v479 = vbslq_s8(v260, v464, v479);
        int8x16_t v480 = vbslq_s8(v260, v203, v480);
        int8x16_t v481 = vbslq_s8(v260, v462, v481);
        int8x16_t v482 = vbslq_s8(v260, v205, v482);
        int8x16_t v483 = vbslq_s8(v260, v460, v483);
        int8x16_t v492 = vbslq_s8(v260, v240, v492);
        int8x16_t v493 = vbslq_s8(v260, v456, v493);
        int8x16_t v494 = vbslq_s8(v260, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v261, vsubq_s16(v263, v245)), (int16x8_t)v240), v247), v494);
        int16x8_t v487 = v155;
        int16x8_t v488 = v156;
        int16x8_t v489 = v158;
        int16x8_t v490 = v154;
        int8x16_t v491 = v153;
        int8x16_t v486 = v82;
      }
    }
    int16x8_t v264 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v155));
    int8x16_t v469 = (int8x16_t)vaddq_s16(v264, (int16x8_t)v469);
    int8x16_t v470 = (int8x16_t)vaddq_s16((int16x8_t)v470, v264);
    int8x16_t v471 = (int8x16_t)vaddq_s16((int16x8_t)v471, v264);
    int8x16_t v472 = (int8x16_t)vaddq_s16((int16x8_t)v472, v264);
    int16x8_t v265 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v156));
    int8x16_t v473 = (int8x16_t)vaddq_s16((int16x8_t)v473, v265);
    int8x16_t v474 = (int8x16_t)vaddq_s16((int16x8_t)v474, v265);
    int8x16_t v475 = (int8x16_t)vaddq_s16((int16x8_t)v475, v265);
    int8x16_t v476 = (int8x16_t)vaddq_s16((int16x8_t)v476, v265);
    int16x8_t v266 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v158));
    int8x16_t v477 = (int8x16_t)vaddq_s16((int16x8_t)v477, v266);
    int8x16_t v478 = (int8x16_t)vaddq_s16((int16x8_t)v478, v266);
    int8x16_t v479 = (int8x16_t)vaddq_s16((int16x8_t)v479, v266);
    int8x16_t v480 = (int8x16_t)vaddq_s16((int16x8_t)v480, v266);
    int8x16_t v267 = vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v154));
    int8x16_t v481 = (int8x16_t)vaddq_s16((int16x8_t)v481, (int16x8_t)v267);
    int8x16_t v482 = (int8x16_t)vaddq_s16((int16x8_t)v482, (int16x8_t)v267);
    int8x16_t v483 = (int8x16_t)vaddq_s16((int16x8_t)v483, (int16x8_t)v267);
    int8x16_t v484 = (int8x16_t)vaddq_s16((int16x8_t)v484, (int16x8_t)v267);
    v267.i64[0] = 0x8000800080008;
    v267.i64[1] = 0x8000800080008;
    v268.i64[0] = 0x3000300030003;
    v268.i64[1] = 0x3000300030003;
    v269.i64[0] = 0x2000200020002;
    v269.i64[1] = 0x2000200020002;
    int8x16_t v270 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v268), v269);
    v269.i64[0] = 0x10001000100010;
    v269.i64[1] = 0x10001000100010;
    int16x8_t v271 = (int16x8_t)vandq_s8(v270, (int8x16_t)v269);
    v269.i64[0] = 0x7000700070007;
    v269.i64[1] = 0x7000700070007;
    int16x8_t v272 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v153, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v82, v267))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v267)), v271), v155, v269), vshlq_n_s16(vaddq_s16(v158, vaddq_s16(v156, v154)), 3uLL));
    int16x8_t v273 = vpaddq_s16(v272, v272);
    if ((unint64_t)(vpaddq_s16(v273, v273).i16[0] - 949) < 0xFFFFFFFFFFFFFBF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint64x2_t *)a3, a4, a5, a6, a7);
      return 128;
    }
    else
    {
      int8x16_t v274 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v275 = 8 * (a1 & 7);
      if (v275) {
        uint64_t v276 = *v274 & ~(-1 << v275);
      }
      else {
        uint64_t v276 = 0;
      }
      *a2 = 0;
      uint64_t v280 = ((v153.u16[0] << 20) - 0x100000) & 0xF00000;
      v281.i32[0] = v82.u16[1];
      v281.i32[1] = v82.u16[2];
      int8x8_t v282 = vand_s8((int8x8_t)vshl_u32(v281, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v283 = v282.i32[1];
      __int32 v284 = v282.i32[0] | v82.i8[0] & 0x1F;
      if (!v153.i16[0]) {
        uint64_t v280 = 0;
      }
      unint64_t v285 = (unint64_t)((v153.i8[4] - 1) & 0xF) << 28;
      if (!v153.i16[2]) {
        unint64_t v285 = 0;
      }
      v286.i32[0] = v153.u16[3];
      v286.i32[1] = v153.u16[1];
      int32x2_t v287 = vceqz_s32((int32x2_t)vand_s8(v286, (int8x8_t)0xFFFF0000FFFFLL));
      v288.i64[0] = v287.i32[0];
      v288.i64[1] = v287.i32[1];
      int8x16_t v289 = (int8x16_t)v288;
      int8x8_t v290 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v286, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v288.i64[0] = v290.u32[0];
      v288.i64[1] = v290.u32[1];
      int8x16_t v291 = vbicq_s8((int8x16_t)vshlq_u64(v288, (uint64x2_t)xmmword_242EA77F0), v289);
      v289.i64[0] = v285;
      v289.i64[1] = v284 | v283 | ((unint64_t)(v82.i8[6] & 0x1F) << 15) | v280;
      int8x16_t v292 = vorrq_s8(v289, v291);
      uint64_t v293 = v485.i64[0];
      unint64_t v294 = vorrq_s8(v292, (int8x16_t)vdupq_laneq_s64((int64x2_t)v292, 1)).u64[0];
      unint64_t v295 = (v294 << v275) | v276;
      if (v275 >= 0x1C)
      {
        *int8x16_t v274 = v295;
        unint64_t v295 = v294 >> (-8 * (a1 & 7u));
      }
      v296.i64[0] = WORD1(v293);
      v296.i64[1] = WORD2(v293);
      v297.i64[0] = 0xFFFFLL;
      v297.i64[1] = 0xFFFFLL;
      int8x16_t v298 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v296, v297), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v299 = v298.i64[0] | v293 & 0x3FF | v298.i64[1] | ((unint64_t)(HIWORD(v293) & 0x3FF) << 30);
      unint64_t v300 = (v275 + 36) & 0x3C;
      unint64_t v301 = v295 | (v299 << v300);
      if (v300 >= 0x18)
      {
        *(void *)((char *)v274 + (((v275 + 36) >> 3) & 8)) = v301;
        unint64_t v301 = v299 >> -(char)v300;
      }
      unint64_t v302 = v275 + 76;
      int8x16_t v303 = (int8x16_t)vsubq_s16((int16x8_t)v491, v487);
      int8x16_t v304 = (int8x16_t)vsubq_s16((int16x8_t)v491, v488);
      int8x16_t v305 = (int8x16_t)vsubq_s16((int16x8_t)v491, v489);
      int8x16_t v306 = (int8x16_t)vsubq_s16((int16x8_t)v491, v490);
      *(uint8x8_t *)v303.i8 = vqmovn_u16((uint16x8_t)v303);
      *(uint8x8_t *)v304.i8 = vqmovn_u16((uint16x8_t)v304);
      *(uint8x8_t *)v305.i8 = vqmovn_u16((uint16x8_t)v305);
      *(uint8x8_t *)v306.i8 = vqmovn_u16((uint16x8_t)v306);
      int16x8_t v307 = (int16x8_t)vtrn1q_s8(v303, v304);
      int16x8_t v308 = (int16x8_t)vtrn2q_s8(v303, v304);
      int8x16_t v309 = vtrn1q_s8(v305, v306);
      int16x8_t v310 = (int16x8_t)vtrn2q_s8(v305, v306);
      int8x16_t v311 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v307, (int16x8_t)v309), (int32x4_t)vzip1q_s16(v308, v310)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v307, (int16x8_t)v309), (int32x4_t)vtrn2q_s16(v308, v310)));
      v309.i64[0] = 0x202020202020202;
      v309.i64[1] = 0x202020202020202;
      int8x16_t v312 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v486.i8, (int16x4_t)0x4000400040004)), v309);
      v309.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v309.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v305.i64[0] = -1;
      v305.i64[1] = -1;
      uint8x16_t v313 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v305, (uint8x16_t)vorrq_s8(v312, v309)), v311);
      int16x8_t v314 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v312.i8);
      int16x8_t v315 = (int16x8_t)vmovl_high_u8((uint8x16_t)v312);
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v313.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)), (int16x8_t)vshlq_u16(vmovl_high_u8(v313), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v315)));
      uint16x8_t v317 = (uint16x8_t)vpaddq_s16(v314, v315);
      int32x4_t v318 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v317.i8);
      int32x4_t v319 = (int32x4_t)vmovl_high_u16(v317);
      int32x4_t v320 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v319)));
      int32x4_t v321 = vpaddq_s32(v318, v319);
      v322.i64[0] = v320.u32[0];
      v322.i64[1] = v320.u32[1];
      uint64x2_t v323 = (uint64x2_t)v322;
      v322.i64[0] = v320.u32[2];
      v322.i64[1] = v320.u32[3];
      uint64x2_t v324 = (uint64x2_t)v322;
      v322.i64[0] = v321.u32[0];
      v322.i64[1] = v321.u32[1];
      int64x2_t v325 = v322;
      v322.i64[0] = v321.u32[2];
      v322.i64[1] = v321.u32[3];
      int64x2_t v326 = vpaddq_s64((int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)), (int64x2_t)vshlq_u64(v324, (uint64x2_t)vzip1q_s64((int64x2_t)0, v322)));
      int64x2_t v327 = vpaddq_s64(v325, v322);
      uint64_t v328 = (v275 + 76) & 0x3C;
      unint64_t v329 = (v326.i64[0] << v328) | v301;
      if ((unint64_t)(v327.i64[0] + v328) >= 0x40)
      {
        *(void *)((char *)v274 + ((v302 >> 3) & 0x18)) = v329;
        unint64_t v329 = (unint64_t)v326.i64[0] >> -(char)v328;
      }
      unint64_t v330 = v327.i64[0] + v302;
      unint64_t v331 = v329 | (v326.i64[1] << v330);
      if ((v330 & 0x3F) + v327.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v326.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      unint64_t v332 = v330 + v327.i64[1];
      v333.i64[0] = 0x8000800080008;
      v333.i64[1] = 0x8000800080008;
      v334.i64[0] = -1;
      v334.i64[1] = -1;
      int16x8_t v335 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v486, v333), (int8x16_t)0, 8uLL), v491);
      v336.i64[0] = 0xF000F000F000FLL;
      v336.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v337 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v334, (uint16x8_t)vaddq_s16(v335, v336)), v494);
      int32x4_t v338 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v335.i8);
      int32x4_t v339 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v337.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v338)), (int32x4_t)vmovl_high_u16(v337));
      int32x4_t v340 = vpaddq_s32(v338, (int32x4_t)vmovl_high_u16((uint16x8_t)v335));
      v341.i64[0] = v339.u32[0];
      v341.i64[1] = v339.u32[1];
      uint64x2_t v342 = (uint64x2_t)v341;
      v341.i64[0] = v339.u32[2];
      v341.i64[1] = v339.u32[3];
      uint64x2_t v343 = (uint64x2_t)v341;
      v341.i64[0] = v340.u32[0];
      v341.i64[1] = v340.u32[1];
      int64x2_t v344 = v341;
      v341.i64[0] = v340.u32[2];
      v341.i64[1] = v340.u32[3];
      int64x2_t v345 = vpaddq_s64((int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)), (int64x2_t)vshlq_u64(v343, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)));
      int64x2_t v346 = vpaddq_s64(v344, v341);
      unint64_t v347 = (v345.i64[0] << v332) | v331;
      if (v346.i64[0] + (v332 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v345.i64[0] >> -(v332 & 0x3F);
        if ((v332 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346.i64[0] + v332;
      unint64_t v349 = v347 | (v345.i64[1] << v348);
      if ((v348 & 0x3F) + v346.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v345.i64[1] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348 + v346.i64[1];
      int16x8_t v351 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v487, 8uLL);
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      v353.i64[0] = -1;
      v353.i64[1] = -1;
      uint16x8_t v354 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v353, (uint16x8_t)vaddq_s16(v351, v352)), v469);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16((uint16x8_t)v351);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v354), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v350) | v349;
      if (v364.i64[0] + (v350 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        if ((v350 & 0x3F) != 0) {
          unint64_t v365 = (unint64_t)v363.i64[0] >> -(v350 & 0x3F);
        }
        else {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364.i64[0] + v350;
      uint64_t v367 = (v364.i64[0] + v350) & 0x3F;
      unint64_t v368 = v365 | (v363.i64[1] << v366);
      if ((unint64_t)(v367 + v364.i64[1]) >= 0x40)
      {
        *(void *)((char *)v274 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v363.i64[1] >> -(char)v367;
        if (!v367) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v366 + v364.i64[1];
      v370.i64[0] = 0xF000F000F000FLL;
      v370.i64[1] = 0xF000F000F000FLL;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v373 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v371, (uint16x8_t)vaddq_s16(v487, v370)), *(int8x16_t *)((char *)&v469 + i));
        int32x4_t v374 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v487.i8);
        int32x4_t v375 = (int32x4_t)vmovl_high_u16((uint16x8_t)v487);
        int32x4_t v376 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v374)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)));
        int32x4_t v377 = vpaddq_s32(v374, v375);
        v378.i64[0] = v376.u32[0];
        v378.i64[1] = v376.u32[1];
        uint64x2_t v379 = (uint64x2_t)v378;
        v378.i64[0] = v376.u32[2];
        v378.i64[1] = v376.u32[3];
        uint64x2_t v380 = (uint64x2_t)v378;
        v378.i64[0] = v377.u32[0];
        v378.i64[1] = v377.u32[1];
        int64x2_t v381 = v378;
        v378.i64[0] = v377.u32[2];
        v378.i64[1] = v377.u32[3];
        int64x2_t v382 = vpaddq_s64((int64x2_t)vshlq_u64(v379, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)), (int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)));
        int64x2_t v383 = vpaddq_s64(v381, v378);
        unint64_t v384 = (v382.i64[0] << v369) | v368;
        if (v383.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v382.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v383.i64[0] + v369;
        unint64_t v368 = v384 | (v382.i64[1] << v385);
        if ((v385 & 0x3F) + v383.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v382.i64[1] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v385 + v383.i64[1];
      }
      uint64_t v386 = 0;
      v387.i64[0] = 0xF000F000F000FLL;
      v387.i64[1] = 0xF000F000F000FLL;
      v388.i64[0] = -1;
      v388.i64[1] = -1;
      do
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v388, (uint16x8_t)vaddq_s16(v488, v387)), *(int8x16_t *)((char *)&v473 + v386));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v488.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v488);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v369) | v368;
        if (v399.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v369;
        unint64_t v368 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v401 + v399.i64[1];
        v386 += 16;
      }
      while (v386 != 64);
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v489, v403)), *(int8x16_t *)((char *)&v477 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v489.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v489);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v369) | v368;
        if (v415.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v369;
        unint64_t v368 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      uint64_t v418 = 0;
      v419.i64[0] = 0xF000F000F000FLL;
      v419.i64[1] = 0xF000F000F000FLL;
      v420.i64[0] = -1;
      v420.i64[1] = -1;
      do
      {
        uint16x8_t v421 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v420, (uint16x8_t)vaddq_s16(v490, v419)), *(int8x16_t *)((char *)&v481 + v418));
        int32x4_t v422 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v490.i8);
        int32x4_t v423 = (int32x4_t)vmovl_high_u16((uint16x8_t)v490);
        int32x4_t v424 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v421.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v422)), (int32x4_t)vshlq_u32(vmovl_high_u16(v421), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v423)));
        int32x4_t v425 = vpaddq_s32(v422, v423);
        v426.i64[0] = v424.u32[0];
        v426.i64[1] = v424.u32[1];
        uint64x2_t v427 = (uint64x2_t)v426;
        v426.i64[0] = v424.u32[2];
        v426.i64[1] = v424.u32[3];
        uint64x2_t v428 = (uint64x2_t)v426;
        v426.i64[0] = v425.u32[0];
        v426.i64[1] = v425.u32[1];
        int64x2_t v429 = v426;
        v426.i64[0] = v425.u32[2];
        v426.i64[1] = v425.u32[3];
        int64x2_t v430 = vpaddq_s64((int64x2_t)vshlq_u64(v427, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)), (int64x2_t)vshlq_u64(v428, (uint64x2_t)vzip1q_s64((int64x2_t)0, v426)));
        int64x2_t v431 = vpaddq_s64(v429, v426);
        unint64_t v432 = (v430.i64[0] << v369) | v368;
        if (v431.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v432;
          unint64_t v432 = (unint64_t)v430.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v432 = 0;
          }
        }
        unint64_t v433 = v431.i64[0] + v369;
        unint64_t v368 = v432 | (v430.i64[1] << v433);
        if ((v433 & 0x3F) + v431.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v433 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v430.i64[1] >> -(v433 & 0x3F);
          if ((v433 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v433 + v431.i64[1];
        v418 += 16;
      }
      while (v418 != 64);
      if ((v369 & 0x3F) != 0) {
        *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
      }
      unint64_t result = (v369 - v275 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v277 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v278 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v278.i8 = vorr_s8(*(int8x8_t *)v278.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL));
    *(_DWORD *)a1 = v278.i32[0];
    *(unsigned char *)(a1 + 4) = v278.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  long long v76 = 0u;
  long long v77 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  uint64_t v10 = a6;
  long long v66 = 0u;
  long long v67 = 0u;
  if (a5 > 3)
  {
    uint64_t v13 = a5 & 0xFC;
    if (a5 == v13)
    {
      uint64_t v14 = 0;
      int16x8_t v15 = a3 + 1;
      int16x8_t v16 = &v70;
      v17.i64[0] = 0xFC00FC00FC00FC00;
      v17.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        int16x8_t v18 = v16;
        int16x8_t v19 = v15;
        uint64_t v20 = a5;
        do
        {
          int8x16_t v21 = vandq_s8((int8x16_t)vshrq_n_u64(v19[-1], 6uLL), v17);
          int8x16_t v22 = vandq_s8((int8x16_t)vshrq_n_u64(*v19, 6uLL), v17);
          int16x8_t v23 = v18 + 2;
          *((void *)v18 - 8) = v21.i64[0];
          *((void *)v18 - 4) = v21.i64[1];
          *(void *)int16x8_t v18 = v22.i64[0];
          v18 += 8;
          *int16x8_t v23 = v22.i64[1];
          v19 += 2;
          v20 -= 4;
        }
        while (v20);
        ++v14;
        int16x8_t v15 = (uint64x2_t *)((char *)v15 + a4);
        int16x8_t v16 = (long long *)((char *)v16 + 8);
      }
      while (v14 != a6);
    }
    else
    {
      uint64_t v24 = 0;
      int16x8_t v25 = a3 + 1;
      int16x8_t v26 = &v70;
      int16x8_t v27 = (uint64_t *)((char *)&v66 + ((32 * a5) & 0x1F80));
      v28.i64[0] = 0xFC00FC00FC00FC00;
      v28.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        int16x8_t v29 = v26;
        int16x8_t v30 = v25;
        uint64_t v31 = a5 & 0xFC;
        do
        {
          int8x16_t v32 = vandq_s8((int8x16_t)vshrq_n_u64(v30[-1], 6uLL), v28);
          int8x16_t v33 = vandq_s8((int8x16_t)vshrq_n_u64(*v30, 6uLL), v28);
          int16x8_t v34 = v29 + 2;
          *((void *)v29 - 8) = v32.i64[0];
          *((void *)v29 - 4) = v32.i64[1];
          *(void *)int16x8_t v29 = v33.i64[0];
          v29 += 8;
          *int16x8_t v34 = v33.i64[1];
          v30 += 2;
          v31 -= 4;
        }
        while (v31);
        int16x8_t v35 = (unint64_t *)((char *)a3 + 8 * v13 + v24 * a4);
        int8x16_t v36 = v27;
        uint64_t v37 = a5 - v13;
        do
        {
          unint64_t v38 = *v35++;
          *int8x16_t v36 = (v38 >> 6) & 0x3FF03FF03FF03FFLL;
          v36 += 4;
          --v37;
        }
        while (v37);
        ++v24;
        int16x8_t v25 = (uint64x2_t *)((char *)v25 + a4);
        int16x8_t v26 = (long long *)((char *)v26 + 8);
        ++v27;
      }
      while (v24 != v10);
    }
  }
  else
  {
    int16x8_t v11 = a3 + 1;
    int16x8_t v12 = (uint64_t *)&v68;
    do
    {
      *(v12 - 4) = ((unint64_t)v11[-1].i64[0] >> 6) & 0x3FF03FF03FF03FFLL;
      if (a5 != 1)
      {
        *int16x8_t v12 = ((unint64_t)v11[-1].i64[1] >> 6) & 0x3FF03FF03FF03FFLL;
        if (a5 != 2) {
          v12[4] = ((unint64_t)v11->i64[0] >> 6) & 0x3FF03FF03FF03FFLL;
        }
      }
      int16x8_t v11 = (uint64x2_t *)((char *)v11 + a4);
      ++v12;
      --v10;
    }
    while (v10);
  }
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v66);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v68);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v66 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v68 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v70);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v72);
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)((char *)&v70 + 8));
  uint32x4_t v40 = vmovl_u16(*(uint16x4_t *)((char *)&v72 + 8));
  if (a5 >= 4) {
    unsigned int v41 = 4;
  }
  else {
    unsigned int v41 = a5;
  }
  if (a5 >= 4) {
    unsigned int v42 = a5 - 4;
  }
  else {
    unsigned int v42 = 0;
  }
  if (a6 >= 2) {
    unsigned int v43 = 2;
  }
  else {
    unsigned int v43 = a6;
  }
  uint32x4_t v64 = v39;
  uint32x4_t v65 = v40;
  if (a6 >= 2) {
    unsigned int v44 = a6 - 2;
  }
  else {
    unsigned int v44 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v58, a7, v41, v43);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v67);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v69);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v67 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v69 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v71);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v73);
  uint32x4_t v64 = vmovl_u16(*(uint16x4_t *)((char *)&v71 + 8));
  uint32x4_t v65 = vmovl_u16(*(uint16x4_t *)((char *)&v73 + 8));
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v44;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v58, a7, v41, v47);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v74);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v76);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v74 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v76 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v78);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v80);
  uint32x4_t v49 = vmovl_u16(*(uint16x4_t *)((char *)&v78 + 8));
  uint32x4_t v50 = vmovl_u16(*(uint16x4_t *)((char *)&v80 + 8));
  if (a5 >= 8) {
    unsigned int v51 = 4;
  }
  else {
    unsigned int v51 = v42;
  }
  uint32x4_t v64 = v49;
  uint32x4_t v65 = v50;
  int v52 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 64, (uint64_t)&v58, a7, v51, v43);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v75);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v77);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v75 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v77 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v79);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v81);
  uint32x4_t v64 = vmovl_u16(*(uint16x4_t *)((char *)&v79 + 8));
  uint32x4_t v65 = vmovl_u16(*(uint16x4_t *)((char *)&v81 + 8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 96, (uint64_t)&v58, a7, v51, v47);
  if (v52) {
    char v54 = 4;
  }
  else {
    char v54 = 0;
  }
  if (v48) {
    char v55 = 2;
  }
  else {
    char v55 = 0;
  }
  if (result) {
    char v56 = -8;
  }
  else {
    char v56 = -16;
  }
  *a2 = v56 | v54 | v46 | v55;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v331 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v300 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v299 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v298 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v297 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v295 = v9;
  BOOL v296 = v14;
  BOOL v15 = a4 < 2 || a5 == 0;
  do
  {
    *(unsigned int *)((char *)&v327 + v8 * 4) = 10;
    v315[v8] = 1;
    *(_DWORD *)((char *)&v314[2] + v8 * 4) = 512;
    int16x8_t v23 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      int16x8_t v25 = &v317[v8];
      if ((*v23 ^ 0x200) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = *v23 ^ 0x200;
      }
      *int16x8_t v25 = v24;
      if ((v23[4] ^ 0x200) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v23[4] ^ 0x200;
      }
      v25[4] = v26;
      if ((v23[8] ^ 0x200) == 1) {
        unsigned int v27 = 0;
      }
      else {
        unsigned int v27 = v23[8] ^ 0x200;
      }
      v25[8] = v27;
      if ((v23[12] ^ 0x200) == 1) {
        unsigned int v28 = 0;
      }
      else {
        unsigned int v28 = v23[12] ^ 0x200;
      }
      v25[12] = v28;
      if ((v23[16] ^ 0x200) == 1) {
        unsigned int v29 = 0;
      }
      else {
        unsigned int v29 = v23[16] ^ 0x200;
      }
      v25[16] = v29;
      if ((v23[20] ^ 0x200) == 1) {
        unsigned int v30 = 0;
      }
      else {
        unsigned int v30 = v23[20] ^ 0x200;
      }
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x200;
      if (v31 == 1) {
        unsigned int v31 = 0;
      }
      v25[24] = v31;
      int v33 = v23[28] ^ 0x200;
      if (v33 == 1) {
        unsigned int v32 = 0;
      }
      else {
        unsigned int v32 = v33;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v24 = *v23 ^ 0x200;
      int16x8_t v25 = &v317[v8];
      *int16x8_t v25 = v24;
      unsigned int v26 = v23[4] ^ 0x200;
      v25[4] = v26;
      unsigned int v27 = v23[8] ^ 0x200;
      v25[8] = v27;
      unsigned int v28 = v23[12] ^ 0x200;
      v25[12] = v28;
      unsigned int v29 = v23[16] ^ 0x200;
      v25[16] = v29;
      unsigned int v30 = v23[20] ^ 0x200;
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x200;
      v25[24] = v31;
      unsigned int v32 = v23[28] ^ 0x200;
    }
    else
    {
      unsigned int v24 = *v23;
      int16x8_t v25 = &v317[v8];
      *int16x8_t v25 = *v23;
      unsigned int v26 = v23[4];
      v25[4] = v26;
      unsigned int v27 = v23[8];
      v25[8] = v27;
      unsigned int v28 = v23[12];
      v25[12] = v28;
      unsigned int v29 = v23[16];
      v25[16] = v29;
      unsigned int v30 = v23[20];
      v25[20] = v30;
      unsigned int v31 = v23[24];
      v25[24] = v31;
      unsigned int v32 = v23[28];
    }
    v25[28] = v32;
    int16x8_t v34 = &v322[v8 + 4];
    v322[v8 + 4] = v24;
    *(int *)((char *)&v323 + v8 * 4) = v24;
    v322[v8] = 0;
    unsigned int v35 = v24;
    if (v15)
    {
      if (v296) {
        goto LABEL_61;
      }
    }
    else
    {
      if (v26 < v24)
      {
        v322[v8] = 1;
        *(int *)((char *)&v323 + v8 * 4) = v26;
        unsigned int v35 = v26;
      }
      if (v24 >= v26) {
        int8x16_t v36 = &v322[v8 + 4];
      }
      else {
        int8x16_t v36 = &v317[v8 + 4];
      }
      unsigned int v24 = *v36;
      *int16x8_t v34 = v24;
      if (v296)
      {
LABEL_61:
        if (v295) {
          goto LABEL_62;
        }
        goto LABEL_79;
      }
    }
    if (v27 < v35)
    {
      v322[v8] = 2;
      *(int *)((char *)&v323 + v8 * 4) = v27;
      unsigned int v35 = v27;
    }
    if (v24 >= v27) {
      uint64_t v37 = &v322[v8 + 4];
    }
    else {
      uint64_t v37 = &v317[v8 + 8];
    }
    unsigned int v24 = *v37;
    *int16x8_t v34 = *v37;
    if (v295)
    {
LABEL_62:
      if (v297) {
        goto LABEL_63;
      }
      goto LABEL_85;
    }
LABEL_79:
    if (v28 < v35)
    {
      v322[v8] = 3;
      *(int *)((char *)&v323 + v8 * 4) = v28;
      unsigned int v35 = v28;
    }
    if (v24 >= v28) {
      unint64_t v38 = &v322[v8 + 4];
    }
    else {
      unint64_t v38 = &v317[v8 + 12];
    }
    unsigned int v24 = *v38;
    *int16x8_t v34 = *v38;
    if (v297)
    {
LABEL_63:
      if (v299) {
        goto LABEL_64;
      }
      goto LABEL_91;
    }
LABEL_85:
    if (v29 < v35)
    {
      v322[v8] = 4;
      *(int *)((char *)&v323 + v8 * 4) = v29;
      unsigned int v35 = v29;
    }
    if (v24 >= v29) {
      uint32x4_t v39 = &v322[v8 + 4];
    }
    else {
      uint32x4_t v39 = &v317[v8 + 16];
    }
    unsigned int v24 = *v39;
    *int16x8_t v34 = *v39;
    if (v299)
    {
LABEL_64:
      if (v298) {
        goto LABEL_65;
      }
      goto LABEL_97;
    }
LABEL_91:
    if (v30 < v35)
    {
      v322[v8] = 5;
      *(int *)((char *)&v323 + v8 * 4) = v30;
      unsigned int v35 = v30;
    }
    if (v24 >= v30) {
      uint32x4_t v40 = &v322[v8 + 4];
    }
    else {
      uint32x4_t v40 = &v317[v8 + 20];
    }
    unsigned int v24 = *v40;
    *int16x8_t v34 = *v40;
    if (v298)
    {
LABEL_65:
      if (v300) {
        goto LABEL_108;
      }
LABEL_103:
      if (v32 < v35)
      {
        v322[v8] = 7;
        *(int *)((char *)&v323 + v8 * 4) = v32;
        unsigned int v35 = v32;
      }
      unsigned int v42 = &v317[v8 + 28];
      if (v24 >= v32) {
        unsigned int v42 = &v322[v8 + 4];
      }
      unsigned int v24 = *v42;
      *int16x8_t v34 = *v42;
      goto LABEL_108;
    }
LABEL_97:
    if (v31 < v35)
    {
      v322[v8] = 6;
      *(int *)((char *)&v323 + v8 * 4) = v31;
      unsigned int v35 = v31;
    }
    if (v24 >= v31) {
      unsigned int v41 = &v322[v8 + 4];
    }
    else {
      unsigned int v41 = &v317[v8 + 24];
    }
    unsigned int v24 = *v41;
    *int16x8_t v34 = *v41;
    if (!v300) {
      goto LABEL_103;
    }
LABEL_108:
    unsigned int v43 = __clz(v24 - v35);
    int v44 = 32 - v43;
    if ((int)(32 - v43) <= 1) {
      int v44 = 1;
    }
    unsigned int v45 = v44 - 1;
    if (v43 - 29 < 3) {
      unsigned int v45 = 2;
    }
    if (v35) {
      BOOL v46 = v35 == 1023;
    }
    else {
      BOOL v46 = 1;
    }
    int v47 = !v46;
    if (v45 < 3 && v24 == v35) {
      unsigned int v45 = v47;
    }
    *(unsigned int *)((char *)&v318 + v8 * 4) = v45;
    if ((a3 | 2) == 3)
    {
      BOOL v49 = 0;
      if (v24 >= 0x200 && v35 <= 0x1FF) {
        BOOL v49 = kDQuadParamTable[10 * v45 + 168] == 0;
      }
      if (v45 <= 5)
      {
LABEL_130:
        if (!v49) {
          goto LABEL_31;
        }
      }
    }
    else
    {
      BOOL v49 = 0;
      if (v45 <= 5) {
        goto LABEL_130;
      }
    }
    int v16 = kDQuadParamTable[10 * v45 + 164] - v49;
    unsigned int v17 = v16 + 3;
    if (v49) {
      int v18 = 0;
    }
    else {
      int v18 = -2;
    }
    int v19 = v35 & ~(-1 << (7 - v16));
    if (v17 >= 0xA) {
      int v19 = 0;
    }
    int v20 = v19 + v18;
    unsigned int v21 = __clz(v20 + v24 - v35);
    if (v20 >= 1 && v21 < v43) {
      *(unsigned int *)((char *)&v318 + v8 * 4) = v45 + 1;
    }
LABEL_31:
    ++v8;
  }
  while (v8 != 4);
  v314[0] = 0;
  v314[1] = 0;
  v313[0] = 0;
  v313[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v315, &v318, v314, v313);
  unint64_t v50 = 0;
  int v51 = 0;
  if (a4) {
    BOOL v52 = a5 == 0;
  }
  else {
    BOOL v52 = 1;
  }
  int v53 = v52;
  while (2)
  {
    uint64_t v55 = v315[v50 / 4];
    int v56 = *(unsigned int *)((char *)&v318 + v50);
    int16x8_t v57 = &kDQuadParamTable[160 * v55 + 10 * v56];
    int v58 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
          + 4 * v55
          + 1);
    int v59 = v57[5];
    unsigned int v60 = v57[4] + v58;
    *(unsigned int *)((char *)&v309 + v50) = v60;
    int v61 = v59 + v58;
    *(unsigned int *)((char *)&v305 + v50) = v61;
    unint64_t v62 = *((void *)v57 + 1);
    int v63 = *(_DWORD *)((char *)v313 + v50) - *(_DWORD *)((char *)v314 + v50);
    if (v63 < 0)
    {
      if (kDQuadParamTable[160 * v55 + 7 + 10 * v56] < *(_DWORD *)((char *)v314 + v50)
                                                                    - *(_DWORD *)((char *)v313 + v50))
      {
        *(unsigned int *)((char *)&v305 + v50) = --v61;
        if (!kDQuadParamTable[160 * v55 + 8 + 10 * v56])
        {
          int v64 = -1;
LABEL_145:
          *(unsigned int *)((char *)&v309 + v50) = v64 + v60;
        }
      }
    }
    else if (v63)
    {
      v61 += v63;
      *(unsigned int *)((char *)&v305 + v50) = v61;
      int v64 = v63;
      goto LABEL_145;
    }
    if (v55 == 5)
    {
      int v65 = (v63 < 2) | v51;
      if (v56 == 1) {
        int v51 = v65;
      }
    }
    if (a3 == 4)
    {
      if (v55 == 3) {
        int v66 = 31744;
      }
      else {
        int v66 = 0;
      }
      if (v55 == 4) {
        int v67 = 2139095040;
      }
      else {
        int v67 = v66;
      }
      int v68 = 1 << (*(unsigned int *)((char *)&v327 + v50) - 1);
      if (v53)
      {
        if (v15) {
          goto LABEL_160;
        }
LABEL_174:
        unsigned int v72 = v317[v50 / 4 + 4];
        BOOL v74 = (v67 & ~v72) == 0 || v72 == v68;
        v51 |= v74;
        if (!v296) {
          goto LABEL_181;
        }
LABEL_161:
        if (v295) {
          goto LABEL_162;
        }
LABEL_188:
        unsigned int v78 = v317[v50 / 4 + 12];
        BOOL v80 = (v67 & ~v78) == 0 || v78 == v68;
        v51 |= v80;
        if (!v297) {
          goto LABEL_195;
        }
LABEL_163:
        if (v299) {
          goto LABEL_164;
        }
LABEL_202:
        unsigned int v84 = v317[v50 / 4 + 20];
        BOOL v86 = (v67 & ~v84) == 0 || v84 == v68;
        v51 |= v86;
        if (!v298) {
          goto LABEL_209;
        }
LABEL_165:
        if (!v300) {
          goto LABEL_216;
        }
      }
      else
      {
        unsigned int v69 = v317[v50 / 4];
        BOOL v71 = (v67 & ~v69) == 0 || v69 == v68;
        v51 |= v71;
        if (!v15) {
          goto LABEL_174;
        }
LABEL_160:
        if (v296) {
          goto LABEL_161;
        }
LABEL_181:
        unsigned int v75 = v317[v50 / 4 + 8];
        BOOL v77 = (v67 & ~v75) == 0 || v75 == v68;
        v51 |= v77;
        if (!v295) {
          goto LABEL_188;
        }
LABEL_162:
        if (v297) {
          goto LABEL_163;
        }
LABEL_195:
        unsigned int v81 = v317[v50 / 4 + 16];
        BOOL v83 = (v67 & ~v81) == 0 || v81 == v68;
        v51 |= v83;
        if (!v299) {
          goto LABEL_202;
        }
LABEL_164:
        if (v298) {
          goto LABEL_165;
        }
LABEL_209:
        unsigned int v87 = v317[v50 / 4 + 24];
        BOOL v89 = (v67 & ~v87) == 0 || v87 == v68;
        v51 |= v89;
        if (!v300)
        {
LABEL_216:
          unsigned int v90 = v317[v50 / 4 + 28];
          BOOL v92 = (v67 & ~v90) == 0 || v90 == v68;
          v51 |= v92;
        }
      }
    }
    if (v62 >> v61 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)19,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v50
                                       + 16))
      int v54 = 1;
    else {
      int v54 = v53;
    }
    v51 |= v54;
    v50 += 4;
    if (v50 != 16) {
      continue;
    }
    break;
  }
  uint64_t v93 = 0;
  uint64_t v303 = 0;
  uint64_t v304 = 0;
  memset(v302, 0, sizeof(v302));
  int8x16_t v94 = v317;
  int8x16_t v95 = v316;
  do
  {
    uint64_t v96 = 0;
    unsigned int v97 = 0;
    unsigned int v98 = *(&v327 + v93);
    if (v98 >= *(&v309 + v93)) {
      unsigned int v99 = *(&v309 + v93);
    }
    else {
      unsigned int v99 = *(&v327 + v93);
    }
    *(&v309 + v93) = v99;
    int16x8_t v100 = &kDQuadParamTable[160 * v315[v93] + 10 * *(&v318 + v93)];
    unsigned int v101 = *(&v305 + v93);
    if (v100[5]) {
      unsigned int v102 = v98;
    }
    else {
      unsigned int v102 = 0;
    }
    if (v102 < v101) {
      unsigned int v101 = v102;
    }
    int v103 = *(&v323 + v93) & (-1 << (v98 - v99));
    int16x8_t v104 = &v317[v93];
    int v105 = *v104 - v103;
    int16x8_t v106 = &v316[2 * v93];
    if (v53) {
      int v105 = 0;
    }
    int v107 = v104[4] - v103;
    if (v15) {
      int v107 = 0;
    }
    *int16x8_t v106 = v105;
    v106[1] = v107;
    int v108 = v104[8] - v103;
    if (v296) {
      int v108 = 0;
    }
    int v109 = v104[12] - v103;
    if (v295) {
      int v109 = 0;
    }
    v106[2] = v108;
    v106[3] = v109;
    int v110 = v104[16] - v103;
    if (v297) {
      int v110 = 0;
    }
    int v111 = v104[20] - v103;
    if (v299) {
      int v111 = 0;
    }
    v106[4] = v110;
    v106[5] = v111;
    uint64_t v112 = -1 << v98;
    *(&v305 + v93) = v101;
    unint64_t v113 = *((void *)v100 + 1);
    *((_DWORD *)&v303 + v93) = v103;
    unint64_t v114 = v113 >> v101;
    int v115 = v104[24] - v103;
    if (v298) {
      int v115 = 0;
    }
    int v116 = v104[28] - v103;
    if (v300) {
      int v116 = 0;
    }
    v106[6] = v115;
    v106[7] = v116;
    if (v114 <= 1) {
      unint64_t v117 = 1;
    }
    else {
      unint64_t v117 = v114;
    }
    uint64_t v118 = 4 * v322[v93];
    int16x8_t v119 = &byte_242EA911D;
    do
    {
      if (v118 != v96)
      {
        if (v101) {
          unint64_t v120 = *(unsigned int *)((char *)v95 + v96) / v117;
        }
        else {
          LODWORD(v120) = 0;
        }
        int16x8_t v121 = (int *)v302 + 7 * v93 + v97;
        *int16x8_t v121 = v120;
        if (v114 >= 2)
        {
          unint64_t v122 = *(unsigned int *)((char *)v95 + v96);
          if (v122)
          {
            if (v122 / v117 * v117 == v122 && ((v122 / v117) & 1) != 0)
            {
              if (v103 || v120 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v124 = v94[v96], v125 = *((unsigned int *)&v314[2] + v93), v124 != v125)
                  && ((a3 | 2) != 3 || v117 + v125 != v124))
                {
                  LODWORD(v120) = v120 - 1;
                  *int16x8_t v121 = v120;
                }
              }
              else
              {
                LODWORD(v120) = 1;
              }
            }
          }
        }
        if ((unint64_t)v120 >> v101 || v94[v96] == ~v112) {
          *int16x8_t v121 = ~(-1 << v101);
        }
        if (*v119 >= a5 || *(v119 - 1) >= a4) {
          *int16x8_t v121 = 0;
        }
        ++v97;
      }
      v96 += 4;
      v119 += 2;
    }
    while (v96 != 32);
    ++v93;
    v95 += 2;
    ++v94;
  }
  while (v93 != 4);
  int16x8_t v126 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v127 = 8 * (a1 & 7);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  if (v51)
  {
    uint64_t v128 = 0;
    uint64_t v129 = 0;
    unsigned int v130 = v327;
    unsigned int v131 = v328;
    uint64_t v132 = v327 - 2;
    uint64_t v133 = v328 - 2;
    unsigned int v135 = v329;
    unsigned int v134 = v330;
    uint64_t v136 = v329 - 2;
    uint64_t v137 = v330 - 2;
    uint64_t v138 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v139 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v128;
      BOOL v140 = v139[1] >= a5 || *v139 >= a4;
      char v141 = v140;
      if (v140)
      {
        unint64_t v142 = 0;
        if (v132 > 0x100) {
          goto LABEL_301;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)v317[4 * v128] >> 2;
        if (v132 > 0x100) {
          goto LABEL_301;
        }
      }
      if (v130 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v132) <= 0x100)
      {
        uint64_t v143 = 0;
        unint64_t v144 = v130 - 2;
        do
        {
          unint64_t v145 = 64 - v138;
          if (64 - v138 >= v144) {
            unint64_t v145 = v144;
          }
          v126[v129] |= ((v142 >> v143) & ~(-1 << v145)) << v138;
          v143 += v145;
          unint64_t v146 = v145 + v138;
          v129 += v146 >> 6;
          uint64_t v138 = v146 & 0x3F;
          v144 -= v145;
        }
        while (v144);
      }
LABEL_301:
      if (v141)
      {
        unint64_t v147 = 0;
        if (v133 > 0x100) {
          goto LABEL_311;
        }
      }
      else
      {
        unint64_t v147 = (unint64_t)v317[4 * v128 + 1] >> 2;
        if (v133 > 0x100) {
          goto LABEL_311;
        }
      }
      if (v131 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v133) <= 0x100)
      {
        uint64_t v148 = 0;
        unint64_t v149 = v131 - 2;
        do
        {
          unint64_t v150 = 64 - v138;
          if (64 - v138 >= v149) {
            unint64_t v150 = v149;
          }
          v126[v129] |= ((v147 >> v148) & ~(-1 << v150)) << v138;
          v148 += v150;
          unint64_t v151 = v150 + v138;
          v129 += v151 >> 6;
          uint64_t v138 = v151 & 0x3F;
          v149 -= v150;
        }
        while (v149);
      }
LABEL_311:
      if (v141)
      {
        unint64_t v152 = 0;
        if (v136 > 0x100) {
          goto LABEL_321;
        }
      }
      else
      {
        unint64_t v152 = (unint64_t)v317[4 * v128 + 2] >> 2;
        if (v136 > 0x100) {
          goto LABEL_321;
        }
      }
      if (v135 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v136) <= 0x100)
      {
        uint64_t v153 = 0;
        unint64_t v154 = v135 - 2;
        do
        {
          unint64_t v155 = 64 - v138;
          if (64 - v138 >= v154) {
            unint64_t v155 = v154;
          }
          v126[v129] |= ((v152 >> v153) & ~(-1 << v155)) << v138;
          v153 += v155;
          unint64_t v156 = v155 + v138;
          v129 += v156 >> 6;
          uint64_t v138 = v156 & 0x3F;
          v154 -= v155;
        }
        while (v154);
      }
LABEL_321:
      if (v141)
      {
        unint64_t v157 = 0;
        if (v137 <= 0x100) {
          goto LABEL_325;
        }
      }
      else
      {
        unint64_t v157 = (unint64_t)v317[4 * v128 + 3] >> 2;
        if (v137 <= 0x100)
        {
LABEL_325:
          if (v134 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v137) <= 0x100)
          {
            uint64_t v158 = 0;
            unint64_t v159 = v134 - 2;
            do
            {
              unint64_t v160 = 64 - v138;
              if (64 - v138 >= v159) {
                unint64_t v160 = v159;
              }
              v126[v129] |= ((v157 >> v158) & ~(-1 << v160)) << v138;
              v158 += v160;
              unint64_t v161 = v160 + v138;
              v129 += v161 >> 6;
              uint64_t v138 = v161 & 0x3F;
              v159 -= v160;
            }
            while (v159);
          }
        }
      }
      if (++v128 == 8) {
        return v51 & 1;
      }
    }
  }
  unsigned int v162 = v318;
  char v163 = v323 | v318;
  if (v323 | v318)
  {
    char v163 = v318 - 2;
    if (v318 > 2)
    {
      unsigned int v166 = 0;
      unsigned int v165 = 0;
      char v164 = 1;
    }
    else
    {
      char v163 = 0;
      char v164 = 0;
      unsigned int v165 = v318 + 1;
      unsigned int v166 = 2;
    }
  }
  else
  {
    unsigned int v165 = 0;
    char v164 = 0;
    unsigned int v166 = 2;
  }
  unint64_t v167 = ((unint64_t)(v163 & 7) << v127) | *v126;
  *int16x8_t v126 = v167;
  uint64_t v168 = v127 | 3;
  unsigned int v169 = v319;
  char v170 = v324 | v319;
  if (v324 | v319)
  {
    if (v319 < 3)
    {
      char v170 = 0;
      char v171 = 0;
      unsigned int v172 = v319 + 1;
      goto LABEL_341;
    }
    unsigned int v173 = 0;
    unsigned int v172 = 0;
    char v170 = v319 - 2;
    char v171 = 1;
  }
  else
  {
    unsigned int v172 = 0;
    char v171 = 0;
LABEL_341:
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v168 - v127) <= 0xFD)
  {
    *int16x8_t v126 = ((unint64_t)(v170 & 7) << v168) | v167;
    uint64_t v168 = v127 | 6;
  }
  unsigned int v174 = v320;
  if (v325 | v320)
  {
    if (v320 < 3)
    {
      unsigned int v175 = 0;
      char v176 = 0;
      unsigned int v301 = v320 + 1;
      goto LABEL_349;
    }
    unsigned int v177 = 0;
    unsigned int v301 = 0;
    unsigned int v175 = v320 - 2;
    char v176 = 1;
  }
  else
  {
    unsigned int v175 = 0;
    unsigned int v301 = 0;
    char v176 = 0;
LABEL_349:
    unsigned int v177 = 2;
  }
  if ((unint64_t)(v168 - v127 - 254) >= 0xFFFFFFFFFFFFFEFFLL)
  {
    uint64_t v178 = 0;
    uint64_t v179 = 0;
    unint64_t v180 = 3;
    do
    {
      unint64_t v181 = 64 - v168;
      if (64 - v168 >= v180) {
        unint64_t v181 = v180;
      }
      v126[v178] |= (((unint64_t)v175 >> v179) & ~(-1 << v181)) << v168;
      v179 += v181;
      unint64_t v182 = v181 + v168;
      v178 += v182 >> 6;
      uint64_t v168 = v182 & 0x3F;
      v180 -= v181;
    }
    while (v180);
  }
  else
  {
    uint64_t v178 = 0;
  }
  unsigned int v183 = v321;
  int v184 = v326 | v321;
  LODWORD(v185) = v321 - 2;
  if (v321 >= 3)
  {
    unsigned int v186 = 0;
  }
  else
  {
    LODWORD(v185) = 0;
    unsigned int v186 = 2;
  }
  if (v321 < 3) {
    unsigned int v187 = v321 + 1;
  }
  else {
    unsigned int v187 = 0;
  }
  BOOL v188 = v184 == 0;
  if (v184) {
    unint64_t v185 = v185;
  }
  else {
    unint64_t v185 = 0;
  }
  if (v184) {
    uint64_t v189 = v186;
  }
  else {
    uint64_t v189 = 2;
  }
  if (v188) {
    unint64_t v190 = 0;
  }
  else {
    unint64_t v190 = v187;
  }
  BOOL v191 = !v188 && v321 >= 3;
  if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0x100)
  {
    uint64_t v192 = 0;
    unint64_t v193 = 3;
    do
    {
      unint64_t v194 = 64 - v168;
      if (64 - v168 >= v193) {
        unint64_t v194 = v193;
      }
      v126[v178] |= ((v185 >> v192) & ~(-1 << v194)) << v168;
      v192 += v194;
      unint64_t v195 = v194 + v168;
      v178 += v195 >> 6;
      uint64_t v168 = v195 & 0x3F;
      v193 -= v194;
    }
    while (v193);
  }
  if (v164)
  {
    int v196 = 12;
    if (v171) {
      goto LABEL_395;
    }
LABEL_389:
    unint64_t v201 = v173;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v173 <= 0x100)
    {
      uint64_t v202 = 0;
      do
      {
        unint64_t v203 = 64 - v168;
        if (64 - v168 >= v201) {
          unint64_t v203 = v201;
        }
        v126[v178] |= (((unint64_t)v172 >> v202) & ~(-1 << v203)) << v168;
        v202 += v203;
        unint64_t v204 = v203 + v168;
        v178 += v204 >> 6;
        uint64_t v168 = v204 & 0x3F;
        v201 -= v203;
      }
      while (v201);
    }
    v196 += v173;
  }
  else
  {
    unint64_t v197 = v166;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v166 <= 0x100)
    {
      uint64_t v198 = 0;
      do
      {
        unint64_t v199 = 64 - v168;
        if (64 - v168 >= v197) {
          unint64_t v199 = v197;
        }
        v126[v178] |= (((unint64_t)v165 >> v198) & ~(-1 << v199)) << v168;
        v198 += v199;
        unint64_t v200 = v199 + v168;
        v178 += v200 >> 6;
        uint64_t v168 = v200 & 0x3F;
        v197 -= v199;
      }
      while (v197);
    }
    int v196 = v166 | 0xC;
    if ((v171 & 1) == 0) {
      goto LABEL_389;
    }
  }
LABEL_395:
  if (v176)
  {
    if (v191) {
      goto LABEL_397;
    }
LABEL_405:
    if ((unint64_t)(v168 - v127 + (v178 << 6) + v189) <= 0x100)
    {
      uint64_t v210 = 0;
      unint64_t v211 = v189;
      do
      {
        unint64_t v212 = 64 - v168;
        if (64 - v168 >= v211) {
          unint64_t v212 = v211;
        }
        v126[v178] |= ((v190 >> v210) & ~(-1 << v212)) << v168;
        v210 += v212;
        unint64_t v213 = v212 + v168;
        v178 += v213 >> 6;
        uint64_t v168 = v213 & 0x3F;
        v211 -= v212;
      }
      while (v211);
    }
    v196 += v189;
    unsigned int v205 = v327;
    if (!v162) {
      goto LABEL_411;
    }
LABEL_415:
    unsigned int v215 = v309;
    if (v309 <= 0x100 && v309 && v168 - v127 + (v178 << 6) + (unint64_t)v309 <= 0x100)
    {
      uint64_t v216 = 0;
      unint64_t v217 = v303 >> (v205 - v309);
      unint64_t v218 = v309;
      do
      {
        unint64_t v219 = 64 - v168;
        if (64 - v168 >= v218) {
          unint64_t v219 = v218;
        }
        v126[v178] |= ((v217 >> v216) & ~(-1 << v219)) << v168;
        v216 += v219;
        unint64_t v220 = v219 + v168;
        v178 += v220 >> 6;
        uint64_t v168 = v220 & 0x3F;
        v218 -= v219;
      }
      while (v218);
    }
    v196 += v215;
    unsigned int v214 = v328;
    if (v169) {
      goto LABEL_423;
    }
LABEL_524:
    if (v214 == 2 || v214 >= 0x10) {
      goto LABEL_423;
    }
  }
  else
  {
    unint64_t v206 = v177;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v177 <= 0x100)
    {
      uint64_t v207 = 0;
      do
      {
        unint64_t v208 = 64 - v168;
        if (64 - v168 >= v206) {
          unint64_t v208 = v206;
        }
        v126[v178] |= (((unint64_t)v301 >> v207) & ~(-1 << v208)) << v168;
        v207 += v208;
        unint64_t v209 = v208 + v168;
        v178 += v209 >> 6;
        uint64_t v168 = v209 & 0x3F;
        v206 -= v208;
      }
      while (v206);
    }
    v196 += v177;
    if (!v191) {
      goto LABEL_405;
    }
LABEL_397:
    unsigned int v205 = v327;
    if (v162) {
      goto LABEL_415;
    }
LABEL_411:
    if (v205 == 2 || v205 >= 0x10) {
      goto LABEL_415;
    }
    unsigned int v214 = v328;
    if (!v169) {
      goto LABEL_524;
    }
LABEL_423:
    unsigned int v221 = v310;
    if (v310 <= 0x100 && v310 && v168 - v127 + (v178 << 6) + (unint64_t)v310 <= 0x100)
    {
      uint64_t v222 = 0;
      unint64_t v223 = (HIDWORD(v303) >> (v214 - v310));
      unint64_t v224 = v310;
      do
      {
        unint64_t v225 = 64 - v168;
        if (64 - v168 >= v224) {
          unint64_t v225 = v224;
        }
        v126[v178] |= ((v223 >> v222) & ~(-1 << v225)) << v168;
        v222 += v225;
        unint64_t v226 = v225 + v168;
        v178 += v226 >> 6;
        uint64_t v168 = v226 & 0x3F;
        v224 -= v225;
      }
      while (v224);
    }
    v196 += v221;
  }
  if (v174 || v329 == 2 || v329 >= 0x10)
  {
    unsigned int v227 = v311;
    if (v311 <= 0x100 && v311 && v168 - v127 + (v178 << 6) + (unint64_t)v311 <= 0x100)
    {
      uint64_t v228 = 0;
      unint64_t v229 = v304 >> (v329 - v311);
      unint64_t v230 = v311;
      do
      {
        unint64_t v231 = 64 - v168;
        if (64 - v168 >= v230) {
          unint64_t v231 = v230;
        }
        v126[v178] |= ((v229 >> v228) & ~(-1 << v231)) << v168;
        v228 += v231;
        unint64_t v232 = v231 + v168;
        v178 += v232 >> 6;
        uint64_t v168 = v232 & 0x3F;
        v230 -= v231;
      }
      while (v230);
    }
    v196 += v227;
  }
  if (v183 || v330 == 2 || v330 >= 0x10)
  {
    unsigned int v233 = v312;
    if (v312 <= 0x100 && v312 && v168 - v127 + (v178 << 6) + (unint64_t)v312 <= 0x100)
    {
      uint64_t v234 = 0;
      unint64_t v235 = (HIDWORD(v304) >> (v330 - v312));
      unint64_t v236 = v312;
      do
      {
        unint64_t v237 = 64 - v168;
        if (64 - v168 >= v236) {
          unint64_t v237 = v236;
        }
        v126[v178] |= ((v235 >> v234) & ~(-1 << v237)) << v168;
        v234 += v237;
        unint64_t v238 = v237 + v168;
        v178 += v238 >> 6;
        uint64_t v168 = v238 & 0x3F;
        v236 -= v237;
      }
      while (v236);
    }
    v196 += v233;
  }
  unint64_t v239 = v305;
  if (v305)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0x100)
    {
      uint64_t v240 = 0;
      unint64_t v241 = v322[0];
      unint64_t v242 = 3;
      do
      {
        unint64_t v243 = 64 - v168;
        if (64 - v168 >= v242) {
          unint64_t v243 = v242;
        }
        v126[v178] |= ((v241 >> v240) & ~(-1 << v243)) << v168;
        v240 += v243;
        unint64_t v244 = v243 + v168;
        v178 += v244 >> 6;
        uint64_t v168 = v244 & 0x3F;
        v242 -= v243;
      }
      while (v242);
    }
    v196 += 3;
  }
  unint64_t v245 = v306;
  if (v306)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0x100)
    {
      uint64_t v246 = 0;
      unint64_t v247 = v322[1];
      unint64_t v248 = 3;
      do
      {
        unint64_t v249 = 64 - v168;
        if (64 - v168 >= v248) {
          unint64_t v249 = v248;
        }
        v126[v178] |= ((v247 >> v246) & ~(-1 << v249)) << v168;
        v246 += v249;
        unint64_t v250 = v249 + v168;
        v178 += v250 >> 6;
        uint64_t v168 = v250 & 0x3F;
        v248 -= v249;
      }
      while (v248);
    }
    v196 += 3;
  }
  unint64_t v251 = v307;
  if (v307)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0x100)
    {
      uint64_t v252 = 0;
      unint64_t v253 = v322[2];
      unint64_t v254 = 3;
      do
      {
        unint64_t v255 = 64 - v168;
        if (64 - v168 >= v254) {
          unint64_t v255 = v254;
        }
        v126[v178] |= ((v253 >> v252) & ~(-1 << v255)) << v168;
        v252 += v255;
        unint64_t v256 = v255 + v168;
        v178 += v256 >> 6;
        uint64_t v168 = v256 & 0x3F;
        v254 -= v255;
      }
      while (v254);
    }
    v196 += 3;
  }
  unint64_t v257 = v308;
  if (v308)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0x100)
    {
      uint64_t v258 = 0;
      unint64_t v259 = v322[3];
      unint64_t v260 = 3;
      do
      {
        unint64_t v261 = 64 - v168;
        if (64 - v168 >= v260) {
          unint64_t v261 = v260;
        }
        v126[v178] |= ((v259 >> v258) & ~(-1 << v261)) << v168;
        v258 += v261;
        unint64_t v262 = v261 + v168;
        v178 += v262 >> 6;
        uint64_t v168 = v262 & 0x3F;
        v260 -= v261;
      }
      while (v260);
    }
    v196 += 3;
  }
  unsigned int v263 = 256 - v196;
  unsigned int v264 = (256 - v196) / 7u;
  unint64_t v265 = v263 % 7;
  if ((v265 - 257) >= 0xFFFFFF00 && v168 - v127 + (v178 << 6) + v265 <= 0x100)
  {
    do
    {
      unint64_t v266 = 64 - v168;
      if (64 - v168 >= v265) {
        unint64_t v266 = v265;
      }
      unint64_t v267 = v266 + v168;
      v178 += v267 >> 6;
      uint64_t v168 = v267 & 0x3F;
      v265 -= v266;
    }
    while (v265);
  }
  uint64_t v268 = 0;
  while (2)
  {
    if (v239 && v239 <= 0x100 && v168 - v127 + (v178 << 6) + v239 <= 0x100)
    {
      uint64_t v269 = 0;
      unint64_t v270 = *((unsigned int *)v302 + v268);
      unint64_t v271 = v239;
      do
      {
        unint64_t v272 = 64 - v168;
        if (64 - v168 >= v271) {
          unint64_t v272 = v271;
        }
        v126[v178] |= ((v270 >> v269) & ~(-1 << v272)) << v168;
        v269 += v272;
        unint64_t v273 = v272 + v168;
        v178 += v273 >> 6;
        uint64_t v168 = v273 & 0x3F;
        v271 -= v272;
      }
      while (v271);
    }
    if (!v245)
    {
      int v279 = v239;
      if (!v251) {
        goto LABEL_508;
      }
      goto LABEL_501;
    }
    if (v245 <= 0x100 && v168 - v127 + (v178 << 6) + v245 <= 0x100)
    {
      uint64_t v274 = 0;
      unint64_t v275 = *((unsigned int *)&v302[1] + v268 + 3);
      unint64_t v276 = v245;
      do
      {
        unint64_t v277 = 64 - v168;
        if (64 - v168 >= v276) {
          unint64_t v277 = v276;
        }
        v126[v178] |= ((v275 >> v274) & ~(-1 << v277)) << v168;
        v274 += v277;
        unint64_t v278 = v277 + v168;
        v178 += v278 >> 6;
        uint64_t v168 = v278 & 0x3F;
        v276 -= v277;
      }
      while (v276);
    }
    int v279 = v245 + v239;
    if (v251)
    {
LABEL_501:
      if (v251 <= 0x100 && v168 - v127 + (v178 << 6) + v251 <= 0x100)
      {
        uint64_t v280 = 0;
        unint64_t v281 = *((unsigned int *)&v302[3] + v268 + 2);
        unint64_t v282 = v251;
        do
        {
          unint64_t v283 = 64 - v168;
          if (64 - v168 >= v282) {
            unint64_t v283 = v282;
          }
          v126[v178] |= ((v281 >> v280) & ~(-1 << v283)) << v168;
          v280 += v283;
          unint64_t v284 = v283 + v168;
          v178 += v284 >> 6;
          uint64_t v168 = v284 & 0x3F;
          v282 -= v283;
        }
        while (v282);
      }
      v279 += v251;
    }
LABEL_508:
    if (v257)
    {
      if (v257 <= 0x100 && v168 - v127 + (v178 << 6) + v257 <= 0x100)
      {
        uint64_t v285 = 0;
        unint64_t v286 = *((unsigned int *)&v302[5] + v268 + 1);
        unint64_t v287 = v257;
        do
        {
          unint64_t v288 = 64 - v168;
          if (64 - v168 >= v287) {
            unint64_t v288 = v287;
          }
          v126[v178] |= ((v286 >> v285) & ~(-1 << v288)) << v168;
          v285 += v288;
          unint64_t v289 = v288 + v168;
          v178 += v289 >> 6;
          uint64_t v168 = v289 & 0x3F;
          v287 -= v288;
        }
        while (v287);
      }
      v279 += v257;
    }
    unint64_t v290 = v264 - v279;
    if (v290 && v290 <= 0x100 && v168 - v127 + (v178 << 6) + v290 <= 0x100)
    {
      do
      {
        unint64_t v291 = 64 - v168;
        if (64 - v168 >= v290) {
          unint64_t v291 = v290;
        }
        unint64_t v292 = v291 + v168;
        v178 += v292 >> 6;
        uint64_t v168 = v292 & 0x3F;
        v290 -= v291;
      }
      while (v290);
    }
    if (++v268 != 7) {
      continue;
    }
    return v51 & 1;
  }
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(unint64_t result, uint64_t a2, int a3)
{
  unint64_t v3 = result & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = 8 * (result & 7);
  unsigned int v5 = a3 & 0xFFFFFFFD;
  int v6 = ((a3 & 0xFFFFFFFD) == 1) << 9;
  if (a3 == 4)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 8 * (result & 7);
    while ((unint64_t)(v9 - v4 + (v8 << 6) - 249) >= 0xFFFFFFFFFFFFFEFFLL)
    {
      unsigned __int8 v11 = 0;
      uint64_t v12 = 0;
      unint64_t v13 = 8;
      do
      {
        unint64_t v14 = 64 - v9;
        if (64 - v9 >= v13) {
          unint64_t v14 = v13;
        }
        v11 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v14)) << v12;
        v12 += v14;
        unint64_t v15 = v14 + v9;
        v8 += v15 >> 6;
        uint64_t v9 = v15 & 0x3F;
        v13 -= v14;
      }
      while (v13);
      uint64_t result = 16 * v7;
      *(_DWORD *)(a2 + 16 * v7) = (4 * v11) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 249) < 0xFFFFFFFFFFFFFEFFLL) {
        goto LABEL_4;
      }
      unsigned __int8 v16 = 0;
      uint64_t v17 = 0;
      unint64_t v18 = 8;
      do
      {
        unint64_t v19 = 64 - v9;
        if (64 - v9 >= v18) {
          unint64_t v19 = v18;
        }
        v16 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v19)) << v17;
        v17 += v19;
        unint64_t v20 = v19 + v9;
        v8 += v20 >> 6;
        uint64_t v9 = v20 & 0x3F;
        v18 -= v19;
      }
      while (v18);
      uint64_t result = a2 + 16 * v7;
      *(_DWORD *)(result + 4) = (4 * v16) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 249) >= 0xFFFFFFFFFFFFFEFFLL)
      {
        unsigned __int8 v21 = 0;
        uint64_t v22 = 0;
        unint64_t v23 = 8;
        do
        {
          unint64_t v24 = 64 - v9;
          if (64 - v9 >= v23) {
            unint64_t v24 = v23;
          }
          v21 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v24)) << v22;
          v22 += v24;
          unint64_t v25 = v24 + v9;
          v8 += v25 >> 6;
          uint64_t v9 = v25 & 0x3F;
          v23 -= v24;
        }
        while (v23);
        uint64_t result = a2 + 16 * v7;
        *(_DWORD *)(result + 8) = (4 * v21) ^ v6;
        if ((unint64_t)(v9 - v4 + (v8 << 6) - 249) >= 0xFFFFFFFFFFFFFEFFLL)
        {
          unsigned __int8 v10 = 0;
          uint64_t v26 = 0;
          uint64_t result = 8;
          do
          {
            unint64_t v27 = 64 - v9;
            if (64 - v9 >= result) {
              unint64_t v27 = result;
            }
            v10 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v27)) << v26;
            v26 += v27;
            unint64_t v28 = v27 + v9;
            v8 += v28 >> 6;
            uint64_t v9 = v28 & 0x3F;
            result -= v27;
          }
          while (result);
        }
        else
        {
          unsigned __int8 v10 = 0;
        }
        goto LABEL_6;
      }
LABEL_5:
      unsigned __int8 v10 = 0;
      *(_DWORD *)(a2 + 16 * v7 + 8) = v6;
LABEL_6:
      *(_DWORD *)(a2 + 16 * v7++ + 12) = (4 * v10) ^ v6;
      if (v7 == 8) {
        return result;
      }
    }
    *(_DWORD *)(a2 + 16 * v7) = v6;
LABEL_4:
    *(_DWORD *)(a2 + 16 * v7 + 4) = v6;
    goto LABEL_5;
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t result = 8 * (result & 7);
  do
  {
    if (result - v4 + (v30 << 6) - 249 >= 0xFFFFFFFFFFFFFEFFLL)
    {
      unsigned __int8 v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 8;
      do
      {
        unint64_t v34 = 64 - result;
        if (64 - result >= v33) {
          unint64_t v34 = v33;
        }
        v31 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v34)) << v32;
        v32 += v34;
        unint64_t v35 = v34 + result;
        v30 += v35 >> 6;
        uint64_t result = v35 & 0x3F;
        v33 -= v34;
      }
      while (v33);
    }
    else
    {
      unsigned __int8 v31 = 0;
    }
    int v36 = 4 * v31;
    BOOL v37 = v36 == 512 && v5 == 1;
    if (!v37 && v36)
    {
      if (v36 == 1020) {
        int v36 = 1023;
      }
      else {
        v36 |= 2 - (v31 & 1);
      }
    }
    *(_DWORD *)(a2 + 16 * v29) = v36 ^ v6;
    if (result - v4 + (v30 << 6) - 249 >= 0xFFFFFFFFFFFFFEFFLL)
    {
      unsigned __int8 v38 = 0;
      uint64_t v39 = 0;
      unint64_t v40 = 8;
      do
      {
        unint64_t v41 = 64 - result;
        if (64 - result >= v40) {
          unint64_t v41 = v40;
        }
        v38 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v41)) << v39;
        v39 += v41;
        unint64_t v42 = v41 + result;
        v30 += v42 >> 6;
        uint64_t result = v42 & 0x3F;
        v40 -= v41;
      }
      while (v40);
    }
    else
    {
      unsigned __int8 v38 = 0;
    }
    int v43 = 4 * v38;
    if ((v43 != 512 || v5 != 1) && v43 != 0)
    {
      int v46 = (2 - (v38 & 1)) | v43;
      if (v43 == 1020) {
        int v43 = 1023;
      }
      else {
        int v43 = v46;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 4) = v43 ^ v6;
    if (result - v4 + (v30 << 6) - 249 >= 0xFFFFFFFFFFFFFEFFLL)
    {
      unsigned __int8 v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 8;
      do
      {
        unint64_t v50 = 64 - result;
        if (64 - result >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v50)) << v48;
        v48 += v50;
        unint64_t v51 = v50 + result;
        v30 += v51 >> 6;
        uint64_t result = v51 & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    else
    {
      unsigned __int8 v47 = 0;
    }
    int v52 = 4 * v47;
    if ((v52 != 512 || v5 != 1) && v52 != 0)
    {
      int v55 = (2 - (v47 & 1)) | v52;
      if (v52 == 1020) {
        int v52 = 1023;
      }
      else {
        int v52 = v55;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 8) = v52 ^ v6;
    if (result - v4 + (v30 << 6) - 249 >= 0xFFFFFFFFFFFFFEFFLL)
    {
      unsigned __int8 v56 = 0;
      uint64_t v57 = 0;
      unint64_t v58 = 8;
      do
      {
        unint64_t v59 = 64 - result;
        if (64 - result >= v58) {
          unint64_t v59 = v58;
        }
        v56 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v59)) << v57;
        v57 += v59;
        unint64_t v60 = v59 + result;
        v30 += v60 >> 6;
        uint64_t result = v60 & 0x3F;
        v58 -= v59;
      }
      while (v58);
    }
    else
    {
      unsigned __int8 v56 = 0;
    }
    int v61 = 4 * v56;
    if ((v61 != 512 || v5 != 1) && v61 != 0)
    {
      int v64 = (2 - (v56 & 1)) | v61;
      if (v61 == 1020) {
        int v61 = 1023;
      }
      else {
        int v61 = v64;
      }
    }
    *(_DWORD *)(a2 + 16 * v29++ + 12) = v61 ^ v6;
  }
  while (v29 != 8);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v281 = *MEMORY[0x263EF8340];
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = 8 * (a1 & 7);
  unint64_t v6 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (v6 >> v5) & 7;
  uint64_t v8 = v5 | 3;
  uint64_t v9 = (v6 >> (v5 | 3u)) & 7;
  if ((v5 | 3uLL) - v5 <= 0xFD) {
    uint64_t v10 = ((8 * (a1 & 7)) | 6) - v5;
  }
  else {
    uint64_t v10 = v8 - v5;
  }
  if ((unint64_t)(v8 - v5) <= 0xFD) {
    uint64_t v11 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v11 = (8 * (a1 & 7)) | 3;
  }
  if ((unint64_t)(v8 - v5) <= 0xFD) {
    int v12 = v9;
  }
  else {
    int v12 = 0;
  }
  int v260 = v12;
  if ((unint64_t)(v10 - 254) >= 0xFFFFFFFFFFFFFEFFLL)
  {
    uint64_t v15 = 0;
    int v13 = 0;
    uint64_t v17 = 0;
    unint64_t v18 = 3;
    do
    {
      unint64_t v19 = 64 - v11;
      if (64 - v11 >= v18) {
        unint64_t v19 = v18;
      }
      v13 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v19)) << v17);
      v17 += v19;
      v15 += (v19 + v11) >> 6;
      uint64_t v11 = (v19 + v11) & 0x3F;
      v18 -= v19;
    }
    while (v18);
    uint64_t v14 = v15 << 6;
    uint64_t v10 = v11 - v5;
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x100)
    {
      int v16 = 0;
      uint64_t v20 = 0;
      unint64_t v21 = 3;
      do
      {
        unint64_t v22 = 64 - v11;
        if (64 - v11 >= v21) {
          unint64_t v22 = v21;
        }
        v16 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v22)) << v20);
        v20 += v22;
        v15 += (v22 + v11) >> 6;
        uint64_t v11 = (v22 + v11) & 0x3F;
        v21 -= v22;
      }
      while (v21);
      uint64_t v14 = v15 << 6;
      uint64_t v10 = v11 - v5;
    }
    else
    {
      int v16 = 0;
    }
  }
  else
  {
    int v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    int v16 = 0;
  }
  memset_pattern16(&__b, &unk_242EA8890, 0x10uLL);
  char v23 = 0;
  unint64_t v24 = 2 * (v7 == 0);
  int v263 = 2 * (v7 == 0);
  if (v7)
  {
    int v26 = v260;
    int v258 = 0;
    unsigned int v28 = v7 + 2;
  }
  else
  {
    if (v10 + v14 + v24 > 0x100)
    {
      int v26 = v260;
    }
    else
    {
      char v23 = 0;
      uint64_t v25 = 0;
      int v26 = v260;
      do
      {
        unint64_t v27 = 64 - v11;
        if (64 - v11 >= v24) {
          unint64_t v27 = v24;
        }
        v23 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v27)) << v25;
        v25 += v27;
        v15 += (v27 + v11) >> 6;
        uint64_t v11 = (v27 + v11) & 0x3F;
        v24 -= v27;
      }
      while (v24);
    }
    unsigned int v29 = v23 & 3;
    if (v29 == 3)
    {
      int v258 = 0;
      unsigned int v28 = 2;
    }
    else
    {
      uint64_t v30 = 4 * v29;
      int v258 = *(_DWORD *)((char *)&unk_242EAA170 + v30);
      unsigned int v28 = *(_DWORD *)((char *)&unk_242EAA17C + v30);
    }
  }
  char v31 = 0;
  v280[0] = v28;
  v279[0] = 1;
  unint64_t v32 = 2 * (v26 == 0);
  int v262 = 2 * (v26 == 0);
  if (!v26 && v11 - v5 + (v15 << 6) + v32 <= 0x100)
  {
    char v31 = 0;
    uint64_t v33 = 0;
    do
    {
      unint64_t v34 = 64 - v11;
      if (64 - v11 >= v32) {
        unint64_t v34 = v32;
      }
      v31 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v34)) << v33;
      v33 += v34;
      v15 += (v34 + v11) >> 6;
      uint64_t v11 = (v34 + v11) & 0x3F;
      v32 -= v34;
    }
    while (v32);
  }
  if (v26)
  {
    int v257 = 0;
    unsigned int v35 = v26 + 2;
  }
  else
  {
    unsigned int v36 = v31 & 3;
    if (v36 == 3)
    {
      int v257 = 0;
      unsigned int v35 = 2;
    }
    else
    {
      uint64_t v37 = 4 * v36;
      int v257 = *(_DWORD *)((char *)&unk_242EAA170 + v37);
      unsigned int v35 = *(_DWORD *)((char *)&unk_242EAA17C + v37);
    }
  }
  char v38 = 0;
  v280[1] = v35;
  v279[1] = 1;
  unint64_t v39 = 2 * (v13 == 0);
  int v261 = 2 * (v13 == 0);
  if (!v13 && v11 - v5 + (v15 << 6) + v39 <= 0x100)
  {
    char v38 = 0;
    uint64_t v40 = 0;
    do
    {
      unint64_t v41 = 64 - v11;
      if (64 - v11 >= v39) {
        unint64_t v41 = v39;
      }
      v38 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v41)) << v40;
      v40 += v41;
      v15 += (v41 + v11) >> 6;
      uint64_t v11 = (v41 + v11) & 0x3F;
      v39 -= v41;
    }
    while (v39);
  }
  if ((v13 & 7) != 0)
  {
    int v256 = 0;
    int v42 = (v13 & 7) + 2;
  }
  else
  {
    unsigned int v43 = v38 & 3;
    if (v43 == 3)
    {
      int v256 = 0;
      int v42 = 2;
    }
    else
    {
      uint64_t v44 = 4 * v43;
      int v256 = *(_DWORD *)((char *)&unk_242EAA170 + v44);
      int v42 = *(_DWORD *)((char *)&unk_242EAA17C + v44);
    }
  }
  char v45 = 0;
  v280[2] = v42;
  v279[2] = 1;
  uint64_t v46 = 2 * (v16 == 0);
  if (!v16 && (unint64_t)(v11 - v5 + (v15 << 6) + v46) <= 0x100)
  {
    char v45 = 0;
    uint64_t v47 = 0;
    unint64_t v48 = 2 * (v16 == 0);
    do
    {
      unint64_t v49 = 64 - v11;
      if (64 - v11 >= v48) {
        unint64_t v49 = v48;
      }
      v45 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v49)) << v47;
      v47 += v49;
      v15 += (v49 + v11) >> 6;
      uint64_t v11 = (v49 + v11) & 0x3F;
      v48 -= v49;
    }
    while (v48);
  }
  int v50 = v16 & 7;
  if ((v16 & 7) != 0)
  {
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    int v255 = 0;
    unsigned int v53 = v50 + 2;
  }
  else
  {
    unsigned int v54 = v45 & 3;
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    if (v54 == 3)
    {
      int v255 = 0;
      unsigned int v53 = 2;
    }
    else
    {
      uint64_t v55 = 4 * v54;
      int v255 = *(_DWORD *)((char *)&unk_242EAA170 + v55);
      unsigned int v53 = *(_DWORD *)((char *)&unk_242EAA17C + v55);
    }
  }
  unsigned int v56 = v53;
  v280[3] = v53;
  v279[3] = 1;
  uint64_t v273 = 0;
  uint64_t v274 = 0;
  uint64_t v271 = 0;
  uint64_t v272 = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v279, v280, &v273, &v271);
  unsigned int v57 = v52;
  unint64_t v58 = &kDQuadParamTable[10 * v52];
  unsigned int v59 = v58[164] + 3;
  int v60 = v58[165];
  LODWORD(v61) = v60 + 3;
  int v62 = v271 - v273;
  if ((int)v271 - (int)v273 >= 0)
  {
    unsigned int v63 = v51;
    int v64 = v42;
    unsigned int v65 = v56;
    int v66 = v263;
    if (!v62) {
      goto LABEL_77;
    }
    LODWORD(v61) = v62 + v61;
    goto LABEL_71;
  }
  unsigned int v67 = v52;
  int v68 = kDQuadParamTable[10 * v52 + 167];
  unsigned int v63 = v51;
  int v64 = v42;
  if (v68 >= (int)v273 - (int)v271)
  {
    unsigned int v65 = v56;
  }
  else
  {
    LODWORD(v61) = v60 + 2;
    unsigned int v65 = v56;
    if (!kDQuadParamTable[10 * v67 + 168])
    {
      int v62 = -1;
      int v66 = v263;
LABEL_71:
      v59 += v62;
      goto LABEL_77;
    }
  }
  int v66 = v263;
LABEL_77:
  int v69 = v66 | 0xC;
  if (__b >= v59) {
    unint64_t v70 = v59;
  }
  else {
    unint64_t v70 = __b;
  }
  v270[0] = v70;
  if (v60) {
    unsigned int v71 = __b;
  }
  else {
    unsigned int v71 = 0;
  }
  if (v71 >= v61) {
    unint64_t v61 = v61;
  }
  else {
    unint64_t v61 = v71;
  }
  v269[0] = v61;
  unint64_t v74 = (unint64_t)&kDQuadParamTable[10 * v63];
  unsigned int v72 = *(_DWORD *)(v74 + 656) + 3;
  int v73 = *(_DWORD *)(v74 + 660);
  LODWORD(v74) = v73 + 3;
  int v75 = HIDWORD(v271) - HIDWORD(v273);
  if (HIDWORD(v271) - HIDWORD(v273) < 0)
  {
    if (kDQuadParamTable[10 * v63 + 167] >= HIDWORD(v273) - HIDWORD(v271)) {
      goto LABEL_92;
    }
    LODWORD(v74) = v73 + 2;
    if (kDQuadParamTable[10 * v63 + 168]) {
      goto LABEL_92;
    }
    int v75 = -1;
  }
  else
  {
    if (!v75) {
      goto LABEL_92;
    }
    LODWORD(v74) = v75 + v74;
  }
  v72 += v75;
LABEL_92:
  int v76 = v69 + v262;
  if (v276 >= v72) {
    unint64_t v77 = v72;
  }
  else {
    unint64_t v77 = v276;
  }
  v270[1] = v77;
  if (v73) {
    unsigned int v78 = v276;
  }
  else {
    unsigned int v78 = 0;
  }
  if (v78 >= v74) {
    unint64_t v74 = v74;
  }
  else {
    unint64_t v74 = v78;
  }
  v269[1] = v74;
  long long v79 = &kDQuadParamTable[10 * v64];
  unsigned int v80 = v79[164] + 3;
  int v81 = v79[165];
  unsigned int v82 = v81 + 3;
  int v83 = v272 - v274;
  if ((int)v272 - (int)v274 < 0)
  {
    if (kDQuadParamTable[10 * v64 + 167] >= (int)v274 - (int)v272) {
      goto LABEL_107;
    }
    unsigned int v82 = v81 + 2;
    if (kDQuadParamTable[10 * v64 + 168]) {
      goto LABEL_107;
    }
    int v83 = -1;
  }
  else
  {
    if (!v83) {
      goto LABEL_107;
    }
    v82 += v83;
  }
  v80 += v83;
LABEL_107:
  int v84 = v76 + v261;
  if (v277 >= v80) {
    unint64_t v85 = v80;
  }
  else {
    unint64_t v85 = v277;
  }
  v270[2] = v85;
  if (v81) {
    unsigned int v86 = v277;
  }
  else {
    unsigned int v86 = 0;
  }
  if (v86 >= v82) {
    unint64_t v87 = v82;
  }
  else {
    unint64_t v87 = v86;
  }
  v269[2] = v87;
  int16x8_t v88 = &kDQuadParamTable[10 * v65];
  LODWORD(v89) = v88[164] + 3;
  int v90 = v88[165];
  LODWORD(v91) = v90 + 3;
  int v92 = HIDWORD(v272) - HIDWORD(v274);
  if (HIDWORD(v272) - HIDWORD(v274) < 0)
  {
    if (kDQuadParamTable[10 * v65 + 167] >= HIDWORD(v274) - HIDWORD(v272)) {
      goto LABEL_122;
    }
    LODWORD(v91) = v90 + 2;
    if (kDQuadParamTable[10 * v65 + 168]) {
      goto LABEL_122;
    }
    int v92 = -1;
  }
  else
  {
    if (!v92) {
      goto LABEL_122;
    }
    LODWORD(v91) = v92 + v91;
  }
  LODWORD(v89) = v92 + v89;
LABEL_122:
  if (v278 >= v89) {
    unint64_t v89 = v89;
  }
  else {
    unint64_t v89 = v278;
  }
  v270[3] = v89;
  if (v90) {
    unsigned int v93 = v278;
  }
  else {
    unsigned int v93 = 0;
  }
  if (v93 >= v91) {
    unint64_t v91 = v91;
  }
  else {
    unint64_t v91 = v93;
  }
  v269[3] = v91;
  int v94 = v84 + v46;
  uint64_t v267 = 0;
  uint64_t v268 = 0;
  if (v57 || __b - 8 > 4)
  {
    if (v70 <= 0x20)
    {
      int v95 = 0;
      if (v70 && v11 - v5 + (v15 << 6) + v70 <= 0x100)
      {
        int v95 = 0;
        uint64_t v96 = 0;
        unint64_t v97 = v70;
        do
        {
          unint64_t v98 = 64 - v11;
          if (64 - v11 >= v97) {
            unint64_t v98 = v97;
          }
          v95 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v98)) << v96;
          v96 += v98;
          unint64_t v99 = v98 + v11;
          v15 += v99 >> 6;
          uint64_t v11 = v99 & 0x3F;
          v97 -= v98;
        }
        while (v97);
      }
    }
    else
    {
      int v95 = 0;
    }
    LODWORD(v267) = v95 << (__b - v70);
    v94 += v70;
    if (v63)
    {
LABEL_147:
      if (v77 <= 0x20)
      {
        int v100 = 0;
        if (v77 && v11 - v5 + (v15 << 6) + v77 <= 0x100)
        {
          int v100 = 0;
          uint64_t v101 = 0;
          unint64_t v102 = v77;
          do
          {
            unint64_t v103 = 64 - v11;
            if (64 - v11 >= v102) {
              unint64_t v103 = v102;
            }
            v100 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v103)) << v101;
            v101 += v103;
            v15 += (v103 + v11) >> 6;
            uint64_t v11 = (v103 + v11) & 0x3F;
            v102 -= v103;
          }
          while (v102);
        }
      }
      else
      {
        int v100 = 0;
      }
      HIDWORD(v267) = v100 << (v276 - v77);
      v94 += v77;
      if (v64) {
        goto LABEL_159;
      }
      goto LABEL_156;
    }
  }
  else
  {
    LODWORD(v267) = v258;
    if (v63) {
      goto LABEL_147;
    }
  }
  if (v276 - 8 >= 5) {
    goto LABEL_147;
  }
  HIDWORD(v267) = v257;
  if (v64) {
    goto LABEL_159;
  }
LABEL_156:
  if (v277 - 8 < 5)
  {
    LODWORD(v268) = v256;
    if (v65) {
      goto LABEL_171;
    }
    goto LABEL_168;
  }
LABEL_159:
  if (v85 <= 0x20)
  {
    int v104 = 0;
    if (v85 && v11 - v5 + (v15 << 6) + v85 <= 0x100)
    {
      int v104 = 0;
      uint64_t v105 = 0;
      unint64_t v106 = v85;
      do
      {
        unint64_t v107 = 64 - v11;
        if (64 - v11 >= v106) {
          unint64_t v107 = v106;
        }
        v104 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v107)) << v105;
        v105 += v107;
        v15 += (v107 + v11) >> 6;
        uint64_t v11 = (v107 + v11) & 0x3F;
        v106 -= v107;
      }
      while (v106);
    }
  }
  else
  {
    int v104 = 0;
  }
  LODWORD(v268) = v104 << (v277 - v85);
  v94 += v85;
  if (v65)
  {
LABEL_171:
    if (v89 <= 0x20)
    {
      int v109 = 0;
      if (v89)
      {
        uint64_t v108 = a2;
        if (v11 - v5 + (v15 << 6) + v89 <= 0x100)
        {
          int v109 = 0;
          uint64_t v110 = 0;
          unint64_t v111 = v89;
          do
          {
            unint64_t v112 = 64 - v11;
            if (64 - v11 >= v111) {
              unint64_t v112 = v111;
            }
            v109 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v112)) << v110;
            v110 += v112;
            v15 += (v112 + v11) >> 6;
            uint64_t v11 = (v112 + v11) & 0x3F;
            v111 -= v112;
          }
          while (v111);
        }
LABEL_181:
        HIDWORD(v268) = v109 << (v278 - v89);
        v94 += v89;
        uint64_t v265 = 0;
        uint64_t v266 = 0;
        if (v61) {
          goto LABEL_182;
        }
        goto LABEL_189;
      }
    }
    else
    {
      int v109 = 0;
    }
    uint64_t v108 = a2;
    goto LABEL_181;
  }
LABEL_168:
  if (v278 - 8 >= 5) {
    goto LABEL_171;
  }
  HIDWORD(v268) = v255;
  uint64_t v108 = a2;
  uint64_t v265 = 0;
  uint64_t v266 = 0;
  if (v61)
  {
LABEL_182:
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x100)
    {
      int v113 = 0;
      uint64_t v114 = 0;
      unint64_t v115 = 3;
      do
      {
        unint64_t v116 = 64 - v11;
        if (64 - v11 >= v115) {
          unint64_t v116 = v115;
        }
        v113 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v116)) << v114;
        v114 += v116;
        v15 += (v116 + v11) >> 6;
        uint64_t v11 = (v116 + v11) & 0x3F;
        v115 -= v116;
      }
      while (v115);
    }
    else
    {
      int v113 = 0;
    }
    LODWORD(v265) = v113;
    v94 += 3;
  }
LABEL_189:
  if (v74)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x100)
    {
      int v117 = 0;
      uint64_t v118 = 0;
      unint64_t v119 = 3;
      do
      {
        unint64_t v120 = 64 - v11;
        if (64 - v11 >= v119) {
          unint64_t v120 = v119;
        }
        v117 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v120)) << v118;
        v118 += v120;
        v15 += (v120 + v11) >> 6;
        uint64_t v11 = (v120 + v11) & 0x3F;
        v119 -= v120;
      }
      while (v119);
    }
    else
    {
      int v117 = 0;
    }
    HIDWORD(v265) = v117;
    v94 += 3;
  }
  if (v87)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x100)
    {
      int v121 = 0;
      uint64_t v122 = 0;
      unint64_t v123 = 3;
      do
      {
        unint64_t v124 = 64 - v11;
        if (64 - v11 >= v123) {
          unint64_t v124 = v123;
        }
        v121 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v124)) << v122;
        v122 += v124;
        v15 += (v124 + v11) >> 6;
        uint64_t v11 = (v124 + v11) & 0x3F;
        v123 -= v124;
      }
      while (v123);
    }
    else
    {
      int v121 = 0;
    }
    LODWORD(v266) = v121;
    v94 += 3;
  }
  if (v91)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x100)
    {
      int v125 = 0;
      uint64_t v126 = 0;
      unint64_t v127 = 3;
      do
      {
        unint64_t v128 = 64 - v11;
        if (64 - v11 >= v127) {
          unint64_t v128 = v127;
        }
        v125 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v128)) << v126;
        v126 += v128;
        v15 += (v128 + v11) >> 6;
        uint64_t v11 = (v128 + v11) & 0x3F;
        v127 -= v128;
      }
      while (v127);
    }
    else
    {
      int v125 = 0;
    }
    HIDWORD(v266) = v125;
    v94 += 3;
  }
  uint64_t v129 = 0;
  unsigned int v130 = a3 & 0xFFFFFFFD;
  unsigned int v131 = 256 - v94;
  unsigned int v132 = (256 - v94) / 7u;
  unint64_t v133 = (v11 | (v15 << 6)) + v131 % 7;
  memset(v264, 0, sizeof(v264));
  do
  {
    unint64_t v136 = v133 >> 6;
    unint64_t v137 = v133 & 0x3F;
    if (v61)
    {
      if (v61 <= 0x20 && v137 - v5 + (v133 & 0xFFFFFFFFFFFFFFC0) + v61 <= 0x100)
      {
        int v138 = 0;
        uint64_t v139 = 0;
        unint64_t v140 = v61;
        do
        {
          unint64_t v141 = 64 - v137;
          if (64 - v137 >= v140) {
            unint64_t v141 = v140;
          }
          v138 |= (unint64_t)((*(void *)(v4 + 8 * v136) >> v137) & ~(-1 << v141)) << v139;
          v139 += v141;
          unint64_t v142 = v141 + v137;
          v136 += v142 >> 6;
          unint64_t v137 = v142 & 0x3F;
          v140 -= v141;
        }
        while (v140);
      }
      else
      {
        int v138 = 0;
      }
      *((_DWORD *)v264 + v129) = v138;
    }
    if (!v74)
    {
      int v135 = v61;
      if (!v87) {
        goto LABEL_245;
      }
LABEL_237:
      if (v87 <= 0x20 && v137 - v5 + (v136 << 6) + v87 <= 0x100)
      {
        int v148 = 0;
        uint64_t v149 = 0;
        unint64_t v150 = v87;
        do
        {
          unint64_t v151 = 64 - v137;
          if (64 - v137 >= v150) {
            unint64_t v151 = v150;
          }
          v148 |= (unint64_t)((*(void *)(v4 + 8 * v136) >> v137) & ~(-1 << v151)) << v149;
          v149 += v151;
          unint64_t v152 = v151 + v137;
          v136 += v152 >> 6;
          unint64_t v137 = v152 & 0x3F;
          v150 -= v151;
        }
        while (v150);
      }
      else
      {
        int v148 = 0;
      }
      *((_DWORD *)&v264[3] + v129 + 2) = v148;
      v135 += v87;
      goto LABEL_245;
    }
    if (v74 <= 0x20 && v137 - v5 + (v136 << 6) + v74 <= 0x100)
    {
      int v143 = 0;
      uint64_t v144 = 0;
      unint64_t v145 = v74;
      do
      {
        unint64_t v146 = 64 - v137;
        if (64 - v137 >= v145) {
          unint64_t v146 = v145;
        }
        v143 |= (unint64_t)((*(void *)(v4 + 8 * v136) >> v137) & ~(-1 << v146)) << v144;
        v144 += v146;
        unint64_t v147 = v146 + v137;
        v136 += v147 >> 6;
        unint64_t v137 = v147 & 0x3F;
        v145 -= v146;
      }
      while (v145);
    }
    else
    {
      int v143 = 0;
    }
    *((_DWORD *)&v264[1] + v129 + 3) = v143;
    int v135 = v74 + v61;
    if (v87) {
      goto LABEL_237;
    }
LABEL_245:
    if (v91)
    {
      if (v91 > 0x20 || v137 - v5 + (v136 << 6) + v91 > 0x100)
      {
        int v134 = 0;
      }
      else
      {
        int v134 = 0;
        uint64_t v153 = 0;
        unint64_t v154 = v91;
        do
        {
          unint64_t v155 = 64 - v137;
          if (64 - v137 >= v154) {
            unint64_t v155 = v154;
          }
          v134 |= (unint64_t)((*(void *)(v4 + 8 * v136) >> v137) & ~(-1 << v155)) << v153;
          v153 += v155;
          unint64_t v156 = v155 + v137;
          v136 += v156 >> 6;
          unint64_t v137 = v156 & 0x3F;
          v154 -= v155;
        }
        while (v154);
      }
      *((_DWORD *)&v264[5] + v129 + 1) = v134;
      v135 += v91;
    }
    unint64_t v133 = (v137 | (v136 << 6)) + v132 - v135;
    ++v129;
  }
  while (v129 != 7);
  unint64_t v157 = 0;
  uint64_t v158 = 0;
  uint64_t v159 = v108 + 112;
  do
  {
    unint64_t v164 = *(void *)&kDQuadParamTable[160 * v279[v157 / 4] + 2 + 10 * v280[v157 / 4]];
    int v165 = v269[v157 / 4];
    unint64_t v166 = v164 >> v165;
    if (v164 >> v165 <= 1) {
      unint64_t v166 = 1;
    }
    int v167 = *(unsigned int *)((char *)&__b + v157);
    unint64_t v168 = v166 >> 1;
    unint64_t v169 = (unint64_t)(1 << (v167 - v270[v157 / 4])) >> 1;
    if (v166 >> 1 < v169) {
      unint64_t v169 = v166 >> 1;
    }
    unint64_t v170 = (1 << (v167 - 1));
    unint64_t v171 = *(unsigned int *)((char *)&v267 + v157);
    unint64_t v172 = v170 - v171;
    unint64_t v173 = 1 << v167;
    int v174 = (1 << v167) - 1;
    if (v171) {
      unint64_t v175 = v169;
    }
    else {
      unint64_t v175 = 0;
    }
    BOOL v176 = v171 == v170;
    BOOL v177 = v167 == 16;
    if (v167 == 16) {
      unint64_t result = 31744;
    }
    else {
      unint64_t result = 2139095040;
    }
    if (v167 == 16) {
      unint64_t v179 = 64512;
    }
    else {
      unint64_t v179 = 4286578688;
    }
    unint64_t v180 = 2143289344;
    if (v177) {
      unint64_t v180 = 32256;
    }
    unint64_t v181 = 4290772992;
    if (v177) {
      unint64_t v181 = 65024;
    }
    unint64_t v182 = (v179 - 1);
    if (v165)
    {
      unint64_t v183 = v164 + v171;
      uint64_t v184 = ~(-1 << v165);
      int v185 = *(_DWORD *)((char *)&v265 + v157);
      unint64_t v186 = v172 / v166;
      if (!v185)
      {
        uint64_t v195 = 0;
        unint64_t v189 = v175;
        BOOL v188 = v171 == v170;
        goto LABEL_316;
      }
      uint64_t v187 = *(unsigned int *)((char *)v264 + v158);
      BOOL v188 = v186 == v187;
      if (v171 | v187)
      {
        if (v183 >= v173 && v187 == v184)
        {
          uint64_t v195 = 1;
          unint64_t v189 = v173 - 1;
          goto LABEL_316;
        }
        unint64_t v189 = v168 + v166 * v187;
      }
      else
      {
        unint64_t v189 = 0;
      }
      uint64_t v195 = 1;
LABEL_316:
      unint64_t v196 = v189 + v171;
      unint64_t v197 = v196;
      if (a3 == 4)
      {
        BOOL v198 = v196 < result || v196 >= v180;
        unint64_t v197 = (result - 1);
        if (v198)
        {
          BOOL v199 = v196 < v180 || v196 >= v170;
          unint64_t v197 = v170;
          if (v199)
          {
            if (v196 < v181 && v196 >= v179) {
              unint64_t v197 = (v179 - 1);
            }
            else {
              unint64_t v197 = v196;
            }
          }
        }
      }
      if (v197 >= v173) {
        int v201 = v174;
      }
      else {
        int v201 = v197;
      }
      if (v188) {
        int v202 = 0;
      }
      else {
        int v202 = v201 ^ v170;
      }
      if (v130 != 1) {
        int v202 = v201;
      }
      *(_DWORD *)(v159 + v157 - 112) = v202;
      if (v185 == 1)
      {
        unint64_t v203 = v175;
        BOOL v204 = v171 == v170;
      }
      else
      {
        uint64_t v205 = *(unsigned int *)(((unint64_t)v264 | (4 * v195)) + v158);
        BOOL v204 = v186 == v205;
        if (v171 | v205)
        {
          if (v183 < v173 || (unint64_t v203 = v173 - 1, v205 != v184)) {
            unint64_t v203 = v168 + v166 * v205;
          }
        }
        else
        {
          unint64_t v203 = 0;
        }
        ++v195;
      }
      unint64_t v206 = v203 + v171;
      unint64_t v207 = v206;
      if (a3 == 4)
      {
        BOOL v208 = v206 < result || v206 >= v180;
        unint64_t v207 = (result - 1);
        if (v208)
        {
          if (v206 < v180 || (unint64_t v207 = v170, v206 >= v170))
          {
            if (v206 < v181 && v206 >= v179) {
              unint64_t v207 = (v179 - 1);
            }
            else {
              unint64_t v207 = v206;
            }
          }
        }
      }
      if (v207 >= v173) {
        int v210 = v174;
      }
      else {
        int v210 = v207;
      }
      if (v204) {
        int v211 = 0;
      }
      else {
        int v211 = v210 ^ v170;
      }
      if (v130 != 1) {
        int v211 = v210;
      }
      *(_DWORD *)(v159 + v157 - 96) = v211;
      if (v185 == 2)
      {
        unint64_t v212 = v175;
        BOOL v213 = v171 == v170;
      }
      else
      {
        uint64_t v214 = *(unsigned int *)(((unint64_t)v264 | (4 * v195)) + v158);
        BOOL v213 = v186 == v214;
        if (v171 | v214)
        {
          if (v183 < v173 || (unint64_t v212 = v173 - 1, v214 != v184)) {
            unint64_t v212 = v168 + v166 * v214;
          }
        }
        else
        {
          unint64_t v212 = 0;
        }
        ++v195;
      }
      unint64_t v215 = v212 + v171;
      unint64_t v216 = v215;
      if (a3 == 4)
      {
        if (v215 < result || (unint64_t v216 = (result - 1), v215 >= v180))
        {
          if (v215 < v180 || (unint64_t v216 = v170, v215 >= v170))
          {
            if (v215 < v181 && v215 >= v179) {
              unint64_t v216 = (v179 - 1);
            }
            else {
              unint64_t v216 = v215;
            }
          }
        }
      }
      if (v216 >= v173) {
        int v218 = v174;
      }
      else {
        int v218 = v216;
      }
      if (v213) {
        int v219 = 0;
      }
      else {
        int v219 = v218 ^ v170;
      }
      if (v130 != 1) {
        int v219 = v218;
      }
      *(_DWORD *)(v159 + v157 - 80) = v219;
      if (v185 == 3)
      {
        unint64_t v220 = v175;
        BOOL v221 = v171 == v170;
      }
      else
      {
        uint64_t v222 = *(unsigned int *)((char *)v264 + 4 * v195 + v158);
        BOOL v221 = v186 == v222;
        if (v171 | v222)
        {
          if (v183 < v173 || (unint64_t v220 = v173 - 1, v222 != v184)) {
            unint64_t v220 = v168 + v166 * v222;
          }
        }
        else
        {
          unint64_t v220 = 0;
        }
        ++v195;
      }
      unint64_t v223 = v220 + v171;
      unint64_t v224 = v223;
      if (a3 == 4)
      {
        if (v223 < result || (unint64_t v224 = (result - 1), v223 >= v180))
        {
          if (v223 < v180 || (unint64_t v224 = v170, v223 >= v170))
          {
            if (v223 < v181 && v223 >= v179) {
              unint64_t v224 = (v179 - 1);
            }
            else {
              unint64_t v224 = v223;
            }
          }
        }
      }
      if (v224 >= v173) {
        int v226 = v174;
      }
      else {
        int v226 = v224;
      }
      if (v221) {
        int v227 = 0;
      }
      else {
        int v227 = v226 ^ v170;
      }
      if (v130 != 1) {
        int v227 = v226;
      }
      *(_DWORD *)(v159 + v157 - 64) = v227;
      if (v185 == 4)
      {
        unint64_t v228 = v175;
        BOOL v229 = v171 == v170;
      }
      else
      {
        uint64_t v230 = *(unsigned int *)((char *)v264 + 4 * v195 + v158);
        BOOL v229 = v186 == v230;
        if (v171 | v230)
        {
          if (v183 < v173 || (unint64_t v228 = v173 - 1, v230 != v184)) {
            unint64_t v228 = v168 + v166 * v230;
          }
        }
        else
        {
          unint64_t v228 = 0;
        }
        ++v195;
      }
      unint64_t v231 = v228 + v171;
      unint64_t v232 = v231;
      if (a3 == 4)
      {
        if (v231 < result || (unint64_t v232 = (result - 1), v231 >= v180))
        {
          if (v231 < v180 || (unint64_t v232 = v170, v231 >= v170))
          {
            if (v231 < v181 && v231 >= v179) {
              unint64_t v232 = (v179 - 1);
            }
            else {
              unint64_t v232 = v231;
            }
          }
        }
      }
      if (v232 >= v173) {
        int v234 = v174;
      }
      else {
        int v234 = v232;
      }
      if (v229) {
        int v235 = 0;
      }
      else {
        int v235 = v234 ^ v170;
      }
      if (v130 != 1) {
        int v235 = v234;
      }
      *(_DWORD *)(v159 + v157 - 48) = v235;
      if (v185 == 5)
      {
        unint64_t v236 = v175;
        BOOL v237 = v171 == v170;
      }
      else
      {
        uint64_t v238 = *(unsigned int *)((char *)v264 + 4 * v195 + v158);
        BOOL v237 = v186 == v238;
        if (v171 | v238)
        {
          if (v183 < v173 || (unint64_t v236 = v173 - 1, v238 != v184)) {
            unint64_t v236 = v168 + v166 * v238;
          }
        }
        else
        {
          unint64_t v236 = 0;
        }
        ++v195;
      }
      unint64_t v239 = v236 + v171;
      unint64_t v240 = v239;
      if (a3 == 4)
      {
        if (v239 < result || (unint64_t v240 = (result - 1), v239 >= v180))
        {
          if (v239 < v180 || (unint64_t v240 = v170, v239 >= v170))
          {
            if (v239 < v181 && v239 >= v179) {
              unint64_t v240 = (v179 - 1);
            }
            else {
              unint64_t v240 = v239;
            }
          }
        }
      }
      if (v240 >= v173) {
        int v242 = v174;
      }
      else {
        int v242 = v240;
      }
      if (v237) {
        int v243 = 0;
      }
      else {
        int v243 = v242 ^ v170;
      }
      if (v130 != 1) {
        int v243 = v242;
      }
      *(_DWORD *)(v159 + v157 - 32) = v243;
      if (v185 == 6)
      {
        unint64_t v244 = v175;
        BOOL v245 = v171 == v170;
      }
      else
      {
        uint64_t v246 = *(unsigned int *)((char *)v264 + 4 * v195 + v158);
        BOOL v245 = v186 == v246;
        if (v171 | v246)
        {
          if (v183 < v173 || (unint64_t v244 = v173 - 1, v246 != v184)) {
            unint64_t v244 = v168 + v166 * v246;
          }
        }
        else
        {
          unint64_t v244 = 0;
        }
        ++v195;
      }
      unint64_t v247 = v244 + v171;
      unint64_t v248 = v247;
      if (a3 == 4)
      {
        if (v247 < result || (unint64_t v248 = (result - 1), v247 >= v180))
        {
          if (v247 < v180 || (unint64_t v248 = v170, v247 >= v170))
          {
            if (v247 < v181 && v247 >= v179) {
              unint64_t v248 = (v179 - 1);
            }
            else {
              unint64_t v248 = v247;
            }
          }
        }
      }
      if (v248 >= v173) {
        int v250 = v174;
      }
      else {
        int v250 = v248;
      }
      if (v245) {
        int v251 = 0;
      }
      else {
        int v251 = v250 ^ v170;
      }
      if (v130 != 1) {
        int v251 = v250;
      }
      *(_DWORD *)(v159 + v157 - 16) = v251;
      if (v185 != 7)
      {
        uint64_t v252 = *(unsigned int *)((char *)v264 + 4 * v195 + v158);
        BOOL v176 = v186 == v252;
        if (v171 | v252)
        {
          if (v183 >= v173 && v252 == v184) {
            unint64_t v175 = v173 - 1;
          }
          else {
            unint64_t v175 = v168 + v166 * v252;
          }
        }
        else
        {
          unint64_t v175 = 0;
        }
      }
      unint64_t v253 = v175 + v171;
      unint64_t v161 = v175 + v171;
      if (a3 == 4)
      {
        if (v253 < result || (unint64_t v161 = (result - 1), v253 >= v180))
        {
          if (v253 < v180 || (unint64_t v161 = v170, v253 >= v170))
          {
            if (v253 < v181 && v253 >= v179) {
              unint64_t v161 = (v179 - 1);
            }
            else {
              unint64_t v161 = v175 + v171;
            }
          }
        }
      }
      if (v161 >= v173) {
        int v162 = v174;
      }
      else {
        int v162 = v161;
      }
      int v163 = v162 ^ v170;
      if (v176) {
        int v163 = 0;
      }
      if (v130 == 1) {
        int v162 = v163;
      }
      goto LABEL_267;
    }
    BOOL v191 = v180 <= v171 && v171 < v170;
    BOOL v193 = v171 >= v179 && v181 > v171;
    if (a3 == 4)
    {
      if (v171 < result || v180 <= v171)
      {
        if (v191)
        {
          if (v173 <= v170) {
            LODWORD(v194) = v174;
          }
          else {
            LODWORD(v194) = v170;
          }
        }
        else
        {
          if (v193) {
            unint64_t v194 = v182;
          }
          else {
            unint64_t v194 = *(unsigned int *)((char *)&v267 + v157);
          }
          if (v194 >= v173) {
            LODWORD(v194) = v174;
          }
        }
      }
      else if (v173 <= (result - 1))
      {
        LODWORD(v194) = v174;
      }
      else
      {
        LODWORD(v194) = result - 1;
      }
    }
    else if (v173 <= v171)
    {
      LODWORD(v194) = v174;
    }
    else
    {
      LODWORD(v194) = *(_DWORD *)((char *)&v267 + v157);
    }
    if (v166 <= v172) {
      int v162 = v194 ^ v170;
    }
    else {
      int v162 = 0;
    }
    if (v130 != 1) {
      int v162 = v194;
    }
    uint64_t v254 = v159 + v157;
    *(_DWORD *)(v254 - 112) = v162;
    *(_DWORD *)(v254 - 96) = v162;
    *(_DWORD *)(v254 - 80) = v162;
    *(_DWORD *)(v254 - 64) = v162;
    *(_DWORD *)(v254 - 48) = v162;
    *(_DWORD *)(v254 - 32) = v162;
    *(_DWORD *)(v254 - 16) = v162;
LABEL_267:
    *(_DWORD *)(v159 + v157) = v162;
    v158 += 28;
    v157 += 4;
  }
  while (v158 != 112);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(_OWORD *a1, uint64_t a2, unint64_t a3, unsigned int a4, int a5)
{
  uint64_t v618 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    a1[2] = 0u;
    a1[3] = 0u;
    *a1 = 0u;
    a1[1] = 0u;
    int v12 = (_OWORD *)((char *)a1 + a2);
    v12[2] = 0u;
    v12[3] = 0u;
    *int v12 = 0u;
    v12[1] = 0u;
    int v13 = (_OWORD *)((char *)a1 + 2 * a2);
    v13[2] = 0u;
    v13[3] = 0u;
    *int v13 = 0u;
    v13[1] = 0u;
    uint64_t v14 = (_OWORD *)((char *)a1 + 2 * a2 + a2);
    v14[2] = 0u;
    v14[3] = 0u;
    *uint64_t v14 = 0u;
    v14[1] = 0u;
    return result;
  }
  char v8 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v591, a5);
    }
    *(int16x4_t *)v599.i8 = vmovn_s32(v591);
    v599.u64[1] = (unint64_t)vmovn_s32(v593);
    *(int16x4_t *)v601.i8 = vmovn_s32(v592);
    v601.u64[1] = (unint64_t)vmovn_s32(v594);
    v603[0] = vmovn_s32(v595);
    v603[1] = vmovn_s32(v597);
    unint64_t v21 = a3 + 32;
    v604[0] = vmovn_s32(v596);
    v604[1] = vmovn_s32(v598);
    if ((v8 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v591, a5);
    }
    *(int16x4_t *)v600.i8 = vmovn_s32(v591);
    v600.u64[1] = (unint64_t)vmovn_s32(v593);
    *(int16x4_t *)v602.i8 = vmovn_s32(v592);
    v602.u64[1] = (unint64_t)vmovn_s32(v594);
    v603[2] = vmovn_s32(v595);
    v603[3] = vmovn_s32(v597);
    unint64_t v22 = a3 + 64;
    v604[2] = vmovn_s32(v596);
    v604[3] = vmovn_s32(v598);
    if ((v8 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v22, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v22, (uint64_t)&v591, a5);
    }
    v605[0] = vmovn_s32(v591);
    v605[1] = vmovn_s32(v593);
    v606[0] = vmovn_s32(v592);
    v606[1] = vmovn_s32(v594);
    *(int16x4_t *)v607.i8 = vmovn_s32(v595);
    v607.u64[1] = (unint64_t)vmovn_s32(v597);
    unint64_t v23 = a3 + 96;
    *(int16x4_t *)v609.i8 = vmovn_s32(v596);
    v609.u64[1] = (unint64_t)vmovn_s32(v598);
    if ((v8 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v23, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v23, (uint64_t)&v591, a5);
    }
    v605[2] = vmovn_s32(v591);
    v605[3] = vmovn_s32(v593);
    v606[2] = vmovn_s32(v592);
    v606[3] = vmovn_s32(v594);
    *(int16x4_t *)v608.i8 = vmovn_s32(v595);
    v608.u64[1] = (unint64_t)vmovn_s32(v597);
    unint64_t v24 = (unint64_t *)(a1 + 2);
    unint64_t v25 = -32;
    *(int16x4_t *)v610.i8 = vmovn_s32(v596);
    v610.u64[1] = (unint64_t)vmovn_s32(v598);
    do
    {
      unint64_t v26 = (((unint64_t)(v603[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v603[v25 / 8]) << 22) | ((unint64_t)WORD2(v603[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v603[v25 / 8]) << 54);
      *(v24 - 4) = (((unint64_t)(v601.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v601.u16[v25 / 2 + 1] << 22) | ((unint64_t)v601.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v601.u16[v25 / 2 + 3] << 54);
      *(v24 - 3) = v26;
      unint64_t v27 = (((unint64_t)(v605[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v605[v25 / 8]) << 22) | ((unint64_t)WORD2(v605[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v605[v25 / 8]) << 54);
      *(v24 - 2) = (((unint64_t)(v604[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v604[v25 / 8]) << 22) | ((unint64_t)WORD2(v604[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v604[v25 / 8]) << 54);
      *(v24 - 1) = v27;
      unint64_t v28 = (((unint64_t)(v607.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v607.u16[v25 / 2 + 1] << 22) | ((unint64_t)v607.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v607.u16[v25 / 2 + 3] << 54);
      *unint64_t v24 = (((unint64_t)(v606[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v606[v25 / 8]) << 22) | ((unint64_t)WORD2(v606[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v606[v25 / 8]) << 54);
      v24[1] = v28;
      unint64_t v29 = (((unint64_t)(v611.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v611.u16[v25 / 2 + 1] << 22) | ((unint64_t)v611.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v611.u16[v25 / 2 + 3] << 54);
      v24[2] = (((unint64_t)(v609.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v609.u16[v25 / 2 + 1] << 22) | ((unint64_t)v609.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v609.u16[v25 / 2 + 3] << 54);
      v24[3] = v29;
      unint64_t v24 = (unint64_t *)((char *)v24 + a2);
      v25 += 8;
    }
    while (v25);
    return 128;
  }
  if (a4 != 159)
  {
    if (a4 == 4)
    {
      uint64x2_t v15 = (uint64x2_t)vld1q_dup_f64((const double *)a3);
      int8x16_t v16 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v15, (uint64x2_t)xmmword_242EA7AE0), (int8x16_t)xmmword_242EA7B10), vandq_s8((int8x16_t)vshlq_u64(v15, (uint64x2_t)xmmword_242EA7AF0), (int8x16_t)xmmword_242EA7B00));
      int64x2_t v17 = vdupq_n_s64(*(void *)&vorr_s8(*(int8x8_t *)v16.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL)));
      *a1 = v17;
      a1[1] = v17;
      a1[2] = v17;
      a1[3] = v17;
      unint64_t v18 = (int64x2_t *)((char *)a1 + a2);
      *unint64_t v18 = v17;
      v18[1] = v17;
      v18[2] = v17;
      v18[3] = v17;
      unint64_t v19 = (int64x2_t *)((char *)a1 + 2 * a2);
      *unint64_t v19 = v17;
      v19[1] = v17;
      v19[2] = v17;
      v19[3] = v17;
      uint64_t v20 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
      *uint64_t v20 = v17;
      v20[1] = v17;
      v20[2] = v17;
      v20[3] = v17;
      return 5;
    }
    v592.i8[8] = 0;
    v591.i64[0] = 8 * (a3 & 7);
    v591.i64[1] = a3 & 0xFFFFFFFFFFFFFFF8;
    v592.i64[0] = v591.i64[0] | 0x400;
    uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v612, (uint64_t)v617, (uint64_t)&v611, (unint64_t *)&v591, a4);
    v53.i64[0] = 0x3000300030003;
    v53.i64[1] = 0x3000300030003;
    int8x16_t v54 = v612;
    int16x8_t v55 = (int16x8_t)vandq_s8(v612, v53);
    int8x16_t v56 = vbicq_s8(v617[0], (int8x16_t)vceqq_s16(v55, (int16x8_t)v53));
    v617[0] = v56;
    int16x8_t v613 = (int16x8_t)v56;
    int16x8_t v614 = (int16x8_t)v56;
    int16x8_t v615 = (int16x8_t)v56;
    int16x8_t v616 = (int16x8_t)v56;
    v57.i64[0] = 0x202020202020202;
    v57.i64[1] = 0x202020202020202;
    int8x16_t v58 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v612.i8, (int16x4_t)0x4000400040004)), v57);
    unint64_t v59 = v591.i64[0];
    int16x8_t v589 = v55;
    if (vmaxvq_s8(v58) < 1)
    {
      v231.i64[0] = -1;
      v231.i64[1] = -1;
      int8x16_t v587 = v231;
      int8x16_t v588 = v231;
      int8x16_t v585 = v231;
      int8x16_t v586 = v231;
    }
    else
    {
      int8x16_t v60 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v58, v58));
      int8x16_t v61 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v60, (int16x8_t)v60));
      unint64_t v62 = vpaddq_s32((int32x4_t)v61, (int32x4_t)v61).u64[0];
      v63.i64[0] = v62;
      v63.i64[1] = HIDWORD(v62);
      int64x2_t v64 = v63;
      unint64_t v65 = vaddvq_s64(v63);
      unint64_t v66 = v65;
      unint64_t v67 = v591.i64[0] + v65;
      if (v592.i64[0]) {
        BOOL v68 = v592.i64[0] >= v67;
      }
      else {
        BOOL v68 = 1;
      }
      int v69 = !v68;
      if (v65 <= 0x80 && v69 == 0)
      {
        v52.i64[0] = 63;
        unint64_t v232 = (int64x2_t *)(v591.i64[1] + 8 * ((unint64_t)v591.i64[0] >> 6));
        int64x2_t v233 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v591.u64[0], v52).i64[0], 0), vzip1q_s64((int64x2_t)0, v64));
        int8x16_t v71 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v232, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v233)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v232->i64[0], 0), (uint64x2_t)vnegq_s64(v233)));
        if ((v591.i8[0] & 0x3F) + v66 >= 0x81) {
          int8x16_t v71 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v232[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v233)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v232[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v233))), v71);
        }
        v591.i64[0] = v67;
        unint64_t v59 = v67;
      }
      else
      {
        v592.i8[8] = 1;
        int8x16_t v71 = 0uLL;
      }
      int32x2_t v234 = vzip1_s32(*(int32x2_t *)v61.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL));
      v235.i64[0] = v234.u32[0];
      v235.i64[1] = v234.u32[1];
      int64x2_t v236 = (int64x2_t)vshlq_u64((uint64x2_t)v71, (uint64x2_t)vnegq_s64(v235));
      *(int32x2_t *)v71.i8 = vmovn_s64((int64x2_t)v71);
      *(int32x2_t *)v236.i8 = vmovn_s64(v236);
      int16x8_t v237 = (int16x8_t)vzip1q_s32((int32x4_t)v71, (int32x4_t)v236);
      int16x8_t v238 = (int16x8_t)vshlq_u32((uint32x4_t)v237, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v60.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL)))));
      *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v237);
      *(int16x4_t *)v238.i8 = vmovn_s32((int32x4_t)v238);
      int8x16_t v239 = (int8x16_t)vzip1q_s16(v237, v238);
      int8x16_t v240 = (int8x16_t)vshlq_u16((uint16x8_t)v239, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v58.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL)))));
      *(int8x8_t *)v239.i8 = vmovn_s16((int16x8_t)v239);
      *(int8x8_t *)v240.i8 = vmovn_s16((int16x8_t)v240);
      int8x16_t v241 = vzip1q_s8(v239, v240);
      v240.i64[0] = 0x101010101010101;
      v240.i64[1] = 0x101010101010101;
      int8x16_t v242 = vshlq_s8(v240, v58);
      v240.i64[0] = -1;
      v240.i64[1] = -1;
      int32x4_t v243 = (int32x4_t)vqtbl1q_s8(vandq_s8(v241, vaddq_s8(v242, v240)), (int8x16_t)xmmword_242EA7560);
      *(int32x2_t *)v241.i8 = vdup_lane_s32(*(int32x2_t *)v243.i8, 0);
      *(int32x2_t *)v240.i8 = vdup_lane_s32(*(int32x2_t *)v243.i8, 1);
      int8x8_t v244 = (int8x8_t)vdupq_laneq_s32(v243, 2).u64[0];
      v243.i64[0] = vdupq_laneq_s32(v243, 3).u64[0];
      int16x8_t v613 = vsubw_s8(v613, *(int8x8_t *)v241.i8);
      int16x8_t v614 = vsubw_s8(v614, *(int8x8_t *)v240.i8);
      int16x8_t v615 = vsubw_s8(v615, v244);
      int16x8_t v616 = vsubw_s8(v616, *(int8x8_t *)v243.i8);
      int8x16_t v587 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v241.i8));
      int8x16_t v585 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v240.i8));
      int8x16_t v586 = (int8x16_t)vmovl_s8(vceqz_s8(v244));
      int8x16_t v588 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v243.i8));
    }
    v245.i64[0] = 0x8000800080008;
    v245.i64[1] = 0x8000800080008;
    int8x16_t v246 = 0uLL;
    int8x16_t v247 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v612, v245), (int8x16_t)0, 8uLL), v56);
    int8x16_t v248 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v247, (int16x8_t)v247));
    unint64_t v249 = vpaddq_s32((int32x4_t)v248, (int32x4_t)v248).u64[0];
    v250.i64[0] = v249;
    v250.i64[1] = HIDWORD(v249);
    int64x2_t v251 = v250;
    unint64_t v252 = vaddvq_s64(v250);
    if (v592.i64[0]) {
      BOOL v253 = v592.i64[0] >= v59 + v252;
    }
    else {
      BOOL v253 = 1;
    }
    int v254 = !v253;
    if (v252 <= 0x80 && v254 == 0)
    {
      int64x2_t v256 = vaddq_s64(vdupq_n_s64(v59 & 0x3F), vzip1q_s64((int64x2_t)0, v251));
      int v257 = (int64x2_t *)(v591.i64[1] + 8 * (v59 >> 6));
      int8x16_t v246 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v257, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v256)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v257->i64[0], 0), (uint64x2_t)vnegq_s64(v256)));
      if ((v59 & 0x3F) + v252 >= 0x81) {
        int8x16_t v246 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v257[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v256)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v257[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v256))), v246);
      }
      v59 += v252;
    }
    else
    {
      v592.i8[8] = 1;
    }
    int v258 = v612.i8[0] & 3;
    if (v258 != 2) {
      goto LABEL_98;
    }
    unint64_t v259 = v59 + 8;
    if (v592.i64[0])
    {
      if (v592.i64[0] >= v259)
      {
        unint64_t v260 = v59 + 16;
        v59 += 8;
      }
      else
      {
        v592.i8[8] = 1;
        unint64_t v260 = v59 + 8;
      }
      if (v592.i64[0] < v260)
      {
        v592.i8[8] = 1;
LABEL_98:
        int8x16_t v261 = 0uLL;
        int8x16_t v262 = vextq_s8((int8x16_t)0, (int8x16_t)v613, 8uLL);
        int8x16_t v263 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v262, (int16x8_t)v262));
        unint64_t v264 = vpaddq_s32((int32x4_t)v263, (int32x4_t)v263).u64[0];
        v265.i64[0] = v264;
        v265.i64[1] = HIDWORD(v264);
        int64x2_t v266 = v265;
        unint64_t v267 = vaddvq_s64(v265);
        unint64_t v268 = v59 + v267;
        if (v592.i64[0]) {
          BOOL v269 = v592.i64[0] >= v268;
        }
        else {
          BOOL v269 = 1;
        }
        int v270 = !v269;
        if (v267 > 0x80 || v270)
        {
          int v275 = 1;
          uint64_t v273 = v591.i64[1];
        }
        else
        {
          unint64_t v271 = v59 & 0x3F;
          int64x2_t v272 = vaddq_s64(vdupq_n_s64(v271), vzip1q_s64((int64x2_t)0, v266));
          uint64_t v273 = v591.i64[1];
          uint64_t v274 = (int64x2_t *)(v591.i64[1] + 8 * (v59 >> 6));
          int8x16_t v261 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v274, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v272)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v274->i64[0], 0), (uint64x2_t)vnegq_s64(v272)));
          if (v271 + v267 >= 0x81) {
            int8x16_t v261 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v274[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v272)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v274[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v272))), v261);
          }
          int v275 = v592.u8[8];
          unint64_t v59 = v268;
        }
        v276.i64[0] = 0xF000F000F000FLL;
        v276.i64[1] = 0xF000F000F000FLL;
        v277.i64[0] = 0x10001000100010;
        v277.i64[1] = 0x10001000100010;
        int8x16_t v278 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v613, v613));
        unint64_t v279 = vpaddq_s32((int32x4_t)v278, (int32x4_t)v278).u64[0];
        v280.i64[0] = v279;
        v280.i64[1] = HIDWORD(v279);
        int64x2_t v281 = v280;
        unint64_t v282 = vaddvq_s64(v280);
        unint64_t v283 = v282;
        unint64_t v284 = v59 + v282;
        if (v592.i64[0]) {
          BOOL v285 = v592.i64[0] >= v284;
        }
        else {
          BOOL v285 = 1;
        }
        char v286 = !v285;
        int8x16_t v287 = 0uLL;
        if (v282 > 0x80 || (v286 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v284 = v59;
          int8x16_t v291 = 0uLL;
        }
        else
        {
          unint64_t v288 = v59 & 0x3F;
          int64x2_t v289 = vaddq_s64(vdupq_n_s64(v288), vzip1q_s64((int64x2_t)0, v281));
          unint64_t v290 = (int64x2_t *)(v273 + 8 * (v59 >> 6));
          int8x16_t v291 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v290, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v289)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v290->i64[0], 0), (uint64x2_t)vnegq_s64(v289)));
          if (v288 + v283 >= 0x81) {
            int8x16_t v291 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v290[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v289)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v290[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v289))), v291);
          }
        }
        int32x2_t v292 = vzip1_s32(*(int32x2_t *)v278.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL));
        v293.i64[0] = v292.u32[0];
        v293.i64[1] = v292.u32[1];
        uint64x2_t v294 = (uint64x2_t)vnegq_s64(v293);
        int64x2_t v295 = (int64x2_t)vshlq_u64((uint64x2_t)v291, v294);
        *(int32x2_t *)v291.i8 = vmovn_s64((int64x2_t)v291);
        *(int32x2_t *)v295.i8 = vmovn_s64(v295);
        int16x8_t v296 = (int16x8_t)vzip1q_s32((int32x4_t)v291, (int32x4_t)v295);
        uint32x4_t v297 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v613.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v613, (int8x16_t)v613, 8uLL))));
        int16x8_t v298 = (int16x8_t)vshlq_u32((uint32x4_t)v296, v297);
        *(int16x4_t *)v296.i8 = vmovn_s32((int32x4_t)v296);
        *(int16x4_t *)v298.i8 = vmovn_s32((int32x4_t)v298);
        int16x8_t v299 = vzip1q_s16(v296, v298);
        int16x8_t v300 = vaddq_s16(v613, v276);
        int16x8_t v301 = vsubq_s16((int16x8_t)v277, v613);
        int16x8_t v302 = vshlq_s16(vshlq_s16(v299, v301), v300);
        int16x8_t v600 = v302;
        unint64_t v303 = v284 + v283;
        if (v592.i64[0]) {
          BOOL v304 = v592.i64[0] >= v303;
        }
        else {
          BOOL v304 = 1;
        }
        char v305 = !v304;
        if (v283 > 0x80 || (v305 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v303 = v284;
        }
        else
        {
          unint64_t v306 = v284 & 0x3F;
          int64x2_t v307 = vaddq_s64(vdupq_n_s64(v306), vzip1q_s64((int64x2_t)0, v281));
          unsigned int v308 = (int64x2_t *)(v273 + 8 * (v284 >> 6));
          int8x16_t v287 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v308, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v307)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v308->i64[0], 0), (uint64x2_t)vnegq_s64(v307)));
          if (v306 + v283 >= 0x81) {
            int8x16_t v287 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v308[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v307)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v308[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v307))), v287);
          }
        }
        int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v287, v294);
        *(int32x2_t *)v287.i8 = vmovn_s64((int64x2_t)v287);
        *(int32x2_t *)v309.i8 = vmovn_s64(v309);
        int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v287, (int32x4_t)v309);
        int16x8_t v311 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v297);
        *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
        *(int16x4_t *)v311.i8 = vmovn_s32((int32x4_t)v311);
        int16x8_t v312 = vshlq_s16(vshlq_s16(vzip1q_s16(v310, v311), v301), v300);
        int16x8_t v601 = v312;
        unint64_t v313 = v303 + v283;
        if (v592.i64[0]) {
          BOOL v314 = v592.i64[0] >= v313;
        }
        else {
          BOOL v314 = 1;
        }
        char v315 = !v314;
        int8x16_t v316 = 0uLL;
        if (v283 > 0x80 || (v315 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v313 = v303;
          int8x16_t v320 = 0uLL;
        }
        else
        {
          unint64_t v317 = v303 & 0x3F;
          int64x2_t v318 = vaddq_s64(vdupq_n_s64(v317), vzip1q_s64((int64x2_t)0, v281));
          unsigned int v319 = (int64x2_t *)(v273 + 8 * (v303 >> 6));
          int8x16_t v320 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v319, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v318)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v319->i64[0], 0), (uint64x2_t)vnegq_s64(v318)));
          if (v317 + v283 >= 0x81) {
            int8x16_t v320 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v319[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v318)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v319[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v318))), v320);
          }
        }
        int64x2_t v321 = (int64x2_t)vshlq_u64((uint64x2_t)v320, v294);
        *(int32x2_t *)v320.i8 = vmovn_s64((int64x2_t)v320);
        *(int32x2_t *)v321.i8 = vmovn_s64(v321);
        int16x8_t v322 = (int16x8_t)vzip1q_s32((int32x4_t)v320, (int32x4_t)v321);
        int16x8_t v323 = (int16x8_t)vshlq_u32((uint32x4_t)v322, v297);
        *(int16x4_t *)v322.i8 = vmovn_s32((int32x4_t)v322);
        *(int16x4_t *)v323.i8 = vmovn_s32((int32x4_t)v323);
        int16x8_t v324 = vshlq_s16(vshlq_s16(vzip1q_s16(v322, v323), v301), v300);
        int16x8_t v602 = v324;
        int8x16_t v325 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v614, v614));
        v322.i64[0] = vpaddq_s32((int32x4_t)v325, (int32x4_t)v325).u64[0];
        v326.i64[0] = v322.u32[0];
        v326.i64[1] = v322.u32[1];
        int64x2_t v327 = v326;
        unint64_t v328 = vaddvq_s64(v326);
        unint64_t v329 = v328;
        unint64_t v330 = v313 + v328;
        if (v592.i64[0]) {
          BOOL v331 = v592.i64[0] >= v330;
        }
        else {
          BOOL v331 = 1;
        }
        char v332 = !v331;
        if (v328 > 0x80 || (v332 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v330 = v313;
        }
        else
        {
          unint64_t v333 = v313 & 0x3F;
          int64x2_t v334 = vaddq_s64(vdupq_n_s64(v333), vzip1q_s64((int64x2_t)0, v327));
          int16x8_t v335 = (int64x2_t *)(v273 + 8 * (v313 >> 6));
          int8x16_t v316 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v335, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v334)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v335->i64[0], 0), (uint64x2_t)vnegq_s64(v334)));
          if (v333 + v329 >= 0x81) {
            int8x16_t v316 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v335[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v334)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v335[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v334))), v316);
          }
        }
        unint64_t v336 = v330 + v329;
        if (v592.i64[0]) {
          BOOL v337 = v592.i64[0] >= v336;
        }
        else {
          BOOL v337 = 1;
        }
        char v338 = !v337;
        int8x16_t v339 = 0uLL;
        if (v329 > 0x80 || (v338 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v336 = v330;
          int8x16_t v343 = 0uLL;
        }
        else
        {
          unint64_t v340 = v330 & 0x3F;
          int64x2_t v341 = vaddq_s64(vdupq_n_s64(v340), vzip1q_s64((int64x2_t)0, v327));
          uint64x2_t v342 = (int64x2_t *)(v273 + 8 * (v330 >> 6));
          int8x16_t v343 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v342, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v341)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v342->i64[0], 0), (uint64x2_t)vnegq_s64(v341)));
          if (v340 + v329 >= 0x81) {
            int8x16_t v343 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v342[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v341)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v342[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v341))), v343);
          }
        }
        unint64_t v344 = v336 + v329;
        if (v592.i64[0]) {
          BOOL v345 = v592.i64[0] >= v344;
        }
        else {
          BOOL v345 = 1;
        }
        char v346 = !v345;
        if (v329 > 0x80 || (v346 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v344 = v336;
        }
        else
        {
          int64x2_t v347 = vaddq_s64(vdupq_n_s64(v336 & 0x3F), vzip1q_s64((int64x2_t)0, v327));
          unint64_t v348 = (int64x2_t *)(v273 + 8 * (v336 >> 6));
          int8x16_t v339 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v348, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v347)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v348->i64[0], 0), (uint64x2_t)vnegq_s64(v347)));
          if ((v336 & 0x3F) + v329 >= 0x81) {
            int8x16_t v339 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v348[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v347)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v348[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v347))), v339);
          }
        }
        unint64_t v349 = v344 + v329;
        if (v592.i64[0]) {
          BOOL v350 = v592.i64[0] >= v349;
        }
        else {
          BOOL v350 = 1;
        }
        char v351 = !v350;
        int8x16_t v352 = 0uLL;
        if (v329 > 0x80 || (v351 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v349 = v344;
          int8x16_t v355 = 0uLL;
        }
        else
        {
          int64x2_t v353 = vaddq_s64(vdupq_n_s64(v344 & 0x3F), vzip1q_s64((int64x2_t)0, v327));
          uint16x8_t v354 = (int64x2_t *)(v273 + 8 * (v344 >> 6));
          int8x16_t v355 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v354, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v353)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v354->i64[0], 0), (uint64x2_t)vnegq_s64(v353)));
          if ((v344 & 0x3F) + v329 >= 0x81) {
            int8x16_t v355 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v354[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v353)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v354[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v353))), v355);
          }
        }
        int8x16_t v356 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v615, v615));
        unint64_t v357 = vpaddq_s32((int32x4_t)v356, (int32x4_t)v356).u64[0];
        v358.i64[0] = v357;
        v358.i64[1] = HIDWORD(v357);
        int64x2_t v359 = v358;
        unint64_t v360 = vaddvq_s64(v358);
        unint64_t v361 = v360;
        unint64_t v362 = v349 + v360;
        if (v592.i64[0]) {
          BOOL v363 = v592.i64[0] >= v362;
        }
        else {
          BOOL v363 = 1;
        }
        char v364 = !v363;
        if (v360 > 0x80 || (v364 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v362 = v349;
        }
        else
        {
          unint64_t v365 = v349 & 0x3F;
          int64x2_t v366 = vaddq_s64(vdupq_n_s64(v365), vzip1q_s64((int64x2_t)0, v359));
          uint64_t v367 = (int64x2_t *)(v273 + 8 * (v349 >> 6));
          int8x16_t v352 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v367, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v366)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v367->i64[0], 0), (uint64x2_t)vnegq_s64(v366)));
          if (v365 + v361 >= 0x81) {
            int8x16_t v352 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v367[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v366)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v367[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v366))), v352);
          }
        }
        unint64_t v368 = v362 + v361;
        if (v592.i64[0]) {
          BOOL v369 = v592.i64[0] >= v368;
        }
        else {
          BOOL v369 = 1;
        }
        char v370 = !v369;
        int8x16_t v371 = 0uLL;
        if (v361 > 0x80 || (v370 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v368 = v362;
          int8x16_t v375 = 0uLL;
        }
        else
        {
          unint64_t v372 = v362 & 0x3F;
          int64x2_t v373 = vaddq_s64(vdupq_n_s64(v372), vzip1q_s64((int64x2_t)0, v359));
          int32x4_t v374 = (int64x2_t *)(v273 + 8 * (v362 >> 6));
          int8x16_t v375 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v374, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v373)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v374->i64[0], 0), (uint64x2_t)vnegq_s64(v373)));
          if (v372 + v361 >= 0x81) {
            int8x16_t v375 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v374[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v373)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v374[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v373))), v375);
          }
        }
        unint64_t v376 = v368 + v361;
        if (v592.i64[0]) {
          BOOL v377 = v592.i64[0] >= v376;
        }
        else {
          BOOL v377 = 1;
        }
        char v378 = !v377;
        if (v361 > 0x80 || (v378 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v376 = v368;
        }
        else
        {
          unint64_t v379 = v368 & 0x3F;
          int64x2_t v380 = vaddq_s64(vdupq_n_s64(v379), vzip1q_s64((int64x2_t)0, v359));
          int64x2_t v381 = (int64x2_t *)(v273 + 8 * (v368 >> 6));
          int8x16_t v371 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v381, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v380)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v381->i64[0], 0), (uint64x2_t)vnegq_s64(v380)));
          if (v379 + v361 >= 0x81) {
            int8x16_t v371 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v381[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v380)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v381[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v380))), v371);
          }
        }
        unint64_t v382 = v376 + v361;
        if (v592.i64[0]) {
          BOOL v383 = v592.i64[0] >= v382;
        }
        else {
          BOOL v383 = 1;
        }
        char v384 = !v383;
        int8x16_t v385 = 0uLL;
        if (v361 > 0x80 || (v384 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v382 = v376;
          int8x16_t v389 = 0uLL;
        }
        else
        {
          unint64_t v386 = v376 & 0x3F;
          int64x2_t v387 = vaddq_s64(vdupq_n_s64(v386), vzip1q_s64((int64x2_t)0, v359));
          uint16x8_t v388 = (int64x2_t *)(v273 + 8 * (v376 >> 6));
          int8x16_t v389 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v388, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v387)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v388->i64[0], 0), (uint64x2_t)vnegq_s64(v387)));
          if (v386 + v361 >= 0x81) {
            int8x16_t v389 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v388[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v387)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v388[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v387))), v389);
          }
        }
        int8x16_t v390 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v616, v616));
        unint64_t v391 = vpaddq_s32((int32x4_t)v390, (int32x4_t)v390).u64[0];
        v392.i64[0] = v391;
        v392.i64[1] = HIDWORD(v391);
        int64x2_t v393 = v392;
        unint64_t v394 = vaddvq_s64(v392);
        unint64_t v395 = v394;
        unint64_t v396 = v382 + v394;
        if (v592.i64[0]) {
          BOOL v397 = v592.i64[0] >= v396;
        }
        else {
          BOOL v397 = 1;
        }
        char v398 = !v397;
        if (v394 > 0x80 || (v398 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v396 = v382;
        }
        else
        {
          unint64_t v399 = v382 & 0x3F;
          int64x2_t v400 = vaddq_s64(vdupq_n_s64(v399), vzip1q_s64((int64x2_t)0, v393));
          unint64_t v401 = (int64x2_t *)(v273 + 8 * (v382 >> 6));
          int8x16_t v385 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v401, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v400)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v401->i64[0], 0), (uint64x2_t)vnegq_s64(v400)));
          if (v399 + v395 >= 0x81) {
            int8x16_t v385 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v401[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v400)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v401[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v400))), v385);
          }
        }
        unint64_t v402 = v396 + v395;
        if (v592.i64[0]) {
          BOOL v403 = v592.i64[0] >= v402;
        }
        else {
          BOOL v403 = 1;
        }
        char v404 = !v403;
        int8x16_t v405 = 0uLL;
        if (v395 > 0x80 || (v404 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v402 = v396;
          int8x16_t v409 = 0uLL;
        }
        else
        {
          unint64_t v406 = v396 & 0x3F;
          int64x2_t v407 = vaddq_s64(vdupq_n_s64(v406), vzip1q_s64((int64x2_t)0, v393));
          int32x4_t v408 = (int64x2_t *)(v273 + 8 * (v396 >> 6));
          int64x2_t v277 = vnegq_s64(v407);
          int8x16_t v409 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v408, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v407)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v408->i64[0], 0), (uint64x2_t)v277));
          if (v406 + v395 >= 0x81)
          {
            int64x2_t v277 = vdupq_n_s64(0xC0uLL);
            int8x16_t v409 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v408[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v407)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v408[1], 1), (uint64x2_t)vsubq_s64(v277, v407))), v409);
          }
        }
        unint64_t v410 = v402 + v395;
        if (v592.i64[0]) {
          BOOL v411 = v592.i64[0] >= v410;
        }
        else {
          BOOL v411 = 1;
        }
        char v412 = !v411;
        if (v395 > 0x80 || (v412 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v410 = v402;
        }
        else
        {
          unint64_t v413 = v402 & 0x3F;
          int64x2_t v414 = vaddq_s64(vdupq_n_s64(v413), vzip1q_s64((int64x2_t)0, v393));
          int64x2_t v415 = (int64x2_t *)(v273 + 8 * (v402 >> 6));
          int64x2_t v277 = vsubq_s64(vdupq_n_s64(0x40uLL), v414);
          int8x16_t v405 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v415, 1), (uint64x2_t)v277), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v415->i64[0], 0), (uint64x2_t)vnegq_s64(v414)));
          if (v413 + v395 >= 0x81)
          {
            int64x2_t v277 = vdupq_n_s64(0xC0uLL);
            int8x16_t v405 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v415[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v414)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v415[1], 1), (uint64x2_t)vsubq_s64(v277, v414))), v405);
          }
        }
        unint64_t v416 = v410 + v395;
        if (v592.i64[0]) {
          BOOL v417 = v592.i64[0] >= v416;
        }
        else {
          BOOL v417 = 1;
        }
        char v418 = !v417;
        int8x16_t v419 = 0uLL;
        if (v395 > 0x80 || (v418 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v416 = v410;
        }
        else
        {
          int64x2_t v420 = vaddq_s64(vdupq_n_s64(v410 & 0x3F), vzip1q_s64((int64x2_t)0, v393));
          uint16x8_t v421 = (int64x2_t *)(v273 + 8 * (v410 >> 6));
          int64x2_t v277 = vdupq_n_s64(0x40uLL);
          int8x16_t v419 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v421, 1), (uint64x2_t)vsubq_s64(v277, v420)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v421->i64[0], 0), (uint64x2_t)vnegq_s64(v420)));
          if ((v410 & 0x3F) + v395 >= 0x81)
          {
            int64x2_t v277 = vdupq_n_s64(0xC0uLL);
            int8x16_t v419 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v421[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v420)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v421[1], 1), (uint64x2_t)vsubq_s64(v277, v420))), v419);
          }
        }
        if (v275 || v592.i64[0] + 8 * result - v416 - 1024 >= 9 || v258 == 2)
        {
          uint64_t result = 0;
          int64x2_t v422 = vdupq_n_s64(0xFFFFF003FFuLL);
          *a1 = v422;
          a1[1] = v422;
          a1[2] = v422;
          a1[3] = v422;
          int32x4_t v423 = (int64x2_t *)((char *)a1 + a2);
          *int32x4_t v423 = v422;
          v423[1] = v422;
          v423[2] = v422;
          v423[3] = v422;
          int32x4_t v424 = (int64x2_t *)((char *)a1 + 2 * a2);
          *int32x4_t v424 = v422;
          v424[1] = v422;
          v424[2] = v422;
          v424[3] = v422;
          int32x4_t v425 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
          *int32x4_t v425 = v422;
          v425[1] = v422;
          v425[2] = v422;
          v425[3] = v422;
        }
        else
        {
          int32x2_t v426 = vzip1_s32(*(int32x2_t *)v248.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v248, v248, 8uLL));
          int32x2_t v427 = vzip1_s32(*(int32x2_t *)v263.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v263, v263, 8uLL));
          *(int32x2_t *)v248.i8 = vzip1_s32(*(int32x2_t *)v325.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v325, v325, 8uLL));
          int32x2_t v428 = vzip1_s32(*(int32x2_t *)v356.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v356, v356, 8uLL));
          int32x4_t v429 = (int32x4_t)vextq_s8(v390, v390, 8uLL);
          int32x2_t v430 = vzip1_s32(*(int32x2_t *)v390.i8, *(int32x2_t *)v429.i8);
          v431.i64[0] = v426.u32[0];
          v431.i64[1] = v426.u32[1];
          int64x2_t v432 = (int64x2_t)vshlq_u64((uint64x2_t)v246, (uint64x2_t)vnegq_s64(v431));
          *(int32x2_t *)v246.i8 = vmovn_s64((int64x2_t)v246);
          *(int32x2_t *)v432.i8 = vmovn_s64(v432);
          int16x8_t v433 = (int16x8_t)vzip1q_s32((int32x4_t)v246, (int32x4_t)v432);
          v431.i64[0] = v427.u32[0];
          v431.i64[1] = v427.u32[1];
          int64x2_t v434 = (int64x2_t)vshlq_u64((uint64x2_t)v261, (uint64x2_t)vnegq_s64(v431));
          *(int32x2_t *)v429.i8 = vmovn_s64((int64x2_t)v261);
          *(int32x2_t *)v434.i8 = vmovn_s64(v434);
          int32x4_t v435 = vzip1q_s32(v429, (int32x4_t)v434);
          v431.i64[0] = v248.u32[0];
          v431.i64[1] = v248.u32[1];
          int32x4_t v436 = (int32x4_t)vnegq_s64(v431);
          int64x2_t v437 = (int64x2_t)vshlq_u64((uint64x2_t)v316, (uint64x2_t)v436);
          *(int32x2_t *)v277.i8 = vmovn_s64((int64x2_t)v316);
          *(int32x2_t *)v437.i8 = vmovn_s64(v437);
          int16x8_t v438 = (int16x8_t)vzip1q_s32((int32x4_t)v277, (int32x4_t)v437);
          int64x2_t v439 = (int64x2_t)vshlq_u64((uint64x2_t)v343, (uint64x2_t)v436);
          *(int32x2_t *)v248.i8 = vmovn_s64((int64x2_t)v343);
          *(int32x2_t *)v439.i8 = vmovn_s64(v439);
          int16x8_t v440 = (int16x8_t)vzip1q_s32((int32x4_t)v248, (int32x4_t)v439);
          int64x2_t v441 = (int64x2_t)vshlq_u64((uint64x2_t)v339, (uint64x2_t)v436);
          *(int32x2_t *)v248.i8 = vmovn_s64((int64x2_t)v339);
          *(int32x2_t *)v441.i8 = vmovn_s64(v441);
          int16x8_t v442 = (int16x8_t)vzip1q_s32((int32x4_t)v248, (int32x4_t)v441);
          v431.i64[0] = v428.u32[0];
          v431.i64[1] = v428.u32[1];
          int64x2_t v443 = v431;
          v431.i64[0] = v430.u32[0];
          v431.i64[1] = v430.u32[1];
          int32x4_t v444 = (int32x4_t)vnegq_s64(v443);
          int64x2_t v445 = (int64x2_t)vshlq_u64((uint64x2_t)v355, (uint64x2_t)v436);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v355);
          *(int32x2_t *)v445.i8 = vmovn_s64(v445);
          int16x8_t v446 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v445);
          int64x2_t v447 = (int64x2_t)vshlq_u64((uint64x2_t)v352, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v352);
          *(int32x2_t *)v447.i8 = vmovn_s64(v447);
          int16x8_t v448 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v447);
          int64x2_t v449 = (int64x2_t)vshlq_u64((uint64x2_t)v375, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v375);
          *(int32x2_t *)v449.i8 = vmovn_s64(v449);
          int16x8_t v450 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v449);
          int64x2_t v451 = (int64x2_t)vshlq_u64((uint64x2_t)v371, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v371);
          *(int32x2_t *)v451.i8 = vmovn_s64(v451);
          int16x8_t v452 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v451);
          uint64x2_t v453 = (uint64x2_t)vnegq_s64(v431);
          int64x2_t v454 = (int64x2_t)vshlq_u64((uint64x2_t)v389, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v389);
          *(int32x2_t *)v454.i8 = vmovn_s64(v454);
          int16x8_t v455 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v454);
          int64x2_t v456 = (int64x2_t)vshlq_u64((uint64x2_t)v385, v453);
          *(int32x2_t *)v444.i8 = vmovn_s64((int64x2_t)v385);
          *(int32x2_t *)v456.i8 = vmovn_s64(v456);
          int16x8_t v457 = (int16x8_t)vzip1q_s32(v444, (int32x4_t)v456);
          int64x2_t v458 = (int64x2_t)vshlq_u64((uint64x2_t)v409, v453);
          *(int32x2_t *)v409.i8 = vmovn_s64((int64x2_t)v409);
          *(int32x2_t *)v458.i8 = vmovn_s64(v458);
          int16x8_t v459 = (int16x8_t)vzip1q_s32((int32x4_t)v409, (int32x4_t)v458);
          int64x2_t v460 = (int64x2_t)vshlq_u64((uint64x2_t)v405, v453);
          *(int32x2_t *)v458.i8 = vmovn_s64((int64x2_t)v405);
          *(int32x2_t *)v460.i8 = vmovn_s64(v460);
          int16x8_t v461 = (int16x8_t)vzip1q_s32((int32x4_t)v458, (int32x4_t)v460);
          int16x8_t v462 = (int16x8_t)vshlq_u32((uint32x4_t)v433, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v247.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v247, v247, 8uLL)))));
          *(int16x4_t *)v433.i8 = vmovn_s32((int32x4_t)v433);
          *(int16x4_t *)v462.i8 = vmovn_s32((int32x4_t)v462);
          int16x8_t v463 = vzip1q_s16(v433, v462);
          uint32x4_t v464 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v614.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v614, (int8x16_t)v614, 8uLL))));
          int16x8_t v465 = (int16x8_t)vshlq_u32((uint32x4_t)v435, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v262.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL)))));
          *(int16x4_t *)v355.i8 = vmovn_s32(v435);
          *(int16x4_t *)v465.i8 = vmovn_s32((int32x4_t)v465);
          int16x8_t v466 = vzip1q_s16((int16x8_t)v355, v465);
          int16x8_t v467 = (int16x8_t)vshlq_u32((uint32x4_t)v438, v464);
          *(int16x4_t *)v438.i8 = vmovn_s32((int32x4_t)v438);
          *(int16x4_t *)v467.i8 = vmovn_s32((int32x4_t)v467);
          int16x8_t v468 = vzip1q_s16(v438, v467);
          int16x8_t v469 = (int16x8_t)vshlq_u32((uint32x4_t)v440, v464);
          *(int16x4_t *)v440.i8 = vmovn_s32((int32x4_t)v440);
          *(int16x4_t *)v469.i8 = vmovn_s32((int32x4_t)v469);
          int16x8_t v470 = vzip1q_s16(v440, v469);
          int16x8_t v471 = (int16x8_t)vshlq_u32((uint32x4_t)v442, v464);
          *(int16x4_t *)v442.i8 = vmovn_s32((int32x4_t)v442);
          *(int16x4_t *)v471.i8 = vmovn_s32((int32x4_t)v471);
          int16x8_t v472 = vzip1q_s16(v442, v471);
          uint32x4_t v473 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v615.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v615, (int8x16_t)v615, 8uLL))));
          int16x8_t v474 = (int16x8_t)vshlq_u32((uint32x4_t)v446, v464);
          *(int16x4_t *)v446.i8 = vmovn_s32((int32x4_t)v446);
          *(int16x4_t *)v474.i8 = vmovn_s32((int32x4_t)v474);
          int16x8_t v475 = vzip1q_s16(v446, v474);
          int16x8_t v476 = (int16x8_t)vshlq_u32((uint32x4_t)v448, v473);
          *(int16x4_t *)v448.i8 = vmovn_s32((int32x4_t)v448);
          *(int16x4_t *)v476.i8 = vmovn_s32((int32x4_t)v476);
          int16x8_t v477 = vzip1q_s16(v448, v476);
          int16x8_t v478 = (int16x8_t)vshlq_u32((uint32x4_t)v450, v473);
          *(int16x4_t *)v450.i8 = vmovn_s32((int32x4_t)v450);
          *(int16x4_t *)v478.i8 = vmovn_s32((int32x4_t)v478);
          int16x8_t v479 = vzip1q_s16(v450, v478);
          int16x8_t v480 = (int16x8_t)vshlq_u32((uint32x4_t)v452, v473);
          *(int16x4_t *)v452.i8 = vmovn_s32((int32x4_t)v452);
          *(int16x4_t *)v480.i8 = vmovn_s32((int32x4_t)v480);
          int16x8_t v481 = vzip1q_s16(v452, v480);
          uint32x4_t v482 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v616.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v616, (int8x16_t)v616, 8uLL))));
          int16x8_t v483 = (int16x8_t)vshlq_u32((uint32x4_t)v455, v473);
          *(int16x4_t *)v455.i8 = vmovn_s32((int32x4_t)v455);
          *(int16x4_t *)v483.i8 = vmovn_s32((int32x4_t)v483);
          int16x8_t v484 = vzip1q_s16(v455, v483);
          int16x8_t v485 = (int16x8_t)vshlq_u32((uint32x4_t)v457, v482);
          *(int16x4_t *)v457.i8 = vmovn_s32((int32x4_t)v457);
          *(int16x4_t *)v485.i8 = vmovn_s32((int32x4_t)v485);
          int16x8_t v486 = vzip1q_s16(v457, v485);
          int16x8_t v487 = (int16x8_t)vshlq_u32((uint32x4_t)v459, v482);
          *(int16x4_t *)v459.i8 = vmovn_s32((int32x4_t)v459);
          *(int16x4_t *)v487.i8 = vmovn_s32((int32x4_t)v487);
          int16x8_t v488 = vzip1q_s16(v459, v487);
          int16x8_t v489 = (int16x8_t)vshlq_u32((uint32x4_t)v461, v482);
          *(int16x4_t *)v461.i8 = vmovn_s32((int32x4_t)v461);
          *(int16x4_t *)v489.i8 = vmovn_s32((int32x4_t)v489);
          int16x8_t v490 = vzip1q_s16(v461, v489);
          v489.i64[0] = 0x10001000100010;
          v489.i64[1] = 0x10001000100010;
          int16x8_t v491 = vsubq_s16(v489, (int16x8_t)v247);
          v492.i64[0] = 0xF000F000F000FLL;
          v492.i64[1] = 0xF000F000F000FLL;
          int16x8_t v493 = vaddq_s16((int16x8_t)v247, v492);
          int16x8_t v494 = vshlq_s16(v463, v491);
          v491.i64[0] = 0x10001000100010;
          v491.i64[1] = 0x10001000100010;
          int16x8_t v495 = vsubq_s16(v491, (int16x8_t)v262);
          int16x8_t v496 = vaddq_s16((int16x8_t)v262, v492);
          v492.i64[0] = 0x10001000100010;
          v492.i64[1] = 0x10001000100010;
          int16x8_t v497 = vshlq_s16(v466, v495);
          v495.i64[0] = 0xF000F000F000FLL;
          v495.i64[1] = 0xF000F000F000FLL;
          int16x8_t v498 = vsubq_s16(v492, v614);
          int16x8_t v499 = vaddq_s16(v614, v495);
          v495.i64[0] = 0x10001000100010;
          v495.i64[1] = 0x10001000100010;
          int16x8_t v500 = vshlq_s16(v468, v498);
          int16x8_t v501 = vshlq_s16(v470, v498);
          int16x8_t v502 = vshlq_s16(v472, v498);
          int16x8_t v503 = vshlq_s16(v475, v498);
          v498.i64[0] = 0xF000F000F000FLL;
          v498.i64[1] = 0xF000F000F000FLL;
          int16x8_t v504 = vsubq_s16(v495, v615);
          int16x8_t v505 = vaddq_s16(v615, v498);
          v498.i64[0] = 0x10001000100010;
          v498.i64[1] = 0x10001000100010;
          int16x8_t v506 = vshlq_s16(v477, v504);
          int16x8_t v507 = vshlq_s16(v479, v504);
          int16x8_t v508 = vshlq_s16(v481, v504);
          int16x8_t v509 = vshlq_s16(v484, v504);
          v504.i64[0] = 0xF000F000F000FLL;
          v504.i64[1] = 0xF000F000F000FLL;
          int16x8_t v510 = vsubq_s16(v498, v616);
          int16x8_t v511 = vaddq_s16(v616, v504);
          int8x16_t v512 = (int8x16_t)vshlq_s16(v494, v493);
          int16x8_t v513 = vshlq_s16(v497, v496);
          int16x8_t v514 = vshlq_s16(v500, v499);
          int16x8_t v515 = vshlq_s16(v501, v499);
          int16x8_t v516 = vshlq_s16(v502, v499);
          int16x8_t v517 = vshlq_s16(v503, v499);
          int16x8_t v518 = vshlq_s16(v506, v505);
          int16x8_t v519 = vshlq_s16(v507, v505);
          int16x8_t v520 = vshlq_s16(v508, v505);
          int16x8_t v521 = vshlq_s16(v509, v505);
          int64x2_t v522 = (int64x2_t)vshlq_u64((uint64x2_t)v419, v453);
          *(int32x2_t *)v419.i8 = vmovn_s64((int64x2_t)v419);
          *(int32x2_t *)v522.i8 = vmovn_s64(v522);
          int16x8_t v523 = (int16x8_t)vzip1q_s32((int32x4_t)v419, (int32x4_t)v522);
          int16x8_t v524 = vshlq_s16(vshlq_s16(v486, v510), v511);
          int16x8_t v525 = vshlq_s16(vshlq_s16(v488, v510), v511);
          int16x8_t v526 = vshlq_s16(vshlq_s16(v490, v510), v511);
          int16x8_t v527 = (int16x8_t)vshlq_u32((uint32x4_t)v523, v482);
          *(int16x4_t *)v523.i8 = vmovn_s32((int32x4_t)v523);
          *(int16x4_t *)v527.i8 = vmovn_s32((int32x4_t)v527);
          int16x8_t v528 = vshlq_s16(vshlq_s16(vzip1q_s16(v523, v527), v510), v511);
          int16x8_t v529 = vaddq_s16((int16x8_t)vandq_s8(v512, v587), v513);
          int8x16_t v530 = (int8x16_t)vdupq_lane_s64(v512.i64[0], 0);
          int16x8_t v531 = (int16x8_t)vandq_s8(v585, v530);
          int16x8_t v532 = vsubq_s16(v514, v531);
          int16x8_t v533 = vsubq_s16(v515, v531);
          int16x8_t v534 = vsubq_s16(v516, v531);
          int16x8_t v535 = vsubq_s16(v517, v531);
          int16x8_t v536 = (int16x8_t)vandq_s8(v586, v530);
          int16x8_t v537 = vsubq_s16(v518, v536);
          int16x8_t v538 = vsubq_s16(v519, v536);
          int16x8_t v539 = (int16x8_t)vandq_s8(v587, v530);
          int16x8_t v540 = vsubq_s16(v520, v536);
          int16x8_t v541 = vsubq_s16(v521, v536);
          v542.i64[0] = 0x1000100010001;
          v542.i64[1] = 0x1000100010001;
          int16x8_t v543 = vsubq_s16(v302, v539);
          int16x8_t v544 = vsubq_s16(v312, v539);
          int16x8_t v545 = (int16x8_t)vandq_s8(v588, v530);
          int16x8_t v546 = vsubq_s16(v524, v545);
          int16x8_t v547 = vsubq_s16(v525, v545);
          int16x8_t v548 = vsubq_s16(v526, v545);
          int16x8_t v549 = vsubq_s16(v528, v545);
          int8x16_t v550 = (int8x16_t)vsubq_s16(v324, v539);
          int8x16_t v551 = (int8x16_t)vsubq_s16(v529, v539);
          int16x8_t v599 = v529;
          int8x16_t v607 = (int8x16_t)v546;
          int8x16_t v608 = (int8x16_t)v547;
          int8x16_t v609 = (int8x16_t)v548;
          int8x16_t v610 = (int8x16_t)v549;
          if (vaddvq_s16(vceqq_s16(v589, (int16x8_t)v542)))
          {
            int8x16_t v552 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v612, v542));
            v553.i64[1] = v551.i64[1];
            v553.i64[0] = v550.i64[1];
            v554.i64[0] = v550.i64[0];
            v554.i64[1] = v551.i64[0];
            int16x8_t v555 = (int16x8_t)vbslq_s8(v552, v553, v551);
            int16x8_t v556 = (int16x8_t)vbslq_s8(v552, v554, v550);
            v557.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
            v557.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
            int16x8_t v558 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v543 - 1), v557), v552);
            v621.val[0] = (int8x16_t)vaddq_s16(v555, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v543 - 1), (int8x16_t)xmmword_242EA7710), v552));
            v621.val[1] = (int8x16_t)vaddq_s16(v543, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v543 - 1), (int8x16_t)xmmword_242EA7720), v552));
            v621.val[2] = (int8x16_t)vaddq_s16(v544, v558);
            v621.val[3] = (int8x16_t)vaddq_s16(v556, v558);
            int16x8_t v559 = (int16x8_t)vandq_s8(vqtbl4q_s8(v621, v557), v552);
            int8x16_t v551 = (int8x16_t)vaddq_s16((int16x8_t)v621.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v621, (int8x16_t)xmmword_242EA7730), v552));
            int16x8_t v543 = vaddq_s16((int16x8_t)v621.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v621, (int8x16_t)xmmword_242EA7740), v552));
            int16x8_t v599 = (int16x8_t)v551;
            int16x8_t v600 = v543;
            int16x8_t v544 = vaddq_s16((int16x8_t)v621.val[2], v559);
            int8x16_t v550 = (int8x16_t)vaddq_s16((int16x8_t)v621.val[3], v559);
            v619.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, (int8x16_t)xmmword_242EA7710), v552), v532);
            v619.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, (int8x16_t)xmmword_242EA7750), v552), v533);
            v619.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, v557), v552), v534);
            v619.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, (int8x16_t)xmmword_242EA7760), v552), v535);
            v621.val[3] = vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7730), v552);
            int16x8_t v560 = (int16x8_t)vandq_s8(vqtbl4q_s8(v619, v557), v552);
            int16x8_t v532 = vaddq_s16((int16x8_t)v621.val[3], (int16x8_t)v619.val[0]);
            int16x8_t v533 = vaddq_s16((int16x8_t)v619.val[1], (int16x8_t)v621.val[3]);
            int16x8_t v534 = vaddq_s16((int16x8_t)v619.val[2], v560);
            int16x8_t v535 = vaddq_s16((int16x8_t)v619.val[3], v560);
            v619.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA74D0), v552), v537);
            v619.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA75A0), v552), v538);
            v619.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA7710), v552), v540);
            v619.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA7720), v552), v541);
            v621.val[3] = vandq_s8(vqtbl4q_s8(v619, v557), v552);
            int16x8_t v537 = vaddq_s16((int16x8_t)v619.val[0], (int16x8_t)v621.val[3]);
            int16x8_t v538 = vaddq_s16((int16x8_t)v619.val[1], (int16x8_t)v621.val[3]);
            int16x8_t v540 = vaddq_s16((int16x8_t)v619.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA75D0), v552));
            int16x8_t v541 = vaddq_s16((int16x8_t)v619.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7770), v552));
            v619.val[0] = v607;
            v619.val[1] = v608;
            int8x16_t v54 = v612;
            v619.val[2] = v609;
            v619.val[3] = v610;
            v620.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA74D0), v552), (int16x8_t)v607);
            v620.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7780), v552), (int16x8_t)v608);
            int16x8_t v601 = v544;
            int16x8_t v602 = (int16x8_t)v550;
            v620.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7710), v552), (int16x8_t)v609);
            v620.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7720), v552), (int16x8_t)v610);
            int16x8_t v561 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, v557), v552);
            int16x8_t v562 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA75D0), v552);
            int16x8_t v563 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA7790), v552);
            int16x8_t v546 = vaddq_s16((int16x8_t)v620.val[0], v561);
            int16x8_t v547 = vaddq_s16((int16x8_t)v620.val[1], v561);
            int16x8_t v548 = vaddq_s16((int16x8_t)v620.val[2], v562);
            int16x8_t v549 = vaddq_s16((int16x8_t)v620.val[3], v563);
          }
          int8x16_t v564 = (int8x16_t)vaddq_s16(v611, (int16x8_t)v551);
          int8x16_t v565 = (int8x16_t)vaddq_s16(v543, v611);
          int8x16_t v566 = (int8x16_t)vaddq_s16(v544, v611);
          int8x16_t v567 = (int8x16_t)vaddq_s16((int16x8_t)v550, v611);
          int8x16_t v568 = (int8x16_t)vaddq_s16(v532, v611);
          int8x16_t v569 = (int8x16_t)vaddq_s16(v533, v611);
          int8x16_t v570 = (int8x16_t)vaddq_s16(v534, v611);
          int8x16_t v571 = (int8x16_t)vaddq_s16(v535, v611);
          int8x16_t v572 = (int8x16_t)vaddq_s16(v537, v611);
          int8x16_t v573 = (int8x16_t)vaddq_s16(v538, v611);
          int8x16_t v574 = (int8x16_t)vaddq_s16(v540, v611);
          int8x16_t v575 = (int8x16_t)vaddq_s16(v541, v611);
          int8x16_t v576 = (int8x16_t)vaddq_s16(v546, v611);
          int8x16_t v577 = (int8x16_t)vaddq_s16(v547, v611);
          int8x16_t v578 = (int8x16_t)vaddq_s16(v548, v611);
          int8x16_t v579 = (int8x16_t)vaddq_s16(v549, v611);
          v580.i64[0] = 0x10001000100010;
          v580.i64[1] = 0x10001000100010;
          int8x16_t v581 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v54, v580));
          int16x8_t v582 = (int16x8_t *)((char *)a1 + a2);
          *a1 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v564, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v564), 6uLL);
          a1[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v566, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v566), 6uLL);
          a1[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v572, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v572), 6uLL);
          a1[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v574, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v574), 6uLL);
          int16x8_t v583 = (int16x8_t *)((char *)a1 + 2 * a2);
          *int16x8_t v582 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v565, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v565), 6uLL);
          v582[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v567, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v567), 6uLL);
          v582[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v573, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v573), 6uLL);
          v582[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v575, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v575), 6uLL);
          *int16x8_t v583 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v568, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v568), 6uLL);
          v583[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v570, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v570), 6uLL);
          v583[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v576, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v576), 6uLL);
          v583[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v578, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v578), 6uLL);
          int16x8_t v584 = (int16x8_t *)((char *)v583 + a2);
          *int16x8_t v584 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v569, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v569), 6uLL);
          v584[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v571, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v571), 6uLL);
          v584[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v577, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v577), 6uLL);
          v584[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v579, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v579), 6uLL);
        }
        return result;
      }
      unint64_t v259 = v59;
    }
    unint64_t v59 = v259 + 8;
    goto LABEL_98;
  }
  v30.i64[0] = 0xA000A000A000ALL;
  v30.i64[1] = 0xA000A000A000ALL;
  int8x16_t v31 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v30, v30));
  v30.i64[0] = vpaddq_s32((int32x4_t)v31, (int32x4_t)v31).u64[0];
  v32.i64[0] = v30.u32[0];
  v32.i64[1] = v30.u32[1];
  int64x2_t v33 = v32;
  unint64_t v34 = vaddvq_s64(v32);
  unint64_t v35 = v34;
  int16x8_t v36 = 0uLL;
  if (v34 <= 0x80)
  {
    unsigned int v72 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
    int64x2_t v73 = vzip1q_s64((int64x2_t)0, v33);
    unint64_t v74 = 8 * (a3 & 7);
    unint64_t v75 = v34 + v74;
    int64x2_t v76 = vaddq_s64(v73, vdupq_n_s64(v74));
    int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v76)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v76)));
    if (v75 > 0x80) {
      int8x16_t v77 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v76)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v76))), v77);
    }
    unint64_t v78 = v75 & 0x3F;
    long long v79 = (int64x2_t *)((char *)v72 + 8 * (v75 >> 6));
    int64x2_t v80 = vaddq_s64(v73, vdupq_n_s64(v78));
    unint64_t v81 = v35 + v75;
    int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v80)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v80)));
    if (v35 + v78 >= 0x81) {
      int8x16_t v82 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v80)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v80))), v82);
    }
    unint64_t v83 = v81 & 0x3F;
    int v84 = (int64x2_t *)((char *)v72 + 8 * (v81 >> 6));
    int64x2_t v85 = vaddq_s64(v73, vdupq_n_s64(v83));
    unint64_t v86 = v35 + v81;
    int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v84, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v85)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v84->i64[0], 0), (uint64x2_t)vnegq_s64(v85)));
    if (v35 + v83 >= 0x81) {
      int8x16_t v87 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v84[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v85)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v84[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v85))), v87);
    }
    int32x2_t v88 = (int32x2_t)vextq_s8(v31, v31, 8uLL).u64[0];
    unint64_t v89 = v86 & 0x3F;
    int v90 = (int64x2_t *)((char *)v72 + 8 * (v86 >> 6));
    int64x2_t v91 = vaddq_s64(v73, vdupq_n_s64(v89));
    unint64_t v92 = v35 + v86;
    int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
    if (v35 + v89 >= 0x81) {
      int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), v93);
    }
    unint64_t v94 = v92 & 0x3F;
    int v95 = (int64x2_t *)((char *)v72 + 8 * (v92 >> 6));
    int64x2_t v96 = vaddq_s64(v73, vdupq_n_s64(v94));
    unint64_t v97 = v35 + v92;
    int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v95, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v96)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95->i64[0], 0), (uint64x2_t)vnegq_s64(v96)));
    if (v35 + v94 > 0x80) {
      int8x16_t v98 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v96)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v95[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v96))), v98);
    }
    int32x2_t v99 = vzip1_s32(*(int32x2_t *)v31.i8, v88);
    unint64_t v100 = v97 & 0x3F;
    uint64_t v101 = (int64x2_t *)((char *)v72 + 8 * (v97 >> 6));
    int64x2_t v102 = vaddq_s64(v73, vdupq_n_s64(v100));
    unint64_t v103 = v35 + v97;
    int8x16_t v104 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v101, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v101->i64[0], 0), (uint64x2_t)vnegq_s64(v102)));
    if (v35 + v100 >= 0x81) {
      int8x16_t v104 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v101[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v101[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v102))), v104);
    }
    v105.i64[0] = v99.u32[0];
    v105.i64[1] = v99.u32[1];
    int64x2_t v106 = v105;
    unint64_t v107 = v103 & 0x3F;
    uint64_t v108 = (int64x2_t *)((char *)v72 + 8 * (v103 >> 6));
    int64x2_t v109 = vaddq_s64(v73, vdupq_n_s64(v107));
    unint64_t v110 = v35 + v103;
    int8x16_t v111 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v108, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v108->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
    if (v35 + v107 >= 0x81) {
      int8x16_t v111 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v108[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v108[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), v111);
    }
    uint64x2_t v112 = (uint64x2_t)vnegq_s64(v106);
    unint64_t v113 = v110 & 0x3F;
    uint64_t v114 = (int64x2_t *)((char *)v72 + 8 * (v110 >> 6));
    int64x2_t v115 = vaddq_s64(v73, vdupq_n_s64(v113));
    unint64_t v116 = v35 + v110;
    int8x16_t v117 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v114, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v115)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v114->i64[0], 0), (uint64x2_t)vnegq_s64(v115)));
    if (v35 + v113 >= 0x81) {
      int8x16_t v117 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v114[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v115)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v114[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v115))), v117);
    }
    int64x2_t v118 = (int64x2_t)vshlq_u64((uint64x2_t)v77, v112);
    int64x2_t v119 = (int64x2_t)vshlq_u64((uint64x2_t)v82, v112);
    int64x2_t v120 = (int64x2_t)vshlq_u64((uint64x2_t)v87, v112);
    int64x2_t v121 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v112);
    int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v98, v112);
    int64x2_t v123 = (int64x2_t)vshlq_u64((uint64x2_t)v104, v112);
    int64x2_t v124 = (int64x2_t)vshlq_u64((uint64x2_t)v111, v112);
    int64x2_t v125 = (int64x2_t)vshlq_u64((uint64x2_t)v117, v112);
    unint64_t v126 = v116 & 0x3F;
    unint64_t v127 = (int64x2_t *)((char *)v72 + 8 * (v116 >> 6));
    int64x2_t v128 = vaddq_s64(v73, vdupq_n_s64(v126));
    unint64_t v129 = v35 + v116;
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v128)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v128)));
    if (v35 + v126 > 0x80) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v128)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v128))), v130);
    }
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v118.i8 = vmovn_s64(v118);
    *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v82);
    *(int32x2_t *)v119.i8 = vmovn_s64(v119);
    *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
    *(int32x2_t *)v120.i8 = vmovn_s64(v120);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    *(int32x2_t *)v121.i8 = vmovn_s64(v121);
    *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v98);
    *(int32x2_t *)v122.i8 = vmovn_s64(v122);
    *(int32x2_t *)v104.i8 = vmovn_s64((int64x2_t)v104);
    *(int32x2_t *)v123.i8 = vmovn_s64(v123);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    *(int32x2_t *)v124.i8 = vmovn_s64(v124);
    *(int32x2_t *)v117.i8 = vmovn_s64((int64x2_t)v117);
    *(int32x2_t *)v125.i8 = vmovn_s64(v125);
    int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v112);
    *(int32x2_t *)v130.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v131.i8 = vmovn_s64(v131);
    unint64_t v132 = v129 & 0x3F;
    unint64_t v133 = (int64x2_t *)((char *)v72 + 8 * (v129 >> 6));
    int64x2_t v134 = vaddq_s64(v73, vdupq_n_s64(v132));
    unint64_t v135 = v35 + v129;
    int8x16_t v136 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134));
    int8x16_t v137 = vorrq_s8(v136, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
    if (v35 + v132 >= 0x81)
    {
      int64x2_t v138 = v133[1];
      uint64x2_t v139 = (uint64x2_t)vdupq_lane_s64(v138.i64[0], 0);
      int8x16_t v136 = (int8x16_t)vdupq_laneq_s64(v138, 1);
      int64x2_t v5 = vdupq_n_s64(0xC0uLL);
      int8x16_t v137 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64(v139, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)v136, (uint64x2_t)vsubq_s64(v5, v134))), v137);
    }
    *(int32x2_t *)v136.i8 = vmovn_s64((int64x2_t)v137);
    *(int32x2_t *)v5.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v137, v112));
    unint64_t v140 = (int64x2_t *)((char *)v72 + 8 * (v135 >> 6));
    int64x2_t v141 = vaddq_s64(v73, vdupq_n_s64(v135 & 0x3F));
    unint64_t v142 = v35 + v135;
    int8x16_t v143 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v141)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v141)));
    if (v35 + (v135 & 0x3F) >= 0x81) {
      int8x16_t v143 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v141)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v141))), v143);
    }
    int32x4_t v144 = vzip1q_s32((int32x4_t)v77, (int32x4_t)v118);
    int32x4_t v145 = vzip1q_s32((int32x4_t)v82, (int32x4_t)v119);
    int16x8_t v146 = (int16x8_t)vzip1q_s32((int32x4_t)v87, (int32x4_t)v120);
    int16x8_t v147 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v121);
    int16x8_t v148 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v122);
    int16x8_t v149 = (int16x8_t)vzip1q_s32((int32x4_t)v104, (int32x4_t)v123);
    int16x8_t v150 = (int16x8_t)vzip1q_s32((int32x4_t)v111, (int32x4_t)v124);
    int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v117, (int32x4_t)v125);
    int16x8_t v152 = (int16x8_t)vzip1q_s32((int32x4_t)v130, (int32x4_t)v131);
    int16x8_t v153 = (int16x8_t)vzip1q_s32((int32x4_t)v136, (int32x4_t)v5);
    int64x2_t v154 = (int64x2_t)vshlq_u64((uint64x2_t)v143, v112);
    *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v143);
    *(int32x2_t *)v154.i8 = vmovn_s64(v154);
    int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v82, (int32x4_t)v154);
    unint64_t v156 = v35 + v142;
    unint64_t v157 = v142 & 0x3F;
    int64x2_t v158 = vaddq_s64(v73, vdupq_n_s64(v157));
    uint64_t v159 = (int64x2_t *)((char *)v72 + 8 * (v142 >> 6));
    int64x2_t v160 = vdupq_n_s64(0x40uLL);
    int8x16_t v161 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v158));
    int64x2_t v162 = vsubq_s64(v160, v158);
    int8x16_t v163 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)v162);
    int8x16_t v164 = vorrq_s8(v163, v161);
    if (v35 + v157 >= 0x81)
    {
      int64x2_t v165 = v159[1];
      uint64x2_t v166 = (uint64x2_t)vdupq_lane_s64(v165.i64[0], 0);
      int8x16_t v163 = (int8x16_t)vdupq_laneq_s64(v165, 1);
      int8x16_t v161 = (int8x16_t)vshlq_u64(v166, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v158));
      int64x2_t v162 = vdupq_n_s64(0xC0uLL);
      int8x16_t v164 = vorrq_s8(vorrq_s8(v161, (int8x16_t)vshlq_u64((uint64x2_t)v163, (uint64x2_t)vsubq_s64(v162, v158))), v164);
    }
    v167.i64[0] = 0x1000100010001;
    v167.i64[1] = 0x1000100010001;
    *(int16x4_t *)v161.i8 = vmovn_s32(v144);
    *(int16x4_t *)v162.i8 = vshrn_n_s32(v144, 0xAuLL);
    *(int16x4_t *)v160.i8 = vmovn_s32(v145);
    *(int16x4_t *)v104.i8 = vshrn_n_s32(v145, 0xAuLL);
    *(int16x4_t *)v111.i8 = vmovn_s32((int32x4_t)v146);
    *(int16x4_t *)v146.i8 = vshrn_n_s32((int32x4_t)v146, 0xAuLL);
    *(int16x4_t *)v163.i8 = vmovn_s32((int32x4_t)v147);
    int16x8_t v590 = (int16x8_t)v163;
    *(int16x4_t *)v147.i8 = vshrn_n_s32((int32x4_t)v147, 0xAuLL);
    *(int16x4_t *)v120.i8 = vmovn_s32((int32x4_t)v148);
    *(int16x4_t *)v148.i8 = vshrn_n_s32((int32x4_t)v148, 0xAuLL);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v149);
    *(int16x4_t *)v149.i8 = vshrn_n_s32((int32x4_t)v149, 0xAuLL);
    *(int16x4_t *)v124.i8 = vmovn_s32((int32x4_t)v150);
    *(int16x4_t *)v117.i8 = vshrn_n_s32((int32x4_t)v150, 0xAuLL);
    *(int16x4_t *)v125.i8 = vmovn_s32((int32x4_t)v151);
    *(int16x4_t *)v130.i8 = vshrn_n_s32((int32x4_t)v151, 0xAuLL);
    *(int16x4_t *)v131.i8 = vmovn_s32((int32x4_t)v152);
    *(int16x4_t *)v152.i8 = vshrn_n_s32((int32x4_t)v152, 0xAuLL);
    *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v153);
    *(int16x4_t *)v153.i8 = vshrn_n_s32((int32x4_t)v153, 0xAuLL);
    *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v155);
    *(int16x4_t *)v155.i8 = vshrn_n_s32((int32x4_t)v155, 0xAuLL);
    int64x2_t v168 = (int64x2_t)vshlq_u64((uint64x2_t)v164, v112);
    *(int32x2_t *)v144.i8 = vmovn_s64((int64x2_t)v164);
    *(int32x2_t *)v168.i8 = vmovn_s64(v168);
    int16x8_t v169 = (int16x8_t)vzip1q_s32(v144, (int32x4_t)v168);
    *(int16x4_t *)v168.i8 = vmovn_s32((int32x4_t)v169);
    *(int16x4_t *)v169.i8 = vshrn_n_s32((int32x4_t)v169, 0xAuLL);
    unint64_t v170 = v156 & 0x3F;
    unint64_t v171 = (int64x2_t *)((char *)v72 + 8 * (v156 >> 6));
    int64x2_t v172 = vaddq_s64(v73, vdupq_n_s64(v170));
    unint64_t v173 = v35 + v156;
    int8x16_t v174 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v171, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v172)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v171->i64[0], 0), (uint64x2_t)vnegq_s64(v172)));
    if (v35 + v170 > 0x80) {
      int8x16_t v174 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v171[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v172)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v171[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v172))), v174);
    }
    int16x8_t v175 = vshlq_n_s16(v167, 0xAuLL);
    int64x2_t v176 = (int64x2_t)vshlq_u64((uint64x2_t)v174, v112);
    *(int32x2_t *)v174.i8 = vmovn_s64((int64x2_t)v174);
    *(int32x2_t *)v176.i8 = vmovn_s64(v176);
    int16x8_t v177 = (int16x8_t)vzip1q_s32((int32x4_t)v174, (int32x4_t)v176);
    *(int16x4_t *)v174.i8 = vmovn_s32((int32x4_t)v177);
    *(int16x4_t *)v177.i8 = vshrn_n_s32((int32x4_t)v177, 0xAuLL);
    uint64_t v178 = (int64x2_t *)((char *)v72 + 8 * (v173 >> 6));
    int64x2_t v179 = vaddq_s64(v73, vdupq_n_s64(v173 & 0x3F));
    unint64_t v180 = v35 + v173;
    int8x16_t v181 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v178, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v179)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178->i64[0], 0), (uint64x2_t)vnegq_s64(v179)));
    if (v35 + (v173 & 0x3F) >= 0x81) {
      int8x16_t v181 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v179)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v178[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v179))), v181);
    }
    v182.i64[0] = -1;
    v182.i64[1] = -1;
    int8x16_t v183 = (int8x16_t)vaddq_s16(v175, v182);
    int8x16_t v184 = (int8x16_t)vzip1q_s16((int16x8_t)v161, (int16x8_t)v162);
    int8x16_t v185 = (int8x16_t)vzip1q_s16((int16x8_t)v160, (int16x8_t)v104);
    int8x16_t v186 = (int8x16_t)vzip1q_s16((int16x8_t)v111, v146);
    int8x16_t v187 = (int8x16_t)vzip1q_s16(v590, v147);
    int8x16_t v188 = (int8x16_t)vzip1q_s16((int16x8_t)v120, v148);
    int8x16_t v189 = (int8x16_t)vzip1q_s16((int16x8_t)v122, v149);
    int8x16_t v190 = (int8x16_t)vzip1q_s16((int16x8_t)v124, (int16x8_t)v117);
    int8x16_t v191 = (int8x16_t)vzip1q_s16((int16x8_t)v125, (int16x8_t)v130);
    int8x16_t v192 = (int8x16_t)vzip1q_s16((int16x8_t)v131, v152);
    int8x16_t v193 = (int8x16_t)vzip1q_s16(v151, v153);
    int8x16_t v194 = (int8x16_t)vzip1q_s16(v150, v155);
    int8x16_t v195 = (int8x16_t)vzip1q_s16((int16x8_t)v168, v169);
    int8x16_t v196 = (int8x16_t)vzip1q_s16((int16x8_t)v174, v177);
    int64x2_t v197 = (int64x2_t)vshlq_u64((uint64x2_t)v181, v112);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v181);
    *(int32x2_t *)v197.i8 = vmovn_s64(v197);
    int16x8_t v198 = (int16x8_t)vzip1q_s32((int32x4_t)v111, (int32x4_t)v197);
    *(int16x4_t *)v111.i8 = vmovn_s32((int32x4_t)v198);
    *(int16x4_t *)v198.i8 = vshrn_n_s32((int32x4_t)v198, 0xAuLL);
    int8x16_t v199 = (int8x16_t)vzip1q_s16((int16x8_t)v111, v198);
    unint64_t v200 = v35 + v180;
    unint64_t v201 = v180 & 0x3F;
    int64x2_t v202 = vaddq_s64(v73, vdupq_n_s64(v201));
    unint64_t v203 = (int64x2_t *)((char *)v72 + 8 * (v180 >> 6));
    int8x16_t v204 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v203, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v202)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v203->i64[0], 0), (uint64x2_t)vnegq_s64(v202)));
    if (v35 + v201 >= 0x81) {
      int8x16_t v204 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v203[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v202)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v203[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v202))), v204);
    }
    int16x8_t v205 = (int16x8_t)vandq_s8(v184, v183);
    int16x8_t v206 = (int16x8_t)vandq_s8(v185, v183);
    int16x8_t v207 = (int16x8_t)vandq_s8(v186, v183);
    int16x8_t v208 = (int16x8_t)vandq_s8(v187, v183);
    int16x8_t v209 = (int16x8_t)vandq_s8(v188, v183);
    int16x8_t v210 = (int16x8_t)vandq_s8(v189, v183);
    int16x8_t v211 = (int16x8_t)vandq_s8(v190, v183);
    int16x8_t v212 = (int16x8_t)vandq_s8(v191, v183);
    int16x8_t v213 = (int16x8_t)vandq_s8(v192, v183);
    int16x8_t v214 = (int16x8_t)vandq_s8(v193, v183);
    int16x8_t v215 = (int16x8_t)vandq_s8(v194, v183);
    int16x8_t v216 = (int16x8_t)vandq_s8(v195, v183);
    int16x8_t v217 = (int16x8_t)vandq_s8(v196, v183);
    int16x8_t v218 = (int16x8_t)vandq_s8(v199, v183);
    int64x2_t v219 = (int64x2_t)vshlq_u64((uint64x2_t)v204, v112);
    *(int32x2_t *)v187.i8 = vmovn_s64((int64x2_t)v204);
    *(int32x2_t *)v219.i8 = vmovn_s64(v219);
    int16x8_t v220 = (int16x8_t)vzip1q_s32((int32x4_t)v187, (int32x4_t)v219);
    *(int16x4_t *)v187.i8 = vmovn_s32((int32x4_t)v220);
    *(int16x4_t *)v220.i8 = vshrn_n_s32((int32x4_t)v220, 0xAuLL);
    int8x16_t v221 = (int8x16_t)vzip1q_s16((int16x8_t)v187, v220);
    uint64_t v222 = (int64x2_t *)((char *)v72 + 8 * (v200 >> 6));
    int64x2_t v223 = vaddq_s64(v73, vdupq_n_s64(v200 & 0x3F));
    int16x8_t v224 = (int16x8_t)vandq_s8(v221, v183);
    int8x16_t v225 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v222, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v223)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222->i64[0], 0), (uint64x2_t)vnegq_s64(v223)));
    if (v35 + (v200 & 0x3F) >= 0x81) {
      int8x16_t v225 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v223)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v222[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v223))), v225);
    }
    int16x8_t v47 = vshlq_n_s16(v209, 6uLL);
    int16x8_t v46 = vshlq_n_s16(v210, 6uLL);
    int16x8_t v45 = vshlq_n_s16(v211, 6uLL);
    int16x8_t v44 = vshlq_n_s16(v212, 6uLL);
    int16x8_t v36 = vshlq_n_s16(v213, 6uLL);
    int16x8_t v37 = vshlq_n_s16(v214, 6uLL);
    int16x8_t v38 = vshlq_n_s16(v215, 6uLL);
    int16x8_t v39 = vshlq_n_s16(v216, 6uLL);
    int64x2_t v226 = (int64x2_t)vshlq_u64((uint64x2_t)v225, v112);
    *(int32x2_t *)v215.i8 = vmovn_s64((int64x2_t)v225);
    *(int32x2_t *)v226.i8 = vmovn_s64(v226);
    int16x8_t v227 = (int16x8_t)vzip1q_s32((int32x4_t)v215, (int32x4_t)v226);
    *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v227);
    *(int16x4_t *)v227.i8 = vshrn_n_s32((int32x4_t)v227, 0xAuLL);
    int16x8_t v51 = vshlq_n_s16(v217, 6uLL);
    int16x8_t v50 = vshlq_n_s16(v218, 6uLL);
    int16x8_t v49 = vshlq_n_s16(v224, 6uLL);
    int16x8_t v48 = vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v215, v227), v183), 6uLL);
    int16x8_t v40 = vshlq_n_s16(v205, 6uLL);
    int16x8_t v41 = vshlq_n_s16(v206, 6uLL);
    int16x8_t v42 = vshlq_n_s16(v207, 6uLL);
    int16x8_t v43 = vshlq_n_s16(v208, 6uLL);
  }
  else
  {
    int16x8_t v37 = 0uLL;
    int16x8_t v38 = 0uLL;
    int16x8_t v39 = 0uLL;
    int16x8_t v40 = 0uLL;
    int16x8_t v41 = 0uLL;
    int16x8_t v42 = 0uLL;
    int16x8_t v43 = 0uLL;
    int16x8_t v44 = 0uLL;
    int16x8_t v45 = 0uLL;
    int16x8_t v46 = 0uLL;
    int16x8_t v47 = 0uLL;
    int16x8_t v48 = 0uLL;
    int16x8_t v49 = 0uLL;
    int16x8_t v50 = 0uLL;
    int16x8_t v51 = 0uLL;
  }
  unint64_t v228 = (int16x8_t *)((char *)a1 + a2);
  *a1 = v40;
  a1[1] = v42;
  a1[2] = v36;
  a1[3] = v38;
  BOOL v229 = (int16x8_t *)((char *)a1 + 2 * a2);
  *unint64_t v228 = v41;
  v228[1] = v43;
  v228[2] = v37;
  v228[3] = v39;
  *BOOL v229 = v47;
  v229[1] = v45;
  v229[2] = v51;
  v229[3] = v49;
  uint64_t v230 = (int16x8_t *)((char *)v229 + a2);
  uint64_t result = 160;
  *uint64_t v230 = v46;
  v230[1] = v44;
  v230[2] = v50;
  v230[3] = v48;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v10 = a3;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t v14 = (int16x8_t *)result;
    int v15 = a7;
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v12, v13, a7);
    v10 += result;
  }
  else
  {
    uint64_t v14 = (int16x8_t *)result;
    int v15 = a7;
    *a4 = 0;
  }
  uint64_t v35 = 4 * a2;
  int8x16_t v16 = a4 + 1;
  if (a6 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a6;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    int v19 = 4;
  }
  else {
    int v19 = v18;
  }
  if (v12 && v19)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v16, (int16x8_t *)((char *)v14 + v35), a2, v12, v19, v15);
    v10 += result;
  }
  else
  {
    *int8x16_t v16 = 0;
  }
  uint64_t v20 = a4 + 2;
  if (a5 <= 8) {
    int v21 = 8;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 8;
  if (v22 >= 8) {
    int v23 = 8;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v20, v14 + 4, a2, v23, v13, v15);
    v10 += result;
    unint64_t v24 = a4 + 3;
  }
  else
  {
    *uint64_t v20 = 0;
    unint64_t v24 = a4 + 3;
    if (!v23) {
      goto LABEL_33;
    }
  }
  if (v19)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v24, (int16x8_t *)((char *)v14 + v35 + 64), a2, v23, v19, v15);
    v10 += result;
    goto LABEL_34;
  }
LABEL_33:
  *unint64_t v24 = 0;
LABEL_34:
  unint64_t v25 = a4 + 4;
  if (a6 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a6;
  }
  unsigned int v27 = v26 - 8;
  if (v27 >= 4) {
    int v28 = 4;
  }
  else {
    int v28 = v27;
  }
  if (v12 && v28)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v25, (int16x8_t *)((char *)v14 + 8 * a2), a2, v12, v28, v15);
    v10 += result;
  }
  else
  {
    *unint64_t v25 = 0;
  }
  unint64_t v29 = a4 + 5;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v29, (int16x8_t *)((char *)v14 + 12 * a2), a2, v12, v32, v15);
    v10 += result;
    int64x2_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  else
  {
    *unint64_t v29 = 0;
    int64x2_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  if (v28)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v33, (int16x8_t *)((char *)v14 + 8 * a2 + 64), a2, v23, v28, v15);
    v10 += result;
    unint64_t v34 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int64x2_t v33 = 0;
  unint64_t v34 = a4 + 7;
  if (!v23)
  {
LABEL_62:
    *unint64_t v34 = 0;
    return result;
  }
LABEL_58:
  if (!v32) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v34, (int16x8_t *)((char *)v14 + 12 * a2 + 64), a2, v23, v32, v15);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressMacroblock(_OWORD *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1, 128, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 32, 128, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 4, 128, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 36, 128, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 64, 128, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 96, 128, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 68, 128, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 100, 128, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(unint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  unint64_t v7 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v9 = *v7;
  int16x8_t v10 = v7[1];
  int16x8_t v11 = v7[2];
  int16x8_t v12 = v7[3];
  unint64_t v8 = (int16x8_t *)((char *)v7 + a4);
  int16x8_t v13 = vshrq_n_s16(*a3, 6uLL);
  int16x8_t v14 = vshrq_n_s16(a3[1], 6uLL);
  int16x8_t v15 = vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  int16x8_t v16 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v17 = vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v18 = vshrq_n_s16(a3[3], 6uLL);
  int16x8_t v19 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v20 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v21 = vshrq_n_s16(v9, 6uLL);
  int16x8_t v22 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v23 = vshrq_n_s16(*v8, 6uLL);
  int16x8_t v24 = vshrq_n_s16(v8[1], 6uLL);
  int16x8_t v25 = vshrq_n_s16(v11, 6uLL);
  int16x8_t v26 = vshrq_n_s16(v12, 6uLL);
  int16x8_t v27 = vshrq_n_s16(v8[2], 6uLL);
  int16x8_t v28 = vshrq_n_s16(v8[3], 6uLL);
  int16x8_t v29 = (int16x8_t)vdupq_lane_s64(v13.i64[0], 0);
  v30.i64[0] = 0x5000500050005;
  v30.i64[1] = 0x5000500050005;
  int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v13, v29), 6uLL), v30);
  int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v14, v29), 6uLL), v30);
  int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v15, v29), 6uLL), v30);
  int8x16_t v472 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v16, v29), 6uLL), v30);
  int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v17, v29), 6uLL), v30);
  int8x16_t v474 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v29), 6uLL), v30);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v32 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  int16x8_t v35 = vzip1q_s16(v33, v34);
  int8x16_t v36 = (int8x16_t)vceqzq_s16(v35);
  int16x8_t v37 = vclsq_s16(v35);
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v38 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, v37), v36);
  int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v29), 6uLL), v30);
  int8x16_t v476 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v29), 6uLL), v30);
  int8x16_t v477 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v29), 6uLL), v30);
  int8x16_t v478 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v29), 6uLL), v30);
  v39.i64[0] = 0x8000800080008000;
  v39.i64[1] = 0x8000800080008000;
  int16x8_t v40 = vmaxq_s16(v33, v39);
  v41.i64[0] = 0x8000800080008000;
  v41.i64[1] = 0x8000800080008000;
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vmaxq_s16(v40, v44);
  int16x8_t v47 = vminq_s16(vminq_s16(v34, v41), v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int16x8_t v49 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v48)), (int8x16_t)vceqzq_s16(v48));
  int8x16_t v479 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v29), 6uLL), v30);
  int8x16_t v480 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v29), 6uLL), v30);
  int16x8_t v50 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v52 = vpmaxq_s16(v50, v50);
  int16x8_t v53 = vpminq_s16(v51, v51);
  int16x8_t v54 = vmaxq_s16(v46, v52);
  int16x8_t v55 = vminq_s16(v47, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int8x16_t v481 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v29), 6uLL), v30);
  int8x16_t v482 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v29), 6uLL), v30);
  int8x16_t v485 = (int8x16_t)v29;
  int8x16_t v483 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v29), 6uLL), v30);
  int8x16_t v484 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v28, v29), 6uLL), v30);
  int16x8_t v58 = vpmaxq_s16(v38, v38);
  int16x8_t v59 = vpmaxq_s16(v49, v49);
  int8x16_t v60 = (int8x16_t)vpmaxq_s16(v57, v57);
  int16x8_t v61 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v62 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v63 = vpmaxq_s16(v61, v61);
  int16x8_t v64 = vpminq_s16(v62, v62);
  int16x8_t v65 = vmaxq_s16(v54, v63);
  int16x8_t v66 = vminq_s16(v55, v64);
  int16x8_t v67 = vzip1q_s16(v63, v64);
  int16x8_t v68 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v67)), (int8x16_t)vceqzq_s16(v67));
  int16x8_t v69 = vpmaxq_s16(v68, v68);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(vmaxq_s16(v58, v59), vmaxq_s16((int16x8_t)v60, v69));
  int16x8_t v71 = vclzq_s16(vsubq_s16(v65, v66));
  v34.i64[0] = 0xF000F000F000FLL;
  v34.i64[1] = 0xF000F000F000FLL;
  v37.i64[0] = -1;
  v37.i64[1] = -1;
  int8x16_t v492 = (int8x16_t)v66;
  int8x16_t v493 = (int8x16_t)v65;
  int8x16_t v72 = (int8x16_t)vsubq_s16(v35, v71);
  int8x16_t v73 = (int8x16_t)vsubq_s16(vshlq_s16(v37, vsubq_s16(v34, v71)), v66);
  int8x16_t v74 = (int8x16_t)vcgtq_s16((int16x8_t)v70, (int16x8_t)v72);
  int16x8_t v75 = (int16x8_t)vbslq_s8(v74, v72, v70);
  int8x16_t v494 = vandq_s8(v73, v74);
  v73.i64[0] = 0x8000800080008;
  v73.i64[1] = 0x8000800080008;
  int8x16_t v76 = vorrq_s8((int8x16_t)0, vandq_s8(v74, v73));
  v70.i64[0] = 0x3000300030003;
  v70.i64[1] = 0x3000300030003;
  int16x8_t v77 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v59), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v78 = vmaxq_s16(vminq_s16(vsubq_s16(v75, (int16x8_t)v60), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v488 = vsubq_s16(v75, v77);
  int16x8_t v489 = vsubq_s16(v75, v78);
  int16x8_t v79 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v69), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v490 = vsubq_s16(v75, v79);
  int8x16_t v491 = (int8x16_t)v75;
  int16x8_t v80 = vaddq_s16(v79, v78);
  int16x8_t v81 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v58), (int16x8_t)v70), (int16x8_t)0);
  v60.i64[0] = 0x4000400040004;
  v60.i64[1] = 0x4000400040004;
  int8x16_t v82 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v75), v70), v76), vbicq_s8(v60, (int8x16_t)vceqq_s16(v80, vnegq_s16(vaddq_s16(v81, v77)))));
  int8x16_t v486 = v82;
  int16x8_t v487 = vsubq_s16(v75, v81);
  if (vmaxvq_s16(v75))
  {
    int16x8_t v467 = v20;
    int16x8_t v434 = v24;
    int16x8_t v435 = v28;
    int16x8_t v436 = v25;
    int16x8_t v437 = v26;
    int16x8_t v438 = v27;
    v439.val[0] = (int8x16_t)v13;
    v439.val[1] = (int8x16_t)v14;
    v439.val[2] = (int8x16_t)v15;
    v439.val[3] = (int8x16_t)v16;
    int8x16_t v465 = v76;
    int8x16_t v83 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v84 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v85 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v473, (int16x8_t)vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v86 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v474, (int16x8_t)vqtbl1q_s8(v474, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v87 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v475, (int16x8_t)vqtbl1q_s8(v475, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v88 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v476, (int16x8_t)vqtbl1q_s8(v476, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v89 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v477, (int16x8_t)vqtbl1q_s8(v477, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v90 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v478, (int16x8_t)vqtbl1q_s8(v478, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v91 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v479, (int16x8_t)vqtbl1q_s8(v479, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v480, (int16x8_t)vqtbl1q_s8(v480, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v93 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v481, (int16x8_t)vqtbl1q_s8(v481, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v482, (int16x8_t)vqtbl1q_s8(v482, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v483, (int16x8_t)vqtbl1q_s8(v483, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v96 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v484, (int16x8_t)vqtbl1q_s8(v484, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v444 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v472, (int16x8_t)vqtbl1q_s8(v472, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v445 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v471, (int16x8_t)vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v97 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v99 = vpmaxq_s16(v97, v97);
    int16x8_t v100 = vpminq_s16(v98, v98);
    v101.i64[0] = 0x8000800080008000;
    v101.i64[1] = 0x8000800080008000;
    int16x8_t v102 = vmaxq_s16(v99, v101);
    v103.i64[0] = 0x8000800080008000;
    v103.i64[1] = 0x8000800080008000;
    int16x8_t v104 = vminq_s16(v100, v103);
    int16x8_t v105 = vzip1q_s16(v99, v100);
    v106.i64[0] = 0x10001000100010;
    v106.i64[1] = 0x10001000100010;
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v105)), (int8x16_t)vceqzq_s16(v105));
    int8x16_t v108 = (int8x16_t)vpmaxq_s16(v107, v107);
    int8x16_t v451 = (int8x16_t)v87;
    int8x16_t v453 = (int8x16_t)v85;
    int8x16_t v448 = (int8x16_t)v88;
    int8x16_t v449 = (int8x16_t)v86;
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vmaxq_s16(v102, v111);
    int16x8_t v114 = vminq_s16(v104, v112);
    int16x8_t v115 = vzip1q_s16(v111, v112);
    v116.i64[0] = 0x10001000100010;
    v116.i64[1] = 0x10001000100010;
    int16x8_t v117 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v115)), (int8x16_t)vceqzq_s16(v115));
    int16x8_t v118 = vpmaxq_s16(v117, v117);
    int8x16_t v459 = (int8x16_t)v91;
    int8x16_t v461 = (int8x16_t)v89;
    int8x16_t v455 = (int8x16_t)v92;
    int8x16_t v457 = (int8x16_t)v90;
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v121 = vpmaxq_s16(v119, v119);
    int16x8_t v122 = vpminq_s16(v120, v120);
    int16x8_t v123 = vmaxq_s16(v113, v121);
    int16x8_t v124 = vminq_s16(v114, v122);
    int16x8_t v125 = vzip1q_s16(v121, v122);
    int16x8_t v126 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v125)), (int8x16_t)vceqzq_s16(v125));
    int16x8_t v127 = vpmaxq_s16(v126, v126);
    int8x16_t v463 = (int8x16_t)v96;
    int16x8_t v128 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v130 = vpmaxq_s16(v128, v128);
    int16x8_t v131 = vpminq_s16(v129, v129);
    int8x16_t v132 = (int8x16_t)vmaxq_s16(v123, v130);
    int16x8_t v133 = vminq_s16(v124, v131);
    int16x8_t v134 = vzip1q_s16(v130, v131);
    int16x8_t v135 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v134)), (int8x16_t)vceqzq_s16(v134));
    int16x8_t v136 = vpmaxq_s16(v135, v135);
    int8x16_t v137 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v108, v118), vmaxq_s16(v127, v136));
    int8x16_t v446 = (int8x16_t)v93;
    int8x16_t v447 = v132;
    int8x16_t v138 = (int8x16_t)v133;
    int16x8_t v139 = vclzq_s16(vsubq_s16((int16x8_t)v132, v133));
    int8x16_t v140 = (int8x16_t)vsubq_s16(v116, v139);
    int8x16_t v141 = (int8x16_t)vcgtq_s16((int16x8_t)v137, (int16x8_t)v140);
    int8x16_t v142 = vbslq_s8(v141, v140, v137);
    int16x8_t v143 = vsubq_s16((int16x8_t)v142, (int16x8_t)v108);
    v108.i64[0] = 0x3000300030003;
    v108.i64[1] = 0x3000300030003;
    int16x8_t v144 = vmaxq_s16(vminq_s16(v143, (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v145 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v118), (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v127), (int16x8_t)v108), (int16x8_t)0);
    v132.i64[0] = 0x3000300030003;
    v132.i64[1] = 0x3000300030003;
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v136), (int16x8_t)v108), (int16x8_t)0);
    v140.i64[0] = 0x4000400040004;
    v140.i64[1] = 0x4000400040004;
    int8x16_t v148 = vbicq_s8(v140, (int8x16_t)vceqq_s16(vaddq_s16(v147, v146), vnegq_s16(vaddq_s16(v144, v145))));
    v108.i64[0] = 0x18001800180018;
    v108.i64[1] = 0x18001800180018;
    int8x16_t v149 = vbslq_s8(v141, v108, (int8x16_t)v116);
    int8x16_t v441 = (int8x16_t)vsubq_s16((int16x8_t)v142, v145);
    int8x16_t v442 = (int8x16_t)vsubq_s16((int16x8_t)v142, v146);
    int8x16_t v443 = (int8x16_t)vsubq_s16((int16x8_t)v142, v147);
    v146.i64[0] = 0x7000700070007;
    v146.i64[1] = 0x7000700070007;
    int8x16_t v440 = (int8x16_t)vsubq_s16((int16x8_t)v142, v144);
    v108.i64[0] = 0x8000800080008;
    v108.i64[1] = 0x8000800080008;
    int16x8_t v150 = (int16x8_t)vandq_s8(v465, v108);
    int16x8_t v151 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v108);
    v140.i64[0] = 0x2000200020002;
    v140.i64[1] = 0x2000200020002;
    int16x8_t v152 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v132), (int16x8_t)v140), (int8x16_t)v116);
    int16x8_t v154 = v490;
    int8x16_t v153 = v491;
    int16x8_t v155 = v487;
    int16x8_t v156 = v488;
    int16x8_t v157 = vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16(v150)), v151), v152), v487, v146);
    int16x8_t v158 = v489;
    int8x16_t v159 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(v157, vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v142, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v149 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v148, (int16x8_t)v148)), (int16x8_t)v440, v146), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v442, (int16x8_t)v441), (int16x8_t)v443), 3uLL))).i64[0], 0);
    int v160 = (unsigned __int16)vaddvq_s16((int16x8_t)v159);
    BOOL v162 = a5 < 2 || a6 < 2;
    if (v160)
    {
      v163.i64[0] = 0x3000300030003;
      v163.i64[1] = 0x3000300030003;
      int8x16_t v164 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v142), v163), v149), v148);
      v165.i64[0] = 0xF000F000F000FLL;
      v165.i64[1] = 0xF000F000F000FLL;
      int8x16_t v469 = vbslq_s8(v159, v83, v469);
      int8x16_t v470 = vbslq_s8(v159, v84, v470);
      v163.i64[0] = -1;
      v163.i64[1] = -1;
      int8x16_t v471 = vbslq_s8(v159, v445, v471);
      int8x16_t v472 = vbslq_s8(v159, v444, v472);
      int8x16_t v473 = vbslq_s8(v159, v453, v473);
      int8x16_t v474 = vbslq_s8(v159, v449, v474);
      int8x16_t v475 = vbslq_s8(v159, v451, v475);
      int8x16_t v476 = vbslq_s8(v159, v448, v476);
      int8x16_t v477 = vbslq_s8(v159, v461, v477);
      int8x16_t v478 = vbslq_s8(v159, v457, v478);
      int8x16_t v479 = vbslq_s8(v159, v459, v479);
      int8x16_t v480 = vbslq_s8(v159, v455, v480);
      int8x16_t v481 = vbslq_s8(v159, v446, v481);
      int8x16_t v482 = vbslq_s8(v159, v94, v482);
      int8x16_t v483 = vbslq_s8(v159, v95, v483);
      int8x16_t v484 = vbslq_s8(v159, v463, v484);
      int16x8_t v155 = (int16x8_t)vbslq_s8(v159, v440, (int8x16_t)v487);
      int16x8_t v156 = (int16x8_t)vbslq_s8(v159, v441, (int8x16_t)v488);
      int16x8_t v487 = v155;
      int16x8_t v488 = v156;
      int16x8_t v158 = (int16x8_t)vbslq_s8(v159, v442, (int8x16_t)v489);
      int16x8_t v154 = (int16x8_t)vbslq_s8(v159, v443, (int8x16_t)v490);
      int16x8_t v489 = v158;
      int16x8_t v490 = v154;
      int8x16_t v493 = vbslq_s8(v159, v447, v493);
      int8x16_t v494 = vbslq_s8(v159, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v163, vsubq_s16(v165, v139)), (int16x8_t)v138), v141), v494);
      int8x16_t v153 = vbslq_s8(v159, v142, v491);
      int8x16_t v491 = v153;
      int8x16_t v492 = vbslq_s8(v159, v138, v492);
      int8x16_t v82 = vbslq_s8(v159, v164, v486);
      int8x16_t v485 = vbslq_s8(v159, (int8x16_t)vsubq_s16((int16x8_t)v485, (int16x8_t)vqtbl1q_s8(v485, (int8x16_t)xmmword_242EA77A0)), v485);
      int8x16_t v486 = v82;
    }
    if (!v162)
    {
      int16x8_t v166 = (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v167 = vsubq_s16((int16x8_t)v439.val[0], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7710));
      int16x8_t v168 = vsubq_s16((int16x8_t)v439.val[2], v166);
      int16x8_t v169 = vsubq_s16((int16x8_t)v439.val[3], v166);
      uint64_t v170 = v467.i64[0];
      uint64_t v171 = v439.val[3].i64[1];
      int16x8_t v172 = vsubq_s16(v17, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v173 = vsubq_s16(v18, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v174 = vsubq_s16(v19, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v175 = vsubq_s16(v467, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7760));
      uint64_t v176 = v434.i64[0];
      uint64_t v177 = v439.val[3].i64[1];
      int16x8_t v178 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v179 = vsubq_s16(v21, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v180 = vsubq_s16(v22, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v181 = vsubq_s16(v23, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v182 = vsubq_s16(v434, v178);
      v495.val[0] = (int8x16_t)v436;
      v495.val[1] = (int8x16_t)v437;
      v495.val[2] = (int8x16_t)v438;
      v495.val[3].i64[0] = v435.i64[0];
      v495.val[3].i64[1] = v439.val[3].i64[1];
      int16x8_t v183 = vsubq_s16(v436, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v184 = vsubq_s16(v437, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7780));
      int16x8_t v185 = vsubq_s16(v438, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7710));
      int16x8_t v186 = vsubq_s16(v435, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7720));
      v187.i64[1] = v167.i64[1];
      v187.i64[0] = v169.i64[1];
      v169.i64[1] = v167.i64[0];
      int16x8_t v188 = vshlq_n_s16(v169, 6uLL);
      int8x16_t v189 = (int8x16_t)vshlq_n_s16(v172, 6uLL);
      int16x8_t v190 = vshlq_n_s16(v173, 6uLL);
      int16x8_t v191 = vshlq_n_s16(v175, 6uLL);
      int16x8_t v192 = vshlq_n_s16(v179, 6uLL);
      v495.val[0] = (int8x16_t)vshlq_n_s16(v182, 6uLL);
      v495.val[1] = (int8x16_t)vshlq_n_s16(v184, 6uLL);
      v495.val[2].i64[0] = 0x5000500050005;
      v495.val[2].i64[1] = 0x5000500050005;
      int8x16_t v193 = (int8x16_t)vshlq_s16(vshlq_n_s16(v187, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v194 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v439.val[1], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v188, (int16x8_t)v495.val[2]);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v190, (int16x8_t)v495.val[2]);
      int16x8_t v197 = vshlq_s16(vshlq_n_s16(v174, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v198 = (int8x16_t)vshlq_s16(v191, (int16x8_t)v495.val[2]);
      int16x8_t v199 = vshlq_s16(v192, (int16x8_t)v495.val[2]);
      int8x16_t v200 = (int8x16_t)vshlq_s16(vshlq_n_s16(v180, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v201 = vshlq_s16(vshlq_n_s16(v181, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v202 = (int8x16_t)vshlq_s16((int16x8_t)v189, (int16x8_t)v495.val[2]);
      int8x16_t v203 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[0], (int16x8_t)v495.val[2]);
      v495.val[3] = (int8x16_t)vshlq_s16(vshlq_n_s16(v183, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v204 = (int8x16_t)vshlq_s16(vshlq_n_s16(v168, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v205 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[1], (int16x8_t)v495.val[2]);
      int16x8_t v206 = vshlq_s16(vshlq_n_s16(v185, 6uLL), (int16x8_t)v495.val[2]);
      v495.val[2] = (int8x16_t)vshlq_s16(vshlq_n_s16(v186, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v207 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v208 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v209 = vpmaxq_s16(v207, v207);
      int16x8_t v210 = vpminq_s16(v208, v208);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v211 = vmaxq_s16(v209, v186);
      v212.i64[0] = 0x8000800080008000;
      v212.i64[1] = 0x8000800080008000;
      int16x8_t v213 = vminq_s16(v210, v212);
      int16x8_t v214 = vzip1q_s16(v209, v210);
      v189.i64[0] = 0x10001000100010;
      v189.i64[1] = 0x10001000100010;
      int16x8_t v215 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v214)), (int8x16_t)vceqzq_s16(v214));
      int16x8_t v216 = vpmaxq_s16(v215, v215);
      int8x16_t v466 = (int8x16_t)v199;
      int8x16_t v468 = (int8x16_t)v197;
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v218 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v219 = vpmaxq_s16(v217, v217);
      int16x8_t v220 = vpminq_s16(v218, v218);
      int16x8_t v221 = vmaxq_s16(v211, v219);
      int16x8_t v222 = vminq_s16(v213, v220);
      int16x8_t v223 = vzip1q_s16(v219, v220);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int8x16_t v462 = v495.val[3];
      int8x16_t v464 = (int8x16_t)v201;
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int16x8_t v230 = vmaxq_s16(v221, v228);
      int16x8_t v231 = vminq_s16(v222, v229);
      int16x8_t v232 = vzip1q_s16(v228, v229);
      int16x8_t v233 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v232)), (int8x16_t)vceqzq_s16(v232));
      int16x8_t v234 = vpmaxq_s16(v233, v233);
      int8x16_t v458 = v495.val[2];
      int8x16_t v460 = (int8x16_t)v206;
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v237 = vpmaxq_s16(v235, v235);
      int16x8_t v238 = vpminq_s16(v236, v236);
      int16x8_t v239 = vmaxq_s16(v230, v237);
      int8x16_t v240 = (int8x16_t)vminq_s16(v231, v238);
      int16x8_t v241 = vzip1q_s16(v237, v238);
      int16x8_t v242 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v241)), (int8x16_t)vceqzq_s16(v241));
      int16x8_t v243 = vpmaxq_s16(v242, v242);
      int8x16_t v244 = (int8x16_t)vmaxq_s16(vmaxq_s16(v216, v225), vmaxq_s16(v234, v243));
      int8x16_t v456 = (int8x16_t)v239;
      int16x8_t v245 = vclzq_s16(vsubq_s16(v239, (int16x8_t)v240));
      int8x16_t v246 = (int8x16_t)vsubq_s16((int16x8_t)v189, v245);
      int8x16_t v247 = (int8x16_t)vcgtq_s16((int16x8_t)v244, (int16x8_t)v246);
      int8x16_t v248 = vbslq_s8(v247, v246, v244);
      v244.i64[0] = 0x3000300030003;
      v244.i64[1] = 0x3000300030003;
      int16x8_t v249 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v216), (int16x8_t)v244), (int16x8_t)0);
      int8x16_t v250 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v225), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v251 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v234), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v252 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v243), (int16x8_t)v244), (int16x8_t)0);
      v495.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v248, v249);
      int8x16_t v253 = (int8x16_t)vsubq_s16((int16x8_t)v248, (int16x8_t)v250);
      int16x8_t v254 = vsubq_s16((int16x8_t)v248, v251);
      v495.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v248, v252);
      int8x16_t v255 = (int8x16_t)vceqq_s16(vaddq_s16(v252, v251), vnegq_s16(vaddq_s16(v249, (int16x8_t)v250)));
      v250.i64[0] = 0x4000400040004;
      v250.i64[1] = 0x4000400040004;
      int8x16_t v256 = vbicq_s8(v250, v255);
      v252.i64[0] = 0x7000700070007;
      v252.i64[1] = 0x7000700070007;
      int8x16_t v450 = (int8x16_t)v254;
      int8x16_t v452 = v495.val[3];
      int8x16_t v454 = v495.val[2];
      int16x8_t v257 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v246, v247), vaddq_s16((int16x8_t)v256, (int16x8_t)v256)), (int16x8_t)v495.val[3], v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v254, (int16x8_t)v253), (int16x8_t)v495.val[2]), 3uLL));
      int8x16_t v82 = v486;
      int16x8_t v155 = v487;
      v258.i64[0] = 0x2000200020002;
      v258.i64[1] = 0x2000200020002;
      int16x8_t v259 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v486, v244), (int16x8_t)v258), v189);
      v244.i64[0] = 0x8000800080008;
      v244.i64[1] = 0x8000800080008;
      int16x8_t v154 = v490;
      int8x16_t v153 = v491;
      int16x8_t v156 = v488;
      int16x8_t v158 = v489;
      int8x16_t v260 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v486, v244))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v244)), v259), v487, v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), v257).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v260))
      {
        v261.i64[0] = 0x9000900090009;
        v261.i64[1] = 0x9000900090009;
        int8x16_t v262 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v248), v258), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v247, v261), (int16x8_t)vmvnq_s8(v247)));
        v261.i64[0] = -1;
        v261.i64[1] = -1;
        v263.i64[0] = 0xF000F000F000FLL;
        v263.i64[1] = 0xF000F000F000FLL;
        int16x8_t v155 = (int16x8_t)vbslq_s8(v260, v452, (int8x16_t)v487);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v260, v253, (int8x16_t)v488);
        int16x8_t v158 = (int16x8_t)vbslq_s8(v260, v450, (int8x16_t)v489);
        int16x8_t v154 = (int16x8_t)vbslq_s8(v260, v454, (int8x16_t)v490);
        int8x16_t v153 = vbslq_s8(v260, v248, v491);
        int8x16_t v82 = vbslq_s8(v260, vorrq_s8(v262, v256), v486);
        int8x16_t v484 = vbslq_s8(v260, v458, v484);
        int8x16_t v485 = vbslq_s8(v260, vextq_s8(v439.val[3], v439.val[3], 8uLL), v485);
        int8x16_t v469 = vbslq_s8(v260, v193, v469);
        int8x16_t v470 = vbslq_s8(v260, v194, v470);
        int8x16_t v471 = vbslq_s8(v260, v204, v471);
        int8x16_t v472 = vbslq_s8(v260, v195, v472);
        int8x16_t v473 = vbslq_s8(v260, v202, v473);
        int8x16_t v474 = vbslq_s8(v260, v196, v474);
        int8x16_t v475 = vbslq_s8(v260, v468, v475);
        int8x16_t v476 = vbslq_s8(v260, v198, v476);
        int8x16_t v477 = vbslq_s8(v260, v466, v477);
        int8x16_t v478 = vbslq_s8(v260, v200, v478);
        int8x16_t v479 = vbslq_s8(v260, v464, v479);
        int8x16_t v480 = vbslq_s8(v260, v203, v480);
        int8x16_t v481 = vbslq_s8(v260, v462, v481);
        int8x16_t v482 = vbslq_s8(v260, v205, v482);
        int8x16_t v483 = vbslq_s8(v260, v460, v483);
        int8x16_t v492 = vbslq_s8(v260, v240, v492);
        int8x16_t v493 = vbslq_s8(v260, v456, v493);
        int8x16_t v494 = vbslq_s8(v260, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v261, vsubq_s16(v263, v245)), (int16x8_t)v240), v247), v494);
        int16x8_t v487 = v155;
        int16x8_t v488 = v156;
        int16x8_t v489 = v158;
        int16x8_t v490 = v154;
        int8x16_t v491 = v153;
        int8x16_t v486 = v82;
      }
    }
    int16x8_t v264 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v155));
    int8x16_t v469 = (int8x16_t)vaddq_s16(v264, (int16x8_t)v469);
    int8x16_t v470 = (int8x16_t)vaddq_s16((int16x8_t)v470, v264);
    int8x16_t v471 = (int8x16_t)vaddq_s16((int16x8_t)v471, v264);
    int8x16_t v472 = (int8x16_t)vaddq_s16((int16x8_t)v472, v264);
    int16x8_t v265 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v156));
    int8x16_t v473 = (int8x16_t)vaddq_s16((int16x8_t)v473, v265);
    int8x16_t v474 = (int8x16_t)vaddq_s16((int16x8_t)v474, v265);
    int8x16_t v475 = (int8x16_t)vaddq_s16((int16x8_t)v475, v265);
    int8x16_t v476 = (int8x16_t)vaddq_s16((int16x8_t)v476, v265);
    int16x8_t v266 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v158));
    int8x16_t v477 = (int8x16_t)vaddq_s16((int16x8_t)v477, v266);
    int8x16_t v478 = (int8x16_t)vaddq_s16((int16x8_t)v478, v266);
    int8x16_t v479 = (int8x16_t)vaddq_s16((int16x8_t)v479, v266);
    int8x16_t v480 = (int8x16_t)vaddq_s16((int16x8_t)v480, v266);
    int8x16_t v267 = vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v154));
    int8x16_t v481 = (int8x16_t)vaddq_s16((int16x8_t)v481, (int16x8_t)v267);
    int8x16_t v482 = (int8x16_t)vaddq_s16((int16x8_t)v482, (int16x8_t)v267);
    int8x16_t v483 = (int8x16_t)vaddq_s16((int16x8_t)v483, (int16x8_t)v267);
    int8x16_t v484 = (int8x16_t)vaddq_s16((int16x8_t)v484, (int16x8_t)v267);
    v267.i64[0] = 0x8000800080008;
    v267.i64[1] = 0x8000800080008;
    v268.i64[0] = 0x3000300030003;
    v268.i64[1] = 0x3000300030003;
    v269.i64[0] = 0x2000200020002;
    v269.i64[1] = 0x2000200020002;
    int8x16_t v270 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v268), v269);
    v269.i64[0] = 0x10001000100010;
    v269.i64[1] = 0x10001000100010;
    int16x8_t v271 = (int16x8_t)vandq_s8(v270, (int8x16_t)v269);
    v269.i64[0] = 0x7000700070007;
    v269.i64[1] = 0x7000700070007;
    int16x8_t v272 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v153, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v82, v267))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v267)), v271), v155, v269), vshlq_n_s16(vaddq_s16(v158, vaddq_s16(v156, v154)), 3uLL));
    int16x8_t v273 = vpaddq_s16(v272, v272);
    if ((unint64_t)(vpaddq_s16(v273, v273).i16[0] - 949) < 0xFFFFFFFFFFFFFBF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 128;
    }
    else
    {
      uint64_t v274 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v275 = 8 * (a1 & 7);
      if (v275) {
        uint64_t v276 = *v274 & ~(-1 << v275);
      }
      else {
        uint64_t v276 = 0;
      }
      *a2 = 0;
      uint64_t v280 = ((v153.u16[0] << 20) - 0x100000) & 0xF00000;
      v281.i32[0] = v82.u16[1];
      v281.i32[1] = v82.u16[2];
      int8x8_t v282 = vand_s8((int8x8_t)vshl_u32(v281, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v283 = v282.i32[1];
      __int32 v284 = v282.i32[0] | v82.i8[0] & 0x1F;
      if (!v153.i16[0]) {
        uint64_t v280 = 0;
      }
      unint64_t v285 = (unint64_t)((v153.i8[4] - 1) & 0xF) << 28;
      if (!v153.i16[2]) {
        unint64_t v285 = 0;
      }
      v286.i32[0] = v153.u16[3];
      v286.i32[1] = v153.u16[1];
      int32x2_t v287 = vceqz_s32((int32x2_t)vand_s8(v286, (int8x8_t)0xFFFF0000FFFFLL));
      v288.i64[0] = v287.i32[0];
      v288.i64[1] = v287.i32[1];
      int8x16_t v289 = (int8x16_t)v288;
      int8x8_t v290 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v286, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v288.i64[0] = v290.u32[0];
      v288.i64[1] = v290.u32[1];
      int8x16_t v291 = vbicq_s8((int8x16_t)vshlq_u64(v288, (uint64x2_t)xmmword_242EA77F0), v289);
      v289.i64[0] = v285;
      v289.i64[1] = v284 | v283 | ((unint64_t)(v82.i8[6] & 0x1F) << 15) | v280;
      int8x16_t v292 = vorrq_s8(v289, v291);
      uint64_t v293 = v485.i64[0];
      unint64_t v294 = vorrq_s8(v292, (int8x16_t)vdupq_laneq_s64((int64x2_t)v292, 1)).u64[0];
      unint64_t v295 = (v294 << v275) | v276;
      if (v275 >= 0x1C)
      {
        *uint64_t v274 = v295;
        unint64_t v295 = v294 >> (-8 * (a1 & 7u));
      }
      v296.i64[0] = WORD1(v293);
      v296.i64[1] = WORD2(v293);
      v297.i64[0] = 0xFFFFLL;
      v297.i64[1] = 0xFFFFLL;
      int8x16_t v298 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v296, v297), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v299 = v298.i64[0] | v293 & 0x3FF | v298.i64[1] | ((unint64_t)(HIWORD(v293) & 0x3FF) << 30);
      unint64_t v300 = (v275 + 36) & 0x3C;
      unint64_t v301 = v295 | (v299 << v300);
      if (v300 >= 0x18)
      {
        *(void *)((char *)v274 + (((v275 + 36) >> 3) & 8)) = v301;
        unint64_t v301 = v299 >> -(char)v300;
      }
      unint64_t v302 = v275 + 76;
      int8x16_t v303 = (int8x16_t)vsubq_s16((int16x8_t)v491, v487);
      int8x16_t v304 = (int8x16_t)vsubq_s16((int16x8_t)v491, v488);
      int8x16_t v305 = (int8x16_t)vsubq_s16((int16x8_t)v491, v489);
      int8x16_t v306 = (int8x16_t)vsubq_s16((int16x8_t)v491, v490);
      *(uint8x8_t *)v303.i8 = vqmovn_u16((uint16x8_t)v303);
      *(uint8x8_t *)v304.i8 = vqmovn_u16((uint16x8_t)v304);
      *(uint8x8_t *)v305.i8 = vqmovn_u16((uint16x8_t)v305);
      *(uint8x8_t *)v306.i8 = vqmovn_u16((uint16x8_t)v306);
      int16x8_t v307 = (int16x8_t)vtrn1q_s8(v303, v304);
      int16x8_t v308 = (int16x8_t)vtrn2q_s8(v303, v304);
      int8x16_t v309 = vtrn1q_s8(v305, v306);
      int16x8_t v310 = (int16x8_t)vtrn2q_s8(v305, v306);
      int8x16_t v311 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v307, (int16x8_t)v309), (int32x4_t)vzip1q_s16(v308, v310)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v307, (int16x8_t)v309), (int32x4_t)vtrn2q_s16(v308, v310)));
      v309.i64[0] = 0x202020202020202;
      v309.i64[1] = 0x202020202020202;
      int8x16_t v312 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v486.i8, (int16x4_t)0x4000400040004)), v309);
      v309.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v309.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v305.i64[0] = -1;
      v305.i64[1] = -1;
      uint8x16_t v313 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v305, (uint8x16_t)vorrq_s8(v312, v309)), v311);
      int16x8_t v314 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v312.i8);
      int16x8_t v315 = (int16x8_t)vmovl_high_u8((uint8x16_t)v312);
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v313.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)), (int16x8_t)vshlq_u16(vmovl_high_u8(v313), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v315)));
      uint16x8_t v317 = (uint16x8_t)vpaddq_s16(v314, v315);
      int32x4_t v318 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v317.i8);
      int32x4_t v319 = (int32x4_t)vmovl_high_u16(v317);
      int32x4_t v320 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v319)));
      int32x4_t v321 = vpaddq_s32(v318, v319);
      v322.i64[0] = v320.u32[0];
      v322.i64[1] = v320.u32[1];
      uint64x2_t v323 = (uint64x2_t)v322;
      v322.i64[0] = v320.u32[2];
      v322.i64[1] = v320.u32[3];
      uint64x2_t v324 = (uint64x2_t)v322;
      v322.i64[0] = v321.u32[0];
      v322.i64[1] = v321.u32[1];
      int64x2_t v325 = v322;
      v322.i64[0] = v321.u32[2];
      v322.i64[1] = v321.u32[3];
      int64x2_t v326 = vpaddq_s64((int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)), (int64x2_t)vshlq_u64(v324, (uint64x2_t)vzip1q_s64((int64x2_t)0, v322)));
      int64x2_t v327 = vpaddq_s64(v325, v322);
      uint64_t v328 = (v275 + 76) & 0x3C;
      unint64_t v329 = (v326.i64[0] << v328) | v301;
      if ((unint64_t)(v327.i64[0] + v328) >= 0x40)
      {
        *(void *)((char *)v274 + ((v302 >> 3) & 0x18)) = v329;
        unint64_t v329 = (unint64_t)v326.i64[0] >> -(char)v328;
      }
      unint64_t v330 = v327.i64[0] + v302;
      unint64_t v331 = v329 | (v326.i64[1] << v330);
      if ((v330 & 0x3F) + v327.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v326.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      unint64_t v332 = v330 + v327.i64[1];
      v333.i64[0] = 0x8000800080008;
      v333.i64[1] = 0x8000800080008;
      v334.i64[0] = -1;
      v334.i64[1] = -1;
      int16x8_t v335 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v486, v333), (int8x16_t)0, 8uLL), v491);
      v336.i64[0] = 0xF000F000F000FLL;
      v336.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v337 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v334, (uint16x8_t)vaddq_s16(v335, v336)), v494);
      int32x4_t v338 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v335.i8);
      int32x4_t v339 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v337.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v338)), (int32x4_t)vmovl_high_u16(v337));
      int32x4_t v340 = vpaddq_s32(v338, (int32x4_t)vmovl_high_u16((uint16x8_t)v335));
      v341.i64[0] = v339.u32[0];
      v341.i64[1] = v339.u32[1];
      uint64x2_t v342 = (uint64x2_t)v341;
      v341.i64[0] = v339.u32[2];
      v341.i64[1] = v339.u32[3];
      uint64x2_t v343 = (uint64x2_t)v341;
      v341.i64[0] = v340.u32[0];
      v341.i64[1] = v340.u32[1];
      int64x2_t v344 = v341;
      v341.i64[0] = v340.u32[2];
      v341.i64[1] = v340.u32[3];
      int64x2_t v345 = vpaddq_s64((int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)), (int64x2_t)vshlq_u64(v343, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)));
      int64x2_t v346 = vpaddq_s64(v344, v341);
      unint64_t v347 = (v345.i64[0] << v332) | v331;
      if (v346.i64[0] + (v332 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v345.i64[0] >> -(v332 & 0x3F);
        if ((v332 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346.i64[0] + v332;
      unint64_t v349 = v347 | (v345.i64[1] << v348);
      if ((v348 & 0x3F) + v346.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v345.i64[1] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348 + v346.i64[1];
      int16x8_t v351 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v487, 8uLL);
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      v353.i64[0] = -1;
      v353.i64[1] = -1;
      uint16x8_t v354 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v353, (uint16x8_t)vaddq_s16(v351, v352)), v469);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16((uint16x8_t)v351);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v354), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v350) | v349;
      if (v364.i64[0] + (v350 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        if ((v350 & 0x3F) != 0) {
          unint64_t v365 = (unint64_t)v363.i64[0] >> -(v350 & 0x3F);
        }
        else {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364.i64[0] + v350;
      uint64_t v367 = (v364.i64[0] + v350) & 0x3F;
      unint64_t v368 = v365 | (v363.i64[1] << v366);
      if ((unint64_t)(v367 + v364.i64[1]) >= 0x40)
      {
        *(void *)((char *)v274 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v363.i64[1] >> -(char)v367;
        if (!v367) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v366 + v364.i64[1];
      v370.i64[0] = 0xF000F000F000FLL;
      v370.i64[1] = 0xF000F000F000FLL;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v373 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v371, (uint16x8_t)vaddq_s16(v487, v370)), *(int8x16_t *)((char *)&v469 + i));
        int32x4_t v374 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v487.i8);
        int32x4_t v375 = (int32x4_t)vmovl_high_u16((uint16x8_t)v487);
        int32x4_t v376 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v374)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)));
        int32x4_t v377 = vpaddq_s32(v374, v375);
        v378.i64[0] = v376.u32[0];
        v378.i64[1] = v376.u32[1];
        uint64x2_t v379 = (uint64x2_t)v378;
        v378.i64[0] = v376.u32[2];
        v378.i64[1] = v376.u32[3];
        uint64x2_t v380 = (uint64x2_t)v378;
        v378.i64[0] = v377.u32[0];
        v378.i64[1] = v377.u32[1];
        int64x2_t v381 = v378;
        v378.i64[0] = v377.u32[2];
        v378.i64[1] = v377.u32[3];
        int64x2_t v382 = vpaddq_s64((int64x2_t)vshlq_u64(v379, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)), (int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)));
        int64x2_t v383 = vpaddq_s64(v381, v378);
        unint64_t v384 = (v382.i64[0] << v369) | v368;
        if (v383.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v382.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v383.i64[0] + v369;
        unint64_t v368 = v384 | (v382.i64[1] << v385);
        if ((v385 & 0x3F) + v383.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v382.i64[1] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v385 + v383.i64[1];
      }
      uint64_t v386 = 0;
      v387.i64[0] = 0xF000F000F000FLL;
      v387.i64[1] = 0xF000F000F000FLL;
      v388.i64[0] = -1;
      v388.i64[1] = -1;
      do
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v388, (uint16x8_t)vaddq_s16(v488, v387)), *(int8x16_t *)((char *)&v473 + v386));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v488.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v488);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v369) | v368;
        if (v399.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v369;
        unint64_t v368 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v401 + v399.i64[1];
        v386 += 16;
      }
      while (v386 != 64);
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v489, v403)), *(int8x16_t *)((char *)&v477 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v489.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v489);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v369) | v368;
        if (v415.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v369;
        unint64_t v368 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      uint64_t v418 = 0;
      v419.i64[0] = 0xF000F000F000FLL;
      v419.i64[1] = 0xF000F000F000FLL;
      v420.i64[0] = -1;
      v420.i64[1] = -1;
      do
      {
        uint16x8_t v421 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v420, (uint16x8_t)vaddq_s16(v490, v419)), *(int8x16_t *)((char *)&v481 + v418));
        int32x4_t v422 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v490.i8);
        int32x4_t v423 = (int32x4_t)vmovl_high_u16((uint16x8_t)v490);
        int32x4_t v424 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v421.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v422)), (int32x4_t)vshlq_u32(vmovl_high_u16(v421), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v423)));
        int32x4_t v425 = vpaddq_s32(v422, v423);
        v426.i64[0] = v424.u32[0];
        v426.i64[1] = v424.u32[1];
        uint64x2_t v427 = (uint64x2_t)v426;
        v426.i64[0] = v424.u32[2];
        v426.i64[1] = v424.u32[3];
        uint64x2_t v428 = (uint64x2_t)v426;
        v426.i64[0] = v425.u32[0];
        v426.i64[1] = v425.u32[1];
        int64x2_t v429 = v426;
        v426.i64[0] = v425.u32[2];
        v426.i64[1] = v425.u32[3];
        int64x2_t v430 = vpaddq_s64((int64x2_t)vshlq_u64(v427, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)), (int64x2_t)vshlq_u64(v428, (uint64x2_t)vzip1q_s64((int64x2_t)0, v426)));
        int64x2_t v431 = vpaddq_s64(v429, v426);
        unint64_t v432 = (v430.i64[0] << v369) | v368;
        if (v431.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v432;
          unint64_t v432 = (unint64_t)v430.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v432 = 0;
          }
        }
        unint64_t v433 = v431.i64[0] + v369;
        unint64_t v368 = v432 | (v430.i64[1] << v433);
        if ((v433 & 0x3F) + v431.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v433 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v430.i64[1] >> -(v433 & 0x3F);
          if ((v433 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v433 + v431.i64[1];
        v418 += 16;
      }
      while (v418 != 64);
      if ((v369 & 0x3F) != 0) {
        *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
      }
      unint64_t result = (v369 - v275 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v277 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v278 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v278.i8 = vorr_s8(*(int8x8_t *)v278.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL));
    *(_DWORD *)a1 = v278.i32[0];
    *(unsigned char *)(a1 + 4) = v278.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v10 = a6;
  long long v60 = 0u;
  long long v61 = 0u;
  if (a5 > 1)
  {
    uint64_t v13 = a5 & 0xFE;
    uint64_t v14 = a5 - v13;
    if (a5 == v13)
    {
      unsigned __int8 v15 = 0;
      v16.i64[0] = 0xFC00FC00FC00FC00;
      v16.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        int16x8_t v17 = (int8x16_t *)(&v62 + 2 * v15);
        int16x8_t v18 = (const double *)a3;
        uint64_t v19 = a5;
        do
        {
          float64x2x2_t v77 = vld2q_f64(v18);
          v18 += 4;
          v17[-2] = vandq_s8((int8x16_t)vshrq_n_u64((uint64x2_t)v77.val[0], 6uLL), v16);
          *v17++ = vandq_s8((int8x16_t)vshrq_n_u64((uint64x2_t)v77.val[1], 6uLL), v16);
          v19 -= 2;
        }
        while (v19);
        ++v14;
        v15 += 2;
        a3 += a4;
      }
      while (v14 != a6);
    }
    else
    {
      unsigned __int8 v20 = 0;
      uint64_t v21 = 0;
      int16x8_t v22 = (char *)&v62 + ((8 * a5) & 0x7F0);
      v23.i64[0] = 0xFC00FC00FC00FC00;
      v23.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        uint64_t v24 = 32 * v20;
        int16x8_t v25 = (uint64_t *)&v22[v24];
        int16x8_t v26 = (int8x16_t *)((char *)&v62 + v24);
        int16x8_t v27 = (const double *)a3;
        uint64_t v28 = a5 & 0xFE;
        do
        {
          float64x2x2_t v78 = vld2q_f64(v27);
          v27 += 4;
          v26[-2] = vandq_s8((int8x16_t)vshrq_n_u64((uint64x2_t)v78.val[0], 6uLL), v23);
          *v26++ = vandq_s8((int8x16_t)vshrq_n_u64((uint64x2_t)v78.val[1], 6uLL), v23);
          v28 -= 2;
        }
        while (v28);
        uint64_t v29 = 16 * v13;
        uint64_t v30 = a5 - v13;
        do
        {
          unint64_t v31 = *(void *)(a3 + v29 + 8);
          *(v25 - 4) = (*(void *)(a3 + v29) >> 6) & 0x3FF03FF03FF03FFLL;
          *v25++ = (v31 >> 6) & 0x3FF03FF03FF03FFLL;
          v29 += 16;
          --v30;
        }
        while (v30);
        ++v21;
        v20 += 2;
        a3 += a4;
      }
      while (v21 != v10);
    }
  }
  else
  {
    uint64_t v11 = 0;
    int16x8_t v12 = (void *)(a3 + 8);
    do
    {
      *((void *)&v60 + 8 * (unint64_t)(v11 & 0x7F)) = (*(v12 - 1) >> 6) & 0x3FF03FF03FF03FFLL;
      *((void *)&v60 + 4 * ((2 * v11++) | 1u)) = (*v12 >> 6) & 0x3FF03FF03FF03FFLL;
      int16x8_t v12 = (void *)((char *)v12 + a4);
    }
    while (a6 != v11);
  }
  uint32x4_t v52 = vmovl_u16(*(uint16x4_t *)&v60);
  uint32x4_t v53 = vmovl_u16(*(uint16x4_t *)&v62);
  uint32x4_t v54 = vmovl_u16(*(uint16x4_t *)((char *)&v60 + 8));
  uint32x4_t v55 = vmovl_u16(*(uint16x4_t *)((char *)&v62 + 8));
  uint32x4_t v56 = vmovl_u16(*(uint16x4_t *)&v64);
  uint32x4_t v57 = vmovl_u16(*(uint16x4_t *)&v66);
  unsigned int v32 = 2 * (a5 & 0x7F);
  uint32x4_t v33 = vmovl_u16(*(uint16x4_t *)((char *)&v64 + 8));
  uint32x4_t v34 = vmovl_u16(*(uint16x4_t *)((char *)&v66 + 8));
  if (v32 >= 4) {
    unsigned int v35 = 4;
  }
  else {
    unsigned int v35 = 2 * (a5 & 0x7F);
  }
  if (v32 >= 4) {
    unsigned int v36 = v32 - 4;
  }
  else {
    unsigned int v36 = 0;
  }
  if (a6 >= 2) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = a6;
  }
  uint32x4_t v58 = v33;
  uint32x4_t v59 = v34;
  if (a6 >= 2) {
    unsigned int v38 = a6 - 2;
  }
  else {
    unsigned int v38 = 0;
  }
  char v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v52, a7, v35, v37);
  uint32x4_t v52 = vmovl_u16(*(uint16x4_t *)&v61);
  uint32x4_t v53 = vmovl_u16(*(uint16x4_t *)&v63);
  uint32x4_t v54 = vmovl_u16(*(uint16x4_t *)((char *)&v61 + 8));
  uint32x4_t v55 = vmovl_u16(*(uint16x4_t *)((char *)&v63 + 8));
  uint32x4_t v56 = vmovl_u16(*(uint16x4_t *)&v65);
  uint32x4_t v57 = vmovl_u16(*(uint16x4_t *)&v67);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)((char *)&v65 + 8));
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)((char *)&v67 + 8));
  if (a6 >= 4) {
    unsigned int v41 = 2;
  }
  else {
    unsigned int v41 = v38;
  }
  int v42 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v52, a7, v35, v41);
  uint32x4_t v52 = vmovl_u16(*(uint16x4_t *)&v68);
  uint32x4_t v53 = vmovl_u16(*(uint16x4_t *)&v70);
  uint32x4_t v54 = vmovl_u16(*(uint16x4_t *)((char *)&v68 + 8));
  uint32x4_t v55 = vmovl_u16(*(uint16x4_t *)((char *)&v70 + 8));
  uint32x4_t v56 = vmovl_u16(*(uint16x4_t *)&v72);
  uint32x4_t v57 = vmovl_u16(*(uint16x4_t *)&v74);
  uint32x4_t v43 = vmovl_u16(*(uint16x4_t *)((char *)&v72 + 8));
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)((char *)&v74 + 8));
  if (a5 >= 4) {
    unsigned int v45 = 4;
  }
  else {
    unsigned int v45 = v36;
  }
  uint32x4_t v58 = v43;
  uint32x4_t v59 = v44;
  int v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 64, (uint64_t)&v52, a7, v45, v37);
  uint32x4_t v52 = vmovl_u16(*(uint16x4_t *)&v69);
  uint32x4_t v53 = vmovl_u16(*(uint16x4_t *)&v71);
  uint32x4_t v54 = vmovl_u16(*(uint16x4_t *)((char *)&v69 + 8));
  uint32x4_t v55 = vmovl_u16(*(uint16x4_t *)((char *)&v71 + 8));
  uint32x4_t v56 = vmovl_u16(*(uint16x4_t *)&v73);
  uint32x4_t v57 = vmovl_u16(*(uint16x4_t *)&v75);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)((char *)&v73 + 8));
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)((char *)&v75 + 8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 96, (uint64_t)&v52, a7, v45, v41);
  if (v46) {
    char v48 = 4;
  }
  else {
    char v48 = 0;
  }
  if (v42) {
    char v49 = 2;
  }
  else {
    char v49 = 0;
  }
  if (result) {
    char v50 = -8;
  }
  else {
    char v50 = -16;
  }
  *a2 = v50 | v48 | v40 | v49;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(_OWORD *a1, uint64_t a2, unint64_t a3, unsigned int a4, int a5)
{
  uint64_t v629 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    int64x2_t v12 = 0uLL;
    a1[2] = 0u;
    a1[3] = 0u;
    *a1 = 0u;
    a1[1] = 0u;
    uint64_t v13 = (_OWORD *)((char *)a1 + a2);
    v13[2] = 0u;
    v13[3] = 0u;
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    uint64_t v14 = (_OWORD *)((char *)a1 + 2 * a2);
    v14[2] = 0u;
    v14[3] = 0u;
    *uint64_t v14 = 0u;
    v14[1] = 0u;
    unsigned __int8 v15 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
    v15[2] = 0u;
    v15[3] = 0u;
LABEL_279:
    *unsigned __int8 v15 = v12;
    v15[1] = v12;
    return result;
  }
  char v8 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v590, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v590, a5);
    }
    *(int16x4_t *)v598.i8 = vmovn_s32(v590);
    v598.u64[1] = (unint64_t)vmovn_s32(v592);
    *(int16x4_t *)v600.i8 = vmovn_s32(v591);
    v600.u64[1] = (unint64_t)vmovn_s32(v593);
    int16x4_t v602 = vmovn_s32(v594);
    int16x4_t v603 = vmovn_s32(v596);
    unint64_t v22 = a3 + 32;
    int16x4_t v606 = vmovn_s32(v595);
    int16x4_t v607 = vmovn_s32(v597);
    if ((v8 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v22, (uint64_t)&v590, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v22, (uint64_t)&v590, a5);
    }
    *(int16x4_t *)v599.i8 = vmovn_s32(v590);
    v599.u64[1] = (unint64_t)vmovn_s32(v592);
    *(int16x4_t *)v601.i8 = vmovn_s32(v591);
    v601.u64[1] = (unint64_t)vmovn_s32(v593);
    int16x4_t v604 = vmovn_s32(v594);
    int16x4_t v605 = vmovn_s32(v596);
    unint64_t v23 = a3 + 64;
    int16x4_t v608 = vmovn_s32(v595);
    int16x4_t v609 = vmovn_s32(v597);
    if ((v8 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v23, (uint64_t)&v590, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v23, (uint64_t)&v590, a5);
    }
    int16x4_t v610 = vmovn_s32(v590);
    int16x4_t v611 = vmovn_s32(v592);
    int16x4_t v614 = vmovn_s32(v591);
    int16x4_t v615 = vmovn_s32(v593);
    *(int16x4_t *)v618.i8 = vmovn_s32(v594);
    v618.u64[1] = (unint64_t)vmovn_s32(v596);
    unint64_t v24 = a3 + 96;
    *(int16x4_t *)v620.i8 = vmovn_s32(v595);
    v620.u64[1] = (unint64_t)vmovn_s32(v597);
    if ((v8 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v24, (uint64_t)&v590, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v24, (uint64_t)&v590, a5);
    }
    int16x4_t v612 = vmovn_s32(v590);
    int16x4_t v613 = vmovn_s32(v592);
    int16x4_t v616 = vmovn_s32(v591);
    int16x4_t v617 = vmovn_s32(v593);
    *(int16x4_t *)v619.i8 = vmovn_s32(v594);
    v619.u64[1] = (unint64_t)vmovn_s32(v596);
    int16x8_t v25 = (unint64_t *)(a1 + 2);
    uint64_t v26 = 31;
    *(int16x4_t *)v621.i8 = vmovn_s32(v595);
    v621.u64[1] = (unint64_t)vmovn_s32(v597);
    do
    {
      unint64_t v27 = (((unint64_t)(v596.i16[v26 + 1] & 0x3FF) << 6) | ((unint64_t)v596.u16[v26 + 2] << 22) | ((unint64_t)v596.u16[v26 + 3] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v596.u16[v26 + 4] << 54);
      *(v25 - 4) = (((unint64_t)(v594.i16[v26 + 1] & 0x3FF) << 6) | ((unint64_t)v594.u16[v26 + 2] << 22) | ((unint64_t)v594.u16[v26 + 3] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v594.u16[v26 + 4] << 54);
      *(v25 - 3) = v27;
      unint64_t v28 = (((unint64_t)(v596.i16[v26 + 5] & 0x3FF) << 6) | ((unint64_t)v596.u16[v26 + 6] << 22) | ((unint64_t)v596.u16[v26 + 7] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v597.u16[v26] << 54);
      *(v25 - 2) = (((unint64_t)(v594.i16[v26 + 5] & 0x3FF) << 6) | ((unint64_t)v594.u16[v26 + 6] << 22) | ((unint64_t)v594.u16[v26 + 7] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v595.u16[v26] << 54);
      *(v25 - 1) = v28;
      unint64_t v29 = (((unint64_t)(v597.i16[v26 + 1] & 0x3FF) << 6) | ((unint64_t)v597.u16[v26 + 2] << 22) | ((unint64_t)v597.u16[v26 + 3] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v597.u16[v26 + 4] << 54);
      *int16x8_t v25 = (((unint64_t)(v595.i16[v26 + 1] & 0x3FF) << 6) | ((unint64_t)v595.u16[v26 + 2] << 22) | ((unint64_t)v595.u16[v26 + 3] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v595.u16[v26 + 4] << 54);
      v25[1] = v29;
      unint64_t v30 = (((unint64_t)(v597.i16[v26 + 5] & 0x3FF) << 6) | ((unint64_t)v597.u16[v26 + 6] << 22) | ((unint64_t)v597.u16[v26 + 7] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v598.u16[v26] << 54);
      v25[2] = (((unint64_t)(v595.i16[v26 + 5] & 0x3FF) << 6) | ((unint64_t)v595.u16[v26 + 6] << 22) | ((unint64_t)v595.u16[v26 + 7] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v596.u16[v26] << 54);
      v25[3] = v30;
      v26 += 32;
      int16x8_t v25 = (unint64_t *)((char *)v25 + a2);
    }
    while (v26 != 159);
    return 128;
  }
  if (a4 == 159)
  {
    v31.i64[0] = 0xA000A000A000ALL;
    v31.i64[1] = 0xA000A000A000ALL;
    int8x16_t v32 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v31, v31));
    v31.i64[0] = vpaddq_s32((int32x4_t)v32, (int32x4_t)v32).u64[0];
    v33.i64[0] = v31.u32[0];
    v33.i64[1] = v31.u32[1];
    int64x2_t v34 = v33;
    unint64_t v35 = vaddvq_s64(v33);
    unint64_t v36 = v35;
    int16x8_t v37 = 0uLL;
    if (v35 <= 0x80)
    {
      long long v73 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
      int64x2_t v74 = vzip1q_s64((int64x2_t)0, v34);
      unint64_t v75 = 8 * (a3 & 7);
      unint64_t v76 = v35 + v75;
      int64x2_t v77 = vaddq_s64(v74, vdupq_n_s64(v75));
      int8x16_t v78 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v77)));
      if (v76 > 0x80) {
        int8x16_t v78 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v73[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v73[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v77))), v78);
      }
      unint64_t v79 = v76 & 0x3F;
      int16x8_t v80 = (int64x2_t *)((char *)v73 + 8 * (v76 >> 6));
      int64x2_t v81 = vaddq_s64(v74, vdupq_n_s64(v79));
      unint64_t v82 = v36 + v76;
      int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v81)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v81)));
      if (v36 + v79 >= 0x81) {
        int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v81)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v81))), v83);
      }
      unint64_t v84 = v82 & 0x3F;
      int16x8_t v85 = (int64x2_t *)((char *)v73 + 8 * (v82 >> 6));
      int64x2_t v86 = vaddq_s64(v74, vdupq_n_s64(v84));
      unint64_t v87 = v36 + v82;
      int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v85, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v86)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85->i64[0], 0), (uint64x2_t)vnegq_s64(v86)));
      if (v36 + v84 >= 0x81) {
        int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v86)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v86))), v88);
      }
      int32x2_t v89 = (int32x2_t)vextq_s8(v32, v32, 8uLL).u64[0];
      unint64_t v90 = v87 & 0x3F;
      int16x8_t v91 = (int64x2_t *)((char *)v73 + 8 * (v87 >> 6));
      int64x2_t v92 = vaddq_s64(v74, vdupq_n_s64(v90));
      unint64_t v93 = v36 + v87;
      int8x16_t v94 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v92)));
      if (v36 + v90 >= 0x81) {
        int8x16_t v94 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v91[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v92))), v94);
      }
      unint64_t v95 = v93 & 0x3F;
      int16x8_t v96 = (int64x2_t *)((char *)v73 + 8 * (v93 >> 6));
      int64x2_t v97 = vaddq_s64(v74, vdupq_n_s64(v95));
      unint64_t v98 = v36 + v93;
      int8x16_t v99 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v97)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v97)));
      if (v36 + v95 > 0x80) {
        int8x16_t v99 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v97)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v97))), v99);
      }
      int32x2_t v100 = vzip1_s32(*(int32x2_t *)v32.i8, v89);
      unint64_t v101 = v98 & 0x3F;
      int16x8_t v102 = (int64x2_t *)((char *)v73 + 8 * (v98 >> 6));
      int64x2_t v103 = vaddq_s64(v74, vdupq_n_s64(v101));
      unint64_t v104 = v36 + v98;
      int8x16_t v105 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v102, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v103)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102->i64[0], 0), (uint64x2_t)vnegq_s64(v103)));
      if (v36 + v101 >= 0x81) {
        int8x16_t v105 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v103)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v102[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v103))), v105);
      }
      v106.i64[0] = v100.u32[0];
      v106.i64[1] = v100.u32[1];
      int64x2_t v107 = v106;
      unint64_t v108 = v104 & 0x3F;
      int16x8_t v109 = (int64x2_t *)((char *)v73 + 8 * (v104 >> 6));
      int64x2_t v110 = vaddq_s64(v74, vdupq_n_s64(v108));
      unint64_t v111 = v36 + v104;
      int8x16_t v112 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v109, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v110)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v109->i64[0], 0), (uint64x2_t)vnegq_s64(v110)));
      if (v36 + v108 >= 0x81) {
        int8x16_t v112 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v109[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v110)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v109[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v110))), v112);
      }
      uint64x2_t v113 = (uint64x2_t)vnegq_s64(v107);
      unint64_t v114 = v111 & 0x3F;
      int16x8_t v115 = (int64x2_t *)((char *)v73 + 8 * (v111 >> 6));
      int64x2_t v116 = vaddq_s64(v74, vdupq_n_s64(v114));
      unint64_t v117 = v36 + v111;
      int8x16_t v118 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v115, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v116)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115->i64[0], 0), (uint64x2_t)vnegq_s64(v116)));
      if (v36 + v114 >= 0x81) {
        int8x16_t v118 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v116)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v115[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v116))), v118);
      }
      int64x2_t v119 = (int64x2_t)vshlq_u64((uint64x2_t)v78, v113);
      int64x2_t v120 = (int64x2_t)vshlq_u64((uint64x2_t)v83, v113);
      int64x2_t v121 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v113);
      int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v94, v113);
      int64x2_t v123 = (int64x2_t)vshlq_u64((uint64x2_t)v99, v113);
      int64x2_t v124 = (int64x2_t)vshlq_u64((uint64x2_t)v105, v113);
      int64x2_t v125 = (int64x2_t)vshlq_u64((uint64x2_t)v112, v113);
      int64x2_t v126 = (int64x2_t)vshlq_u64((uint64x2_t)v118, v113);
      unint64_t v127 = v117 & 0x3F;
      int16x8_t v128 = (int64x2_t *)((char *)v73 + 8 * (v117 >> 6));
      int64x2_t v129 = vaddq_s64(v74, vdupq_n_s64(v127));
      unint64_t v130 = v36 + v117;
      int8x16_t v131 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v128, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v129)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128->i64[0], 0), (uint64x2_t)vnegq_s64(v129)));
      if (v36 + v127 > 0x80) {
        int8x16_t v131 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v129)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v128[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v129))), v131);
      }
      *(int32x2_t *)v78.i8 = vmovn_s64((int64x2_t)v78);
      *(int32x2_t *)v119.i8 = vmovn_s64(v119);
      *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
      *(int32x2_t *)v120.i8 = vmovn_s64(v120);
      *(int32x2_t *)v88.i8 = vmovn_s64((int64x2_t)v88);
      *(int32x2_t *)v121.i8 = vmovn_s64(v121);
      *(int32x2_t *)v94.i8 = vmovn_s64((int64x2_t)v94);
      *(int32x2_t *)v122.i8 = vmovn_s64(v122);
      *(int32x2_t *)v99.i8 = vmovn_s64((int64x2_t)v99);
      *(int32x2_t *)v123.i8 = vmovn_s64(v123);
      *(int32x2_t *)v105.i8 = vmovn_s64((int64x2_t)v105);
      *(int32x2_t *)v124.i8 = vmovn_s64(v124);
      *(int32x2_t *)v112.i8 = vmovn_s64((int64x2_t)v112);
      *(int32x2_t *)v125.i8 = vmovn_s64(v125);
      *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v118);
      *(int32x2_t *)v126.i8 = vmovn_s64(v126);
      int64x2_t v132 = (int64x2_t)vshlq_u64((uint64x2_t)v131, v113);
      *(int32x2_t *)v131.i8 = vmovn_s64((int64x2_t)v131);
      *(int32x2_t *)v132.i8 = vmovn_s64(v132);
      unint64_t v133 = v130 & 0x3F;
      int16x8_t v134 = (int64x2_t *)((char *)v73 + 8 * (v130 >> 6));
      int64x2_t v135 = vaddq_s64(v74, vdupq_n_s64(v133));
      unint64_t v136 = v36 + v130;
      int8x16_t v137 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v134, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v135));
      int8x16_t v138 = vorrq_s8(v137, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v134->i64[0], 0), (uint64x2_t)vnegq_s64(v135)));
      if (v36 + v133 >= 0x81)
      {
        int64x2_t v139 = v134[1];
        uint64x2_t v140 = (uint64x2_t)vdupq_lane_s64(v139.i64[0], 0);
        int8x16_t v137 = (int8x16_t)vdupq_laneq_s64(v139, 1);
        int64x2_t v5 = vdupq_n_s64(0xC0uLL);
        int8x16_t v138 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64(v140, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v135)), (int8x16_t)vshlq_u64((uint64x2_t)v137, (uint64x2_t)vsubq_s64(v5, v135))), v138);
      }
      *(int32x2_t *)v137.i8 = vmovn_s64((int64x2_t)v138);
      *(int32x2_t *)v5.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v138, v113));
      int8x16_t v141 = (int64x2_t *)((char *)v73 + 8 * (v136 >> 6));
      int64x2_t v142 = vaddq_s64(v74, vdupq_n_s64(v136 & 0x3F));
      unint64_t v143 = v36 + v136;
      int8x16_t v144 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v141, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v142)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v141->i64[0], 0), (uint64x2_t)vnegq_s64(v142)));
      if (v36 + (v136 & 0x3F) >= 0x81) {
        int8x16_t v144 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v141[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v142)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v141[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v142))), v144);
      }
      int32x4_t v145 = vzip1q_s32((int32x4_t)v78, (int32x4_t)v119);
      int32x4_t v146 = vzip1q_s32((int32x4_t)v83, (int32x4_t)v120);
      int16x8_t v147 = (int16x8_t)vzip1q_s32((int32x4_t)v88, (int32x4_t)v121);
      int16x8_t v148 = (int16x8_t)vzip1q_s32((int32x4_t)v94, (int32x4_t)v122);
      int16x8_t v149 = (int16x8_t)vzip1q_s32((int32x4_t)v99, (int32x4_t)v123);
      int16x8_t v150 = (int16x8_t)vzip1q_s32((int32x4_t)v105, (int32x4_t)v124);
      int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v112, (int32x4_t)v125);
      int16x8_t v152 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v126);
      int16x8_t v153 = (int16x8_t)vzip1q_s32((int32x4_t)v131, (int32x4_t)v132);
      int16x8_t v154 = (int16x8_t)vzip1q_s32((int32x4_t)v137, (int32x4_t)v5);
      int64x2_t v155 = (int64x2_t)vshlq_u64((uint64x2_t)v144, v113);
      *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v144);
      *(int32x2_t *)v155.i8 = vmovn_s64(v155);
      int16x8_t v156 = (int16x8_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v155);
      unint64_t v157 = v36 + v143;
      unint64_t v158 = v143 & 0x3F;
      int64x2_t v159 = vaddq_s64(v74, vdupq_n_s64(v158));
      int v160 = (int64x2_t *)((char *)v73 + 8 * (v143 >> 6));
      int64x2_t v161 = vdupq_n_s64(0x40uLL);
      int8x16_t v162 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v160->i64[0], 0), (uint64x2_t)vnegq_s64(v159));
      int64x2_t v163 = vsubq_s64(v161, v159);
      int8x16_t v164 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v160, 1), (uint64x2_t)v163);
      int8x16_t v165 = vorrq_s8(v164, v162);
      if (v36 + v158 >= 0x81)
      {
        int64x2_t v166 = v160[1];
        uint64x2_t v167 = (uint64x2_t)vdupq_lane_s64(v166.i64[0], 0);
        int8x16_t v164 = (int8x16_t)vdupq_laneq_s64(v166, 1);
        int8x16_t v162 = (int8x16_t)vshlq_u64(v167, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v159));
        int64x2_t v163 = vdupq_n_s64(0xC0uLL);
        int8x16_t v165 = vorrq_s8(vorrq_s8(v162, (int8x16_t)vshlq_u64((uint64x2_t)v164, (uint64x2_t)vsubq_s64(v163, v159))), v165);
      }
      v168.i64[0] = 0x1000100010001;
      v168.i64[1] = 0x1000100010001;
      *(int16x4_t *)v162.i8 = vmovn_s32(v145);
      *(int16x4_t *)v163.i8 = vshrn_n_s32(v145, 0xAuLL);
      *(int16x4_t *)v161.i8 = vmovn_s32(v146);
      *(int16x4_t *)v105.i8 = vshrn_n_s32(v146, 0xAuLL);
      *(int16x4_t *)v112.i8 = vmovn_s32((int32x4_t)v147);
      *(int16x4_t *)v147.i8 = vshrn_n_s32((int32x4_t)v147, 0xAuLL);
      *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v148);
      int16x8_t v589 = (int16x8_t)v164;
      *(int16x4_t *)v148.i8 = vshrn_n_s32((int32x4_t)v148, 0xAuLL);
      *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v149);
      *(int16x4_t *)v149.i8 = vshrn_n_s32((int32x4_t)v149, 0xAuLL);
      *(int16x4_t *)v123.i8 = vmovn_s32((int32x4_t)v150);
      *(int16x4_t *)v150.i8 = vshrn_n_s32((int32x4_t)v150, 0xAuLL);
      *(int16x4_t *)v125.i8 = vmovn_s32((int32x4_t)v151);
      *(int16x4_t *)v118.i8 = vshrn_n_s32((int32x4_t)v151, 0xAuLL);
      *(int16x4_t *)v126.i8 = vmovn_s32((int32x4_t)v152);
      *(int16x4_t *)v131.i8 = vshrn_n_s32((int32x4_t)v152, 0xAuLL);
      *(int16x4_t *)v132.i8 = vmovn_s32((int32x4_t)v153);
      *(int16x4_t *)v153.i8 = vshrn_n_s32((int32x4_t)v153, 0xAuLL);
      *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v154);
      *(int16x4_t *)v154.i8 = vshrn_n_s32((int32x4_t)v154, 0xAuLL);
      *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v156);
      *(int16x4_t *)v156.i8 = vshrn_n_s32((int32x4_t)v156, 0xAuLL);
      int64x2_t v169 = (int64x2_t)vshlq_u64((uint64x2_t)v165, v113);
      *(int32x2_t *)v145.i8 = vmovn_s64((int64x2_t)v165);
      *(int32x2_t *)v169.i8 = vmovn_s64(v169);
      int16x8_t v170 = (int16x8_t)vzip1q_s32(v145, (int32x4_t)v169);
      *(int16x4_t *)v169.i8 = vmovn_s32((int32x4_t)v170);
      *(int16x4_t *)v170.i8 = vshrn_n_s32((int32x4_t)v170, 0xAuLL);
      unint64_t v171 = v157 & 0x3F;
      int16x8_t v172 = (int64x2_t *)((char *)v73 + 8 * (v157 >> 6));
      int64x2_t v173 = vaddq_s64(v74, vdupq_n_s64(v171));
      unint64_t v174 = v36 + v157;
      int8x16_t v175 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v172, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v172->i64[0], 0), (uint64x2_t)vnegq_s64(v173)));
      if (v36 + v171 > 0x80) {
        int8x16_t v175 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v172[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v172[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v173))), v175);
      }
      int16x8_t v176 = vshlq_n_s16(v168, 0xAuLL);
      int64x2_t v177 = (int64x2_t)vshlq_u64((uint64x2_t)v175, v113);
      *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
      *(int32x2_t *)v177.i8 = vmovn_s64(v177);
      int16x8_t v178 = (int16x8_t)vzip1q_s32((int32x4_t)v175, (int32x4_t)v177);
      *(int16x4_t *)v175.i8 = vmovn_s32((int32x4_t)v178);
      *(int16x4_t *)v178.i8 = vshrn_n_s32((int32x4_t)v178, 0xAuLL);
      int16x8_t v179 = (int64x2_t *)((char *)v73 + 8 * (v174 >> 6));
      int64x2_t v180 = vaddq_s64(v74, vdupq_n_s64(v174 & 0x3F));
      unint64_t v181 = v36 + v174;
      int8x16_t v182 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v180)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v180)));
      if (v36 + (v174 & 0x3F) >= 0x81) {
        int8x16_t v182 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v180)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v180))), v182);
      }
      v183.i64[0] = -1;
      v183.i64[1] = -1;
      int8x16_t v184 = (int8x16_t)vaddq_s16(v176, v183);
      int8x16_t v185 = (int8x16_t)vzip1q_s16((int16x8_t)v162, (int16x8_t)v163);
      int8x16_t v186 = (int8x16_t)vzip1q_s16((int16x8_t)v161, (int16x8_t)v105);
      int8x16_t v187 = (int8x16_t)vzip1q_s16((int16x8_t)v112, v147);
      int8x16_t v188 = (int8x16_t)vzip1q_s16(v589, v148);
      int8x16_t v189 = (int8x16_t)vzip1q_s16((int16x8_t)v121, v149);
      int8x16_t v190 = (int8x16_t)vzip1q_s16((int16x8_t)v123, v150);
      int8x16_t v191 = (int8x16_t)vzip1q_s16((int16x8_t)v125, (int16x8_t)v118);
      int8x16_t v192 = (int8x16_t)vzip1q_s16((int16x8_t)v126, (int16x8_t)v131);
      int8x16_t v193 = (int8x16_t)vzip1q_s16((int16x8_t)v132, v153);
      int8x16_t v194 = (int8x16_t)vzip1q_s16(v152, v154);
      int8x16_t v195 = (int8x16_t)vzip1q_s16(v151, v156);
      int8x16_t v196 = (int8x16_t)vzip1q_s16((int16x8_t)v169, v170);
      int8x16_t v197 = (int8x16_t)vzip1q_s16((int16x8_t)v175, v178);
      int64x2_t v198 = (int64x2_t)vshlq_u64((uint64x2_t)v182, v113);
      *(int32x2_t *)v149.i8 = vmovn_s64((int64x2_t)v182);
      *(int32x2_t *)v198.i8 = vmovn_s64(v198);
      int16x8_t v199 = (int16x8_t)vzip1q_s32((int32x4_t)v149, (int32x4_t)v198);
      *(int16x4_t *)v149.i8 = vmovn_s32((int32x4_t)v199);
      *(int16x4_t *)v199.i8 = vshrn_n_s32((int32x4_t)v199, 0xAuLL);
      int8x16_t v200 = (int8x16_t)vzip1q_s16(v149, v199);
      unint64_t v201 = v36 + v181;
      unint64_t v202 = v181 & 0x3F;
      int64x2_t v203 = vaddq_s64(v74, vdupq_n_s64(v202));
      int8x16_t v204 = (int64x2_t *)((char *)v73 + 8 * (v181 >> 6));
      int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v204, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v203)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v204->i64[0], 0), (uint64x2_t)vnegq_s64(v203)));
      if (v36 + v202 >= 0x81) {
        int8x16_t v205 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v204[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v203)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v204[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v203))), v205);
      }
      int16x8_t v206 = (int16x8_t)vandq_s8(v185, v184);
      int16x8_t v207 = (int16x8_t)vandq_s8(v186, v184);
      int16x8_t v208 = (int16x8_t)vandq_s8(v187, v184);
      int16x8_t v209 = (int16x8_t)vandq_s8(v188, v184);
      int16x8_t v210 = (int16x8_t)vandq_s8(v189, v184);
      int16x8_t v211 = (int16x8_t)vandq_s8(v190, v184);
      int16x8_t v212 = (int16x8_t)vandq_s8(v191, v184);
      int16x8_t v213 = (int16x8_t)vandq_s8(v192, v184);
      int16x8_t v214 = (int16x8_t)vandq_s8(v193, v184);
      int16x8_t v215 = (int16x8_t)vandq_s8(v194, v184);
      int16x8_t v216 = (int16x8_t)vandq_s8(v195, v184);
      int16x8_t v217 = (int16x8_t)vandq_s8(v196, v184);
      int16x8_t v218 = (int16x8_t)vandq_s8(v197, v184);
      int16x8_t v219 = (int16x8_t)vandq_s8(v200, v184);
      int64x2_t v220 = (int64x2_t)vshlq_u64((uint64x2_t)v205, v113);
      *(int32x2_t *)v193.i8 = vmovn_s64((int64x2_t)v205);
      *(int32x2_t *)v220.i8 = vmovn_s64(v220);
      int16x8_t v221 = (int16x8_t)vzip1q_s32((int32x4_t)v193, (int32x4_t)v220);
      *(int16x4_t *)v193.i8 = vmovn_s32((int32x4_t)v221);
      *(int16x4_t *)v221.i8 = vshrn_n_s32((int32x4_t)v221, 0xAuLL);
      int8x16_t v222 = (int8x16_t)vzip1q_s16((int16x8_t)v193, v221);
      int16x8_t v223 = (int64x2_t *)((char *)v73 + 8 * (v201 >> 6));
      int64x2_t v224 = vaddq_s64(v74, vdupq_n_s64(v201 & 0x3F));
      int16x8_t v225 = (int16x8_t)vandq_s8(v222, v184);
      int8x16_t v226 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v223, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v224)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v223->i64[0], 0), (uint64x2_t)vnegq_s64(v224)));
      if (v36 + (v201 & 0x3F) >= 0x81) {
        int8x16_t v226 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v223[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v224)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v223[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v224))), v226);
      }
      int16x8_t v48 = vshlq_n_s16(v210, 6uLL);
      int16x8_t v47 = vshlq_n_s16(v211, 6uLL);
      int16x8_t v46 = vshlq_n_s16(v212, 6uLL);
      int16x8_t v45 = vshlq_n_s16(v213, 6uLL);
      int16x8_t v37 = vshlq_n_s16(v214, 6uLL);
      int16x8_t v38 = vshlq_n_s16(v215, 6uLL);
      int16x8_t v39 = vshlq_n_s16(v216, 6uLL);
      int16x8_t v40 = vshlq_n_s16(v217, 6uLL);
      int64x2_t v227 = (int64x2_t)vshlq_u64((uint64x2_t)v226, v113);
      *(int32x2_t *)v217.i8 = vmovn_s64((int64x2_t)v226);
      *(int32x2_t *)v227.i8 = vmovn_s64(v227);
      int16x8_t v228 = (int16x8_t)vzip1q_s32((int32x4_t)v217, (int32x4_t)v227);
      *(int16x4_t *)v217.i8 = vmovn_s32((int32x4_t)v228);
      *(int16x4_t *)v228.i8 = vshrn_n_s32((int32x4_t)v228, 0xAuLL);
      int16x8_t v52 = vshlq_n_s16(v218, 6uLL);
      int16x8_t v51 = vshlq_n_s16(v219, 6uLL);
      int16x8_t v50 = vshlq_n_s16(v225, 6uLL);
      int16x8_t v49 = vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v217, v228), v184), 6uLL);
      int16x8_t v41 = vshlq_n_s16(v206, 6uLL);
      int16x8_t v42 = vshlq_n_s16(v207, 6uLL);
      int16x8_t v43 = vshlq_n_s16(v208, 6uLL);
      int16x8_t v44 = vshlq_n_s16(v209, 6uLL);
    }
    else
    {
      int16x8_t v38 = 0uLL;
      int16x8_t v39 = 0uLL;
      int16x8_t v40 = 0uLL;
      int16x8_t v41 = 0uLL;
      int16x8_t v42 = 0uLL;
      int16x8_t v43 = 0uLL;
      int16x8_t v44 = 0uLL;
      int16x8_t v45 = 0uLL;
      int16x8_t v46 = 0uLL;
      int16x8_t v47 = 0uLL;
      int16x8_t v48 = 0uLL;
      int16x8_t v49 = 0uLL;
      int16x8_t v50 = 0uLL;
      int16x8_t v51 = 0uLL;
      int16x8_t v52 = 0uLL;
    }
    int16x8_t v229 = (int16x8_t *)((char *)a1 + a2);
    *a1 = v41;
    a1[1] = v42;
    a1[2] = v48;
    a1[3] = v47;
    int16x8_t v230 = (int16x8_t *)((char *)a1 + 2 * a2);
    *int16x8_t v229 = v43;
    v229[1] = v44;
    v229[2] = v46;
    v229[3] = v45;
    *int16x8_t v230 = v37;
    v230[1] = v38;
    v230[2] = v52;
    v230[3] = v51;
    int16x8_t v231 = (int16x8_t *)((char *)v230 + a2);
    uint64_t result = 160;
    *int16x8_t v231 = v39;
    v231[1] = v40;
    v231[2] = v50;
    v231[3] = v49;
    return result;
  }
  if (a4 == 4)
  {
    uint64x2_t v16 = (uint64x2_t)vld1q_dup_f64((const double *)a3);
    int8x16_t v17 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v16, (uint64x2_t)xmmword_242EA7AE0), (int8x16_t)xmmword_242EA7B10), vandq_s8((int8x16_t)vshlq_u64(v16, (uint64x2_t)xmmword_242EA7AF0), (int8x16_t)xmmword_242EA7B00));
    int64x2_t v18 = vdupq_n_s64(*(void *)&vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)));
    *a1 = v18;
    a1[1] = v18;
    a1[2] = v18;
    a1[3] = v18;
    uint64_t v19 = (int64x2_t *)((char *)a1 + a2);
    *uint64_t v19 = v18;
    v19[1] = v18;
    v19[2] = v18;
    v19[3] = v18;
    unsigned __int8 v20 = (int64x2_t *)((char *)a1 + 2 * a2);
    *unsigned __int8 v20 = v18;
    v20[1] = v18;
    v20[2] = v18;
    v20[3] = v18;
    uint64_t v21 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
    *uint64_t v21 = v18;
    v21[1] = v18;
    v21[2] = v18;
    v21[3] = v18;
    return 5;
  }
  v591.i8[8] = 0;
  v590.i64[0] = 8 * (a3 & 7);
  v590.i64[1] = a3 & 0xFFFFFFFFFFFFFFF8;
  v591.i64[0] = v590.i64[0] | 0x400;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v623, (uint64_t)v628, (uint64_t)&v622, (unint64_t *)&v590, a4);
  v54.i64[0] = 0x3000300030003;
  v54.i64[1] = 0x3000300030003;
  int8x16_t v55 = v623;
  int16x8_t v56 = (int16x8_t)vandq_s8(v623, v54);
  int8x16_t v57 = vbicq_s8(v628[0], (int8x16_t)vceqq_s16(v56, (int16x8_t)v54));
  v628[0] = v57;
  int16x8_t v624 = (int16x8_t)v57;
  int16x8_t v625 = (int16x8_t)v57;
  int16x8_t v626 = (int16x8_t)v57;
  int16x8_t v627 = (int16x8_t)v57;
  v58.i64[0] = 0x202020202020202;
  v58.i64[1] = 0x202020202020202;
  int8x16_t v59 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v623.i8, (int16x4_t)0x4000400040004)), v58);
  unint64_t v60 = v590.i64[0];
  int16x8_t v588 = v56;
  if (vmaxvq_s8(v59) < 1)
  {
    v232.i64[0] = -1;
    v232.i64[1] = -1;
    int8x16_t v586 = v232;
    int8x16_t v587 = v232;
    int8x16_t v584 = v232;
    int8x16_t v585 = v232;
  }
  else
  {
    int8x16_t v61 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
    int8x16_t v62 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v61, (int16x8_t)v61));
    unint64_t v63 = vpaddq_s32((int32x4_t)v62, (int32x4_t)v62).u64[0];
    v64.i64[0] = v63;
    v64.i64[1] = HIDWORD(v63);
    int64x2_t v65 = v64;
    unint64_t v66 = vaddvq_s64(v64);
    unint64_t v67 = v66;
    unint64_t v68 = v590.i64[0] + v66;
    if (v591.i64[0]) {
      BOOL v69 = v591.i64[0] >= v68;
    }
    else {
      BOOL v69 = 1;
    }
    int v70 = !v69;
    if (v66 <= 0x80 && v70 == 0)
    {
      v53.i64[0] = 63;
      int16x8_t v233 = (int64x2_t *)(v590.i64[1] + 8 * ((unint64_t)v590.i64[0] >> 6));
      int64x2_t v234 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v590.u64[0], v53).i64[0], 0), vzip1q_s64((int64x2_t)0, v65));
      int8x16_t v72 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v233, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v233->i64[0], 0), (uint64x2_t)vnegq_s64(v234)));
      if ((v590.i8[0] & 0x3F) + v67 >= 0x81) {
        int8x16_t v72 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v233[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v233[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v234))), v72);
      }
      unint64_t v60 = v68;
    }
    else
    {
      v591.i8[8] = 1;
      int8x16_t v72 = 0uLL;
    }
    int32x2_t v235 = vzip1_s32(*(int32x2_t *)v62.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL));
    v236.i64[0] = v235.u32[0];
    v236.i64[1] = v235.u32[1];
    int64x2_t v237 = (int64x2_t)vshlq_u64((uint64x2_t)v72, (uint64x2_t)vnegq_s64(v236));
    *(int32x2_t *)v72.i8 = vmovn_s64((int64x2_t)v72);
    *(int32x2_t *)v237.i8 = vmovn_s64(v237);
    int16x8_t v238 = (int16x8_t)vzip1q_s32((int32x4_t)v72, (int32x4_t)v237);
    int16x8_t v239 = (int16x8_t)vshlq_u32((uint32x4_t)v238, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v61.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
    *(int16x4_t *)v238.i8 = vmovn_s32((int32x4_t)v238);
    *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v239);
    int8x16_t v240 = (int8x16_t)vzip1q_s16(v238, v239);
    int8x16_t v241 = (int8x16_t)vshlq_u16((uint16x8_t)v240, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v240.i8 = vmovn_s16((int16x8_t)v240);
    *(int8x8_t *)v241.i8 = vmovn_s16((int16x8_t)v241);
    int8x16_t v242 = vzip1q_s8(v240, v241);
    v241.i64[0] = 0x101010101010101;
    v241.i64[1] = 0x101010101010101;
    int8x16_t v243 = vshlq_s8(v241, v59);
    v241.i64[0] = -1;
    v241.i64[1] = -1;
    int32x4_t v244 = (int32x4_t)vqtbl1q_s8(vandq_s8(v242, vaddq_s8(v243, v241)), (int8x16_t)xmmword_242EA7560);
    *(int32x2_t *)v242.i8 = vdup_lane_s32(*(int32x2_t *)v244.i8, 0);
    *(int32x2_t *)v241.i8 = vdup_lane_s32(*(int32x2_t *)v244.i8, 1);
    int8x8_t v245 = (int8x8_t)vdupq_laneq_s32(v244, 2).u64[0];
    v244.i64[0] = vdupq_laneq_s32(v244, 3).u64[0];
    int16x8_t v624 = vsubw_s8(v624, *(int8x8_t *)v242.i8);
    int16x8_t v625 = vsubw_s8(v625, *(int8x8_t *)v241.i8);
    int16x8_t v626 = vsubw_s8(v626, v245);
    int16x8_t v627 = vsubw_s8(v627, *(int8x8_t *)v244.i8);
    int8x16_t v586 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v242.i8));
    int8x16_t v584 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v241.i8));
    int8x16_t v585 = (int8x16_t)vmovl_s8(vceqz_s8(v245));
    int8x16_t v587 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v244.i8));
  }
  v246.i64[0] = 0x8000800080008;
  v246.i64[1] = 0x8000800080008;
  int8x16_t v247 = 0uLL;
  int8x16_t v248 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v623, v246), (int8x16_t)0, 8uLL), v57);
  int8x16_t v249 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v248, (int16x8_t)v248));
  unint64_t v250 = vpaddq_s32((int32x4_t)v249, (int32x4_t)v249).u64[0];
  v251.i64[0] = v250;
  v251.i64[1] = HIDWORD(v250);
  int64x2_t v252 = v251;
  unint64_t v253 = vaddvq_s64(v251);
  if (v591.i64[0]) {
    BOOL v254 = v591.i64[0] >= v60 + v253;
  }
  else {
    BOOL v254 = 1;
  }
  int v255 = !v254;
  if (v253 <= 0x80 && v255 == 0)
  {
    int64x2_t v257 = vaddq_s64(vdupq_n_s64(v60 & 0x3F), vzip1q_s64((int64x2_t)0, v252));
    int8x16_t v258 = (int64x2_t *)(v590.i64[1] + 8 * (v60 >> 6));
    int8x16_t v247 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v258, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v257)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v258->i64[0], 0), (uint64x2_t)vnegq_s64(v257)));
    if ((v60 & 0x3F) + v253 >= 0x81) {
      int8x16_t v247 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v258[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v257)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v258[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v257))), v247);
    }
    v60 += v253;
  }
  else
  {
    v591.i8[8] = 1;
  }
  int v259 = v623.i8[0] & 3;
  if (v259 == 2)
  {
    unint64_t v260 = v60 + 8;
    if (v591.i64[0])
    {
      if (v591.i64[0] >= v260)
      {
        unint64_t v261 = v60 + 16;
        v60 += 8;
      }
      else
      {
        v591.i8[8] = 1;
        unint64_t v261 = v60 + 8;
      }
      if (v591.i64[0] < v261)
      {
        v591.i8[8] = 1;
        goto LABEL_98;
      }
      unint64_t v260 = v60;
    }
    unint64_t v60 = v260 + 8;
  }
LABEL_98:
  int8x16_t v262 = 0uLL;
  int8x16_t v263 = vextq_s8((int8x16_t)0, (int8x16_t)v624, 8uLL);
  int8x16_t v264 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v263, (int16x8_t)v263));
  unint64_t v265 = vpaddq_s32((int32x4_t)v264, (int32x4_t)v264).u64[0];
  v266.i64[0] = v265;
  v266.i64[1] = HIDWORD(v265);
  int64x2_t v267 = v266;
  unint64_t v268 = vaddvq_s64(v266);
  unint64_t v269 = v60 + v268;
  if (v591.i64[0]) {
    BOOL v270 = v591.i64[0] >= v269;
  }
  else {
    BOOL v270 = 1;
  }
  int v271 = !v270;
  if (v268 > 0x80 || v271)
  {
    int v276 = 1;
    uint64_t v274 = v590.i64[1];
  }
  else
  {
    unint64_t v272 = v60 & 0x3F;
    int64x2_t v273 = vaddq_s64(vdupq_n_s64(v272), vzip1q_s64((int64x2_t)0, v267));
    uint64_t v274 = v590.i64[1];
    unint64_t v275 = (int64x2_t *)(v590.i64[1] + 8 * (v60 >> 6));
    int8x16_t v262 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v275, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v273)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v275->i64[0], 0), (uint64x2_t)vnegq_s64(v273)));
    if (v272 + v268 >= 0x81) {
      int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v275[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v273)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v275[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v273))), v262);
    }
    int v276 = v591.u8[8];
    unint64_t v60 = v269;
  }
  v277.i64[0] = 0xF000F000F000FLL;
  v277.i64[1] = 0xF000F000F000FLL;
  v278.i64[0] = 0x10001000100010;
  v278.i64[1] = 0x10001000100010;
  int8x16_t v279 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v624, v624));
  unint64_t v280 = vpaddq_s32((int32x4_t)v279, (int32x4_t)v279).u64[0];
  v281.i64[0] = v280;
  v281.i64[1] = HIDWORD(v280);
  int64x2_t v282 = v281;
  unint64_t v283 = vaddvq_s64(v281);
  unint64_t v284 = v283;
  unint64_t v285 = v60 + v283;
  if (v591.i64[0]) {
    BOOL v286 = v591.i64[0] >= v285;
  }
  else {
    BOOL v286 = 1;
  }
  char v287 = !v286;
  int8x16_t v288 = 0uLL;
  if (v283 > 0x80 || (v287 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v285 = v60;
    int8x16_t v292 = 0uLL;
  }
  else
  {
    unint64_t v289 = v60 & 0x3F;
    int64x2_t v290 = vaddq_s64(vdupq_n_s64(v289), vzip1q_s64((int64x2_t)0, v282));
    int8x16_t v291 = (int64x2_t *)(v274 + 8 * (v60 >> 6));
    int8x16_t v292 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v291, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v290)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v291->i64[0], 0), (uint64x2_t)vnegq_s64(v290)));
    if (v289 + v284 >= 0x81) {
      int8x16_t v292 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v291[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v290)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v291[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v290))), v292);
    }
  }
  int32x2_t v293 = vzip1_s32(*(int32x2_t *)v279.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v279, v279, 8uLL));
  v294.i64[0] = v293.u32[0];
  v294.i64[1] = v293.u32[1];
  uint64x2_t v295 = (uint64x2_t)vnegq_s64(v294);
  int64x2_t v296 = (int64x2_t)vshlq_u64((uint64x2_t)v292, v295);
  *(int32x2_t *)v292.i8 = vmovn_s64((int64x2_t)v292);
  *(int32x2_t *)v296.i8 = vmovn_s64(v296);
  int16x8_t v297 = (int16x8_t)vzip1q_s32((int32x4_t)v292, (int32x4_t)v296);
  uint32x4_t v298 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v624.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v624, (int8x16_t)v624, 8uLL))));
  int16x8_t v299 = (int16x8_t)vshlq_u32((uint32x4_t)v297, v298);
  *(int16x4_t *)v297.i8 = vmovn_s32((int32x4_t)v297);
  *(int16x4_t *)v299.i8 = vmovn_s32((int32x4_t)v299);
  int16x8_t v300 = vzip1q_s16(v297, v299);
  int16x8_t v301 = vaddq_s16(v624, v277);
  int16x8_t v302 = vsubq_s16((int16x8_t)v278, v624);
  int16x8_t v303 = vshlq_s16(vshlq_s16(v300, v302), v301);
  int16x8_t v599 = v303;
  unint64_t v304 = v285 + v284;
  if (v591.i64[0]) {
    BOOL v305 = v591.i64[0] >= v304;
  }
  else {
    BOOL v305 = 1;
  }
  char v306 = !v305;
  if (v284 > 0x80 || (v306 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v304 = v285;
  }
  else
  {
    unint64_t v307 = v285 & 0x3F;
    int64x2_t v308 = vaddq_s64(vdupq_n_s64(v307), vzip1q_s64((int64x2_t)0, v282));
    int8x16_t v309 = (int64x2_t *)(v274 + 8 * (v285 >> 6));
    int8x16_t v288 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v309, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v308)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v309->i64[0], 0), (uint64x2_t)vnegq_s64(v308)));
    if (v307 + v284 >= 0x81) {
      int8x16_t v288 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v309[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v308)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v309[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v308))), v288);
    }
  }
  int64x2_t v310 = (int64x2_t)vshlq_u64((uint64x2_t)v288, v295);
  *(int32x2_t *)v288.i8 = vmovn_s64((int64x2_t)v288);
  *(int32x2_t *)v310.i8 = vmovn_s64(v310);
  int16x8_t v311 = (int16x8_t)vzip1q_s32((int32x4_t)v288, (int32x4_t)v310);
  int16x8_t v312 = (int16x8_t)vshlq_u32((uint32x4_t)v311, v298);
  *(int16x4_t *)v311.i8 = vmovn_s32((int32x4_t)v311);
  *(int16x4_t *)v312.i8 = vmovn_s32((int32x4_t)v312);
  int16x8_t v313 = vshlq_s16(vshlq_s16(vzip1q_s16(v311, v312), v302), v301);
  int16x8_t v600 = v313;
  unint64_t v314 = v304 + v284;
  if (v591.i64[0]) {
    BOOL v315 = v591.i64[0] >= v314;
  }
  else {
    BOOL v315 = 1;
  }
  char v316 = !v315;
  int8x16_t v317 = 0uLL;
  if (v284 > 0x80 || (v316 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v314 = v304;
    int8x16_t v321 = 0uLL;
  }
  else
  {
    unint64_t v318 = v304 & 0x3F;
    int64x2_t v319 = vaddq_s64(vdupq_n_s64(v318), vzip1q_s64((int64x2_t)0, v282));
    int32x4_t v320 = (int64x2_t *)(v274 + 8 * (v304 >> 6));
    int8x16_t v321 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v320, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v319)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v320->i64[0], 0), (uint64x2_t)vnegq_s64(v319)));
    if (v318 + v284 >= 0x81) {
      int8x16_t v321 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v320[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v319)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v320[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v319))), v321);
    }
  }
  int64x2_t v322 = (int64x2_t)vshlq_u64((uint64x2_t)v321, v295);
  *(int32x2_t *)v321.i8 = vmovn_s64((int64x2_t)v321);
  *(int32x2_t *)v322.i8 = vmovn_s64(v322);
  int16x8_t v323 = (int16x8_t)vzip1q_s32((int32x4_t)v321, (int32x4_t)v322);
  int16x8_t v324 = (int16x8_t)vshlq_u32((uint32x4_t)v323, v298);
  *(int16x4_t *)v323.i8 = vmovn_s32((int32x4_t)v323);
  *(int16x4_t *)v324.i8 = vmovn_s32((int32x4_t)v324);
  int16x8_t v325 = vshlq_s16(vshlq_s16(vzip1q_s16(v323, v324), v302), v301);
  int16x8_t v601 = v325;
  int8x16_t v326 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v625, v625));
  v323.i64[0] = vpaddq_s32((int32x4_t)v326, (int32x4_t)v326).u64[0];
  v327.i64[0] = v323.u32[0];
  v327.i64[1] = v323.u32[1];
  int64x2_t v328 = v327;
  unint64_t v329 = vaddvq_s64(v327);
  unint64_t v330 = v329;
  unint64_t v331 = v314 + v329;
  if (v591.i64[0]) {
    BOOL v332 = v591.i64[0] >= v331;
  }
  else {
    BOOL v332 = 1;
  }
  char v333 = !v332;
  if (v329 > 0x80 || (v333 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v331 = v314;
  }
  else
  {
    unint64_t v334 = v314 & 0x3F;
    int64x2_t v335 = vaddq_s64(vdupq_n_s64(v334), vzip1q_s64((int64x2_t)0, v328));
    int16x8_t v336 = (int64x2_t *)(v274 + 8 * (v314 >> 6));
    int8x16_t v317 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v336, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v335)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v336->i64[0], 0), (uint64x2_t)vnegq_s64(v335)));
    if (v334 + v330 >= 0x81) {
      int8x16_t v317 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v336[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v335)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v336[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v335))), v317);
    }
  }
  unint64_t v337 = v331 + v330;
  if (v591.i64[0]) {
    BOOL v338 = v591.i64[0] >= v337;
  }
  else {
    BOOL v338 = 1;
  }
  char v339 = !v338;
  int8x16_t v340 = 0uLL;
  if (v330 > 0x80 || (v339 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v337 = v331;
    int8x16_t v344 = 0uLL;
  }
  else
  {
    unint64_t v341 = v331 & 0x3F;
    int64x2_t v342 = vaddq_s64(vdupq_n_s64(v341), vzip1q_s64((int64x2_t)0, v328));
    uint64x2_t v343 = (int64x2_t *)(v274 + 8 * (v331 >> 6));
    int8x16_t v344 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v343, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v342)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v343->i64[0], 0), (uint64x2_t)vnegq_s64(v342)));
    if (v341 + v330 >= 0x81) {
      int8x16_t v344 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v343[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v342)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v343[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v342))), v344);
    }
  }
  unint64_t v345 = v337 + v330;
  if (v591.i64[0]) {
    BOOL v346 = v591.i64[0] >= v345;
  }
  else {
    BOOL v346 = 1;
  }
  char v347 = !v346;
  if (v330 > 0x80 || (v347 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v345 = v337;
  }
  else
  {
    int64x2_t v348 = vaddq_s64(vdupq_n_s64(v337 & 0x3F), vzip1q_s64((int64x2_t)0, v328));
    unint64_t v349 = (int64x2_t *)(v274 + 8 * (v337 >> 6));
    int8x16_t v340 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v349, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v348)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v349->i64[0], 0), (uint64x2_t)vnegq_s64(v348)));
    if ((v337 & 0x3F) + v330 >= 0x81) {
      int8x16_t v340 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v349[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v348)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v349[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v348))), v340);
    }
  }
  unint64_t v350 = v345 + v330;
  if (v591.i64[0]) {
    BOOL v351 = v591.i64[0] >= v350;
  }
  else {
    BOOL v351 = 1;
  }
  char v352 = !v351;
  int8x16_t v353 = 0uLL;
  if (v330 > 0x80 || (v352 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v350 = v345;
    int8x16_t v356 = 0uLL;
  }
  else
  {
    int64x2_t v354 = vaddq_s64(vdupq_n_s64(v345 & 0x3F), vzip1q_s64((int64x2_t)0, v328));
    int32x4_t v355 = (int64x2_t *)(v274 + 8 * (v345 >> 6));
    int8x16_t v356 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v355, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v354)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v355->i64[0], 0), (uint64x2_t)vnegq_s64(v354)));
    if ((v345 & 0x3F) + v330 >= 0x81) {
      int8x16_t v356 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v355[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v354)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v355[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v354))), v356);
    }
  }
  int8x16_t v357 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v626, v626));
  unint64_t v358 = vpaddq_s32((int32x4_t)v357, (int32x4_t)v357).u64[0];
  v359.i64[0] = v358;
  v359.i64[1] = HIDWORD(v358);
  int64x2_t v360 = v359;
  unint64_t v361 = vaddvq_s64(v359);
  unint64_t v362 = v361;
  unint64_t v363 = v350 + v361;
  if (v591.i64[0]) {
    BOOL v364 = v591.i64[0] >= v363;
  }
  else {
    BOOL v364 = 1;
  }
  char v365 = !v364;
  if (v361 > 0x80 || (v365 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v363 = v350;
  }
  else
  {
    unint64_t v366 = v350 & 0x3F;
    int64x2_t v367 = vaddq_s64(vdupq_n_s64(v366), vzip1q_s64((int64x2_t)0, v360));
    unint64_t v368 = (int64x2_t *)(v274 + 8 * (v350 >> 6));
    int8x16_t v353 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v368, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v367)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v368->i64[0], 0), (uint64x2_t)vnegq_s64(v367)));
    if (v366 + v362 >= 0x81) {
      int8x16_t v353 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v368[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v367)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v368[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v367))), v353);
    }
  }
  unint64_t v369 = v363 + v362;
  if (v591.i64[0]) {
    BOOL v370 = v591.i64[0] >= v369;
  }
  else {
    BOOL v370 = 1;
  }
  char v371 = !v370;
  int8x16_t v372 = 0uLL;
  if (v362 > 0x80 || (v371 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v369 = v363;
    int8x16_t v376 = 0uLL;
  }
  else
  {
    unint64_t v373 = v363 & 0x3F;
    int64x2_t v374 = vaddq_s64(vdupq_n_s64(v373), vzip1q_s64((int64x2_t)0, v360));
    int32x4_t v375 = (int64x2_t *)(v274 + 8 * (v363 >> 6));
    int8x16_t v376 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v375, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v374)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v375->i64[0], 0), (uint64x2_t)vnegq_s64(v374)));
    if (v373 + v362 >= 0x81) {
      int8x16_t v376 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v375[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v374)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v375[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v374))), v376);
    }
  }
  unint64_t v377 = v369 + v362;
  if (v591.i64[0]) {
    BOOL v378 = v591.i64[0] >= v377;
  }
  else {
    BOOL v378 = 1;
  }
  char v379 = !v378;
  if (v362 > 0x80 || (v379 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v377 = v369;
  }
  else
  {
    unint64_t v380 = v369 & 0x3F;
    int64x2_t v381 = vaddq_s64(vdupq_n_s64(v380), vzip1q_s64((int64x2_t)0, v360));
    int64x2_t v382 = (int64x2_t *)(v274 + 8 * (v369 >> 6));
    int8x16_t v372 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v382, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v381)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v382->i64[0], 0), (uint64x2_t)vnegq_s64(v381)));
    if (v380 + v362 >= 0x81) {
      int8x16_t v372 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v382[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v381)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v382[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v381))), v372);
    }
  }
  unint64_t v383 = v377 + v362;
  if (v591.i64[0]) {
    BOOL v384 = v591.i64[0] >= v383;
  }
  else {
    BOOL v384 = 1;
  }
  char v385 = !v384;
  int8x16_t v386 = 0uLL;
  if (v362 > 0x80 || (v385 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v383 = v377;
    int8x16_t v390 = 0uLL;
  }
  else
  {
    unint64_t v387 = v377 & 0x3F;
    int64x2_t v388 = vaddq_s64(vdupq_n_s64(v387), vzip1q_s64((int64x2_t)0, v360));
    uint16x8_t v389 = (int64x2_t *)(v274 + 8 * (v377 >> 6));
    int8x16_t v390 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v389, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v388)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v389->i64[0], 0), (uint64x2_t)vnegq_s64(v388)));
    if (v387 + v362 >= 0x81) {
      int8x16_t v390 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v389[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v388)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v389[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v388))), v390);
    }
  }
  int8x16_t v391 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v627, v627));
  unint64_t v392 = vpaddq_s32((int32x4_t)v391, (int32x4_t)v391).u64[0];
  v393.i64[0] = v392;
  v393.i64[1] = HIDWORD(v392);
  int64x2_t v394 = v393;
  unint64_t v395 = vaddvq_s64(v393);
  unint64_t v396 = v395;
  unint64_t v397 = v383 + v395;
  if (v591.i64[0]) {
    BOOL v398 = v591.i64[0] >= v397;
  }
  else {
    BOOL v398 = 1;
  }
  char v399 = !v398;
  if (v395 > 0x80 || (v399 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v397 = v383;
  }
  else
  {
    unint64_t v400 = v383 & 0x3F;
    int64x2_t v401 = vaddq_s64(vdupq_n_s64(v400), vzip1q_s64((int64x2_t)0, v394));
    uint64_t v402 = (int64x2_t *)(v274 + 8 * (v383 >> 6));
    int8x16_t v386 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v402, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v401)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v402->i64[0], 0), (uint64x2_t)vnegq_s64(v401)));
    if (v400 + v396 >= 0x81) {
      int8x16_t v386 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v402[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v401)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v402[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v401))), v386);
    }
  }
  unint64_t v403 = v397 + v396;
  if (v591.i64[0]) {
    BOOL v404 = v591.i64[0] >= v403;
  }
  else {
    BOOL v404 = 1;
  }
  char v405 = !v404;
  int8x16_t v406 = 0uLL;
  if (v396 > 0x80 || (v405 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v403 = v397;
    int8x16_t v410 = 0uLL;
  }
  else
  {
    unint64_t v407 = v397 & 0x3F;
    int64x2_t v408 = vaddq_s64(vdupq_n_s64(v407), vzip1q_s64((int64x2_t)0, v394));
    int32x4_t v409 = (int64x2_t *)(v274 + 8 * (v397 >> 6));
    int64x2_t v278 = vnegq_s64(v408);
    int8x16_t v410 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v409, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v408)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v409->i64[0], 0), (uint64x2_t)v278));
    if (v407 + v396 >= 0x81)
    {
      int64x2_t v278 = vdupq_n_s64(0xC0uLL);
      int8x16_t v410 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v409[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v408)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v409[1], 1), (uint64x2_t)vsubq_s64(v278, v408))), v410);
    }
  }
  unint64_t v411 = v403 + v396;
  if (v591.i64[0]) {
    BOOL v412 = v591.i64[0] >= v411;
  }
  else {
    BOOL v412 = 1;
  }
  char v413 = !v412;
  if (v396 > 0x80 || (v413 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v411 = v403;
  }
  else
  {
    unint64_t v414 = v403 & 0x3F;
    int64x2_t v415 = vaddq_s64(vdupq_n_s64(v414), vzip1q_s64((int64x2_t)0, v394));
    unint64_t v416 = (int64x2_t *)(v274 + 8 * (v403 >> 6));
    int64x2_t v278 = vsubq_s64(vdupq_n_s64(0x40uLL), v415);
    int8x16_t v406 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v416, 1), (uint64x2_t)v278), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v416->i64[0], 0), (uint64x2_t)vnegq_s64(v415)));
    if (v414 + v396 >= 0x81)
    {
      int64x2_t v278 = vdupq_n_s64(0xC0uLL);
      int8x16_t v406 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v416[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v415)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v416[1], 1), (uint64x2_t)vsubq_s64(v278, v415))), v406);
    }
  }
  unint64_t v417 = v411 + v396;
  if (v591.i64[0]) {
    BOOL v418 = v591.i64[0] >= v417;
  }
  else {
    BOOL v418 = 1;
  }
  char v419 = !v418;
  int8x16_t v420 = 0uLL;
  if (v396 > 0x80 || (v419 & 1) != 0)
  {
    int v276 = 1;
    unint64_t v417 = v411;
  }
  else
  {
    int64x2_t v421 = vaddq_s64(vdupq_n_s64(v411 & 0x3F), vzip1q_s64((int64x2_t)0, v394));
    int32x4_t v422 = (int64x2_t *)(v274 + 8 * (v411 >> 6));
    int64x2_t v278 = vdupq_n_s64(0x40uLL);
    int8x16_t v420 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v422, 1), (uint64x2_t)vsubq_s64(v278, v421)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v422->i64[0], 0), (uint64x2_t)vnegq_s64(v421)));
    if ((v411 & 0x3F) + v396 >= 0x81)
    {
      int64x2_t v278 = vdupq_n_s64(0xC0uLL);
      int8x16_t v420 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v422[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v421)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v422[1], 1), (uint64x2_t)vsubq_s64(v278, v421))), v420);
    }
  }
  if (v276 || v591.i64[0] + 8 * result - v417 - 1024 >= 9 || v259 == 2)
  {
    uint64_t result = 0;
    int64x2_t v12 = vdupq_n_s64(0xFFFFF003FFuLL);
    *a1 = v12;
    a1[1] = v12;
    int32x4_t v423 = (int64x2_t *)((char *)a1 + a2);
    *int32x4_t v423 = v12;
    v423[1] = v12;
    int32x4_t v424 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int32x4_t v424 = v12;
    v424[1] = v12;
    unsigned __int8 v15 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
    goto LABEL_279;
  }
  int32x2_t v425 = vzip1_s32(*(int32x2_t *)v249.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v249, v249, 8uLL));
  int32x2_t v426 = vzip1_s32(*(int32x2_t *)v264.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v264, v264, 8uLL));
  *(int32x2_t *)v249.i8 = vzip1_s32(*(int32x2_t *)v326.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v326, v326, 8uLL));
  int32x2_t v427 = vzip1_s32(*(int32x2_t *)v357.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v357, v357, 8uLL));
  int32x4_t v428 = (int32x4_t)vextq_s8(v391, v391, 8uLL);
  int32x2_t v429 = vzip1_s32(*(int32x2_t *)v391.i8, *(int32x2_t *)v428.i8);
  v430.i64[0] = v425.u32[0];
  v430.i64[1] = v425.u32[1];
  int64x2_t v431 = (int64x2_t)vshlq_u64((uint64x2_t)v247, (uint64x2_t)vnegq_s64(v430));
  *(int32x2_t *)v247.i8 = vmovn_s64((int64x2_t)v247);
  *(int32x2_t *)v431.i8 = vmovn_s64(v431);
  int16x8_t v432 = (int16x8_t)vzip1q_s32((int32x4_t)v247, (int32x4_t)v431);
  v430.i64[0] = v426.u32[0];
  v430.i64[1] = v426.u32[1];
  int64x2_t v433 = (int64x2_t)vshlq_u64((uint64x2_t)v262, (uint64x2_t)vnegq_s64(v430));
  *(int32x2_t *)v428.i8 = vmovn_s64((int64x2_t)v262);
  *(int32x2_t *)v433.i8 = vmovn_s64(v433);
  int32x4_t v434 = vzip1q_s32(v428, (int32x4_t)v433);
  v430.i64[0] = v249.u32[0];
  v430.i64[1] = v249.u32[1];
  int32x4_t v435 = (int32x4_t)vnegq_s64(v430);
  int64x2_t v436 = (int64x2_t)vshlq_u64((uint64x2_t)v317, (uint64x2_t)v435);
  *(int32x2_t *)v278.i8 = vmovn_s64((int64x2_t)v317);
  *(int32x2_t *)v436.i8 = vmovn_s64(v436);
  int16x8_t v437 = (int16x8_t)vzip1q_s32((int32x4_t)v278, (int32x4_t)v436);
  int64x2_t v438 = (int64x2_t)vshlq_u64((uint64x2_t)v344, (uint64x2_t)v435);
  *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v344);
  *(int32x2_t *)v438.i8 = vmovn_s64(v438);
  int16x8_t v439 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v438);
  int64x2_t v440 = (int64x2_t)vshlq_u64((uint64x2_t)v340, (uint64x2_t)v435);
  *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v340);
  *(int32x2_t *)v440.i8 = vmovn_s64(v440);
  int16x8_t v441 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v440);
  v430.i64[0] = v427.u32[0];
  v430.i64[1] = v427.u32[1];
  int64x2_t v442 = v430;
  v430.i64[0] = v429.u32[0];
  v430.i64[1] = v429.u32[1];
  int32x4_t v443 = (int32x4_t)vnegq_s64(v442);
  int64x2_t v444 = (int64x2_t)vshlq_u64((uint64x2_t)v356, (uint64x2_t)v435);
  *(int32x2_t *)v435.i8 = vmovn_s64((int64x2_t)v356);
  *(int32x2_t *)v444.i8 = vmovn_s64(v444);
  int16x8_t v445 = (int16x8_t)vzip1q_s32(v435, (int32x4_t)v444);
  int64x2_t v446 = (int64x2_t)vshlq_u64((uint64x2_t)v353, (uint64x2_t)v443);
  *(int32x2_t *)v435.i8 = vmovn_s64((int64x2_t)v353);
  *(int32x2_t *)v446.i8 = vmovn_s64(v446);
  int16x8_t v447 = (int16x8_t)vzip1q_s32(v435, (int32x4_t)v446);
  int64x2_t v448 = (int64x2_t)vshlq_u64((uint64x2_t)v376, (uint64x2_t)v443);
  *(int32x2_t *)v435.i8 = vmovn_s64((int64x2_t)v376);
  *(int32x2_t *)v448.i8 = vmovn_s64(v448);
  int16x8_t v449 = (int16x8_t)vzip1q_s32(v435, (int32x4_t)v448);
  int64x2_t v450 = (int64x2_t)vshlq_u64((uint64x2_t)v372, (uint64x2_t)v443);
  *(int32x2_t *)v435.i8 = vmovn_s64((int64x2_t)v372);
  *(int32x2_t *)v450.i8 = vmovn_s64(v450);
  int16x8_t v451 = (int16x8_t)vzip1q_s32(v435, (int32x4_t)v450);
  uint64x2_t v452 = (uint64x2_t)vnegq_s64(v430);
  int64x2_t v453 = (int64x2_t)vshlq_u64((uint64x2_t)v390, (uint64x2_t)v443);
  *(int32x2_t *)v435.i8 = vmovn_s64((int64x2_t)v390);
  *(int32x2_t *)v453.i8 = vmovn_s64(v453);
  int16x8_t v454 = (int16x8_t)vzip1q_s32(v435, (int32x4_t)v453);
  int64x2_t v455 = (int64x2_t)vshlq_u64((uint64x2_t)v386, v452);
  *(int32x2_t *)v443.i8 = vmovn_s64((int64x2_t)v386);
  *(int32x2_t *)v455.i8 = vmovn_s64(v455);
  int16x8_t v456 = (int16x8_t)vzip1q_s32(v443, (int32x4_t)v455);
  int64x2_t v457 = (int64x2_t)vshlq_u64((uint64x2_t)v410, v452);
  *(int32x2_t *)v410.i8 = vmovn_s64((int64x2_t)v410);
  *(int32x2_t *)v457.i8 = vmovn_s64(v457);
  int16x8_t v458 = (int16x8_t)vzip1q_s32((int32x4_t)v410, (int32x4_t)v457);
  int64x2_t v459 = (int64x2_t)vshlq_u64((uint64x2_t)v406, v452);
  *(int32x2_t *)v457.i8 = vmovn_s64((int64x2_t)v406);
  *(int32x2_t *)v459.i8 = vmovn_s64(v459);
  int16x8_t v460 = (int16x8_t)vzip1q_s32((int32x4_t)v457, (int32x4_t)v459);
  int16x8_t v461 = (int16x8_t)vshlq_u32((uint32x4_t)v432, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v248.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v248, v248, 8uLL)))));
  *(int16x4_t *)v432.i8 = vmovn_s32((int32x4_t)v432);
  *(int16x4_t *)v461.i8 = vmovn_s32((int32x4_t)v461);
  int16x8_t v462 = vzip1q_s16(v432, v461);
  uint32x4_t v463 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v625.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v625, (int8x16_t)v625, 8uLL))));
  int16x8_t v464 = (int16x8_t)vshlq_u32((uint32x4_t)v434, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v263.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v263, v263, 8uLL)))));
  *(int16x4_t *)v356.i8 = vmovn_s32(v434);
  *(int16x4_t *)v464.i8 = vmovn_s32((int32x4_t)v464);
  int16x8_t v465 = vzip1q_s16((int16x8_t)v356, v464);
  int16x8_t v466 = (int16x8_t)vshlq_u32((uint32x4_t)v437, v463);
  *(int16x4_t *)v437.i8 = vmovn_s32((int32x4_t)v437);
  *(int16x4_t *)v466.i8 = vmovn_s32((int32x4_t)v466);
  int16x8_t v467 = vzip1q_s16(v437, v466);
  int16x8_t v468 = (int16x8_t)vshlq_u32((uint32x4_t)v439, v463);
  *(int16x4_t *)v439.i8 = vmovn_s32((int32x4_t)v439);
  *(int16x4_t *)v468.i8 = vmovn_s32((int32x4_t)v468);
  int16x8_t v469 = vzip1q_s16(v439, v468);
  int16x8_t v470 = (int16x8_t)vshlq_u32((uint32x4_t)v441, v463);
  *(int16x4_t *)v441.i8 = vmovn_s32((int32x4_t)v441);
  *(int16x4_t *)v470.i8 = vmovn_s32((int32x4_t)v470);
  int16x8_t v471 = vzip1q_s16(v441, v470);
  uint32x4_t v472 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v626.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v626, (int8x16_t)v626, 8uLL))));
  int16x8_t v473 = (int16x8_t)vshlq_u32((uint32x4_t)v445, v463);
  *(int16x4_t *)v445.i8 = vmovn_s32((int32x4_t)v445);
  *(int16x4_t *)v473.i8 = vmovn_s32((int32x4_t)v473);
  int16x8_t v474 = vzip1q_s16(v445, v473);
  int16x8_t v475 = (int16x8_t)vshlq_u32((uint32x4_t)v447, v472);
  *(int16x4_t *)v447.i8 = vmovn_s32((int32x4_t)v447);
  *(int16x4_t *)v475.i8 = vmovn_s32((int32x4_t)v475);
  int16x8_t v476 = vzip1q_s16(v447, v475);
  int16x8_t v477 = (int16x8_t)vshlq_u32((uint32x4_t)v449, v472);
  *(int16x4_t *)v449.i8 = vmovn_s32((int32x4_t)v449);
  *(int16x4_t *)v477.i8 = vmovn_s32((int32x4_t)v477);
  int16x8_t v478 = vzip1q_s16(v449, v477);
  int16x8_t v479 = (int16x8_t)vshlq_u32((uint32x4_t)v451, v472);
  *(int16x4_t *)v451.i8 = vmovn_s32((int32x4_t)v451);
  *(int16x4_t *)v479.i8 = vmovn_s32((int32x4_t)v479);
  int16x8_t v480 = vzip1q_s16(v451, v479);
  uint32x4_t v481 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v627.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v627, (int8x16_t)v627, 8uLL))));
  int16x8_t v482 = (int16x8_t)vshlq_u32((uint32x4_t)v454, v472);
  *(int16x4_t *)v454.i8 = vmovn_s32((int32x4_t)v454);
  *(int16x4_t *)v482.i8 = vmovn_s32((int32x4_t)v482);
  int16x8_t v483 = vzip1q_s16(v454, v482);
  int16x8_t v484 = (int16x8_t)vshlq_u32((uint32x4_t)v456, v481);
  *(int16x4_t *)v456.i8 = vmovn_s32((int32x4_t)v456);
  *(int16x4_t *)v484.i8 = vmovn_s32((int32x4_t)v484);
  int16x8_t v485 = vzip1q_s16(v456, v484);
  int16x8_t v486 = (int16x8_t)vshlq_u32((uint32x4_t)v458, v481);
  *(int16x4_t *)v458.i8 = vmovn_s32((int32x4_t)v458);
  *(int16x4_t *)v486.i8 = vmovn_s32((int32x4_t)v486);
  int16x8_t v487 = vzip1q_s16(v458, v486);
  int16x8_t v488 = (int16x8_t)vshlq_u32((uint32x4_t)v460, v481);
  *(int16x4_t *)v460.i8 = vmovn_s32((int32x4_t)v460);
  *(int16x4_t *)v488.i8 = vmovn_s32((int32x4_t)v488);
  int16x8_t v489 = vzip1q_s16(v460, v488);
  v488.i64[0] = 0x10001000100010;
  v488.i64[1] = 0x10001000100010;
  int16x8_t v490 = vsubq_s16(v488, (int16x8_t)v248);
  v491.i64[0] = 0xF000F000F000FLL;
  v491.i64[1] = 0xF000F000F000FLL;
  int16x8_t v492 = vaddq_s16((int16x8_t)v248, v491);
  int16x8_t v493 = vshlq_s16(v462, v490);
  v490.i64[0] = 0x10001000100010;
  v490.i64[1] = 0x10001000100010;
  int16x8_t v494 = vsubq_s16(v490, (int16x8_t)v263);
  int16x8_t v495 = vaddq_s16((int16x8_t)v263, v491);
  v491.i64[0] = 0x10001000100010;
  v491.i64[1] = 0x10001000100010;
  int16x8_t v496 = vshlq_s16(v465, v494);
  v494.i64[0] = 0xF000F000F000FLL;
  v494.i64[1] = 0xF000F000F000FLL;
  int16x8_t v497 = vsubq_s16(v491, v625);
  int16x8_t v498 = vaddq_s16(v625, v494);
  v494.i64[0] = 0x10001000100010;
  v494.i64[1] = 0x10001000100010;
  int16x8_t v499 = vshlq_s16(v467, v497);
  int16x8_t v500 = vshlq_s16(v469, v497);
  int16x8_t v501 = vshlq_s16(v471, v497);
  int16x8_t v502 = vshlq_s16(v474, v497);
  v497.i64[0] = 0xF000F000F000FLL;
  v497.i64[1] = 0xF000F000F000FLL;
  int16x8_t v503 = vsubq_s16(v494, v626);
  int16x8_t v504 = vaddq_s16(v626, v497);
  v497.i64[0] = 0x10001000100010;
  v497.i64[1] = 0x10001000100010;
  int16x8_t v505 = vshlq_s16(v476, v503);
  int16x8_t v506 = vshlq_s16(v478, v503);
  int16x8_t v507 = vshlq_s16(v480, v503);
  int16x8_t v508 = vshlq_s16(v483, v503);
  v503.i64[0] = 0xF000F000F000FLL;
  v503.i64[1] = 0xF000F000F000FLL;
  int16x8_t v509 = vsubq_s16(v497, v627);
  int16x8_t v510 = vaddq_s16(v627, v503);
  int8x16_t v511 = (int8x16_t)vshlq_s16(v493, v492);
  int16x8_t v512 = vshlq_s16(v496, v495);
  int16x8_t v513 = vshlq_s16(v499, v498);
  int16x8_t v514 = vshlq_s16(v500, v498);
  int16x8_t v515 = vshlq_s16(v501, v498);
  int16x8_t v516 = vshlq_s16(v502, v498);
  int16x8_t v517 = vshlq_s16(v505, v504);
  int16x8_t v518 = vshlq_s16(v506, v504);
  int16x8_t v519 = vshlq_s16(v507, v504);
  int16x8_t v520 = vshlq_s16(v508, v504);
  int64x2_t v521 = (int64x2_t)vshlq_u64((uint64x2_t)v420, v452);
  *(int32x2_t *)v420.i8 = vmovn_s64((int64x2_t)v420);
  *(int32x2_t *)v521.i8 = vmovn_s64(v521);
  int16x8_t v522 = (int16x8_t)vzip1q_s32((int32x4_t)v420, (int32x4_t)v521);
  int16x8_t v523 = vshlq_s16(vshlq_s16(v485, v509), v510);
  int16x8_t v524 = vshlq_s16(vshlq_s16(v487, v509), v510);
  int16x8_t v525 = vshlq_s16(vshlq_s16(v489, v509), v510);
  int16x8_t v526 = (int16x8_t)vshlq_u32((uint32x4_t)v522, v481);
  *(int16x4_t *)v522.i8 = vmovn_s32((int32x4_t)v522);
  *(int16x4_t *)v526.i8 = vmovn_s32((int32x4_t)v526);
  int16x8_t v527 = vshlq_s16(vshlq_s16(vzip1q_s16(v522, v526), v509), v510);
  int16x8_t v528 = vaddq_s16((int16x8_t)vandq_s8(v511, v586), v512);
  int8x16_t v529 = (int8x16_t)vdupq_lane_s64(v511.i64[0], 0);
  int16x8_t v530 = (int16x8_t)vandq_s8(v584, v529);
  int16x8_t v531 = vsubq_s16(v513, v530);
  int16x8_t v532 = vsubq_s16(v514, v530);
  int16x8_t v533 = vsubq_s16(v515, v530);
  int16x8_t v534 = vsubq_s16(v516, v530);
  int16x8_t v535 = (int16x8_t)vandq_s8(v585, v529);
  int16x8_t v536 = vsubq_s16(v517, v535);
  int16x8_t v537 = vsubq_s16(v518, v535);
  int16x8_t v538 = (int16x8_t)vandq_s8(v586, v529);
  int16x8_t v539 = vsubq_s16(v519, v535);
  int16x8_t v540 = vsubq_s16(v520, v535);
  v541.i64[0] = 0x1000100010001;
  v541.i64[1] = 0x1000100010001;
  int16x8_t v542 = vsubq_s16(v303, v538);
  int16x8_t v543 = vsubq_s16(v313, v538);
  int16x8_t v544 = (int16x8_t)vandq_s8(v587, v529);
  int16x8_t v545 = vsubq_s16(v523, v544);
  int16x8_t v546 = vsubq_s16(v524, v544);
  int16x8_t v547 = vsubq_s16(v525, v544);
  int16x8_t v548 = vsubq_s16(v527, v544);
  int8x16_t v549 = (int8x16_t)vsubq_s16(v325, v538);
  int8x16_t v550 = (int8x16_t)vsubq_s16(v528, v538);
  int16x8_t v598 = v528;
  int8x16_t v618 = (int8x16_t)v545;
  int8x16_t v619 = (int8x16_t)v546;
  int8x16_t v620 = (int8x16_t)v547;
  int8x16_t v621 = (int8x16_t)v548;
  if (vaddvq_s16(vceqq_s16(v588, (int16x8_t)v541)))
  {
    int8x16_t v551 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v623, v541));
    v552.i64[1] = v550.i64[1];
    v552.i64[0] = v549.i64[1];
    v553.i64[0] = v549.i64[0];
    v553.i64[1] = v550.i64[0];
    int16x8_t v554 = (int16x8_t)vbslq_s8(v551, v552, v550);
    int16x8_t v555 = (int16x8_t)vbslq_s8(v551, v553, v549);
    v556.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v556.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int16x8_t v557 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v542 - 1), v556), v551);
    v632.val[0] = (int8x16_t)vaddq_s16(v554, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v542 - 1), (int8x16_t)xmmword_242EA7710), v551));
    v632.val[1] = (int8x16_t)vaddq_s16(v542, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v542 - 1), (int8x16_t)xmmword_242EA7720), v551));
    v632.val[2] = (int8x16_t)vaddq_s16(v543, v557);
    v632.val[3] = (int8x16_t)vaddq_s16(v555, v557);
    int16x8_t v558 = (int16x8_t)vandq_s8(vqtbl4q_s8(v632, v556), v551);
    int8x16_t v550 = (int8x16_t)vaddq_s16((int16x8_t)v632.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v632, (int8x16_t)xmmword_242EA7730), v551));
    int16x8_t v542 = vaddq_s16((int16x8_t)v632.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v632, (int8x16_t)xmmword_242EA7740), v551));
    int16x8_t v598 = (int16x8_t)v550;
    int16x8_t v599 = v542;
    int16x8_t v543 = vaddq_s16((int16x8_t)v632.val[2], v558);
    int8x16_t v549 = (int8x16_t)vaddq_s16((int16x8_t)v632.val[3], v558);
    v630.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v531.i8, (int8x16_t)xmmword_242EA7710), v551), v531);
    v630.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v531.i8, (int8x16_t)xmmword_242EA7750), v551), v532);
    v630.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v531.i8, v556), v551), v533);
    v630.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v531.i8, (int8x16_t)xmmword_242EA7760), v551), v534);
    v632.val[3] = vandq_s8(vqtbl4q_s8(v630, (int8x16_t)xmmword_242EA7730), v551);
    int16x8_t v559 = (int16x8_t)vandq_s8(vqtbl4q_s8(v630, v556), v551);
    int16x8_t v531 = vaddq_s16((int16x8_t)v632.val[3], (int16x8_t)v630.val[0]);
    int16x8_t v532 = vaddq_s16((int16x8_t)v630.val[1], (int16x8_t)v632.val[3]);
    int16x8_t v533 = vaddq_s16((int16x8_t)v630.val[2], v559);
    int16x8_t v534 = vaddq_s16((int16x8_t)v630.val[3], v559);
    v630.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v536.i8, (int8x16_t)xmmword_242EA74D0), v551), v536);
    v630.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v536.i8, (int8x16_t)xmmword_242EA75A0), v551), v537);
    v630.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v536.i8, (int8x16_t)xmmword_242EA7710), v551), v539);
    v630.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v536.i8, (int8x16_t)xmmword_242EA7720), v551), v540);
    v632.val[3] = vandq_s8(vqtbl4q_s8(v630, v556), v551);
    int16x8_t v536 = vaddq_s16((int16x8_t)v630.val[0], (int16x8_t)v632.val[3]);
    int16x8_t v537 = vaddq_s16((int16x8_t)v630.val[1], (int16x8_t)v632.val[3]);
    int16x8_t v539 = vaddq_s16((int16x8_t)v630.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v630, (int8x16_t)xmmword_242EA75D0), v551));
    int16x8_t v540 = vaddq_s16((int16x8_t)v630.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v630, (int8x16_t)xmmword_242EA7770), v551));
    v630.val[0] = v618;
    v630.val[1] = v619;
    int8x16_t v55 = v623;
    v630.val[2] = v620;
    v630.val[3] = v621;
    v631.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v630, (int8x16_t)xmmword_242EA74D0), v551), (int16x8_t)v618);
    v631.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v630, (int8x16_t)xmmword_242EA7780), v551), (int16x8_t)v619);
    int16x8_t v600 = v543;
    int16x8_t v601 = (int16x8_t)v549;
    v631.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v630, (int8x16_t)xmmword_242EA7710), v551), (int16x8_t)v620);
    v631.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v630, (int8x16_t)xmmword_242EA7720), v551), (int16x8_t)v621);
    int16x8_t v560 = (int16x8_t)vandq_s8(vqtbl4q_s8(v631, v556), v551);
    int16x8_t v561 = (int16x8_t)vandq_s8(vqtbl4q_s8(v631, (int8x16_t)xmmword_242EA75D0), v551);
    int16x8_t v562 = (int16x8_t)vandq_s8(vqtbl4q_s8(v631, (int8x16_t)xmmword_242EA7790), v551);
    int16x8_t v545 = vaddq_s16((int16x8_t)v631.val[0], v560);
    int16x8_t v546 = vaddq_s16((int16x8_t)v631.val[1], v560);
    int16x8_t v547 = vaddq_s16((int16x8_t)v631.val[2], v561);
    int16x8_t v548 = vaddq_s16((int16x8_t)v631.val[3], v562);
  }
  int8x16_t v563 = (int8x16_t)vaddq_s16(v622, (int16x8_t)v550);
  int8x16_t v564 = (int8x16_t)vaddq_s16(v542, v622);
  int8x16_t v565 = (int8x16_t)vaddq_s16(v543, v622);
  int8x16_t v566 = (int8x16_t)vaddq_s16((int16x8_t)v549, v622);
  int8x16_t v567 = (int8x16_t)vaddq_s16(v531, v622);
  int8x16_t v568 = (int8x16_t)vaddq_s16(v532, v622);
  int8x16_t v569 = (int8x16_t)vaddq_s16(v533, v622);
  int8x16_t v570 = (int8x16_t)vaddq_s16(v534, v622);
  int8x16_t v571 = (int8x16_t)vaddq_s16(v536, v622);
  int8x16_t v572 = (int8x16_t)vaddq_s16(v537, v622);
  int8x16_t v573 = (int8x16_t)vaddq_s16(v539, v622);
  int8x16_t v574 = (int8x16_t)vaddq_s16(v540, v622);
  int8x16_t v575 = (int8x16_t)vaddq_s16(v545, v622);
  int8x16_t v576 = (int8x16_t)vaddq_s16(v546, v622);
  int8x16_t v577 = (int8x16_t)vaddq_s16(v547, v622);
  int8x16_t v578 = (int8x16_t)vaddq_s16(v548, v622);
  v579.i64[0] = 0x10001000100010;
  v579.i64[1] = 0x10001000100010;
  int8x16_t v580 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v55, v579));
  int8x16_t v581 = (int16x8_t *)((char *)a1 + a2);
  *a1 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v563, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v563), 6uLL);
  a1[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v564, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v564), 6uLL);
  a1[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v567, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v567), 6uLL);
  a1[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v568, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v568), 6uLL);
  int16x8_t v582 = (int16x8_t *)((char *)a1 + 2 * a2);
  *int8x16_t v581 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v565, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v565), 6uLL);
  v581[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v566, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v566), 6uLL);
  v581[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v569, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v569), 6uLL);
  v581[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v570, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v570), 6uLL);
  *int16x8_t v582 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v571, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v571), 6uLL);
  v582[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v572, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v572), 6uLL);
  v582[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v575, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v575), 6uLL);
  v582[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v576, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v576), 6uLL);
  int16x8_t v583 = (int16x8_t *)((char *)v582 + a2);
  *int16x8_t v583 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v573, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v573), 6uLL);
  v583[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v574, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v574), 6uLL);
  v583[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v577, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v577), 6uLL);
  v583[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v578, (int8x16_t)xmmword_242EA77A0), v580), (int16x8_t)v578), 6uLL);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  uint64_t v13 = (int16x8_t *)result;
  if (a5 >= 4) {
    unsigned int v14 = 4;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64x2_t v16 = a4 + 1;
  if (a5 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    int v19 = 4;
  }
  else {
    int v19 = v18;
  }
  if (v19) {
    BOOL v20 = v15 == 0;
  }
  else {
    BOOL v20 = 1;
  }
  if (v20)
  {
    *uint64x2_t v16 = 0;
  }
  else
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v16, v13 + 4, a2, v19, v15, a7);
    v11 += result;
  }
  uint64_t v36 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v21, (int16x8_t *)((char *)v13 + v36), a2, v14, v24, a7);
    v11 += result;
    int16x8_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    int16x8_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v25, (int16x8_t *)((char *)v13 + v36 + 64), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_37;
  }
LABEL_36:
  *int16x8_t v25 = 0;
LABEL_37:
  uint64_t v26 = a4 + 4;
  if (a5 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a5;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v29 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v26, v13 + 8, a2, v29, v15, a7);
    v11 += result;
  }
  else
  {
    *uint64_t v26 = 0;
  }
  unint64_t v30 = a4 + 5;
  if (a5 <= 12) {
    int v31 = 12;
  }
  else {
    int v31 = a5;
  }
  unsigned int v32 = v31 - 12;
  if (v32 >= 4) {
    int v33 = 4;
  }
  else {
    int v33 = v32;
  }
  if (v33 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v30, v13 + 12, a2, v33, v15, a7);
    v11 += result;
    int64x2_t v34 = a4 + 6;
    if (!v29) {
      goto LABEL_61;
    }
  }
  else
  {
    *unint64_t v30 = 0;
    int64x2_t v34 = a4 + 6;
    if (!v29) {
      goto LABEL_61;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v34, (int16x8_t *)((char *)v13 + v36 + 128), a2, v29, v24, a7);
    v11 += result;
    unint64_t v35 = a4 + 7;
    if (!v33) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *int64x2_t v34 = 0;
  unint64_t v35 = a4 + 7;
  if (!v33)
  {
LABEL_66:
    *unint64_t v35 = 0;
    return result;
  }
LABEL_62:
  if (!v24) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v35, (int16x8_t *)((char *)v13 + v36 + 192), a2, v33, v24, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressMacroblock(_OWORD *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1, 256, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 4, 256, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 64, 256, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 68, 256, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 8, 256, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 12, 256, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 72, 256, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 76, 256, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(unint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int16x8_t v7 = vshrq_n_s16(*a3, 6uLL);
  int16x8_t v8 = vshrq_n_s16(a3[1], 6uLL);
  int16x8_t v9 = vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v10 = vshrq_n_s16(a3[3], 6uLL);
  int16x8_t v11 = vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  int16x8_t v12 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v13 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v14 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v15 = vshrq_n_s16(a3[4], 6uLL);
  int16x8_t v16 = vshrq_n_s16(a3[5], 6uLL);
  int16x8_t v17 = vshrq_n_s16(a3[6], 6uLL);
  int16x8_t v18 = vshrq_n_s16(a3[7], 6uLL);
  int16x8_t v19 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[4] + a4), 6uLL);
  int16x8_t v20 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[5] + a4), 6uLL);
  int16x8_t v21 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[6] + a4), 6uLL);
  int16x8_t v22 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[7] + a4), 6uLL);
  int16x8_t v23 = (int16x8_t)vdupq_lane_s64(v7.i64[0], 0);
  v24.i64[0] = 0x5000500050005;
  v24.i64[1] = 0x5000500050005;
  int8x16_t v454 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v7, v23), 6uLL), v24);
  int8x16_t v455 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v8, v23), 6uLL), v24);
  int8x16_t v456 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v9, v23), 6uLL), v24);
  int8x16_t v457 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v10, v23), 6uLL), v24);
  int8x16_t v458 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v11, v23), 6uLL), v24);
  int8x16_t v459 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v12, v23), 6uLL), v24);
  int16x8_t v25 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v454, (int16x8_t)v455), (int16x8_t)v456), (int16x8_t)v457), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v26 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v454, (int16x8_t)v455), (int16x8_t)v456), (int16x8_t)v457), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v27 = vpmaxq_s16(v25, v25);
  int16x8_t v28 = vpminq_s16(v26, v26);
  int16x8_t v29 = vzip1q_s16(v27, v28);
  int8x16_t v30 = (int8x16_t)vceqzq_s16(v29);
  int16x8_t v31 = vclsq_s16(v29);
  v29.i64[0] = 0x10001000100010;
  v29.i64[1] = 0x10001000100010;
  int16x8_t v32 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, v31), v30);
  int8x16_t v460 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v13, v23), 6uLL), v24);
  int8x16_t v461 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v14, v23), 6uLL), v24);
  int8x16_t v462 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v15, v23), 6uLL), v24);
  int8x16_t v463 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v16, v23), 6uLL), v24);
  v33.i64[0] = 0x8000800080008000;
  v33.i64[1] = 0x8000800080008000;
  int16x8_t v34 = vmaxq_s16(v27, v33);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  int16x8_t v36 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v458, (int16x8_t)v459), (int16x8_t)v460), (int16x8_t)v461), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v37 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v458, (int16x8_t)v459), (int16x8_t)v460), (int16x8_t)v461), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v38 = vpmaxq_s16(v36, v36);
  int16x8_t v39 = vpminq_s16(v37, v37);
  int16x8_t v40 = vmaxq_s16(v34, v38);
  int16x8_t v41 = vminq_s16(vminq_s16(v28, v35), v39);
  int16x8_t v42 = vzip1q_s16(v38, v39);
  int16x8_t v43 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, vclsq_s16(v42)), (int8x16_t)vceqzq_s16(v42));
  int8x16_t v464 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v17, v23), 6uLL), v24);
  int8x16_t v465 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v23), 6uLL), v24);
  int16x8_t v44 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v462, (int16x8_t)v463), (int16x8_t)v464), (int16x8_t)v465), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v45 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v462, (int16x8_t)v463), (int16x8_t)v464), (int16x8_t)v465), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v46 = vpmaxq_s16(v44, v44);
  int16x8_t v47 = vpminq_s16(v45, v45);
  int16x8_t v48 = vmaxq_s16(v40, v46);
  int16x8_t v49 = vminq_s16(v41, v47);
  int16x8_t v50 = vzip1q_s16(v46, v47);
  int16x8_t v51 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, vclsq_s16(v50)), (int8x16_t)vceqzq_s16(v50));
  int8x16_t v466 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v23), 6uLL), v24);
  int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v23), 6uLL), v24);
  int8x16_t v470 = (int8x16_t)v23;
  int8x16_t v468 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v23), 6uLL), v24);
  int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v23), 6uLL), v24);
  int16x8_t v52 = vpmaxq_s16(v32, v32);
  int16x8_t v53 = vpmaxq_s16(v43, v43);
  int8x16_t v54 = (int8x16_t)vpmaxq_s16(v51, v51);
  int16x8_t v55 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v466, (int16x8_t)v467), (int16x8_t)v468), (int16x8_t)v469), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v56 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v466, (int16x8_t)v467), (int16x8_t)v468), (int16x8_t)v469), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v57 = vpmaxq_s16(v55, v55);
  int16x8_t v58 = vpminq_s16(v56, v56);
  int16x8_t v59 = vmaxq_s16(v48, v57);
  int16x8_t v60 = vminq_s16(v49, v58);
  int16x8_t v61 = vzip1q_s16(v57, v58);
  int16x8_t v62 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, vclsq_s16(v61)), (int8x16_t)vceqzq_s16(v61));
  int16x8_t v63 = vpmaxq_s16(v62, v62);
  int8x16_t v64 = (int8x16_t)vmaxq_s16(vmaxq_s16(v52, v53), vmaxq_s16((int16x8_t)v54, v63));
  int16x8_t v65 = vclzq_s16(vsubq_s16(v59, v60));
  v28.i64[0] = 0xF000F000F000FLL;
  v28.i64[1] = 0xF000F000F000FLL;
  v31.i64[0] = -1;
  v31.i64[1] = -1;
  int8x16_t v477 = (int8x16_t)v60;
  int8x16_t v478 = (int8x16_t)v59;
  int8x16_t v66 = (int8x16_t)vsubq_s16(v29, v65);
  int8x16_t v67 = (int8x16_t)vsubq_s16(vshlq_s16(v31, vsubq_s16(v28, v65)), v60);
  int8x16_t v68 = (int8x16_t)vcgtq_s16((int16x8_t)v64, (int16x8_t)v66);
  int16x8_t v69 = (int16x8_t)vbslq_s8(v68, v66, v64);
  int8x16_t v479 = vandq_s8(v67, v68);
  v67.i64[0] = 0x8000800080008;
  v67.i64[1] = 0x8000800080008;
  int8x16_t v70 = vorrq_s8((int8x16_t)0, vandq_s8(v68, v67));
  v64.i64[0] = 0x3000300030003;
  v64.i64[1] = 0x3000300030003;
  int16x8_t v71 = vmaxq_s16(vminq_s16(vsubq_s16(v69, v53), (int16x8_t)v64), (int16x8_t)0);
  int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16(v69, (int16x8_t)v54), (int16x8_t)v64), (int16x8_t)0);
  int16x8_t v473 = vsubq_s16(v69, v71);
  int16x8_t v474 = vsubq_s16(v69, v72);
  int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16(v69, v63), (int16x8_t)v64), (int16x8_t)0);
  int16x8_t v475 = vsubq_s16(v69, v73);
  int8x16_t v476 = (int8x16_t)v69;
  int16x8_t v74 = vaddq_s16(v73, v72);
  int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16(v69, v52), (int16x8_t)v64), (int16x8_t)0);
  v54.i64[0] = 0x4000400040004;
  v54.i64[1] = 0x4000400040004;
  int8x16_t v76 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v69), v64), v70), vbicq_s8(v54, (int8x16_t)vceqq_s16(v74, vnegq_s16(vaddq_s16(v75, v71)))));
  int8x16_t v471 = v76;
  int16x8_t v472 = vsubq_s16(v69, v75);
  if (vmaxvq_s16(v69))
  {
    int16x8_t v418 = v14;
    int16x8_t v419 = v18;
    int16x8_t v420 = v22;
    int16x8_t v421 = v19;
    int16x8_t v422 = v20;
    int16x8_t v423 = v21;
    v424.val[0] = (int8x16_t)v7;
    v424.val[1] = (int8x16_t)v8;
    v424.val[2] = (int8x16_t)v9;
    v424.val[3] = (int8x16_t)v10;
    int8x16_t v452 = v70;
    int8x16_t v77 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v454, (int16x8_t)vqtbl1q_s8(v454, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int8x16_t v78 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v455, (int16x8_t)vqtbl1q_s8(v455, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v79 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v458, (int16x8_t)vqtbl1q_s8(v458, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v80 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v459, (int16x8_t)vqtbl1q_s8(v459, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v81 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v460, (int16x8_t)vqtbl1q_s8(v460, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v82 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v461, (int16x8_t)vqtbl1q_s8(v461, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v83 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v462, (int16x8_t)vqtbl1q_s8(v462, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v84 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v463, (int16x8_t)vqtbl1q_s8(v463, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int8x16_t v85 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v464, (int16x8_t)vqtbl1q_s8(v464, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v86 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v465, (int16x8_t)vqtbl1q_s8(v465, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v87 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v466, (int16x8_t)vqtbl1q_s8(v466, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v88 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v467, (int16x8_t)vqtbl1q_s8(v467, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int8x16_t v89 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v468, (int16x8_t)vqtbl1q_s8(v468, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v90 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int8x16_t v429 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v457, (int16x8_t)vqtbl1q_s8(v457, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int8x16_t v430 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v456, (int16x8_t)vqtbl1q_s8(v456, (int8x16_t)xmmword_242EA77A0)), 6uLL), v24);
    int16x8_t v91 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v77, (int16x8_t)v78), (int16x8_t)v430), (int16x8_t)v429), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v92 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v77, (int16x8_t)v78), (int16x8_t)v430), (int16x8_t)v429), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v93 = vpmaxq_s16(v91, v91);
    int16x8_t v94 = vpminq_s16(v92, v92);
    v95.i64[0] = 0x8000800080008000;
    v95.i64[1] = 0x8000800080008000;
    int16x8_t v96 = vmaxq_s16(v93, v95);
    v97.i64[0] = 0x8000800080008000;
    v97.i64[1] = 0x8000800080008000;
    int16x8_t v98 = vminq_s16(v94, v97);
    int16x8_t v99 = vzip1q_s16(v93, v94);
    v100.i64[0] = 0x10001000100010;
    v100.i64[1] = 0x10001000100010;
    int16x8_t v101 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v100, vclsq_s16(v99)), (int8x16_t)vceqzq_s16(v99));
    int8x16_t v102 = (int8x16_t)vpmaxq_s16(v101, v101);
    int8x16_t v436 = (int8x16_t)v81;
    int8x16_t v438 = (int8x16_t)v79;
    int8x16_t v433 = (int8x16_t)v82;
    int8x16_t v434 = (int8x16_t)v80;
    int16x8_t v103 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v79, v80), v81), v82), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v104 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v79, v80), v81), v82), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v105 = vpmaxq_s16(v103, v103);
    int16x8_t v106 = vpminq_s16(v104, v104);
    int16x8_t v107 = vmaxq_s16(v96, v105);
    int16x8_t v108 = vminq_s16(v98, v106);
    int16x8_t v109 = vzip1q_s16(v105, v106);
    int16x8_t v110 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v100, vclsq_s16(v109)), (int8x16_t)vceqzq_s16(v109));
    int16x8_t v111 = vpmaxq_s16(v110, v110);
    int8x16_t v444 = v85;
    int8x16_t v446 = (int8x16_t)v83;
    int8x16_t v440 = (int8x16_t)v86;
    int8x16_t v442 = (int8x16_t)v84;
    int16x8_t v112 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v83, v84), (int16x8_t)v85), v86), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v113 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v83, v84), (int16x8_t)v85), v86), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v114 = vpmaxq_s16(v112, v112);
    int16x8_t v115 = vpminq_s16(v113, v113);
    int16x8_t v116 = vmaxq_s16(v107, v114);
    int16x8_t v117 = vminq_s16(v108, v115);
    int16x8_t v118 = vzip1q_s16(v114, v115);
    int16x8_t v119 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v100, vclsq_s16(v118)), (int8x16_t)vceqzq_s16(v118));
    int16x8_t v120 = vpmaxq_s16(v119, v119);
    int8x16_t v448 = (int8x16_t)v90;
    int8x16_t v450 = (int8x16_t)v88;
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v87, v88), (int16x8_t)v89), v90), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v122 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v87, v88), (int16x8_t)v89), v90), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v123 = vpmaxq_s16(v121, v121);
    int16x8_t v124 = vpminq_s16(v122, v122);
    int16x8_t v125 = vmaxq_s16(v116, v123);
    int8x16_t v126 = (int8x16_t)vminq_s16(v117, v124);
    int16x8_t v127 = vzip1q_s16(v123, v124);
    v85.i64[0] = 0x10001000100010;
    v85.i64[1] = 0x10001000100010;
    int16x8_t v128 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v85, vclsq_s16(v127)), (int8x16_t)vceqzq_s16(v127));
    int16x8_t v129 = vpmaxq_s16(v128, v128);
    int8x16_t v130 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v102, v111), vmaxq_s16(v120, v129));
    int8x16_t v431 = (int8x16_t)v87;
    int8x16_t v432 = (int8x16_t)v125;
    int8x16_t v131 = v126;
    int16x8_t v132 = vclzq_s16(vsubq_s16(v125, (int16x8_t)v126));
    int8x16_t v133 = (int8x16_t)vsubq_s16((int16x8_t)v85, v132);
    int8x16_t v134 = (int8x16_t)vcgtq_s16((int16x8_t)v130, (int16x8_t)v133);
    int8x16_t v135 = vbslq_s8(v134, v133, v130);
    v133.i64[0] = 0x3000300030003;
    v133.i64[1] = 0x3000300030003;
    int16x8_t v136 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, (int16x8_t)v102), (int16x8_t)v133), (int16x8_t)0);
    int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v111), (int16x8_t)v133), (int16x8_t)0);
    int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v120), (int16x8_t)v133), (int16x8_t)0);
    v102.i64[0] = 0x3000300030003;
    v102.i64[1] = 0x3000300030003;
    int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v129), (int16x8_t)v133), (int16x8_t)0);
    v126.i64[0] = 0x4000400040004;
    v126.i64[1] = 0x4000400040004;
    int8x16_t v140 = vbicq_s8(v126, (int8x16_t)vceqq_s16(vaddq_s16(v139, v138), vnegq_s16(vaddq_s16(v136, v137))));
    v133.i64[0] = 0x18001800180018;
    v133.i64[1] = 0x18001800180018;
    int8x16_t v141 = vbslq_s8(v134, v133, v85);
    int8x16_t v426 = (int8x16_t)vsubq_s16((int16x8_t)v135, v137);
    int8x16_t v427 = (int8x16_t)vsubq_s16((int16x8_t)v135, v138);
    int8x16_t v428 = (int8x16_t)vsubq_s16((int16x8_t)v135, v139);
    v138.i64[0] = 0x7000700070007;
    v138.i64[1] = 0x7000700070007;
    int8x16_t v425 = (int8x16_t)vsubq_s16((int16x8_t)v135, v136);
    v133.i64[0] = 0x8000800080008;
    v133.i64[1] = 0x8000800080008;
    v126.i64[0] = 0x2000200020002;
    v126.i64[1] = 0x2000200020002;
    int16x8_t v143 = v475;
    int8x16_t v142 = v476;
    int16x8_t v144 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v476, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v452, v133))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v76, (int16x8_t)v76), v133)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v76, v102), (int16x8_t)v126), v85));
    int16x8_t v145 = v472;
    int16x8_t v146 = v473;
    int16x8_t v147 = v474;
    int8x16_t v148 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(v144, v472, v138), vshlq_n_s16(vaddq_s16(vaddq_s16(v474, v473), v475), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v135, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v141 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v140, (int16x8_t)v140)), (int16x8_t)v425, v138), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v427, (int16x8_t)v426), (int16x8_t)v428), 3uLL))).i64[0], 0);
    if (vaddvq_s16((int16x8_t)v148))
    {
      v149.i64[0] = 0x3000300030003;
      v149.i64[1] = 0x3000300030003;
      int8x16_t v150 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v135), v149), v141), v140);
      v151.i64[0] = 0xF000F000F000FLL;
      v151.i64[1] = 0xF000F000F000FLL;
      int8x16_t v454 = vbslq_s8(v148, v77, v454);
      int8x16_t v455 = vbslq_s8(v148, v78, v455);
      v149.i64[0] = -1;
      v149.i64[1] = -1;
      int8x16_t v456 = vbslq_s8(v148, v430, v456);
      int8x16_t v457 = vbslq_s8(v148, v429, v457);
      int8x16_t v458 = vbslq_s8(v148, v438, v458);
      int8x16_t v459 = vbslq_s8(v148, v434, v459);
      int8x16_t v460 = vbslq_s8(v148, v436, v460);
      int8x16_t v461 = vbslq_s8(v148, v433, v461);
      int8x16_t v462 = vbslq_s8(v148, v446, v462);
      int8x16_t v463 = vbslq_s8(v148, v442, v463);
      int8x16_t v464 = vbslq_s8(v148, v444, v464);
      int8x16_t v465 = vbslq_s8(v148, v440, v465);
      int8x16_t v466 = vbslq_s8(v148, v431, v466);
      int8x16_t v467 = vbslq_s8(v148, v450, v467);
      int8x16_t v468 = vbslq_s8(v148, v89, v468);
      int8x16_t v469 = vbslq_s8(v148, v448, v469);
      int16x8_t v145 = (int16x8_t)vbslq_s8(v148, v425, (int8x16_t)v472);
      int16x8_t v146 = (int16x8_t)vbslq_s8(v148, v426, (int8x16_t)v473);
      int16x8_t v472 = v145;
      int16x8_t v473 = v146;
      int16x8_t v147 = (int16x8_t)vbslq_s8(v148, v427, (int8x16_t)v474);
      int16x8_t v143 = (int16x8_t)vbslq_s8(v148, v428, (int8x16_t)v475);
      int16x8_t v474 = v147;
      int16x8_t v475 = v143;
      int8x16_t v478 = vbslq_s8(v148, v432, v478);
      int8x16_t v479 = vbslq_s8(v148, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v149, vsubq_s16(v151, v132)), (int16x8_t)v131), v134), v479);
      int8x16_t v142 = vbslq_s8(v148, v135, v476);
      int8x16_t v476 = v142;
      int8x16_t v477 = vbslq_s8(v148, v131, v477);
      int8x16_t v76 = vbslq_s8(v148, v150, v471);
      int8x16_t v470 = vbslq_s8(v148, (int8x16_t)vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), v470);
      int8x16_t v471 = v76;
    }
    if (a5 >= 2)
    {
      int16x8_t v152 = (int16x8_t)vqtbl4q_s8(v424, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v153 = vsubq_s16((int16x8_t)v424.val[0], (int16x8_t)vqtbl4q_s8(v424, (int8x16_t)xmmword_242EA7710));
      int16x8_t v154 = vsubq_s16((int16x8_t)v424.val[2], v152);
      int16x8_t v155 = vsubq_s16((int16x8_t)v424.val[3], v152);
      uint64_t v156 = v418.i64[0];
      uint64_t v157 = v424.val[3].i64[1];
      int16x8_t v158 = vsubq_s16(v11, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v11.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v159 = vsubq_s16(v12, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v11.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v160 = vsubq_s16(v13, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v11.i8, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v161 = vsubq_s16(v418, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v11.i8, (int8x16_t)xmmword_242EA7760));
      uint64_t v162 = v419.i64[0];
      uint64_t v163 = v424.val[3].i64[1];
      int16x8_t v164 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v15.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v165 = vsubq_s16(v15, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v15.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v166 = vsubq_s16(v16, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v15.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v167 = vsubq_s16(v17, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v15.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v168 = vsubq_s16(v419, v164);
      v480.val[0] = (int8x16_t)v421;
      v480.val[1] = (int8x16_t)v422;
      v480.val[2] = (int8x16_t)v423;
      v480.val[3].i64[0] = v420.i64[0];
      v480.val[3].i64[1] = v424.val[3].i64[1];
      int16x8_t v169 = vsubq_s16(v421, (int16x8_t)vqtbl4q_s8(v480, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v170 = vsubq_s16(v422, (int16x8_t)vqtbl4q_s8(v480, (int8x16_t)xmmword_242EA7780));
      int16x8_t v171 = vsubq_s16(v423, (int16x8_t)vqtbl4q_s8(v480, (int8x16_t)xmmword_242EA7710));
      int16x8_t v172 = vsubq_s16(v420, (int16x8_t)vqtbl4q_s8(v480, (int8x16_t)xmmword_242EA7720));
      v173.i64[1] = v153.i64[1];
      v173.i64[0] = v155.i64[1];
      v155.i64[1] = v153.i64[0];
      int16x8_t v174 = vshlq_n_s16(v155, 6uLL);
      int16x8_t v175 = vshlq_n_s16(v158, 6uLL);
      int16x8_t v176 = vshlq_n_s16(v159, 6uLL);
      int16x8_t v177 = vshlq_n_s16(v161, 6uLL);
      int16x8_t v178 = vshlq_n_s16(v165, 6uLL);
      v480.val[0] = (int8x16_t)vshlq_n_s16(v168, 6uLL);
      v480.val[1] = (int8x16_t)vshlq_n_s16(v170, 6uLL);
      v480.val[2].i64[0] = 0x5000500050005;
      v480.val[2].i64[1] = 0x5000500050005;
      v480.val[3] = (int8x16_t)vshlq_s16(vshlq_n_s16(v173, 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v179 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v424.val[1], (int16x8_t)vqtbl4q_s8(v424, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v180 = (int8x16_t)vshlq_s16(v174, (int16x8_t)v480.val[2]);
      int8x16_t v181 = (int8x16_t)vshlq_s16(v176, (int16x8_t)v480.val[2]);
      int8x16_t v182 = (int8x16_t)vshlq_s16(v177, (int16x8_t)v480.val[2]);
      int8x16_t v183 = (int8x16_t)vshlq_s16(vshlq_n_s16(v166, 6uLL), (int16x8_t)v480.val[2]);
      int16x8_t v184 = vshlq_s16(vshlq_n_s16(v167, 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v185 = (int8x16_t)vshlq_s16((int16x8_t)v480.val[0], (int16x8_t)v480.val[2]);
      int8x16_t v186 = (int8x16_t)vshlq_s16(vshlq_n_s16(v169, 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v187 = (int8x16_t)vshlq_s16((int16x8_t)v480.val[1], (int16x8_t)v480.val[2]);
      int8x16_t v188 = (int8x16_t)vshlq_s16(vshlq_n_s16(v171, 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(v172, 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v451 = (int8x16_t)vshlq_s16(vshlq_n_s16(v154, 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v453 = v480.val[3];
      int16x8_t v190 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v480.val[3], (int16x8_t)v179), (int16x8_t)v451), (int16x8_t)v180), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v191 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v480.val[3], (int16x8_t)v179), (int16x8_t)v451), (int16x8_t)v180), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v192 = vpmaxq_s16(v190, v190);
      int16x8_t v193 = vpminq_s16(v191, v191);
      v172.i64[0] = 0x8000800080008000;
      v172.i64[1] = 0x8000800080008000;
      int16x8_t v194 = vmaxq_s16(v192, v172);
      v195.i64[0] = 0x8000800080008000;
      v195.i64[1] = 0x8000800080008000;
      int16x8_t v196 = vminq_s16(v193, v195);
      int16x8_t v197 = vzip1q_s16(v192, v193);
      v198.i64[0] = 0x10001000100010;
      v198.i64[1] = 0x10001000100010;
      int16x8_t v199 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v198, vclsq_s16(v197)), (int8x16_t)vceqzq_s16(v197));
      int16x8_t v200 = vpmaxq_s16(v199, v199);
      int8x16_t v447 = (int8x16_t)vshlq_s16(vshlq_n_s16(v160, 6uLL), (int16x8_t)v480.val[2]);
      int8x16_t v449 = (int8x16_t)vshlq_s16(v175, (int16x8_t)v480.val[2]);
      int16x8_t v201 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v449, (int16x8_t)v181), (int16x8_t)v447), (int16x8_t)v182), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v202 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v449, (int16x8_t)v181), (int16x8_t)v447), (int16x8_t)v182), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v203 = vpmaxq_s16(v201, v201);
      int16x8_t v204 = vpminq_s16(v202, v202);
      int16x8_t v205 = vmaxq_s16(v194, v203);
      int16x8_t v206 = vminq_s16(v196, v204);
      int16x8_t v207 = vzip1q_s16(v203, v204);
      int16x8_t v208 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v198, vclsq_s16(v207)), (int8x16_t)vceqzq_s16(v207));
      int16x8_t v209 = vpmaxq_s16(v208, v208);
      int8x16_t v443 = (int8x16_t)v184;
      int8x16_t v445 = (int8x16_t)vshlq_s16(v178, (int16x8_t)v480.val[2]);
      int16x8_t v210 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v445, (int16x8_t)v183), v184), (int16x8_t)v185), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v211 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v445, (int16x8_t)v183), v184), (int16x8_t)v185), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v212 = vpmaxq_s16(v210, v210);
      int16x8_t v213 = vpminq_s16(v211, v211);
      int16x8_t v214 = vmaxq_s16(v205, v212);
      int16x8_t v215 = vminq_s16(v206, v213);
      int16x8_t v216 = vzip1q_s16(v212, v213);
      int16x8_t v217 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v198, vclsq_s16(v216)), (int8x16_t)vceqzq_s16(v216));
      int16x8_t v218 = vpmaxq_s16(v217, v217);
      int16x8_t v219 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v186, (int16x8_t)v187), (int16x8_t)v188), (int16x8_t)v189), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v220 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v186, (int16x8_t)v187), (int16x8_t)v188), (int16x8_t)v189), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v221 = vpmaxq_s16(v219, v219);
      int16x8_t v222 = vpminq_s16(v220, v220);
      int16x8_t v223 = vmaxq_s16(v214, v221);
      int8x16_t v224 = (int8x16_t)vminq_s16(v215, v222);
      int16x8_t v225 = vzip1q_s16(v221, v222);
      int16x8_t v226 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v198, vclsq_s16(v225)), (int8x16_t)vceqzq_s16(v225));
      int16x8_t v227 = vpmaxq_s16(v226, v226);
      int8x16_t v228 = (int8x16_t)vmaxq_s16(vmaxq_s16(v200, v209), vmaxq_s16(v218, v227));
      int8x16_t v441 = (int8x16_t)v223;
      int16x8_t v229 = vclzq_s16(vsubq_s16(v223, (int16x8_t)v224));
      int8x16_t v230 = (int8x16_t)vsubq_s16(v198, v229);
      int8x16_t v231 = (int8x16_t)vcgtq_s16((int16x8_t)v228, (int16x8_t)v230);
      int8x16_t v232 = vbslq_s8(v231, v230, v228);
      v228.i64[0] = 0x3000300030003;
      v228.i64[1] = 0x3000300030003;
      int16x8_t v233 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v232, v200), (int16x8_t)v228), (int16x8_t)0);
      int8x16_t v234 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v232, v209), (int16x8_t)v228), (int16x8_t)0);
      int16x8_t v235 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v232, v218), (int16x8_t)v228), (int16x8_t)0);
      int16x8_t v236 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v232, v227), (int16x8_t)v228), (int16x8_t)0);
      v480.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v232, v233);
      int8x16_t v237 = (int8x16_t)vsubq_s16((int16x8_t)v232, (int16x8_t)v234);
      v480.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v232, v235);
      int16x8_t v238 = vsubq_s16((int16x8_t)v232, v236);
      int8x16_t v239 = (int8x16_t)vceqq_s16(vaddq_s16(v236, v235), vnegq_s16(vaddq_s16(v233, (int16x8_t)v234)));
      v234.i64[0] = 0x4000400040004;
      v234.i64[1] = 0x4000400040004;
      int8x16_t v240 = vbicq_s8(v234, v239);
      v236.i64[0] = 0x7000700070007;
      v236.i64[1] = 0x7000700070007;
      int8x16_t v435 = v480.val[3];
      int8x16_t v437 = v480.val[2];
      int8x16_t v439 = (int8x16_t)v238;
      int16x8_t v241 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v230, v231), vaddq_s16((int16x8_t)v240, (int16x8_t)v240)), (int16x8_t)v480.val[2], v236), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v480.val[3], (int16x8_t)v237), v238), 3uLL));
      int8x16_t v76 = v471;
      int16x8_t v145 = v472;
      v242.i64[0] = 0x2000200020002;
      v242.i64[1] = 0x2000200020002;
      int16x8_t v243 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v471, v228), (int16x8_t)v242), (int8x16_t)v198);
      v228.i64[0] = 0x8000800080008;
      v228.i64[1] = 0x8000800080008;
      int16x8_t v143 = v475;
      int8x16_t v142 = v476;
      int16x8_t v146 = v473;
      int16x8_t v147 = v474;
      int8x16_t v244 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v476, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v471, v228))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v76, (int16x8_t)v76), v228)), v243), v472, v236), vshlq_n_s16(vaddq_s16(vaddq_s16(v474, v473), v475), 3uLL)), v241).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v244))
      {
        v245.i64[0] = 0x9000900090009;
        v245.i64[1] = 0x9000900090009;
        int8x16_t v246 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v232), v242), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v231, v245), (int16x8_t)vmvnq_s8(v231)));
        v245.i64[0] = -1;
        v245.i64[1] = -1;
        v247.i64[0] = 0xF000F000F000FLL;
        v247.i64[1] = 0xF000F000F000FLL;
        int16x8_t v145 = (int16x8_t)vbslq_s8(v244, v437, (int8x16_t)v472);
        int16x8_t v146 = (int16x8_t)vbslq_s8(v244, v237, (int8x16_t)v473);
        int16x8_t v147 = (int16x8_t)vbslq_s8(v244, v435, (int8x16_t)v474);
        int16x8_t v143 = (int16x8_t)vbslq_s8(v244, v439, (int8x16_t)v475);
        int8x16_t v142 = vbslq_s8(v244, v232, v476);
        int8x16_t v76 = vbslq_s8(v244, vorrq_s8(v246, v240), v471);
        int8x16_t v469 = vbslq_s8(v244, v189, v469);
        int8x16_t v470 = vbslq_s8(v244, vextq_s8(v424.val[3], v424.val[3], 8uLL), v470);
        int8x16_t v454 = vbslq_s8(v244, v453, v454);
        int8x16_t v455 = vbslq_s8(v244, v179, v455);
        int8x16_t v456 = vbslq_s8(v244, v451, v456);
        int8x16_t v457 = vbslq_s8(v244, v180, v457);
        int8x16_t v458 = vbslq_s8(v244, v449, v458);
        int8x16_t v459 = vbslq_s8(v244, v181, v459);
        int8x16_t v460 = vbslq_s8(v244, v447, v460);
        int8x16_t v461 = vbslq_s8(v244, v182, v461);
        int8x16_t v462 = vbslq_s8(v244, v445, v462);
        int8x16_t v463 = vbslq_s8(v244, v183, v463);
        int8x16_t v464 = vbslq_s8(v244, v443, v464);
        int8x16_t v465 = vbslq_s8(v244, v185, v465);
        int8x16_t v466 = vbslq_s8(v244, v186, v466);
        int8x16_t v467 = vbslq_s8(v244, v187, v467);
        int8x16_t v468 = vbslq_s8(v244, v188, v468);
        int8x16_t v477 = vbslq_s8(v244, v224, v477);
        int8x16_t v478 = vbslq_s8(v244, v441, v478);
        int8x16_t v479 = vbslq_s8(v244, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v245, vsubq_s16(v247, v229)), (int16x8_t)v224), v231), v479);
        int16x8_t v472 = v145;
        int16x8_t v473 = v146;
        int16x8_t v474 = v147;
        int16x8_t v475 = v143;
        int8x16_t v476 = v142;
        int8x16_t v471 = v76;
      }
    }
    int16x8_t v248 = (int16x8_t)vandq_s8(v479, (int8x16_t)vceqq_s16((int16x8_t)v142, v145));
    int8x16_t v454 = (int8x16_t)vaddq_s16(v248, (int16x8_t)v454);
    int8x16_t v455 = (int8x16_t)vaddq_s16((int16x8_t)v455, v248);
    int8x16_t v456 = (int8x16_t)vaddq_s16((int16x8_t)v456, v248);
    int8x16_t v457 = (int8x16_t)vaddq_s16((int16x8_t)v457, v248);
    int16x8_t v249 = (int16x8_t)vandq_s8(v479, (int8x16_t)vceqq_s16((int16x8_t)v142, v146));
    int8x16_t v458 = (int8x16_t)vaddq_s16((int16x8_t)v458, v249);
    int8x16_t v459 = (int8x16_t)vaddq_s16((int16x8_t)v459, v249);
    int8x16_t v460 = (int8x16_t)vaddq_s16((int16x8_t)v460, v249);
    int8x16_t v461 = (int8x16_t)vaddq_s16((int16x8_t)v461, v249);
    int16x8_t v250 = (int16x8_t)vandq_s8(v479, (int8x16_t)vceqq_s16((int16x8_t)v142, v147));
    int8x16_t v462 = (int8x16_t)vaddq_s16((int16x8_t)v462, v250);
    int8x16_t v463 = (int8x16_t)vaddq_s16((int16x8_t)v463, v250);
    int8x16_t v464 = (int8x16_t)vaddq_s16((int16x8_t)v464, v250);
    int8x16_t v465 = (int8x16_t)vaddq_s16((int16x8_t)v465, v250);
    int8x16_t v251 = vandq_s8(v479, (int8x16_t)vceqq_s16((int16x8_t)v142, v143));
    int8x16_t v466 = (int8x16_t)vaddq_s16((int16x8_t)v466, (int16x8_t)v251);
    int8x16_t v467 = (int8x16_t)vaddq_s16((int16x8_t)v467, (int16x8_t)v251);
    int8x16_t v468 = (int8x16_t)vaddq_s16((int16x8_t)v468, (int16x8_t)v251);
    int8x16_t v469 = (int8x16_t)vaddq_s16((int16x8_t)v469, (int16x8_t)v251);
    v251.i64[0] = 0x8000800080008;
    v251.i64[1] = 0x8000800080008;
    v252.i64[0] = 0x3000300030003;
    v252.i64[1] = 0x3000300030003;
    v253.i64[0] = 0x2000200020002;
    v253.i64[1] = 0x2000200020002;
    int8x16_t v254 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v76, v252), v253);
    v253.i64[0] = 0x10001000100010;
    v253.i64[1] = 0x10001000100010;
    int16x8_t v255 = (int16x8_t)vandq_s8(v254, (int8x16_t)v253);
    v253.i64[0] = 0x7000700070007;
    v253.i64[1] = 0x7000700070007;
    int16x8_t v256 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v142, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v76, v251))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v76, (int16x8_t)v76), v251)), v255), v145, v253), vshlq_n_s16(vaddq_s16(v147, vaddq_s16(v146, v143)), 3uLL));
    int16x8_t v257 = vpaddq_s16(v256, v256);
    if ((unint64_t)(vpaddq_s16(v257, v257).i16[0] - 949) < 0xFFFFFFFFFFFFFBF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 128;
    }
    else
    {
      int8x16_t v258 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v259 = 8 * (a1 & 7);
      if (v259) {
        uint64_t v260 = *v258 & ~(-1 << v259);
      }
      else {
        uint64_t v260 = 0;
      }
      *a2 = 0;
      uint64_t v264 = ((v142.u16[0] << 20) - 0x100000) & 0xF00000;
      v265.i32[0] = v76.u16[1];
      v265.i32[1] = v76.u16[2];
      int8x8_t v266 = vand_s8((int8x8_t)vshl_u32(v265, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v267 = v266.i32[1];
      __int32 v268 = v266.i32[0] | v76.i8[0] & 0x1F;
      if (!v142.i16[0]) {
        uint64_t v264 = 0;
      }
      unint64_t v269 = (unint64_t)((v142.i8[4] - 1) & 0xF) << 28;
      if (!v142.i16[2]) {
        unint64_t v269 = 0;
      }
      v270.i32[0] = v142.u16[3];
      v270.i32[1] = v142.u16[1];
      int32x2_t v271 = vceqz_s32((int32x2_t)vand_s8(v270, (int8x8_t)0xFFFF0000FFFFLL));
      v272.i64[0] = v271.i32[0];
      v272.i64[1] = v271.i32[1];
      int8x16_t v273 = (int8x16_t)v272;
      int8x8_t v274 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v270, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v272.i64[0] = v274.u32[0];
      v272.i64[1] = v274.u32[1];
      int8x16_t v275 = vbicq_s8((int8x16_t)vshlq_u64(v272, (uint64x2_t)xmmword_242EA77F0), v273);
      v273.i64[0] = v269;
      v273.i64[1] = v268 | v267 | ((unint64_t)(v76.i8[6] & 0x1F) << 15) | v264;
      int8x16_t v276 = vorrq_s8(v273, v275);
      uint64_t v277 = v470.i64[0];
      unint64_t v278 = vorrq_s8(v276, (int8x16_t)vdupq_laneq_s64((int64x2_t)v276, 1)).u64[0];
      unint64_t v279 = (v278 << v259) | v260;
      if (v259 >= 0x1C)
      {
        *int8x16_t v258 = v279;
        unint64_t v279 = v278 >> (-8 * (a1 & 7u));
      }
      v280.i64[0] = WORD1(v277);
      v280.i64[1] = WORD2(v277);
      v281.i64[0] = 0xFFFFLL;
      v281.i64[1] = 0xFFFFLL;
      int8x16_t v282 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v280, v281), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v283 = v282.i64[0] | v277 & 0x3FF | v282.i64[1] | ((unint64_t)(HIWORD(v277) & 0x3FF) << 30);
      unint64_t v284 = (v259 + 36) & 0x3C;
      unint64_t v285 = v279 | (v283 << v284);
      if (v284 >= 0x18)
      {
        *(void *)((char *)v258 + (((v259 + 36) >> 3) & 8)) = v285;
        unint64_t v285 = v283 >> -(char)v284;
      }
      unint64_t v286 = v259 + 76;
      int8x16_t v287 = (int8x16_t)vsubq_s16((int16x8_t)v476, v472);
      int8x16_t v288 = (int8x16_t)vsubq_s16((int16x8_t)v476, v473);
      int8x16_t v289 = (int8x16_t)vsubq_s16((int16x8_t)v476, v474);
      int8x16_t v290 = (int8x16_t)vsubq_s16((int16x8_t)v476, v475);
      *(uint8x8_t *)v287.i8 = vqmovn_u16((uint16x8_t)v287);
      *(uint8x8_t *)v288.i8 = vqmovn_u16((uint16x8_t)v288);
      *(uint8x8_t *)v289.i8 = vqmovn_u16((uint16x8_t)v289);
      *(uint8x8_t *)v290.i8 = vqmovn_u16((uint16x8_t)v290);
      int16x8_t v291 = (int16x8_t)vtrn1q_s8(v287, v288);
      int16x8_t v292 = (int16x8_t)vtrn2q_s8(v287, v288);
      int8x16_t v293 = vtrn1q_s8(v289, v290);
      int16x8_t v294 = (int16x8_t)vtrn2q_s8(v289, v290);
      int8x16_t v295 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v291, (int16x8_t)v293), (int32x4_t)vzip1q_s16(v292, v294)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v291, (int16x8_t)v293), (int32x4_t)vtrn2q_s16(v292, v294)));
      v293.i64[0] = 0x202020202020202;
      v293.i64[1] = 0x202020202020202;
      int8x16_t v296 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v471.i8, (int16x4_t)0x4000400040004)), v293);
      v293.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v293.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v289.i64[0] = -1;
      v289.i64[1] = -1;
      uint8x16_t v297 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v289, (uint8x16_t)vorrq_s8(v296, v293)), v295);
      int16x8_t v298 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v296.i8);
      int16x8_t v299 = (int16x8_t)vmovl_high_u8((uint8x16_t)v296);
      uint16x8_t v300 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v297.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v298)), (int16x8_t)vshlq_u16(vmovl_high_u8(v297), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)));
      uint16x8_t v301 = (uint16x8_t)vpaddq_s16(v298, v299);
      int32x4_t v302 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v301.i8);
      int32x4_t v303 = (int32x4_t)vmovl_high_u16(v301);
      int32x4_t v304 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v300.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v302)), (int32x4_t)vshlq_u32(vmovl_high_u16(v300), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)));
      int32x4_t v305 = vpaddq_s32(v302, v303);
      v306.i64[0] = v304.u32[0];
      v306.i64[1] = v304.u32[1];
      uint64x2_t v307 = (uint64x2_t)v306;
      v306.i64[0] = v304.u32[2];
      v306.i64[1] = v304.u32[3];
      uint64x2_t v308 = (uint64x2_t)v306;
      v306.i64[0] = v305.u32[0];
      v306.i64[1] = v305.u32[1];
      int64x2_t v309 = v306;
      v306.i64[0] = v305.u32[2];
      v306.i64[1] = v305.u32[3];
      int64x2_t v310 = vpaddq_s64((int64x2_t)vshlq_u64(v307, (uint64x2_t)vzip1q_s64((int64x2_t)0, v309)), (int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v306)));
      int64x2_t v311 = vpaddq_s64(v309, v306);
      uint64_t v312 = (v259 + 76) & 0x3C;
      unint64_t v313 = (v310.i64[0] << v312) | v285;
      if ((unint64_t)(v311.i64[0] + v312) >= 0x40)
      {
        *(void *)((char *)v258 + ((v286 >> 3) & 0x18)) = v313;
        unint64_t v313 = (unint64_t)v310.i64[0] >> -(char)v312;
      }
      unint64_t v314 = v311.i64[0] + v286;
      unint64_t v315 = v313 | (v310.i64[1] << v314);
      if ((v314 & 0x3F) + v311.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v314 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v315;
        unint64_t v315 = (unint64_t)v310.i64[1] >> -(v314 & 0x3F);
        if ((v314 & 0x3F) == 0) {
          unint64_t v315 = 0;
        }
      }
      unint64_t v316 = v314 + v311.i64[1];
      v317.i64[0] = 0x8000800080008;
      v317.i64[1] = 0x8000800080008;
      v318.i64[0] = -1;
      v318.i64[1] = -1;
      int16x8_t v319 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v471, v317), (int8x16_t)0, 8uLL), v476);
      v320.i64[0] = 0xF000F000F000FLL;
      v320.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v321 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v318, (uint16x8_t)vaddq_s16(v319, v320)), v479);
      int32x4_t v322 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v319.i8);
      int32x4_t v323 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v321.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v322)), (int32x4_t)vmovl_high_u16(v321));
      int32x4_t v324 = vpaddq_s32(v322, (int32x4_t)vmovl_high_u16((uint16x8_t)v319));
      v325.i64[0] = v323.u32[0];
      v325.i64[1] = v323.u32[1];
      uint64x2_t v326 = (uint64x2_t)v325;
      v325.i64[0] = v323.u32[2];
      v325.i64[1] = v323.u32[3];
      uint64x2_t v327 = (uint64x2_t)v325;
      v325.i64[0] = v324.u32[0];
      v325.i64[1] = v324.u32[1];
      int64x2_t v328 = v325;
      v325.i64[0] = v324.u32[2];
      v325.i64[1] = v324.u32[3];
      int64x2_t v329 = vpaddq_s64((int64x2_t)vshlq_u64(v326, (uint64x2_t)vzip1q_s64((int64x2_t)0, v328)), (int64x2_t)vshlq_u64(v327, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)));
      int64x2_t v330 = vpaddq_s64(v328, v325);
      unint64_t v331 = (v329.i64[0] << v316) | v315;
      if (v330.i64[0] + (v316 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v316 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v329.i64[0] >> -(v316 & 0x3F);
        if ((v316 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      unint64_t v332 = v330.i64[0] + v316;
      unint64_t v333 = v331 | (v329.i64[1] << v332);
      if ((v332 & 0x3F) + v330.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v333;
        unint64_t v333 = (unint64_t)v329.i64[1] >> -(v332 & 0x3F);
        if ((v332 & 0x3F) == 0) {
          unint64_t v333 = 0;
        }
      }
      unint64_t v334 = v332 + v330.i64[1];
      int16x8_t v335 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v472, 8uLL);
      v336.i64[0] = 0xF000F000F000FLL;
      v336.i64[1] = 0xF000F000F000FLL;
      v337.i64[0] = -1;
      v337.i64[1] = -1;
      uint16x8_t v338 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v337, (uint16x8_t)vaddq_s16(v335, v336)), v454);
      int32x4_t v339 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v335.i8);
      int32x4_t v340 = (int32x4_t)vmovl_high_u16((uint16x8_t)v335);
      int32x4_t v341 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v338.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v338), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v340)));
      int32x4_t v342 = vpaddq_s32(v339, v340);
      v343.i64[0] = v341.u32[0];
      v343.i64[1] = v341.u32[1];
      uint64x2_t v344 = (uint64x2_t)v343;
      v343.i64[0] = v341.u32[2];
      v343.i64[1] = v341.u32[3];
      uint64x2_t v345 = (uint64x2_t)v343;
      v343.i64[0] = v342.u32[0];
      v343.i64[1] = v342.u32[1];
      int64x2_t v346 = v343;
      v343.i64[0] = v342.u32[2];
      v343.i64[1] = v342.u32[3];
      int64x2_t v347 = vpaddq_s64((int64x2_t)vshlq_u64(v344, (uint64x2_t)vzip1q_s64((int64x2_t)0, v346)), (int64x2_t)vshlq_u64(v345, (uint64x2_t)vzip1q_s64((int64x2_t)0, v343)));
      int64x2_t v348 = vpaddq_s64(v346, v343);
      unint64_t v349 = (v347.i64[0] << v334) | v333;
      if (v348.i64[0] + (v334 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v334 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        if ((v334 & 0x3F) != 0) {
          unint64_t v349 = (unint64_t)v347.i64[0] >> -(v334 & 0x3F);
        }
        else {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348.i64[0] + v334;
      uint64_t v351 = (v348.i64[0] + v334) & 0x3F;
      unint64_t v352 = v349 | (v347.i64[1] << v350);
      if ((unint64_t)(v351 + v348.i64[1]) >= 0x40)
      {
        *(void *)((char *)v258 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        unint64_t v352 = (unint64_t)v347.i64[1] >> -(char)v351;
        if (!v351) {
          unint64_t v352 = 0;
        }
      }
      unint64_t v353 = v350 + v348.i64[1];
      v354.i64[0] = 0xF000F000F000FLL;
      v354.i64[1] = 0xF000F000F000FLL;
      v355.i64[0] = -1;
      v355.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v357 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v355, (uint16x8_t)vaddq_s16(v472, v354)), *(int8x16_t *)((char *)&v454 + i));
        int32x4_t v358 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v472.i8);
        int32x4_t v359 = (int32x4_t)vmovl_high_u16((uint16x8_t)v472);
        int32x4_t v360 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v357.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v358)), (int32x4_t)vshlq_u32(vmovl_high_u16(v357), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v359)));
        int32x4_t v361 = vpaddq_s32(v358, v359);
        v362.i64[0] = v360.u32[0];
        v362.i64[1] = v360.u32[1];
        uint64x2_t v363 = (uint64x2_t)v362;
        v362.i64[0] = v360.u32[2];
        v362.i64[1] = v360.u32[3];
        uint64x2_t v364 = (uint64x2_t)v362;
        v362.i64[0] = v361.u32[0];
        v362.i64[1] = v361.u32[1];
        int64x2_t v365 = v362;
        v362.i64[0] = v361.u32[2];
        v362.i64[1] = v361.u32[3];
        int64x2_t v366 = vpaddq_s64((int64x2_t)vshlq_u64(v363, (uint64x2_t)vzip1q_s64((int64x2_t)0, v365)), (int64x2_t)vshlq_u64(v364, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)));
        int64x2_t v367 = vpaddq_s64(v365, v362);
        unint64_t v368 = (v366.i64[0] << v353) | v352;
        if (v367.i64[0] + (v353 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v366.i64[0] >> -(v353 & 0x3F);
          if ((v353 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v367.i64[0] + v353;
        unint64_t v352 = v368 | (v366.i64[1] << v369);
        if ((v369 & 0x3F) + v367.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
          unint64_t v352 = (unint64_t)v366.i64[1] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v352 = 0;
          }
        }
        unint64_t v353 = v369 + v367.i64[1];
      }
      uint64_t v370 = 0;
      v371.i64[0] = 0xF000F000F000FLL;
      v371.i64[1] = 0xF000F000F000FLL;
      v372.i64[0] = -1;
      v372.i64[1] = -1;
      do
      {
        uint16x8_t v373 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v372, (uint16x8_t)vaddq_s16(v473, v371)), *(int8x16_t *)((char *)&v458 + v370));
        int32x4_t v374 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v473.i8);
        int32x4_t v375 = (int32x4_t)vmovl_high_u16((uint16x8_t)v473);
        int32x4_t v376 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v374)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)));
        int32x4_t v377 = vpaddq_s32(v374, v375);
        v378.i64[0] = v376.u32[0];
        v378.i64[1] = v376.u32[1];
        uint64x2_t v379 = (uint64x2_t)v378;
        v378.i64[0] = v376.u32[2];
        v378.i64[1] = v376.u32[3];
        uint64x2_t v380 = (uint64x2_t)v378;
        v378.i64[0] = v377.u32[0];
        v378.i64[1] = v377.u32[1];
        int64x2_t v381 = v378;
        v378.i64[0] = v377.u32[2];
        v378.i64[1] = v377.u32[3];
        int64x2_t v382 = vpaddq_s64((int64x2_t)vshlq_u64(v379, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)), (int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)));
        int64x2_t v383 = vpaddq_s64(v381, v378);
        unint64_t v384 = (v382.i64[0] << v353) | v352;
        if (v383.i64[0] + (v353 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v382.i64[0] >> -(v353 & 0x3F);
          if ((v353 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v383.i64[0] + v353;
        unint64_t v352 = v384 | (v382.i64[1] << v385);
        if ((v385 & 0x3F) + v383.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
          unint64_t v352 = (unint64_t)v382.i64[1] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v352 = 0;
          }
        }
        unint64_t v353 = v385 + v383.i64[1];
        v370 += 16;
      }
      while (v370 != 64);
      uint64_t v386 = 0;
      v387.i64[0] = 0xF000F000F000FLL;
      v387.i64[1] = 0xF000F000F000FLL;
      v388.i64[0] = -1;
      v388.i64[1] = -1;
      do
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v388, (uint16x8_t)vaddq_s16(v474, v387)), *(int8x16_t *)((char *)&v462 + v386));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v474.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v474);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v353) | v352;
        if (v399.i64[0] + (v353 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v353 & 0x3F);
          if ((v353 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v353;
        unint64_t v352 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
          unint64_t v352 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v352 = 0;
          }
        }
        unint64_t v353 = v401 + v399.i64[1];
        v386 += 16;
      }
      while (v386 != 64);
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v475, v403)), *(int8x16_t *)((char *)&v466 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v475.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v475);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v353) | v352;
        if (v415.i64[0] + (v353 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v353 & 0x3F);
          if ((v353 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v353;
        unint64_t v352 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
          unint64_t v352 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v352 = 0;
          }
        }
        unint64_t v353 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      if ((v353 & 0x3F) != 0) {
        *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
      }
      unint64_t result = (v353 - v259 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v261 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v262 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v261, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v261, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v262.i8 = vorr_s8(*(int8x8_t *)v262.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL));
    *(_DWORD *)a1 = v262.i32[0];
    *(unsigned char *)(a1 + 4) = v262.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v11 = 0;
  uint64_t v63 = *MEMORY[0x263EF8340];
  long long v61 = 0u;
  long long v62 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  v12.i64[0] = 0xFC00FC00FC00FC00;
  v12.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    uint64_t v13 = 0;
    int16x8_t v14 = (uint64_t *)(a3 + v11 * a4);
    do
    {
      v15.i64[0] = *v14;
      v16.i64[0] = v14[1];
      v15.i64[1] = v14[2];
      uint64_t v17 = 16 * (v11 & 0x7F);
      *(long long *)((char *)&v47 + 64 * (unint64_t)(v13 & 0x7F) + v17) = (__int128)vandq_s8((int8x16_t)vshrq_n_u64(v15, 6uLL), v12);
      v16.i64[1] = v14[3];
      *(long long *)((char *)&v47 + 32 * ((2 * v13) | 1u) + v17) = (__int128)vandq_s8((int8x16_t)vshrq_n_u64(v16, 6uLL), v12);
      v14 += 4;
      ++v13;
    }
    while (a5 != v13);
    ++v11;
  }
  while (v11 != a6);
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)&v47);
  uint32x4_t v40 = vmovl_u16(*(uint16x4_t *)&v49);
  uint32x4_t v41 = vmovl_u16(*(uint16x4_t *)((char *)&v47 + 8));
  uint32x4_t v42 = vmovl_u16(*(uint16x4_t *)((char *)&v49 + 8));
  uint32x4_t v43 = vmovl_u16(*(uint16x4_t *)&v51);
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)&v53);
  unsigned int v18 = 2 * (a6 & 0x7F);
  unsigned int v19 = 2 * (a5 & 0x7F);
  uint32x4_t v20 = vmovl_u16(*(uint16x4_t *)((char *)&v51 + 8));
  uint32x4_t v21 = vmovl_u16(*(uint16x4_t *)((char *)&v53 + 8));
  if (v19 >= 4) {
    unsigned int v22 = 4;
  }
  else {
    unsigned int v22 = 2 * (a5 & 0x7F);
  }
  uint32x4_t v45 = v20;
  uint32x4_t v46 = v21;
  if (v19 >= 4) {
    unsigned int v23 = v19 - 4;
  }
  else {
    unsigned int v23 = 0;
  }
  char v24 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v39, a7, v22, 2u);
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)&v48);
  uint32x4_t v40 = vmovl_u16(*(uint16x4_t *)&v50);
  uint32x4_t v41 = vmovl_u16(*(uint16x4_t *)((char *)&v48 + 8));
  uint32x4_t v42 = vmovl_u16(*(uint16x4_t *)((char *)&v50 + 8));
  uint32x4_t v43 = vmovl_u16(*(uint16x4_t *)&v52);
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)&v54);
  uint32x4_t v25 = vmovl_u16(*(uint16x4_t *)((char *)&v52 + 8));
  uint32x4_t v26 = vmovl_u16(*(uint16x4_t *)((char *)&v54 + 8));
  unsigned int v27 = v18 - 2;
  if (v18 < 2) {
    unsigned int v27 = 0;
  }
  uint32x4_t v45 = v25;
  uint32x4_t v46 = v26;
  if (a6 >= 2) {
    unsigned int v28 = 2;
  }
  else {
    unsigned int v28 = v27;
  }
  int v29 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v39, a7, v22, v28);
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)&v55);
  uint32x4_t v40 = vmovl_u16(*(uint16x4_t *)&v57);
  uint32x4_t v41 = vmovl_u16(*(uint16x4_t *)((char *)&v55 + 8));
  uint32x4_t v42 = vmovl_u16(*(uint16x4_t *)((char *)&v57 + 8));
  uint32x4_t v43 = vmovl_u16(*(uint16x4_t *)&v59);
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)&v61);
  uint32x4_t v30 = vmovl_u16(*(uint16x4_t *)((char *)&v59 + 8));
  uint32x4_t v31 = vmovl_u16(*(uint16x4_t *)((char *)&v61 + 8));
  if (a5 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = v23;
  }
  uint32x4_t v45 = v30;
  uint32x4_t v46 = v31;
  int v33 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 64, (uint64_t)&v39, a7, v32, 2u);
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)&v56);
  uint32x4_t v40 = vmovl_u16(*(uint16x4_t *)&v58);
  uint32x4_t v41 = vmovl_u16(*(uint16x4_t *)((char *)&v56 + 8));
  uint32x4_t v42 = vmovl_u16(*(uint16x4_t *)((char *)&v58 + 8));
  uint32x4_t v43 = vmovl_u16(*(uint16x4_t *)&v60);
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)&v62);
  uint32x4_t v45 = vmovl_u16(*(uint16x4_t *)((char *)&v60 + 8));
  uint32x4_t v46 = vmovl_u16(*(uint16x4_t *)((char *)&v62 + 8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 96, (uint64_t)&v39, a7, v32, v28);
  if (v33) {
    char v35 = 4;
  }
  else {
    char v35 = 0;
  }
  if (v29) {
    char v36 = 2;
  }
  else {
    char v36 = 0;
  }
  if (result) {
    char v37 = -8;
  }
  else {
    char v37 = -16;
  }
  *a2 = v37 | v35 | v24 | v36;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(int16x8_t *a1, uint64_t a2, unint64_t a3, unsigned int a4, int a5)
{
  uint64_t v732 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    int64x2_t v13 = 0uLL;
    a1[6] = 0u;
    a1[7] = 0u;
    a1[4] = 0u;
    a1[5] = 0u;
    a1[2] = 0u;
    a1[3] = 0u;
    *a1 = 0u;
    a1[1] = 0u;
    int16x8_t v14 = (int64x2_t *)&a1->i8[a2];
    v14[6] = 0u;
    v14[7] = 0u;
    v14[4] = 0u;
    v14[5] = 0u;
    v14[2] = 0u;
    v14[3] = 0u;
LABEL_277:
    *int16x8_t v14 = v13;
    v14[1] = v13;
    return result;
  }
  char v9 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v709, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v709, a5);
    }
    int8x16_t v681 = v710;
    int8x16_t v682 = v709;
    int8x16_t v683 = v712;
    int8x16_t v684 = v711;
    int8x16_t v687 = v714;
    int8x16_t v688 = v713;
    unint64_t v19 = a3 + 32;
    int8x16_t v691 = v716;
    int8x16_t v692 = v715;
    if ((v9 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v19, (uint64_t)&v709, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v19, (uint64_t)&v709, a5);
    }
    int8x16_t v697 = v710;
    int8x16_t v698 = v709;
    int8x16_t v699 = v712;
    int8x16_t v700 = v711;
    int8x16_t v701 = v714;
    int8x16_t v702 = v713;
    unint64_t v20 = a3 + 64;
    int8x16_t v703 = v716;
    int8x16_t v704 = v715;
    if ((v9 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v709, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v709, a5);
    }
    int8x16_t v685 = v710;
    int8x16_t v686 = v709;
    int8x16_t v689 = v712;
    int8x16_t v690 = v711;
    int8x16_t v693 = v714;
    int8x16_t v694 = v713;
    unint64_t v21 = a3 + 96;
    int8x16_t v695 = v716;
    int8x16_t v696 = v715;
    if ((v9 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v709, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v709, a5);
    }
    int32x2_t v22 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v682.i8, *(int32x2_t *)v681.i8), 6uLL);
    v23.i64[0] = v22.u32[0];
    v23.i64[1] = v22.u32[1];
    v24.i64[0] = 0xFFFFLL;
    v24.i64[1] = 0xFFFFLL;
    int8x16_t v25 = vandq_s8(v23, v24);
    int32x2_t v26 = vzip2_s32(*(int32x2_t *)v682.i8, *(int32x2_t *)v681.i8);
    v23.i64[0] = v26.u32[0];
    v23.i64[1] = v26.u32[1];
    int32x2_t v27 = (int32x2_t)vextq_s8(v681, v681, 8uLL).u64[0];
    int32x2_t v28 = (int32x2_t)vextq_s8(v682, v682, 8uLL).u64[0];
    int8x16_t v29 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v25);
    int32x2_t v30 = vzip1_s32(v28, v27);
    v23.i64[0] = v30.u32[0];
    v23.i64[1] = v30.u32[1];
    int8x16_t v31 = vorrq_s8(v29, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v29.i8 = vzip2_s32(v28, v27);
    v23.i64[0] = v29.u32[0];
    v23.i64[1] = v29.u32[1];
    int8x16_t v32 = (int8x16_t)vdupq_n_s64(0xFFC0FFC0FFC0uLL);
    int8x16_t v33 = vorrq_s8(vandq_s8(v31, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    int32x2_t v34 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v684.i8, *(int32x2_t *)v683.i8), 6uLL);
    v23.i64[0] = v34.u32[0];
    v23.i64[1] = v34.u32[1];
    int8x16_t v35 = vandq_s8(v23, v24);
    int32x2_t v36 = vzip2_s32(*(int32x2_t *)v684.i8, *(int32x2_t *)v683.i8);
    v23.i64[0] = v36.u32[0];
    v23.i64[1] = v36.u32[1];
    int32x2_t v37 = (int32x2_t)vextq_s8(v683, v683, 8uLL).u64[0];
    int32x2_t v38 = (int32x2_t)vextq_s8(v684, v684, 8uLL).u64[0];
    int8x16_t v39 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v35);
    int32x2_t v40 = vzip1_s32(v38, v37);
    v23.i64[0] = v40.u32[0];
    v23.i64[1] = v40.u32[1];
    int8x16_t v41 = vorrq_s8(v39, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    int32x2_t v42 = vzip2_s32(v38, v37);
    v23.i64[0] = v42.u32[0];
    v23.i64[1] = v42.u32[1];
    *a1 = (int16x8_t)v33;
    a1[1] = (int16x8_t)vorrq_s8(vandq_s8(v41, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v33.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v688.i8, *(int32x2_t *)v687.i8), 6uLL);
    v23.i64[0] = v33.u32[0];
    v23.i64[1] = v33.u32[1];
    int8x16_t v43 = vandq_s8(v23, v24);
    *(int32x2_t *)v41.i8 = vzip2_s32(*(int32x2_t *)v688.i8, *(int32x2_t *)v687.i8);
    v23.i64[0] = v41.u32[0];
    v23.i64[1] = v41.u32[1];
    int32x2_t v44 = (int32x2_t)vextq_s8(v687, v687, 8uLL).u64[0];
    int32x2_t v45 = (int32x2_t)vextq_s8(v688, v688, 8uLL).u64[0];
    int8x16_t v46 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v43);
    *(int32x2_t *)v41.i8 = vzip1_s32(v45, v44);
    v23.i64[0] = v41.u32[0];
    v23.i64[1] = v41.u32[1];
    int8x16_t v47 = vorrq_s8(v46, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v41.i8 = vzip2_s32(v45, v44);
    v23.i64[0] = v41.u32[0];
    v23.i64[1] = v41.u32[1];
    int8x16_t v48 = vorrq_s8(vandq_s8(v47, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v41.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v692.i8, *(int32x2_t *)v691.i8), 6uLL);
    v23.i64[0] = v41.u32[0];
    v23.i64[1] = v41.u32[1];
    int8x16_t v49 = vandq_s8(v23, v24);
    int32x2_t v50 = vzip2_s32(*(int32x2_t *)v692.i8, *(int32x2_t *)v691.i8);
    v23.i64[0] = v50.u32[0];
    v23.i64[1] = v50.u32[1];
    int32x2_t v51 = (int32x2_t)vextq_s8(v691, v691, 8uLL).u64[0];
    int32x2_t v52 = (int32x2_t)vextq_s8(v692, v692, 8uLL).u64[0];
    int8x16_t v53 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v49);
    int32x2_t v54 = vzip1_s32(v52, v51);
    v23.i64[0] = v54.u32[0];
    v23.i64[1] = v54.u32[1];
    int8x16_t v55 = vorrq_s8(v53, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    int32x2_t v56 = vzip2_s32(v52, v51);
    v23.i64[0] = v56.u32[0];
    v23.i64[1] = v56.u32[1];
    a1[2] = (int16x8_t)v48;
    a1[3] = (int16x8_t)vorrq_s8(vandq_s8(v55, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v48.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v686.i8, *(int32x2_t *)v685.i8), 6uLL);
    v23.i64[0] = v48.u32[0];
    v23.i64[1] = v48.u32[1];
    int8x16_t v57 = vandq_s8(v23, v24);
    *(int32x2_t *)v55.i8 = vzip2_s32(*(int32x2_t *)v686.i8, *(int32x2_t *)v685.i8);
    v23.i64[0] = v55.u32[0];
    v23.i64[1] = v55.u32[1];
    int32x2_t v58 = (int32x2_t)vextq_s8(v685, v685, 8uLL).u64[0];
    int32x2_t v59 = (int32x2_t)vextq_s8(v686, v686, 8uLL).u64[0];
    int8x16_t v60 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v57);
    *(int32x2_t *)v55.i8 = vzip1_s32(v59, v58);
    v23.i64[0] = v55.u32[0];
    v23.i64[1] = v55.u32[1];
    int8x16_t v61 = vorrq_s8(v60, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v55.i8 = vzip2_s32(v59, v58);
    v23.i64[0] = v55.u32[0];
    v23.i64[1] = v55.u32[1];
    int8x16_t v62 = vorrq_s8(vandq_s8(v61, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v55.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v690.i8, *(int32x2_t *)v689.i8), 6uLL);
    v23.i64[0] = v55.u32[0];
    v23.i64[1] = v55.u32[1];
    int8x16_t v63 = vandq_s8(v23, v24);
    int32x2_t v64 = vzip2_s32(*(int32x2_t *)v690.i8, *(int32x2_t *)v689.i8);
    v23.i64[0] = v64.u32[0];
    v23.i64[1] = v64.u32[1];
    int32x2_t v65 = (int32x2_t)vextq_s8(v689, v689, 8uLL).u64[0];
    int32x2_t v66 = (int32x2_t)vextq_s8(v690, v690, 8uLL).u64[0];
    int8x16_t v67 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v63);
    int32x2_t v68 = vzip1_s32(v66, v65);
    v23.i64[0] = v68.u32[0];
    v23.i64[1] = v68.u32[1];
    int8x16_t v69 = vorrq_s8(v67, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    int32x2_t v70 = vzip2_s32(v66, v65);
    v23.i64[0] = v70.u32[0];
    v23.i64[1] = v70.u32[1];
    a1[4] = (int16x8_t)v62;
    a1[5] = (int16x8_t)vorrq_s8(vandq_s8(v69, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v62.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v694.i8, *(int32x2_t *)v693.i8), 6uLL);
    v23.i64[0] = v62.u32[0];
    v23.i64[1] = v62.u32[1];
    int8x16_t v71 = vandq_s8(v23, v24);
    *(int32x2_t *)v69.i8 = vzip2_s32(*(int32x2_t *)v694.i8, *(int32x2_t *)v693.i8);
    v23.i64[0] = v69.u32[0];
    v23.i64[1] = v69.u32[1];
    int32x2_t v72 = (int32x2_t)vextq_s8(v693, v693, 8uLL).u64[0];
    int32x2_t v73 = (int32x2_t)vextq_s8(v694, v694, 8uLL).u64[0];
    int8x16_t v74 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v71);
    *(int32x2_t *)v69.i8 = vzip1_s32(v73, v72);
    v23.i64[0] = v69.u32[0];
    v23.i64[1] = v69.u32[1];
    int8x16_t v75 = vorrq_s8(v74, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v69.i8 = vzip2_s32(v73, v72);
    v23.i64[0] = v69.u32[0];
    v23.i64[1] = v69.u32[1];
    int8x16_t v76 = vorrq_s8(vandq_s8(v75, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v69.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v696.i8, *(int32x2_t *)v695.i8), 6uLL);
    v23.i64[0] = v69.u32[0];
    v23.i64[1] = v69.u32[1];
    int8x16_t v77 = vandq_s8(v23, v24);
    int32x2_t v78 = vzip2_s32(*(int32x2_t *)v696.i8, *(int32x2_t *)v695.i8);
    v23.i64[0] = v78.u32[0];
    v23.i64[1] = v78.u32[1];
    int32x2_t v79 = (int32x2_t)vextq_s8(v695, v695, 8uLL).u64[0];
    int32x2_t v80 = (int32x2_t)vextq_s8(v696, v696, 8uLL).u64[0];
    int8x16_t v81 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v77);
    int32x2_t v82 = vzip1_s32(v80, v79);
    v23.i64[0] = v82.u32[0];
    v23.i64[1] = v82.u32[1];
    int8x16_t v83 = vorrq_s8(v81, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    int32x2_t v84 = vzip2_s32(v80, v79);
    v23.i64[0] = v84.u32[0];
    v23.i64[1] = v84.u32[1];
    a1[6] = (int16x8_t)v76;
    a1[7] = (int16x8_t)vorrq_s8(vandq_s8(v83, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v76.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v698.i8, *(int32x2_t *)v697.i8), 6uLL);
    v23.i64[0] = v76.u32[0];
    v23.i64[1] = v76.u32[1];
    int8x16_t v85 = vandq_s8(v23, v24);
    *(int32x2_t *)v83.i8 = vzip2_s32(*(int32x2_t *)v698.i8, *(int32x2_t *)v697.i8);
    v23.i64[0] = v83.u32[0];
    v23.i64[1] = v83.u32[1];
    int32x2_t v86 = (int32x2_t)vextq_s8(v697, v697, 8uLL).u64[0];
    int32x2_t v87 = (int32x2_t)vextq_s8(v698, v698, 8uLL).u64[0];
    int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v85);
    *(int32x2_t *)v83.i8 = vzip1_s32(v87, v86);
    v23.i64[0] = v83.u32[0];
    v23.i64[1] = v83.u32[1];
    int8x16_t v89 = vorrq_s8(v88, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v83.i8 = vzip2_s32(v87, v86);
    v23.i64[0] = v83.u32[0];
    v23.i64[1] = v83.u32[1];
    int8x16_t v90 = vorrq_s8(vandq_s8(v89, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v83.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v700.i8, *(int32x2_t *)v699.i8), 6uLL);
    v23.i64[0] = v83.u32[0];
    v23.i64[1] = v83.u32[1];
    int8x16_t v91 = vandq_s8(v23, v24);
    int32x2_t v92 = vzip2_s32(*(int32x2_t *)v700.i8, *(int32x2_t *)v699.i8);
    v23.i64[0] = v92.u32[0];
    v23.i64[1] = v92.u32[1];
    int32x2_t v93 = (int32x2_t)vextq_s8(v699, v699, 8uLL).u64[0];
    int32x2_t v94 = (int32x2_t)vextq_s8(v700, v700, 8uLL).u64[0];
    int8x16_t v95 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v91);
    int32x2_t v96 = vzip1_s32(v94, v93);
    v23.i64[0] = v96.u32[0];
    v23.i64[1] = v96.u32[1];
    int8x16_t v97 = vorrq_s8(v95, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    int32x2_t v98 = vzip2_s32(v94, v93);
    v23.i64[0] = v98.u32[0];
    v23.i64[1] = v98.u32[1];
    int16x8_t v99 = (int8x16_t *)&a1->i8[a2];
    *int16x8_t v99 = v90;
    v99[1] = vorrq_s8(vandq_s8(v97, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v90.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v702.i8, *(int32x2_t *)v701.i8), 6uLL);
    v23.i64[0] = v90.u32[0];
    v23.i64[1] = v90.u32[1];
    int8x16_t v100 = vandq_s8(v23, v24);
    *(int32x2_t *)v97.i8 = vzip2_s32(*(int32x2_t *)v702.i8, *(int32x2_t *)v701.i8);
    v23.i64[0] = v97.u32[0];
    v23.i64[1] = v97.u32[1];
    int32x2_t v101 = (int32x2_t)vextq_s8(v701, v701, 8uLL).u64[0];
    int32x2_t v102 = (int32x2_t)vextq_s8(v702, v702, 8uLL).u64[0];
    int8x16_t v103 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v100);
    *(int32x2_t *)v97.i8 = vzip1_s32(v102, v101);
    v23.i64[0] = v97.u32[0];
    v23.i64[1] = v97.u32[1];
    int8x16_t v104 = vorrq_s8(v103, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v97.i8 = vzip2_s32(v102, v101);
    v23.i64[0] = v97.u32[0];
    v23.i64[1] = v97.u32[1];
    int8x16_t v105 = vorrq_s8(vandq_s8(v104, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v97.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v704.i8, *(int32x2_t *)v703.i8), 6uLL);
    v23.i64[0] = v97.u32[0];
    v23.i64[1] = v97.u32[1];
    int8x16_t v106 = vandq_s8(v23, v24);
    int32x2_t v107 = vzip2_s32(*(int32x2_t *)v704.i8, *(int32x2_t *)v703.i8);
    v23.i64[0] = v107.u32[0];
    v23.i64[1] = v107.u32[1];
    int32x2_t v108 = (int32x2_t)vextq_s8(v703, v703, 8uLL).u64[0];
    int32x2_t v109 = (int32x2_t)vextq_s8(v704, v704, 8uLL).u64[0];
    int8x16_t v110 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v106);
    int32x2_t v111 = vzip1_s32(v109, v108);
    v23.i64[0] = v111.u32[0];
    v23.i64[1] = v111.u32[1];
    int8x16_t v112 = vorrq_s8(v110, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    int32x2_t v113 = vzip2_s32(v109, v108);
    int8x16_t v114 = v709;
    int8x16_t v115 = v710;
    v23.i64[0] = v113.u32[0];
    v23.i64[1] = v113.u32[1];
    v99[2] = v105;
    v99[3] = vorrq_s8(vandq_s8(v112, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v105.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v114.i8, *(int32x2_t *)v115.i8), 6uLL);
    v23.i64[0] = v105.u32[0];
    v23.i64[1] = v105.u32[1];
    int8x16_t v116 = vandq_s8(v23, v24);
    *(int32x2_t *)v112.i8 = vzip2_s32(*(int32x2_t *)v114.i8, *(int32x2_t *)v115.i8);
    v23.i64[0] = v112.u32[0];
    v23.i64[1] = v112.u32[1];
    int8x16_t v117 = (int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL);
    int32x2_t v118 = (int32x2_t)vextq_s8(v115, v115, 8uLL).u64[0];
    v114.i64[0] = vextq_s8(v114, v114, 8uLL).u64[0];
    *(int32x2_t *)v115.i8 = vzip1_s32(*(int32x2_t *)v114.i8, v118);
    v23.i64[0] = v115.u32[0];
    v23.i64[1] = v115.u32[1];
    int8x16_t v119 = vorrq_s8(vorrq_s8(v117, v116), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    int32x2_t v120 = vzip2_s32(*(int32x2_t *)v114.i8, v118);
    v23.i64[0] = v120.u32[0];
    v23.i64[1] = v120.u32[1];
    int8x16_t v121 = vorrq_s8(vandq_s8(v119, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    int32x2_t v122 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v711.i8, *(int32x2_t *)v712.i8), 6uLL);
    v23.i64[0] = v122.u32[0];
    v23.i64[1] = v122.u32[1];
    int8x16_t v123 = vandq_s8(v23, v24);
    *(int32x2_t *)v114.i8 = vzip2_s32(*(int32x2_t *)v711.i8, *(int32x2_t *)v712.i8);
    v23.i64[0] = v114.u32[0];
    v23.i64[1] = v114.u32[1];
    v115.i64[0] = vextq_s8(v712, v712, 8uLL).u64[0];
    v117.i64[0] = vextq_s8(v711, v711, 8uLL).u64[0];
    int8x16_t v124 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v123);
    *(int32x2_t *)v114.i8 = vzip1_s32(*(int32x2_t *)v117.i8, *(int32x2_t *)v115.i8);
    v23.i64[0] = v114.u32[0];
    v23.i64[1] = v114.u32[1];
    int8x16_t v125 = vorrq_s8(v124, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v117.i8 = vzip2_s32(*(int32x2_t *)v117.i8, *(int32x2_t *)v115.i8);
    int8x16_t v126 = v713;
    int8x16_t v127 = v714;
    v23.i64[0] = v117.u32[0];
    v23.i64[1] = v117.u32[1];
    v99[4] = v121;
    v99[5] = vorrq_s8(vandq_s8(v125, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v121.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v126.i8, *(int32x2_t *)v127.i8), 6uLL);
    v23.i64[0] = v121.u32[0];
    v23.i64[1] = v121.u32[1];
    int8x16_t v128 = vandq_s8(v23, v24);
    *(int32x2_t *)v117.i8 = vzip2_s32(*(int32x2_t *)v126.i8, *(int32x2_t *)v127.i8);
    v23.i64[0] = v117.u32[0];
    v23.i64[1] = v117.u32[1];
    int8x16_t v129 = (int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL);
    v125.i64[0] = vextq_s8(v127, v127, 8uLL).u64[0];
    v126.i64[0] = vextq_s8(v126, v126, 8uLL).u64[0];
    *(int32x2_t *)v127.i8 = vzip1_s32(*(int32x2_t *)v126.i8, *(int32x2_t *)v125.i8);
    v23.i64[0] = v127.u32[0];
    v23.i64[1] = v127.u32[1];
    int8x16_t v130 = vorrq_s8(vorrq_s8(v129, v128), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL));
    *(int32x2_t *)v125.i8 = vzip2_s32(*(int32x2_t *)v126.i8, *(int32x2_t *)v125.i8);
    v23.i64[0] = v125.u32[0];
    v23.i64[1] = v125.u32[1];
    int8x16_t v131 = vorrq_s8(vandq_s8(v130, v32), (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    *(int32x2_t *)v125.i8 = vshl_n_s32(vzip1_s32(*(int32x2_t *)v715.i8, *(int32x2_t *)v716.i8), 6uLL);
    v23.i64[0] = v125.u32[0];
    v23.i64[1] = v125.u32[1];
    int8x16_t v132 = vandq_s8(v23, v24);
    *(int32x2_t *)v126.i8 = vzip2_s32(*(int32x2_t *)v715.i8, *(int32x2_t *)v716.i8);
    v23.i64[0] = v126.u32[0];
    v23.i64[1] = v126.u32[1];
    v126.i64[0] = vextq_s8(v716, v716, 8uLL).u64[0];
    v129.i64[0] = vextq_s8(v715, v715, 8uLL).u64[0];
    int8x16_t v133 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)vandq_s8(v23, v24), 0x16uLL), v132);
    *(int32x2_t *)v132.i8 = vzip1_s32(*(int32x2_t *)v129.i8, *(int32x2_t *)v126.i8);
    v23.i64[0] = v132.u32[0];
    v23.i64[1] = v132.u32[1];
    *(int32x2_t *)v129.i8 = vzip2_s32(*(int32x2_t *)v129.i8, *(int32x2_t *)v126.i8);
    int8x16_t v134 = vandq_s8(vorrq_s8(v133, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x26uLL)), v32);
    v23.i64[0] = v129.u32[0];
    v23.i64[1] = v129.u32[1];
    v99[6] = v131;
    v99[7] = vorrq_s8(v134, (int8x16_t)vshlq_n_s64((int64x2_t)v23, 0x36uLL));
    return 128;
  }
  if (a4 == 159)
  {
    v135.i64[0] = 0xA000A000A000ALL;
    v135.i64[1] = 0xA000A000A000ALL;
    int8x16_t v136 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v135, v135));
    v135.i64[0] = vpaddq_s32((int32x4_t)v136, (int32x4_t)v136).u64[0];
    v137.i64[0] = v135.u32[0];
    v137.i64[1] = v135.u32[1];
    int64x2_t v138 = v137;
    unint64_t v139 = vaddvq_s64(v137);
    unint64_t v140 = v139;
    int16x8_t v141 = 0uLL;
    if (v139 <= 0x80)
    {
      int16x8_t v177 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
      int64x2_t v178 = vzip1q_s64((int64x2_t)0, v138);
      unint64_t v179 = 8 * (a3 & 7);
      unint64_t v180 = v139 + v179;
      int64x2_t v181 = vaddq_s64(v178, vdupq_n_s64(v179));
      int8x16_t v182 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v181)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v181)));
      if (v180 > 0x80) {
        int8x16_t v182 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v177[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v181)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v177[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v181))), v182);
      }
      unint64_t v183 = v180 & 0x3F;
      int16x8_t v184 = (int64x2_t *)((char *)v177 + 8 * (v180 >> 6));
      int64x2_t v185 = vaddq_s64(v178, vdupq_n_s64(v183));
      unint64_t v186 = v140 + v180;
      int8x16_t v187 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v184, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v185)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v184->i64[0], 0), (uint64x2_t)vnegq_s64(v185)));
      if (v140 + v183 >= 0x81) {
        int8x16_t v187 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v184[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v185)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v184[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v185))), v187);
      }
      int32x2_t v188 = (int32x2_t)vextq_s8(v136, v136, 8uLL).u64[0];
      unint64_t v189 = v186 & 0x3F;
      int16x8_t v190 = (int64x2_t *)((char *)v177 + 8 * (v186 >> 6));
      int64x2_t v191 = vaddq_s64(v178, vdupq_n_s64(v189));
      unint64_t v192 = v140 + v186;
      int8x16_t v193 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v190, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v191)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v190->i64[0], 0), (uint64x2_t)vnegq_s64(v191)));
      if (v140 + v189 >= 0x81) {
        int8x16_t v193 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v190[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v191)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v190[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v191))), v193);
      }
      unint64_t v194 = v192 & 0x3F;
      int16x8_t v195 = (int64x2_t *)((char *)v177 + 8 * (v192 >> 6));
      int64x2_t v196 = vaddq_s64(v178, vdupq_n_s64(v194));
      unint64_t v197 = v140 + v192;
      int8x16_t v198 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v195, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v196)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195->i64[0], 0), (uint64x2_t)vnegq_s64(v196)));
      if (v140 + v194 >= 0x81) {
        int8x16_t v198 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v196)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v195[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v196))), v198);
      }
      int32x2_t v199 = vzip1_s32(*(int32x2_t *)v136.i8, v188);
      unint64_t v200 = v197 & 0x3F;
      int16x8_t v201 = (int64x2_t *)((char *)v177 + 8 * (v197 >> 6));
      int64x2_t v202 = vaddq_s64(v178, vdupq_n_s64(v200));
      unint64_t v203 = v140 + v197;
      int8x16_t v204 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v201, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v202)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v201->i64[0], 0), (uint64x2_t)vnegq_s64(v202)));
      if (v140 + v200 > 0x80) {
        int8x16_t v204 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v201[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v202)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v201[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v202))), v204);
      }
      v205.i64[0] = v199.u32[0];
      v205.i64[1] = v199.u32[1];
      int64x2_t v206 = v205;
      unint64_t v207 = v203 & 0x3F;
      int16x8_t v208 = (int64x2_t *)((char *)v177 + 8 * (v203 >> 6));
      int64x2_t v209 = vaddq_s64(v178, vdupq_n_s64(v207));
      unint64_t v210 = v140 + v203;
      int8x16_t v211 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v208, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v209)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v208->i64[0], 0), (uint64x2_t)vnegq_s64(v209)));
      if (v140 + v207 >= 0x81) {
        int8x16_t v211 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v208[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v209)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v208[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v209))), v211);
      }
      uint64x2_t v212 = (uint64x2_t)vnegq_s64(v206);
      unint64_t v213 = v210 & 0x3F;
      int16x8_t v214 = (int64x2_t *)((char *)v177 + 8 * (v210 >> 6));
      int64x2_t v215 = vaddq_s64(v178, vdupq_n_s64(v213));
      unint64_t v216 = v140 + v210;
      int8x16_t v217 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v214, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v215)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v214->i64[0], 0), (uint64x2_t)vnegq_s64(v215)));
      if (v140 + v213 >= 0x81) {
        int8x16_t v217 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v214[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v215)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v214[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v215))), v217);
      }
      int64x2_t v218 = (int64x2_t)vshlq_u64((uint64x2_t)v204, v212);
      int64x2_t v219 = (int64x2_t)vshlq_u64((uint64x2_t)v211, v212);
      int64x2_t v220 = (int64x2_t)vshlq_u64((uint64x2_t)v217, v212);
      unint64_t v221 = v216 & 0x3F;
      int16x8_t v222 = (int64x2_t *)((char *)v177 + 8 * (v216 >> 6));
      int8x16_t v223 = (int8x16_t)vaddq_s64(v178, vdupq_n_s64(v221));
      int8x16_t v224 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v223));
      unint64_t v225 = v140 + v216;
      int64x2_t v226 = vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v223);
      int8x16_t v227 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v222, 1), (uint64x2_t)v226), v224);
      if (v140 + v221 >= 0x81)
      {
        int64x2_t v228 = v222[1];
        int8x16_t v224 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228.i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v223));
        int64x2_t v226 = vdupq_n_s64(0xC0uLL);
        int8x16_t v223 = vorrq_s8(v224, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v228, 1), (uint64x2_t)vsubq_s64(v226, (int64x2_t)v223)));
        int8x16_t v227 = vorrq_s8(v223, v227);
      }
      int64x2_t v229 = (int64x2_t)vshlq_u64((uint64x2_t)v182, v212);
      int64x2_t v230 = (int64x2_t)vshlq_u64((uint64x2_t)v187, v212);
      int64x2_t v231 = (int64x2_t)vshlq_u64((uint64x2_t)v193, v212);
      int64x2_t v232 = (int64x2_t)vshlq_u64((uint64x2_t)v198, v212);
      *(int32x2_t *)v223.i8 = vmovn_s64((int64x2_t)v204);
      *(int32x2_t *)v218.i8 = vmovn_s64(v218);
      *(int32x2_t *)v224.i8 = vmovn_s64((int64x2_t)v211);
      *(int32x2_t *)v219.i8 = vmovn_s64(v219);
      *(int32x2_t *)v226.i8 = vmovn_s64((int64x2_t)v217);
      *(int32x2_t *)v220.i8 = vmovn_s64(v220);
      int64x2_t v233 = (int64x2_t)vshlq_u64((uint64x2_t)v227, v212);
      *(int32x2_t *)v227.i8 = vmovn_s64((int64x2_t)v227);
      *(int32x2_t *)v6.i8 = vmovn_s64(v233);
      unint64_t v234 = v225 & 0x3F;
      int16x8_t v235 = (int64x2_t *)((char *)v177 + 8 * (v225 >> 6));
      int8x16_t v236 = (int8x16_t)vaddq_s64(v178, vdupq_n_s64(v234));
      int8x16_t v237 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v236));
      unint64_t v238 = v140 + v225;
      int8x16_t v239 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v235, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v236));
      int8x16_t v240 = vorrq_s8(v239, v237);
      if (v140 + v234 > 0x80)
      {
        int64x2_t v241 = v235[1];
        uint64x2_t v242 = (uint64x2_t)vdupq_lane_s64(v241.i64[0], 0);
        int8x16_t v239 = (int8x16_t)vdupq_laneq_s64(v241, 1);
        int8x16_t v237 = (int8x16_t)vshlq_u64(v242, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v236));
        int8x16_t v236 = vorrq_s8(v237, (int8x16_t)vshlq_u64((uint64x2_t)v239, (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v236)));
        int8x16_t v240 = vorrq_s8(v236, v240);
      }
      *(int32x2_t *)v182.i8 = vmovn_s64((int64x2_t)v182);
      *(int32x2_t *)v236.i8 = vmovn_s64(v229);
      *(int32x2_t *)v187.i8 = vmovn_s64((int64x2_t)v187);
      *(int32x2_t *)v239.i8 = vmovn_s64(v230);
      *(int32x2_t *)v193.i8 = vmovn_s64((int64x2_t)v193);
      *(int32x2_t *)v237.i8 = vmovn_s64(v231);
      *(int32x2_t *)v198.i8 = vmovn_s64((int64x2_t)v198);
      *(int32x2_t *)v232.i8 = vmovn_s64(v232);
      *(int32x2_t *)v230.i8 = vmovn_s64((int64x2_t)v240);
      *(int32x2_t *)v240.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v240, v212));
      int16x8_t v243 = (int64x2_t *)((char *)v177 + 8 * (v238 >> 6));
      int64x2_t v244 = vaddq_s64(v178, vdupq_n_s64(v238 & 0x3F));
      unint64_t v245 = v140 + v238;
      int8x16_t v246 = (int8x16_t)vsubq_s64(vdupq_n_s64(0x40uLL), v244);
      int8x16_t v247 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v243, 1), (uint64x2_t)v246), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243->i64[0], 0), (uint64x2_t)vnegq_s64(v244)));
      if (v140 + (v238 & 0x3F) >= 0x81)
      {
        int64x2_t v248 = v243[1];
        int8x16_t v246 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v248.i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v244));
        int64x2_t v5 = vdupq_n_s64(0xC0uLL);
        int8x16_t v247 = vorrq_s8(vorrq_s8(v246, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v248, 1), (uint64x2_t)vsubq_s64(v5, v244))), v247);
      }
      int16x8_t v249 = (int16x8_t)vzip1q_s32((int32x4_t)v223, (int32x4_t)v218);
      int16x8_t v250 = (int16x8_t)vzip1q_s32((int32x4_t)v224, (int32x4_t)v219);
      int16x8_t v251 = (int16x8_t)vzip1q_s32((int32x4_t)v226, (int32x4_t)v220);
      int32x4_t v252 = vzip1q_s32((int32x4_t)v227, v6);
      int32x4_t v253 = vzip1q_s32((int32x4_t)v230, (int32x4_t)v240);
      int64x2_t v254 = (int64x2_t)vshlq_u64((uint64x2_t)v247, v212);
      *(int32x2_t *)v226.i8 = vmovn_s64((int64x2_t)v247);
      *(int32x2_t *)v254.i8 = vmovn_s64(v254);
      int32x4_t v255 = vzip1q_s32((int32x4_t)v226, (int32x4_t)v254);
      unint64_t v256 = v140 + v245;
      unint64_t v257 = v245 & 0x3F;
      int64x2_t v258 = vaddq_s64(v178, vdupq_n_s64(v257));
      unint64_t v259 = (int64x2_t *)((char *)v177 + 8 * (v245 >> 6));
      int64x2_t v260 = vsubq_s64(vdupq_n_s64(0x40uLL), v258);
      int8x16_t v261 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v259, 1), (uint64x2_t)v260);
      int8x16_t v262 = vorrq_s8(v261, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v259->i64[0], 0), (uint64x2_t)vnegq_s64(v258)));
      if (v140 + v257 >= 0x81)
      {
        int64x2_t v263 = v259[1];
        uint64x2_t v264 = (uint64x2_t)vdupq_lane_s64(v263.i64[0], 0);
        int8x16_t v261 = (int8x16_t)vdupq_laneq_s64(v263, 1);
        int64x2_t v260 = vdupq_n_s64(0xC0uLL);
        int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64(v264, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v258)), (int8x16_t)vshlq_u64((uint64x2_t)v261, (uint64x2_t)vsubq_s64(v260, v258))), v262);
      }
      int16x8_t v265 = (int16x8_t)vzip1q_s32((int32x4_t)v182, (int32x4_t)v236);
      int16x8_t v266 = (int16x8_t)vzip1q_s32((int32x4_t)v187, (int32x4_t)v239);
      int16x8_t v267 = (int16x8_t)vzip1q_s32((int32x4_t)v193, (int32x4_t)v237);
      v268.i64[0] = 0x1000100010001;
      v268.i64[1] = 0x1000100010001;
      int16x8_t v269 = (int16x8_t)vzip1q_s32((int32x4_t)v198, (int32x4_t)v232);
      *(int16x4_t *)v187.i8 = vmovn_s32((int32x4_t)v249);
      *(int16x4_t *)v193.i8 = vshrn_n_s32((int32x4_t)v249, 0xAuLL);
      *(int16x4_t *)v198.i8 = vmovn_s32((int32x4_t)v250);
      *(int16x4_t *)v236.i8 = vshrn_n_s32((int32x4_t)v250, 0xAuLL);
      *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v251);
      *(int16x4_t *)v237.i8 = vshrn_n_s32((int32x4_t)v251, 0xAuLL);
      *(int16x4_t *)v232.i8 = vmovn_s32(v252);
      *(int16x4_t *)v251.i8 = vshrn_n_s32(v252, 0xAuLL);
      *(int16x4_t *)v261.i8 = vmovn_s32(v253);
      *(int16x4_t *)v260.i8 = vshrn_n_s32(v253, 0xAuLL);
      *(int16x4_t *)v250.i8 = vmovn_s32(v255);
      *(int16x4_t *)v249.i8 = vshrn_n_s32(v255, 0xAuLL);
      int64x2_t v270 = (int64x2_t)vshlq_u64((uint64x2_t)v262, v212);
      *(int32x2_t *)v252.i8 = vmovn_s64((int64x2_t)v262);
      *(int32x2_t *)v270.i8 = vmovn_s64(v270);
      int32x4_t v271 = vzip1q_s32(v252, (int32x4_t)v270);
      *(int16x4_t *)v246.i8 = vmovn_s32(v271);
      *(int16x4_t *)v5.i8 = vshrn_n_s32(v271, 0xAuLL);
      unint64_t v272 = v256 & 0x3F;
      int8x16_t v273 = (int64x2_t *)((char *)v177 + 8 * (v256 >> 6));
      int8x16_t v274 = (int8x16_t)vaddq_s64(v178, vdupq_n_s64(v272));
      int8x16_t v275 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v273->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v274));
      unint64_t v276 = v140 + v256;
      int64x2_t v277 = vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v274);
      int8x16_t v278 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v273, 1), (uint64x2_t)v277);
      int8x16_t v279 = vorrq_s8(v278, v275);
      if (v140 + v272 >= 0x81)
      {
        int64x2_t v280 = v273[1];
        uint64x2_t v281 = (uint64x2_t)vdupq_lane_s64(v280.i64[0], 0);
        int8x16_t v278 = (int8x16_t)vdupq_laneq_s64(v280, 1);
        int8x16_t v275 = (int8x16_t)vshlq_u64(v281, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v274));
        int64x2_t v277 = vdupq_n_s64(0xC0uLL);
        int8x16_t v274 = vorrq_s8(v275, (int8x16_t)vshlq_u64((uint64x2_t)v278, (uint64x2_t)vsubq_s64(v277, (int64x2_t)v274)));
        int8x16_t v279 = vorrq_s8(v274, v279);
      }
      *(int16x4_t *)v274.i8 = vmovn_s32((int32x4_t)v265);
      *(int16x4_t *)v265.i8 = vshrn_n_s32((int32x4_t)v265, 0xAuLL);
      *(int16x4_t *)v278.i8 = vmovn_s32((int32x4_t)v266);
      *(int16x4_t *)v266.i8 = vshrn_n_s32((int32x4_t)v266, 0xAuLL);
      *(int16x4_t *)v275.i8 = vmovn_s32((int32x4_t)v267);
      *(int16x4_t *)v267.i8 = vshrn_n_s32((int32x4_t)v267, 0xAuLL);
      int16x8_t v282 = vshlq_n_s16(v268, 0xAuLL);
      v283.i64[0] = -1;
      v283.i64[1] = -1;
      *(int16x4_t *)v277.i8 = vmovn_s32((int32x4_t)v269);
      *(int16x4_t *)v269.i8 = vshrn_n_s32((int32x4_t)v269, 0xAuLL);
      int64x2_t v284 = (int64x2_t)vshlq_u64((uint64x2_t)v279, v212);
      *(int32x2_t *)v279.i8 = vmovn_s64((int64x2_t)v279);
      *(int32x2_t *)v284.i8 = vmovn_s64(v284);
      int16x8_t v285 = (int16x8_t)vzip1q_s32((int32x4_t)v279, (int32x4_t)v284);
      *(int16x4_t *)v279.i8 = vmovn_s32((int32x4_t)v285);
      *(int16x4_t *)v285.i8 = vshrn_n_s32((int32x4_t)v285, 0xAuLL);
      unint64_t v286 = v276 & 0x3F;
      int8x16_t v287 = (int64x2_t *)((char *)v177 + 8 * (v276 >> 6));
      int64x2_t v288 = vaddq_s64(v178, vdupq_n_s64(v286));
      unint64_t v289 = v140 + v276;
      int8x16_t v290 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v287, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v288)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v287->i64[0], 0), (uint64x2_t)vnegq_s64(v288)));
      if (v140 + v286 > 0x80)
      {
        int8x16_t v290 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v287[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v288)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v287[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v288))), v290);
        v283.i64[0] = -1;
        v283.i64[1] = -1;
      }
      int8x16_t v291 = (int8x16_t)vaddq_s16(v282, v283);
      int8x16_t v292 = (int8x16_t)vzip1q_s16((int16x8_t)v187, (int16x8_t)v193);
      int8x16_t v293 = (int8x16_t)vzip1q_s16((int16x8_t)v198, (int16x8_t)v236);
      int8x16_t v294 = (int8x16_t)vzip1q_s16((int16x8_t)v239, (int16x8_t)v237);
      int8x16_t v295 = (int8x16_t)vzip1q_s16((int16x8_t)v232, v251);
      int8x16_t v296 = (int8x16_t)vzip1q_s16((int16x8_t)v261, (int16x8_t)v260);
      int8x16_t v297 = (int8x16_t)vzip1q_s16(v250, v249);
      int8x16_t v298 = (int8x16_t)vzip1q_s16((int16x8_t)v246, (int16x8_t)v5);
      int8x16_t v299 = (int8x16_t)vzip1q_s16((int16x8_t)v279, v285);
      int64x2_t v300 = (int64x2_t)vshlq_u64((uint64x2_t)v290, v212);
      *(int32x2_t *)v237.i8 = vmovn_s64((int64x2_t)v290);
      *(int32x2_t *)v300.i8 = vmovn_s64(v300);
      int32x4_t v301 = vzip1q_s32((int32x4_t)v237, (int32x4_t)v300);
      *(int16x4_t *)v246.i8 = vmovn_s32(v301);
      *(int16x4_t *)v5.i8 = vshrn_n_s32(v301, 0xAuLL);
      unint64_t v302 = v140 + v289;
      unint64_t v303 = v289 & 0x3F;
      int64x2_t v304 = vaddq_s64(v178, vdupq_n_s64(v303));
      int32x4_t v305 = (int64x2_t *)((char *)v177 + 8 * (v289 >> 6));
      int8x16_t v306 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v305, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v304)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v305->i64[0], 0), (uint64x2_t)vnegq_s64(v304)));
      if (v140 + v303 >= 0x81) {
        int8x16_t v306 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v305[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v304)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v305[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v304))), v306);
      }
      int8x16_t v307 = (int8x16_t)vzip1q_s16((int16x8_t)v274, v265);
      int8x16_t v308 = (int8x16_t)vzip1q_s16((int16x8_t)v278, v266);
      int8x16_t v309 = (int8x16_t)vzip1q_s16((int16x8_t)v275, v267);
      int8x16_t v310 = (int8x16_t)vzip1q_s16((int16x8_t)v277, v269);
      int16x8_t v311 = (int16x8_t)vandq_s8(v292, v291);
      int16x8_t v312 = (int16x8_t)vandq_s8(v293, v291);
      int16x8_t v313 = (int16x8_t)vandq_s8(v294, v291);
      int16x8_t v314 = (int16x8_t)vandq_s8(v295, v291);
      int16x8_t v315 = (int16x8_t)vandq_s8(v296, v291);
      int16x8_t v316 = (int16x8_t)vandq_s8(v297, v291);
      int16x8_t v317 = (int16x8_t)vandq_s8(v298, v291);
      int16x8_t v318 = (int16x8_t)vandq_s8(v299, v291);
      int8x16_t v319 = (int8x16_t)vzip1q_s16((int16x8_t)v246, (int16x8_t)v5);
      int64x2_t v320 = (int64x2_t)vshlq_u64((uint64x2_t)v306, v212);
      *(int32x2_t *)v278.i8 = vmovn_s64((int64x2_t)v306);
      *(int32x2_t *)v320.i8 = vmovn_s64(v320);
      int16x8_t v321 = (int16x8_t)vzip1q_s32((int32x4_t)v278, (int32x4_t)v320);
      *(int16x4_t *)v278.i8 = vmovn_s32((int32x4_t)v321);
      *(int16x4_t *)v321.i8 = vshrn_n_s32((int32x4_t)v321, 0xAuLL);
      int8x16_t v322 = (int8x16_t)vzip1q_s16((int16x8_t)v278, v321);
      unint64_t v323 = v140 + v302;
      unint64_t v324 = v302 & 0x3F;
      int64x2_t v325 = vaddq_s64(v178, vdupq_n_s64(v324));
      uint64x2_t v326 = (int64x2_t *)((char *)v177 + 8 * (v302 >> 6));
      int8x16_t v327 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v326, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v325)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v326->i64[0], 0), (uint64x2_t)vnegq_s64(v325)));
      if (v140 + v324 >= 0x81) {
        int8x16_t v327 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v326[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v325)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v326[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v325))), v327);
      }
      int16x8_t v328 = (int16x8_t)vandq_s8(v307, v291);
      int16x8_t v329 = (int16x8_t)vandq_s8(v308, v291);
      int16x8_t v330 = (int16x8_t)vandq_s8(v309, v291);
      int16x8_t v331 = (int16x8_t)vandq_s8(v310, v291);
      int16x8_t v152 = vshlq_n_s16(v311, 6uLL);
      int16x8_t v151 = vshlq_n_s16(v312, 6uLL);
      int16x8_t v150 = vshlq_n_s16(v313, 6uLL);
      int16x8_t v149 = vshlq_n_s16(v314, 6uLL);
      int16x8_t v141 = vshlq_n_s16(v315, 6uLL);
      int16x8_t v142 = vshlq_n_s16(v316, 6uLL);
      int16x8_t v143 = vshlq_n_s16(v317, 6uLL);
      int16x8_t v144 = vshlq_n_s16(v318, 6uLL);
      int16x8_t v332 = (int16x8_t)vandq_s8(v319, v291);
      int16x8_t v333 = (int16x8_t)vandq_s8(v322, v291);
      int64x2_t v334 = (int64x2_t)vshlq_u64((uint64x2_t)v327, v212);
      *(int32x2_t *)v314.i8 = vmovn_s64((int64x2_t)v327);
      *(int32x2_t *)v334.i8 = vmovn_s64(v334);
      int16x8_t v335 = (int16x8_t)vzip1q_s32((int32x4_t)v314, (int32x4_t)v334);
      *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v335);
      *(int16x4_t *)v335.i8 = vshrn_n_s32((int32x4_t)v335, 0xAuLL);
      int8x16_t v336 = (int8x16_t)vzip1q_s16(v314, v335);
      uint16x8_t v337 = (int64x2_t *)((char *)v177 + 8 * (v323 >> 6));
      int64x2_t v338 = vaddq_s64(v178, vdupq_n_s64(v323 & 0x3F));
      int16x8_t v339 = (int16x8_t)vandq_s8(v336, v291);
      int8x16_t v340 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v337, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v338)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v337->i64[0], 0), (uint64x2_t)vnegq_s64(v338)));
      if (v140 + (v323 & 0x3F) >= 0x81) {
        int8x16_t v340 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v337[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v338)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v337[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v338))), v340);
      }
      int64x2_t v341 = (int64x2_t)vshlq_u64((uint64x2_t)v340, v212);
      *(int32x2_t *)v340.i8 = vmovn_s64((int64x2_t)v340);
      *(int32x2_t *)v341.i8 = vmovn_s64(v341);
      int16x8_t v342 = (int16x8_t)vzip1q_s32((int32x4_t)v340, (int32x4_t)v341);
      *(int16x4_t *)v340.i8 = vmovn_s32((int32x4_t)v342);
      *(int16x4_t *)v342.i8 = vshrn_n_s32((int32x4_t)v342, 0xAuLL);
      int16x8_t v343 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v340, v342), v291);
      int16x8_t v156 = vshlq_n_s16(v332, 6uLL);
      int16x8_t v155 = vshlq_n_s16(v333, 6uLL);
      int16x8_t v154 = vshlq_n_s16(v339, 6uLL);
      int16x8_t v153 = vshlq_n_s16(v343, 6uLL);
      int16x8_t v145 = vshlq_n_s16(v328, 6uLL);
      int16x8_t v146 = vshlq_n_s16(v329, 6uLL);
      int16x8_t v147 = vshlq_n_s16(v330, 6uLL);
      int16x8_t v148 = vshlq_n_s16(v331, 6uLL);
    }
    else
    {
      int16x8_t v142 = 0uLL;
      int16x8_t v143 = 0uLL;
      int16x8_t v144 = 0uLL;
      int16x8_t v145 = 0uLL;
      int16x8_t v146 = 0uLL;
      int16x8_t v147 = 0uLL;
      int16x8_t v148 = 0uLL;
      int16x8_t v149 = 0uLL;
      int16x8_t v150 = 0uLL;
      int16x8_t v151 = 0uLL;
      int16x8_t v152 = 0uLL;
      int16x8_t v153 = 0uLL;
      int16x8_t v154 = 0uLL;
      int16x8_t v155 = 0uLL;
      int16x8_t v156 = 0uLL;
    }
    *a1 = v145;
    a1[1] = v146;
    a1[2] = v147;
    a1[3] = v148;
    uint64x2_t v344 = (int16x8_t *)((char *)a1 + a2);
    a1[4] = v141;
    a1[5] = v142;
    a1[6] = v143;
    a1[7] = v144;
    *uint64x2_t v344 = v152;
    v344[1] = v151;
    v344[2] = v150;
    v344[3] = v149;
    uint64x2_t v345 = (int16x8_t *)((char *)a1 + a2 + 64);
    uint64_t result = 160;
    *uint64x2_t v345 = v156;
    v345[1] = v155;
    v345[2] = v154;
    v345[3] = v153;
    return result;
  }
  if (a4 == 4)
  {
    uint64x2_t v15 = (uint64x2_t)vld1q_dup_f64((const double *)a3);
    int8x16_t v16 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v15, (uint64x2_t)xmmword_242EA7AE0), (int8x16_t)xmmword_242EA7B10), vandq_s8((int8x16_t)vshlq_u64(v15, (uint64x2_t)xmmword_242EA7AF0), (int8x16_t)xmmword_242EA7B00));
    int64x2_t v17 = vdupq_n_s64(*(void *)&vorr_s8(*(int8x8_t *)v16.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL)));
    *a1 = (int16x8_t)v17;
    a1[1] = (int16x8_t)v17;
    a1[2] = (int16x8_t)v17;
    a1[3] = (int16x8_t)v17;
    a1[4] = (int16x8_t)v17;
    a1[5] = (int16x8_t)v17;
    a1[6] = (int16x8_t)v17;
    a1[7] = (int16x8_t)v17;
    unsigned int v18 = (int64x2_t *)&a1->i8[a2];
    *unsigned int v18 = v17;
    v18[1] = v17;
    v18[2] = v17;
    v18[3] = v17;
    v18[4] = v17;
    v18[5] = v17;
    v18[6] = v17;
    v18[7] = v17;
    return 5;
  }
  unsigned __int8 v708 = 0;
  unint64_t v705 = 8 * (a3 & 7);
  unint64_t v706 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v707 = v705 | 0x400;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v726, (uint64_t)v731, (uint64_t)&v725, &v705, a4);
  v158.i64[0] = 0x3000300030003;
  v158.i64[1] = 0x3000300030003;
  int8x16_t v159 = v726;
  int16x8_t v160 = (int16x8_t)vandq_s8(v726, v158);
  int8x16_t v161 = vbicq_s8(v731[0], (int8x16_t)vceqq_s16(v160, (int16x8_t)v158));
  v731[0] = v161;
  int16x8_t v727 = (int16x8_t)v161;
  int16x8_t v728 = (int16x8_t)v161;
  int16x8_t v729 = (int16x8_t)v161;
  int16x8_t v730 = (int16x8_t)v161;
  v162.i64[0] = 0x202020202020202;
  v162.i64[1] = 0x202020202020202;
  int8x16_t v163 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v726.i8, (int16x4_t)0x4000400040004)), v162);
  unint64_t v164 = v705;
  if (vmaxvq_s8(v163) < 1)
  {
    v346.i64[0] = -1;
    v346.i64[1] = -1;
    v347.i64[0] = -1;
    v347.i64[1] = -1;
    v348.i64[0] = -1;
    v348.i64[1] = -1;
    v349.i64[0] = -1;
    v349.i64[1] = -1;
  }
  else
  {
    int8x16_t v165 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v163, v163));
    int8x16_t v166 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v165, (int16x8_t)v165));
    unint64_t v167 = vpaddq_s32((int32x4_t)v166, (int32x4_t)v166).u64[0];
    v168.i64[0] = v167;
    v168.i64[1] = HIDWORD(v167);
    int64x2_t v169 = v168;
    unint64_t v170 = vaddvq_s64(v168);
    unint64_t v171 = v170;
    unint64_t v172 = v705 + v170;
    if (v707) {
      BOOL v173 = v707 >= v172;
    }
    else {
      BOOL v173 = 1;
    }
    int v174 = !v173;
    if (v170 <= 0x80 && v174 == 0)
    {
      v157.i64[0] = 63;
      unint64_t v350 = (int64x2_t *)(v706 + 8 * (v705 >> 6));
      int64x2_t v351 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v705, v157).i64[0], 0), vzip1q_s64((int64x2_t)0, v169));
      int8x16_t v176 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v350, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v351)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v350->i64[0], 0), (uint64x2_t)vnegq_s64(v351)));
      if ((v705 & 0x3F) + v171 >= 0x81) {
        int8x16_t v176 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v350[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v351)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v350[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v351))), v176);
      }
      unint64_t v705 = v172;
      unint64_t v164 = v172;
    }
    else
    {
      unsigned __int8 v708 = 1;
      int8x16_t v176 = 0uLL;
    }
    int32x2_t v352 = vzip1_s32(*(int32x2_t *)v166.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v166, v166, 8uLL));
    v353.i64[0] = v352.u32[0];
    v353.i64[1] = v352.u32[1];
    int64x2_t v354 = (int64x2_t)vshlq_u64((uint64x2_t)v176, (uint64x2_t)vnegq_s64(v353));
    *(int32x2_t *)v176.i8 = vmovn_s64((int64x2_t)v176);
    *(int32x2_t *)v354.i8 = vmovn_s64(v354);
    int16x8_t v355 = (int16x8_t)vzip1q_s32((int32x4_t)v176, (int32x4_t)v354);
    int16x8_t v356 = (int16x8_t)vshlq_u32((uint32x4_t)v355, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v165.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v165, v165, 8uLL)))));
    *(int16x4_t *)v355.i8 = vmovn_s32((int32x4_t)v355);
    *(int16x4_t *)v356.i8 = vmovn_s32((int32x4_t)v356);
    int8x16_t v357 = (int8x16_t)vzip1q_s16(v355, v356);
    int8x16_t v358 = (int8x16_t)vshlq_u16((uint16x8_t)v357, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v163.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v163, v163, 8uLL)))));
    *(int8x8_t *)v357.i8 = vmovn_s16((int16x8_t)v357);
    *(int8x8_t *)v358.i8 = vmovn_s16((int16x8_t)v358);
    int8x16_t v359 = vzip1q_s8(v357, v358);
    v358.i64[0] = 0x101010101010101;
    v358.i64[1] = 0x101010101010101;
    int8x16_t v360 = vshlq_s8(v358, v163);
    v358.i64[0] = -1;
    v358.i64[1] = -1;
    int32x4_t v361 = (int32x4_t)vqtbl1q_s8(vandq_s8(v359, vaddq_s8(v360, v358)), (int8x16_t)xmmword_242EA7560);
    *(int32x2_t *)v359.i8 = vdup_lane_s32(*(int32x2_t *)v361.i8, 0);
    *(int32x2_t *)v358.i8 = vdup_lane_s32(*(int32x2_t *)v361.i8, 1);
    int8x8_t v362 = (int8x8_t)vdupq_laneq_s32(v361, 2).u64[0];
    v361.i64[0] = vdupq_laneq_s32(v361, 3).u64[0];
    int16x8_t v727 = vsubw_s8(v727, *(int8x8_t *)v359.i8);
    int16x8_t v728 = vsubw_s8(v728, *(int8x8_t *)v358.i8);
    int16x8_t v729 = vsubw_s8(v729, v362);
    int16x8_t v730 = vsubw_s8(v730, *(int8x8_t *)v361.i8);
    int8x16_t v349 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v359.i8));
    int8x16_t v348 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v358.i8));
    int8x16_t v347 = (int8x16_t)vmovl_s8(vceqz_s8(v362));
    int8x16_t v346 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v361.i8));
  }
  v363.i64[0] = 0x8000800080008;
  v363.i64[1] = 0x8000800080008;
  int8x16_t v364 = 0uLL;
  int8x16_t v365 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v726, v363), (int8x16_t)0, 8uLL), v161);
  int8x16_t v366 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v365, (int16x8_t)v365));
  unint64_t v367 = vpaddq_s32((int32x4_t)v366, (int32x4_t)v366).u64[0];
  v368.i64[0] = v367;
  v368.i64[1] = HIDWORD(v367);
  int64x2_t v369 = v368;
  unint64_t v370 = vaddvq_s64(v368);
  if (v707) {
    BOOL v371 = v707 >= v164 + v370;
  }
  else {
    BOOL v371 = 1;
  }
  int v372 = !v371;
  if (v370 <= 0x80 && v372 == 0)
  {
    int64x2_t v374 = vaddq_s64(vdupq_n_s64(v164 & 0x3F), vzip1q_s64((int64x2_t)0, v369));
    int32x4_t v375 = (int64x2_t *)(v706 + 8 * (v164 >> 6));
    int8x16_t v364 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v375, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v374)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v375->i64[0], 0), (uint64x2_t)vnegq_s64(v374)));
    if ((v164 & 0x3F) + v370 >= 0x81) {
      int8x16_t v364 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v375[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v374)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v375[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v374))), v364);
    }
    v164 += v370;
  }
  else
  {
    unsigned __int8 v708 = 1;
  }
  int32x2_t v376 = vzip1_s32(*(int32x2_t *)v366.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v366, v366, 8uLL));
  v377.i64[0] = v376.u32[0];
  v377.i64[1] = v376.u32[1];
  int64x2_t v378 = (int64x2_t)vshlq_u64((uint64x2_t)v364, (uint64x2_t)vnegq_s64(v377));
  *(int32x2_t *)v364.i8 = vmovn_s64((int64x2_t)v364);
  *(int32x2_t *)v378.i8 = vmovn_s64(v378);
  int16x8_t v379 = (int16x8_t)vzip1q_s32((int32x4_t)v364, (int32x4_t)v378);
  int16x8_t v380 = (int16x8_t)vshlq_u32((uint32x4_t)v379, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v365.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v365, v365, 8uLL)))));
  *(int16x4_t *)v379.i8 = vmovn_s32((int32x4_t)v379);
  *(int16x4_t *)v380.i8 = vmovn_s32((int32x4_t)v380);
  int16x8_t v381 = vzip1q_s16(v379, v380);
  v380.i64[0] = 0xF000F000F000FLL;
  v380.i64[1] = 0xF000F000F000FLL;
  v382.i64[0] = 0x10001000100010;
  v382.i64[1] = 0x10001000100010;
  int8x16_t v383 = (int8x16_t)vshlq_s16(vshlq_s16(v381, vsubq_s16(v382, (int16x8_t)v365)), vaddq_s16((int16x8_t)v365, v380));
  v731[3] = v383;
  int v384 = v726.i8[0] & 3;
  if (v384 == 2)
  {
    unint64_t v385 = v164 + 8;
    if (v707)
    {
      if (v707 >= v385)
      {
        unint64_t v386 = v164 + 16;
        v164 += 8;
      }
      else
      {
        unsigned __int8 v708 = 1;
        unint64_t v386 = v164 + 8;
      }
      if (v707 < v386)
      {
        unsigned __int8 v708 = 1;
        goto LABEL_96;
      }
      unint64_t v385 = v164;
    }
    unint64_t v164 = v385 + 8;
  }
LABEL_96:
  int8x16_t v387 = 0uLL;
  int8x16_t v388 = vextq_s8((int8x16_t)0, (int8x16_t)v727, 8uLL);
  int8x16_t v389 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v388, (int16x8_t)v388));
  unint64_t v390 = vpaddq_s32((int32x4_t)v389, (int32x4_t)v389).u64[0];
  v391.i64[0] = v390;
  v391.i64[1] = HIDWORD(v390);
  int64x2_t v392 = v391;
  unint64_t v393 = vaddvq_s64(v391);
  unint64_t v394 = v164 + v393;
  if (v707) {
    BOOL v395 = v707 >= v394;
  }
  else {
    BOOL v395 = 1;
  }
  int v396 = !v395;
  if (v393 > 0x80 || v396)
  {
    int v401 = 1;
    unint64_t v399 = v706;
  }
  else
  {
    unint64_t v397 = v164 & 0x3F;
    int64x2_t v398 = vaddq_s64(vdupq_n_s64(v397), vzip1q_s64((int64x2_t)0, v392));
    unint64_t v399 = v706;
    unint64_t v400 = (int64x2_t *)(v706 + 8 * (v164 >> 6));
    int8x16_t v387 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v400, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v398)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v400->i64[0], 0), (uint64x2_t)vnegq_s64(v398)));
    if (v397 + v393 >= 0x81) {
      int8x16_t v387 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v400[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v398)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v400[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v398))), v387);
    }
    int v401 = v708;
    unint64_t v164 = v394;
  }
  int32x2_t v402 = vzip1_s32(*(int32x2_t *)v389.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v389, v389, 8uLL));
  v403.i64[0] = v402.u32[0];
  v403.i64[1] = v402.u32[1];
  int64x2_t v404 = (int64x2_t)vshlq_u64((uint64x2_t)v387, (uint64x2_t)vnegq_s64(v403));
  *(int32x2_t *)v387.i8 = vmovn_s64((int64x2_t)v387);
  *(int32x2_t *)v404.i8 = vmovn_s64(v404);
  int16x8_t v405 = (int16x8_t)vzip1q_s32((int32x4_t)v387, (int32x4_t)v404);
  int16x8_t v406 = (int16x8_t)vshlq_u32((uint32x4_t)v405, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v388.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v388, v388, 8uLL)))));
  *(int16x4_t *)v405.i8 = vmovn_s32((int32x4_t)v405);
  *(int16x4_t *)v406.i8 = vmovn_s32((int32x4_t)v406);
  v407.i64[0] = 0xF000F000F000FLL;
  v407.i64[1] = 0xF000F000F000FLL;
  v408.i64[0] = 0x10001000100010;
  v408.i64[1] = 0x10001000100010;
  int16x8_t v409 = vshlq_s16(vshlq_s16(vzip1q_s16(v405, v406), vsubq_s16(v408, (int16x8_t)v388)), vaddq_s16((int16x8_t)v388, v407));
  int8x16_t v709 = (int8x16_t)v409;
  int8x16_t v410 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v727, v727));
  v405.i64[0] = vpaddq_s32((int32x4_t)v410, (int32x4_t)v410).u64[0];
  v403.i64[0] = v405.u32[0];
  v403.i64[1] = v405.u32[1];
  int64x2_t v411 = v403;
  unint64_t v412 = vaddvq_s64(v403);
  unint64_t v413 = v164 + v412;
  if (v707) {
    BOOL v414 = v707 >= v413;
  }
  else {
    BOOL v414 = 1;
  }
  char v415 = !v414;
  int8x16_t v416 = 0uLL;
  if (v412 > 0x80 || (v415 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v413 = v164;
    int8x16_t v420 = 0uLL;
  }
  else
  {
    unint64_t v417 = v164 & 0x3F;
    int64x2_t v418 = vaddq_s64(vdupq_n_s64(v417), vzip1q_s64((int64x2_t)0, v411));
    int16x8_t v419 = (int64x2_t *)(v399 + 8 * (v164 >> 6));
    int8x16_t v420 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v419, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v418)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v419->i64[0], 0), (uint64x2_t)vnegq_s64(v418)));
    if (v417 + v412 >= 0x81) {
      int8x16_t v420 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v419[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v418)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v419[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v418))), v420);
    }
  }
  int32x2_t v421 = vzip1_s32(*(int32x2_t *)v410.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v410, v410, 8uLL));
  v422.i64[0] = v421.u32[0];
  v422.i64[1] = v421.u32[1];
  uint64x2_t v423 = (uint64x2_t)vnegq_s64(v422);
  int64x2_t v424 = (int64x2_t)vshlq_u64((uint64x2_t)v420, v423);
  *(int32x2_t *)v420.i8 = vmovn_s64((int64x2_t)v420);
  *(int32x2_t *)v424.i8 = vmovn_s64(v424);
  int16x8_t v425 = (int16x8_t)vzip1q_s32((int32x4_t)v420, (int32x4_t)v424);
  uint32x4_t v426 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v727.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v727, (int8x16_t)v727, 8uLL))));
  int16x8_t v427 = (int16x8_t)vshlq_u32((uint32x4_t)v425, v426);
  *(int16x4_t *)v425.i8 = vmovn_s32((int32x4_t)v425);
  *(int16x4_t *)v427.i8 = vmovn_s32((int32x4_t)v427);
  int16x8_t v428 = vaddq_s16(v727, v407);
  int16x8_t v429 = vsubq_s16(v408, v727);
  int16x8_t v430 = vshlq_s16(vshlq_s16(vzip1q_s16(v425, v427), v429), v428);
  int8x16_t v710 = (int8x16_t)v430;
  unint64_t v431 = v413 + v412;
  if (v707) {
    BOOL v432 = v707 >= v431;
  }
  else {
    BOOL v432 = 1;
  }
  char v433 = !v432;
  if (v412 > 0x80 || (v433 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v431 = v413;
  }
  else
  {
    unint64_t v434 = v413 & 0x3F;
    int64x2_t v435 = vaddq_s64(vdupq_n_s64(v434), vzip1q_s64((int64x2_t)0, v411));
    int8x16_t v436 = (int64x2_t *)(v399 + 8 * (v413 >> 6));
    int8x16_t v416 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v436, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v435)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v436->i64[0], 0), (uint64x2_t)vnegq_s64(v435)));
    if (v434 + v412 >= 0x81) {
      int8x16_t v416 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v436[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v435)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v436[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v435))), v416);
    }
  }
  int64x2_t v437 = (int64x2_t)vshlq_u64((uint64x2_t)v416, v423);
  *(int32x2_t *)v416.i8 = vmovn_s64((int64x2_t)v416);
  *(int32x2_t *)v437.i8 = vmovn_s64(v437);
  int16x8_t v438 = (int16x8_t)vzip1q_s32((int32x4_t)v416, (int32x4_t)v437);
  int16x8_t v439 = (int16x8_t)vshlq_u32((uint32x4_t)v438, v426);
  *(int16x4_t *)v438.i8 = vmovn_s32((int32x4_t)v438);
  *(int16x4_t *)v439.i8 = vmovn_s32((int32x4_t)v439);
  int16x8_t v440 = vshlq_s16(vshlq_s16(vzip1q_s16(v438, v439), v429), v428);
  int8x16_t v711 = (int8x16_t)v440;
  unint64_t v441 = v431 + v412;
  if (v707) {
    BOOL v442 = v707 >= v441;
  }
  else {
    BOOL v442 = 1;
  }
  char v443 = !v442;
  int8x16_t v444 = 0uLL;
  if (v412 > 0x80 || (v443 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v441 = v431;
    int8x16_t v448 = 0uLL;
  }
  else
  {
    unint64_t v445 = v431 & 0x3F;
    int64x2_t v446 = vaddq_s64(vdupq_n_s64(v445), vzip1q_s64((int64x2_t)0, v411));
    int8x16_t v447 = (int64x2_t *)(v399 + 8 * (v431 >> 6));
    int8x16_t v448 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v447, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v446)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v447->i64[0], 0), (uint64x2_t)vnegq_s64(v446)));
    if (v445 + v412 >= 0x81) {
      int8x16_t v448 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v447[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v446)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v447[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v446))), v448);
    }
  }
  int64x2_t v449 = (int64x2_t)vshlq_u64((uint64x2_t)v448, v423);
  *(int32x2_t *)v448.i8 = vmovn_s64((int64x2_t)v448);
  *(int32x2_t *)v449.i8 = vmovn_s64(v449);
  int16x8_t v450 = (int16x8_t)vzip1q_s32((int32x4_t)v448, (int32x4_t)v449);
  int16x8_t v451 = (int16x8_t)vshlq_u32((uint32x4_t)v450, v426);
  *(int16x4_t *)v450.i8 = vmovn_s32((int32x4_t)v450);
  *(int16x4_t *)v451.i8 = vmovn_s32((int32x4_t)v451);
  int16x8_t v452 = vshlq_s16(vshlq_s16(vzip1q_s16(v450, v451), v429), v428);
  int8x16_t v712 = (int8x16_t)v452;
  int8x16_t v453 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v728, v728));
  unint64_t v454 = vpaddq_s32((int32x4_t)v453, (int32x4_t)v453).u64[0];
  v455.i64[0] = v454;
  v455.i64[1] = HIDWORD(v454);
  int64x2_t v456 = v455;
  unint64_t v457 = vaddvq_s64(v455);
  unint64_t v458 = v457;
  unint64_t v459 = v441 + v457;
  if (v707) {
    BOOL v460 = v707 >= v459;
  }
  else {
    BOOL v460 = 1;
  }
  char v461 = !v460;
  if (v457 > 0x80 || (v461 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v459 = v441;
  }
  else
  {
    unint64_t v462 = v441 & 0x3F;
    int64x2_t v463 = vaddq_s64(vdupq_n_s64(v462), vzip1q_s64((int64x2_t)0, v456));
    int8x16_t v464 = (int64x2_t *)(v399 + 8 * (v441 >> 6));
    int8x16_t v444 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v464, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v463)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v464->i64[0], 0), (uint64x2_t)vnegq_s64(v463)));
    if (v462 + v458 >= 0x81) {
      int8x16_t v444 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v464[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v463)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v464[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v463))), v444);
    }
  }
  int32x4_t v465 = (int32x4_t)vextq_s8(v453, v453, 8uLL);
  int32x2_t v466 = vzip1_s32(*(int32x2_t *)v453.i8, *(int32x2_t *)v465.i8);
  v467.i64[0] = v466.u32[0];
  v467.i64[1] = v466.u32[1];
  uint64x2_t v468 = (uint64x2_t)vnegq_s64(v467);
  int64x2_t v469 = (int64x2_t)vshlq_u64((uint64x2_t)v444, v468);
  *(int32x2_t *)v465.i8 = vmovn_s64((int64x2_t)v444);
  *(int32x2_t *)v469.i8 = vmovn_s64(v469);
  int16x8_t v470 = (int16x8_t)vzip1q_s32(v465, (int32x4_t)v469);
  uint32x4_t v471 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v728.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v728, (int8x16_t)v728, 8uLL))));
  int16x8_t v472 = (int16x8_t)vshlq_u32((uint32x4_t)v470, v471);
  *(int16x4_t *)v470.i8 = vmovn_s32((int32x4_t)v470);
  *(int16x4_t *)v472.i8 = vmovn_s32((int32x4_t)v472);
  int16x8_t v473 = vzip1q_s16(v470, v472);
  v472.i64[0] = 0xF000F000F000FLL;
  v472.i64[1] = 0xF000F000F000FLL;
  int16x8_t v474 = vaddq_s16(v728, v472);
  v472.i64[0] = 0x10001000100010;
  v472.i64[1] = 0x10001000100010;
  int16x8_t v475 = vsubq_s16(v472, v728);
  int16x8_t v476 = vshlq_s16(vshlq_s16(v473, v475), v474);
  int8x16_t v713 = (int8x16_t)v476;
  unint64_t v477 = v459 + v458;
  if (v707) {
    BOOL v478 = v707 >= v477;
  }
  else {
    BOOL v478 = 1;
  }
  char v479 = !v478;
  int8x16_t v480 = 0uLL;
  if (v458 > 0x80 || (v479 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v477 = v459;
    int8x16_t v484 = 0uLL;
  }
  else
  {
    unint64_t v481 = v459 & 0x3F;
    int64x2_t v482 = vaddq_s64(vdupq_n_s64(v481), vzip1q_s64((int64x2_t)0, v456));
    int16x8_t v483 = (int64x2_t *)(v399 + 8 * (v459 >> 6));
    int8x16_t v484 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v483, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v482)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v483->i64[0], 0), (uint64x2_t)vnegq_s64(v482)));
    if (v481 + v458 >= 0x81) {
      int8x16_t v484 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v483[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v482)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v483[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v482))), v484);
    }
  }
  int64x2_t v485 = (int64x2_t)vshlq_u64((uint64x2_t)v484, v468);
  *(int32x2_t *)v484.i8 = vmovn_s64((int64x2_t)v484);
  *(int32x2_t *)v485.i8 = vmovn_s64(v485);
  int16x8_t v486 = (int16x8_t)vzip1q_s32((int32x4_t)v484, (int32x4_t)v485);
  int16x8_t v487 = (int16x8_t)vshlq_u32((uint32x4_t)v486, v471);
  *(int16x4_t *)v486.i8 = vmovn_s32((int32x4_t)v486);
  *(int16x4_t *)v487.i8 = vmovn_s32((int32x4_t)v487);
  int16x8_t v488 = vshlq_s16(vshlq_s16(vzip1q_s16(v486, v487), v475), v474);
  int8x16_t v714 = (int8x16_t)v488;
  unint64_t v489 = v477 + v458;
  if (v707) {
    BOOL v490 = v707 >= v489;
  }
  else {
    BOOL v490 = 1;
  }
  char v491 = !v490;
  if (v458 > 0x80 || (v491 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v489 = v477;
  }
  else
  {
    unint64_t v492 = v477 & 0x3F;
    int64x2_t v493 = vaddq_s64(vdupq_n_s64(v492), vzip1q_s64((int64x2_t)0, v456));
    int16x8_t v494 = (int64x2_t *)(v399 + 8 * (v477 >> 6));
    int8x16_t v480 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v494, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v493)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v494->i64[0], 0), (uint64x2_t)vnegq_s64(v493)));
    if (v492 + v458 >= 0x81) {
      int8x16_t v480 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v494[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v493)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v494[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v493))), v480);
    }
  }
  int64x2_t v495 = (int64x2_t)vshlq_u64((uint64x2_t)v480, v468);
  *(int32x2_t *)v480.i8 = vmovn_s64((int64x2_t)v480);
  *(int32x2_t *)v495.i8 = vmovn_s64(v495);
  int16x8_t v496 = (int16x8_t)vzip1q_s32((int32x4_t)v480, (int32x4_t)v495);
  int16x8_t v497 = (int16x8_t)vshlq_u32((uint32x4_t)v496, v471);
  *(int16x4_t *)v496.i8 = vmovn_s32((int32x4_t)v496);
  *(int16x4_t *)v497.i8 = vmovn_s32((int32x4_t)v497);
  int16x8_t v498 = vshlq_s16(vshlq_s16(vzip1q_s16(v496, v497), v475), v474);
  int8x16_t v715 = (int8x16_t)v498;
  unint64_t v499 = v489 + v458;
  if (v707) {
    BOOL v500 = v707 >= v499;
  }
  else {
    BOOL v500 = 1;
  }
  char v501 = !v500;
  int8x16_t v502 = 0uLL;
  if (v458 > 0x80 || (v501 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v499 = v489;
    int8x16_t v506 = 0uLL;
  }
  else
  {
    unint64_t v503 = v489 & 0x3F;
    int64x2_t v504 = vaddq_s64(vdupq_n_s64(v503), vzip1q_s64((int64x2_t)0, v456));
    int16x8_t v505 = (int64x2_t *)(v399 + 8 * (v489 >> 6));
    int8x16_t v506 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v505, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v504)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v505->i64[0], 0), (uint64x2_t)vnegq_s64(v504)));
    if (v503 + v458 >= 0x81) {
      int8x16_t v506 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v505[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v504)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v505[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v504))), v506);
    }
  }
  int64x2_t v507 = (int64x2_t)vshlq_u64((uint64x2_t)v506, v468);
  *(int32x2_t *)v506.i8 = vmovn_s64((int64x2_t)v506);
  *(int32x2_t *)v507.i8 = vmovn_s64(v507);
  int16x8_t v508 = (int16x8_t)vzip1q_s32((int32x4_t)v506, (int32x4_t)v507);
  int16x8_t v509 = (int16x8_t)vshlq_u32((uint32x4_t)v508, v471);
  *(int16x4_t *)v508.i8 = vmovn_s32((int32x4_t)v508);
  *(int16x4_t *)v509.i8 = vmovn_s32((int32x4_t)v509);
  int16x8_t v510 = vshlq_s16(vshlq_s16(vzip1q_s16(v508, v509), v475), v474);
  int8x16_t v716 = (int8x16_t)v510;
  int8x16_t v511 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v729, v729));
  unint64_t v512 = vpaddq_s32((int32x4_t)v511, (int32x4_t)v511).u64[0];
  v513.i64[0] = v512;
  v513.i64[1] = HIDWORD(v512);
  int64x2_t v514 = v513;
  unint64_t v515 = vaddvq_s64(v513);
  unint64_t v516 = v515;
  unint64_t v517 = v499 + v515;
  if (v707) {
    BOOL v518 = v707 >= v517;
  }
  else {
    BOOL v518 = 1;
  }
  char v519 = !v518;
  if (v515 > 0x80 || (v519 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v517 = v499;
  }
  else
  {
    unint64_t v520 = v499 & 0x3F;
    int64x2_t v521 = vaddq_s64(vdupq_n_s64(v520), vzip1q_s64((int64x2_t)0, v514));
    int16x8_t v522 = (int64x2_t *)(v399 + 8 * (v499 >> 6));
    int8x16_t v502 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v522, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v521)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v522->i64[0], 0), (uint64x2_t)vnegq_s64(v521)));
    if (v520 + v516 >= 0x81) {
      int8x16_t v502 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v522[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v521)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v522[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v521))), v502);
    }
  }
  int32x4_t v523 = (int32x4_t)vextq_s8(v511, v511, 8uLL);
  int32x2_t v524 = vzip1_s32(*(int32x2_t *)v511.i8, *(int32x2_t *)v523.i8);
  v525.i64[0] = v524.u32[0];
  v525.i64[1] = v524.u32[1];
  uint64x2_t v526 = (uint64x2_t)vnegq_s64(v525);
  int64x2_t v527 = (int64x2_t)vshlq_u64((uint64x2_t)v502, v526);
  *(int32x2_t *)v523.i8 = vmovn_s64((int64x2_t)v502);
  *(int32x2_t *)v527.i8 = vmovn_s64(v527);
  int16x8_t v528 = (int16x8_t)vzip1q_s32(v523, (int32x4_t)v527);
  uint32x4_t v529 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v729.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v729, (int8x16_t)v729, 8uLL))));
  int16x8_t v530 = (int16x8_t)vshlq_u32((uint32x4_t)v528, v529);
  *(int16x4_t *)v528.i8 = vmovn_s32((int32x4_t)v528);
  *(int16x4_t *)v530.i8 = vmovn_s32((int32x4_t)v530);
  int16x8_t v531 = vzip1q_s16(v528, v530);
  v530.i64[0] = 0xF000F000F000FLL;
  v530.i64[1] = 0xF000F000F000FLL;
  int16x8_t v532 = vaddq_s16(v729, v530);
  v530.i64[0] = 0x10001000100010;
  v530.i64[1] = 0x10001000100010;
  int16x8_t v533 = vsubq_s16(v530, v729);
  int16x8_t v534 = vshlq_s16(vshlq_s16(v531, v533), v532);
  int16x8_t v717 = v534;
  unint64_t v535 = v517 + v516;
  if (v707) {
    BOOL v536 = v707 >= v535;
  }
  else {
    BOOL v536 = 1;
  }
  char v537 = !v536;
  int8x16_t v538 = 0uLL;
  if (v516 > 0x80 || (v537 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v535 = v517;
    int8x16_t v542 = 0uLL;
  }
  else
  {
    unint64_t v539 = v517 & 0x3F;
    int64x2_t v540 = vaddq_s64(vdupq_n_s64(v539), vzip1q_s64((int64x2_t)0, v514));
    int8x16_t v541 = (int64x2_t *)(v399 + 8 * (v517 >> 6));
    int8x16_t v542 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v541, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v540)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v541->i64[0], 0), (uint64x2_t)vnegq_s64(v540)));
    if (v539 + v516 >= 0x81) {
      int8x16_t v542 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v541[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v540)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v541[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v540))), v542);
    }
  }
  int64x2_t v543 = (int64x2_t)vshlq_u64((uint64x2_t)v542, v526);
  *(int32x2_t *)v542.i8 = vmovn_s64((int64x2_t)v542);
  *(int32x2_t *)v543.i8 = vmovn_s64(v543);
  int16x8_t v544 = (int16x8_t)vzip1q_s32((int32x4_t)v542, (int32x4_t)v543);
  int16x8_t v545 = (int16x8_t)vshlq_u32((uint32x4_t)v544, v529);
  *(int16x4_t *)v544.i8 = vmovn_s32((int32x4_t)v544);
  *(int16x4_t *)v545.i8 = vmovn_s32((int32x4_t)v545);
  int16x8_t v546 = vshlq_s16(vshlq_s16(vzip1q_s16(v544, v545), v533), v532);
  int16x8_t v718 = v546;
  unint64_t v547 = v535 + v516;
  if (v707) {
    BOOL v548 = v707 >= v547;
  }
  else {
    BOOL v548 = 1;
  }
  char v549 = !v548;
  if (v516 > 0x80 || (v549 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v547 = v535;
  }
  else
  {
    unint64_t v550 = v535 & 0x3F;
    int64x2_t v551 = vaddq_s64(vdupq_n_s64(v550), vzip1q_s64((int64x2_t)0, v514));
    int8x16_t v552 = (int64x2_t *)(v399 + 8 * (v535 >> 6));
    int8x16_t v538 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v552, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v551)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v552->i64[0], 0), (uint64x2_t)vnegq_s64(v551)));
    if (v550 + v516 >= 0x81) {
      int8x16_t v538 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v552[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v551)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v552[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v551))), v538);
    }
  }
  int64x2_t v553 = (int64x2_t)vshlq_u64((uint64x2_t)v538, v526);
  *(int32x2_t *)v538.i8 = vmovn_s64((int64x2_t)v538);
  *(int32x2_t *)v553.i8 = vmovn_s64(v553);
  int16x8_t v554 = (int16x8_t)vzip1q_s32((int32x4_t)v538, (int32x4_t)v553);
  int16x8_t v555 = (int16x8_t)vshlq_u32((uint32x4_t)v554, v529);
  *(int16x4_t *)v554.i8 = vmovn_s32((int32x4_t)v554);
  *(int16x4_t *)v555.i8 = vmovn_s32((int32x4_t)v555);
  int16x8_t v556 = vshlq_s16(vshlq_s16(vzip1q_s16(v554, v555), v533), v532);
  int16x8_t v719 = v556;
  unint64_t v557 = v547 + v516;
  if (v707) {
    BOOL v558 = v707 >= v557;
  }
  else {
    BOOL v558 = 1;
  }
  char v559 = !v558;
  int8x16_t v560 = 0uLL;
  if (v516 > 0x80 || (v559 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v557 = v547;
    int8x16_t v564 = 0uLL;
  }
  else
  {
    unint64_t v561 = v547 & 0x3F;
    int64x2_t v562 = vaddq_s64(vdupq_n_s64(v561), vzip1q_s64((int64x2_t)0, v514));
    int8x16_t v563 = (int64x2_t *)(v399 + 8 * (v547 >> 6));
    int8x16_t v564 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v563, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v562)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v563->i64[0], 0), (uint64x2_t)vnegq_s64(v562)));
    if (v561 + v516 >= 0x81) {
      int8x16_t v564 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v563[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v562)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v563[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v562))), v564);
    }
  }
  int64x2_t v565 = (int64x2_t)vshlq_u64((uint64x2_t)v564, v526);
  *(int32x2_t *)v564.i8 = vmovn_s64((int64x2_t)v564);
  *(int32x2_t *)v565.i8 = vmovn_s64(v565);
  int16x8_t v566 = (int16x8_t)vzip1q_s32((int32x4_t)v564, (int32x4_t)v565);
  int16x8_t v567 = (int16x8_t)vshlq_u32((uint32x4_t)v566, v529);
  *(int16x4_t *)v566.i8 = vmovn_s32((int32x4_t)v566);
  *(int16x4_t *)v567.i8 = vmovn_s32((int32x4_t)v567);
  int16x8_t v568 = vshlq_s16(vshlq_s16(vzip1q_s16(v566, v567), v533), v532);
  int16x8_t v720 = v568;
  int8x16_t v569 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v730, v730));
  unint64_t v570 = vpaddq_s32((int32x4_t)v569, (int32x4_t)v569).u64[0];
  v571.i64[0] = v570;
  v571.i64[1] = HIDWORD(v570);
  int64x2_t v572 = v571;
  unint64_t v573 = vaddvq_s64(v571);
  unint64_t v574 = v573;
  unint64_t v575 = v557 + v573;
  if (v707) {
    BOOL v576 = v707 >= v575;
  }
  else {
    BOOL v576 = 1;
  }
  char v577 = !v576;
  if (v573 > 0x80 || (v577 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v575 = v557;
  }
  else
  {
    unint64_t v578 = v557 & 0x3F;
    int64x2_t v579 = vaddq_s64(vdupq_n_s64(v578), vzip1q_s64((int64x2_t)0, v572));
    int8x16_t v580 = (int64x2_t *)(v399 + 8 * (v557 >> 6));
    int8x16_t v560 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v580, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v579)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v580->i64[0], 0), (uint64x2_t)vnegq_s64(v579)));
    if (v578 + v574 >= 0x81) {
      int8x16_t v560 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v580[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v579)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v580[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v579))), v560);
    }
  }
  int32x2_t v581 = vzip1_s32(*(int32x2_t *)v569.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v569, v569, 8uLL));
  v582.i64[0] = v581.u32[0];
  v582.i64[1] = v581.u32[1];
  int32x4_t v583 = (int32x4_t)vnegq_s64(v582);
  int64x2_t v584 = (int64x2_t)vshlq_u64((uint64x2_t)v560, (uint64x2_t)v583);
  *(int32x2_t *)v560.i8 = vmovn_s64((int64x2_t)v560);
  *(int32x2_t *)v584.i8 = vmovn_s64(v584);
  int16x8_t v585 = (int16x8_t)vzip1q_s32((int32x4_t)v560, (int32x4_t)v584);
  uint32x4_t v586 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v730.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v730, (int8x16_t)v730, 8uLL))));
  int16x8_t v587 = (int16x8_t)vshlq_u32((uint32x4_t)v585, v586);
  *(int16x4_t *)v585.i8 = vmovn_s32((int32x4_t)v585);
  *(int16x4_t *)v587.i8 = vmovn_s32((int32x4_t)v587);
  int16x8_t v588 = vzip1q_s16(v585, v587);
  v585.i64[0] = 0xF000F000F000FLL;
  v585.i64[1] = 0xF000F000F000FLL;
  int16x8_t v589 = vaddq_s16(v730, v585);
  v587.i64[0] = 0x10001000100010;
  v587.i64[1] = 0x10001000100010;
  int16x8_t v590 = vsubq_s16(v587, v730);
  int16x8_t v591 = vshlq_s16(vshlq_s16(v588, v590), v589);
  int8x16_t v721 = (int8x16_t)v591;
  unint64_t v592 = v575 + v574;
  if (v707) {
    BOOL v593 = v707 >= v592;
  }
  else {
    BOOL v593 = 1;
  }
  char v594 = !v593;
  int8x16_t v595 = 0uLL;
  if (v574 > 0x80 || (v594 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v592 = v575;
    int8x16_t v599 = 0uLL;
  }
  else
  {
    unint64_t v596 = v575 & 0x3F;
    int64x2_t v597 = vaddq_s64(vdupq_n_s64(v596), vzip1q_s64((int64x2_t)0, v572));
    int16x8_t v598 = (int64x2_t *)(v399 + 8 * (v575 >> 6));
    int8x16_t v599 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v598, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v597)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v598->i64[0], 0), (uint64x2_t)vnegq_s64(v597)));
    if (v596 + v574 >= 0x81) {
      int8x16_t v599 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v598[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v597)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v598[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v597))), v599);
    }
  }
  int64x2_t v600 = (int64x2_t)vshlq_u64((uint64x2_t)v599, (uint64x2_t)v583);
  *(int32x2_t *)v599.i8 = vmovn_s64((int64x2_t)v599);
  *(int32x2_t *)v600.i8 = vmovn_s64(v600);
  int16x8_t v601 = (int16x8_t)vzip1q_s32((int32x4_t)v599, (int32x4_t)v600);
  int16x8_t v602 = (int16x8_t)vshlq_u32((uint32x4_t)v601, v586);
  *(int16x4_t *)v601.i8 = vmovn_s32((int32x4_t)v601);
  *(int16x4_t *)v602.i8 = vmovn_s32((int32x4_t)v602);
  int16x8_t v603 = vshlq_s16(vshlq_s16(vzip1q_s16(v601, v602), v590), v589);
  int8x16_t v722 = (int8x16_t)v603;
  unint64_t v604 = v592 + v574;
  if (v707) {
    BOOL v605 = v707 >= v604;
  }
  else {
    BOOL v605 = 1;
  }
  char v606 = !v605;
  if (v574 > 0x80 || (v606 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v604 = v592;
  }
  else
  {
    unint64_t v607 = v592 & 0x3F;
    int64x2_t v608 = vaddq_s64(vdupq_n_s64(v607), vzip1q_s64((int64x2_t)0, v572));
    int16x4_t v609 = (int64x2_t *)(v399 + 8 * (v592 >> 6));
    int8x16_t v595 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v609, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v608)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v609->i64[0], 0), (uint64x2_t)vnegq_s64(v608)));
    if (v607 + v574 >= 0x81) {
      int8x16_t v595 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v609[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v608)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v609[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v608))), v595);
    }
  }
  int64x2_t v610 = (int64x2_t)vshlq_u64((uint64x2_t)v595, (uint64x2_t)v583);
  *(int32x2_t *)v595.i8 = vmovn_s64((int64x2_t)v595);
  *(int32x2_t *)v610.i8 = vmovn_s64(v610);
  int16x8_t v611 = (int16x8_t)vzip1q_s32((int32x4_t)v595, (int32x4_t)v610);
  int16x8_t v612 = (int16x8_t)vshlq_u32((uint32x4_t)v611, v586);
  *(int16x4_t *)v611.i8 = vmovn_s32((int32x4_t)v611);
  *(int16x4_t *)v612.i8 = vmovn_s32((int32x4_t)v612);
  int16x8_t v613 = vshlq_s16(vshlq_s16(vzip1q_s16(v611, v612), v590), v589);
  int8x16_t v723 = (int8x16_t)v613;
  unint64_t v614 = v604 + v574;
  if (v707) {
    BOOL v615 = v707 >= v614;
  }
  else {
    BOOL v615 = 1;
  }
  char v616 = !v615;
  int8x16_t v617 = 0uLL;
  if (v574 > 0x80 || (v616 & 1) != 0)
  {
    int v401 = 1;
    unint64_t v614 = v604;
  }
  else
  {
    int64x2_t v618 = vaddq_s64(vdupq_n_s64(v604 & 0x3F), vzip1q_s64((int64x2_t)0, v572));
    int8x16_t v619 = (int64x2_t *)(v399 + 8 * (v604 >> 6));
    int8x16_t v617 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v619, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v618)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v619->i64[0], 0), (uint64x2_t)vnegq_s64(v618)));
    if ((v604 & 0x3F) + v574 >= 0x81) {
      int8x16_t v617 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v619[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v618)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v619[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v618))), v617);
    }
  }
  if (v401 || v707 + 8 * result - v614 - 1024 >= 9 || v384 == 2)
  {
    uint64_t result = 0;
    int64x2_t v13 = vdupq_n_s64(0xFFFFF003FFuLL);
    *a1 = (int16x8_t)v13;
    a1[1] = (int16x8_t)v13;
    int16x8_t v14 = (int64x2_t *)&a1->i8[a2];
    goto LABEL_277;
  }
  int64x2_t v620 = (int64x2_t)vshlq_u64((uint64x2_t)v617, (uint64x2_t)v583);
  *(int32x2_t *)v583.i8 = vmovn_s64((int64x2_t)v617);
  *(int32x2_t *)v620.i8 = vmovn_s64(v620);
  int16x8_t v621 = (int16x8_t)vzip1q_s32(v583, (int32x4_t)v620);
  int16x8_t v622 = (int16x8_t)vshlq_u32((uint32x4_t)v621, v586);
  *(int16x4_t *)v621.i8 = vmovn_s32((int32x4_t)v621);
  *(int16x4_t *)v622.i8 = vmovn_s32((int32x4_t)v622);
  int16x8_t v623 = vshlq_s16(vshlq_s16(vzip1q_s16(v621, v622), v590), v589);
  int16x8_t v624 = vaddq_s16((int16x8_t)vandq_s8(v383, v349), v409);
  int8x16_t v625 = (int8x16_t)vdupq_lane_s64(v383.i64[0], 0);
  int16x8_t v626 = (int16x8_t)vandq_s8(v349, v625);
  int16x8_t v627 = vsubq_s16(v430, v626);
  int16x8_t v628 = vsubq_s16(v440, v626);
  int16x8_t v629 = (int16x8_t)vandq_s8(v348, v625);
  int16x8_t v630 = vsubq_s16(v476, v629);
  int16x8_t v631 = vsubq_s16(v488, v629);
  int8x16_t v632 = (int8x16_t)vsubq_s16(v452, v626);
  int8x16_t v633 = (int8x16_t)vsubq_s16(v624, v626);
  int16x8_t v634 = vsubq_s16(v498, v629);
  int16x8_t v635 = vsubq_s16(v510, v629);
  int16x8_t v636 = (int16x8_t)vandq_s8(v347, v625);
  int16x8_t v637 = vsubq_s16(v534, v636);
  int16x8_t v638 = vsubq_s16(v546, v636);
  int16x8_t v639 = vsubq_s16(v556, v636);
  int16x8_t v640 = vsubq_s16(v568, v636);
  int16x8_t v641 = (int16x8_t)vandq_s8(v346, v625);
  int16x8_t v642 = vsubq_s16(v591, v641);
  int8x16_t v709 = (int8x16_t)v624;
  int16x8_t v643 = vsubq_s16(v603, v641);
  int16x8_t v644 = vsubq_s16(v613, v641);
  int8x16_t v721 = (int8x16_t)v642;
  int8x16_t v722 = (int8x16_t)v643;
  int16x8_t v645 = vsubq_s16(v623, v641);
  int8x16_t v723 = (int8x16_t)v644;
  int16x8_t v724 = v645;
  v646.i64[0] = 0x1000100010001;
  v646.i64[1] = 0x1000100010001;
  if (vaddvq_s16(vceqq_s16(v160, (int16x8_t)v646)))
  {
    int8x16_t v647 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v726, v646));
    v648.i64[1] = v633.i64[1];
    v648.i64[0] = v632.i64[1];
    v649.i64[0] = v632.i64[0];
    v649.i64[1] = v633.i64[0];
    int16x8_t v650 = (int16x8_t)vbslq_s8(v647, v648, v633);
    int16x8_t v651 = (int16x8_t)vbslq_s8(v647, v649, v632);
    v652.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v652.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int16x8_t v653 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v627 - 1), v652), v647);
    v734.val[0] = (int8x16_t)vaddq_s16(v650, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v627 - 1), (int8x16_t)xmmword_242EA7710), v647));
    v734.val[1] = (int8x16_t)vaddq_s16(v627, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v627 - 1), (int8x16_t)xmmword_242EA7720), v647));
    v734.val[2] = (int8x16_t)vaddq_s16(v628, v653);
    v734.val[3] = (int8x16_t)vaddq_s16(v651, v653);
    int16x8_t v654 = (int16x8_t)vandq_s8(vqtbl4q_s8(v734, v652), v647);
    int8x16_t v633 = (int8x16_t)vaddq_s16((int16x8_t)v734.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v734, (int8x16_t)xmmword_242EA7730), v647));
    int16x8_t v627 = vaddq_s16((int16x8_t)v734.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v734, (int8x16_t)xmmword_242EA7740), v647));
    int8x16_t v709 = v633;
    int8x16_t v710 = (int8x16_t)v627;
    int16x8_t v628 = vaddq_s16((int16x8_t)v734.val[2], v654);
    int8x16_t v632 = (int8x16_t)vaddq_s16((int16x8_t)v734.val[3], v654);
    v733.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v630.i8, (int8x16_t)xmmword_242EA7710), v647), v630);
    v733.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v630.i8, (int8x16_t)xmmword_242EA7750), v647), v631);
    v733.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v630.i8, v652), v647), v634);
    v733.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v630.i8, (int8x16_t)xmmword_242EA7760), v647), v635);
    int16x8_t v655 = (int16x8_t)vandq_s8(vqtbl4q_s8(v733, (int8x16_t)xmmword_242EA7730), v647);
    int16x8_t v656 = (int16x8_t)vandq_s8(vqtbl4q_s8(v733, v652), v647);
    int16x8_t v630 = vaddq_s16(v655, (int16x8_t)v733.val[0]);
    int16x8_t v631 = vaddq_s16((int16x8_t)v733.val[1], v655);
    int16x8_t v634 = vaddq_s16((int16x8_t)v733.val[2], v656);
    int16x8_t v635 = vaddq_s16((int16x8_t)v733.val[3], v656);
    v733.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v637.i8, (int8x16_t)xmmword_242EA74D0), v647), v637);
    v733.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v637.i8, (int8x16_t)xmmword_242EA75A0), v647), v638);
    v733.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v637.i8, (int8x16_t)xmmword_242EA7710), v647), v639);
    v733.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v637.i8, (int8x16_t)xmmword_242EA7720), v647), v640);
    int16x8_t v657 = (int16x8_t)vandq_s8(vqtbl4q_s8(v733, v652), v647);
    int16x8_t v637 = vaddq_s16((int16x8_t)v733.val[0], v657);
    int16x8_t v638 = vaddq_s16((int16x8_t)v733.val[1], v657);
    int16x8_t v639 = vaddq_s16((int16x8_t)v733.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v733, (int8x16_t)xmmword_242EA75D0), v647));
    int16x8_t v640 = vaddq_s16((int16x8_t)v733.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v733, (int8x16_t)xmmword_242EA7770), v647));
    v734.val[1] = v721;
    v734.val[2] = v722;
    int8x16_t v159 = v726;
    v734.val[3] = v723;
    int16x8_t v658 = v724;
    v733.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v734 + 16), (int8x16_t)xmmword_242EA74D0), v647), (int16x8_t)v721);
    v733.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v734 + 16), (int8x16_t)xmmword_242EA7780), v647), (int16x8_t)v722);
    int8x16_t v711 = (int8x16_t)v628;
    int8x16_t v712 = v632;
    v733.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v734 + 16), (int8x16_t)xmmword_242EA7710), v647), (int16x8_t)v723);
    int16x8_t v659 = vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v734 + 16), (int8x16_t)xmmword_242EA7720), v647), v724);
    int16x8_t v660 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v733 + 16), v652), v647);
    int16x8_t v642 = vaddq_s16((int16x8_t)v733.val[1], v660);
    int16x8_t v643 = vaddq_s16((int16x8_t)v733.val[2], v660);
    int16x8_t v644 = vaddq_s16((int16x8_t)v733.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v733 + 16), (int8x16_t)xmmword_242EA75D0), v647));
    int16x8_t v645 = vaddq_s16(v659, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)((char *)&v733 + 16), (int8x16_t)xmmword_242EA7790), v647));
  }
  int8x16_t v661 = (int8x16_t)vaddq_s16(v725, (int16x8_t)v633);
  int8x16_t v662 = (int8x16_t)vaddq_s16(v627, v725);
  int8x16_t v663 = (int8x16_t)vaddq_s16(v628, v725);
  int8x16_t v664 = (int8x16_t)vaddq_s16((int16x8_t)v632, v725);
  int8x16_t v665 = (int8x16_t)vaddq_s16(v630, v725);
  int8x16_t v666 = (int8x16_t)vaddq_s16(v631, v725);
  int8x16_t v667 = (int8x16_t)vaddq_s16(v634, v725);
  int8x16_t v668 = (int8x16_t)vaddq_s16(v635, v725);
  int8x16_t v669 = (int8x16_t)vaddq_s16(v637, v725);
  int8x16_t v670 = (int8x16_t)vaddq_s16(v638, v725);
  int8x16_t v671 = (int8x16_t)vaddq_s16(v639, v725);
  int8x16_t v672 = (int8x16_t)vaddq_s16(v640, v725);
  int8x16_t v673 = (int8x16_t)vaddq_s16(v642, v725);
  int8x16_t v674 = (int8x16_t)vaddq_s16(v643, v725);
  int8x16_t v675 = (int8x16_t)vaddq_s16(v644, v725);
  int8x16_t v676 = (int8x16_t)vaddq_s16(v645, v725);
  v677.i64[0] = 0x10001000100010;
  v677.i64[1] = 0x10001000100010;
  int8x16_t v678 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v159, v677));
  v679 = a1 + 4;
  *a1 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v661, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v661), 6uLL);
  a1[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v662, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v662), 6uLL);
  a1[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v663, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v663), 6uLL);
  a1[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v664, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v664), 6uLL);
  v680 = (int16x8_t *)((char *)a1 + a2);
  int16x8_t *v679 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v669, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v669), 6uLL);
  v679[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v670, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v670), 6uLL);
  v679[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v671, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v671), 6uLL);
  v679[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v672, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v672), 6uLL);
  int16x8_t *v680 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v665, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v665), 6uLL);
  v680[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v666, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v666), 6uLL);
  v680[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v667, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v667), 6uLL);
  v680[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v668, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v668), 6uLL);
  v680 += 4;
  int16x8_t *v680 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v673, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v673), 6uLL);
  v680[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v674, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v674), 6uLL);
  v680[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v675, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v675), 6uLL);
  v680[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v676, (int8x16_t)xmmword_242EA77A0), v678), (int16x8_t)v676), 6uLL);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v10 = a3;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 2) {
    unsigned int v13 = 2;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    int16x8_t v14 = (int16x8_t *)result;
    int v15 = a7;
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v12, v13, a7);
    v10 += result;
  }
  else
  {
    int16x8_t v14 = (int16x8_t *)result;
    int v15 = a7;
    *a4 = 0;
  }
  uint64_t v35 = 2 * a2;
  int8x16_t v16 = a4 + 1;
  if (a6 <= 2) {
    int v17 = 2;
  }
  else {
    int v17 = a6;
  }
  unsigned int v18 = v17 - 2;
  if (v18 >= 2) {
    int v19 = 2;
  }
  else {
    int v19 = v18;
  }
  if (v12 && v19)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v16, (int16x8_t *)((char *)v14 + v35), a2, v12, v19, v15);
    v10 += result;
  }
  else
  {
    *int8x16_t v16 = 0;
  }
  unint64_t v20 = a4 + 2;
  if (a5 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v20, v14 + 8, a2, v23, v13, v15);
    v10 += result;
    int8x16_t v24 = a4 + 3;
  }
  else
  {
    *unint64_t v20 = 0;
    int8x16_t v24 = a4 + 3;
    if (!v23) {
      goto LABEL_33;
    }
  }
  if (v19)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v24, (int16x8_t *)((char *)v14 + v35 + 128), a2, v23, v19, v15);
    v10 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v24 = 0;
LABEL_34:
  int8x16_t v25 = a4 + 4;
  if (a6 <= 4) {
    int v26 = 4;
  }
  else {
    int v26 = a6;
  }
  unsigned int v27 = v26 - 4;
  if (v27 >= 2) {
    int v28 = 2;
  }
  else {
    int v28 = v27;
  }
  if (v12 && v28)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v25, (int16x8_t *)((char *)v14 + 4 * a2), a2, v12, v28, v15);
    v10 += result;
  }
  else
  {
    *int8x16_t v25 = 0;
  }
  int8x16_t v29 = a4 + 5;
  if (a6 <= 6) {
    int v30 = 6;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 6;
  if (v31 >= 2) {
    int v32 = 2;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v29, (int16x8_t *)((char *)v14 + 6 * a2), a2, v12, v32, v15);
    v10 += result;
    int8x16_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v29 = 0;
    int8x16_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  if (v28)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v33, (int16x8_t *)((char *)v14 + 4 * a2 + 128), a2, v23, v28, v15);
    v10 += result;
    int32x2_t v34 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v33 = 0;
  int32x2_t v34 = a4 + 7;
  if (!v23)
  {
LABEL_62:
    *int32x2_t v34 = 0;
    return result;
  }
LABEL_58:
  if (!v32) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v10, v34, (int16x8_t *)((char *)v14 + 6 * a2 + 128), a2, v23, v32, v15);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressMacroblock(int16x8_t *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1, 256, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 32, 256, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 8, 256, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 40, 256, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 64, 256, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 96, 256, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 72, 256, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 104, 256, v13, v14, a4);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(void *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4 = 8 * (a3 & 7);
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v4 + 12;
  unint64_t v7 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v4;
  if (v4 >= 0x35) {
    v7 |= *(void *)(v5 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v8 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v9 = vdupq_n_s8(((a4 >> 5) | (8 * v7)) & 0xF);
  v10.i64[0] = 0x303030303030303;
  v10.i64[1] = 0x303030303030303;
  int8x16_t v11 = vandq_s8(v9, v10);
  int8x16_t v12 = vbicq_s8(vdupq_n_s8(((v7 >> 1) & 7) + 1), vceqq_s8(v11, v10));
  v10.i64[0] = 0x202020202020202;
  v10.i64[1] = 0x202020202020202;
  int8x16_t v13 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)0x4000400040004)))), v10);
  if (vmaxvq_s8(v13) < 1)
  {
    int v23 = 0;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int8x16_t v25 = v12;
    int8x16_t v26 = v12;
    int8x16_t v27 = v12;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    int8x16_t v29 = v12;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
  }
  else
  {
    int8x16_t v14 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v13, v13));
    int8x16_t v15 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v14, (int16x8_t)v14));
    unint64_t v16 = vpaddq_s32((int32x4_t)v15, (int32x4_t)v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19 + v6;
    if (v19 <= 0x80 && v8 >= v20)
    {
      int64x2_t v32 = vaddq_s64(vzip1q_s64((int64x2_t)0, v18), vdupq_n_s64(v6 & 0x3C));
      int8x16_t v33 = (int64x2_t *)(v5 + ((v6 >> 3) & 8));
      int8x16_t v22 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v33, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33->i64[0], 0), (uint64x2_t)vnegq_s64(v32)));
      if (v19 + (v6 & 0x3C) < 0x81)
      {
        int v23 = 0;
      }
      else
      {
        int v23 = 0;
        int8x16_t v22 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v33[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), v22);
      }
      unint64_t v6 = v20;
    }
    else
    {
      int8x16_t v22 = 0uLL;
      int v23 = 1;
    }
    int32x2_t v34 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    v35.i64[0] = v34.u32[0];
    v35.i64[1] = v34.u32[1];
    int64x2_t v36 = (int64x2_t)vshlq_u64((uint64x2_t)v22, (uint64x2_t)vnegq_s64(v35));
    *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v22);
    *(int32x2_t *)v36.i8 = vmovn_s64(v36);
    int8x16_t v37 = (int8x16_t)vzip1q_s32((int32x4_t)v22, (int32x4_t)v36);
    int16x8_t v38 = (int16x8_t)vshlq_u32((uint32x4_t)v37, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    *(int16x4_t *)v37.i8 = vmovn_s32((int32x4_t)v37);
    *(int16x4_t *)v38.i8 = vmovn_s32((int32x4_t)v38);
    int8x16_t v39 = (int8x16_t)vzip1q_s16((int16x8_t)v37, v38);
    *(int8x8_t *)v39.i8 = vzip1_s8(vmovn_s16((int16x8_t)v39), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v39, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v9.i8))))));
    v37.i64[0] = 0x101010101010101;
    v37.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8(v37, v13);
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v40.i64[0] = vandq_s8(v39, vaddq_s8(v40, v37)).u64[0];
    int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
    int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 1);
    int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 2);
    int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 3);
    int8x16_t v29 = vsubq_s8(v12, v41);
    int8x16_t v27 = vsubq_s8(v12, v42);
    int8x16_t v26 = vsubq_s8(v12, v43);
    int8x16_t v25 = vsubq_s8(v12, v44);
    int8x16_t v31 = vceqzq_s8(v41);
    int8x16_t v30 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v24 = vceqzq_s8(v44);
  }
  v45.i64[0] = 0x707070707070707;
  v45.i64[1] = 0x707070707070707;
  int8x16_t v46 = 0uLL;
  int8x16_t v47 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v9, v45), (int8x16_t)0, 0xFuLL), v12);
  int8x16_t v48 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v47, v47));
  int8x16_t v49 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v48, (int16x8_t)v48));
  unint64_t v50 = vpaddq_s32((int32x4_t)v49, (int32x4_t)v49).u64[0];
  v51.i64[0] = v50;
  v51.i64[1] = HIDWORD(v50);
  int64x2_t v52 = v51;
  unint64_t v53 = vaddvq_s64(v51);
  unint64_t v54 = v53 + v6;
  if (v53 <= 0x80 && v8 >= v54)
  {
    unint64_t v56 = v6 & 0x3F;
    int64x2_t v57 = vaddq_s64(vzip1q_s64((int64x2_t)0, v52), vdupq_n_s64(v56));
    int32x2_t v58 = (int64x2_t *)(v5 + 8 * (v6 >> 6));
    int8x16_t v46 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v58, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58->i64[0], 0), (uint64x2_t)vnegq_s64(v57)));
    if (v53 + v56 >= 0x81) {
      int8x16_t v46 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v58[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v57))), v46);
    }
    unint64_t v6 = v54;
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v59 = vandq_s8(v29, (int8x16_t)xmmword_242EA7380);
  int v60 = (a4 >> 5) & 3;
  if (v60 != 2)
  {
    unsigned int v64 = 0;
    unsigned int v62 = 0;
    unint64_t v65 = v6;
    goto LABEL_34;
  }
  unint64_t v61 = v6 + 4;
  if (v8 < v6 + 4)
  {
    unsigned int v62 = 0;
    unint64_t v61 = v6;
LABEL_33:
    unsigned int v64 = 0;
    int v23 = 1;
    unint64_t v65 = v61;
    goto LABEL_34;
  }
  uint64_t v66 = *(void *)(v5 + 8 * (v6 >> 6)) >> v6;
  if ((v6 & 0x3F) >= 0x3D) {
    v66 |= *(void *)(v5 + 8 * (v6 >> 6) + 8) << -(v6 & 0x3F);
  }
  unint64_t v65 = v6 + 8;
  unsigned int v62 = (int)(v66 << 28) >> 28;
  if (v8 < v6 + 8) {
    goto LABEL_33;
  }
  uint64_t v63 = *(void *)(v5 + 8 * (v61 >> 6)) >> v61;
  if ((v61 & 0x3F) >= 0x3D) {
    v63 |= *(void *)(v5 + 8 * (v61 >> 6) + 8) << -(v61 & 0x3F);
  }
  unsigned int v64 = (int)(v63 << 28) >> 28;
LABEL_34:
  int8x16_t v67 = vandq_s8(v27, (int8x16_t)xmmword_242EA7390);
  v59.i8[0] = 0;
  int8x16_t v68 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
  int8x16_t v69 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v68, (int16x8_t)v68));
  unint64_t v70 = vpaddq_s32((int32x4_t)v69, (int32x4_t)v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v65;
  int8x16_t v75 = 0uLL;
  if (v73 <= 0x80 && v8 >= v74)
  {
    unint64_t v78 = v65 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v78));
    int32x2_t v80 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
    int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v73 + v78 >= 0x81) {
      int8x16_t v77 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), v77);
    }
    unint64_t v65 = v74;
  }
  else
  {
    int v23 = 1;
    int8x16_t v77 = 0uLL;
  }
  int8x16_t v81 = vandq_s8(v26, (int8x16_t)xmmword_242EA7390);
  int8x16_t v82 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int8x16_t v83 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v82, (int16x8_t)v82));
  unint64_t v84 = vpaddq_s32((int32x4_t)v83, (int32x4_t)v83).u64[0];
  v85.i64[0] = v84;
  v85.i64[1] = HIDWORD(v84);
  int64x2_t v86 = v85;
  unint64_t v87 = vaddvq_s64(v85);
  if (v87 < 0x81)
  {
    int32x2_t v88 = vzip1_s32(*(int32x2_t *)v83.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL));
    v89.i64[0] = v88.u32[0];
    v89.i64[1] = v88.u32[1];
    int64x2_t v90 = v89;
    int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v82.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v82, v82, 8uLL)));
    int16x8_t v92 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)));
    unint64_t v93 = v87 + v65;
    if (v8 >= v87 + v65)
    {
      unint64_t v94 = v65 & 0x3F;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v86), vdupq_n_s64(v94));
      int32x2_t v96 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int8x16_t v75 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v87 + v94 >= 0x81) {
        int8x16_t v75 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), v75);
      }
      unint64_t v65 = v93;
    }
    else
    {
      int v23 = 1;
    }
    int64x2_t v97 = (int64x2_t)vshlq_u64((uint64x2_t)v75, (uint64x2_t)vnegq_s64(v90));
    *(int32x2_t *)v75.i8 = vmovn_s64((int64x2_t)v75);
    *(int32x2_t *)v97.i8 = vmovn_s64(v97);
    int16x8_t v98 = (int16x8_t)vzip1q_s32((int32x4_t)v75, (int32x4_t)v97);
    int16x8_t v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32(v91));
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    int8x16_t v100 = (int8x16_t)vzip1q_s16(v98, v99);
    int8x16_t v101 = (int8x16_t)vshlq_u16((uint16x8_t)v100, (uint16x8_t)vnegq_s16(v92));
    *(int8x8_t *)v100.i8 = vmovn_s16((int16x8_t)v100);
    *(int8x8_t *)v101.i8 = vmovn_s16((int16x8_t)v101);
    int8x16_t v75 = vzip1q_s8(v100, v101);
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v102 = vandq_s8(v25, (int8x16_t)xmmword_242EA7390);
  int8x16_t v103 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v81, v81));
  int8x16_t v104 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v103, (int16x8_t)v103));
  unint64_t v105 = vpaddq_s32((int32x4_t)v104, (int32x4_t)v104).u64[0];
  v106.i64[0] = v105;
  v106.i64[1] = HIDWORD(v105);
  int64x2_t v107 = v106;
  unint64_t v108 = vaddvq_s64(v106);
  if (v108 <= 0x80)
  {
    int32x2_t v110 = vzip1_s32(*(int32x2_t *)v104.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v104, v104, 8uLL));
    v111.i64[0] = v110.u32[0];
    v111.i64[1] = v110.u32[1];
    int64x2_t v112 = v111;
    int32x4_t v113 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v103.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v103, v103, 8uLL)));
    int16x8_t v114 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
    unint64_t v115 = v108 + v65;
    if (v8 >= v108 + v65)
    {
      unint64_t v117 = v65 & 0x3F;
      int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v107), vdupq_n_s64(v117));
      int8x16_t v119 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int8x16_t v116 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
      if (v108 + v117 >= 0x81) {
        int8x16_t v116 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), v116);
      }
      unint64_t v65 = v115;
    }
    else
    {
      int8x16_t v116 = 0uLL;
      int v23 = 1;
    }
    int64x2_t v120 = (int64x2_t)vshlq_u64((uint64x2_t)v116, (uint64x2_t)vnegq_s64(v112));
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v120.i8 = vmovn_s64(v120);
    int16x8_t v121 = (int16x8_t)vzip1q_s32((int32x4_t)v116, (int32x4_t)v120);
    int16x8_t v122 = (int16x8_t)vshlq_u32((uint32x4_t)v121, (uint32x4_t)vnegq_s32(v113));
    *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v121);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v122);
    int8x16_t v123 = (int8x16_t)vzip1q_s16(v121, v122);
    int8x16_t v124 = (int8x16_t)vshlq_u16((uint16x8_t)v123, (uint16x8_t)vnegq_s16(v114));
    *(int8x8_t *)v123.i8 = vmovn_s16((int16x8_t)v123);
    *(int8x8_t *)v124.i8 = vmovn_s16((int16x8_t)v124);
    int8x16_t v109 = vzip1q_s8(v123, v124);
  }
  else
  {
    int v23 = 1;
    int8x16_t v109 = 0uLL;
  }
  int8x16_t v125 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v102, v102));
  int8x16_t v126 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v125, (int16x8_t)v125));
  unint64_t v127 = vpaddq_s32((int32x4_t)v126, (int32x4_t)v126).u64[0];
  v128.i64[0] = v127;
  v128.i64[1] = HIDWORD(v127);
  int64x2_t v129 = v128;
  unint64_t v130 = vaddvq_s64(v128);
  if (v130 > 0x80 || v8 < v130 + v65) {
    goto LABEL_64;
  }
  int64x2_t v131 = vaddq_s64(vzip1q_s64((int64x2_t)0, v129), vdupq_n_s64(v65 & 0x3F));
  int8x16_t v132 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
  int8x16_t v133 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
  if (v130 + (v65 & 0x3F) >= 0x81) {
    int8x16_t v133 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), v133);
  }
  if (v23 || (uint64_t v134 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v134) - (v130 + v65) >= 9))
  {
LABEL_64:
    uint64_t v134 = 0;
    v191 |= 255 << (8 * ((&v191 + 7) & 7u));
    *a1 = 0;
    *(void *)((char *)a1 + a2) = 0;
    *(void *)((char *)a1 + 2 * a2) = 0;
    *(void *)((char *)a1 + 3 * a2) = 0;
  }
  else
  {
    int32x2_t v136 = vzip1_s32(*(int32x2_t *)v49.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
    int32x2_t v137 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL));
    v138.i64[0] = v136.u32[0];
    v138.i64[1] = v136.u32[1];
    int64x2_t v139 = v138;
    v138.i64[0] = v137.u32[0];
    v138.i64[1] = v137.u32[1];
    int64x2_t v140 = (int64x2_t)vshlq_u64((uint64x2_t)v46, (uint64x2_t)vnegq_s64(v139));
    int64x2_t v141 = (int64x2_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v46.i8 = vmovn_s64((int64x2_t)v46);
    *(int32x2_t *)v140.i8 = vmovn_s64(v140);
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v141.i8 = vmovn_s64(v141);
    int16x8_t v142 = (int16x8_t)vzip1q_s32((int32x4_t)v46, (int32x4_t)v140);
    int16x8_t v143 = (int16x8_t)vzip1q_s32((int32x4_t)v77, (int32x4_t)v141);
    int16x8_t v144 = (int16x8_t)vshlq_u32((uint32x4_t)v142, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v48.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))));
    int16x8_t v145 = (int16x8_t)vshlq_u32((uint32x4_t)v143, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v68, v68, 8uLL)))));
    *(int16x4_t *)v142.i8 = vmovn_s32((int32x4_t)v142);
    *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
    *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
    *(int16x4_t *)v145.i8 = vmovn_s32((int32x4_t)v145);
    int8x16_t v146 = (int8x16_t)vzip1q_s16(v142, v144);
    int8x16_t v147 = (int8x16_t)vzip1q_s16(v143, v145);
    int8x16_t v148 = (int8x16_t)vshlq_u16((uint16x8_t)v146, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    int8x16_t v149 = (int8x16_t)vshlq_u16((uint16x8_t)v147, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v146.i8 = vmovn_s16((int16x8_t)v146);
    *(int8x8_t *)v148.i8 = vmovn_s16((int16x8_t)v148);
    *(int8x8_t *)v147.i8 = vmovn_s16((int16x8_t)v147);
    *(int8x8_t *)v149.i8 = vmovn_s16((int16x8_t)v149);
    v150.i64[0] = 0x808080808080808;
    v150.i64[1] = 0x808080808080808;
    v151.i64[0] = 0x808080808080808;
    v151.i64[1] = 0x808080808080808;
    unint64_t v152 = v7 >> 4;
    int8x16_t v153 = vzip1q_s8(v146, v148);
    v148.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v148.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v154 = vzip1q_s8(v147, v149);
    v149.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v149.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v155 = vsubq_s8(v151, v67);
    *(int32x2_t *)v143.i8 = vzip1_s32(*(int32x2_t *)v126.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL));
    v156.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v156.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v157.i64[0] = 0x808080808080808;
    v157.i64[1] = 0x808080808080808;
    int8x16_t v158 = vaddq_s8(v67, v149);
    v138.i64[0] = v143.u32[0];
    v138.i64[1] = v143.u32[1];
    int8x16_t v159 = vshlq_s8(vshlq_s8(v153, vsubq_s8(v150, v47)), vaddq_s8(v47, v148));
    int8x16_t v160 = vshlq_s8(vshlq_s8(v154, vsubq_s8(v151, v59)), vaddq_s8(v59, v149));
    int8x16_t v161 = vshlq_s8(vshlq_s8(v75, v155), v158);
    int8x16_t v162 = vshlq_s8(vshlq_s8(v109, vsubq_s8(v151, v81)), vaddq_s8(v81, v149));
    int64x2_t v163 = (int64x2_t)vshlq_u64((uint64x2_t)v133, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v158.i8 = vmovn_s64((int64x2_t)v133);
    *(int32x2_t *)v163.i8 = vmovn_s64(v163);
    int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v158, (int32x4_t)v163);
    int16x8_t v165 = (int16x8_t)vshlq_u32((uint32x4_t)v164, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v125.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v125, v125, 8uLL)))));
    *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
    *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
    int8x16_t v166 = (int8x16_t)vzip1q_s16(v164, v165);
    int8x16_t v167 = (int8x16_t)vshlq_u16((uint16x8_t)v166, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v102.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL)))));
    *(int8x8_t *)v166.i8 = vmovn_s16((int16x8_t)v166);
    *(int8x8_t *)v167.i8 = vmovn_s16((int16x8_t)v167);
    int8x16_t v168 = vshlq_s8(vshlq_s8(vzip1q_s8(v166, v167), vsubq_s8(v157, v102)), vaddq_s8(v102, v156));
    if (v60 == 2)
    {
      v169.i64[0] = 0xFFFF0000FFFF0000;
      v169.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v170 = vmlaq_s8(vandq_s8(vdupq_n_s8(v64), v169), vdupq_n_s8(v62), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v160 = vaddq_s8(v160, v170);
      int8x16_t v161 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v64), v170), v161);
      int8x16_t v162 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62), v170), v162);
      int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62 + 2 * v64), v170), v168);
    }
    int8x8_t v171 = (int8x8_t)vdupq_n_s8(v152).u64[0];
    int8x16_t v172 = vaddq_s8(vandq_s8(v159, v31), v160);
    int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v159.i8, 0);
    int8x16_t v174 = vsubq_s8(v172, vandq_s8(v173, v31));
    int8x16_t v175 = vsubq_s8(v161, vandq_s8(v173, v30));
    int8x16_t v176 = vsubq_s8(v162, vandq_s8(v173, v28));
    int8x16_t v177 = vsubq_s8(v168, vandq_s8(v173, v24));
    v178.i64[0] = 0x101010101010101;
    v178.i64[1] = 0x101010101010101;
    if (vaddlvq_s8(vceqq_s8(v11, v178)))
    {
      int8x16_t v179 = v174;
      v179.i8[0] = v174.i8[7];
      v179.i8[7] = v174.i8[0];
      int8x16_t v180 = vnegq_s8(vandq_s8(v9, v178));
      int8x16_t v181 = vbslq_s8(v180, v179, v174);
      int8x16_t v182 = vaddq_s8(v181, vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73B0), v180));
      v174.i64[0] = vaddq_s8(v182, vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73C0), v180)).u64[0];
      int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA73D0), v180), v175);
      v175.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA73E0), v180), v183).u64[0];
      int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA73F0), v180), v176);
      v176.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA7400), v180), v184).u64[0];
      int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7410), v180), v177);
      v177.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA7420), v180), v185).u64[0];
    }
    int16x4_t v186 = (int16x4_t)vadd_s8(v171, *(int8x8_t *)v174.i8);
    int16x4_t v187 = (int16x4_t)vadd_s8(*(int8x8_t *)v176.i8, v171);
    *a1 = vuzp1_s16(v186, v187);
    *(int16x4_t *)((char *)a1 + a2) = vuzp2_s16(v186, v187);
    int32x2_t v188 = (int16x4_t *)((char *)a1 + 2 * a2);
    int16x4_t v189 = (int16x4_t)vadd_s8(*(int8x8_t *)v175.i8, v171);
    int16x4_t v190 = (int16x4_t)vadd_s8(*(int8x8_t *)v177.i8, v171);
    *int32x2_t v188 = vuzp1_s16(v189, v190);
    *(int16x4_t *)((char *)v188 + a2) = vuzp2_s16(v189, v190);
  }
  return v134;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(int8x8_t *a1, char *a2, int16x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, double a7, double a8, double a9, double a10, double a11, double a12, int8x8_t a13)
{
  int16x4_t v14 = *(int16x4_t *)((char *)a3 + a4);
  int8x8_t v15 = (int8x8_t)vzip1_s16(*a3, v14);
  int16x4_t v16 = vzip2_s16(*a3, v14);
  *(int8x8_t *)v17.i8 = v15;
  v17.u64[1] = (unint64_t)v15;
  *(int16x4_t *)v18.i8 = v16;
  v18.u64[1] = (unint64_t)v16;
  unint64_t v19 = (int16x4_t *)((char *)a3 + 2 * a4);
  int8x8_t v20 = (int8x8_t)*v19;
  int16x4_t v21 = *(int16x4_t *)((char *)v19 + a4);
  int16x4_t v22 = vzip1_s16(*v19, v21);
  int16x4_t v23 = vzip2_s16(*v19, v21);
  *(int16x4_t *)v24.i8 = v22;
  v24.u64[1] = (unint64_t)v22;
  *(int16x4_t *)v25.i8 = v23;
  v25.u64[1] = (unint64_t)v23;
  int8x16_t v26 = vdupq_lane_s8(v15, 0);
  int8x16_t v27 = vsubq_s8(v17, v26);
  int8x16_t v28 = vsubq_s8(v24, v26);
  int8x16_t v29 = vsubq_s8(v18, v26);
  int8x16_t v30 = vsubq_s8(v25, v26);
  v20.i8[0] = vmaxvq_s8(v27);
  v21.i8[0] = vminvq_s8(v27);
  int8x16_t v31 = vdupq_lane_s8(v20, 0);
  int8x16_t v32 = vdupq_lane_s8((int8x8_t)v21, 0);
  v33.i64[0] = 0x8080808080808080;
  v33.i64[1] = 0x8080808080808080;
  int8x16_t v34 = vmaxq_s8(v31, v33);
  v33.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v33.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v35 = vminq_s8(v32, v33);
  int8x16_t v36 = vzip1q_s8(v31, v32);
  int8x16_t v37 = vceqzq_s8(v36);
  int8x16_t v38 = vclsq_s8(v36);
  v39.i64[0] = 0x808080808080808;
  v39.i64[1] = 0x808080808080808;
  int8x16_t v40 = vsubq_s8(v39, v38);
  int8x16_t v41 = vbicq_s8(v40, v37);
  v40.i8[0] = vmaxvq_s8(v28);
  a13.i8[0] = vminvq_s8(v28);
  int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
  int8x16_t v43 = vdupq_lane_s8(a13, 0);
  int8x16_t v44 = vpmaxq_s8(v41, v41);
  int8x16_t v45 = vmaxq_s8(v34, v42);
  int8x16_t v46 = vminq_s8(v35, v43);
  int8x16_t v47 = vzip1q_s8(v42, v43);
  int8x16_t v48 = vceqzq_s8(v47);
  int8x16_t v49 = vbicq_s8(vsubq_s8(v39, vclsq_s8(v47)), v48);
  int8x16_t v50 = vpmaxq_s8(v49, v49);
  v48.i8[0] = vmaxvq_s8(v29);
  int8x16_t v51 = vdupq_lane_s8(*(int8x8_t *)v48.i8, 0);
  v42.i8[0] = vminvq_s8(v29);
  int8x16_t v52 = vdupq_lane_s8(*(int8x8_t *)v42.i8, 0);
  int8x16_t v53 = vmaxq_s8(v45, v51);
  int8x16_t v54 = vminq_s8(v46, v52);
  int8x16_t v55 = vzip1q_s8(v51, v52);
  int8x16_t v56 = vceqzq_s8(v55);
  int8x16_t v57 = vbicq_s8(vsubq_s8(v39, vclsq_s8(v55)), v56);
  int8x16_t v58 = vpmaxq_s8(v57, v57);
  v56.i8[0] = vmaxvq_s8(v30);
  v13.i8[0] = vminvq_s8(v30);
  int8x16_t v59 = vdupq_lane_s8(*(int8x8_t *)v56.i8, 0);
  int8x16_t v60 = vdupq_lane_s8(v13, 0);
  int8x16_t v61 = vmaxq_s8(v53, v59);
  int8x16_t v62 = vminq_s8(v54, v60);
  int8x16_t v63 = vzip1q_s8(v59, v60);
  int8x16_t v64 = vbicq_s8(vsubq_s8(v39, vclsq_s8(v63)), vceqzq_s8(v63));
  int8x16_t v65 = vpmaxq_s8(v64, v64);
  int8x16_t v66 = vmaxq_s8(vmaxq_s8(v44, v50), vmaxq_s8(v58, v65));
  int8x16_t v67 = vclzq_s8(vsubq_s8(v61, v62));
  int8x16_t v68 = vsubq_s8(v39, v67);
  int8x16_t v69 = vcgtq_s8(v66, v68);
  int8x16_t v70 = vbslq_s8(v69, v68, v66);
  if (vmaxvq_s8(v70))
  {
    char v71 = 0;
    unint64_t v72 = 0;
    v73.i64[0] = -1;
    v73.i64[1] = -1;
    v74.i64[0] = 0x707070707070707;
    v74.i64[1] = 0x707070707070707;
    int8x16_t v75 = vandq_s8(vsubq_s8(vshlq_s8(v73, vsubq_s8(v74, v67)), v62), v69);
    v76.i64[0] = 0x303030303030303;
    v76.i64[1] = 0x303030303030303;
    int8x16_t v77 = vorrq_s8(vandq_s8(v69, v39), vandq_s8(vceqzq_s8(v70), v76));
    int8x16_t v78 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v44), v76), (int8x16_t)0);
    int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v50), v76), (int8x16_t)0);
    int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v58), v76), (int8x16_t)0);
    int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v65), v76), (int8x16_t)0);
    int8x16_t v82 = vsubq_s8(v70, v78);
    int8x16_t v83 = vsubq_s8(v70, v79);
    int8x16_t v84 = vsubq_s8(v70, v80);
    int8x16_t v85 = vsubq_s8(v70, v81);
    int8x16_t v86 = vceqq_s8(vaddq_s8(v81, v80), vnegq_s8(vaddq_s8(v78, v79)));
    v79.i64[0] = 0x404040404040404;
    v79.i64[1] = 0x404040404040404;
    int8x16_t v87 = vorrq_s8(vbicq_s8(v79, v86), v77);
    if (a5 >= 4 && a6 >= 2)
    {
      int16x4_t v408 = v22;
      int16x4_t v409 = v23;
      int8x8_t v410 = v15;
      int16x4_t v411 = v16;
      int8x16_t v413 = v75;
      v88.i32[0] = v15.u8[2];
      v88.i32[1] = v15.u8[1];
      int32x2_t v89 = vshl_n_s32(vsub_s32(v88, vdup_n_s32(v15.u8[0])), 0x1CuLL);
      int v90 = v89.i32[1] >> 28;
      int8x8_t v91 = (int8x8_t)vshl_s32(v89, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v92 = v89.i32[0];
      v93.i64[0] = 0xFFFF0000FFFF0000;
      v93.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v94 = vmlaq_s8(vandq_s8(vdupq_n_s8(v89.i32[0] >> 28), v93), vdupq_n_s8(v89.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v95 = vsubq_s8(v27, v94);
      int8x16_t v96 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v91.i32[0]), v28), v94);
      int8x16_t v97 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v91.i32[1]), v29), v94);
      int8x16_t v98 = vaddq_s8(vdupq_n_s8(-v91.i32[0] - v91.i32[1]), v30);
      int8x16_t v99 = vsubq_s8(v98, v94);
      v98.i8[0] = vmaxvq_s8(v95);
      int8x16_t v403 = v96;
      int8x16_t v405 = v95;
      v91.i8[0] = vminvq_s8(v95);
      int8x16_t v100 = vdupq_lane_s8(*(int8x8_t *)v98.i8, 0);
      int8x16_t v101 = vdupq_lane_s8(v91, 0);
      v102.i64[0] = 0x8080808080808080;
      v102.i64[1] = 0x8080808080808080;
      int8x16_t v103 = vmaxq_s8(v100, v102);
      v94.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v94.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v104 = vminq_s8(v101, v94);
      int8x16_t v105 = vzip1q_s8(v100, v101);
      int8x16_t v106 = vceqzq_s8(v105);
      v107.i64[0] = 0x808080808080808;
      v107.i64[1] = 0x808080808080808;
      int8x16_t v108 = vbicq_s8(vsubq_s8(v107, vclsq_s8(v105)), v106);
      int8x16_t v109 = vpmaxq_s8(v108, v108);
      v106.i8[0] = vmaxvq_s8(v96);
      v96.i8[0] = vminvq_s8(v96);
      int8x16_t v110 = vdupq_lane_s8(*(int8x8_t *)v106.i8, 0);
      int8x16_t v111 = vdupq_lane_s8(*(int8x8_t *)v96.i8, 0);
      int8x16_t v112 = vmaxq_s8(v103, v110);
      int8x16_t v113 = vminq_s8(v104, v111);
      int8x16_t v114 = vzip1q_s8(v110, v111);
      int8x16_t v115 = vceqzq_s8(v114);
      int8x16_t v116 = vbicq_s8(vsubq_s8(v107, vclsq_s8(v114)), v115);
      int8x16_t v117 = vpmaxq_s8(v116, v116);
      v115.i8[0] = vmaxvq_s8(v97);
      int8x16_t v401 = v97;
      v97.i8[0] = vminvq_s8(v97);
      int8x16_t v118 = vdupq_lane_s8(*(int8x8_t *)v115.i8, 0);
      int8x16_t v119 = vdupq_lane_s8(*(int8x8_t *)v97.i8, 0);
      int8x16_t v120 = vmaxq_s8(v112, v118);
      int8x16_t v121 = vminq_s8(v113, v119);
      int8x16_t v122 = vzip1q_s8(v118, v119);
      int8x16_t v123 = vceqzq_s8(v122);
      int8x16_t v124 = vbicq_s8(vsubq_s8(v107, vclsq_s8(v122)), v123);
      int8x16_t v125 = vpmaxq_s8(v124, v124);
      v123.i8[0] = vmaxvq_s8(v99);
      int8x16_t v398 = v99;
      v99.i8[0] = vminvq_s8(v99);
      int8x16_t v126 = vdupq_lane_s8(*(int8x8_t *)v123.i8, 0);
      int8x16_t v127 = vdupq_lane_s8(*(int8x8_t *)v99.i8, 0);
      int8x16_t v407 = v30;
      int8x16_t v128 = vminq_s8(v121, v127);
      int8x16_t v129 = vzip1q_s8(v126, v127);
      int8x16_t v130 = vbicq_s8(vsubq_s8(v107, vclsq_s8(v129)), vceqzq_s8(v129));
      int8x16_t v131 = vpmaxq_s8(v130, v130);
      int8x16_t v132 = vmaxq_s8(vmaxq_s8(v109, v117), vmaxq_s8(v125, v131));
      int8x16_t v133 = vclzq_s8(vsubq_s8(vmaxq_s8(v120, v126), v128));
      int8x16_t v134 = vsubq_s8(v107, v133);
      int8x16_t v135 = vcgtq_s8(v132, v134);
      int8x16_t v136 = vbslq_s8(v135, v134, v132);
      v107.i64[0] = 0x202020202020202;
      v107.i64[1] = 0x202020202020202;
      v132.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v132.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v137 = vbslq_s8(v135, v132, v107);
      v132.i64[0] = 0x101010101010101;
      v132.i64[1] = 0x101010101010101;
      int8x16_t v138 = vmaxq_s8(v136, v132);
      v107.i64[0] = 0x303030303030303;
      v107.i64[1] = 0x303030303030303;
      int8x16_t v139 = vmaxq_s8(vminq_s8(vsubq_s8(v138, v109), v107), (int8x16_t)0);
      int8x16_t v140 = vmaxq_s8(vminq_s8(vsubq_s8(v138, v117), v107), (int8x16_t)0);
      int8x16_t v141 = vmaxq_s8(vminq_s8(vsubq_s8(v138, v125), v107), (int8x16_t)0);
      int8x16_t v142 = vminq_s8(vsubq_s8(v138, v131), v107);
      int8x16_t v143 = v83;
      int8x16_t v144 = vmaxq_s8(v142, (int8x16_t)0);
      int8x16_t v145 = vsubq_s8(v138, v139);
      int8x16_t v146 = vsubq_s8(v138, v140);
      int8x16_t v147 = vsubq_s8(v138, v141);
      int8x16_t v148 = vsubq_s8(v138, v144);
      int8x16_t v149 = vceqq_s8(vaddq_s8(v144, v141), vnegq_s8(vaddq_s8(v139, v140)));
      v141.i64[0] = 0x404040404040404;
      v141.i64[1] = 0x404040404040404;
      int8x16_t v150 = vorrq_s8(vbicq_s8(v141, v149), v137);
      v95.i64[0] = 0x8000800080008;
      v95.i64[1] = 0x8000800080008;
      uint16x8_t v151 = vmovl_u8(*(uint8x8_t *)v87.i8);
      unsigned long long v152 = *(_OWORD *)&v151 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
      int8x16_t v153 = v85;
      int8x16_t v412 = (int8x16_t)vmovl_s8(*(int8x8_t *)v70.i8);
      unsigned long long v154 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v87.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
      unsigned long long v155 = *(_OWORD *)&v151 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
      v156.i64[0] = 0x2000200020002;
      v156.i64[1] = 0x2000200020002;
      int16x8_t v157 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v84.i8, *(int8x8_t *)v143.i8), *(int8x8_t *)v85.i8), 3uLL);
      int8x16_t v158 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v412, (int8x16_t)vceqzq_s16((int16x8_t)v152)), (int16x8_t)v154), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)v155, v156), v95)), *(int8x8_t *)v82.i8, (int8x8_t)0x707070707070707), v157), vaddq_s16(vmlal_s8((int16x8_t)vaddl_u8((uint8x8_t)vbic_s8(
                                                                                *(int8x8_t *)v138.i8,
                                                                                (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v150.i8)), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v150.i8, *(int8x8_t *)v150.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v145.i8, (int8x8_t)0x707070707070707), vaddq_s16(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v147.i8, *(int8x8_t *)v146.i8), *(int8x8_t *)v148.i8), 3uLL), (int16x8_t)v95)))), 0);
      unsigned __int16 v159 = vaddlvq_s8(v158);
      unint64_t v72 = v90 & 0xF | HIBYTE(v92);
      int v160 = v159;
      if (v159)
      {
        v161.i64[0] = 0x707070707070707;
        v161.i64[1] = 0x707070707070707;
        int8x16_t v162 = vsubq_s8(v161, v133);
        v161.i64[0] = -1;
        v161.i64[1] = -1;
        int8x16_t v135 = vandq_s8(vsubq_s8(vshlq_s8(v161, v162), v128), v135);
        int8x16_t v400 = vbslq_s8(v158, v405, v27);
        int8x16_t v163 = vbslq_s8(v158, v403, v28);
        int8x16_t v404 = vbslq_s8(v158, v401, v29);
        int8x16_t v406 = v163;
        int8x16_t v30 = vbslq_s8(v158, v398, v407);
        int8x16_t v413 = vbslq_s8(v158, v135, v413);
        int8x16_t v70 = vbslq_s8(v158, v138, v70);
        int8x16_t v164 = vbslq_s8(v158, v150, v87);
        uint16x8_t v165 = vmovl_u8(*(uint8x8_t *)v164.i8);
        unsigned long long v152 = *(_OWORD *)&v165 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
        int8x16_t v412 = (int8x16_t)vmovl_s8(*(int8x8_t *)v70.i8);
        int8x16_t v395 = v164;
        int8x16_t v396 = vbslq_s8(v158, v145, v82);
        unsigned long long v154 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v164.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
        unsigned long long v155 = *(_OWORD *)&v165 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
        int16x8_t v166 = vmull_s8(*(int8x8_t *)v396.i8, (int8x8_t)0x707070707070707);
        int8x16_t v397 = vbslq_s8(v158, v146, v143);
        int8x16_t v399 = vbslq_s8(v158, v147, v84);
        int8x16_t v402 = vbslq_s8(v158, v148, v153);
        int16x8_t v157 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v399.i8, *(int8x8_t *)v397.i8), *(int8x8_t *)v402.i8), 3uLL);
      }
      else
      {
        int8x16_t v395 = v87;
        int8x16_t v396 = v82;
        int8x16_t v397 = v143;
        int8x16_t v399 = v84;
        int8x16_t v400 = v27;
        int8x16_t v402 = v153;
        int8x16_t v404 = v29;
        int8x16_t v406 = v28;
        int16x8_t v166 = vmull_s8(*(int8x8_t *)v82.i8, (int8x8_t)0x707070707070707);
        int8x16_t v30 = v407;
      }
      v169.i64[0] = 0x808080808080808;
      v169.i64[1] = 0x808080808080808;
      v170.i64[0] = 0x303030303030303;
      v170.i64[1] = 0x303030303030303;
      v171.i64[0] = 0x202020202020202;
      v171.i64[1] = 0x202020202020202;
      v172.i64[0] = 0x8080808080808080;
      v172.i64[1] = 0x8080808080808080;
      v173.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v173.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v174.i64[0] = 0x404040404040404;
      v174.i64[1] = 0x404040404040404;
      int8x16_t v175 = v24;
      v175.i8[7] = v17.i8[7];
      int8x16_t v176 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7430));
      int8x16_t v177 = vsubq_s8(v24, vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7440));
      int8x16_t v178 = v18;
      v178.i8[7] = v17.i8[7];
      int8x16_t v179 = vsubq_s8(v18, vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7450));
      int8x16_t v180 = v25;
      v180.i8[7] = v17.i8[7];
      int8x16_t v181 = vqtbl1q_s8(v180, (int8x16_t)xmmword_242EA7460);
      int8x16_t v182 = vsubq_s8(v25, v181);
      int8x16_t v183 = v176;
      v183.i8[0] = v176.i8[7];
      v183.i8[7] = v176.i8[0];
      v176.i8[0] = vmaxvq_s8(v183);
      v181.i8[0] = vminvq_s8(v183);
      int8x16_t v184 = vdupq_lane_s8(*(int8x8_t *)v176.i8, 0);
      int8x16_t v185 = vdupq_lane_s8(*(int8x8_t *)v181.i8, 0);
      int8x16_t v186 = vmaxq_s8(v184, v172);
      int8x16_t v187 = vminq_s8(v185, v173);
      int8x16_t v188 = vzip1q_s8(v184, v185);
      int8x16_t v189 = vbicq_s8(vsubq_s8(v169, vclsq_s8(v188)), vceqzq_s8(v188));
      int8x16_t v190 = vpmaxq_s8(v189, v189);
      v189.i8[0] = vmaxvq_s8(v177);
      v173.i8[0] = vminvq_s8(v177);
      int8x16_t v191 = vdupq_lane_s8(*(int8x8_t *)v189.i8, 0);
      int8x16_t v192 = vdupq_lane_s8(*(int8x8_t *)v173.i8, 0);
      int8x16_t v193 = vmaxq_s8(v186, v191);
      int8x16_t v194 = vminq_s8(v187, v192);
      int8x16_t v195 = vzip1q_s8(v191, v192);
      int8x16_t v196 = vbicq_s8(vsubq_s8(v169, vclsq_s8(v195)), vceqzq_s8(v195));
      int8x16_t v197 = vpmaxq_s8(v196, v196);
      v196.i8[0] = vmaxvq_s8(v179);
      v135.i8[0] = vminvq_s8(v179);
      int8x16_t v198 = vdupq_lane_s8(*(int8x8_t *)v196.i8, 0);
      int8x16_t v199 = vdupq_lane_s8(*(int8x8_t *)v135.i8, 0);
      int8x16_t v200 = vmaxq_s8(v193, v198);
      int8x16_t v201 = vminq_s8(v194, v199);
      int8x16_t v202 = vzip1q_s8(v198, v199);
      int8x16_t v203 = vceqzq_s8(v202);
      int8x16_t v204 = vbicq_s8(vsubq_s8(v169, vclsq_s8(v202)), v203);
      int8x16_t v205 = vpmaxq_s8(v204, v204);
      v204.i8[0] = vmaxvq_s8(v182);
      v203.i8[0] = vminvq_s8(v182);
      int8x16_t v206 = vdupq_lane_s8(*(int8x8_t *)v204.i8, 0);
      int8x16_t v207 = vdupq_lane_s8(*(int8x8_t *)v203.i8, 0);
      int8x16_t v208 = vmaxq_s8(v200, v206);
      int8x16_t v209 = vminq_s8(v201, v207);
      int8x16_t v210 = vzip1q_s8(v206, v207);
      int8x16_t v211 = vbicq_s8(vsubq_s8(v169, vclsq_s8(v210)), vceqzq_s8(v210));
      int8x16_t v212 = vpmaxq_s8(v211, v211);
      int8x16_t v213 = vmaxq_s8(vmaxq_s8(v190, v197), vmaxq_s8(v205, v212));
      int8x16_t v214 = vclzq_s8(vsubq_s8(v208, v209));
      int8x16_t v215 = vsubq_s8(v169, v214);
      int8x16_t v216 = vcgtq_s8(v213, v215);
      int8x16_t v217 = vbslq_s8(v216, v215, v213);
      v215.i64[0] = 0x909090909090909;
      v215.i64[1] = 0x909090909090909;
      int8x16_t v218 = vorrq_s8(vandq_s8(vceqzq_s8(v217), v171), vsubq_s8(vandq_s8(v216, v215), vmvnq_s8(v216)));
      int8x16_t v219 = vmaxq_s8(vminq_s8(vsubq_s8(v217, v190), v170), (int8x16_t)0);
      int8x16_t v220 = vmaxq_s8(vminq_s8(vsubq_s8(v217, v197), v170), (int8x16_t)0);
      int8x16_t v221 = vmaxq_s8(vminq_s8(vsubq_s8(v217, v205), v170), (int8x16_t)0);
      int8x16_t v222 = vmaxq_s8(vminq_s8(vsubq_s8(v217, v212), v170), (int8x16_t)0);
      int8x16_t v223 = vsubq_s8(v217, v219);
      int8x16_t v224 = vsubq_s8(v217, v220);
      int8x16_t v225 = vsubq_s8(v217, v221);
      int8x16_t v226 = vsubq_s8(v217, v222);
      int8x16_t v227 = vorrq_s8(vbicq_s8(v174, vceqq_s8(vaddq_s8(v222, v221), vnegq_s8(vaddq_s8(v219, v220)))), v218);
      v228.i64[0] = 0x2000200020002;
      v228.i64[1] = 0x2000200020002;
      int8x16_t v229 = (int8x16_t)vceqq_s16((int16x8_t)v155, v228);
      v228.i64[0] = 0x8000800080008;
      v228.i64[1] = 0x8000800080008;
      int8x16_t v230 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v412, (int8x16_t)vceqzq_s16((int16x8_t)v152)), (int16x8_t)v154), vaddq_s16((int16x8_t)vandq_s8(v229, (int8x16_t)v228), v166)), v157), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v217.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v227.i8))),
                                                                   (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v227.i8, *(int8x8_t *)v227.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v223.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v225.i8, *(int8x8_t *)v224.i8), *(int8x8_t *)v226.i8), 3uLL)))), 0);
      v219.i16[0] = vaddlvq_s8(v230);
      int v231 = v219.u16[0];
      if (v219.i16[0])
      {
        v232.i64[0] = 0x707070707070707;
        v232.i64[1] = 0x707070707070707;
        int8x16_t v233 = vsubq_s8(v232, v214);
        v234.i64[0] = -1;
        v234.i64[1] = -1;
        v26.i8[0] = vbslq_s8(v230, vextq_s8(v17, v17, 0xFuLL), v26).u8[0];
        int8x16_t v27 = vbslq_s8(v230, v183, v400);
        int8x16_t v28 = vbslq_s8(v230, v177, v406);
        int8x16_t v29 = vbslq_s8(v230, v179, v404);
        int8x16_t v30 = vbslq_s8(v230, v182, v30);
        int8x16_t v82 = vbslq_s8(v230, v223, v396);
        int8x16_t v83 = vbslq_s8(v230, v224, v397);
        int8x16_t v84 = vbslq_s8(v230, v225, v399);
        int8x16_t v85 = vbslq_s8(v230, v226, v402);
        int8x16_t v75 = vbslq_s8(v230, vandq_s8(vsubq_s8(vshlq_s8(v234, v233), v209), v216), v413);
        int8x16_t v70 = vbslq_s8(v230, v217, v70);
        int8x16_t v87 = vbslq_s8(v230, v227, v395);
      }
      else
      {
        int8x16_t v29 = v404;
        int8x16_t v28 = v406;
        int8x16_t v75 = v413;
        int8x16_t v27 = v400;
        int8x16_t v85 = v402;
        int8x16_t v83 = v397;
        int8x16_t v84 = v399;
        int8x16_t v87 = v395;
        int8x16_t v82 = v396;
      }
      int8x8_t v15 = v410;
      int16x4_t v16 = v411;
      int16x4_t v22 = v408;
      int16x4_t v23 = v409;
      if (v160) {
        BOOL v235 = v231 == 0;
      }
      else {
        BOOL v235 = 0;
      }
      char v71 = v235;
    }
    int8x16_t v236 = (int8x16_t)vmovl_s8(*(int8x8_t *)v87.i8);
    v237.i64[0] = 0x8000800080008;
    v237.i64[1] = 0x8000800080008;
    v238.i64[0] = 0x3000300030003;
    v238.i64[1] = 0x3000300030003;
    v239.i64[0] = 0x2000200020002;
    v239.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v70.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v236, v237))).u16[0]+ ((2 * v236.i16[0]) & 8)+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v236, v238), v239), v237).u16[0]- v82.i8[0]+ 8 * v82.i8[0]+ 8 * vaddq_s8(v84, vaddq_s8(v83, v85)).i8[0])+ 19) >= 0x100)
    {
      *a1 = v15;
      a1[1] = (int8x8_t)v22;
      char v167 = 31;
      unint64_t v168 = 32;
      a1[2] = (int8x8_t)v16;
      a1[3] = (int8x8_t)v23;
    }
    else
    {
      int8x16_t v240 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v241 = 8 * (a1 & 7);
      if (v241) {
        uint64_t v242 = *v240 & ~(-1 << v241);
      }
      else {
        uint64_t v242 = 0;
      }
      int8x16_t v243 = vextq_s8(v82, (int8x16_t)0, 8uLL);
      int8x16_t v244 = vextq_s8(v83, (int8x16_t)0, 8uLL);
      int8x16_t v245 = vextq_s8(v84, (int8x16_t)0, 8uLL);
      int8x16_t v246 = vextq_s8(v85, (int8x16_t)0, 8uLL);
      if (v70.i8[0]) {
        int v247 = (16 * v70.i8[0] + 112) & 0x70;
      }
      else {
        int v247 = 0;
      }
      *a2 = 32 * v87.i8[0];
      unint64_t v248 = (v247 & 0xFFFF807F | v87.i8[0] & 8 | ((unint64_t)v26.u8[0] << 7)) >> 3;
      unint64_t v249 = (v248 << v241) | v242;
      if (v241 >= 0x34)
      {
        *int8x16_t v240 = v249;
        unint64_t v249 = v248 >> (-8 * (a1 & 7u));
      }
      int8x16_t v250 = vdupq_lane_s8(*(int8x8_t *)v70.i8, 0);
      unint64_t v251 = v241 + 12;
      int8x16_t v252 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v236.i8, (int8x8_t)0x4000400040004))));
      v253.i64[0] = 0x202020202020202;
      v253.i64[1] = 0x202020202020202;
      int8x16_t v254 = vandq_s8(v252, v253);
      v253.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v253.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v255.i64[0] = -1;
      v255.i64[1] = -1;
      uint8x16_t v256 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v255, (uint8x16_t)vorrq_s8(v254, v253)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v250, vzip1q_s8(v243, v244)), (int16x8_t)vsubq_s8(v250, vzip1q_s8(v245, v246))).u32[0]);
      int16x8_t v257 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v254.i8);
      uint16x8_t v258 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v256.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v257)), (int16x8_t)vmovl_high_u8(v256));
      uint16x8_t v259 = (uint16x8_t)vpaddq_s16(v257, (int16x8_t)vmovl_high_u8((uint8x16_t)v254));
      int32x4_t v260 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v259.i8);
      int32x4_t v261 = (int32x4_t)vmovl_high_u16(v259);
      int32x4_t v262 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v258.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v260)), (int32x4_t)vshlq_u32(vmovl_high_u16(v258), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v261)));
      int32x4_t v263 = vpaddq_s32(v260, v261);
      v264.i64[0] = v262.u32[0];
      v264.i64[1] = v262.u32[1];
      uint64x2_t v265 = (uint64x2_t)v264;
      v264.i64[0] = v262.u32[2];
      v264.i64[1] = v262.u32[3];
      uint64x2_t v266 = (uint64x2_t)v264;
      v264.i64[0] = v263.u32[0];
      v264.i64[1] = v263.u32[1];
      int64x2_t v267 = v264;
      v264.i64[0] = v263.u32[2];
      v264.i64[1] = v263.u32[3];
      int64x2_t v268 = vpaddq_s64((int64x2_t)vshlq_u64(v265, (uint64x2_t)vzip1q_s64((int64x2_t)0, v267)), (int64x2_t)vshlq_u64(v266, (uint64x2_t)vzip1q_s64((int64x2_t)0, v264)));
      int64x2_t v269 = vpaddq_s64(v267, v264);
      uint64_t v270 = (v241 + 12) & 0x3C;
      unint64_t v271 = (v268.i64[0] << v270) | v249;
      if ((unint64_t)(v269.i64[0] + v270) >= 0x40)
      {
        *(void *)((char *)v240 + ((v251 >> 3) & 8)) = v271;
        unint64_t v271 = (unint64_t)v268.i64[0] >> -(char)v270;
      }
      unint64_t v272 = v269.i64[0] + v251;
      unint64_t v273 = v271 | (v268.i64[1] << v272);
      if ((v272 & 0x3F) + v269.i64[1] >= 0x40)
      {
        *(void *)((char *)v240 + ((v272 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v273;
        unint64_t v273 = (unint64_t)v268.i64[1] >> -(v272 & 0x3F);
        if ((v272 & 0x3F) == 0) {
          unint64_t v273 = 0;
        }
      }
      int8x16_t v274 = vceqq_s8(v70, v82);
      unint64_t v275 = v272 + v269.i64[1];
      v276.i64[0] = 0x808080808080808;
      v276.i64[1] = 0x808080808080808;
      v277.i64[0] = -1;
      v277.i64[1] = -1;
      int8x16_t v278 = vandq_s8(vextq_s8(vtstq_s8(v87, v276), (int8x16_t)0, 0xFuLL), v70);
      v279.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v279.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v280 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v277, (uint8x16_t)vaddq_s8(v278, v279)), v75);
      int16x8_t v281 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v278.i8);
      uint16x8_t v282 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v280.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v281)), (int16x8_t)vmovl_high_u8(v280));
      uint16x8_t v283 = (uint16x8_t)vpaddq_s16(v281, (int16x8_t)vmovl_high_u8((uint8x16_t)v278));
      int32x4_t v284 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v283.i8);
      int32x4_t v285 = (int32x4_t)vmovl_high_u16(v283);
      int32x4_t v286 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v282.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v284)), (int32x4_t)vshlq_u32(vmovl_high_u16(v282), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v285)));
      int32x4_t v287 = vpaddq_s32(v284, v285);
      v288.i64[0] = v286.u32[0];
      v288.i64[1] = v286.u32[1];
      uint64x2_t v289 = (uint64x2_t)v288;
      v288.i64[0] = v286.u32[2];
      v288.i64[1] = v286.u32[3];
      uint64x2_t v290 = (uint64x2_t)v288;
      v288.i64[0] = v287.u32[0];
      v288.i64[1] = v287.u32[1];
      int64x2_t v291 = v288;
      v288.i64[0] = v287.u32[2];
      v288.i64[1] = v287.u32[3];
      int64x2_t v292 = vpaddq_s64((int64x2_t)vshlq_u64(v289, (uint64x2_t)vzip1q_s64((int64x2_t)0, v291)), (int64x2_t)vshlq_u64(v290, (uint64x2_t)vzip1q_s64((int64x2_t)0, v288)));
      int64x2_t v293 = vpaddq_s64(v291, v288);
      unint64_t v294 = (v292.i64[0] << v275) | v273;
      if (v293.i64[0] + (v275 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v240 + ((v275 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
        unint64_t v294 = (unint64_t)v292.i64[0] >> -(v275 & 0x3F);
        if ((v275 & 0x3F) == 0) {
          unint64_t v294 = 0;
        }
      }
      int8x16_t v295 = vandq_s8(v75, v274);
      unint64_t v296 = v293.i64[0] + v275;
      unint64_t v297 = v294 | (v292.i64[1] << v296);
      if ((v296 & 0x3F) + v293.i64[1] >= 0x40)
      {
        *(void *)((char *)v240 + ((v296 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v297;
        unint64_t v297 = (unint64_t)v292.i64[1] >> -(v296 & 0x3F);
        if ((v296 & 0x3F) == 0) {
          unint64_t v297 = 0;
        }
      }
      int8x16_t v298 = vceqq_s8(v70, v83);
      int8x16_t v299 = vaddq_s8(v295, v27);
      unint64_t v300 = v296 + v293.i64[1];
      if (v71)
      {
        v297 |= v72 << v300;
        if ((v300 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v240 + ((v300 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v297;
          unint64_t v297 = v72 >> -(v300 & 0x3F);
        }
        v300 += 8;
      }
      int8x16_t v301 = vandq_s8(v75, v298);
      int16x8_t v302 = (int16x8_t)vmovl_high_u8((uint8x16_t)v243);
      v243.i8[0] = 0;
      v303.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v303.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v304.i64[0] = -1;
      v304.i64[1] = -1;
      uint8x16_t v305 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v304, (uint8x16_t)vaddq_s8(v243, v303)), v299);
      int16x8_t v306 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v243.i8);
      uint16x8_t v307 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v305.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v306)), (int16x8_t)vshlq_u16(vmovl_high_u8(v305), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v302)));
      uint16x8_t v308 = (uint16x8_t)vpaddq_s16(v306, v302);
      int32x4_t v309 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v308.i8);
      int32x4_t v310 = (int32x4_t)vmovl_high_u16(v308);
      int32x4_t v311 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v307.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v309)), (int32x4_t)vshlq_u32(vmovl_high_u16(v307), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v310)));
      int32x4_t v312 = vpaddq_s32(v309, v310);
      v313.i64[0] = v311.u32[0];
      v313.i64[1] = v311.u32[1];
      uint64x2_t v314 = (uint64x2_t)v313;
      v313.i64[0] = v311.u32[2];
      v313.i64[1] = v311.u32[3];
      uint64x2_t v315 = (uint64x2_t)v313;
      v313.i64[0] = v312.u32[0];
      v313.i64[1] = v312.u32[1];
      int64x2_t v316 = v313;
      v313.i64[0] = v312.u32[2];
      v313.i64[1] = v312.u32[3];
      int64x2_t v317 = vpaddq_s64((int64x2_t)vshlq_u64(v314, (uint64x2_t)vzip1q_s64((int64x2_t)0, v316)), (int64x2_t)vshlq_u64(v315, (uint64x2_t)vzip1q_s64((int64x2_t)0, v313)));
      int64x2_t v318 = vpaddq_s64(v316, v313);
      unint64_t v319 = (v317.i64[0] << v300) | v297;
      if (v318.i64[0] + (v300 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v240 + ((v300 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v319;
        unint64_t v319 = (unint64_t)v317.i64[0] >> -(v300 & 0x3F);
        if ((v300 & 0x3F) == 0) {
          unint64_t v319 = 0;
        }
      }
      int8x16_t v320 = vceqq_s8(v70, v84);
      int8x16_t v321 = vaddq_s8(v28, v301);
      unint64_t v322 = v318.i64[0] + v300;
      uint64_t v323 = (v318.i64[0] + v300) & 0x3F;
      unint64_t v324 = v319 | (v317.i64[1] << v322);
      if ((v322 & 0x3F) + v318.i64[1] >= 0x40)
      {
        *(void *)((char *)v240 + ((v322 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v317.i64[1] >> -(char)v323;
        if (!v323) {
          unint64_t v324 = 0;
        }
      }
      int8x16_t v325 = vandq_s8(v75, v320);
      unint64_t v326 = v322 + v318.i64[1];
      v327.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v327.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v328.i64[0] = -1;
      v328.i64[1] = -1;
      uint8x16_t v329 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v328, (uint8x16_t)vaddq_s8(v244, v327)), v321);
      int16x8_t v330 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v244.i8);
      int16x8_t v331 = (int16x8_t)vmovl_high_u8((uint8x16_t)v244);
      uint16x8_t v332 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v329.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v330)), (int16x8_t)vshlq_u16(vmovl_high_u8(v329), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v331)));
      uint16x8_t v333 = (uint16x8_t)vpaddq_s16(v330, v331);
      int32x4_t v334 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v333.i8);
      int32x4_t v335 = (int32x4_t)vmovl_high_u16(v333);
      int32x4_t v336 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v332.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v334)), (int32x4_t)vshlq_u32(vmovl_high_u16(v332), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v335)));
      int32x4_t v337 = vpaddq_s32(v334, v335);
      v338.i64[0] = v336.u32[0];
      v338.i64[1] = v336.u32[1];
      uint64x2_t v339 = (uint64x2_t)v338;
      v338.i64[0] = v336.u32[2];
      v338.i64[1] = v336.u32[3];
      uint64x2_t v340 = (uint64x2_t)v338;
      v338.i64[0] = v337.u32[0];
      v338.i64[1] = v337.u32[1];
      int64x2_t v341 = v338;
      v338.i64[0] = v337.u32[2];
      v338.i64[1] = v337.u32[3];
      int64x2_t v342 = vpaddq_s64((int64x2_t)vshlq_u64(v339, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)), (int64x2_t)vshlq_u64(v340, (uint64x2_t)vzip1q_s64((int64x2_t)0, v338)));
      int64x2_t v343 = vpaddq_s64(v341, v338);
      unint64_t v344 = (v342.i64[0] << v326) | v324;
      if (v343.i64[0] + (v326 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v240 + ((v326 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v344;
        unint64_t v344 = (unint64_t)v342.i64[0] >> -(v326 & 0x3F);
        if ((v326 & 0x3F) == 0) {
          unint64_t v344 = 0;
        }
      }
      int8x16_t v345 = vceqq_s8(v70, v85);
      int8x16_t v346 = vaddq_s8(v29, v325);
      unint64_t v347 = v343.i64[0] + v326;
      unint64_t v348 = v344 | (v342.i64[1] << v347);
      if ((v347 & 0x3F) + v343.i64[1] >= 0x40)
      {
        *(void *)((char *)v240 + ((v347 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v348;
        unint64_t v348 = (unint64_t)v342.i64[1] >> -(v347 & 0x3F);
        if ((v347 & 0x3F) == 0) {
          unint64_t v348 = 0;
        }
      }
      int8x16_t v349 = vandq_s8(v75, v345);
      unint64_t v350 = v347 + v343.i64[1];
      v351.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v351.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v352.i64[0] = -1;
      v352.i64[1] = -1;
      uint8x16_t v353 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v352, (uint8x16_t)vaddq_s8(v245, v351)), v346);
      int16x8_t v354 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v245.i8);
      int16x8_t v355 = (int16x8_t)vmovl_high_u8((uint8x16_t)v245);
      uint16x8_t v356 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v353.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v354)), (int16x8_t)vshlq_u16(vmovl_high_u8(v353), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v355)));
      uint16x8_t v357 = (uint16x8_t)vpaddq_s16(v354, v355);
      int32x4_t v358 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v357.i8);
      int32x4_t v359 = (int32x4_t)vmovl_high_u16(v357);
      int32x4_t v360 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v356.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v358)), (int32x4_t)vshlq_u32(vmovl_high_u16(v356), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v359)));
      int32x4_t v361 = vpaddq_s32(v358, v359);
      v362.i64[0] = v360.u32[0];
      v362.i64[1] = v360.u32[1];
      uint64x2_t v363 = (uint64x2_t)v362;
      v362.i64[0] = v360.u32[2];
      v362.i64[1] = v360.u32[3];
      uint64x2_t v364 = (uint64x2_t)v362;
      v362.i64[0] = v361.u32[0];
      v362.i64[1] = v361.u32[1];
      int64x2_t v365 = v362;
      v362.i64[0] = v361.u32[2];
      v362.i64[1] = v361.u32[3];
      int64x2_t v366 = vpaddq_s64((int64x2_t)vshlq_u64(v363, (uint64x2_t)vzip1q_s64((int64x2_t)0, v365)), (int64x2_t)vshlq_u64(v364, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)));
      int64x2_t v367 = vpaddq_s64(v365, v362);
      unint64_t v368 = (v366.i64[0] << v350) | v348;
      if (v367.i64[0] + (v350 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v240 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v366.i64[0] >> -(v350 & 0x3F);
        if ((v350 & 0x3F) == 0) {
          unint64_t v368 = 0;
        }
      }
      int8x16_t v369 = vaddq_s8(v30, v349);
      unint64_t v370 = v367.i64[0] + v350;
      unint64_t v371 = v368 | (v366.i64[1] << v370);
      if ((v370 & 0x3F) + v367.i64[1] >= 0x40)
      {
        *(void *)((char *)v240 + ((v370 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v371;
        unint64_t v371 = (unint64_t)v366.i64[1] >> -(v370 & 0x3F);
        if ((v370 & 0x3F) == 0) {
          unint64_t v371 = 0;
        }
      }
      unint64_t v372 = v370 + v367.i64[1];
      v373.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v373.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v374.i64[0] = -1;
      v374.i64[1] = -1;
      uint8x16_t v375 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v374, (uint8x16_t)vaddq_s8(v246, v373)), v369);
      int16x8_t v376 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v246.i8);
      int16x8_t v377 = (int16x8_t)vmovl_high_u8((uint8x16_t)v246);
      uint16x8_t v378 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v375.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v376)), (int16x8_t)vshlq_u16(vmovl_high_u8(v375), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v377)));
      uint16x8_t v379 = (uint16x8_t)vpaddq_s16(v376, v377);
      int32x4_t v380 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v379.i8);
      int32x4_t v381 = (int32x4_t)vmovl_high_u16(v379);
      int32x4_t v382 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v378.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v380)), (int32x4_t)vshlq_u32(vmovl_high_u16(v378), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v381)));
      int32x4_t v383 = vpaddq_s32(v380, v381);
      v384.i64[0] = v382.u32[0];
      v384.i64[1] = v382.u32[1];
      uint64x2_t v385 = (uint64x2_t)v384;
      v384.i64[0] = v382.u32[2];
      v384.i64[1] = v382.u32[3];
      uint64x2_t v386 = (uint64x2_t)v384;
      v384.i64[0] = v383.u32[0];
      v384.i64[1] = v383.u32[1];
      int64x2_t v387 = v384;
      v384.i64[0] = v383.u32[2];
      v384.i64[1] = v383.u32[3];
      int64x2_t v388 = vpaddq_s64((int64x2_t)vshlq_u64(v385, (uint64x2_t)vzip1q_s64((int64x2_t)0, v387)), (int64x2_t)vshlq_u64(v386, (uint64x2_t)vzip1q_s64((int64x2_t)0, v384)));
      int64x2_t v389 = vpaddq_s64(v387, v384);
      unint64_t v390 = (v388.i64[0] << v372) | v371;
      if (v389.i64[0] + (v372 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v240 + ((v372 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
        if ((v372 & 0x3F) != 0) {
          unint64_t v390 = (unint64_t)v388.i64[0] >> -(v372 & 0x3F);
        }
        else {
          unint64_t v390 = 0;
        }
      }
      unint64_t v391 = v389.i64[0] + v372;
      unint64_t v392 = v390 | (v388.i64[1] << v391);
      if ((v391 & 0x3F) + v389.i64[1] >= 0x40)
      {
        *(void *)((char *)v240 + ((v391 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v392;
        unint64_t v392 = (unint64_t)v388.i64[1] >> -(v391 & 0x3F);
        if ((v391 & 0x3F) == 0) {
          unint64_t v392 = 0;
        }
      }
      unint64_t v393 = v391 + v389.i64[1];
      if ((v393 & 0x3F) != 0) {
        *(void *)((char *)v240 + ((v393 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v392;
      }
      unint64_t v168 = (v393 - v241 + 7) >> 3;
      char v167 = *a2 | (v168 - 1);
    }
  }
  else
  {
    a1->i8[0] = a3->i8[0];
    char v167 = 96;
    unint64_t v168 = 1;
  }
  *a2 = v167;
  return v168;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x8_t *a3, char *a4, int a5, int a6, double a7, double a8, double a9, double a10, double a11, double a12, int8x8_t a13)
{
  int16x4_t v16 = a3;
  int8x16_t v18 = (int16x4_t *)result;
  if (a5 >= 8) {
    unsigned int v19 = 8;
  }
  else {
    unsigned int v19 = a5;
  }
  if (a6 >= 4) {
    unsigned int v20 = 4;
  }
  else {
    unsigned int v20 = a6;
  }
  if (v19 && v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x4_t *)result, a2, v19, v20, a7, a8, a9, a10, a11, a12, a13);
    int16x4_t v16 = (int8x8_t *)((char *)v16 + result);
  }
  else
  {
    *a4 = 0;
  }
  int16x4_t v21 = a4 + 1;
  if (a5 <= 8) {
    int v22 = 8;
  }
  else {
    int v22 = a5;
  }
  unsigned int v23 = v22 - 8;
  if (v23 >= 8) {
    int v24 = 8;
  }
  else {
    int v24 = v23;
  }
  if (v24 && v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v16, v21, v18 + 1, a2, v24, v20, a7, a8, a9, a10, a11, a12, a13);
    int16x4_t v16 = (int8x8_t *)((char *)v16 + result);
  }
  else
  {
    *int16x4_t v21 = 0;
  }
  uint64_t v25 = 4 * a2;
  int8x16_t v26 = a4 + 2;
  if (a6 <= 4) {
    int v27 = 4;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 4;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v19 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v16, v26, (int16x4_t *)((char *)v18 + v25), a2, v19, v29, a7, a8, a9, a10, a11, a12, a13);
    int16x4_t v16 = (int8x8_t *)((char *)v16 + result);
    int8x16_t v30 = a4 + 3;
    if (!v24) {
      goto LABEL_34;
    }
  }
  else
  {
    *int8x16_t v26 = 0;
    int8x16_t v30 = a4 + 3;
    if (!v24) {
      goto LABEL_34;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v16, v30, (int16x4_t *)((char *)v18 + v25 + 8), a2, v24, v29, a7, a8, a9, a10, a11, a12, a13);
    int16x4_t v16 = (int8x8_t *)((char *)v16 + result);
    goto LABEL_35;
  }
LABEL_34:
  *int8x16_t v30 = 0;
LABEL_35:
  int8x16_t v31 = a4 + 4;
  if (a6 <= 8) {
    int v32 = 8;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 8;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v19 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v16, v31, &v18[a2], a2, v19, v34, a7, a8, a9, a10, a11, a12, a13);
    int16x4_t v16 = (int8x8_t *)((char *)v16 + result);
    int8x16_t v35 = a4 + 5;
    if (!v24) {
      goto LABEL_48;
    }
  }
  else
  {
    *int8x16_t v31 = 0;
    int8x16_t v35 = a4 + 5;
    if (!v24) {
      goto LABEL_48;
    }
  }
  if (v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v16, v35, &v18[a2 + 1], a2, v24, v34, a7, a8, a9, a10, a11, a12, a13);
    int16x4_t v16 = (int8x8_t *)((char *)v16 + result);
    goto LABEL_49;
  }
LABEL_48:
  *int8x16_t v35 = 0;
LABEL_49:
  int8x16_t v36 = a4 + 6;
  if (a6 <= 12) {
    int v37 = 12;
  }
  else {
    int v37 = a6;
  }
  unsigned int v38 = v37 - 12;
  if (v38 >= 4) {
    int v39 = 4;
  }
  else {
    int v39 = v38;
  }
  if (v19 && v39)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v16, v36, (int16x4_t *)((char *)v18 + 12 * a2), a2, v19, v39, a7, a8, a9, a10, a11, a12, a13);
    int16x4_t v16 = (int8x8_t *)((char *)v16 + result);
    int8x16_t v40 = a4 + 7;
    if (!v24) {
      goto LABEL_64;
    }
  }
  else
  {
    *int8x16_t v36 = 0;
    int8x16_t v40 = a4 + 7;
    if (!v24)
    {
LABEL_64:
      *int8x16_t v40 = 0;
      return result;
    }
  }
  if (!v39) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v16, v40, (int16x4_t *)((char *)v18 + 12 * a2 + 8), a2, v24, v39, a7, a8, a9, a10, a11, a12, a13);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(uint64_t a1, unsigned char *a2, int16x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, int8x8_t a14)
{
  int16x4_t v16 = *(int16x4_t *)((char *)a3 + a4);
  *(int16x4_t *)v17.i8 = vzip1_s16(*a3, v16);
  *(int16x4_t *)v18.i8 = vzip2_s16(*a3, v16);
  v17.i64[1] = v17.i64[0];
  v18.i64[1] = v18.i64[0];
  unsigned int v19 = (int16x4_t *)((char *)a3 + 2 * a4);
  int8x8_t v20 = (int8x8_t)*v19;
  int16x4_t v21 = *(int16x4_t *)((char *)v19 + a4);
  *(int16x4_t *)v22.i8 = vzip1_s16(*v19, v21);
  *(int16x4_t *)v23.i8 = vzip2_s16(*v19, v21);
  v22.i64[1] = v22.i64[0];
  v23.i64[1] = v23.i64[0];
  int8x16_t v24 = vdupq_lane_s8(*(int8x8_t *)v17.i8, 0);
  int8x16_t v25 = vsubq_s8(v17, v24);
  int8x16_t v26 = vsubq_s8(v22, v24);
  int8x16_t v27 = vsubq_s8(v18, v24);
  int8x16_t v28 = vsubq_s8(v23, v24);
  v20.i8[0] = vmaxvq_s8(v25);
  v21.i8[0] = vminvq_s8(v25);
  int8x16_t v29 = vdupq_lane_s8(v20, 0);
  int8x16_t v30 = vdupq_lane_s8((int8x8_t)v21, 0);
  v31.i64[0] = 0x8080808080808080;
  v31.i64[1] = 0x8080808080808080;
  int8x16_t v32 = vmaxq_s8(v29, v31);
  v33.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v33.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v34 = vminq_s8(v30, v33);
  int8x16_t v35 = vzip1q_s8(v29, v30);
  int8x16_t v36 = vceqzq_s8(v35);
  int8x16_t v37 = vclsq_s8(v35);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vsubq_s8(v38, v37);
  int8x16_t v40 = vbicq_s8(v39, v36);
  v39.i8[0] = vmaxvq_s8(v26);
  a14.i8[0] = vminvq_s8(v26);
  int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v39.i8, 0);
  int8x16_t v42 = vdupq_lane_s8(a14, 0);
  int8x16_t v43 = vpmaxq_s8(v40, v40);
  int8x16_t v44 = vmaxq_s8(v32, v41);
  int8x16_t v45 = vminq_s8(v34, v42);
  int8x16_t v46 = vzip1q_s8(v41, v42);
  int8x16_t v47 = vceqzq_s8(v46);
  int8x16_t v48 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v46)), v47);
  int8x16_t v49 = vpmaxq_s8(v48, v48);
  v47.i8[0] = vmaxvq_s8(v27);
  int8x16_t v50 = vdupq_lane_s8(*(int8x8_t *)v47.i8, 0);
  v14.i8[0] = vminvq_s8(v27);
  int8x16_t v51 = vdupq_lane_s8(v14, 0);
  int8x16_t v52 = vmaxq_s8(v44, v50);
  int8x16_t v53 = vminq_s8(v45, v51);
  int8x16_t v54 = vzip1q_s8(v50, v51);
  int8x16_t v55 = vceqzq_s8(v54);
  int8x16_t v56 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v54)), v55);
  int8x16_t v57 = vpmaxq_s8(v56, v56);
  v55.i8[0] = vmaxvq_s8(v28);
  v15.i8[0] = vminvq_s8(v28);
  int8x16_t v58 = vdupq_lane_s8(*(int8x8_t *)v55.i8, 0);
  int8x16_t v59 = vdupq_lane_s8(v15, 0);
  int8x16_t v60 = vmaxq_s8(v52, v58);
  int8x16_t v61 = vminq_s8(v53, v59);
  int8x16_t v62 = vzip1q_s8(v58, v59);
  int8x16_t v63 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v62)), vceqzq_s8(v62));
  int8x16_t v64 = vpmaxq_s8(v63, v63);
  int8x16_t v65 = vmaxq_s8(vmaxq_s8(v43, v49), vmaxq_s8(v57, v64));
  int8x16_t v66 = vclzq_s8(vsubq_s8(v60, v61));
  int8x16_t v67 = vsubq_s8(v38, v66);
  int8x16_t v68 = vcgtq_s8(v65, v67);
  int8x16_t v69 = vbslq_s8(v68, v67, v65);
  if (vmaxvq_s8(v69))
  {
    char v70 = 0;
    unint64_t v71 = 0;
    int8x8_t v72 = 0;
    v73.i64[0] = -1;
    v73.i64[1] = -1;
    v74.i64[0] = 0x707070707070707;
    v74.i64[1] = 0x707070707070707;
    int8x16_t v75 = vandq_s8(vsubq_s8(vshlq_s8(v73, vsubq_s8(v74, v66)), v61), v68);
    int8x16_t v76 = vandq_s8(v68, v38);
    v77.i64[0] = 0x303030303030303;
    v77.i64[1] = 0x303030303030303;
    int8x16_t v78 = vorrq_s8(v76, vandq_s8(vceqzq_s8(v69), v77));
    int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v43), v77), (int8x16_t)0);
    int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v49), v77), (int8x16_t)0);
    int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v57), v77), (int8x16_t)0);
    int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v64), v77), (int8x16_t)0);
    int8x16_t v83 = vsubq_s8(v69, v79);
    int8x16_t v84 = vsubq_s8(v69, v80);
    int8x16_t v85 = vsubq_s8(v69, v81);
    int8x16_t v86 = vsubq_s8(v69, v82);
    int8x16_t v87 = vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)));
    v80.i64[0] = 0x404040404040404;
    v80.i64[1] = 0x404040404040404;
    int8x16_t v88 = vorrq_s8(vbicq_s8(v80, v87), v78);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v401 = v75;
      v89.i32[0] = v17.u8[2];
      v89.i32[1] = v17.u8[1];
      int32x2_t v90 = vshl_n_s32(vsub_s32(v89, vdup_n_s32(v17.u8[0])), 0x1CuLL);
      int v91 = v90.i32[1] >> 28;
      int8x8_t v92 = (int8x8_t)vshl_s32(v90, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v93 = v90.i32[0];
      v94.i64[0] = 0xFFFF0000FFFF0000;
      v94.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v95 = vmlaq_s8(vandq_s8(vdupq_n_s8(v90.i32[0] >> 28), v94), vdupq_n_s8(v90.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v96 = vsubq_s8(v25, v95);
      int8x16_t v97 = v83;
      int8x16_t v98 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v92.i32[0]), v26), v95);
      int8x16_t v99 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v92.i32[1]), v27), v95);
      int8x16_t v100 = vaddq_s8(vdupq_n_s8(-v92.i32[0] - v92.i32[1]), v28);
      int8x16_t v101 = vsubq_s8(v100, v95);
      v100.i8[0] = vmaxvq_s8(v96);
      int8x16_t v394 = v98;
      int8x16_t v396 = v96;
      v92.i8[0] = vminvq_s8(v96);
      int8x16_t v102 = vdupq_lane_s8(*(int8x8_t *)v100.i8, 0);
      int8x16_t v103 = vdupq_lane_s8(v92, 0);
      v95.i64[0] = 0x8080808080808080;
      v95.i64[1] = 0x8080808080808080;
      int8x16_t v104 = vmaxq_s8(v102, v95);
      v96.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v96.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v105 = vminq_s8(v103, v96);
      int8x16_t v106 = vzip1q_s8(v102, v103);
      int8x16_t v107 = vceqzq_s8(v106);
      v108.i64[0] = 0x808080808080808;
      v108.i64[1] = 0x808080808080808;
      int8x16_t v109 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v106)), v107);
      int8x16_t v110 = vpmaxq_s8(v109, v109);
      v107.i8[0] = vmaxvq_s8(v98);
      v98.i8[0] = vminvq_s8(v98);
      int8x16_t v111 = vdupq_lane_s8(*(int8x8_t *)v107.i8, 0);
      int8x16_t v112 = vdupq_lane_s8(*(int8x8_t *)v98.i8, 0);
      int8x16_t v113 = vmaxq_s8(v104, v111);
      int8x16_t v114 = vminq_s8(v105, v112);
      int8x16_t v115 = vzip1q_s8(v111, v112);
      int8x16_t v116 = vceqzq_s8(v115);
      int8x16_t v117 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v115)), v116);
      int8x16_t v118 = vpmaxq_s8(v117, v117);
      v116.i8[0] = vmaxvq_s8(v99);
      v72.i8[0] = vminvq_s8(v99);
      int8x16_t v119 = vdupq_lane_s8(*(int8x8_t *)v116.i8, 0);
      int8x16_t v120 = vdupq_lane_s8(v72, 0);
      int8x16_t v121 = vmaxq_s8(v113, v119);
      int8x16_t v122 = vminq_s8(v114, v120);
      int8x16_t v123 = vzip1q_s8(v119, v120);
      int8x16_t v124 = vceqzq_s8(v123);
      int8x16_t v125 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v123)), v124);
      int8x16_t v126 = vpmaxq_s8(v125, v125);
      v124.i8[0] = vmaxvq_s8(v101);
      v75.i8[0] = vminvq_s8(v101);
      int8x16_t v127 = vdupq_lane_s8(*(int8x8_t *)v124.i8, 0);
      int8x16_t v128 = vdupq_lane_s8(*(int8x8_t *)v75.i8, 0);
      int8x16_t v129 = vmaxq_s8(v121, v127);
      int8x16_t v398 = v27;
      int8x16_t v399 = v28;
      int8x16_t v130 = vminq_s8(v122, v128);
      int8x16_t v131 = vzip1q_s8(v127, v128);
      int8x16_t v132 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v131)), vceqzq_s8(v131));
      int8x16_t v133 = vpmaxq_s8(v132, v132);
      int8x16_t v134 = vmaxq_s8(vmaxq_s8(v110, v118), vmaxq_s8(v126, v133));
      int8x16_t v135 = v84;
      int8x16_t v136 = vclzq_s8(vsubq_s8(v129, v130));
      int8x16_t v137 = vsubq_s8(v108, v136);
      int8x16_t v138 = vcgtq_s8(v134, v137);
      int8x16_t v139 = vbslq_s8(v138, v137, v134);
      v140.i64[0] = 0x202020202020202;
      v140.i64[1] = 0x202020202020202;
      v134.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v134.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v141 = vbslq_s8(v138, v134, v140);
      v134.i64[0] = 0x101010101010101;
      v134.i64[1] = 0x101010101010101;
      int8x16_t v142 = vmaxq_s8(v139, v134);
      v134.i64[0] = 0x303030303030303;
      v134.i64[1] = 0x303030303030303;
      int8x16_t v143 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v110), v134), (int8x16_t)0);
      int8x16_t v144 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v118), v134), (int8x16_t)0);
      int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v126), v134), (int8x16_t)0);
      int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v133), v134), (int8x16_t)0);
      int8x16_t v147 = vsubq_s8(v142, v143);
      int8x16_t v148 = vsubq_s8(v142, v144);
      int8x16_t v149 = vsubq_s8(v142, v145);
      int8x16_t v150 = vsubq_s8(v142, v146);
      int8x16_t v151 = vceqq_s8(vaddq_s8(v146, v145), vnegq_s8(vaddq_s8(v143, v144)));
      v143.i64[0] = 0x404040404040404;
      v143.i64[1] = 0x404040404040404;
      int8x16_t v152 = vorrq_s8(vbicq_s8(v143, v151), v141);
      v153.i64[0] = 0x8000800080008;
      v153.i64[1] = 0x8000800080008;
      uint16x8_t v154 = vmovl_u8(*(uint8x8_t *)v88.i8);
      unsigned long long v155 = *(_OWORD *)&v154 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
      int8x16_t v400 = (int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8);
      unsigned long long v156 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v88.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
      unsigned long long v157 = *(_OWORD *)&v154 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
      v158.i64[0] = 0x2000200020002;
      v158.i64[1] = 0x2000200020002;
      int16x8_t v159 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v85.i8, *(int8x8_t *)v135.i8), *(int8x8_t *)v86.i8), 3uLL);
      int8x16_t v160 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v400, (int8x16_t)vceqzq_s16((int16x8_t)v155)), (int16x8_t)v156), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)v157, v158), v153)), *(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707), v159), vaddq_s16(vmlal_s8((int16x8_t)vaddl_u8((uint8x8_t)vbic_s8(
                                                                                *(int8x8_t *)v142.i8,
                                                                                (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v152.i8)), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v152.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v147.i8, (int8x8_t)0x707070707070707), vaddq_s16(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v149.i8, *(int8x8_t *)v148.i8), *(int8x8_t *)v150.i8), 3uLL), (int16x8_t)v153)))), 0);
      v158.i16[0] = vaddlvq_s8(v160);
      unint64_t v71 = v91 & 0xF | HIBYTE(v93);
      int v161 = v158.u16[0];
      if (v158.i16[0])
      {
        v162.i64[0] = 0x707070707070707;
        v162.i64[1] = 0x707070707070707;
        int8x16_t v163 = vsubq_s8(v162, v136);
        v164.i64[0] = -1;
        v164.i64[1] = -1;
        int8x16_t v165 = vandq_s8(vsubq_s8(vshlq_s8(v164, v163), v130), v138);
        int8x16_t v392 = vbslq_s8(v160, v396, v25);
        int8x16_t v397 = vbslq_s8(v160, v394, v26);
        int8x16_t v27 = vbslq_s8(v160, v99, v398);
        int8x16_t v97 = vbslq_s8(v160, v147, v97);
        int8x16_t v401 = vbslq_s8(v160, v165, v401);
        int8x16_t v69 = vbslq_s8(v160, v142, v69);
        int8x16_t v88 = vbslq_s8(v160, v152, v88);
        uint16x8_t v166 = vmovl_u8(*(uint8x8_t *)v88.i8);
        unsigned long long v155 = *(_OWORD *)&v166 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
        int8x16_t v400 = (int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8);
        unsigned long long v156 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v88.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
        unsigned long long v157 = *(_OWORD *)&v166 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
        int16x8_t v167 = vmull_s8(*(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707);
        int8x16_t v393 = vbslq_s8(v160, v149, v85);
        int8x16_t v395 = vbslq_s8(v160, v150, v86);
        int8x16_t v391 = vbslq_s8(v160, v148, v135);
        int16x8_t v159 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v393.i8, *(int8x8_t *)v391.i8), *(int8x8_t *)v395.i8), 3uLL);
        int8x16_t v28 = vbslq_s8(v160, v101, v399);
      }
      else
      {
        int8x16_t v391 = v135;
        int8x16_t v392 = v25;
        int8x16_t v393 = v85;
        int8x16_t v395 = v86;
        int8x16_t v397 = v26;
        int16x8_t v167 = vmull_s8(*(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707);
        int8x16_t v27 = v398;
        int8x16_t v28 = v399;
      }
      int8x16_t v83 = v97;
      int8x16_t v169 = v22;
      v169.i8[7] = v17.i8[7];
      int8x16_t v170 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7430));
      int8x16_t v171 = vsubq_s8(v22, vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7440));
      int8x16_t v172 = v18;
      v172.i8[7] = v17.i8[7];
      int8x16_t v173 = vsubq_s8(v18, vqtbl1q_s8(v172, (int8x16_t)xmmword_242EA7450));
      int8x16_t v174 = v23;
      v174.i8[7] = v17.i8[7];
      int8x16_t v175 = vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7460);
      int8x16_t v176 = vsubq_s8(v23, v175);
      int8x16_t v177 = v170;
      v177.i8[0] = v170.i8[7];
      v177.i8[7] = v170.i8[0];
      v170.i8[0] = vmaxvq_s8(v177);
      v175.i8[0] = vminvq_s8(v177);
      int8x16_t v178 = vdupq_lane_s8(*(int8x8_t *)v170.i8, 0);
      int8x16_t v179 = vdupq_lane_s8(*(int8x8_t *)v175.i8, 0);
      v180.i64[0] = 0x8080808080808080;
      v180.i64[1] = 0x8080808080808080;
      int8x16_t v181 = vmaxq_s8(v178, v180);
      v182.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v182.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v183 = vminq_s8(v179, v182);
      int8x16_t v184 = vzip1q_s8(v178, v179);
      int8x16_t v185 = vceqzq_s8(v184);
      v182.i64[0] = 0x808080808080808;
      v182.i64[1] = 0x808080808080808;
      int8x16_t v186 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v184)), v185);
      int8x16_t v187 = vpmaxq_s8(v186, v186);
      v186.i8[0] = vmaxvq_s8(v171);
      v185.i8[0] = vminvq_s8(v171);
      int8x16_t v188 = vdupq_lane_s8(*(int8x8_t *)v186.i8, 0);
      int8x16_t v189 = vdupq_lane_s8(*(int8x8_t *)v185.i8, 0);
      int8x16_t v190 = vmaxq_s8(v181, v188);
      int8x16_t v191 = vminq_s8(v183, v189);
      int8x16_t v192 = vzip1q_s8(v188, v189);
      int8x16_t v193 = vceqzq_s8(v192);
      int8x16_t v194 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v192)), v193);
      int8x16_t v195 = vpmaxq_s8(v194, v194);
      v194.i8[0] = vmaxvq_s8(v173);
      v193.i8[0] = vminvq_s8(v173);
      int8x16_t v196 = vdupq_lane_s8(*(int8x8_t *)v194.i8, 0);
      int8x16_t v197 = vdupq_lane_s8(*(int8x8_t *)v193.i8, 0);
      int8x16_t v198 = vmaxq_s8(v190, v196);
      int8x16_t v199 = vminq_s8(v191, v197);
      int8x16_t v200 = vzip1q_s8(v196, v197);
      int8x16_t v201 = vceqzq_s8(v200);
      int8x16_t v202 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v200)), v201);
      int8x16_t v203 = vpmaxq_s8(v202, v202);
      v202.i8[0] = vmaxvq_s8(v176);
      v201.i8[0] = vminvq_s8(v176);
      int8x16_t v204 = vdupq_lane_s8(*(int8x8_t *)v202.i8, 0);
      int8x16_t v205 = vdupq_lane_s8(*(int8x8_t *)v201.i8, 0);
      int8x16_t v206 = vmaxq_s8(v198, v204);
      int8x16_t v207 = vminq_s8(v199, v205);
      int8x16_t v208 = vzip1q_s8(v204, v205);
      int8x16_t v209 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v208)), vceqzq_s8(v208));
      int8x16_t v210 = vpmaxq_s8(v209, v209);
      int8x16_t v211 = vmaxq_s8(vmaxq_s8(v187, v195), vmaxq_s8(v203, v210));
      int8x16_t v212 = vclzq_s8(vsubq_s8(v206, v207));
      int8x16_t v213 = vsubq_s8(v182, v212);
      int8x16_t v214 = vcgtq_s8(v211, v213);
      int8x16_t v215 = vbslq_s8(v214, v213, v211);
      v213.i64[0] = 0x909090909090909;
      v213.i64[1] = 0x909090909090909;
      v182.i64[0] = 0x202020202020202;
      v182.i64[1] = 0x202020202020202;
      int8x16_t v216 = vorrq_s8(vandq_s8(vceqzq_s8(v215), v182), vsubq_s8(vandq_s8(v214, v213), vmvnq_s8(v214)));
      v217.i64[0] = 0x303030303030303;
      v217.i64[1] = 0x303030303030303;
      int8x16_t v218 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v187), v217), (int8x16_t)0);
      int8x16_t v219 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v195), v217), (int8x16_t)0);
      int8x16_t v220 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v203), v217), (int8x16_t)0);
      int8x16_t v221 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v210), v217), (int8x16_t)0);
      int8x16_t v222 = vsubq_s8(v215, v218);
      int8x16_t v223 = vsubq_s8(v215, v219);
      int8x16_t v224 = vsubq_s8(v215, v220);
      int8x16_t v225 = vsubq_s8(v215, v221);
      v182.i64[0] = 0x404040404040404;
      v182.i64[1] = 0x404040404040404;
      int8x16_t v226 = vorrq_s8(vbicq_s8(v182, vceqq_s8(vaddq_s8(v221, v220), vnegq_s8(vaddq_s8(v218, v219)))), v216);
      v182.i64[0] = 0x2000200020002;
      v182.i64[1] = 0x2000200020002;
      int8x16_t v227 = (int8x16_t)vceqq_s16((int16x8_t)v157, (int16x8_t)v182);
      v182.i64[0] = 0x8000800080008;
      v182.i64[1] = 0x8000800080008;
      int8x16_t v228 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v400, (int8x16_t)vceqzq_s16((int16x8_t)v155)), (int16x8_t)v156), vaddq_s16((int16x8_t)vandq_s8(v227, v182), v167)), v159), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v215.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v226.i8))),
                                                                   (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v226.i8, *(int8x8_t *)v226.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v222.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v224.i8, *(int8x8_t *)v223.i8), *(int8x8_t *)v225.i8), 3uLL)))), 0);
      v216.i16[0] = vaddlvq_s8(v228);
      int v229 = v216.u16[0];
      if (v216.i16[0])
      {
        v230.i64[0] = 0x707070707070707;
        v230.i64[1] = 0x707070707070707;
        int8x16_t v231 = vsubq_s8(v230, v212);
        v230.i64[0] = -1;
        v230.i64[1] = -1;
        int8x16_t v232 = vandq_s8(vsubq_s8(vshlq_s8(v230, v231), v207), v214);
        v24.i8[0] = vbslq_s8(v228, vextq_s8(v17, v17, 0xFuLL), v24).u8[0];
        int8x16_t v25 = vbslq_s8(v228, v177, v392);
        int8x16_t v26 = vbslq_s8(v228, v171, v397);
        int8x16_t v27 = vbslq_s8(v228, v173, v27);
        int8x16_t v28 = vbslq_s8(v228, v176, v28);
        int8x16_t v83 = vbslq_s8(v228, v222, v83);
        int8x16_t v84 = vbslq_s8(v228, v223, v391);
        int8x16_t v85 = vbslq_s8(v228, v224, v393);
        int8x16_t v86 = vbslq_s8(v228, v225, v395);
        int8x16_t v75 = vbslq_s8(v228, v232, v401);
        int8x16_t v69 = vbslq_s8(v228, v215, v69);
        int8x16_t v88 = vbslq_s8(v228, v226, v88);
      }
      else
      {
        int8x16_t v75 = v401;
        int8x16_t v86 = v395;
        int8x16_t v26 = v397;
        int8x16_t v25 = v392;
        int8x16_t v85 = v393;
        int8x16_t v84 = v391;
      }
      if (v161) {
        BOOL v233 = v229 == 0;
      }
      else {
        BOOL v233 = 0;
      }
      char v70 = v233;
    }
    int8x16_t v234 = (int8x16_t)vmovl_s8(*(int8x8_t *)v88.i8);
    v235.i64[0] = 0x8000800080008;
    v235.i64[1] = 0x8000800080008;
    v236.i64[0] = 0x3000300030003;
    v236.i64[1] = 0x3000300030003;
    v237.i64[0] = 0x2000200020002;
    v237.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v234, v235))).u16[0]+ ((2 * v234.i16[0]) & 8)+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v234, v236), v237), v235).u16[0]- v83.i8[0]+ 8 * v83.i8[0]+ 8 * vaddq_s8(v85, vaddq_s8(v84, v86)).i8[0])- 181) <= 0xFFFFFFFFFFFFFF37)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 24;
    }
    else
    {
      int8x16_t v238 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v239 = 8 * (a1 & 7);
      if (v239) {
        uint64_t v240 = *v238 & ~(-1 << v239);
      }
      else {
        uint64_t v240 = 0;
      }
      int8x16_t v241 = vextq_s8(v83, (int8x16_t)0, 8uLL);
      int8x16_t v242 = vextq_s8(v84, (int8x16_t)0, 8uLL);
      int8x16_t v243 = vextq_s8(v85, (int8x16_t)0, 8uLL);
      int8x16_t v244 = vextq_s8(v86, (int8x16_t)0, 8uLL);
      if (v69.i8[0]) {
        int v245 = (16 * v69.i8[0] + 112) & 0x70;
      }
      else {
        int v245 = 0;
      }
      *a2 = 32 * v88.i8[0];
      unint64_t v246 = (v245 & 0xFFFF807F | v88.i8[0] & 8 | ((unint64_t)v24.u8[0] << 7)) >> 3;
      unint64_t v247 = (v246 << v239) | v240;
      if (v239 >= 0x34)
      {
        *int8x16_t v238 = v247;
        unint64_t v247 = v246 >> (-8 * (a1 & 7u));
      }
      int8x16_t v248 = vdupq_lane_s8(*(int8x8_t *)v69.i8, 0);
      unint64_t v249 = v239 + 12;
      v250.i64[0] = 0x202020202020202;
      v250.i64[1] = 0x202020202020202;
      int8x16_t v251 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v234.i8, (int8x8_t)0x4000400040004)))), v250);
      v250.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v250.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v252.i64[0] = -1;
      v252.i64[1] = -1;
      uint8x16_t v253 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v252, (uint8x16_t)vorrq_s8(v251, v250)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v248, vzip1q_s8(v241, v242)), (int16x8_t)vsubq_s8(v248, vzip1q_s8(v243, v244))).u32[0]);
      int16x8_t v254 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v251.i8);
      uint16x8_t v255 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v253.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v254)), (int16x8_t)vmovl_high_u8(v253));
      uint16x8_t v256 = (uint16x8_t)vpaddq_s16(v254, (int16x8_t)vmovl_high_u8((uint8x16_t)v251));
      int32x4_t v257 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v256.i8);
      int32x4_t v258 = (int32x4_t)vmovl_high_u16(v256);
      int32x4_t v259 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v255.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v257)), (int32x4_t)vshlq_u32(vmovl_high_u16(v255), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v258)));
      int32x4_t v260 = vpaddq_s32(v257, v258);
      v261.i64[0] = v259.u32[0];
      v261.i64[1] = v259.u32[1];
      uint64x2_t v262 = (uint64x2_t)v261;
      v261.i64[0] = v259.u32[2];
      v261.i64[1] = v259.u32[3];
      uint64x2_t v263 = (uint64x2_t)v261;
      v261.i64[0] = v260.u32[0];
      v261.i64[1] = v260.u32[1];
      int64x2_t v264 = v261;
      v261.i64[0] = v260.u32[2];
      v261.i64[1] = v260.u32[3];
      int64x2_t v265 = vpaddq_s64((int64x2_t)vshlq_u64(v262, (uint64x2_t)vzip1q_s64((int64x2_t)0, v264)), (int64x2_t)vshlq_u64(v263, (uint64x2_t)vzip1q_s64((int64x2_t)0, v261)));
      int64x2_t v266 = vpaddq_s64(v264, v261);
      uint64_t v267 = (v239 + 12) & 0x3C;
      unint64_t v268 = (v265.i64[0] << v267) | v247;
      if ((unint64_t)(v266.i64[0] + v267) >= 0x40)
      {
        *(void *)((char *)v238 + ((v249 >> 3) & 8)) = v268;
        unint64_t v268 = (unint64_t)v265.i64[0] >> -(char)v267;
      }
      unint64_t v269 = v266.i64[0] + v249;
      unint64_t v270 = v268 | (v265.i64[1] << v269);
      if ((v269 & 0x3F) + v266.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v269 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v270;
        unint64_t v270 = (unint64_t)v265.i64[1] >> -(v269 & 0x3F);
        if ((v269 & 0x3F) == 0) {
          unint64_t v270 = 0;
        }
      }
      int8x16_t v271 = vceqq_s8(v69, v83);
      unint64_t v272 = v269 + v266.i64[1];
      v273.i64[0] = 0x808080808080808;
      v273.i64[1] = 0x808080808080808;
      v274.i64[0] = -1;
      v274.i64[1] = -1;
      int8x16_t v275 = vandq_s8(vextq_s8(vtstq_s8(v88, v273), (int8x16_t)0, 0xFuLL), v69);
      v276.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v276.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v277 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v274, (uint8x16_t)vaddq_s8(v275, v276)), v75);
      int16x8_t v278 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v275.i8);
      uint16x8_t v279 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v277.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v278)), (int16x8_t)vmovl_high_u8(v277));
      uint16x8_t v280 = (uint16x8_t)vpaddq_s16(v278, (int16x8_t)vmovl_high_u8((uint8x16_t)v275));
      int32x4_t v281 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v280.i8);
      int32x4_t v282 = (int32x4_t)vmovl_high_u16(v280);
      int32x4_t v283 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v279.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v281)), (int32x4_t)vshlq_u32(vmovl_high_u16(v279), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v282)));
      int32x4_t v284 = vpaddq_s32(v281, v282);
      v285.i64[0] = v283.u32[0];
      v285.i64[1] = v283.u32[1];
      uint64x2_t v286 = (uint64x2_t)v285;
      v285.i64[0] = v283.u32[2];
      v285.i64[1] = v283.u32[3];
      uint64x2_t v287 = (uint64x2_t)v285;
      v285.i64[0] = v284.u32[0];
      v285.i64[1] = v284.u32[1];
      int64x2_t v288 = v285;
      v285.i64[0] = v284.u32[2];
      v285.i64[1] = v284.u32[3];
      int64x2_t v289 = vpaddq_s64((int64x2_t)vshlq_u64(v286, (uint64x2_t)vzip1q_s64((int64x2_t)0, v288)), (int64x2_t)vshlq_u64(v287, (uint64x2_t)vzip1q_s64((int64x2_t)0, v285)));
      int64x2_t v290 = vpaddq_s64(v288, v285);
      unint64_t v291 = (v289.i64[0] << v272) | v270;
      if (v290.i64[0] + (v272 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v272 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
        unint64_t v291 = (unint64_t)v289.i64[0] >> -(v272 & 0x3F);
        if ((v272 & 0x3F) == 0) {
          unint64_t v291 = 0;
        }
      }
      int8x16_t v292 = vandq_s8(v75, v271);
      unint64_t v293 = v290.i64[0] + v272;
      unint64_t v294 = v291 | (v289.i64[1] << v293);
      if ((v293 & 0x3F) + v290.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
        unint64_t v294 = (unint64_t)v289.i64[1] >> -(v293 & 0x3F);
        if ((v293 & 0x3F) == 0) {
          unint64_t v294 = 0;
        }
      }
      int8x16_t v295 = vceqq_s8(v69, v84);
      int8x16_t v296 = vaddq_s8(v292, v25);
      unint64_t v297 = v293 + v290.i64[1];
      if (v70)
      {
        v294 |= v71 << v297;
        if ((v297 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v238 + ((v297 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
          unint64_t v294 = v71 >> -(v297 & 0x3F);
        }
        v297 += 8;
      }
      int8x16_t v298 = vandq_s8(v75, v295);
      int16x8_t v299 = (int16x8_t)vmovl_high_u8((uint8x16_t)v241);
      v241.i8[0] = 0;
      v300.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v300.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v301.i64[0] = -1;
      v301.i64[1] = -1;
      uint8x16_t v302 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v301, (uint8x16_t)vaddq_s8(v241, v300)), v296);
      int16x8_t v303 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v241.i8);
      uint16x8_t v304 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v302.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v303)), (int16x8_t)vshlq_u16(vmovl_high_u8(v302), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)));
      uint16x8_t v305 = (uint16x8_t)vpaddq_s16(v303, v299);
      int32x4_t v306 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v305.i8);
      int32x4_t v307 = (int32x4_t)vmovl_high_u16(v305);
      int32x4_t v308 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v304.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v306)), (int32x4_t)vshlq_u32(vmovl_high_u16(v304), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v307)));
      int32x4_t v309 = vpaddq_s32(v306, v307);
      v310.i64[0] = v308.u32[0];
      v310.i64[1] = v308.u32[1];
      uint64x2_t v311 = (uint64x2_t)v310;
      v310.i64[0] = v308.u32[2];
      v310.i64[1] = v308.u32[3];
      uint64x2_t v312 = (uint64x2_t)v310;
      v310.i64[0] = v309.u32[0];
      v310.i64[1] = v309.u32[1];
      int64x2_t v313 = v310;
      v310.i64[0] = v309.u32[2];
      v310.i64[1] = v309.u32[3];
      int64x2_t v314 = vpaddq_s64((int64x2_t)vshlq_u64(v311, (uint64x2_t)vzip1q_s64((int64x2_t)0, v313)), (int64x2_t)vshlq_u64(v312, (uint64x2_t)vzip1q_s64((int64x2_t)0, v310)));
      int64x2_t v315 = vpaddq_s64(v313, v310);
      unint64_t v316 = (v314.i64[0] << v297) | v294;
      if (v315.i64[0] + (v297 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v297 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v316;
        unint64_t v316 = (unint64_t)v314.i64[0] >> -(v297 & 0x3F);
        if ((v297 & 0x3F) == 0) {
          unint64_t v316 = 0;
        }
      }
      int8x16_t v317 = vceqq_s8(v69, v85);
      int8x16_t v318 = vaddq_s8(v26, v298);
      unint64_t v319 = v315.i64[0] + v297;
      uint64_t v320 = (v315.i64[0] + v297) & 0x3F;
      unint64_t v321 = v316 | (v314.i64[1] << v319);
      if ((v319 & 0x3F) + v315.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v314.i64[1] >> -(char)v320;
        if (!v320) {
          unint64_t v321 = 0;
        }
      }
      int8x16_t v322 = vandq_s8(v75, v317);
      unint64_t v323 = v319 + v315.i64[1];
      v324.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v324.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v325.i64[0] = -1;
      v325.i64[1] = -1;
      uint8x16_t v326 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v325, (uint8x16_t)vaddq_s8(v242, v324)), v318);
      int16x8_t v327 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v242.i8);
      int16x8_t v328 = (int16x8_t)vmovl_high_u8((uint8x16_t)v242);
      uint16x8_t v329 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v326.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v327)), (int16x8_t)vshlq_u16(vmovl_high_u8(v326), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v328)));
      uint16x8_t v330 = (uint16x8_t)vpaddq_s16(v327, v328);
      int32x4_t v331 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v330.i8);
      int32x4_t v332 = (int32x4_t)vmovl_high_u16(v330);
      int32x4_t v333 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v329.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)), (int32x4_t)vshlq_u32(vmovl_high_u16(v329), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v332)));
      int32x4_t v334 = vpaddq_s32(v331, v332);
      v335.i64[0] = v333.u32[0];
      v335.i64[1] = v333.u32[1];
      uint64x2_t v336 = (uint64x2_t)v335;
      v335.i64[0] = v333.u32[2];
      v335.i64[1] = v333.u32[3];
      uint64x2_t v337 = (uint64x2_t)v335;
      v335.i64[0] = v334.u32[0];
      v335.i64[1] = v334.u32[1];
      int64x2_t v338 = v335;
      v335.i64[0] = v334.u32[2];
      v335.i64[1] = v334.u32[3];
      int64x2_t v339 = vpaddq_s64((int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v338)), (int64x2_t)vshlq_u64(v337, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)));
      int64x2_t v340 = vpaddq_s64(v338, v335);
      unint64_t v341 = (v339.i64[0] << v323) | v321;
      if (v340.i64[0] + (v323 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
        unint64_t v341 = (unint64_t)v339.i64[0] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v341 = 0;
        }
      }
      int8x16_t v342 = vceqq_s8(v69, v86);
      int8x16_t v343 = vaddq_s8(v27, v322);
      unint64_t v344 = v340.i64[0] + v323;
      unint64_t v345 = v341 | (v339.i64[1] << v344);
      if ((v344 & 0x3F) + v340.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v345;
        unint64_t v345 = (unint64_t)v339.i64[1] >> -(v344 & 0x3F);
        if ((v344 & 0x3F) == 0) {
          unint64_t v345 = 0;
        }
      }
      int8x16_t v346 = vandq_s8(v75, v342);
      unint64_t v347 = v344 + v340.i64[1];
      v348.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v348.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v349.i64[0] = -1;
      v349.i64[1] = -1;
      uint8x16_t v350 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v349, (uint8x16_t)vaddq_s8(v243, v348)), v343);
      int16x8_t v351 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v243.i8);
      int16x8_t v352 = (int16x8_t)vmovl_high_u8((uint8x16_t)v243);
      uint16x8_t v353 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v350.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v351)), (int16x8_t)vshlq_u16(vmovl_high_u8(v350), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v352)));
      uint16x8_t v354 = (uint16x8_t)vpaddq_s16(v351, v352);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16(v354);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)), (int32x4_t)vshlq_u32(vmovl_high_u16(v353), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v347) | v345;
      if (v364.i64[0] + (v347 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v347 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v363.i64[0] >> -(v347 & 0x3F);
        if ((v347 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      int8x16_t v366 = vaddq_s8(v28, v346);
      unint64_t v367 = v364.i64[0] + v347;
      unint64_t v368 = v365 | (v363.i64[1] << v367);
      if ((v367 & 0x3F) + v364.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v363.i64[1] >> -(v367 & 0x3F);
        if ((v367 & 0x3F) == 0) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v367 + v364.i64[1];
      v370.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v370.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      uint8x16_t v372 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v371, (uint8x16_t)vaddq_s8(v244, v370)), v366);
      int16x8_t v373 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v244.i8);
      int16x8_t v374 = (int16x8_t)vmovl_high_u8((uint8x16_t)v244);
      uint16x8_t v375 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v372.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)), (int16x8_t)vshlq_u16(vmovl_high_u8(v372), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v374)));
      uint16x8_t v376 = (uint16x8_t)vpaddq_s16(v373, v374);
      int32x4_t v377 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v376.i8);
      int32x4_t v378 = (int32x4_t)vmovl_high_u16(v376);
      int32x4_t v379 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v375.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)), (int32x4_t)vshlq_u32(vmovl_high_u16(v375), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v378)));
      int32x4_t v380 = vpaddq_s32(v377, v378);
      v381.i64[0] = v379.u32[0];
      v381.i64[1] = v379.u32[1];
      uint64x2_t v382 = (uint64x2_t)v381;
      v381.i64[0] = v379.u32[2];
      v381.i64[1] = v379.u32[3];
      uint64x2_t v383 = (uint64x2_t)v381;
      v381.i64[0] = v380.u32[0];
      v381.i64[1] = v380.u32[1];
      int64x2_t v384 = v381;
      v381.i64[0] = v380.u32[2];
      v381.i64[1] = v380.u32[3];
      int64x2_t v385 = vpaddq_s64((int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v384)), (int64x2_t)vshlq_u64(v383, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)));
      int64x2_t v386 = vpaddq_s64(v384, v381);
      unint64_t v387 = (v385.i64[0] << v369) | v368;
      if (v386.i64[0] + (v369 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v238 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v387;
        if ((v369 & 0x3F) != 0) {
          unint64_t v387 = (unint64_t)v385.i64[0] >> -(v369 & 0x3F);
        }
        else {
          unint64_t v387 = 0;
        }
      }
      unint64_t v388 = v386.i64[0] + v369;
      unint64_t v389 = v387 | (v385.i64[1] << v388);
      if ((v388 & 0x3F) + v386.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v388 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
        unint64_t v389 = (unint64_t)v385.i64[1] >> -(v388 & 0x3F);
        if ((v388 & 0x3F) == 0) {
          unint64_t v389 = 0;
        }
      }
      unint64_t v390 = v388 + v386.i64[1];
      if ((v390 & 0x3F) != 0) {
        *(void *)((char *)v238 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
      }
      unint64_t result = (v390 - v239 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(unsigned char *)a1 = a3->i8[0];
    *a2 = 96;
    return 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v68 = *MEMORY[0x263EF8340];
  long long v66 = 0u;
  long long v67 = 0u;
  uint64_t v10 = a6;
  if (a5 <= 1)
  {
    uint64_t v11 = 0;
    if (a6 >= 8 && a4 == 1)
    {
      if (a6 < 0x20)
      {
        uint64_t v11 = 0;
        goto LABEL_23;
      }
      uint64_t v11 = a6 & 0xE0;
      int8x16_t v34 = (long long *)(a3 + 16);
      int8x16_t v35 = &v67;
      uint64_t v36 = v11;
      do
      {
        long long v37 = *v34;
        *(v35 - 1) = *(v34 - 1);
        *int8x16_t v35 = v37;
        v34 += 2;
        v35 += 2;
        v36 -= 32;
      }
      while (v36);
      if (v11 == a6) {
        goto LABEL_28;
      }
      if ((a6 & 0x18) != 0)
      {
LABEL_23:
        uint64_t v38 = v11;
        uint64_t v11 = a6 & 0xF8;
        int8x16_t v39 = (uint64_t *)(a3 + v38);
        int8x16_t v40 = (void *)((char *)&v66 + v38);
        uint64_t v41 = v38 - v11;
        do
        {
          uint64_t v42 = *v39++;
          *v40++ = v42;
          v41 += 8;
        }
        while (v41);
        if (v11 == a6) {
          goto LABEL_28;
        }
      }
    }
    uint64_t v43 = a6 - v11;
    int8x16_t v44 = (char *)&v66 + v11;
    int8x16_t v45 = (char *)(a3 + v11 * a4);
    do
    {
      *v44++ = *v45;
      v45 += a4;
      --v43;
    }
    while (v43);
    goto LABEL_28;
  }
  uint64_t v12 = a5 & 0xFE;
  if (a5 == v12)
  {
    uint64_t v13 = 0;
    int8x8_t v14 = (char *)&v66 + 4;
    int8x8_t v15 = (char *)(a3 + 1);
    do
    {
      int16x4_t v16 = v15;
      int8x16_t v17 = v14;
      uint64_t v18 = a5;
      do
      {
        char v19 = *(v16 - 1);
        char v20 = *v16;
        v16 += 2;
        *(v17 - 4) = v19;
        *int8x16_t v17 = v20;
        v17 += 8;
        v18 -= 2;
      }
      while (v18);
      ++v13;
      ++v14;
      v15 += a4;
    }
    while (v13 != a6);
  }
  else
  {
    uint64_t v21 = 0;
    int8x16_t v22 = (char *)&v66 + 4;
    int8x16_t v23 = (char *)(a3 + 1);
    int8x16_t v24 = (char *)&v66 + ((4 * a5) & 0x3F8);
    do
    {
      int8x16_t v25 = v23;
      int8x16_t v26 = v22;
      uint64_t v27 = a5 & 0xFE;
      do
      {
        char v28 = *(v25 - 1);
        char v29 = *v25;
        v25 += 2;
        *(v26 - 4) = v28;
        *int8x16_t v26 = v29;
        v26 += 8;
        v27 -= 2;
      }
      while (v27);
      int8x16_t v30 = (char *)(a3 + v21 * a4 + v12);
      int8x16_t v31 = v24;
      uint64_t v32 = a5 - v12;
      do
      {
        char v33 = *v30++;
        *int8x16_t v31 = v33;
        v31 += 4;
        --v32;
      }
      while (v32);
      ++v21;
      ++v22;
      v23 += a4;
      ++v24;
    }
    while (v21 != v10);
  }
LABEL_28:
  v61.i32[0] = v66;
  v61.i32[1] = BYTE4(v66);
  v61.i32[2] = BYTE1(v66);
  v61.i32[3] = BYTE5(v66);
  int v62 = BYTE8(v66);
  int v63 = BYTE12(v66);
  if (a5 >= 4) {
    unsigned int v46 = 4;
  }
  else {
    unsigned int v46 = a5;
  }
  if (a5 >= 4) {
    unsigned int v47 = a5 - 4;
  }
  else {
    unsigned int v47 = 0;
  }
  int v64 = BYTE9(v66);
  int v65 = BYTE13(v66);
  if (a6 >= 2) {
    unsigned int v48 = 2;
  }
  else {
    unsigned int v48 = a6;
  }
  if (a6 >= 2) {
    unsigned int v49 = a6 - 2;
  }
  else {
    unsigned int v49 = 0;
  }
  char v51 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, &v61, a7, v46, v48);
  v61.i32[0] = BYTE2(v66);
  v61.i32[1] = BYTE6(v66);
  v61.i32[2] = BYTE3(v66);
  v61.i32[3] = BYTE7(v66);
  int v62 = BYTE10(v66);
  int v63 = BYTE14(v66);
  int v64 = BYTE11(v66);
  int v65 = HIBYTE(v66);
  if (a6 >= 4) {
    unsigned int v52 = 2;
  }
  else {
    unsigned int v52 = v49;
  }
  int v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 6, &v61, a7, v46, v52);
  v61.i32[0] = v67;
  v61.i32[1] = BYTE4(v67);
  v61.i32[2] = BYTE1(v67);
  v61.i32[3] = BYTE5(v67);
  int v62 = BYTE8(v67);
  int v63 = BYTE12(v67);
  if (a5 >= 8) {
    unsigned int v54 = 4;
  }
  else {
    unsigned int v54 = v47;
  }
  int v64 = BYTE9(v67);
  int v65 = BYTE13(v67);
  int v55 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 12, &v61, a7, v54, v48);
  v61.i32[0] = BYTE2(v67);
  v61.i32[1] = BYTE6(v67);
  v61.i32[2] = BYTE3(v67);
  v61.i32[3] = BYTE7(v67);
  int v62 = BYTE10(v67);
  int v63 = BYTE14(v67);
  int v64 = BYTE11(v67);
  int v65 = HIBYTE(v67);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 18, &v61, a7, v54, v52);
  if (v55) {
    char v57 = 4;
  }
  else {
    char v57 = 0;
  }
  if (v53) {
    char v58 = 2;
  }
  else {
    char v58 = 0;
  }
  if (result) {
    char v59 = -8;
  }
  else {
    char v59 = -16;
  }
  *a2 = v59 | v57 | v51 | v58;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(uint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v128 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v9.i64[0] = 0x8000000080;
    v9.i64[1] = 0x8000000080;
    int8x16_t v10 = veorq_s8(*a2, v9);
    v11.i64[0] = 0x100000001;
    v11.i64[1] = 0x100000001;
    int8x16_t v7 = vbicq_s8(v10, (int8x16_t)vceqq_s32((int32x4_t)v10, v11));
    int8x16_t v12 = veorq_s8(a2[1], v9);
    int8x16_t v8 = vbicq_s8(v12, (int8x16_t)vceqq_s32((int32x4_t)v12, v11));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v6.i64[0] = 0x8000000080;
    v6.i64[1] = 0x8000000080;
    int8x16_t v7 = veorq_s8(*a2, v6);
    int8x16_t v8 = veorq_s8(a2[1], v6);
LABEL_5:
    int8x16_t v126 = v7;
    int8x16_t v127 = v8;
    unsigned int v13 = v7.i32[0];
    goto LABEL_7;
  }
  int8x16_t v14 = a2[1];
  int8x16_t v126 = *a2;
  int8x16_t v127 = v14;
  unsigned int v13 = v126.i32[0];
LABEL_7:
  if (a5) {
    BOOL v15 = a4 >= 2;
  }
  else {
    BOOL v15 = 0;
  }
  int v16 = !v15;
  if (v15)
  {
    unsigned int v18 = v126.u32[1];
    unsigned int v17 = v126.i32[1] < v13;
    if (v126.i32[1] >= v13) {
      unsigned int v19 = v13;
    }
    else {
      unsigned int v19 = v126.u32[1];
    }
    if (v13 > v126.i32[1]) {
      unsigned int v18 = v13;
    }
  }
  else
  {
    unsigned int v17 = 0;
    unsigned int v18 = v13;
    unsigned int v19 = v13;
  }
  BOOL v20 = a5 < 2 || a4 == 0;
  int v21 = v20;
  if (!v20)
  {
    if (v126.i32[2] < v19)
    {
      unsigned int v17 = 2;
      unsigned int v19 = v126.u32[2];
    }
    if (v18 <= v126.i32[2]) {
      unsigned int v18 = v126.u32[2];
    }
  }
  BOOL v22 = a5 >= 2 && a4 >= 2;
  int v23 = !v22;
  if (v22)
  {
    if (v126.i32[3] < v19)
    {
      unsigned int v17 = 3;
      unsigned int v19 = v126.u32[3];
    }
    if (v18 <= v126.i32[3]) {
      unsigned int v18 = v126.u32[3];
    }
  }
  if (a5) {
    BOOL v24 = a4 >= 3;
  }
  else {
    BOOL v24 = 0;
  }
  int v25 = !v24;
  if (v24)
  {
    if (v127.i32[0] < v19)
    {
      unsigned int v17 = 4;
      unsigned int v19 = v127.i32[0];
    }
    if (v18 <= v127.i32[0]) {
      unsigned int v18 = v127.i32[0];
    }
  }
  if (a5) {
    BOOL v26 = a4 >= 4;
  }
  else {
    BOOL v26 = 0;
  }
  int v27 = !v26;
  if (v26)
  {
    if (v127.i32[1] < v19)
    {
      unsigned int v17 = 5;
      unsigned int v19 = v127.u32[1];
    }
    if (v18 <= v127.i32[1]) {
      unsigned int v18 = v127.u32[1];
    }
  }
  BOOL v28 = a5 >= 2 && a4 >= 3;
  int v29 = !v28;
  if (v28)
  {
    if (v127.i32[2] < v19)
    {
      unsigned int v17 = 6;
      unsigned int v19 = v127.u32[2];
    }
    if (v18 <= v127.i32[2]) {
      unsigned int v18 = v127.u32[2];
    }
  }
  BOOL v30 = a5 >= 2 && a4 >= 4;
  int v31 = !v30;
  if (v30)
  {
    if (v127.i32[3] < v19)
    {
      unsigned int v17 = 7;
      unsigned int v19 = v127.u32[3];
    }
    if (v18 <= v127.i32[3]) {
      unsigned int v18 = v127.u32[3];
    }
  }
  unsigned int v32 = v18 - v19;
  int v33 = __clz(v18 - v19);
  unsigned int v34 = 32 - v33;
  if (v33 > 32) {
    unsigned int v34 = -1;
  }
  if (v18) {
    BOOL v35 = v18 == 255;
  }
  else {
    BOOL v35 = 1;
  }
  int v36 = !v35;
  if (v34 < 2 && v18 == v19) {
    unsigned int v38 = v36;
  }
  else {
    unsigned int v38 = v34 + 1;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v39 = 0;
    if (v19 <= 0x7F && v18 >= 0x80) {
      BOOL v39 = kDQuadParamTable[10 * v38 + 8] == 0;
    }
  }
  else
  {
    BOOL v39 = 0;
  }
  if (v38 > 5 || v39)
  {
    int v41 = kDQuadParamTable[10 * v38 + 4];
    unsigned int v42 = v41 + 2;
    if (v39) {
      int v43 = 0;
    }
    else {
      int v43 = -2;
    }
    int v44 = v19 & ~(-1 << (6 - v41));
    if (v42 >= 8) {
      int v44 = 0;
    }
    int v45 = v44 + v43;
    if (v45 >= 1 && __clz(v45 + v32) < v33) {
      ++v38;
    }
  }
  unint64_t v49 = (unint64_t)&kDQuadParamTable[10 * v38];
  unint64_t v46 = *(void *)(v49 + 8);
  int v48 = *(_DWORD *)(v49 + 16);
  int v47 = *(_DWORD *)(v49 + 20);
  LODWORD(v49) = v47 + 2;
  if (a4) {
    BOOL v50 = a5 == 0;
  }
  else {
    BOOL v50 = 1;
  }
  int v51 = v50;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v52 = a4 == 0;
    }
    else {
      BOOL v52 = 1;
    }
    int v53 = !v52;
  }
  else
  {
    int v53 = 0;
  }
  unint64_t v54 = 0;
  unsigned int v55 = 0;
  if (v46 >> v49 > 0x10) {
    int v53 = 1;
  }
  unsigned int v56 = v48 + 2;
  memset(v123, 0, sizeof(v123));
  int v124 = 0;
  unsigned int v57 = 8 * (v47 != 0);
  if (v56 >= 8) {
    uint64_t v58 = 8;
  }
  else {
    uint64_t v58 = v56;
  }
  if (v57 >= v49) {
    unint64_t v49 = v49;
  }
  else {
    unint64_t v49 = v57;
  }
  unsigned int v59 = v19 & (-1 << (8 - v58));
  unsigned int v60 = v13 - v59;
  if (v51) {
    unsigned int v60 = 0;
  }
  BOOL v20 = v16 == 0;
  unsigned __int32 v61 = v126.i32[1] - v59;
  if (!v20) {
    unsigned __int32 v61 = 0;
  }
  v125[0] = v60;
  v125[1] = v61;
  unint64_t v62 = v17;
  unint64_t v63 = v46 >> v49;
  if (v21) {
    unsigned __int32 v64 = 0;
  }
  else {
    unsigned __int32 v64 = v126.i32[2] - v59;
  }
  BOOL v20 = v23 == 0;
  unsigned __int32 v65 = v126.i32[3] - v59;
  if (!v20) {
    unsigned __int32 v65 = 0;
  }
  v125[2] = v64;
  v125[3] = v65;
  unsigned __int32 v66 = v127.i32[0] - v59;
  if (v25) {
    unsigned __int32 v66 = 0;
  }
  unsigned __int32 v67 = v127.i32[1] - v59;
  if (v27) {
    unsigned __int32 v67 = 0;
  }
  v125[4] = v66;
  v125[5] = v67;
  unsigned __int32 v68 = v127.i32[2] - v59;
  if (v29) {
    unsigned __int32 v68 = 0;
  }
  unsigned __int32 v69 = v127.i32[3] - v59;
  if (v31) {
    unsigned __int32 v69 = 0;
  }
  v125[6] = v68;
  v125[7] = v69;
  if (v63 <= 1) {
    unint64_t v70 = 1;
  }
  else {
    unint64_t v70 = v46 >> v49;
  }
  uint64_t v71 = 4 * v17;
  int8x8_t v72 = &byte_242EA911D;
  do
  {
    if (v71 != v54)
    {
      if (v49) {
        unint64_t v73 = v125[v54 / 4] / v70;
      }
      else {
        LODWORD(v73) = 0;
      }
      *((_DWORD *)v123 + v55) = v73;
      if (v63 >= 2)
      {
        unint64_t v74 = v125[v54 / 4];
        if (v74)
        {
          if (v74 / v70 * v70 == v74 && ((v74 / v70) & 1) != 0)
          {
            if (v59 || v73 != 1)
            {
              if ((a3 | 2) != 3 || (uint64_t v76 = v126.u32[v54 / 4], v76 != 128) && ((a3 | 2) != 3 || v70 + 128 != v76))
              {
                LODWORD(v73) = v73 - 1;
                *((_DWORD *)v123 + v55) = v73;
              }
            }
            else
            {
              LODWORD(v73) = 1;
            }
          }
        }
      }
      if (v73 >> v49 || v126.i32[v54 / 4] == 255) {
        *((_DWORD *)v123 + v55) = ~(-1 << v49);
      }
      if (*v72 >= a5 || *(v72 - 1) >= a4) {
        *((_DWORD *)v123 + v55) = 0;
      }
      ++v55;
    }
    v54 += 4;
    v72 += 2;
  }
  while (v54 != 32);
  uint64_t result = v53 | v51;
  int8x16_t v78 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v79 = 8 * (a1 & 7);
  *(_WORD *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
  if (result == 1)
  {
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v82 = v79;
    do
    {
      int8x16_t v83 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v80;
      if (v83[1] >= a5 || *v83 >= a4) {
        unint64_t v85 = 0;
      }
      else {
        unint64_t v85 = (unint64_t)v126.u32[v80] >> 4;
      }
      if ((unint64_t)(v82 - v79 + (v81 << 6) - 45) >= 0xFFFFFFFFFFFFFFCFLL)
      {
        uint64_t v86 = 0;
        unint64_t v87 = 4;
        do
        {
          unint64_t v88 = 64 - v82;
          if (64 - v82 >= v87) {
            unint64_t v88 = v87;
          }
          v78[v81] |= ((v85 >> v86) & ~(-1 << v88)) << v82;
          v86 += v88;
          unint64_t v89 = v88 + v82;
          v81 += v89 >> 6;
          uint64_t v82 = v89 & 0x3F;
          v87 -= v88;
        }
        while (v87);
      }
      ++v80;
    }
    while (v80 != 8);
    return result;
  }
  if (v19 | v38)
  {
    uint64_t v90 = v79 | 3;
    LODWORD(v91) = (v38 + 6) & 7;
    if (v38 < 3) {
      unint64_t v92 = v38 + 1;
    }
    else {
      unint64_t v92 = 0;
    }
    if (v38 >= 3) {
      uint64_t v91 = v91;
    }
    else {
      uint64_t v91 = 0;
    }
    *v78 |= v91 << v79;
    if (v38 >= 3)
    {
      uint64_t v94 = 0;
      int v98 = 3;
      if (!v58) {
        goto LABEL_232;
      }
LABEL_227:
      if ((unint64_t)(v58 - v79 + v90 + (v94 << 6)) <= 0x30)
      {
        uint64_t v99 = 0;
        unint64_t v100 = v58;
        do
        {
          unint64_t v101 = 64 - v90;
          if (64 - v90 >= v100) {
            unint64_t v101 = v100;
          }
          v78[v94] |= (((unint64_t)(v59 >> (8 - v58)) >> v99) & ~(-1 << v101)) << v90;
          v99 += v101;
          unint64_t v102 = v101 + v90;
          v94 += v102 >> 6;
          uint64_t v90 = v102 & 0x3F;
          v100 -= v101;
        }
        while (v100);
      }
      goto LABEL_232;
    }
    unint64_t v93 = 2 * (v38 < 3);
  }
  else
  {
    unint64_t v92 = 0;
    uint64_t v90 = v79 | 3;
    unint64_t v93 = 2;
  }
  if (v93 - v79 + v90 <= 0x30)
  {
    uint64_t v94 = 0;
    uint64_t v95 = 0;
    do
    {
      unint64_t v96 = 64 - v90;
      if (64 - v90 >= v93) {
        unint64_t v96 = v93;
      }
      v78[v94] |= ((v92 >> v95) & ~(-1 << v96)) << v90;
      v95 += v96;
      unint64_t v97 = v96 + v90;
      v94 += v97 >> 6;
      uint64_t v90 = v97 & 0x3F;
      v93 -= v96;
    }
    while (v93);
  }
  else
  {
    uint64_t v94 = 0;
  }
  int v98 = 5;
  if (!v38) {
    goto LABEL_233;
  }
  if (v58) {
    goto LABEL_227;
  }
LABEL_232:
  v98 += v58;
LABEL_233:
  if (v49)
  {
    if ((unint64_t)(v90 - v79 + (v94 << 6) + 3) <= 0x30)
    {
      uint64_t v103 = 0;
      unint64_t v104 = 3;
      do
      {
        unint64_t v105 = 64 - v90;
        if (64 - v90 >= v104) {
          unint64_t v105 = v104;
        }
        v78[v94] |= ((v62 >> v103) & ~(-1 << v105)) << v90;
        v103 += v105;
        unint64_t v106 = v105 + v90;
        v94 += v106 >> 6;
        uint64_t v90 = v106 & 0x3F;
        v104 -= v105;
      }
      while (v104);
    }
    v98 += 3;
  }
  unsigned int v107 = (((37 * (48 - v98)) >> 8)
        + (((48 - v98 - ((unsigned __int16)(37 * (48 - v98)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v108 = -7 * v107 + 48 - v98;
  if ((v108 - 257) >= 0xFFFFFF00 && v90 - v79 + (v94 << 6) + v108 <= 0x30)
  {
    do
    {
      unint64_t v109 = 64 - v90;
      if (64 - v90 >= v108) {
        unint64_t v109 = v108;
      }
      unint64_t v110 = v109 + v90;
      v94 += v110 >> 6;
      uint64_t v90 = v110 & 0x3F;
      v108 -= v109;
    }
    while (v108);
  }
  uint64_t v111 = 0;
  unint64_t v112 = v107 - v49;
  if (v112) {
    BOOL v113 = v112 > 0x100;
  }
  else {
    BOOL v113 = 1;
  }
  char v114 = v113;
  do
  {
    if (v49 && v49 - v79 + v90 + (v94 << 6) <= 0x30)
    {
      uint64_t v115 = 0;
      unint64_t v116 = *((unsigned int *)v123 + v111);
      unint64_t v117 = v49;
      do
      {
        unint64_t v118 = 64 - v90;
        if (64 - v90 >= v117) {
          unint64_t v118 = v117;
        }
        v78[v94] |= ((v116 >> v115) & ~(-1 << v118)) << v90;
        v115 += v118;
        unint64_t v119 = v118 + v90;
        v94 += v119 >> 6;
        uint64_t v90 = v119 & 0x3F;
        v117 -= v118;
      }
      while (v117);
    }
    if ((v114 & 1) == 0 && v90 - v79 + (v94 << 6) + v112 <= 0x30)
    {
      unint64_t v120 = v112;
      do
      {
        unint64_t v121 = 64 - v90;
        if (64 - v90 >= v120) {
          unint64_t v121 = v120;
        }
        unint64_t v122 = v121 + v90;
        v94 += v122 >> 6;
        uint64_t v90 = v122 & 0x3F;
        v120 -= v121;
      }
      while (v120);
    }
    ++v111;
  }
  while (v111 != 7);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(uint64_t a1, uint64_t a2, int16x4_t *a3, unsigned int a4, int a5)
{
  uint64_t v429 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v191 = 0;
LABEL_384:
    *(void *)a1 = 0;
    *(void *)(a1 + a2) = 0;
    *(void *)(a1 + 2 * a2) = 0;
    *(void *)(a1 + 3 * a2) = 0;
    return v191;
  }
  unsigned int v5 = a4;
  if (a4 >= 0xF0)
  {
    uint64_t v6 = 0;
    unsigned int v7 = a5 & 0xFFFFFFFD;
    int8x16_t v391 = a3;
    while (1)
    {
      unint64_t v24 = (unint64_t)a3 + 6 * v6;
      int v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v26 = 8 * (v24 & 7);
      if ((v5 >> v6))
      {
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        uint64_t v29 = v26;
        do
        {
          if ((unint64_t)(v29 - v26 + (v28 << 6) - 45) < 0xFFFFFFFFFFFFFFCFLL)
          {
            char v30 = 0;
          }
          else
          {
            char v30 = 0;
            uint64_t v34 = 0;
            unint64_t v35 = 4;
            do
            {
              if (64 - v29 >= v35) {
                unint64_t v36 = v35;
              }
              else {
                unint64_t v36 = 64 - v29;
              }
              v30 |= (unint64_t)((v25[v28] >> v29) & ~(-1 << v36)) << v34;
              v34 += v36;
              unint64_t v37 = v36 + v29;
              v28 += v37 >> 6;
              uint64_t v29 = v37 & 0x3F;
              v35 -= v36;
            }
            while (v35);
          }
          int v31 = 16 * (v30 & 0xF);
          int v32 = v31 - (v30 & 1) + 8;
          if (v31 == 240) {
            int v32 = 255;
          }
          if (!v31) {
            int v32 = 0;
          }
          if (v31 == 128 && v7 == 1) {
            int v32 = v31;
          }
          if (a5 == 4) {
            int v32 = v31;
          }
          *(&v392 + v27++) = v32 ^ (((a5 & 0xFFFFFFFD) == 1) << 7);
        }
        while (v27 != 8);
        LOBYTE(v8) = v392;
        LOBYTE(v9) = v393;
        LOBYTE(v11) = v394;
        LOBYTE(v10) = v395;
        LOBYTE(v13) = v396;
        LOBYTE(v12) = v397;
        char v15 = v398;
        char v14 = v399;
        goto LABEL_5;
      }
      uint64_t v38 = v26 | 3;
      if (((*v25 >> v26) & 7) != 0)
      {
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        int v41 = 0;
        int v42 = ((*v25 >> v26) & 7) + 2;
        int v43 = 3;
        goto LABEL_40;
      }
      uint64_t v40 = 0;
      if ((unint64_t)(v38 - v26) > 0x2E) {
        break;
      }
      char v44 = 0;
      uint64_t v45 = 0;
      unint64_t v46 = 2;
      do
      {
        unint64_t v47 = 64 - v38;
        if (64 - v38 >= v46) {
          unint64_t v47 = v46;
        }
        v44 |= (unint64_t)((v25[v40] >> v38) & ~(-1 << v47)) << v45;
        v45 += v47;
        unint64_t v48 = v47 + v38;
        v40 += v48 >> 6;
        uint64_t v38 = v48 & 0x3F;
        v46 -= v47;
      }
      while (v46);
      int v41 = v44 & 3;
      if (v41 == 2)
      {
        unsigned int v39 = 0;
        int v42 = 1;
        goto LABEL_39;
      }
      if (v41 == 1)
      {
        int v42 = 0;
        int v41 = 2;
        int v43 = 5;
        unsigned int v39 = 255;
      }
      else
      {
        if ((v44 & 3) == 0) {
          break;
        }
        unsigned int v39 = 0;
        int v41 = 2;
        int v43 = 5;
        int v42 = 2;
      }
LABEL_40:
      unint64_t v49 = &kDQuadParamTable[10 * v42];
      int v50 = v49[4];
      LODWORD(v49) = v49[5];
      unsigned int v51 = v50 + 2;
      BOOL v52 = v49 != 0;
      unsigned int v53 = v49 + 2;
      if (v51 >= 8) {
        uint64_t v54 = 8;
      }
      else {
        uint64_t v54 = v51;
      }
      if (8 * v52 >= v53) {
        unint64_t v55 = v53;
      }
      else {
        unint64_t v55 = (8 * v52);
      }
      char v56 = 8 - v54;
      if (v42)
      {
        if (v54)
        {
          if ((unint64_t)(v54 - v26 + v38 + (v40 << 6)) <= 0x30)
          {
            int v57 = 0;
            uint64_t v58 = 0;
            unint64_t v59 = v54;
            do
            {
              unint64_t v60 = 64 - v38;
              if (64 - v38 >= v59) {
                unint64_t v60 = v59;
              }
              v57 |= (unint64_t)((v25[v40] >> v38) & ~(-1 << v60)) << v58;
              v58 += v60;
              unint64_t v61 = v60 + v38;
              v40 += v61 >> 6;
              uint64_t v38 = v61 & 0x3F;
              v59 -= v60;
            }
            while (v59);
          }
          else
          {
            int v57 = 0;
          }
          int v43 = v54 + v41 + 3;
        }
        else
        {
          int v57 = 0;
        }
        unsigned int v39 = v57 << v56;
      }
      if (v55)
      {
        if ((unint64_t)(v38 - v26 + (v40 << 6) + 3) <= 0x30)
        {
          int v62 = 0;
          uint64_t v64 = 0;
          unint64_t v65 = 3;
          do
          {
            unint64_t v66 = 64 - v38;
            if (64 - v38 >= v65) {
              unint64_t v66 = v65;
            }
            v62 |= (unint64_t)((v25[v40] >> v38) & ~(-1 << v66)) << v64;
            v64 += v66;
            unint64_t v67 = v66 + v38;
            v40 += v67 >> 6;
            uint64_t v38 = v67 & 0x3F;
            v65 -= v66;
          }
          while (v65);
        }
        else
        {
          int v62 = 0;
        }
        uint64_t v425 = 0;
        uint64_t v426 = 0;
        int v428 = 0;
        uint64_t v427 = 0;
        unsigned int v68 = 45 - v43;
        unsigned int v69 = (45 - v43) / 7u;
        unint64_t v70 = v55 - v26;
        unint64_t v71 = (v38 | (v40 << 6)) + v68 % 7;
        unint64_t v72 = v71 & 0x3F;
        if (v70 + v72 + (v71 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          uint64_t v63 = 0;
          uint64_t v73 = 0;
          unint64_t v74 = v71 >> 6;
          unint64_t v75 = v55;
          do
          {
            unint64_t v76 = 64 - v72;
            if (64 - v72 >= v75) {
              unint64_t v76 = v75;
            }
            v63 |= ((unint64_t)((v25[v74] >> v72) & ~(-1 << v76)) << v73);
            v73 += v76;
            unint64_t v77 = v76 + v72;
            v74 += v77 >> 6;
            unint64_t v72 = v77 & 0x3F;
            v75 -= v76;
          }
          while (v75);
          LODWORD(v425) = v63;
          unint64_t v71 = v72 | (v74 << 6);
        }
        else
        {
          uint64_t v63 = 0;
        }
        uint64_t v78 = v69 - v55;
        unint64_t v79 = v71 + v78;
        uint64_t v80 = (v71 + v78) & 0x3F;
        if (v70 + v80 + ((v71 + v78) & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v81 = 0;
          uint64_t v82 = 0;
          unint64_t v83 = v79 >> 6;
          unint64_t v84 = v55;
          do
          {
            unint64_t v85 = 64 - v80;
            if (64 - v80 >= v84) {
              unint64_t v85 = v84;
            }
            v81 |= (unint64_t)((v25[v83] >> v80) & ~(-1 << v85)) << v82;
            v82 += v85;
            unint64_t v86 = v85 + v80;
            v83 += v86 >> 6;
            uint64_t v80 = v86 & 0x3F;
            v84 -= v85;
          }
          while (v84);
          HIDWORD(v425) = v81;
          unint64_t v79 = v80 | (v83 << 6);
        }
        else
        {
          HIDWORD(v425) = 0;
        }
        unint64_t v87 = v79 + v78;
        uint64_t v88 = v87 & 0x3F;
        if (v70 + v88 + (v87 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v89 = 0;
          uint64_t v90 = 0;
          unint64_t v91 = v87 >> 6;
          unint64_t v92 = v55;
          do
          {
            unint64_t v93 = 64 - v88;
            if (64 - v88 >= v92) {
              unint64_t v93 = v92;
            }
            v89 |= (unint64_t)((v25[v91] >> v88) & ~(-1 << v93)) << v90;
            v90 += v93;
            unint64_t v94 = v93 + v88;
            v91 += v94 >> 6;
            uint64_t v88 = v94 & 0x3F;
            v92 -= v93;
          }
          while (v92);
          LODWORD(v426) = v89;
          unint64_t v87 = v88 | (v91 << 6);
        }
        else
        {
          LODWORD(v426) = 0;
        }
        unint64_t v95 = v87 + v78;
        uint64_t v96 = v95 & 0x3F;
        if (v70 + v96 + (v95 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v97 = 0;
          uint64_t v98 = 0;
          unint64_t v99 = v95 >> 6;
          unint64_t v100 = v55;
          do
          {
            unint64_t v101 = 64 - v96;
            if (64 - v96 >= v100) {
              unint64_t v101 = v100;
            }
            v97 |= (unint64_t)((v25[v99] >> v96) & ~(-1 << v101)) << v98;
            v98 += v101;
            unint64_t v102 = v101 + v96;
            v99 += v102 >> 6;
            uint64_t v96 = v102 & 0x3F;
            v100 -= v101;
          }
          while (v100);
          HIDWORD(v426) = v97;
          unint64_t v95 = v96 | (v99 << 6);
        }
        else
        {
          HIDWORD(v426) = 0;
        }
        unint64_t v103 = v95 + v78;
        uint64_t v104 = v103 & 0x3F;
        if (v70 + v104 + (v103 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v105 = 0;
          uint64_t v106 = 0;
          unint64_t v107 = v103 >> 6;
          unint64_t v108 = v55;
          do
          {
            unint64_t v109 = 64 - v104;
            if (64 - v104 >= v108) {
              unint64_t v109 = v108;
            }
            v105 |= (unint64_t)((v25[v107] >> v104) & ~(-1 << v109)) << v106;
            v106 += v109;
            unint64_t v110 = v109 + v104;
            v107 += v110 >> 6;
            uint64_t v104 = v110 & 0x3F;
            v108 -= v109;
          }
          while (v108);
          LODWORD(v427) = v105;
          unint64_t v103 = v104 | (v107 << 6);
        }
        else
        {
          LODWORD(v427) = 0;
        }
        unint64_t v111 = v103 + v78;
        unint64_t v112 = v111 >> 6;
        uint64_t v113 = v111 & 0x3F;
        if (v70 + v113 + (v111 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v114 = 0;
          uint64_t v115 = 0;
          unint64_t v116 = v55;
          do
          {
            unint64_t v117 = 64 - v113;
            if (64 - v113 >= v116) {
              unint64_t v117 = v116;
            }
            v114 |= (unint64_t)((v25[v112] >> v113) & ~(-1 << v117)) << v115;
            v115 += v117;
            unint64_t v118 = v117 + v113;
            v112 += v118 >> 6;
            uint64_t v113 = v118 & 0x3F;
            v116 -= v117;
          }
          while (v116);
        }
        else
        {
          int v114 = 0;
        }
        HIDWORD(v427) = v114;
        unint64_t v119 = (v113 | (v112 << 6)) + v78;
        uint64_t v120 = v119 & 0x3F;
        if (v70 + v120 + (v119 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v121 = 0;
          uint64_t v122 = 0;
          unint64_t v123 = v119 >> 6;
          unint64_t v124 = v55;
          do
          {
            unint64_t v125 = 64 - v120;
            if (64 - v120 >= v124) {
              unint64_t v125 = v124;
            }
            v121 |= (unint64_t)((v25[v123] >> v120) & ~(-1 << v125)) << v122;
            v122 += v125;
            unint64_t v126 = v125 + v120;
            v123 += v126 >> 6;
            uint64_t v120 = v126 & 0x3F;
            v124 -= v125;
          }
          while (v124);
        }
        else
        {
          int v121 = 0;
        }
        int v428 = v121;
      }
      else
      {
        int v62 = 0;
        uint64_t v63 = 0;
        uint64_t v425 = 0;
        uint64_t v426 = 0;
        int v428 = 0;
        uint64_t v427 = 0;
      }
      unint64_t v127 = *(void *)&kDQuadParamTable[10 * v42 + 2];
      if (v127 >> v55 <= 1) {
        unint64_t v128 = 1;
      }
      else {
        unint64_t v128 = v127 >> v55;
      }
      unint64_t v129 = v128 >> 1;
      unint64_t v130 = (unint64_t)(1 << v56) >> 1;
      if (v128 >> 1 < v130) {
        unint64_t v130 = v128 >> 1;
      }
      unint64_t v131 = 128 - v39;
      if (v39) {
        uint64_t v132 = v130;
      }
      else {
        uint64_t v132 = 0;
      }
      BOOL v133 = v39 == 128;
      if (v39 >= 0xFF) {
        char v134 = -1;
      }
      else {
        char v134 = v39;
      }
      char v135 = v134 ^ 0x80;
      if (v128 <= v131)
      {
        char v136 = 127;
      }
      else
      {
        char v135 = 0;
        char v136 = 0;
      }
      if (v7 == 1) {
        char v137 = v135;
      }
      else {
        char v137 = v134;
      }
      if (v7 == 1) {
        char v14 = v136;
      }
      else {
        char v14 = -1;
      }
      if (!v55)
      {
        if (a5 == 4)
        {
          char v15 = v14;
          LOBYTE(v12) = v14;
          LOBYTE(v13) = v14;
          LOBYTE(v10) = v14;
          LOBYTE(v11) = v14;
          LOBYTE(v9) = v14;
          LOBYTE(v8) = v14;
          a3 = v391;
          unsigned int v5 = a4;
          if ((v39 & 0x7FC00000 | 0x80000000) != 0xFF800000)
          {
            char v14 = v137;
            char v15 = v137;
            LOBYTE(v12) = v137;
            LOBYTE(v13) = v137;
            LOBYTE(v10) = v137;
            LOBYTE(v11) = v137;
            LOBYTE(v9) = v137;
            LOBYTE(v8) = v137;
          }
          goto LABEL_5;
        }
        char v14 = v137;
        char v15 = v137;
        LOBYTE(v12) = v137;
        LOBYTE(v13) = v137;
        LOBYTE(v10) = v137;
        LOBYTE(v11) = v137;
        LOBYTE(v9) = v137;
        LOBYTE(v8) = v137;
        goto LABEL_308;
      }
      unint64_t v138 = v127 + v39;
      uint64_t v139 = ~(-1 << v55);
      unint64_t v140 = v131 / v128;
      if (v62)
      {
        BOOL v141 = v140 == v63;
        if (v39 || v63)
        {
          if (v138 >= 0x100 && v63 == v139)
          {
            uint64_t v142 = 1;
            uint64_t v63 = 255;
            goto LABEL_147;
          }
          uint64_t v63 = v129 + v128 * v63;
        }
        uint64_t v142 = 1;
      }
      else
      {
        uint64_t v142 = 0;
        uint64_t v63 = v132;
        BOOL v141 = v39 == 128;
      }
LABEL_147:
      unint64_t v143 = v63 + v39;
      unint64_t v144 = v143;
      if (a5 == 4)
      {
        unint64_t v144 = 2139095039;
        if ((v143 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v144 = 4286578687;
          if ((v143 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v144 = v143;
          }
        }
      }
      if (v144 >= 0xFF) {
        int v145 = 255;
      }
      else {
        int v145 = v144;
      }
      if (v141) {
        int v146 = 0;
      }
      else {
        int v146 = v145 ^ 0x80;
      }
      if (v7 == 1) {
        int v8 = v146;
      }
      else {
        int v8 = v145;
      }
      int v392 = v8;
      if (v62 == 1)
      {
        uint64_t v147 = v132;
        BOOL v148 = v39 == 128;
      }
      else
      {
        uint64_t v149 = *(unsigned int *)((unint64_t)&v425 | (4 * v142));
        BOOL v148 = v140 == v149;
        if (v39 | v149)
        {
          if (v138 >= 0x100 && v149 == v139) {
            uint64_t v147 = 255;
          }
          else {
            uint64_t v147 = v129 + v128 * v149;
          }
        }
        else
        {
          uint64_t v147 = 0;
        }
        ++v142;
      }
      unint64_t v150 = v147 + v39;
      unint64_t v151 = v150;
      if (a5 == 4)
      {
        unint64_t v151 = 2139095039;
        if ((v150 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v151 = 4286578687;
          if ((v150 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v151 = v150;
          }
        }
      }
      if (v151 >= 0xFF) {
        int v152 = 255;
      }
      else {
        int v152 = v151;
      }
      if (v148) {
        int v153 = 0;
      }
      else {
        int v153 = v152 ^ 0x80;
      }
      if (v7 == 1) {
        int v9 = v153;
      }
      else {
        int v9 = v152;
      }
      int v393 = v9;
      if (v62 == 2)
      {
        uint64_t v154 = v132;
        BOOL v155 = v39 == 128;
      }
      else
      {
        uint64_t v156 = *((unsigned int *)&v425 + v142);
        BOOL v155 = v140 == v156;
        if (v39 | v156)
        {
          if (v138 >= 0x100 && v156 == v139) {
            uint64_t v154 = 255;
          }
          else {
            uint64_t v154 = v129 + v128 * v156;
          }
        }
        else
        {
          uint64_t v154 = 0;
        }
        ++v142;
      }
      unint64_t v157 = v154 + v39;
      unint64_t v158 = v157;
      if (a5 == 4)
      {
        unint64_t v158 = 2139095039;
        if ((v157 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v158 = 4286578687;
          if ((v157 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v158 = v157;
          }
        }
      }
      if (v158 >= 0xFF) {
        int v159 = 255;
      }
      else {
        int v159 = v158;
      }
      if (v155) {
        int v160 = 0;
      }
      else {
        int v160 = v159 ^ 0x80;
      }
      if (v7 == 1) {
        int v11 = v160;
      }
      else {
        int v11 = v159;
      }
      int v394 = v11;
      if (v62 == 3)
      {
        uint64_t v161 = v132;
        BOOL v162 = v39 == 128;
      }
      else
      {
        uint64_t v163 = *((unsigned int *)&v425 + v142);
        BOOL v162 = v140 == v163;
        if (v39 | v163)
        {
          if (v138 >= 0x100 && v163 == v139) {
            uint64_t v161 = 255;
          }
          else {
            uint64_t v161 = v129 + v128 * v163;
          }
        }
        else
        {
          uint64_t v161 = 0;
        }
        ++v142;
      }
      unint64_t v164 = v161 + v39;
      unint64_t v165 = v164;
      if (a5 == 4)
      {
        unint64_t v165 = 2139095039;
        if ((v164 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v165 = 4286578687;
          if ((v164 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v165 = v164;
          }
        }
      }
      if (v165 >= 0xFF) {
        int v166 = 255;
      }
      else {
        int v166 = v165;
      }
      if (v162) {
        int v167 = 0;
      }
      else {
        int v167 = v166 ^ 0x80;
      }
      if (v7 == 1) {
        int v10 = v167;
      }
      else {
        int v10 = v166;
      }
      int v395 = v10;
      if (v62 == 4)
      {
        uint64_t v168 = v132;
        BOOL v169 = v39 == 128;
      }
      else
      {
        uint64_t v170 = *((unsigned int *)&v425 + v142);
        BOOL v169 = v140 == v170;
        if (v39 | v170)
        {
          if (v138 >= 0x100 && v170 == v139) {
            uint64_t v168 = 255;
          }
          else {
            uint64_t v168 = v129 + v128 * v170;
          }
        }
        else
        {
          uint64_t v168 = 0;
        }
        ++v142;
      }
      unint64_t v171 = v168 + v39;
      unint64_t v172 = v171;
      if (a5 == 4)
      {
        unint64_t v172 = 2139095039;
        if ((v171 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v171 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v172 = 4286578687;
          }
          else {
            unint64_t v172 = v171;
          }
        }
      }
      if (v172 >= 0xFF) {
        int v173 = 255;
      }
      else {
        int v173 = v172;
      }
      if (v169) {
        int v174 = 0;
      }
      else {
        int v174 = v173 ^ 0x80;
      }
      if (v7 == 1) {
        int v13 = v174;
      }
      else {
        int v13 = v173;
      }
      int v396 = v13;
      unint64_t v389 = v138;
      if (v62 == 5)
      {
        uint64_t v175 = v139;
        uint64_t v176 = v132;
        BOOL v177 = v39 == 128;
      }
      else
      {
        uint64_t v178 = *((unsigned int *)&v425 + v142);
        BOOL v177 = v140 == v178;
        if (v39 | v178)
        {
          if (v138 >= 0x100 && v178 == v139)
          {
            uint64_t v175 = v139;
            uint64_t v176 = 255;
          }
          else
          {
            uint64_t v175 = v139;
            uint64_t v176 = v129 + v128 * v178;
          }
        }
        else
        {
          uint64_t v175 = v139;
          uint64_t v176 = 0;
        }
        ++v142;
      }
      unint64_t v179 = v176 + v39;
      unint64_t v180 = v179;
      if (a5 == 4)
      {
        unint64_t v180 = 2139095039;
        if ((v179 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v179 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v180 = 4286578687;
          }
          else {
            unint64_t v180 = v179;
          }
        }
      }
      if (v180 >= 0xFF) {
        int v181 = 255;
      }
      else {
        int v181 = v180;
      }
      if (v177) {
        int v12 = 0;
      }
      else {
        int v12 = v181 ^ 0x80;
      }
      if (v7 != 1) {
        int v12 = v181;
      }
      int v397 = v12;
      if (v62 == 6)
      {
        uint64_t v182 = v132;
        BOOL v183 = v39 == 128;
      }
      else
      {
        uint64_t v184 = *((unsigned int *)&v425 + v142);
        BOOL v183 = v140 == v184;
        if (v39 | v184)
        {
          if (v389 >= 0x100 && v184 == v175) {
            uint64_t v182 = 255;
          }
          else {
            uint64_t v182 = v129 + v128 * v184;
          }
        }
        else
        {
          uint64_t v182 = 0;
        }
        ++v142;
      }
      unint64_t v185 = v182 + v39;
      unint64_t v186 = v185;
      if (a5 == 4)
      {
        unint64_t v186 = 2139095039;
        if ((v185 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v186 = 4286578687;
          if ((v185 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v186 = v185;
          }
        }
      }
      if (v186 >= 0xFF) {
        LOBYTE(v186) = -1;
      }
      char v187 = v186 ^ 0x80;
      if (v183) {
        char v187 = 0;
      }
      if (v7 == 1) {
        char v15 = v187;
      }
      else {
        char v15 = v186;
      }
      if (v62 != 7)
      {
        uint64_t v188 = *((unsigned int *)&v425 + v142);
        BOOL v133 = v140 == v188;
        if (v39 | v188)
        {
          if (v389 >= 0x100 && v188 == v175) {
            uint64_t v132 = 255;
          }
          else {
            uint64_t v132 = v129 + v128 * v188;
          }
        }
        else
        {
          uint64_t v132 = 0;
        }
      }
      unint64_t v189 = v132 + v39;
      unint64_t v190 = v189;
      if (a5 == 4)
      {
        unint64_t v190 = 2139095039;
        if ((v189 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v190 = 4286578687;
          if ((v189 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v190 = v132 + v39;
          }
        }
      }
      if (v190 >= 0xFF) {
        LOBYTE(v190) = -1;
      }
      char v14 = v190 ^ 0x80;
      if (v133) {
        char v14 = 0;
      }
      if (v7 != 1) {
        char v14 = v190;
      }
LABEL_308:
      a3 = v391;
      unsigned int v5 = a4;
LABEL_5:
      int v16 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v6;
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      unsigned int v19 = (char *)&v400 + 4 * v17;
      v19[v18] = v8;
      BOOL v20 = (char *)&v400 + 4 * (v17 + 1);
      v20[v18] = v9;
      uint64_t v21 = (v18 + 1);
      v19[v21] = v11;
      v20[v21] = v10;
      BOOL v22 = (char *)&v400 + 4 * (v17 + 2);
      v22[v18] = v13;
      int v23 = (char *)&v400 + 4 * (v17 + 3);
      v23[v18] = v12;
      v22[v21] = v15;
      v23[v21] = v14;
      if (++v6 == 4)
      {
        *(unsigned char *)a1 = v400;
        *(unsigned char *)(a1 + 1) = BYTE4(v400);
        *(unsigned char *)(a1 + 2) = v401;
        *(unsigned char *)(a1 + 3) = v405;
        *(unsigned char *)(a1 + 4) = v409;
        *(unsigned char *)(a1 + 5) = v413;
        *(unsigned char *)(a1 + 6) = v417;
        *(unsigned char *)(a1 + 7) = v421;
        int8x16_t v193 = (unsigned char *)(a1 + a2);
        *int8x16_t v193 = BYTE1(v400);
        v193[1] = BYTE5(v400);
        v193[2] = v402;
        v193[3] = v406;
        v193[4] = v410;
        v193[5] = v414;
        v193[6] = v418;
        v193[7] = v422;
        int8x16_t v194 = (unsigned char *)(a1 + a2 + a2);
        *int8x16_t v194 = BYTE2(v400);
        v194[1] = BYTE6(v400);
        v194[2] = v403;
        v194[3] = v407;
        v194[4] = v411;
        v194[5] = v415;
        v194[6] = v419;
        v194[7] = v423;
        int8x16_t v195 = &v194[a2];
        *int8x16_t v195 = BYTE3(v400);
        v195[1] = HIBYTE(v400);
        v195[2] = v404;
        v195[3] = v408;
        v195[4] = v412;
        v195[5] = v416;
        v195[6] = v420;
        uint64_t v191 = 24;
        v195[7] = v424;
        return v191;
      }
    }
    unsigned int v39 = 0;
    int v42 = 0;
    int v41 = 2;
LABEL_39:
    int v43 = 5;
    goto LABEL_40;
  }
  if (a4 == 31)
  {
    int16x4_t v196 = *a3;
    int16x4_t v197 = a3[1];
    int16x4_t v198 = a3[2];
    int16x4_t v199 = a3[3];
    *(int16x4_t *)a1 = vuzp1_s16(*a3, v198);
    *(int16x4_t *)(a1 + a2) = vuzp2_s16(v196, v198);
    int8x16_t v200 = (int16x4_t *)(a1 + 2 * a2);
    *int8x16_t v200 = vuzp1_s16(v197, v199);
    *(int16x4_t *)((char *)v200 + a2) = vuzp2_s16(v197, v199);
    return 32;
  }
  if (a4 == 96)
  {
    int8x8_t v192 = vdup_lane_s8((int8x8_t)*a3, 0);
    *(int8x8_t *)a1 = v192;
    *(int8x8_t *)(a1 + a2) = v192;
    *(int8x8_t *)(a1 + 2 * a2) = v192;
    *(int8x8_t *)(a1 + 3 * a2) = v192;
    return 1;
  }
  unint64_t v201 = 8 * (a3 & 7);
  unint64_t v202 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v203 = v201 + 12;
  unint64_t v204 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v201;
  if (v201 >= 0x35) {
    v204 |= *(void *)(v202 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v205 = (8 * (a3 & 7)) | 0xC0;
  int8x16_t v206 = vdupq_n_s8(((a4 >> 5) | (8 * v204)) & 0xF);
  v207.i64[0] = 0x303030303030303;
  v207.i64[1] = 0x303030303030303;
  int8x16_t v208 = vandq_s8(v206, v207);
  int8x16_t v209 = vbicq_s8(vdupq_n_s8(((v204 >> 1) & 7) + 1), vceqq_s8(v208, v207));
  v207.i64[0] = 0x202020202020202;
  v207.i64[1] = 0x202020202020202;
  int8x16_t v210 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v206.i8), (int8x8_t)0x4000400040004)))), v207);
  if (vmaxvq_s8(v210) < 1)
  {
    int v220 = 0;
    v221.i64[0] = -1;
    v221.i64[1] = -1;
    int8x16_t v222 = v209;
    int8x16_t v223 = v209;
    int8x16_t v224 = v209;
    v225.i64[0] = -1;
    v225.i64[1] = -1;
    int8x16_t v226 = v209;
    v227.i64[0] = -1;
    v227.i64[1] = -1;
    v228.i64[0] = -1;
    v228.i64[1] = -1;
  }
  else
  {
    int8x16_t v211 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v210, v210));
    int8x16_t v212 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v211, (int16x8_t)v211));
    unint64_t v213 = vpaddq_s32((int32x4_t)v212, (int32x4_t)v212).u64[0];
    v214.i64[0] = v213;
    v214.i64[1] = HIDWORD(v213);
    int64x2_t v215 = v214;
    unint64_t v216 = vaddvq_s64(v214);
    unint64_t v217 = v216 + v203;
    if (v216 <= 0x80 && v205 >= v217)
    {
      int64x2_t v229 = vaddq_s64(vzip1q_s64((int64x2_t)0, v215), vdupq_n_s64(v203 & 0x3C));
      int8x16_t v230 = (int64x2_t *)(v202 + ((v203 >> 3) & 8));
      int8x16_t v219 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v230, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v230->i64[0], 0), (uint64x2_t)vnegq_s64(v229)));
      if (v216 + (v203 & 0x3C) < 0x81)
      {
        int v220 = 0;
      }
      else
      {
        int v220 = 0;
        int8x16_t v219 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v230[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v230[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v229))), v219);
      }
      unint64_t v203 = v217;
    }
    else
    {
      int8x16_t v219 = 0uLL;
      int v220 = 1;
    }
    int32x2_t v231 = vzip1_s32(*(int32x2_t *)v212.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v212, v212, 8uLL));
    v232.i64[0] = v231.u32[0];
    v232.i64[1] = v231.u32[1];
    int64x2_t v233 = (int64x2_t)vshlq_u64((uint64x2_t)v219, (uint64x2_t)vnegq_s64(v232));
    *(int32x2_t *)v219.i8 = vmovn_s64((int64x2_t)v219);
    *(int32x2_t *)v233.i8 = vmovn_s64(v233);
    int8x16_t v234 = (int8x16_t)vzip1q_s32((int32x4_t)v219, (int32x4_t)v233);
    int16x8_t v235 = (int16x8_t)vshlq_u32((uint32x4_t)v234, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v211.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v211, v211, 8uLL)))));
    *(int16x4_t *)v234.i8 = vmovn_s32((int32x4_t)v234);
    *(int16x4_t *)v235.i8 = vmovn_s32((int32x4_t)v235);
    int8x16_t v236 = (int8x16_t)vzip1q_s16((int16x8_t)v234, v235);
    *(int8x8_t *)v236.i8 = vzip1_s8(vmovn_s16((int16x8_t)v236), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v236, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v210.i8, *(int8x8_t *)v206.i8))))));
    v234.i64[0] = 0x101010101010101;
    v234.i64[1] = 0x101010101010101;
    int8x16_t v237 = vshlq_s8(v234, v210);
    v234.i64[0] = -1;
    v234.i64[1] = -1;
    v237.i64[0] = vandq_s8(v236, vaddq_s8(v237, v234)).u64[0];
    int8x16_t v238 = vdupq_lane_s8(*(int8x8_t *)v237.i8, 0);
    int8x16_t v239 = vdupq_lane_s8(*(int8x8_t *)v237.i8, 1);
    int8x16_t v240 = vdupq_lane_s8(*(int8x8_t *)v237.i8, 2);
    int8x16_t v241 = vdupq_lane_s8(*(int8x8_t *)v237.i8, 3);
    int8x16_t v226 = vsubq_s8(v209, v238);
    int8x16_t v224 = vsubq_s8(v209, v239);
    int8x16_t v223 = vsubq_s8(v209, v240);
    int8x16_t v222 = vsubq_s8(v209, v241);
    int8x16_t v228 = vceqzq_s8(v238);
    int8x16_t v227 = vceqzq_s8(v239);
    int8x16_t v225 = vceqzq_s8(v240);
    int8x16_t v221 = vceqzq_s8(v241);
  }
  v242.i64[0] = 0x707070707070707;
  v242.i64[1] = 0x707070707070707;
  int8x16_t v243 = 0uLL;
  int8x16_t v244 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v206, v242), (int8x16_t)0, 0xFuLL), v209);
  int8x16_t v245 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v244, v244));
  int8x16_t v246 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v245, (int16x8_t)v245));
  unint64_t v247 = vpaddq_s32((int32x4_t)v246, (int32x4_t)v246).u64[0];
  v248.i64[0] = v247;
  v248.i64[1] = HIDWORD(v247);
  int64x2_t v249 = v248;
  unint64_t v250 = vaddvq_s64(v248);
  unint64_t v251 = v250 + v203;
  if (v250 <= 0x80 && v205 >= v251)
  {
    unint64_t v253 = v203 & 0x3F;
    int64x2_t v254 = vaddq_s64(vzip1q_s64((int64x2_t)0, v249), vdupq_n_s64(v253));
    uint16x8_t v255 = (int64x2_t *)(v202 + 8 * (v203 >> 6));
    int8x16_t v243 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v255, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v254)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v255->i64[0], 0), (uint64x2_t)vnegq_s64(v254)));
    if (v250 + v253 >= 0x81) {
      int8x16_t v243 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v255[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v254)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v255[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v254))), v243);
    }
    unint64_t v203 = v251;
  }
  else
  {
    int v220 = 1;
  }
  int8x16_t v256 = vandq_s8(v226, (int8x16_t)xmmword_242EA7380);
  int v257 = (a4 >> 5) & 3;
  if (v257 != 2)
  {
    unsigned int v261 = 0;
    unsigned int v259 = 0;
    unint64_t v262 = v203;
    goto LABEL_351;
  }
  unint64_t v258 = v203 + 4;
  if (v205 < v203 + 4)
  {
    unsigned int v259 = 0;
    unint64_t v258 = v203;
LABEL_350:
    unsigned int v261 = 0;
    int v220 = 1;
    unint64_t v262 = v258;
    goto LABEL_351;
  }
  uint64_t v263 = *(void *)(v202 + 8 * (v203 >> 6)) >> v203;
  if ((v203 & 0x3F) >= 0x3D) {
    v263 |= *(void *)(v202 + 8 * (v203 >> 6) + 8) << -(v203 & 0x3F);
  }
  unint64_t v262 = v203 + 8;
  unsigned int v259 = (int)(v263 << 28) >> 28;
  if (v205 < v203 + 8) {
    goto LABEL_350;
  }
  uint64_t v260 = *(void *)(v202 + 8 * (v258 >> 6)) >> v258;
  if ((v258 & 0x3F) >= 0x3D) {
    v260 |= *(void *)(v202 + 8 * (v258 >> 6) + 8) << -(v258 & 0x3F);
  }
  unsigned int v261 = (int)(v260 << 28) >> 28;
LABEL_351:
  int8x16_t v264 = vandq_s8(v224, (int8x16_t)xmmword_242EA7390);
  v256.i8[0] = 0;
  int8x16_t v265 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v256, v256));
  int8x16_t v266 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v265, (int16x8_t)v265));
  unint64_t v267 = vpaddq_s32((int32x4_t)v266, (int32x4_t)v266).u64[0];
  v268.i64[0] = v267;
  v268.i64[1] = HIDWORD(v267);
  int64x2_t v269 = v268;
  unint64_t v270 = vaddvq_s64(v268);
  unint64_t v271 = v270 + v262;
  int8x16_t v272 = 0uLL;
  if (v270 <= 0x80 && v205 >= v271)
  {
    unint64_t v275 = v262 & 0x3F;
    int64x2_t v276 = vaddq_s64(vzip1q_s64((int64x2_t)0, v269), vdupq_n_s64(v275));
    uint8x16_t v277 = (int64x2_t *)(v202 + 8 * (v262 >> 6));
    int8x16_t v274 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v277, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v276)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v277->i64[0], 0), (uint64x2_t)vnegq_s64(v276)));
    if (v270 + v275 >= 0x81) {
      int8x16_t v274 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v277[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v276)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v277[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v276))), v274);
    }
    unint64_t v262 = v271;
  }
  else
  {
    int v220 = 1;
    int8x16_t v274 = 0uLL;
  }
  int8x16_t v278 = vandq_s8(v223, (int8x16_t)xmmword_242EA7390);
  int8x16_t v279 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v264, v264));
  int8x16_t v280 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v279, (int16x8_t)v279));
  unint64_t v281 = vpaddq_s32((int32x4_t)v280, (int32x4_t)v280).u64[0];
  v282.i64[0] = v281;
  v282.i64[1] = HIDWORD(v281);
  int64x2_t v283 = v282;
  unint64_t v284 = vaddvq_s64(v282);
  if (v284 < 0x81)
  {
    int32x2_t v285 = vzip1_s32(*(int32x2_t *)v280.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v280, v280, 8uLL));
    v286.i64[0] = v285.u32[0];
    v286.i64[1] = v285.u32[1];
    int64x2_t v287 = v286;
    int32x4_t v288 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v279.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v279, v279, 8uLL)));
    int16x8_t v289 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v264.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v264, v264, 8uLL)));
    unint64_t v290 = v284 + v262;
    if (v205 >= v284 + v262)
    {
      unint64_t v291 = v262 & 0x3F;
      int64x2_t v292 = vaddq_s64(vzip1q_s64((int64x2_t)0, v283), vdupq_n_s64(v291));
      unint64_t v293 = (int64x2_t *)(v202 + 8 * (v262 >> 6));
      int8x16_t v272 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v293, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v292)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v293->i64[0], 0), (uint64x2_t)vnegq_s64(v292)));
      if (v284 + v291 >= 0x81) {
        int8x16_t v272 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v293[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v292)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v293[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v292))), v272);
      }
      unint64_t v262 = v290;
    }
    else
    {
      int v220 = 1;
    }
    int64x2_t v294 = (int64x2_t)vshlq_u64((uint64x2_t)v272, (uint64x2_t)vnegq_s64(v287));
    *(int32x2_t *)v272.i8 = vmovn_s64((int64x2_t)v272);
    *(int32x2_t *)v294.i8 = vmovn_s64(v294);
    int16x8_t v295 = (int16x8_t)vzip1q_s32((int32x4_t)v272, (int32x4_t)v294);
    int16x8_t v296 = (int16x8_t)vshlq_u32((uint32x4_t)v295, (uint32x4_t)vnegq_s32(v288));
    *(int16x4_t *)v295.i8 = vmovn_s32((int32x4_t)v295);
    *(int16x4_t *)v296.i8 = vmovn_s32((int32x4_t)v296);
    int8x16_t v297 = (int8x16_t)vzip1q_s16(v295, v296);
    int8x16_t v298 = (int8x16_t)vshlq_u16((uint16x8_t)v297, (uint16x8_t)vnegq_s16(v289));
    *(int8x8_t *)v297.i8 = vmovn_s16((int16x8_t)v297);
    *(int8x8_t *)v298.i8 = vmovn_s16((int16x8_t)v298);
    int8x16_t v272 = vzip1q_s8(v297, v298);
  }
  else
  {
    int v220 = 1;
  }
  int8x16_t v299 = vandq_s8(v222, (int8x16_t)xmmword_242EA7390);
  int8x16_t v300 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v278, v278));
  int8x16_t v301 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v300, (int16x8_t)v300));
  unint64_t v302 = vpaddq_s32((int32x4_t)v301, (int32x4_t)v301).u64[0];
  v303.i64[0] = v302;
  v303.i64[1] = HIDWORD(v302);
  int64x2_t v304 = v303;
  unint64_t v305 = vaddvq_s64(v303);
  int8x16_t v306 = 0uLL;
  if (v305 <= 0x80)
  {
    int32x2_t v308 = vzip1_s32(*(int32x2_t *)v301.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v301, v301, 8uLL));
    v309.i64[0] = v308.u32[0];
    v309.i64[1] = v308.u32[1];
    int64x2_t v310 = v309;
    int32x4_t v311 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v300.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v300, v300, 8uLL)));
    int16x8_t v312 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v278.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL)));
    unint64_t v313 = v305 + v262;
    if (v205 >= v305 + v262)
    {
      unint64_t v315 = v262 & 0x3F;
      int64x2_t v316 = vaddq_s64(vzip1q_s64((int64x2_t)0, v304), vdupq_n_s64(v315));
      int8x16_t v317 = (int64x2_t *)(v202 + 8 * (v262 >> 6));
      int8x16_t v314 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v317, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v316)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v317->i64[0], 0), (uint64x2_t)vnegq_s64(v316)));
      if (v305 + v315 >= 0x81) {
        int8x16_t v314 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v317[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v316)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v317[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v316))), v314);
      }
      unint64_t v262 = v313;
    }
    else
    {
      int8x16_t v314 = 0uLL;
      int v220 = 1;
    }
    int64x2_t v318 = (int64x2_t)vshlq_u64((uint64x2_t)v314, (uint64x2_t)vnegq_s64(v310));
    *(int32x2_t *)v314.i8 = vmovn_s64((int64x2_t)v314);
    *(int32x2_t *)v318.i8 = vmovn_s64(v318);
    int16x8_t v319 = (int16x8_t)vzip1q_s32((int32x4_t)v314, (int32x4_t)v318);
    int16x8_t v320 = (int16x8_t)vshlq_u32((uint32x4_t)v319, (uint32x4_t)vnegq_s32(v311));
    *(int16x4_t *)v319.i8 = vmovn_s32((int32x4_t)v319);
    *(int16x4_t *)v320.i8 = vmovn_s32((int32x4_t)v320);
    int8x16_t v321 = (int8x16_t)vzip1q_s16(v319, v320);
    int8x16_t v322 = (int8x16_t)vshlq_u16((uint16x8_t)v321, (uint16x8_t)vnegq_s16(v312));
    *(int8x8_t *)v321.i8 = vmovn_s16((int16x8_t)v321);
    *(int8x8_t *)v322.i8 = vmovn_s16((int16x8_t)v322);
    int8x16_t v307 = vzip1q_s8(v321, v322);
  }
  else
  {
    int v220 = 1;
    int8x16_t v307 = 0uLL;
  }
  int8x16_t v323 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v299, v299));
  int8x16_t v324 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v323, (int16x8_t)v323));
  unint64_t v325 = vpaddq_s32((int32x4_t)v324, (int32x4_t)v324).u64[0];
  v326.i64[0] = v325;
  v326.i64[1] = HIDWORD(v325);
  int64x2_t v327 = v326;
  unint64_t v328 = vaddvq_s64(v326);
  if (v328 > 0x80) {
    goto LABEL_383;
  }
  if (v205 >= v328 + v262)
  {
    int64x2_t v329 = vaddq_s64(vzip1q_s64((int64x2_t)0, v327), vdupq_n_s64(v262 & 0x3F));
    uint16x8_t v330 = (int64x2_t *)(v202 + 8 * (v262 >> 6));
    int8x16_t v306 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v330, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v329)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v330->i64[0], 0), (uint64x2_t)vnegq_s64(v329)));
    if (v328 + (v262 & 0x3F) >= 0x81) {
      int8x16_t v306 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v330[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v329)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v330[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v329))), v306);
    }
    v262 += v328;
  }
  else
  {
    int v220 = 1;
  }
  if (v220 || (uint64_t v191 = (v5 & 0x1F) + 1, 8 * ((a3 & 7) + v191) - v262 >= 9))
  {
LABEL_383:
    uint64_t v191 = 0;
    v400 |= 255 << (8 * (&v400 & 7u));
    goto LABEL_384;
  }
  int32x2_t v332 = vzip1_s32(*(int32x2_t *)v246.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v246, v246, 8uLL));
  int32x2_t v333 = vzip1_s32(*(int32x2_t *)v266.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v266, v266, 8uLL));
  v334.i64[0] = v332.u32[0];
  v334.i64[1] = v332.u32[1];
  int64x2_t v335 = v334;
  v334.i64[0] = v333.u32[0];
  v334.i64[1] = v333.u32[1];
  int64x2_t v336 = (int64x2_t)vshlq_u64((uint64x2_t)v243, (uint64x2_t)vnegq_s64(v335));
  int64x2_t v337 = (int64x2_t)vshlq_u64((uint64x2_t)v274, (uint64x2_t)vnegq_s64(v334));
  *(int32x2_t *)v243.i8 = vmovn_s64((int64x2_t)v243);
  *(int32x2_t *)v336.i8 = vmovn_s64(v336);
  *(int32x2_t *)v274.i8 = vmovn_s64((int64x2_t)v274);
  *(int32x2_t *)v337.i8 = vmovn_s64(v337);
  int16x8_t v338 = (int16x8_t)vzip1q_s32((int32x4_t)v243, (int32x4_t)v336);
  int16x8_t v339 = (int16x8_t)vzip1q_s32((int32x4_t)v274, (int32x4_t)v337);
  int16x8_t v340 = (int16x8_t)vshlq_u32((uint32x4_t)v338, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v245.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v245, v245, 8uLL)))));
  int16x8_t v341 = (int16x8_t)vshlq_u32((uint32x4_t)v339, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v265.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v265, v265, 8uLL)))));
  *(int16x4_t *)v338.i8 = vmovn_s32((int32x4_t)v338);
  *(int16x4_t *)v340.i8 = vmovn_s32((int32x4_t)v340);
  *(int16x4_t *)v339.i8 = vmovn_s32((int32x4_t)v339);
  *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
  int8x16_t v342 = (int8x16_t)vzip1q_s16(v338, v340);
  int8x16_t v343 = (int8x16_t)vzip1q_s16(v339, v341);
  int8x16_t v344 = (int8x16_t)vshlq_u16((uint16x8_t)v342, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v244.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL)))));
  int8x16_t v345 = (int8x16_t)vshlq_u16((uint16x8_t)v343, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v256.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v256, v256, 8uLL)))));
  *(int8x8_t *)v342.i8 = vmovn_s16((int16x8_t)v342);
  *(int8x8_t *)v344.i8 = vmovn_s16((int16x8_t)v344);
  *(int8x8_t *)v343.i8 = vmovn_s16((int16x8_t)v343);
  *(int8x8_t *)v345.i8 = vmovn_s16((int16x8_t)v345);
  v346.i64[0] = 0x808080808080808;
  v346.i64[1] = 0x808080808080808;
  v347.i64[0] = 0x808080808080808;
  v347.i64[1] = 0x808080808080808;
  unint64_t v348 = v204 >> 4;
  int8x16_t v349 = vzip1q_s8(v342, v344);
  v344.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v344.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v350 = vzip1q_s8(v343, v345);
  v345.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v345.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v351 = vsubq_s8(v347, v264);
  *(int32x2_t *)v339.i8 = vzip1_s32(*(int32x2_t *)v324.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v324, v324, 8uLL));
  v352.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v352.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v353.i64[0] = 0x808080808080808;
  v353.i64[1] = 0x808080808080808;
  int8x16_t v354 = vaddq_s8(v264, v345);
  v334.i64[0] = v339.u32[0];
  v334.i64[1] = v339.u32[1];
  int8x16_t v355 = vshlq_s8(vshlq_s8(v349, vsubq_s8(v346, v244)), vaddq_s8(v244, v344));
  int8x16_t v356 = vshlq_s8(vshlq_s8(v350, vsubq_s8(v347, v256)), vaddq_s8(v256, v345));
  int8x16_t v357 = vshlq_s8(vshlq_s8(v272, v351), v354);
  int8x16_t v358 = vshlq_s8(vshlq_s8(v307, vsubq_s8(v347, v278)), vaddq_s8(v278, v345));
  int64x2_t v359 = (int64x2_t)vshlq_u64((uint64x2_t)v306, (uint64x2_t)vnegq_s64(v334));
  *(int32x2_t *)v354.i8 = vmovn_s64((int64x2_t)v306);
  *(int32x2_t *)v359.i8 = vmovn_s64(v359);
  int16x8_t v360 = (int16x8_t)vzip1q_s32((int32x4_t)v354, (int32x4_t)v359);
  int16x8_t v361 = (int16x8_t)vshlq_u32((uint32x4_t)v360, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v323.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v323, v323, 8uLL)))));
  *(int16x4_t *)v360.i8 = vmovn_s32((int32x4_t)v360);
  *(int16x4_t *)v361.i8 = vmovn_s32((int32x4_t)v361);
  int8x16_t v362 = (int8x16_t)vzip1q_s16(v360, v361);
  int8x16_t v363 = (int8x16_t)vshlq_u16((uint16x8_t)v362, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v299.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v299, v299, 8uLL)))));
  *(int8x8_t *)v362.i8 = vmovn_s16((int16x8_t)v362);
  *(int8x8_t *)v363.i8 = vmovn_s16((int16x8_t)v363);
  int8x16_t v364 = vshlq_s8(vshlq_s8(vzip1q_s8(v362, v363), vsubq_s8(v353, v299)), vaddq_s8(v299, v352));
  if (v257 == 2)
  {
    v365.i64[0] = 0xFFFF0000FFFF0000;
    v365.i64[1] = 0xFFFF0000FFFF0000;
    int8x16_t v366 = vmlaq_s8(vandq_s8(vdupq_n_s8(v261), v365), vdupq_n_s8(v259), (int8x16_t)xmmword_242EA73A0);
    int8x16_t v356 = vaddq_s8(v356, v366);
    int8x16_t v357 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v261), v366), v357);
    int8x16_t v358 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v259), v366), v358);
    int8x16_t v364 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v259 + 2 * v261), v366), v364);
  }
  int8x8_t v367 = (int8x8_t)vdupq_n_s8(v348).u64[0];
  int8x16_t v368 = vaddq_s8(vandq_s8(v355, v228), v356);
  int8x16_t v369 = vdupq_lane_s8(*(int8x8_t *)v355.i8, 0);
  int8x16_t v370 = vsubq_s8(v368, vandq_s8(v369, v228));
  int8x16_t v371 = vsubq_s8(v357, vandq_s8(v369, v227));
  int8x16_t v372 = vsubq_s8(v358, vandq_s8(v369, v225));
  int8x16_t v373 = vsubq_s8(v364, vandq_s8(v369, v221));
  v374.i64[0] = 0x101010101010101;
  v374.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v208, v374)))
  {
    int8x16_t v375 = v370;
    v375.i8[0] = v370.i8[7];
    v375.i8[7] = v370.i8[0];
    int8x16_t v376 = vnegq_s8(vandq_s8(v206, v374));
    int8x16_t v377 = vbslq_s8(v376, v375, v370);
    int8x16_t v378 = vaddq_s8(v377, vandq_s8(vqtbl1q_s8(v377, (int8x16_t)xmmword_242EA73B0), v376));
    v370.i64[0] = vaddq_s8(v378, vandq_s8(vqtbl1q_s8(v378, (int8x16_t)xmmword_242EA73C0), v376)).u64[0];
    int8x16_t v379 = vaddq_s8(vandq_s8(vqtbl1q_s8(v371, (int8x16_t)xmmword_242EA73D0), v376), v371);
    v371.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v379, (int8x16_t)xmmword_242EA73E0), v376), v379).u64[0];
    int8x16_t v380 = vaddq_s8(vandq_s8(vqtbl1q_s8(v372, (int8x16_t)xmmword_242EA73F0), v376), v372);
    v372.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v380, (int8x16_t)xmmword_242EA7400), v376), v380).u64[0];
    int8x16_t v381 = vaddq_s8(vandq_s8(vqtbl1q_s8(v373, (int8x16_t)xmmword_242EA7410), v376), v373);
    v373.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v381, (int8x16_t)xmmword_242EA7420), v376), v381).u64[0];
  }
  int16x4_t v382 = (int16x4_t)vadd_s8(v367, *(int8x8_t *)v370.i8);
  int16x4_t v383 = (int16x4_t)vadd_s8(*(int8x8_t *)v372.i8, v367);
  *(int16x4_t *)a1 = vuzp1_s16(v382, v383);
  *(int16x4_t *)(a1 + a2) = vuzp2_s16(v382, v383);
  int64x2_t v384 = (int16x4_t *)(a1 + 2 * a2);
  int16x4_t v385 = (int16x4_t)vadd_s8(*(int8x8_t *)v371.i8, v367);
  int16x4_t v386 = (int16x4_t)vadd_s8(*(int8x8_t *)v373.i8, v367);
  *int64x2_t v384 = vuzp1_s16(v385, v386);
  *(int16x4_t *)((char *)v384 + a2) = vuzp2_s16(v385, v386);
  return v191;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, int8x8_t a14)
{
  uint64_t v18 = a3;
  BOOL v20 = (int16x4_t *)result;
  if (a5 >= 8) {
    unsigned int v21 = 8;
  }
  else {
    unsigned int v21 = a5;
  }
  if (a6 >= 4) {
    unsigned int v22 = 4;
  }
  else {
    unsigned int v22 = a6;
  }
  if (v21 && v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int16x4_t *)result, a2, v21, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    *a4 = 0;
  }
  int v23 = a4 + 1;
  if (a5 <= 8) {
    int v24 = 8;
  }
  else {
    int v24 = a5;
  }
  unsigned int v25 = v24 - 8;
  if (v25 >= 8) {
    int v26 = 8;
  }
  else {
    int v26 = v25;
  }
  if (v26 && v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v18, v23, v20 + 1, a2, v26, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    *int v23 = 0;
  }
  uint64_t v27 = 4 * a2;
  uint64_t v28 = a4 + 2;
  if (a6 <= 4) {
    int v29 = 4;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 4;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v21 && v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v18, v28, (int16x4_t *)((char *)v20 + v27), a2, v21, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int v32 = a4 + 3;
    if (!v26) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v28 = 0;
    int v32 = a4 + 3;
    if (!v26) {
      goto LABEL_34;
    }
  }
  if (v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v18, v32, (int16x4_t *)((char *)v20 + v27 + 8), a2, v26, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    goto LABEL_35;
  }
LABEL_34:
  *int v32 = 0;
LABEL_35:
  int v33 = a4 + 4;
  if (a6 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a6;
  }
  unsigned int v35 = v34 - 8;
  if (v35 >= 4) {
    int v36 = 4;
  }
  else {
    int v36 = v35;
  }
  if (v21 && v36)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v18, v33, &v20[a2], a2, v21, v36, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    unint64_t v37 = a4 + 5;
    if (!v26) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v33 = 0;
    unint64_t v37 = a4 + 5;
    if (!v26) {
      goto LABEL_48;
    }
  }
  if (v36)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v18, v37, &v20[a2 + 1], a2, v26, v36, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    goto LABEL_49;
  }
LABEL_48:
  *unint64_t v37 = 0;
LABEL_49:
  uint64_t v38 = a4 + 6;
  if (a6 <= 12) {
    int v39 = 12;
  }
  else {
    int v39 = a6;
  }
  unsigned int v40 = v39 - 12;
  if (v40 >= 4) {
    int v41 = 4;
  }
  else {
    int v41 = v40;
  }
  if (v21 && v41)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v18, v38, (int16x4_t *)((char *)v20 + 12 * a2), a2, v21, v41, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int v42 = a4 + 7;
    if (!v26) {
      goto LABEL_64;
    }
  }
  else
  {
    *uint64_t v38 = 0;
    int v42 = a4 + 7;
    if (!v26)
    {
LABEL_64:
      *int v42 = 0;
      return result;
    }
  }
  if (!v41) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v18, v42, (int16x4_t *)((char *)v20 + 12 * a2 + 8), a2, v26, v41, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressMacroblock(uint64_t a1, int16x4_t *a2, unsigned __int8 *a3, int a4)
{
  unsigned int v7 = (int16x4_t *)((char *)a2
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1, 16, a2, *a3, a4));
  int v8 = (int16x4_t *)((char *)v7
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 8, 16, v7, a3[1], a4));
  int v9 = (int16x4_t *)((char *)v8
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 64, 16, v8, a3[2], a4));
  int v10 = (int16x4_t *)((char *)v9
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 72, 16, v9, a3[3], a4));
  int v11 = (int16x4_t *)((char *)v10
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 128, 16, v10, a3[4], a4));
  int v12 = (int16x4_t *)((char *)v11
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 136, 16, v11, a3[5], a4));
  int v13 = (int16x4_t *)((char *)v12
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 192, 16, v12, a3[6], a4));
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 200, 16, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(uint64_t a1, unsigned char *a2, int16x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, int8x8_t a14)
{
  int16x4_t v16 = *(int16x4_t *)((char *)a3 + a4);
  *(int16x4_t *)v17.i8 = vzip1_s16(*a3, v16);
  *(int16x4_t *)v18.i8 = vzip2_s16(*a3, v16);
  v17.i64[1] = v17.i64[0];
  v18.i64[1] = v18.i64[0];
  unsigned int v19 = (int16x4_t *)((char *)a3 + 2 * a4);
  int8x8_t v20 = (int8x8_t)*v19;
  int16x4_t v21 = *(int16x4_t *)((char *)v19 + a4);
  *(int16x4_t *)v22.i8 = vzip1_s16(*v19, v21);
  *(int16x4_t *)v23.i8 = vzip2_s16(*v19, v21);
  v22.i64[1] = v22.i64[0];
  v23.i64[1] = v23.i64[0];
  int8x16_t v24 = vdupq_lane_s8(*(int8x8_t *)v17.i8, 0);
  int8x16_t v25 = vsubq_s8(v17, v24);
  int8x16_t v26 = vsubq_s8(v22, v24);
  int8x16_t v27 = vsubq_s8(v18, v24);
  int8x16_t v28 = vsubq_s8(v23, v24);
  v20.i8[0] = vmaxvq_s8(v25);
  v21.i8[0] = vminvq_s8(v25);
  int8x16_t v29 = vdupq_lane_s8(v20, 0);
  int8x16_t v30 = vdupq_lane_s8((int8x8_t)v21, 0);
  v31.i64[0] = 0x8080808080808080;
  v31.i64[1] = 0x8080808080808080;
  int8x16_t v32 = vmaxq_s8(v29, v31);
  v33.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v33.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v34 = vminq_s8(v30, v33);
  int8x16_t v35 = vzip1q_s8(v29, v30);
  int8x16_t v36 = vceqzq_s8(v35);
  int8x16_t v37 = vclsq_s8(v35);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vsubq_s8(v38, v37);
  int8x16_t v40 = vbicq_s8(v39, v36);
  v39.i8[0] = vmaxvq_s8(v26);
  a14.i8[0] = vminvq_s8(v26);
  int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v39.i8, 0);
  int8x16_t v42 = vdupq_lane_s8(a14, 0);
  int8x16_t v43 = vpmaxq_s8(v40, v40);
  int8x16_t v44 = vmaxq_s8(v32, v41);
  int8x16_t v45 = vminq_s8(v34, v42);
  int8x16_t v46 = vzip1q_s8(v41, v42);
  int8x16_t v47 = vceqzq_s8(v46);
  int8x16_t v48 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v46)), v47);
  int8x16_t v49 = vpmaxq_s8(v48, v48);
  v47.i8[0] = vmaxvq_s8(v27);
  int8x16_t v50 = vdupq_lane_s8(*(int8x8_t *)v47.i8, 0);
  v14.i8[0] = vminvq_s8(v27);
  int8x16_t v51 = vdupq_lane_s8(v14, 0);
  int8x16_t v52 = vmaxq_s8(v44, v50);
  int8x16_t v53 = vminq_s8(v45, v51);
  int8x16_t v54 = vzip1q_s8(v50, v51);
  int8x16_t v55 = vceqzq_s8(v54);
  int8x16_t v56 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v54)), v55);
  int8x16_t v57 = vpmaxq_s8(v56, v56);
  v55.i8[0] = vmaxvq_s8(v28);
  v15.i8[0] = vminvq_s8(v28);
  int8x16_t v58 = vdupq_lane_s8(*(int8x8_t *)v55.i8, 0);
  int8x16_t v59 = vdupq_lane_s8(v15, 0);
  int8x16_t v60 = vmaxq_s8(v52, v58);
  int8x16_t v61 = vminq_s8(v53, v59);
  int8x16_t v62 = vzip1q_s8(v58, v59);
  int8x16_t v63 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v62)), vceqzq_s8(v62));
  int8x16_t v64 = vpmaxq_s8(v63, v63);
  int8x16_t v65 = vmaxq_s8(vmaxq_s8(v43, v49), vmaxq_s8(v57, v64));
  int8x16_t v66 = vclzq_s8(vsubq_s8(v60, v61));
  int8x16_t v67 = vsubq_s8(v38, v66);
  int8x16_t v68 = vcgtq_s8(v65, v67);
  int8x16_t v69 = vbslq_s8(v68, v67, v65);
  if (vmaxvq_s8(v69))
  {
    char v70 = 0;
    unint64_t v71 = 0;
    int8x8_t v72 = 0;
    v73.i64[0] = -1;
    v73.i64[1] = -1;
    v74.i64[0] = 0x707070707070707;
    v74.i64[1] = 0x707070707070707;
    int8x16_t v75 = vandq_s8(vsubq_s8(vshlq_s8(v73, vsubq_s8(v74, v66)), v61), v68);
    int8x16_t v76 = vandq_s8(v68, v38);
    v77.i64[0] = 0x303030303030303;
    v77.i64[1] = 0x303030303030303;
    int8x16_t v78 = vorrq_s8(v76, vandq_s8(vceqzq_s8(v69), v77));
    int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v43), v77), (int8x16_t)0);
    int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v49), v77), (int8x16_t)0);
    int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v57), v77), (int8x16_t)0);
    int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v64), v77), (int8x16_t)0);
    int8x16_t v83 = vsubq_s8(v69, v79);
    int8x16_t v84 = vsubq_s8(v69, v80);
    int8x16_t v85 = vsubq_s8(v69, v81);
    int8x16_t v86 = vsubq_s8(v69, v82);
    int8x16_t v87 = vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)));
    v80.i64[0] = 0x404040404040404;
    v80.i64[1] = 0x404040404040404;
    int8x16_t v88 = vorrq_s8(vbicq_s8(v80, v87), v78);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v401 = v75;
      v89.i32[0] = v17.u8[2];
      v89.i32[1] = v17.u8[1];
      int32x2_t v90 = vshl_n_s32(vsub_s32(v89, vdup_n_s32(v17.u8[0])), 0x1CuLL);
      int v91 = v90.i32[1] >> 28;
      int8x8_t v92 = (int8x8_t)vshl_s32(v90, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v93 = v90.i32[0];
      v94.i64[0] = 0xFFFF0000FFFF0000;
      v94.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v95 = vmlaq_s8(vandq_s8(vdupq_n_s8(v90.i32[0] >> 28), v94), vdupq_n_s8(v90.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v96 = vsubq_s8(v25, v95);
      int8x16_t v97 = v83;
      int8x16_t v98 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v92.i32[0]), v26), v95);
      int8x16_t v99 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v92.i32[1]), v27), v95);
      int8x16_t v100 = vaddq_s8(vdupq_n_s8(-v92.i32[0] - v92.i32[1]), v28);
      int8x16_t v101 = vsubq_s8(v100, v95);
      v100.i8[0] = vmaxvq_s8(v96);
      int8x16_t v394 = v98;
      int8x16_t v396 = v96;
      v92.i8[0] = vminvq_s8(v96);
      int8x16_t v102 = vdupq_lane_s8(*(int8x8_t *)v100.i8, 0);
      int8x16_t v103 = vdupq_lane_s8(v92, 0);
      v95.i64[0] = 0x8080808080808080;
      v95.i64[1] = 0x8080808080808080;
      int8x16_t v104 = vmaxq_s8(v102, v95);
      v96.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v96.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v105 = vminq_s8(v103, v96);
      int8x16_t v106 = vzip1q_s8(v102, v103);
      int8x16_t v107 = vceqzq_s8(v106);
      v108.i64[0] = 0x808080808080808;
      v108.i64[1] = 0x808080808080808;
      int8x16_t v109 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v106)), v107);
      int8x16_t v110 = vpmaxq_s8(v109, v109);
      v107.i8[0] = vmaxvq_s8(v98);
      v98.i8[0] = vminvq_s8(v98);
      int8x16_t v111 = vdupq_lane_s8(*(int8x8_t *)v107.i8, 0);
      int8x16_t v112 = vdupq_lane_s8(*(int8x8_t *)v98.i8, 0);
      int8x16_t v113 = vmaxq_s8(v104, v111);
      int8x16_t v114 = vminq_s8(v105, v112);
      int8x16_t v115 = vzip1q_s8(v111, v112);
      int8x16_t v116 = vceqzq_s8(v115);
      int8x16_t v117 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v115)), v116);
      int8x16_t v118 = vpmaxq_s8(v117, v117);
      v116.i8[0] = vmaxvq_s8(v99);
      v72.i8[0] = vminvq_s8(v99);
      int8x16_t v119 = vdupq_lane_s8(*(int8x8_t *)v116.i8, 0);
      int8x16_t v120 = vdupq_lane_s8(v72, 0);
      int8x16_t v121 = vmaxq_s8(v113, v119);
      int8x16_t v122 = vminq_s8(v114, v120);
      int8x16_t v123 = vzip1q_s8(v119, v120);
      int8x16_t v124 = vceqzq_s8(v123);
      int8x16_t v125 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v123)), v124);
      int8x16_t v126 = vpmaxq_s8(v125, v125);
      v124.i8[0] = vmaxvq_s8(v101);
      v75.i8[0] = vminvq_s8(v101);
      int8x16_t v127 = vdupq_lane_s8(*(int8x8_t *)v124.i8, 0);
      int8x16_t v128 = vdupq_lane_s8(*(int8x8_t *)v75.i8, 0);
      int8x16_t v129 = vmaxq_s8(v121, v127);
      int8x16_t v398 = v27;
      int8x16_t v399 = v28;
      int8x16_t v130 = vminq_s8(v122, v128);
      int8x16_t v131 = vzip1q_s8(v127, v128);
      int8x16_t v132 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v131)), vceqzq_s8(v131));
      int8x16_t v133 = vpmaxq_s8(v132, v132);
      int8x16_t v134 = vmaxq_s8(vmaxq_s8(v110, v118), vmaxq_s8(v126, v133));
      int8x16_t v135 = v84;
      int8x16_t v136 = vclzq_s8(vsubq_s8(v129, v130));
      int8x16_t v137 = vsubq_s8(v108, v136);
      int8x16_t v138 = vcgtq_s8(v134, v137);
      int8x16_t v139 = vbslq_s8(v138, v137, v134);
      v140.i64[0] = 0x202020202020202;
      v140.i64[1] = 0x202020202020202;
      v134.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v134.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v141 = vbslq_s8(v138, v134, v140);
      v134.i64[0] = 0x101010101010101;
      v134.i64[1] = 0x101010101010101;
      int8x16_t v142 = vmaxq_s8(v139, v134);
      v134.i64[0] = 0x303030303030303;
      v134.i64[1] = 0x303030303030303;
      int8x16_t v143 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v110), v134), (int8x16_t)0);
      int8x16_t v144 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v118), v134), (int8x16_t)0);
      int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v126), v134), (int8x16_t)0);
      int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v133), v134), (int8x16_t)0);
      int8x16_t v147 = vsubq_s8(v142, v143);
      int8x16_t v148 = vsubq_s8(v142, v144);
      int8x16_t v149 = vsubq_s8(v142, v145);
      int8x16_t v150 = vsubq_s8(v142, v146);
      int8x16_t v151 = vceqq_s8(vaddq_s8(v146, v145), vnegq_s8(vaddq_s8(v143, v144)));
      v143.i64[0] = 0x404040404040404;
      v143.i64[1] = 0x404040404040404;
      int8x16_t v152 = vorrq_s8(vbicq_s8(v143, v151), v141);
      v153.i64[0] = 0x8000800080008;
      v153.i64[1] = 0x8000800080008;
      uint16x8_t v154 = vmovl_u8(*(uint8x8_t *)v88.i8);
      unsigned long long v155 = *(_OWORD *)&v154 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
      int8x16_t v400 = (int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8);
      unsigned long long v156 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v88.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
      unsigned long long v157 = *(_OWORD *)&v154 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
      v158.i64[0] = 0x2000200020002;
      v158.i64[1] = 0x2000200020002;
      int16x8_t v159 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v85.i8, *(int8x8_t *)v135.i8), *(int8x8_t *)v86.i8), 3uLL);
      int8x16_t v160 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v400, (int8x16_t)vceqzq_s16((int16x8_t)v155)), (int16x8_t)v156), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)v157, v158), v153)), *(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707), v159), vaddq_s16(vmlal_s8((int16x8_t)vaddl_u8((uint8x8_t)vbic_s8(
                                                                                *(int8x8_t *)v142.i8,
                                                                                (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v152.i8)), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v152.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v147.i8, (int8x8_t)0x707070707070707), vaddq_s16(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v149.i8, *(int8x8_t *)v148.i8), *(int8x8_t *)v150.i8), 3uLL), (int16x8_t)v153)))), 0);
      v158.i16[0] = vaddlvq_s8(v160);
      unint64_t v71 = v91 & 0xF | HIBYTE(v93);
      int v161 = v158.u16[0];
      if (v158.i16[0])
      {
        v162.i64[0] = 0x707070707070707;
        v162.i64[1] = 0x707070707070707;
        int8x16_t v163 = vsubq_s8(v162, v136);
        v164.i64[0] = -1;
        v164.i64[1] = -1;
        int8x16_t v165 = vandq_s8(vsubq_s8(vshlq_s8(v164, v163), v130), v138);
        int8x16_t v392 = vbslq_s8(v160, v396, v25);
        int8x16_t v397 = vbslq_s8(v160, v394, v26);
        int8x16_t v27 = vbslq_s8(v160, v99, v398);
        int8x16_t v97 = vbslq_s8(v160, v147, v97);
        int8x16_t v401 = vbslq_s8(v160, v165, v401);
        int8x16_t v69 = vbslq_s8(v160, v142, v69);
        int8x16_t v88 = vbslq_s8(v160, v152, v88);
        uint16x8_t v166 = vmovl_u8(*(uint8x8_t *)v88.i8);
        unsigned long long v155 = *(_OWORD *)&v166 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
        int8x16_t v400 = (int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8);
        unsigned long long v156 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v88.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
        unsigned long long v157 = *(_OWORD *)&v166 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
        int16x8_t v167 = vmull_s8(*(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707);
        int8x16_t v393 = vbslq_s8(v160, v149, v85);
        int8x16_t v395 = vbslq_s8(v160, v150, v86);
        int8x16_t v391 = vbslq_s8(v160, v148, v135);
        int16x8_t v159 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v393.i8, *(int8x8_t *)v391.i8), *(int8x8_t *)v395.i8), 3uLL);
        int8x16_t v28 = vbslq_s8(v160, v101, v399);
      }
      else
      {
        int8x16_t v391 = v135;
        int8x16_t v392 = v25;
        int8x16_t v393 = v85;
        int8x16_t v395 = v86;
        int8x16_t v397 = v26;
        int16x8_t v167 = vmull_s8(*(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707);
        int8x16_t v27 = v398;
        int8x16_t v28 = v399;
      }
      int8x16_t v83 = v97;
      int8x16_t v169 = v22;
      v169.i8[7] = v17.i8[7];
      int8x16_t v170 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7430));
      int8x16_t v171 = vsubq_s8(v22, vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7440));
      int8x16_t v172 = v18;
      v172.i8[7] = v17.i8[7];
      int8x16_t v173 = vsubq_s8(v18, vqtbl1q_s8(v172, (int8x16_t)xmmword_242EA7450));
      int8x16_t v174 = v23;
      v174.i8[7] = v17.i8[7];
      int8x16_t v175 = vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7460);
      int8x16_t v176 = vsubq_s8(v23, v175);
      int8x16_t v177 = v170;
      v177.i8[0] = v170.i8[7];
      v177.i8[7] = v170.i8[0];
      v170.i8[0] = vmaxvq_s8(v177);
      v175.i8[0] = vminvq_s8(v177);
      int8x16_t v178 = vdupq_lane_s8(*(int8x8_t *)v170.i8, 0);
      int8x16_t v179 = vdupq_lane_s8(*(int8x8_t *)v175.i8, 0);
      v180.i64[0] = 0x8080808080808080;
      v180.i64[1] = 0x8080808080808080;
      int8x16_t v181 = vmaxq_s8(v178, v180);
      v182.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v182.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v183 = vminq_s8(v179, v182);
      int8x16_t v184 = vzip1q_s8(v178, v179);
      int8x16_t v185 = vceqzq_s8(v184);
      v182.i64[0] = 0x808080808080808;
      v182.i64[1] = 0x808080808080808;
      int8x16_t v186 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v184)), v185);
      int8x16_t v187 = vpmaxq_s8(v186, v186);
      v186.i8[0] = vmaxvq_s8(v171);
      v185.i8[0] = vminvq_s8(v171);
      int8x16_t v188 = vdupq_lane_s8(*(int8x8_t *)v186.i8, 0);
      int8x16_t v189 = vdupq_lane_s8(*(int8x8_t *)v185.i8, 0);
      int8x16_t v190 = vmaxq_s8(v181, v188);
      int8x16_t v191 = vminq_s8(v183, v189);
      int8x16_t v192 = vzip1q_s8(v188, v189);
      int8x16_t v193 = vceqzq_s8(v192);
      int8x16_t v194 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v192)), v193);
      int8x16_t v195 = vpmaxq_s8(v194, v194);
      v194.i8[0] = vmaxvq_s8(v173);
      v193.i8[0] = vminvq_s8(v173);
      int8x16_t v196 = vdupq_lane_s8(*(int8x8_t *)v194.i8, 0);
      int8x16_t v197 = vdupq_lane_s8(*(int8x8_t *)v193.i8, 0);
      int8x16_t v198 = vmaxq_s8(v190, v196);
      int8x16_t v199 = vminq_s8(v191, v197);
      int8x16_t v200 = vzip1q_s8(v196, v197);
      int8x16_t v201 = vceqzq_s8(v200);
      int8x16_t v202 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v200)), v201);
      int8x16_t v203 = vpmaxq_s8(v202, v202);
      v202.i8[0] = vmaxvq_s8(v176);
      v201.i8[0] = vminvq_s8(v176);
      int8x16_t v204 = vdupq_lane_s8(*(int8x8_t *)v202.i8, 0);
      int8x16_t v205 = vdupq_lane_s8(*(int8x8_t *)v201.i8, 0);
      int8x16_t v206 = vmaxq_s8(v198, v204);
      int8x16_t v207 = vminq_s8(v199, v205);
      int8x16_t v208 = vzip1q_s8(v204, v205);
      int8x16_t v209 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v208)), vceqzq_s8(v208));
      int8x16_t v210 = vpmaxq_s8(v209, v209);
      int8x16_t v211 = vmaxq_s8(vmaxq_s8(v187, v195), vmaxq_s8(v203, v210));
      int8x16_t v212 = vclzq_s8(vsubq_s8(v206, v207));
      int8x16_t v213 = vsubq_s8(v182, v212);
      int8x16_t v214 = vcgtq_s8(v211, v213);
      int8x16_t v215 = vbslq_s8(v214, v213, v211);
      v213.i64[0] = 0x909090909090909;
      v213.i64[1] = 0x909090909090909;
      v182.i64[0] = 0x202020202020202;
      v182.i64[1] = 0x202020202020202;
      int8x16_t v216 = vorrq_s8(vandq_s8(vceqzq_s8(v215), v182), vsubq_s8(vandq_s8(v214, v213), vmvnq_s8(v214)));
      v217.i64[0] = 0x303030303030303;
      v217.i64[1] = 0x303030303030303;
      int8x16_t v218 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v187), v217), (int8x16_t)0);
      int8x16_t v219 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v195), v217), (int8x16_t)0);
      int8x16_t v220 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v203), v217), (int8x16_t)0);
      int8x16_t v221 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v210), v217), (int8x16_t)0);
      int8x16_t v222 = vsubq_s8(v215, v218);
      int8x16_t v223 = vsubq_s8(v215, v219);
      int8x16_t v224 = vsubq_s8(v215, v220);
      int8x16_t v225 = vsubq_s8(v215, v221);
      v182.i64[0] = 0x404040404040404;
      v182.i64[1] = 0x404040404040404;
      int8x16_t v226 = vorrq_s8(vbicq_s8(v182, vceqq_s8(vaddq_s8(v221, v220), vnegq_s8(vaddq_s8(v218, v219)))), v216);
      v182.i64[0] = 0x2000200020002;
      v182.i64[1] = 0x2000200020002;
      int8x16_t v227 = (int8x16_t)vceqq_s16((int16x8_t)v157, (int16x8_t)v182);
      v182.i64[0] = 0x8000800080008;
      v182.i64[1] = 0x8000800080008;
      int8x16_t v228 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v400, (int8x16_t)vceqzq_s16((int16x8_t)v155)), (int16x8_t)v156), vaddq_s16((int16x8_t)vandq_s8(v227, v182), v167)), v159), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v215.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v226.i8))),
                                                                   (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v226.i8, *(int8x8_t *)v226.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v222.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v224.i8, *(int8x8_t *)v223.i8), *(int8x8_t *)v225.i8), 3uLL)))), 0);
      v216.i16[0] = vaddlvq_s8(v228);
      int v229 = v216.u16[0];
      if (v216.i16[0])
      {
        v230.i64[0] = 0x707070707070707;
        v230.i64[1] = 0x707070707070707;
        int8x16_t v231 = vsubq_s8(v230, v212);
        v230.i64[0] = -1;
        v230.i64[1] = -1;
        int8x16_t v232 = vandq_s8(vsubq_s8(vshlq_s8(v230, v231), v207), v214);
        v24.i8[0] = vbslq_s8(v228, vextq_s8(v17, v17, 0xFuLL), v24).u8[0];
        int8x16_t v25 = vbslq_s8(v228, v177, v392);
        int8x16_t v26 = vbslq_s8(v228, v171, v397);
        int8x16_t v27 = vbslq_s8(v228, v173, v27);
        int8x16_t v28 = vbslq_s8(v228, v176, v28);
        int8x16_t v83 = vbslq_s8(v228, v222, v83);
        int8x16_t v84 = vbslq_s8(v228, v223, v391);
        int8x16_t v85 = vbslq_s8(v228, v224, v393);
        int8x16_t v86 = vbslq_s8(v228, v225, v395);
        int8x16_t v75 = vbslq_s8(v228, v232, v401);
        int8x16_t v69 = vbslq_s8(v228, v215, v69);
        int8x16_t v88 = vbslq_s8(v228, v226, v88);
      }
      else
      {
        int8x16_t v75 = v401;
        int8x16_t v86 = v395;
        int8x16_t v26 = v397;
        int8x16_t v25 = v392;
        int8x16_t v85 = v393;
        int8x16_t v84 = v391;
      }
      if (v161) {
        BOOL v233 = v229 == 0;
      }
      else {
        BOOL v233 = 0;
      }
      char v70 = v233;
    }
    int8x16_t v234 = (int8x16_t)vmovl_s8(*(int8x8_t *)v88.i8);
    v235.i64[0] = 0x8000800080008;
    v235.i64[1] = 0x8000800080008;
    v236.i64[0] = 0x3000300030003;
    v236.i64[1] = 0x3000300030003;
    v237.i64[0] = 0x2000200020002;
    v237.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v234, v235))).u16[0]+ ((2 * v234.i16[0]) & 8)+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v234, v236), v237), v235).u16[0]- v83.i8[0]+ 8 * v83.i8[0]+ 8 * vaddq_s8(v85, vaddq_s8(v84, v86)).i8[0])- 149) <= 0xFFFFFFFFFFFFFF57)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 20;
    }
    else
    {
      int8x16_t v238 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v239 = 8 * (a1 & 7);
      if (v239) {
        uint64_t v240 = *v238 & ~(-1 << v239);
      }
      else {
        uint64_t v240 = 0;
      }
      int8x16_t v241 = vextq_s8(v83, (int8x16_t)0, 8uLL);
      int8x16_t v242 = vextq_s8(v84, (int8x16_t)0, 8uLL);
      int8x16_t v243 = vextq_s8(v85, (int8x16_t)0, 8uLL);
      int8x16_t v244 = vextq_s8(v86, (int8x16_t)0, 8uLL);
      if (v69.i8[0]) {
        int v245 = (16 * v69.i8[0] + 112) & 0x70;
      }
      else {
        int v245 = 0;
      }
      *a2 = 32 * v88.i8[0];
      unint64_t v246 = (v245 & 0xFFFF807F | v88.i8[0] & 8 | ((unint64_t)v24.u8[0] << 7)) >> 3;
      unint64_t v247 = (v246 << v239) | v240;
      if (v239 >= 0x34)
      {
        *int8x16_t v238 = v247;
        unint64_t v247 = v246 >> (-8 * (a1 & 7u));
      }
      int8x16_t v248 = vdupq_lane_s8(*(int8x8_t *)v69.i8, 0);
      unint64_t v249 = v239 + 12;
      v250.i64[0] = 0x202020202020202;
      v250.i64[1] = 0x202020202020202;
      int8x16_t v251 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v234.i8, (int8x8_t)0x4000400040004)))), v250);
      v250.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v250.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v252.i64[0] = -1;
      v252.i64[1] = -1;
      uint8x16_t v253 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v252, (uint8x16_t)vorrq_s8(v251, v250)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v248, vzip1q_s8(v241, v242)), (int16x8_t)vsubq_s8(v248, vzip1q_s8(v243, v244))).u32[0]);
      int16x8_t v254 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v251.i8);
      uint16x8_t v255 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v253.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v254)), (int16x8_t)vmovl_high_u8(v253));
      uint16x8_t v256 = (uint16x8_t)vpaddq_s16(v254, (int16x8_t)vmovl_high_u8((uint8x16_t)v251));
      int32x4_t v257 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v256.i8);
      int32x4_t v258 = (int32x4_t)vmovl_high_u16(v256);
      int32x4_t v259 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v255.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v257)), (int32x4_t)vshlq_u32(vmovl_high_u16(v255), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v258)));
      int32x4_t v260 = vpaddq_s32(v257, v258);
      v261.i64[0] = v259.u32[0];
      v261.i64[1] = v259.u32[1];
      uint64x2_t v262 = (uint64x2_t)v261;
      v261.i64[0] = v259.u32[2];
      v261.i64[1] = v259.u32[3];
      uint64x2_t v263 = (uint64x2_t)v261;
      v261.i64[0] = v260.u32[0];
      v261.i64[1] = v260.u32[1];
      int64x2_t v264 = v261;
      v261.i64[0] = v260.u32[2];
      v261.i64[1] = v260.u32[3];
      int64x2_t v265 = vpaddq_s64((int64x2_t)vshlq_u64(v262, (uint64x2_t)vzip1q_s64((int64x2_t)0, v264)), (int64x2_t)vshlq_u64(v263, (uint64x2_t)vzip1q_s64((int64x2_t)0, v261)));
      int64x2_t v266 = vpaddq_s64(v264, v261);
      uint64_t v267 = (v239 + 12) & 0x3C;
      unint64_t v268 = (v265.i64[0] << v267) | v247;
      if ((unint64_t)(v266.i64[0] + v267) >= 0x40)
      {
        *(void *)((char *)v238 + ((v249 >> 3) & 8)) = v268;
        unint64_t v268 = (unint64_t)v265.i64[0] >> -(char)v267;
      }
      unint64_t v269 = v266.i64[0] + v249;
      unint64_t v270 = v268 | (v265.i64[1] << v269);
      if ((v269 & 0x3F) + v266.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v269 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v270;
        unint64_t v270 = (unint64_t)v265.i64[1] >> -(v269 & 0x3F);
        if ((v269 & 0x3F) == 0) {
          unint64_t v270 = 0;
        }
      }
      int8x16_t v271 = vceqq_s8(v69, v83);
      unint64_t v272 = v269 + v266.i64[1];
      v273.i64[0] = 0x808080808080808;
      v273.i64[1] = 0x808080808080808;
      v274.i64[0] = -1;
      v274.i64[1] = -1;
      int8x16_t v275 = vandq_s8(vextq_s8(vtstq_s8(v88, v273), (int8x16_t)0, 0xFuLL), v69);
      v276.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v276.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v277 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v274, (uint8x16_t)vaddq_s8(v275, v276)), v75);
      int16x8_t v278 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v275.i8);
      uint16x8_t v279 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v277.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v278)), (int16x8_t)vmovl_high_u8(v277));
      uint16x8_t v280 = (uint16x8_t)vpaddq_s16(v278, (int16x8_t)vmovl_high_u8((uint8x16_t)v275));
      int32x4_t v281 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v280.i8);
      int32x4_t v282 = (int32x4_t)vmovl_high_u16(v280);
      int32x4_t v283 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v279.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v281)), (int32x4_t)vshlq_u32(vmovl_high_u16(v279), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v282)));
      int32x4_t v284 = vpaddq_s32(v281, v282);
      v285.i64[0] = v283.u32[0];
      v285.i64[1] = v283.u32[1];
      uint64x2_t v286 = (uint64x2_t)v285;
      v285.i64[0] = v283.u32[2];
      v285.i64[1] = v283.u32[3];
      uint64x2_t v287 = (uint64x2_t)v285;
      v285.i64[0] = v284.u32[0];
      v285.i64[1] = v284.u32[1];
      int64x2_t v288 = v285;
      v285.i64[0] = v284.u32[2];
      v285.i64[1] = v284.u32[3];
      int64x2_t v289 = vpaddq_s64((int64x2_t)vshlq_u64(v286, (uint64x2_t)vzip1q_s64((int64x2_t)0, v288)), (int64x2_t)vshlq_u64(v287, (uint64x2_t)vzip1q_s64((int64x2_t)0, v285)));
      int64x2_t v290 = vpaddq_s64(v288, v285);
      unint64_t v291 = (v289.i64[0] << v272) | v270;
      if (v290.i64[0] + (v272 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v272 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
        unint64_t v291 = (unint64_t)v289.i64[0] >> -(v272 & 0x3F);
        if ((v272 & 0x3F) == 0) {
          unint64_t v291 = 0;
        }
      }
      int8x16_t v292 = vandq_s8(v75, v271);
      unint64_t v293 = v290.i64[0] + v272;
      unint64_t v294 = v291 | (v289.i64[1] << v293);
      if ((v293 & 0x3F) + v290.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
        unint64_t v294 = (unint64_t)v289.i64[1] >> -(v293 & 0x3F);
        if ((v293 & 0x3F) == 0) {
          unint64_t v294 = 0;
        }
      }
      int8x16_t v295 = vceqq_s8(v69, v84);
      int8x16_t v296 = vaddq_s8(v292, v25);
      unint64_t v297 = v293 + v290.i64[1];
      if (v70)
      {
        v294 |= v71 << v297;
        if ((v297 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v238 + ((v297 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
          unint64_t v294 = v71 >> -(v297 & 0x3F);
        }
        v297 += 8;
      }
      int8x16_t v298 = vandq_s8(v75, v295);
      int16x8_t v299 = (int16x8_t)vmovl_high_u8((uint8x16_t)v241);
      v241.i8[0] = 0;
      v300.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v300.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v301.i64[0] = -1;
      v301.i64[1] = -1;
      uint8x16_t v302 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v301, (uint8x16_t)vaddq_s8(v241, v300)), v296);
      int16x8_t v303 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v241.i8);
      uint16x8_t v304 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v302.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v303)), (int16x8_t)vshlq_u16(vmovl_high_u8(v302), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)));
      uint16x8_t v305 = (uint16x8_t)vpaddq_s16(v303, v299);
      int32x4_t v306 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v305.i8);
      int32x4_t v307 = (int32x4_t)vmovl_high_u16(v305);
      int32x4_t v308 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v304.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v306)), (int32x4_t)vshlq_u32(vmovl_high_u16(v304), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v307)));
      int32x4_t v309 = vpaddq_s32(v306, v307);
      v310.i64[0] = v308.u32[0];
      v310.i64[1] = v308.u32[1];
      uint64x2_t v311 = (uint64x2_t)v310;
      v310.i64[0] = v308.u32[2];
      v310.i64[1] = v308.u32[3];
      uint64x2_t v312 = (uint64x2_t)v310;
      v310.i64[0] = v309.u32[0];
      v310.i64[1] = v309.u32[1];
      int64x2_t v313 = v310;
      v310.i64[0] = v309.u32[2];
      v310.i64[1] = v309.u32[3];
      int64x2_t v314 = vpaddq_s64((int64x2_t)vshlq_u64(v311, (uint64x2_t)vzip1q_s64((int64x2_t)0, v313)), (int64x2_t)vshlq_u64(v312, (uint64x2_t)vzip1q_s64((int64x2_t)0, v310)));
      int64x2_t v315 = vpaddq_s64(v313, v310);
      unint64_t v316 = (v314.i64[0] << v297) | v294;
      if (v315.i64[0] + (v297 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v297 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v316;
        unint64_t v316 = (unint64_t)v314.i64[0] >> -(v297 & 0x3F);
        if ((v297 & 0x3F) == 0) {
          unint64_t v316 = 0;
        }
      }
      int8x16_t v317 = vceqq_s8(v69, v85);
      int8x16_t v318 = vaddq_s8(v26, v298);
      unint64_t v319 = v315.i64[0] + v297;
      uint64_t v320 = (v315.i64[0] + v297) & 0x3F;
      unint64_t v321 = v316 | (v314.i64[1] << v319);
      if ((v319 & 0x3F) + v315.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v314.i64[1] >> -(char)v320;
        if (!v320) {
          unint64_t v321 = 0;
        }
      }
      int8x16_t v322 = vandq_s8(v75, v317);
      unint64_t v323 = v319 + v315.i64[1];
      v324.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v324.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v325.i64[0] = -1;
      v325.i64[1] = -1;
      uint8x16_t v326 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v325, (uint8x16_t)vaddq_s8(v242, v324)), v318);
      int16x8_t v327 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v242.i8);
      int16x8_t v328 = (int16x8_t)vmovl_high_u8((uint8x16_t)v242);
      uint16x8_t v329 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v326.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v327)), (int16x8_t)vshlq_u16(vmovl_high_u8(v326), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v328)));
      uint16x8_t v330 = (uint16x8_t)vpaddq_s16(v327, v328);
      int32x4_t v331 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v330.i8);
      int32x4_t v332 = (int32x4_t)vmovl_high_u16(v330);
      int32x4_t v333 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v329.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)), (int32x4_t)vshlq_u32(vmovl_high_u16(v329), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v332)));
      int32x4_t v334 = vpaddq_s32(v331, v332);
      v335.i64[0] = v333.u32[0];
      v335.i64[1] = v333.u32[1];
      uint64x2_t v336 = (uint64x2_t)v335;
      v335.i64[0] = v333.u32[2];
      v335.i64[1] = v333.u32[3];
      uint64x2_t v337 = (uint64x2_t)v335;
      v335.i64[0] = v334.u32[0];
      v335.i64[1] = v334.u32[1];
      int64x2_t v338 = v335;
      v335.i64[0] = v334.u32[2];
      v335.i64[1] = v334.u32[3];
      int64x2_t v339 = vpaddq_s64((int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v338)), (int64x2_t)vshlq_u64(v337, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)));
      int64x2_t v340 = vpaddq_s64(v338, v335);
      unint64_t v341 = (v339.i64[0] << v323) | v321;
      if (v340.i64[0] + (v323 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
        unint64_t v341 = (unint64_t)v339.i64[0] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v341 = 0;
        }
      }
      int8x16_t v342 = vceqq_s8(v69, v86);
      int8x16_t v343 = vaddq_s8(v27, v322);
      unint64_t v344 = v340.i64[0] + v323;
      unint64_t v345 = v341 | (v339.i64[1] << v344);
      if ((v344 & 0x3F) + v340.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v345;
        unint64_t v345 = (unint64_t)v339.i64[1] >> -(v344 & 0x3F);
        if ((v344 & 0x3F) == 0) {
          unint64_t v345 = 0;
        }
      }
      int8x16_t v346 = vandq_s8(v75, v342);
      unint64_t v347 = v344 + v340.i64[1];
      v348.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v348.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v349.i64[0] = -1;
      v349.i64[1] = -1;
      uint8x16_t v350 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v349, (uint8x16_t)vaddq_s8(v243, v348)), v343);
      int16x8_t v351 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v243.i8);
      int16x8_t v352 = (int16x8_t)vmovl_high_u8((uint8x16_t)v243);
      uint16x8_t v353 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v350.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v351)), (int16x8_t)vshlq_u16(vmovl_high_u8(v350), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v352)));
      uint16x8_t v354 = (uint16x8_t)vpaddq_s16(v351, v352);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16(v354);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)), (int32x4_t)vshlq_u32(vmovl_high_u16(v353), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v347) | v345;
      if (v364.i64[0] + (v347 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v347 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v363.i64[0] >> -(v347 & 0x3F);
        if ((v347 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      int8x16_t v366 = vaddq_s8(v28, v346);
      unint64_t v367 = v364.i64[0] + v347;
      unint64_t v368 = v365 | (v363.i64[1] << v367);
      if ((v367 & 0x3F) + v364.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v363.i64[1] >> -(v367 & 0x3F);
        if ((v367 & 0x3F) == 0) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v367 + v364.i64[1];
      v370.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v370.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      uint8x16_t v372 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v371, (uint8x16_t)vaddq_s8(v244, v370)), v366);
      int16x8_t v373 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v244.i8);
      int16x8_t v374 = (int16x8_t)vmovl_high_u8((uint8x16_t)v244);
      uint16x8_t v375 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v372.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)), (int16x8_t)vshlq_u16(vmovl_high_u8(v372), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v374)));
      uint16x8_t v376 = (uint16x8_t)vpaddq_s16(v373, v374);
      int32x4_t v377 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v376.i8);
      int32x4_t v378 = (int32x4_t)vmovl_high_u16(v376);
      int32x4_t v379 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v375.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)), (int32x4_t)vshlq_u32(vmovl_high_u16(v375), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v378)));
      int32x4_t v380 = vpaddq_s32(v377, v378);
      v381.i64[0] = v379.u32[0];
      v381.i64[1] = v379.u32[1];
      uint64x2_t v382 = (uint64x2_t)v381;
      v381.i64[0] = v379.u32[2];
      v381.i64[1] = v379.u32[3];
      uint64x2_t v383 = (uint64x2_t)v381;
      v381.i64[0] = v380.u32[0];
      v381.i64[1] = v380.u32[1];
      int64x2_t v384 = v381;
      v381.i64[0] = v380.u32[2];
      v381.i64[1] = v380.u32[3];
      int64x2_t v385 = vpaddq_s64((int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v384)), (int64x2_t)vshlq_u64(v383, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)));
      int64x2_t v386 = vpaddq_s64(v384, v381);
      unint64_t v387 = (v385.i64[0] << v369) | v368;
      if (v386.i64[0] + (v369 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v238 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v387;
        if ((v369 & 0x3F) != 0) {
          unint64_t v387 = (unint64_t)v385.i64[0] >> -(v369 & 0x3F);
        }
        else {
          unint64_t v387 = 0;
        }
      }
      unint64_t v388 = v386.i64[0] + v369;
      unint64_t v389 = v387 | (v385.i64[1] << v388);
      if ((v388 & 0x3F) + v386.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v388 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
        unint64_t v389 = (unint64_t)v385.i64[1] >> -(v388 & 0x3F);
        if ((v388 & 0x3F) == 0) {
          unint64_t v389 = 0;
        }
      }
      unint64_t v390 = v388 + v386.i64[1];
      if ((v390 & 0x3F) != 0) {
        *(void *)((char *)v238 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
      }
      unint64_t result = (v390 - v239 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(unsigned char *)a1 = a3->i8[0];
    *a2 = 96;
    return 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v68 = *MEMORY[0x263EF8340];
  long long v66 = 0u;
  long long v67 = 0u;
  uint64_t v10 = a6;
  if (a5 <= 1)
  {
    uint64_t v11 = 0;
    if (a6 >= 8 && a4 == 1)
    {
      if (a6 < 0x20)
      {
        uint64_t v11 = 0;
        goto LABEL_23;
      }
      uint64_t v11 = a6 & 0xE0;
      int8x16_t v34 = (long long *)(a3 + 16);
      int8x16_t v35 = &v67;
      uint64_t v36 = v11;
      do
      {
        long long v37 = *v34;
        *(v35 - 1) = *(v34 - 1);
        *int8x16_t v35 = v37;
        v34 += 2;
        v35 += 2;
        v36 -= 32;
      }
      while (v36);
      if (v11 == a6) {
        goto LABEL_28;
      }
      if ((a6 & 0x18) != 0)
      {
LABEL_23:
        uint64_t v38 = v11;
        uint64_t v11 = a6 & 0xF8;
        int8x16_t v39 = (uint64_t *)(a3 + v38);
        int8x16_t v40 = (void *)((char *)&v66 + v38);
        uint64_t v41 = v38 - v11;
        do
        {
          uint64_t v42 = *v39++;
          *v40++ = v42;
          v41 += 8;
        }
        while (v41);
        if (v11 == a6) {
          goto LABEL_28;
        }
      }
    }
    uint64_t v43 = a6 - v11;
    int8x16_t v44 = (char *)&v66 + v11;
    int8x16_t v45 = (char *)(a3 + v11 * a4);
    do
    {
      *v44++ = *v45;
      v45 += a4;
      --v43;
    }
    while (v43);
    goto LABEL_28;
  }
  uint64_t v12 = a5 & 0xFE;
  if (a5 == v12)
  {
    uint64_t v13 = 0;
    int8x8_t v14 = (char *)&v66 + 4;
    int8x8_t v15 = (char *)(a3 + 1);
    do
    {
      int16x4_t v16 = v15;
      int8x16_t v17 = v14;
      uint64_t v18 = a5;
      do
      {
        char v19 = *(v16 - 1);
        char v20 = *v16;
        v16 += 2;
        *(v17 - 4) = v19;
        *int8x16_t v17 = v20;
        v17 += 8;
        v18 -= 2;
      }
      while (v18);
      ++v13;
      ++v14;
      v15 += a4;
    }
    while (v13 != a6);
  }
  else
  {
    uint64_t v21 = 0;
    int8x16_t v22 = (char *)&v66 + 4;
    int8x16_t v23 = (char *)(a3 + 1);
    int8x16_t v24 = (char *)&v66 + ((4 * a5) & 0x3F8);
    do
    {
      int8x16_t v25 = v23;
      int8x16_t v26 = v22;
      uint64_t v27 = a5 & 0xFE;
      do
      {
        char v28 = *(v25 - 1);
        char v29 = *v25;
        v25 += 2;
        *(v26 - 4) = v28;
        *int8x16_t v26 = v29;
        v26 += 8;
        v27 -= 2;
      }
      while (v27);
      int8x16_t v30 = (char *)(a3 + v21 * a4 + v12);
      int8x16_t v31 = v24;
      uint64_t v32 = a5 - v12;
      do
      {
        char v33 = *v30++;
        *int8x16_t v31 = v33;
        v31 += 4;
        --v32;
      }
      while (v32);
      ++v21;
      ++v22;
      v23 += a4;
      ++v24;
    }
    while (v21 != v10);
  }
LABEL_28:
  v61.i32[0] = v66;
  v61.i32[1] = BYTE4(v66);
  v61.i32[2] = BYTE1(v66);
  v61.i32[3] = BYTE5(v66);
  int v62 = BYTE8(v66);
  int v63 = BYTE12(v66);
  if (a5 >= 4) {
    unsigned int v46 = 4;
  }
  else {
    unsigned int v46 = a5;
  }
  if (a5 >= 4) {
    unsigned int v47 = a5 - 4;
  }
  else {
    unsigned int v47 = 0;
  }
  int v64 = BYTE9(v66);
  int v65 = BYTE13(v66);
  if (a6 >= 2) {
    unsigned int v48 = 2;
  }
  else {
    unsigned int v48 = a6;
  }
  if (a6 >= 2) {
    unsigned int v49 = a6 - 2;
  }
  else {
    unsigned int v49 = 0;
  }
  char v51 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, &v61, a7, v46, v48);
  v61.i32[0] = BYTE2(v66);
  v61.i32[1] = BYTE6(v66);
  v61.i32[2] = BYTE3(v66);
  v61.i32[3] = BYTE7(v66);
  int v62 = BYTE10(v66);
  int v63 = BYTE14(v66);
  int v64 = BYTE11(v66);
  int v65 = HIBYTE(v66);
  if (a6 >= 4) {
    unsigned int v52 = 2;
  }
  else {
    unsigned int v52 = v49;
  }
  int v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 5, &v61, a7, v46, v52);
  v61.i32[0] = v67;
  v61.i32[1] = BYTE4(v67);
  v61.i32[2] = BYTE1(v67);
  v61.i32[3] = BYTE5(v67);
  int v62 = BYTE8(v67);
  int v63 = BYTE12(v67);
  if (a5 >= 8) {
    unsigned int v54 = 4;
  }
  else {
    unsigned int v54 = v47;
  }
  int v64 = BYTE9(v67);
  int v65 = BYTE13(v67);
  int v55 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 10, &v61, a7, v54, v48);
  v61.i32[0] = BYTE2(v67);
  v61.i32[1] = BYTE6(v67);
  v61.i32[2] = BYTE3(v67);
  v61.i32[3] = BYTE7(v67);
  int v62 = BYTE10(v67);
  int v63 = BYTE14(v67);
  int v64 = BYTE11(v67);
  int v65 = HIBYTE(v67);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 15, &v61, a7, v54, v52);
  if (v55) {
    char v57 = 4;
  }
  else {
    char v57 = 0;
  }
  if (v53) {
    char v58 = 2;
  }
  else {
    char v58 = 0;
  }
  if (result) {
    char v59 = -8;
  }
  else {
    char v59 = -16;
  }
  *a2 = v59 | v57 | v51 | v58;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(uint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v127 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v9.i64[0] = 0x8000000080;
    v9.i64[1] = 0x8000000080;
    int8x16_t v10 = veorq_s8(*a2, v9);
    v11.i64[0] = 0x100000001;
    v11.i64[1] = 0x100000001;
    int8x16_t v7 = vbicq_s8(v10, (int8x16_t)vceqq_s32((int32x4_t)v10, v11));
    int8x16_t v12 = veorq_s8(a2[1], v9);
    int8x16_t v8 = vbicq_s8(v12, (int8x16_t)vceqq_s32((int32x4_t)v12, v11));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v6.i64[0] = 0x8000000080;
    v6.i64[1] = 0x8000000080;
    int8x16_t v7 = veorq_s8(*a2, v6);
    int8x16_t v8 = veorq_s8(a2[1], v6);
LABEL_5:
    int8x16_t v125 = v7;
    int8x16_t v126 = v8;
    unsigned int v13 = v7.i32[0];
    goto LABEL_7;
  }
  int8x16_t v14 = a2[1];
  int8x16_t v125 = *a2;
  int8x16_t v126 = v14;
  unsigned int v13 = v125.i32[0];
LABEL_7:
  if (a5) {
    BOOL v15 = a4 >= 2;
  }
  else {
    BOOL v15 = 0;
  }
  int v16 = !v15;
  if (v15)
  {
    unsigned int v18 = v125.u32[1];
    unsigned int v17 = v125.i32[1] < v13;
    if (v125.i32[1] >= v13) {
      unsigned int v19 = v13;
    }
    else {
      unsigned int v19 = v125.u32[1];
    }
    if (v13 > v125.i32[1]) {
      unsigned int v18 = v13;
    }
  }
  else
  {
    unsigned int v17 = 0;
    unsigned int v18 = v13;
    unsigned int v19 = v13;
  }
  BOOL v20 = a5 < 2 || a4 == 0;
  int v21 = v20;
  if (!v20)
  {
    if (v125.i32[2] < v19)
    {
      unsigned int v17 = 2;
      unsigned int v19 = v125.u32[2];
    }
    if (v18 <= v125.i32[2]) {
      unsigned int v18 = v125.u32[2];
    }
  }
  BOOL v22 = a5 >= 2 && a4 >= 2;
  int v23 = !v22;
  if (v22)
  {
    if (v125.i32[3] < v19)
    {
      unsigned int v17 = 3;
      unsigned int v19 = v125.u32[3];
    }
    if (v18 <= v125.i32[3]) {
      unsigned int v18 = v125.u32[3];
    }
  }
  if (a5) {
    BOOL v24 = a4 >= 3;
  }
  else {
    BOOL v24 = 0;
  }
  int v25 = !v24;
  if (v24)
  {
    if (v126.i32[0] < v19)
    {
      unsigned int v17 = 4;
      unsigned int v19 = v126.i32[0];
    }
    if (v18 <= v126.i32[0]) {
      unsigned int v18 = v126.i32[0];
    }
  }
  if (a5) {
    BOOL v26 = a4 >= 4;
  }
  else {
    BOOL v26 = 0;
  }
  int v27 = !v26;
  if (v26)
  {
    if (v126.i32[1] < v19)
    {
      unsigned int v17 = 5;
      unsigned int v19 = v126.u32[1];
    }
    if (v18 <= v126.i32[1]) {
      unsigned int v18 = v126.u32[1];
    }
  }
  BOOL v28 = a5 >= 2 && a4 >= 3;
  int v29 = !v28;
  if (v28)
  {
    if (v126.i32[2] < v19)
    {
      unsigned int v17 = 6;
      unsigned int v19 = v126.u32[2];
    }
    if (v18 <= v126.i32[2]) {
      unsigned int v18 = v126.u32[2];
    }
  }
  BOOL v30 = a5 >= 2 && a4 >= 4;
  int v31 = !v30;
  if (v30)
  {
    if (v126.i32[3] < v19)
    {
      unsigned int v17 = 7;
      unsigned int v19 = v126.u32[3];
    }
    if (v18 <= v126.i32[3]) {
      unsigned int v18 = v126.u32[3];
    }
  }
  unsigned int v32 = v18 - v19;
  int v33 = __clz(v18 - v19);
  unsigned int v34 = 32 - v33;
  if (v33 > 32) {
    unsigned int v34 = -1;
  }
  if (v18) {
    BOOL v35 = v18 == 255;
  }
  else {
    BOOL v35 = 1;
  }
  int v36 = !v35;
  if (v34 < 2 && v18 == v19) {
    unsigned int v38 = v36;
  }
  else {
    unsigned int v38 = v34 + 1;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v39 = 0;
    if (v19 <= 0x7F && v18 >= 0x80) {
      BOOL v39 = kDQuadParamTable[10 * v38 + 8] == 0;
    }
  }
  else
  {
    BOOL v39 = 0;
  }
  if (v38 > 5 || v39)
  {
    int v41 = kDQuadParamTable[10 * v38 + 4];
    unsigned int v42 = v41 + 1;
    if (v39) {
      int v43 = 0;
    }
    else {
      int v43 = -2;
    }
    int v44 = v19 & ~(-1 << (7 - v41));
    if (v42 >= 8) {
      int v44 = 0;
    }
    int v45 = v44 + v43;
    if (v45 >= 1 && __clz(v45 + v32) < v33) {
      ++v38;
    }
  }
  unint64_t v49 = (unint64_t)&kDQuadParamTable[10 * v38];
  unint64_t v46 = *(void *)(v49 + 8);
  int v47 = *(_DWORD *)(v49 + 16);
  int v48 = *(_DWORD *)(v49 + 20);
  LODWORD(v49) = v48 + 1;
  if (a4) {
    BOOL v50 = a5 == 0;
  }
  else {
    BOOL v50 = 1;
  }
  int v51 = v50;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v52 = a4 == 0;
    }
    else {
      BOOL v52 = 1;
    }
    int v53 = !v52;
  }
  else
  {
    int v53 = 0;
  }
  unint64_t v54 = 0;
  unsigned int v55 = 0;
  if (v46 >> v49 > 0x10) {
    int v53 = 1;
  }
  memset(v122, 0, sizeof(v122));
  int v123 = 0;
  unsigned int v56 = 8 * (v48 != 0);
  if ((v47 + 1) < 8) {
    uint64_t v57 = (v47 + 1);
  }
  else {
    uint64_t v57 = 8;
  }
  if (v56 >= v49) {
    unint64_t v49 = v49;
  }
  else {
    unint64_t v49 = v56;
  }
  unsigned int v58 = v19 & (-1 << (8 - v57));
  unsigned int v59 = v13 - v58;
  if (v51) {
    unsigned int v59 = 0;
  }
  BOOL v20 = v16 == 0;
  unsigned __int32 v60 = v125.i32[1] - v58;
  if (!v20) {
    unsigned __int32 v60 = 0;
  }
  v124[0] = v59;
  v124[1] = v60;
  unint64_t v61 = v17;
  unint64_t v62 = v46 >> v49;
  if (v21) {
    unsigned __int32 v63 = 0;
  }
  else {
    unsigned __int32 v63 = v125.i32[2] - v58;
  }
  BOOL v20 = v23 == 0;
  unsigned __int32 v64 = v125.i32[3] - v58;
  if (!v20) {
    unsigned __int32 v64 = 0;
  }
  v124[2] = v63;
  v124[3] = v64;
  unsigned __int32 v65 = v126.i32[0] - v58;
  if (v25) {
    unsigned __int32 v65 = 0;
  }
  unsigned __int32 v66 = v126.i32[1] - v58;
  if (v27) {
    unsigned __int32 v66 = 0;
  }
  v124[4] = v65;
  v124[5] = v66;
  unsigned __int32 v67 = v126.i32[2] - v58;
  if (v29) {
    unsigned __int32 v67 = 0;
  }
  unsigned __int32 v68 = v126.i32[3] - v58;
  if (v31) {
    unsigned __int32 v68 = 0;
  }
  v124[6] = v67;
  v124[7] = v68;
  if (v62 <= 1) {
    unint64_t v69 = 1;
  }
  else {
    unint64_t v69 = v46 >> v49;
  }
  uint64_t v70 = 4 * v17;
  unint64_t v71 = &byte_242EA911D;
  do
  {
    if (v70 != v54)
    {
      if (v49) {
        unint64_t v72 = v124[v54 / 4] / v69;
      }
      else {
        LODWORD(v72) = 0;
      }
      *((_DWORD *)v122 + v55) = v72;
      if (v62 >= 2)
      {
        unint64_t v73 = v124[v54 / 4];
        if (v73)
        {
          if (v73 / v69 * v69 == v73 && ((v73 / v69) & 1) != 0)
          {
            if (v58 || v72 != 1)
            {
              if ((a3 | 2) != 3 || (uint64_t v75 = v125.u32[v54 / 4], v75 != 128) && ((a3 | 2) != 3 || v69 + 128 != v75))
              {
                LODWORD(v72) = v72 - 1;
                *((_DWORD *)v122 + v55) = v72;
              }
            }
            else
            {
              LODWORD(v72) = 1;
            }
          }
        }
      }
      if (v72 >> v49 || v125.i32[v54 / 4] == 255) {
        *((_DWORD *)v122 + v55) = ~(-1 << v49);
      }
      if (*v71 >= a5 || *(v71 - 1) >= a4) {
        *((_DWORD *)v122 + v55) = 0;
      }
      ++v55;
    }
    v54 += 4;
    v71 += 2;
  }
  while (v54 != 32);
  uint64_t result = v53 | v51;
  int8x16_t v77 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v78 = 8 * (a1 & 7);
  *(unsigned char *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
  if (result == 1)
  {
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = v78;
    do
    {
      int8x16_t v82 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v79;
      if (v82[1] >= a5 || *v82 >= a4) {
        unint64_t v84 = 0;
      }
      else {
        unint64_t v84 = (unint64_t)v125.u32[v79] >> 4;
      }
      if ((unint64_t)(v81 - v78 + (v80 << 6) - 37) >= 0xFFFFFFFFFFFFFFD7)
      {
        uint64_t v85 = 0;
        unint64_t v86 = 4;
        do
        {
          unint64_t v87 = 64 - v81;
          if (64 - v81 >= v86) {
            unint64_t v87 = v86;
          }
          v77[v80] |= ((v84 >> v85) & ~(-1 << v87)) << v81;
          v85 += v87;
          unint64_t v88 = v87 + v81;
          v80 += v88 >> 6;
          uint64_t v81 = v88 & 0x3F;
          v86 -= v87;
        }
        while (v86);
      }
      ++v79;
    }
    while (v79 != 8);
    return result;
  }
  if (v19 | v38)
  {
    uint64_t v89 = v78 | 3;
    LODWORD(v90) = (v38 + 6) & 7;
    if (v38 < 3) {
      unint64_t v91 = v38 + 1;
    }
    else {
      unint64_t v91 = 0;
    }
    if (v38 >= 3) {
      uint64_t v90 = v90;
    }
    else {
      uint64_t v90 = 0;
    }
    *v77 |= v90 << v78;
    if (v38 >= 3)
    {
      uint64_t v93 = 0;
      int v97 = 3;
      if (!v57) {
        goto LABEL_232;
      }
LABEL_227:
      if ((unint64_t)(v57 - v78 + v89 + (v93 << 6)) <= 0x28)
      {
        uint64_t v98 = 0;
        unint64_t v99 = v57;
        do
        {
          unint64_t v100 = 64 - v89;
          if (64 - v89 >= v99) {
            unint64_t v100 = v99;
          }
          v77[v93] |= (((unint64_t)(v58 >> (8 - v57)) >> v98) & ~(-1 << v100)) << v89;
          v98 += v100;
          unint64_t v101 = v100 + v89;
          v93 += v101 >> 6;
          uint64_t v89 = v101 & 0x3F;
          v99 -= v100;
        }
        while (v99);
      }
      goto LABEL_232;
    }
    unint64_t v92 = 2 * (v38 < 3);
  }
  else
  {
    unint64_t v91 = 0;
    uint64_t v89 = v78 | 3;
    unint64_t v92 = 2;
  }
  if (v92 - v78 + v89 <= 0x28)
  {
    uint64_t v93 = 0;
    uint64_t v94 = 0;
    do
    {
      unint64_t v95 = 64 - v89;
      if (64 - v89 >= v92) {
        unint64_t v95 = v92;
      }
      v77[v93] |= ((v91 >> v94) & ~(-1 << v95)) << v89;
      v94 += v95;
      unint64_t v96 = v95 + v89;
      v93 += v96 >> 6;
      uint64_t v89 = v96 & 0x3F;
      v92 -= v95;
    }
    while (v92);
  }
  else
  {
    uint64_t v93 = 0;
  }
  int v97 = 5;
  if (!v38) {
    goto LABEL_233;
  }
  if (v57) {
    goto LABEL_227;
  }
LABEL_232:
  v97 += v57;
LABEL_233:
  if (v49)
  {
    if ((unint64_t)(v89 - v78 + (v93 << 6) + 3) <= 0x28)
    {
      uint64_t v102 = 0;
      unint64_t v103 = 3;
      do
      {
        unint64_t v104 = 64 - v89;
        if (64 - v89 >= v103) {
          unint64_t v104 = v103;
        }
        v77[v93] |= ((v61 >> v102) & ~(-1 << v104)) << v89;
        v102 += v104;
        unint64_t v105 = v104 + v89;
        v93 += v105 >> 6;
        uint64_t v89 = v105 & 0x3F;
        v103 -= v104;
      }
      while (v103);
    }
    v97 += 3;
  }
  unsigned int v106 = (((37 * (40 - v97)) >> 8)
        + (((40 - v97 - ((unsigned __int16)(37 * (40 - v97)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v107 = -7 * v106 + 40 - v97;
  if ((v107 - 257) >= 0xFFFFFF00 && v89 - v78 + (v93 << 6) + v107 <= 0x28)
  {
    do
    {
      unint64_t v108 = 64 - v89;
      if (64 - v89 >= v107) {
        unint64_t v108 = v107;
      }
      unint64_t v109 = v108 + v89;
      v93 += v109 >> 6;
      uint64_t v89 = v109 & 0x3F;
      v107 -= v108;
    }
    while (v107);
  }
  uint64_t v110 = 0;
  unint64_t v111 = v106 - v49;
  if (v111) {
    BOOL v112 = v111 > 0x100;
  }
  else {
    BOOL v112 = 1;
  }
  char v113 = v112;
  do
  {
    if (v49 && v49 - v78 + v89 + (v93 << 6) <= 0x28)
    {
      uint64_t v114 = 0;
      unint64_t v115 = *((unsigned int *)v122 + v110);
      unint64_t v116 = v49;
      do
      {
        unint64_t v117 = 64 - v89;
        if (64 - v89 >= v116) {
          unint64_t v117 = v116;
        }
        v77[v93] |= ((v115 >> v114) & ~(-1 << v117)) << v89;
        v114 += v117;
        unint64_t v118 = v117 + v89;
        v93 += v118 >> 6;
        uint64_t v89 = v118 & 0x3F;
        v116 -= v117;
      }
      while (v116);
    }
    if ((v113 & 1) == 0 && v89 - v78 + (v93 << 6) + v111 <= 0x28)
    {
      unint64_t v119 = v111;
      do
      {
        unint64_t v120 = 64 - v89;
        if (64 - v89 >= v119) {
          unint64_t v120 = v119;
        }
        unint64_t v121 = v120 + v89;
        v93 += v121 >> 6;
        uint64_t v89 = v121 & 0x3F;
        v119 -= v120;
      }
      while (v119);
    }
    ++v110;
  }
  while (v110 != 7);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(uint64_t a1, uint64_t a2, int16x4_t *a3, unsigned int a4, int a5)
{
  uint64_t v427 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v189 = 0;
LABEL_385:
    *(void *)a1 = 0;
    *(void *)(a1 + a2) = 0;
    *(void *)(a1 + 2 * a2) = 0;
    *(void *)(a1 + 3 * a2) = 0;
    return v189;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v5 = 0;
    unsigned int v6 = a5 & 0xFFFFFFFD;
    unint64_t v389 = a3;
    unsigned int v388 = a4;
    while (1)
    {
      unint64_t v23 = (unint64_t)a3 + 5 * v5;
      BOOL v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v25 = 8 * (v23 & 7);
      if ((a4 >> v5))
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = v25;
        do
        {
          if ((unint64_t)(v28 - v25 + (v27 << 6) - 37) < 0xFFFFFFFFFFFFFFD7)
          {
            char v29 = 0;
          }
          else
          {
            char v29 = 0;
            uint64_t v33 = 0;
            unint64_t v34 = 4;
            do
            {
              if (64 - v28 >= v34) {
                unint64_t v35 = v34;
              }
              else {
                unint64_t v35 = 64 - v28;
              }
              v29 |= (unint64_t)((v24[v27] >> v28) & ~(-1 << v35)) << v33;
              v33 += v35;
              unint64_t v36 = v35 + v28;
              v27 += v36 >> 6;
              uint64_t v28 = v36 & 0x3F;
              v34 -= v35;
            }
            while (v34);
          }
          int v30 = 16 * (v29 & 0xF);
          int v31 = v30 - (v29 & 1) + 8;
          if (v30 == 240) {
            int v31 = 255;
          }
          if (!v30) {
            int v31 = 0;
          }
          if (v30 == 128 && v6 == 1) {
            int v31 = v30;
          }
          if (a5 == 4) {
            int v31 = v30;
          }
          *(&v390 + v26++) = v31 ^ (((a5 & 0xFFFFFFFD) == 1) << 7);
        }
        while (v26 != 8);
        LOBYTE(v8) = v390;
        LOBYTE(v7) = v391;
        LOBYTE(v9) = v392;
        LOBYTE(v10) = v393;
        LOBYTE(v11) = v394;
        LOBYTE(v12) = v395;
        char v14 = v396;
        char v13 = v397;
        goto LABEL_5;
      }
      uint64_t v37 = v25 | 3;
      if (((*v24 >> v25) & 7) != 0)
      {
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        int v40 = 0;
        int v41 = ((*v24 >> v25) & 7) + 2;
        int v42 = 3;
        goto LABEL_41;
      }
      if ((unint64_t)(v37 - v25) > 0x26) {
        break;
      }
      uint64_t v39 = 0;
      char v43 = 0;
      uint64_t v44 = 0;
      unint64_t v45 = 2;
      do
      {
        unint64_t v46 = 64 - v37;
        if (64 - v37 >= v45) {
          unint64_t v46 = v45;
        }
        v43 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v46)) << v44;
        v44 += v46;
        unint64_t v47 = v46 + v37;
        v39 += v47 >> 6;
        uint64_t v37 = v47 & 0x3F;
        v45 -= v46;
      }
      while (v45);
      int v40 = v43 & 3;
      if (v40 == 2)
      {
        unsigned int v38 = 0;
        int v41 = 1;
        goto LABEL_40;
      }
      if (v40 == 1)
      {
        int v41 = 0;
        int v40 = 2;
        int v42 = 5;
        unsigned int v38 = 255;
      }
      else
      {
        if ((v43 & 3) == 0) {
          goto LABEL_39;
        }
        unsigned int v38 = 0;
        int v40 = 2;
        int v42 = 5;
        int v41 = 2;
      }
LABEL_41:
      int v48 = &kDQuadParamTable[10 * v41];
      int v49 = v48[4];
      int v50 = v48[5];
      BOOL v51 = v50 != 0;
      if ((v49 + 1) < 8) {
        uint64_t v52 = (v49 + 1);
      }
      else {
        uint64_t v52 = 8;
      }
      if (8 * v51 >= (v50 + 1)) {
        unint64_t v53 = (v50 + 1);
      }
      else {
        unint64_t v53 = (8 * v51);
      }
      char v54 = 8 - v52;
      if (v41)
      {
        if (v52)
        {
          if ((unint64_t)(v52 - v25 + v37 + (v39 << 6)) <= 0x28)
          {
            int v55 = 0;
            uint64_t v56 = 0;
            unint64_t v57 = v52;
            do
            {
              unint64_t v58 = 64 - v37;
              if (64 - v37 >= v57) {
                unint64_t v58 = v57;
              }
              v55 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v58)) << v56;
              v56 += v58;
              unint64_t v59 = v58 + v37;
              v39 += v59 >> 6;
              uint64_t v37 = v59 & 0x3F;
              v57 -= v58;
            }
            while (v57);
          }
          else
          {
            int v55 = 0;
          }
          int v42 = v52 + v40 + 3;
        }
        else
        {
          int v55 = 0;
        }
        unsigned int v38 = v55 << v54;
      }
      if (v53)
      {
        if ((unint64_t)(v37 - v25 + (v39 << 6) + 3) <= 0x28)
        {
          int v60 = 0;
          uint64_t v62 = 0;
          unint64_t v63 = 3;
          do
          {
            unint64_t v64 = 64 - v37;
            if (64 - v37 >= v63) {
              unint64_t v64 = v63;
            }
            v60 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v64)) << v62;
            v62 += v64;
            unint64_t v65 = v64 + v37;
            v39 += v65 >> 6;
            uint64_t v37 = v65 & 0x3F;
            v63 -= v64;
          }
          while (v63);
        }
        else
        {
          int v60 = 0;
        }
        uint64_t v423 = 0;
        uint64_t v424 = 0;
        int v426 = 0;
        uint64_t v425 = 0;
        unsigned int v66 = 37 - v42;
        unsigned int v67 = (37 - v42) / 7u;
        unint64_t v68 = v53 - v25;
        unint64_t v69 = (v37 | (v39 << 6)) + v66 % 7;
        unint64_t v70 = v69 & 0x3F;
        if (v68 + v70 + (v69 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          uint64_t v61 = 0;
          uint64_t v71 = 0;
          unint64_t v72 = v69 >> 6;
          unint64_t v73 = v53;
          do
          {
            unint64_t v74 = 64 - v70;
            if (64 - v70 >= v73) {
              unint64_t v74 = v73;
            }
            v61 |= ((unint64_t)((v24[v72] >> v70) & ~(-1 << v74)) << v71);
            v71 += v74;
            unint64_t v75 = v74 + v70;
            v72 += v75 >> 6;
            unint64_t v70 = v75 & 0x3F;
            v73 -= v74;
          }
          while (v73);
          LODWORD(v423) = v61;
          unint64_t v69 = v70 | (v72 << 6);
        }
        else
        {
          uint64_t v61 = 0;
        }
        uint64_t v76 = v67 - v53;
        unint64_t v77 = v69 + v76;
        uint64_t v78 = (v69 + v76) & 0x3F;
        if (v68 + v78 + (v77 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v79 = 0;
          uint64_t v80 = 0;
          unint64_t v81 = v77 >> 6;
          unint64_t v82 = v53;
          do
          {
            unint64_t v83 = 64 - v78;
            if (64 - v78 >= v82) {
              unint64_t v83 = v82;
            }
            v79 |= (unint64_t)((v24[v81] >> v78) & ~(-1 << v83)) << v80;
            v80 += v83;
            unint64_t v84 = v83 + v78;
            v81 += v84 >> 6;
            uint64_t v78 = v84 & 0x3F;
            v82 -= v83;
          }
          while (v82);
          HIDWORD(v423) = v79;
          unint64_t v77 = v78 | (v81 << 6);
        }
        else
        {
          HIDWORD(v423) = 0;
        }
        unint64_t v85 = v77 + v76;
        uint64_t v86 = v85 & 0x3F;
        if (v68 + v86 + (v85 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v87 = 0;
          uint64_t v88 = 0;
          unint64_t v89 = v85 >> 6;
          unint64_t v90 = v53;
          do
          {
            unint64_t v91 = 64 - v86;
            if (64 - v86 >= v90) {
              unint64_t v91 = v90;
            }
            v87 |= (unint64_t)((v24[v89] >> v86) & ~(-1 << v91)) << v88;
            v88 += v91;
            unint64_t v92 = v91 + v86;
            v89 += v92 >> 6;
            uint64_t v86 = v92 & 0x3F;
            v90 -= v91;
          }
          while (v90);
          LODWORD(v424) = v87;
          unint64_t v85 = v86 | (v89 << 6);
        }
        else
        {
          LODWORD(v424) = 0;
        }
        unint64_t v93 = v85 + v76;
        uint64_t v94 = v93 & 0x3F;
        if (v68 + v94 + (v93 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v95 = 0;
          uint64_t v96 = 0;
          unint64_t v97 = v93 >> 6;
          unint64_t v98 = v53;
          do
          {
            unint64_t v99 = 64 - v94;
            if (64 - v94 >= v98) {
              unint64_t v99 = v98;
            }
            v95 |= (unint64_t)((v24[v97] >> v94) & ~(-1 << v99)) << v96;
            v96 += v99;
            unint64_t v100 = v99 + v94;
            v97 += v100 >> 6;
            uint64_t v94 = v100 & 0x3F;
            v98 -= v99;
          }
          while (v98);
          HIDWORD(v424) = v95;
          unint64_t v93 = v94 | (v97 << 6);
        }
        else
        {
          HIDWORD(v424) = 0;
        }
        unint64_t v101 = v93 + v76;
        uint64_t v102 = v101 & 0x3F;
        if (v68 + v102 + (v101 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v103 = 0;
          uint64_t v104 = 0;
          unint64_t v105 = v101 >> 6;
          unint64_t v106 = v53;
          do
          {
            unint64_t v107 = 64 - v102;
            if (64 - v102 >= v106) {
              unint64_t v107 = v106;
            }
            v103 |= (unint64_t)((v24[v105] >> v102) & ~(-1 << v107)) << v104;
            v104 += v107;
            unint64_t v108 = v107 + v102;
            v105 += v108 >> 6;
            uint64_t v102 = v108 & 0x3F;
            v106 -= v107;
          }
          while (v106);
          LODWORD(v425) = v103;
          unint64_t v101 = v102 | (v105 << 6);
        }
        else
        {
          LODWORD(v425) = 0;
        }
        unint64_t v109 = v101 + v76;
        unint64_t v110 = v109 >> 6;
        uint64_t v111 = v109 & 0x3F;
        if (v68 + v111 + (v109 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v112 = 0;
          uint64_t v113 = 0;
          unint64_t v114 = v53;
          do
          {
            unint64_t v115 = 64 - v111;
            if (64 - v111 >= v114) {
              unint64_t v115 = v114;
            }
            v112 |= (unint64_t)((v24[v110] >> v111) & ~(-1 << v115)) << v113;
            v113 += v115;
            unint64_t v116 = v115 + v111;
            v110 += v116 >> 6;
            uint64_t v111 = v116 & 0x3F;
            v114 -= v115;
          }
          while (v114);
        }
        else
        {
          int v112 = 0;
        }
        HIDWORD(v425) = v112;
        unint64_t v117 = (v111 | (v110 << 6)) + v76;
        uint64_t v118 = v117 & 0x3F;
        if (v68 + v118 + (v117 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v119 = 0;
          uint64_t v120 = 0;
          unint64_t v121 = v117 >> 6;
          unint64_t v122 = v53;
          do
          {
            unint64_t v123 = 64 - v118;
            if (64 - v118 >= v122) {
              unint64_t v123 = v122;
            }
            v119 |= (unint64_t)((v24[v121] >> v118) & ~(-1 << v123)) << v120;
            v120 += v123;
            unint64_t v124 = v123 + v118;
            v121 += v124 >> 6;
            uint64_t v118 = v124 & 0x3F;
            v122 -= v123;
          }
          while (v122);
        }
        else
        {
          int v119 = 0;
        }
        int v426 = v119;
      }
      else
      {
        int v60 = 0;
        uint64_t v61 = 0;
        uint64_t v423 = 0;
        uint64_t v424 = 0;
        int v426 = 0;
        uint64_t v425 = 0;
      }
      unint64_t v125 = *(void *)&kDQuadParamTable[10 * v41 + 2];
      if (v125 >> v53 <= 1) {
        unint64_t v126 = 1;
      }
      else {
        unint64_t v126 = v125 >> v53;
      }
      unint64_t v127 = v126 >> 1;
      unint64_t v128 = (unint64_t)(1 << v54) >> 1;
      if (v126 >> 1 < v128) {
        unint64_t v128 = v126 >> 1;
      }
      unint64_t v129 = 128 - v38;
      if (v38) {
        uint64_t v130 = v128;
      }
      else {
        uint64_t v130 = 0;
      }
      BOOL v131 = v38 == 128;
      if (v38 >= 0xFF) {
        char v132 = -1;
      }
      else {
        char v132 = v38;
      }
      char v133 = v132 ^ 0x80;
      if (v126 <= v129)
      {
        char v134 = 127;
      }
      else
      {
        char v133 = 0;
        char v134 = 0;
      }
      if (v6 == 1) {
        char v135 = v133;
      }
      else {
        char v135 = v132;
      }
      if (v6 == 1) {
        char v13 = v134;
      }
      else {
        char v13 = -1;
      }
      if (!v53)
      {
        if (a5 == 4)
        {
          char v14 = v13;
          LOBYTE(v12) = v13;
          LOBYTE(v11) = v13;
          LOBYTE(v10) = v13;
          LOBYTE(v9) = v13;
          LOBYTE(v7) = v13;
          LOBYTE(v8) = v13;
          a3 = v389;
          a4 = v388;
          if ((v38 & 0x7FC00000 | 0x80000000) != 0xFF800000)
          {
            char v13 = v135;
            char v14 = v135;
            LOBYTE(v12) = v135;
            LOBYTE(v11) = v135;
            LOBYTE(v10) = v135;
            LOBYTE(v9) = v135;
            LOBYTE(v7) = v135;
            LOBYTE(v8) = v135;
          }
          goto LABEL_5;
        }
        char v13 = v135;
        char v14 = v135;
        LOBYTE(v12) = v135;
        LOBYTE(v11) = v135;
        LOBYTE(v10) = v135;
        LOBYTE(v9) = v135;
        LOBYTE(v7) = v135;
        LOBYTE(v8) = v135;
        goto LABEL_309;
      }
      unint64_t v136 = v125 + v38;
      uint64_t v137 = ~(-1 << v53);
      unint64_t v138 = v129 / v126;
      if (!v60)
      {
        uint64_t v141 = 0;
        uint64_t v140 = v130;
        BOOL v139 = v38 == 128;
        goto LABEL_149;
      }
      BOOL v139 = v138 == v61;
      if (v38 || v61)
      {
        if (v136 >= 0x100 && v61 == v137)
        {
          uint64_t v141 = 1;
          uint64_t v140 = 255;
          goto LABEL_149;
        }
        uint64_t v140 = v127 + v126 * v61;
      }
      else
      {
        uint64_t v140 = 0;
      }
      uint64_t v141 = 1;
LABEL_149:
      unint64_t v142 = v140 + v38;
      unint64_t v143 = v142;
      if (a5 == 4)
      {
        unint64_t v143 = 2139095039;
        if ((v142 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v143 = 4286578687;
          if ((v142 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v143 = v142;
          }
        }
      }
      if (v143 >= 0xFF) {
        int v144 = 255;
      }
      else {
        int v144 = v143;
      }
      if (v139) {
        int v145 = 0;
      }
      else {
        int v145 = v144 ^ 0x80;
      }
      if (v6 == 1) {
        int v8 = v145;
      }
      else {
        int v8 = v144;
      }
      int v390 = v8;
      if (v60 == 1)
      {
        uint64_t v146 = v130;
        BOOL v147 = v38 == 128;
      }
      else
      {
        uint64_t v148 = *(unsigned int *)((unint64_t)&v423 | (4 * v141));
        BOOL v147 = v138 == v148;
        if (v38 | v148)
        {
          if (v136 >= 0x100 && v148 == v137) {
            uint64_t v146 = 255;
          }
          else {
            uint64_t v146 = v127 + v126 * v148;
          }
        }
        else
        {
          uint64_t v146 = 0;
        }
        ++v141;
      }
      unint64_t v149 = v146 + v38;
      unint64_t v150 = v149;
      if (a5 == 4)
      {
        unint64_t v150 = 2139095039;
        if ((v149 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v150 = 4286578687;
          if ((v149 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v150 = v149;
          }
        }
      }
      if (v150 >= 0xFF) {
        int v151 = 255;
      }
      else {
        int v151 = v150;
      }
      if (v147) {
        int v152 = 0;
      }
      else {
        int v152 = v151 ^ 0x80;
      }
      if (v6 == 1) {
        int v7 = v152;
      }
      else {
        int v7 = v151;
      }
      int v391 = v7;
      if (v60 == 2)
      {
        uint64_t v153 = v130;
        BOOL v154 = v38 == 128;
      }
      else
      {
        uint64_t v155 = *((unsigned int *)&v423 + v141);
        BOOL v154 = v138 == v155;
        if (v38 | v155)
        {
          if (v136 >= 0x100 && v155 == v137) {
            uint64_t v153 = 255;
          }
          else {
            uint64_t v153 = v127 + v126 * v155;
          }
        }
        else
        {
          uint64_t v153 = 0;
        }
        ++v141;
      }
      unint64_t v156 = v153 + v38;
      unint64_t v157 = v156;
      if (a5 == 4)
      {
        unint64_t v157 = 2139095039;
        if ((v156 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v157 = 4286578687;
          if ((v156 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v157 = v156;
          }
        }
      }
      if (v157 >= 0xFF) {
        int v158 = 255;
      }
      else {
        int v158 = v157;
      }
      if (v154) {
        int v9 = 0;
      }
      else {
        int v9 = v158 ^ 0x80;
      }
      if (v6 != 1) {
        int v9 = v158;
      }
      int v392 = v9;
      if (v60 == 3)
      {
        uint64_t v159 = v130;
        BOOL v160 = v38 == 128;
      }
      else
      {
        uint64_t v161 = *((unsigned int *)&v423 + v141);
        BOOL v160 = v138 == v161;
        if (v38 | v161)
        {
          if (v136 >= 0x100 && v161 == v137) {
            uint64_t v159 = 255;
          }
          else {
            uint64_t v159 = v127 + v126 * v161;
          }
        }
        else
        {
          uint64_t v159 = 0;
        }
        ++v141;
      }
      unint64_t v162 = v159 + v38;
      unint64_t v163 = v162;
      if (a5 == 4)
      {
        unint64_t v163 = 2139095039;
        if ((v162 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v162 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v163 = 4286578687;
          }
          else {
            unint64_t v163 = v162;
          }
        }
      }
      if (v163 >= 0xFF) {
        int v164 = 255;
      }
      else {
        int v164 = v163;
      }
      if (v160) {
        int v165 = 0;
      }
      else {
        int v165 = v164 ^ 0x80;
      }
      if (v6 == 1) {
        int v10 = v165;
      }
      else {
        int v10 = v164;
      }
      int v393 = v10;
      if (v60 == 4)
      {
        uint64_t v166 = v130;
        BOOL v167 = v38 == 128;
      }
      else
      {
        uint64_t v168 = *((unsigned int *)&v423 + v141);
        BOOL v167 = v138 == v168;
        if (v38 | v168)
        {
          if (v136 >= 0x100 && v168 == v137) {
            uint64_t v166 = 255;
          }
          else {
            uint64_t v166 = v127 + v126 * v168;
          }
        }
        else
        {
          uint64_t v166 = 0;
        }
        ++v141;
      }
      unint64_t v169 = v166 + v38;
      unint64_t v170 = v169;
      if (a5 == 4)
      {
        unint64_t v170 = 2139095039;
        if ((v169 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v169 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v170 = 4286578687;
          }
          else {
            unint64_t v170 = v169;
          }
        }
      }
      if (v170 >= 0xFF) {
        int v171 = 255;
      }
      else {
        int v171 = v170;
      }
      if (v167) {
        int v11 = 0;
      }
      else {
        int v11 = v171 ^ 0x80;
      }
      if (v6 != 1) {
        int v11 = v171;
      }
      int v394 = v11;
      unint64_t v387 = v136;
      if (v60 == 5)
      {
        uint64_t v172 = ~(-1 << v53);
        uint64_t v173 = v130;
        BOOL v174 = v38 == 128;
      }
      else
      {
        uint64_t v175 = *((unsigned int *)&v423 + v141);
        BOOL v174 = v138 == v175;
        if (v38 | v175)
        {
          if (v136 >= 0x100 && v175 == v137)
          {
            uint64_t v172 = ~(-1 << v53);
            uint64_t v173 = 255;
          }
          else
          {
            uint64_t v172 = ~(-1 << v53);
            uint64_t v173 = v127 + v126 * v175;
          }
        }
        else
        {
          uint64_t v172 = ~(-1 << v53);
          uint64_t v173 = 0;
        }
        ++v141;
      }
      unint64_t v176 = v173 + v38;
      unint64_t v177 = v176;
      if (a5 == 4)
      {
        unint64_t v177 = 2139095039;
        if ((v176 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v176 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v177 = 4286578687;
          }
          else {
            unint64_t v177 = v176;
          }
        }
      }
      if (v177 >= 0xFF) {
        int v178 = 255;
      }
      else {
        int v178 = v177;
      }
      int v179 = v178 ^ 0x80;
      if (v174) {
        int v179 = 0;
      }
      if (v6 == 1) {
        int v12 = v179;
      }
      else {
        int v12 = v178;
      }
      int v395 = v12;
      if (v60 == 6)
      {
        uint64_t v180 = v130;
        BOOL v181 = v38 == 128;
      }
      else
      {
        uint64_t v182 = *((unsigned int *)&v423 + v141);
        BOOL v181 = v138 == v182;
        if (v38 | v182)
        {
          if (v387 >= 0x100 && v182 == v172) {
            uint64_t v180 = 255;
          }
          else {
            uint64_t v180 = v127 + v126 * v182;
          }
        }
        else
        {
          uint64_t v180 = 0;
        }
        ++v141;
      }
      unint64_t v183 = v180 + v38;
      unint64_t v184 = v183;
      if (a5 == 4)
      {
        unint64_t v184 = 2139095039;
        if ((v183 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v184 = 4286578687;
          if ((v183 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v184 = v183;
          }
        }
      }
      if (v184 >= 0xFF) {
        LOBYTE(v184) = -1;
      }
      char v185 = v184 ^ 0x80;
      if (v181) {
        char v185 = 0;
      }
      if (v6 == 1) {
        char v14 = v185;
      }
      else {
        char v14 = v184;
      }
      if (v60 != 7)
      {
        uint64_t v186 = *((unsigned int *)&v423 + v141);
        BOOL v131 = v138 == v186;
        if (v38 | v186)
        {
          if (v387 >= 0x100 && v186 == v172) {
            uint64_t v130 = 255;
          }
          else {
            uint64_t v130 = v127 + v126 * v186;
          }
        }
        else
        {
          uint64_t v130 = 0;
        }
      }
      unint64_t v187 = v130 + v38;
      unint64_t v188 = v187;
      if (a5 == 4)
      {
        unint64_t v188 = 2139095039;
        if ((v187 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v188 = 4286578687;
          if ((v187 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v188 = v130 + v38;
          }
        }
      }
      if (v188 >= 0xFF) {
        LOBYTE(v188) = -1;
      }
      char v13 = v188 ^ 0x80;
      if (v131) {
        char v13 = 0;
      }
      if (v6 != 1) {
        char v13 = v188;
      }
LABEL_309:
      a3 = v389;
      a4 = v388;
LABEL_5:
      BOOL v15 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v5;
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      unsigned int v18 = (char *)&v398 + 4 * v16;
      v18[v17] = v8;
      unsigned int v19 = (char *)&v398 + 4 * (v16 + 1);
      v19[v17] = v7;
      uint64_t v20 = (v17 + 1);
      v18[v20] = v9;
      v19[v20] = v10;
      int v21 = (char *)&v398 + 4 * (v16 + 2);
      v21[v17] = v11;
      BOOL v22 = (char *)&v398 + 4 * (v16 + 3);
      v22[v17] = v12;
      v21[v20] = v14;
      v22[v20] = v13;
      if (++v5 == 4)
      {
        *(unsigned char *)a1 = v398;
        *(unsigned char *)(a1 + 1) = BYTE4(v398);
        *(unsigned char *)(a1 + 2) = v399;
        *(unsigned char *)(a1 + 3) = v403;
        *(unsigned char *)(a1 + 4) = v407;
        *(unsigned char *)(a1 + 5) = v411;
        *(unsigned char *)(a1 + 6) = v415;
        *(unsigned char *)(a1 + 7) = v419;
        int8x16_t v191 = (unsigned char *)(a1 + a2);
        *int8x16_t v191 = BYTE1(v398);
        v191[1] = BYTE5(v398);
        v191[2] = v400;
        v191[3] = v404;
        v191[4] = v408;
        v191[5] = v412;
        v191[6] = v416;
        v191[7] = v420;
        int8x16_t v192 = (unsigned char *)(a1 + a2 + a2);
        *int8x16_t v192 = BYTE2(v398);
        v192[1] = BYTE6(v398);
        v192[2] = v401;
        v192[3] = v405;
        v192[4] = v409;
        v192[5] = v413;
        v192[6] = v417;
        v192[7] = v421;
        int8x16_t v193 = &v192[a2];
        *int8x16_t v193 = BYTE3(v398);
        v193[1] = HIBYTE(v398);
        v193[2] = v402;
        v193[3] = v406;
        v193[4] = v410;
        v193[5] = v414;
        v193[6] = v418;
        uint64_t v189 = 20;
        v193[7] = v422;
        return v189;
      }
    }
    uint64_t v39 = 0;
LABEL_39:
    unsigned int v38 = 0;
    int v41 = 0;
    int v40 = 2;
LABEL_40:
    int v42 = 5;
    goto LABEL_41;
  }
  if (a4 == 31)
  {
    int16x4_t v194 = *a3;
    int16x4_t v195 = a3[1];
    int16x4_t v196 = a3[2];
    int16x4_t v197 = a3[3];
    *(int16x4_t *)a1 = vuzp1_s16(*a3, v196);
    *(int16x4_t *)(a1 + a2) = vuzp2_s16(v194, v196);
    int8x16_t v198 = (int16x4_t *)(a1 + 2 * a2);
    *int8x16_t v198 = vuzp1_s16(v195, v197);
    *(int16x4_t *)((char *)v198 + a2) = vuzp2_s16(v195, v197);
    return 32;
  }
  if (a4 == 96)
  {
    int8x8_t v190 = vdup_lane_s8((int8x8_t)*a3, 0);
    *(int8x8_t *)a1 = v190;
    *(int8x8_t *)(a1 + a2) = v190;
    *(int8x8_t *)(a1 + 2 * a2) = v190;
    *(int8x8_t *)(a1 + 3 * a2) = v190;
    return 1;
  }
  unint64_t v199 = 8 * (a3 & 7);
  unint64_t v200 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v201 = v199 + 12;
  unint64_t v202 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v199;
  if (v199 >= 0x35) {
    v202 |= *(void *)(v200 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v203 = v199 + 160;
  int8x16_t v204 = vdupq_n_s8(((a4 >> 5) | (8 * v202)) & 0xF);
  v205.i64[0] = 0x303030303030303;
  v205.i64[1] = 0x303030303030303;
  int8x16_t v206 = vandq_s8(v204, v205);
  int8x16_t v207 = vbicq_s8(vdupq_n_s8(((v202 >> 1) & 7) + 1), vceqq_s8(v206, v205));
  v205.i64[0] = 0x202020202020202;
  v205.i64[1] = 0x202020202020202;
  int8x16_t v208 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v204.i8), (int8x8_t)0x4000400040004)))), v205);
  if (vmaxvq_s8(v208) < 1)
  {
    int v218 = 0;
    v219.i64[0] = -1;
    v219.i64[1] = -1;
    int8x16_t v220 = v207;
    int8x16_t v221 = v207;
    int8x16_t v222 = v207;
    v223.i64[0] = -1;
    v223.i64[1] = -1;
    int8x16_t v224 = v207;
    v225.i64[0] = -1;
    v225.i64[1] = -1;
    v226.i64[0] = -1;
    v226.i64[1] = -1;
  }
  else
  {
    int8x16_t v209 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v208, v208));
    int8x16_t v210 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v209, (int16x8_t)v209));
    unint64_t v211 = vpaddq_s32((int32x4_t)v210, (int32x4_t)v210).u64[0];
    v212.i64[0] = v211;
    v212.i64[1] = HIDWORD(v211);
    int64x2_t v213 = v212;
    unint64_t v214 = vaddvq_s64(v212);
    unint64_t v215 = v214 + v201;
    if (v214 <= 0x80 && v203 >= v215)
    {
      int64x2_t v227 = vaddq_s64(vzip1q_s64((int64x2_t)0, v213), vdupq_n_s64(v201 & 0x3C));
      int8x16_t v228 = (int64x2_t *)(v200 + ((v201 >> 3) & 8));
      int8x16_t v217 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v228, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v227)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228->i64[0], 0), (uint64x2_t)vnegq_s64(v227)));
      if (v214 + (v201 & 0x3C) < 0x81)
      {
        int v218 = 0;
      }
      else
      {
        int v218 = 0;
        int8x16_t v217 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v227)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v228[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v227))), v217);
      }
      unint64_t v201 = v215;
    }
    else
    {
      int8x16_t v217 = 0uLL;
      int v218 = 1;
    }
    int32x2_t v229 = vzip1_s32(*(int32x2_t *)v210.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v210, v210, 8uLL));
    v230.i64[0] = v229.u32[0];
    v230.i64[1] = v229.u32[1];
    int64x2_t v231 = (int64x2_t)vshlq_u64((uint64x2_t)v217, (uint64x2_t)vnegq_s64(v230));
    *(int32x2_t *)v217.i8 = vmovn_s64((int64x2_t)v217);
    *(int32x2_t *)v231.i8 = vmovn_s64(v231);
    int8x16_t v232 = (int8x16_t)vzip1q_s32((int32x4_t)v217, (int32x4_t)v231);
    int16x8_t v233 = (int16x8_t)vshlq_u32((uint32x4_t)v232, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v209.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v209, v209, 8uLL)))));
    *(int16x4_t *)v232.i8 = vmovn_s32((int32x4_t)v232);
    *(int16x4_t *)v233.i8 = vmovn_s32((int32x4_t)v233);
    int8x16_t v234 = (int8x16_t)vzip1q_s16((int16x8_t)v232, v233);
    *(int8x8_t *)v234.i8 = vzip1_s8(vmovn_s16((int16x8_t)v234), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v234, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v208.i8, *(int8x8_t *)v204.i8))))));
    v232.i64[0] = 0x101010101010101;
    v232.i64[1] = 0x101010101010101;
    int8x16_t v235 = vshlq_s8(v232, v208);
    v232.i64[0] = -1;
    v232.i64[1] = -1;
    v235.i64[0] = vandq_s8(v234, vaddq_s8(v235, v232)).u64[0];
    int8x16_t v236 = vdupq_lane_s8(*(int8x8_t *)v235.i8, 0);
    int8x16_t v237 = vdupq_lane_s8(*(int8x8_t *)v235.i8, 1);
    int8x16_t v238 = vdupq_lane_s8(*(int8x8_t *)v235.i8, 2);
    int8x16_t v239 = vdupq_lane_s8(*(int8x8_t *)v235.i8, 3);
    int8x16_t v224 = vsubq_s8(v207, v236);
    int8x16_t v222 = vsubq_s8(v207, v237);
    int8x16_t v221 = vsubq_s8(v207, v238);
    int8x16_t v220 = vsubq_s8(v207, v239);
    int8x16_t v226 = vceqzq_s8(v236);
    int8x16_t v225 = vceqzq_s8(v237);
    int8x16_t v223 = vceqzq_s8(v238);
    int8x16_t v219 = vceqzq_s8(v239);
  }
  v240.i64[0] = 0x707070707070707;
  v240.i64[1] = 0x707070707070707;
  int8x16_t v241 = 0uLL;
  int8x16_t v242 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v204, v240), (int8x16_t)0, 0xFuLL), v207);
  int8x16_t v243 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v242, v242));
  int8x16_t v244 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v243, (int16x8_t)v243));
  unint64_t v245 = vpaddq_s32((int32x4_t)v244, (int32x4_t)v244).u64[0];
  v246.i64[0] = v245;
  v246.i64[1] = HIDWORD(v245);
  int64x2_t v247 = v246;
  unint64_t v248 = vaddvq_s64(v246);
  unint64_t v249 = v248 + v201;
  if (v248 <= 0x80 && v203 >= v249)
  {
    unint64_t v251 = v201 & 0x3F;
    int64x2_t v252 = vaddq_s64(vzip1q_s64((int64x2_t)0, v247), vdupq_n_s64(v251));
    uint8x16_t v253 = (int64x2_t *)(v200 + 8 * (v201 >> 6));
    int8x16_t v241 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v253, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v252)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v253->i64[0], 0), (uint64x2_t)vnegq_s64(v252)));
    if (v248 + v251 >= 0x81) {
      int8x16_t v241 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v253[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v252)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v253[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v252))), v241);
    }
    unint64_t v201 = v249;
  }
  else
  {
    int v218 = 1;
  }
  int8x16_t v254 = vandq_s8(v224, (int8x16_t)xmmword_242EA7380);
  int v255 = (a4 >> 5) & 3;
  if (v255 != 2)
  {
    unsigned int v259 = 0;
    unsigned int v257 = 0;
    unint64_t v260 = v201;
    goto LABEL_352;
  }
  unint64_t v256 = v201 + 4;
  if (v203 < v201 + 4)
  {
    unsigned int v257 = 0;
    unint64_t v256 = v201;
LABEL_351:
    unsigned int v259 = 0;
    int v218 = 1;
    unint64_t v260 = v256;
    goto LABEL_352;
  }
  uint64_t v261 = *(void *)(v200 + 8 * (v201 >> 6)) >> v201;
  if ((v201 & 0x3F) >= 0x3D) {
    v261 |= *(void *)(v200 + 8 * (v201 >> 6) + 8) << -(v201 & 0x3F);
  }
  unint64_t v260 = v201 + 8;
  unsigned int v257 = (int)(v261 << 28) >> 28;
  if (v203 < v201 + 8) {
    goto LABEL_351;
  }
  uint64_t v258 = *(void *)(v200 + 8 * (v256 >> 6)) >> v256;
  if ((v256 & 0x3F) >= 0x3D) {
    v258 |= *(void *)(v200 + 8 * (v256 >> 6) + 8) << -(v256 & 0x3F);
  }
  unsigned int v259 = (int)(v258 << 28) >> 28;
LABEL_352:
  int8x16_t v262 = vandq_s8(v222, (int8x16_t)xmmword_242EA7390);
  v254.i8[0] = 0;
  int8x16_t v263 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v254, v254));
  int8x16_t v264 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v263, (int16x8_t)v263));
  unint64_t v265 = vpaddq_s32((int32x4_t)v264, (int32x4_t)v264).u64[0];
  v266.i64[0] = v265;
  v266.i64[1] = HIDWORD(v265);
  int64x2_t v267 = v266;
  unint64_t v268 = vaddvq_s64(v266);
  unint64_t v269 = v268 + v260;
  int8x16_t v270 = 0uLL;
  if (v268 <= 0x80 && v203 >= v269)
  {
    unint64_t v273 = v260 & 0x3F;
    int64x2_t v274 = vaddq_s64(vzip1q_s64((int64x2_t)0, v267), vdupq_n_s64(v273));
    int8x16_t v275 = (int64x2_t *)(v200 + 8 * (v260 >> 6));
    int8x16_t v272 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v275, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v274)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v275->i64[0], 0), (uint64x2_t)vnegq_s64(v274)));
    if (v268 + v273 >= 0x81) {
      int8x16_t v272 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v275[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v274)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v275[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v274))), v272);
    }
    unint64_t v260 = v269;
  }
  else
  {
    int v218 = 1;
    int8x16_t v272 = 0uLL;
  }
  int8x16_t v276 = vandq_s8(v221, (int8x16_t)xmmword_242EA7390);
  int8x16_t v277 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v262, v262));
  int8x16_t v278 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v277, (int16x8_t)v277));
  unint64_t v279 = vpaddq_s32((int32x4_t)v278, (int32x4_t)v278).u64[0];
  v280.i64[0] = v279;
  v280.i64[1] = HIDWORD(v279);
  int64x2_t v281 = v280;
  unint64_t v282 = vaddvq_s64(v280);
  if (v282 < 0x81)
  {
    int32x2_t v283 = vzip1_s32(*(int32x2_t *)v278.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL));
    v284.i64[0] = v283.u32[0];
    v284.i64[1] = v283.u32[1];
    int64x2_t v285 = v284;
    int32x4_t v286 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v277.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v277, v277, 8uLL)));
    int16x8_t v287 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v262.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL)));
    unint64_t v288 = v282 + v260;
    if (v203 >= v282 + v260)
    {
      unint64_t v289 = v260 & 0x3F;
      int64x2_t v290 = vaddq_s64(vzip1q_s64((int64x2_t)0, v281), vdupq_n_s64(v289));
      unint64_t v291 = (int64x2_t *)(v200 + 8 * (v260 >> 6));
      int8x16_t v270 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v291, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v290)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v291->i64[0], 0), (uint64x2_t)vnegq_s64(v290)));
      if (v282 + v289 >= 0x81) {
        int8x16_t v270 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v291[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v290)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v291[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v290))), v270);
      }
      unint64_t v260 = v288;
    }
    else
    {
      int v218 = 1;
    }
    int64x2_t v292 = (int64x2_t)vshlq_u64((uint64x2_t)v270, (uint64x2_t)vnegq_s64(v285));
    *(int32x2_t *)v270.i8 = vmovn_s64((int64x2_t)v270);
    *(int32x2_t *)v292.i8 = vmovn_s64(v292);
    int16x8_t v293 = (int16x8_t)vzip1q_s32((int32x4_t)v270, (int32x4_t)v292);
    int16x8_t v294 = (int16x8_t)vshlq_u32((uint32x4_t)v293, (uint32x4_t)vnegq_s32(v286));
    *(int16x4_t *)v293.i8 = vmovn_s32((int32x4_t)v293);
    *(int16x4_t *)v294.i8 = vmovn_s32((int32x4_t)v294);
    int8x16_t v295 = (int8x16_t)vzip1q_s16(v293, v294);
    int8x16_t v296 = (int8x16_t)vshlq_u16((uint16x8_t)v295, (uint16x8_t)vnegq_s16(v287));
    *(int8x8_t *)v295.i8 = vmovn_s16((int16x8_t)v295);
    *(int8x8_t *)v296.i8 = vmovn_s16((int16x8_t)v296);
    int8x16_t v270 = vzip1q_s8(v295, v296);
  }
  else
  {
    int v218 = 1;
  }
  int8x16_t v297 = vandq_s8(v220, (int8x16_t)xmmword_242EA7390);
  int8x16_t v298 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v276, v276));
  int8x16_t v299 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v298, (int16x8_t)v298));
  unint64_t v300 = vpaddq_s32((int32x4_t)v299, (int32x4_t)v299).u64[0];
  v301.i64[0] = v300;
  v301.i64[1] = HIDWORD(v300);
  int64x2_t v302 = v301;
  unint64_t v303 = vaddvq_s64(v301);
  int8x16_t v304 = 0uLL;
  if (v303 <= 0x80)
  {
    int32x2_t v306 = vzip1_s32(*(int32x2_t *)v299.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v299, v299, 8uLL));
    v307.i64[0] = v306.u32[0];
    v307.i64[1] = v306.u32[1];
    int64x2_t v308 = v307;
    int32x4_t v309 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v298.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v298, v298, 8uLL)));
    int16x8_t v310 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v276.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v276, v276, 8uLL)));
    unint64_t v311 = v303 + v260;
    if (v203 >= v303 + v260)
    {
      unint64_t v313 = v260 & 0x3F;
      int64x2_t v314 = vaddq_s64(vzip1q_s64((int64x2_t)0, v302), vdupq_n_s64(v313));
      int64x2_t v315 = (int64x2_t *)(v200 + 8 * (v260 >> 6));
      int8x16_t v312 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v315, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v314)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v315->i64[0], 0), (uint64x2_t)vnegq_s64(v314)));
      if (v303 + v313 >= 0x81) {
        int8x16_t v312 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v315[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v314)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v315[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v314))), v312);
      }
      unint64_t v260 = v311;
    }
    else
    {
      int8x16_t v312 = 0uLL;
      int v218 = 1;
    }
    int64x2_t v316 = (int64x2_t)vshlq_u64((uint64x2_t)v312, (uint64x2_t)vnegq_s64(v308));
    *(int32x2_t *)v312.i8 = vmovn_s64((int64x2_t)v312);
    *(int32x2_t *)v316.i8 = vmovn_s64(v316);
    int16x8_t v317 = (int16x8_t)vzip1q_s32((int32x4_t)v312, (int32x4_t)v316);
    int16x8_t v318 = (int16x8_t)vshlq_u32((uint32x4_t)v317, (uint32x4_t)vnegq_s32(v309));
    *(int16x4_t *)v317.i8 = vmovn_s32((int32x4_t)v317);
    *(int16x4_t *)v318.i8 = vmovn_s32((int32x4_t)v318);
    int8x16_t v319 = (int8x16_t)vzip1q_s16(v317, v318);
    int8x16_t v320 = (int8x16_t)vshlq_u16((uint16x8_t)v319, (uint16x8_t)vnegq_s16(v310));
    *(int8x8_t *)v319.i8 = vmovn_s16((int16x8_t)v319);
    *(int8x8_t *)v320.i8 = vmovn_s16((int16x8_t)v320);
    int8x16_t v305 = vzip1q_s8(v319, v320);
  }
  else
  {
    int v218 = 1;
    int8x16_t v305 = 0uLL;
  }
  int8x16_t v321 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v297, v297));
  int8x16_t v322 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v321, (int16x8_t)v321));
  unint64_t v323 = vpaddq_s32((int32x4_t)v322, (int32x4_t)v322).u64[0];
  v324.i64[0] = v323;
  v324.i64[1] = HIDWORD(v323);
  int64x2_t v325 = v324;
  unint64_t v326 = vaddvq_s64(v324);
  if (v326 > 0x80) {
    goto LABEL_384;
  }
  if (v203 >= v326 + v260)
  {
    int64x2_t v327 = vaddq_s64(vzip1q_s64((int64x2_t)0, v325), vdupq_n_s64(v260 & 0x3F));
    int16x8_t v328 = (int64x2_t *)(v200 + 8 * (v260 >> 6));
    int8x16_t v304 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v328, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v327)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v328->i64[0], 0), (uint64x2_t)vnegq_s64(v327)));
    if (v326 + (v260 & 0x3F) >= 0x81) {
      int8x16_t v304 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v328[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v327)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v328[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v327))), v304);
    }
    v260 += v326;
  }
  else
  {
    int v218 = 1;
  }
  if (v218 || (uint64_t v189 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v189) - v260 >= 9))
  {
LABEL_384:
    uint64_t v189 = 0;
    v398 |= 255 << (8 * (&v398 & 7u));
    goto LABEL_385;
  }
  int32x2_t v330 = vzip1_s32(*(int32x2_t *)v244.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL));
  int32x2_t v331 = vzip1_s32(*(int32x2_t *)v264.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v264, v264, 8uLL));
  v332.i64[0] = v330.u32[0];
  v332.i64[1] = v330.u32[1];
  int64x2_t v333 = v332;
  v332.i64[0] = v331.u32[0];
  v332.i64[1] = v331.u32[1];
  int64x2_t v334 = (int64x2_t)vshlq_u64((uint64x2_t)v241, (uint64x2_t)vnegq_s64(v333));
  int64x2_t v335 = (int64x2_t)vshlq_u64((uint64x2_t)v272, (uint64x2_t)vnegq_s64(v332));
  *(int32x2_t *)v241.i8 = vmovn_s64((int64x2_t)v241);
  *(int32x2_t *)v334.i8 = vmovn_s64(v334);
  *(int32x2_t *)v272.i8 = vmovn_s64((int64x2_t)v272);
  *(int32x2_t *)v335.i8 = vmovn_s64(v335);
  int16x8_t v336 = (int16x8_t)vzip1q_s32((int32x4_t)v241, (int32x4_t)v334);
  int16x8_t v337 = (int16x8_t)vzip1q_s32((int32x4_t)v272, (int32x4_t)v335);
  int16x8_t v338 = (int16x8_t)vshlq_u32((uint32x4_t)v336, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v243.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v243, v243, 8uLL)))));
  int16x8_t v339 = (int16x8_t)vshlq_u32((uint32x4_t)v337, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v263.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v263, v263, 8uLL)))));
  *(int16x4_t *)v336.i8 = vmovn_s32((int32x4_t)v336);
  *(int16x4_t *)v338.i8 = vmovn_s32((int32x4_t)v338);
  *(int16x4_t *)v337.i8 = vmovn_s32((int32x4_t)v337);
  *(int16x4_t *)v339.i8 = vmovn_s32((int32x4_t)v339);
  int8x16_t v340 = (int8x16_t)vzip1q_s16(v336, v338);
  int8x16_t v341 = (int8x16_t)vzip1q_s16(v337, v339);
  int8x16_t v342 = (int8x16_t)vshlq_u16((uint16x8_t)v340, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v242.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v242, v242, 8uLL)))));
  int8x16_t v343 = (int8x16_t)vshlq_u16((uint16x8_t)v341, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v254.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v254, v254, 8uLL)))));
  *(int8x8_t *)v340.i8 = vmovn_s16((int16x8_t)v340);
  *(int8x8_t *)v342.i8 = vmovn_s16((int16x8_t)v342);
  *(int8x8_t *)v341.i8 = vmovn_s16((int16x8_t)v341);
  *(int8x8_t *)v343.i8 = vmovn_s16((int16x8_t)v343);
  v344.i64[0] = 0x808080808080808;
  v344.i64[1] = 0x808080808080808;
  v345.i64[0] = 0x808080808080808;
  v345.i64[1] = 0x808080808080808;
  unint64_t v346 = v202 >> 4;
  int8x16_t v347 = vzip1q_s8(v340, v342);
  v342.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v342.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v348 = vzip1q_s8(v341, v343);
  v343.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v343.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v349 = vsubq_s8(v345, v262);
  *(int32x2_t *)v337.i8 = vzip1_s32(*(int32x2_t *)v322.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v322, v322, 8uLL));
  v350.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v350.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v351.i64[0] = 0x808080808080808;
  v351.i64[1] = 0x808080808080808;
  int8x16_t v352 = vaddq_s8(v262, v343);
  v332.i64[0] = v337.u32[0];
  v332.i64[1] = v337.u32[1];
  int8x16_t v353 = vshlq_s8(vshlq_s8(v347, vsubq_s8(v344, v242)), vaddq_s8(v242, v342));
  int8x16_t v354 = vshlq_s8(vshlq_s8(v348, vsubq_s8(v345, v254)), vaddq_s8(v254, v343));
  int8x16_t v355 = vshlq_s8(vshlq_s8(v270, v349), v352);
  int8x16_t v356 = vshlq_s8(vshlq_s8(v305, vsubq_s8(v345, v276)), vaddq_s8(v276, v343));
  int64x2_t v357 = (int64x2_t)vshlq_u64((uint64x2_t)v304, (uint64x2_t)vnegq_s64(v332));
  *(int32x2_t *)v352.i8 = vmovn_s64((int64x2_t)v304);
  *(int32x2_t *)v357.i8 = vmovn_s64(v357);
  int16x8_t v358 = (int16x8_t)vzip1q_s32((int32x4_t)v352, (int32x4_t)v357);
  int16x8_t v359 = (int16x8_t)vshlq_u32((uint32x4_t)v358, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v321.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v321, v321, 8uLL)))));
  *(int16x4_t *)v358.i8 = vmovn_s32((int32x4_t)v358);
  *(int16x4_t *)v359.i8 = vmovn_s32((int32x4_t)v359);
  int8x16_t v360 = (int8x16_t)vzip1q_s16(v358, v359);
  int8x16_t v361 = (int8x16_t)vshlq_u16((uint16x8_t)v360, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v297.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v297, v297, 8uLL)))));
  *(int8x8_t *)v360.i8 = vmovn_s16((int16x8_t)v360);
  *(int8x8_t *)v361.i8 = vmovn_s16((int16x8_t)v361);
  int8x16_t v362 = vshlq_s8(vshlq_s8(vzip1q_s8(v360, v361), vsubq_s8(v351, v297)), vaddq_s8(v297, v350));
  if (v255 == 2)
  {
    v363.i64[0] = 0xFFFF0000FFFF0000;
    v363.i64[1] = 0xFFFF0000FFFF0000;
    int8x16_t v364 = vmlaq_s8(vandq_s8(vdupq_n_s8(v259), v363), vdupq_n_s8(v257), (int8x16_t)xmmword_242EA73A0);
    int8x16_t v354 = vaddq_s8(v354, v364);
    int8x16_t v355 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v259), v364), v355);
    int8x16_t v356 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v257), v364), v356);
    int8x16_t v362 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v257 + 2 * v259), v364), v362);
  }
  int8x8_t v365 = (int8x8_t)vdupq_n_s8(v346).u64[0];
  int8x16_t v366 = vaddq_s8(vandq_s8(v353, v226), v354);
  int8x16_t v367 = vdupq_lane_s8(*(int8x8_t *)v353.i8, 0);
  int8x16_t v368 = vsubq_s8(v366, vandq_s8(v367, v226));
  int8x16_t v369 = vsubq_s8(v355, vandq_s8(v367, v225));
  int8x16_t v370 = vsubq_s8(v356, vandq_s8(v367, v223));
  int8x16_t v371 = vsubq_s8(v362, vandq_s8(v367, v219));
  v372.i64[0] = 0x101010101010101;
  v372.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v206, v372)))
  {
    int8x16_t v373 = v368;
    v373.i8[0] = v368.i8[7];
    v373.i8[7] = v368.i8[0];
    int8x16_t v374 = vnegq_s8(vandq_s8(v204, v372));
    int8x16_t v375 = vbslq_s8(v374, v373, v368);
    int8x16_t v376 = vaddq_s8(v375, vandq_s8(vqtbl1q_s8(v375, (int8x16_t)xmmword_242EA73B0), v374));
    v368.i64[0] = vaddq_s8(v376, vandq_s8(vqtbl1q_s8(v376, (int8x16_t)xmmword_242EA73C0), v374)).u64[0];
    int8x16_t v377 = vaddq_s8(vandq_s8(vqtbl1q_s8(v369, (int8x16_t)xmmword_242EA73D0), v374), v369);
    v369.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v377, (int8x16_t)xmmword_242EA73E0), v374), v377).u64[0];
    int8x16_t v378 = vaddq_s8(vandq_s8(vqtbl1q_s8(v370, (int8x16_t)xmmword_242EA73F0), v374), v370);
    v370.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v378, (int8x16_t)xmmword_242EA7400), v374), v378).u64[0];
    int8x16_t v379 = vaddq_s8(vandq_s8(vqtbl1q_s8(v371, (int8x16_t)xmmword_242EA7410), v374), v371);
    v371.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v379, (int8x16_t)xmmword_242EA7420), v374), v379).u64[0];
  }
  int16x4_t v380 = (int16x4_t)vadd_s8(v365, *(int8x8_t *)v368.i8);
  int16x4_t v381 = (int16x4_t)vadd_s8(*(int8x8_t *)v370.i8, v365);
  *(int16x4_t *)a1 = vuzp1_s16(v380, v381);
  *(int16x4_t *)(a1 + a2) = vuzp2_s16(v380, v381);
  uint64x2_t v382 = (int16x4_t *)(a1 + 2 * a2);
  int16x4_t v383 = (int16x4_t)vadd_s8(*(int8x8_t *)v369.i8, v365);
  int16x4_t v384 = (int16x4_t)vadd_s8(*(int8x8_t *)v371.i8, v365);
  *uint64x2_t v382 = vuzp1_s16(v383, v384);
  *(int16x4_t *)((char *)v382 + a2) = vuzp2_s16(v383, v384);
  return v189;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, int8x8_t a14)
{
  uint64_t v18 = a3;
  uint64_t v20 = (int16x4_t *)result;
  if (a5 >= 8) {
    unsigned int v21 = 8;
  }
  else {
    unsigned int v21 = a5;
  }
  if (a6 >= 4) {
    unsigned int v22 = 4;
  }
  else {
    unsigned int v22 = a6;
  }
  if (v21 && v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(a3, a4, (int16x4_t *)result, a2, v21, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    *a4 = 0;
  }
  unint64_t v23 = a4 + 1;
  if (a5 <= 8) {
    int v24 = 8;
  }
  else {
    int v24 = a5;
  }
  unsigned int v25 = v24 - 8;
  if (v25 >= 8) {
    int v26 = 8;
  }
  else {
    int v26 = v25;
  }
  if (v26 && v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v18, v23, v20 + 1, a2, v26, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    *unint64_t v23 = 0;
  }
  uint64_t v27 = 4 * a2;
  uint64_t v28 = a4 + 2;
  if (a6 <= 4) {
    int v29 = 4;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 4;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v21 && v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v18, v28, (int16x4_t *)((char *)v20 + v27), a2, v21, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    unsigned int v32 = a4 + 3;
    if (!v26) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v28 = 0;
    unsigned int v32 = a4 + 3;
    if (!v26) {
      goto LABEL_34;
    }
  }
  if (v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v18, v32, (int16x4_t *)((char *)v20 + v27 + 8), a2, v26, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned int v32 = 0;
LABEL_35:
  uint64_t v33 = a4 + 4;
  if (a6 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a6;
  }
  unsigned int v35 = v34 - 8;
  if (v35 >= 4) {
    int v36 = 4;
  }
  else {
    int v36 = v35;
  }
  if (v21 && v36)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v18, v33, &v20[a2], a2, v21, v36, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    uint64_t v37 = a4 + 5;
    if (!v26) {
      goto LABEL_48;
    }
  }
  else
  {
    *uint64_t v33 = 0;
    uint64_t v37 = a4 + 5;
    if (!v26) {
      goto LABEL_48;
    }
  }
  if (v36)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v18, v37, &v20[a2 + 1], a2, v26, v36, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    goto LABEL_49;
  }
LABEL_48:
  *uint64_t v37 = 0;
LABEL_49:
  unsigned int v38 = a4 + 6;
  if (a6 <= 12) {
    int v39 = 12;
  }
  else {
    int v39 = a6;
  }
  unsigned int v40 = v39 - 12;
  if (v40 >= 4) {
    int v41 = 4;
  }
  else {
    int v41 = v40;
  }
  if (v21 && v41)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v18, v38, (int16x4_t *)((char *)v20 + 12 * a2), a2, v21, v41, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int v42 = a4 + 7;
    if (!v26) {
      goto LABEL_64;
    }
  }
  else
  {
    *unsigned int v38 = 0;
    int v42 = a4 + 7;
    if (!v26)
    {
LABEL_64:
      *int v42 = 0;
      return result;
    }
  }
  if (!v41) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v18, v42, (int16x4_t *)((char *)v20 + 12 * a2 + 8), a2, v26, v41, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressMacroblock(uint64_t a1, int16x4_t *a2, unsigned __int8 *a3, int a4)
{
  int v7 = (int16x4_t *)((char *)a2
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1, 16, a2, *a3, a4));
  int v8 = (int16x4_t *)((char *)v7
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 8, 16, v7, a3[1], a4));
  int v9 = (int16x4_t *)((char *)v8
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 64, 16, v8, a3[2], a4));
  int v10 = (int16x4_t *)((char *)v9
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 72, 16, v9, a3[3], a4));
  int v11 = (int16x4_t *)((char *)v10
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 128, 16, v10, a3[4], a4));
  int v12 = (int16x4_t *)((char *)v11
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 136, 16, v11, a3[5], a4));
  char v13 = (int16x4_t *)((char *)v12
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 192, 16, v12, a3[6], a4));
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 200, 16, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int16x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, int8x8_t a14)
{
  int16x4_t v16 = *(int16x4_t *)((char *)a3 + a4);
  *(int16x4_t *)v17.i8 = vzip1_s16(*a3, v16);
  *(int16x4_t *)v18.i8 = vzip2_s16(*a3, v16);
  v17.i64[1] = v17.i64[0];
  v18.i64[1] = v18.i64[0];
  unsigned int v19 = (int16x4_t *)((char *)a3 + 2 * a4);
  int8x8_t v20 = (int8x8_t)*v19;
  int16x4_t v21 = *(int16x4_t *)((char *)v19 + a4);
  *(int16x4_t *)v22.i8 = vzip1_s16(*v19, v21);
  *(int16x4_t *)v23.i8 = vzip2_s16(*v19, v21);
  v22.i64[1] = v22.i64[0];
  v23.i64[1] = v23.i64[0];
  int8x16_t v24 = vdupq_lane_s8(*(int8x8_t *)v17.i8, 0);
  int8x16_t v25 = vsubq_s8(v17, v24);
  int8x16_t v26 = vsubq_s8(v22, v24);
  int8x16_t v27 = vsubq_s8(v18, v24);
  int8x16_t v28 = vsubq_s8(v23, v24);
  v20.i8[0] = vmaxvq_s8(v25);
  v21.i8[0] = vminvq_s8(v25);
  int8x16_t v29 = vdupq_lane_s8(v20, 0);
  int8x16_t v30 = vdupq_lane_s8((int8x8_t)v21, 0);
  v31.i64[0] = 0x8080808080808080;
  v31.i64[1] = 0x8080808080808080;
  int8x16_t v32 = vmaxq_s8(v29, v31);
  v33.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v33.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v34 = vminq_s8(v30, v33);
  int8x16_t v35 = vzip1q_s8(v29, v30);
  int8x16_t v36 = vceqzq_s8(v35);
  int8x16_t v37 = vclsq_s8(v35);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vsubq_s8(v38, v37);
  int8x16_t v40 = vbicq_s8(v39, v36);
  v39.i8[0] = vmaxvq_s8(v26);
  a14.i8[0] = vminvq_s8(v26);
  int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v39.i8, 0);
  int8x16_t v42 = vdupq_lane_s8(a14, 0);
  int8x16_t v43 = vpmaxq_s8(v40, v40);
  int8x16_t v44 = vmaxq_s8(v32, v41);
  int8x16_t v45 = vminq_s8(v34, v42);
  int8x16_t v46 = vzip1q_s8(v41, v42);
  int8x16_t v47 = vceqzq_s8(v46);
  int8x16_t v48 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v46)), v47);
  int8x16_t v49 = vpmaxq_s8(v48, v48);
  v47.i8[0] = vmaxvq_s8(v27);
  int8x16_t v50 = vdupq_lane_s8(*(int8x8_t *)v47.i8, 0);
  v14.i8[0] = vminvq_s8(v27);
  int8x16_t v51 = vdupq_lane_s8(v14, 0);
  int8x16_t v52 = vmaxq_s8(v44, v50);
  int8x16_t v53 = vminq_s8(v45, v51);
  int8x16_t v54 = vzip1q_s8(v50, v51);
  int8x16_t v55 = vceqzq_s8(v54);
  int8x16_t v56 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v54)), v55);
  int8x16_t v57 = vpmaxq_s8(v56, v56);
  v55.i8[0] = vmaxvq_s8(v28);
  v15.i8[0] = vminvq_s8(v28);
  int8x16_t v58 = vdupq_lane_s8(*(int8x8_t *)v55.i8, 0);
  int8x16_t v59 = vdupq_lane_s8(v15, 0);
  int8x16_t v60 = vmaxq_s8(v52, v58);
  int8x16_t v61 = vminq_s8(v53, v59);
  int8x16_t v62 = vzip1q_s8(v58, v59);
  int8x16_t v63 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v62)), vceqzq_s8(v62));
  int8x16_t v64 = vpmaxq_s8(v63, v63);
  int8x16_t v65 = vmaxq_s8(vmaxq_s8(v43, v49), vmaxq_s8(v57, v64));
  int8x16_t v66 = vclzq_s8(vsubq_s8(v60, v61));
  int8x16_t v67 = vsubq_s8(v38, v66);
  int8x16_t v68 = vcgtq_s8(v65, v67);
  int8x16_t v69 = vbslq_s8(v68, v67, v65);
  if (vmaxvq_s8(v69))
  {
    char v70 = 0;
    unint64_t v71 = 0;
    int8x8_t v72 = 0;
    v73.i64[0] = -1;
    v73.i64[1] = -1;
    v74.i64[0] = 0x707070707070707;
    v74.i64[1] = 0x707070707070707;
    int8x16_t v75 = vandq_s8(vsubq_s8(vshlq_s8(v73, vsubq_s8(v74, v66)), v61), v68);
    int8x16_t v76 = vandq_s8(v68, v38);
    v77.i64[0] = 0x303030303030303;
    v77.i64[1] = 0x303030303030303;
    int8x16_t v78 = vorrq_s8(v76, vandq_s8(vceqzq_s8(v69), v77));
    int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v43), v77), (int8x16_t)0);
    int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v49), v77), (int8x16_t)0);
    int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v57), v77), (int8x16_t)0);
    int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v64), v77), (int8x16_t)0);
    int8x16_t v83 = vsubq_s8(v69, v79);
    int8x16_t v84 = vsubq_s8(v69, v80);
    int8x16_t v85 = vsubq_s8(v69, v81);
    int8x16_t v86 = vsubq_s8(v69, v82);
    int8x16_t v87 = vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)));
    v80.i64[0] = 0x404040404040404;
    v80.i64[1] = 0x404040404040404;
    int8x16_t v88 = vorrq_s8(vbicq_s8(v80, v87), v78);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v401 = v75;
      v89.i32[0] = v17.u8[2];
      v89.i32[1] = v17.u8[1];
      int32x2_t v90 = vshl_n_s32(vsub_s32(v89, vdup_n_s32(v17.u8[0])), 0x1CuLL);
      int v91 = v90.i32[1] >> 28;
      int8x8_t v92 = (int8x8_t)vshl_s32(v90, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v93 = v90.i32[0];
      v94.i64[0] = 0xFFFF0000FFFF0000;
      v94.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v95 = vmlaq_s8(vandq_s8(vdupq_n_s8(v90.i32[0] >> 28), v94), vdupq_n_s8(v90.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v96 = vsubq_s8(v25, v95);
      int8x16_t v97 = v83;
      int8x16_t v98 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v92.i32[0]), v26), v95);
      int8x16_t v99 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v92.i32[1]), v27), v95);
      int8x16_t v100 = vaddq_s8(vdupq_n_s8(-v92.i32[0] - v92.i32[1]), v28);
      int8x16_t v101 = vsubq_s8(v100, v95);
      v100.i8[0] = vmaxvq_s8(v96);
      int8x16_t v394 = v98;
      int8x16_t v396 = v96;
      v92.i8[0] = vminvq_s8(v96);
      int8x16_t v102 = vdupq_lane_s8(*(int8x8_t *)v100.i8, 0);
      int8x16_t v103 = vdupq_lane_s8(v92, 0);
      v95.i64[0] = 0x8080808080808080;
      v95.i64[1] = 0x8080808080808080;
      int8x16_t v104 = vmaxq_s8(v102, v95);
      v96.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v96.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v105 = vminq_s8(v103, v96);
      int8x16_t v106 = vzip1q_s8(v102, v103);
      int8x16_t v107 = vceqzq_s8(v106);
      v108.i64[0] = 0x808080808080808;
      v108.i64[1] = 0x808080808080808;
      int8x16_t v109 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v106)), v107);
      int8x16_t v110 = vpmaxq_s8(v109, v109);
      v107.i8[0] = vmaxvq_s8(v98);
      v98.i8[0] = vminvq_s8(v98);
      int8x16_t v111 = vdupq_lane_s8(*(int8x8_t *)v107.i8, 0);
      int8x16_t v112 = vdupq_lane_s8(*(int8x8_t *)v98.i8, 0);
      int8x16_t v113 = vmaxq_s8(v104, v111);
      int8x16_t v114 = vminq_s8(v105, v112);
      int8x16_t v115 = vzip1q_s8(v111, v112);
      int8x16_t v116 = vceqzq_s8(v115);
      int8x16_t v117 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v115)), v116);
      int8x16_t v118 = vpmaxq_s8(v117, v117);
      v116.i8[0] = vmaxvq_s8(v99);
      v72.i8[0] = vminvq_s8(v99);
      int8x16_t v119 = vdupq_lane_s8(*(int8x8_t *)v116.i8, 0);
      int8x16_t v120 = vdupq_lane_s8(v72, 0);
      int8x16_t v121 = vmaxq_s8(v113, v119);
      int8x16_t v122 = vminq_s8(v114, v120);
      int8x16_t v123 = vzip1q_s8(v119, v120);
      int8x16_t v124 = vceqzq_s8(v123);
      int8x16_t v125 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v123)), v124);
      int8x16_t v126 = vpmaxq_s8(v125, v125);
      v124.i8[0] = vmaxvq_s8(v101);
      v75.i8[0] = vminvq_s8(v101);
      int8x16_t v127 = vdupq_lane_s8(*(int8x8_t *)v124.i8, 0);
      int8x16_t v128 = vdupq_lane_s8(*(int8x8_t *)v75.i8, 0);
      int8x16_t v129 = vmaxq_s8(v121, v127);
      int8x16_t v398 = v27;
      int8x16_t v399 = v28;
      int8x16_t v130 = vminq_s8(v122, v128);
      int8x16_t v131 = vzip1q_s8(v127, v128);
      int8x16_t v132 = vbicq_s8(vsubq_s8(v108, vclsq_s8(v131)), vceqzq_s8(v131));
      int8x16_t v133 = vpmaxq_s8(v132, v132);
      int8x16_t v134 = vmaxq_s8(vmaxq_s8(v110, v118), vmaxq_s8(v126, v133));
      int8x16_t v135 = v84;
      int8x16_t v136 = vclzq_s8(vsubq_s8(v129, v130));
      int8x16_t v137 = vsubq_s8(v108, v136);
      int8x16_t v138 = vcgtq_s8(v134, v137);
      int8x16_t v139 = vbslq_s8(v138, v137, v134);
      v140.i64[0] = 0x202020202020202;
      v140.i64[1] = 0x202020202020202;
      v134.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v134.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v141 = vbslq_s8(v138, v134, v140);
      v134.i64[0] = 0x101010101010101;
      v134.i64[1] = 0x101010101010101;
      int8x16_t v142 = vmaxq_s8(v139, v134);
      v134.i64[0] = 0x303030303030303;
      v134.i64[1] = 0x303030303030303;
      int8x16_t v143 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v110), v134), (int8x16_t)0);
      int8x16_t v144 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v118), v134), (int8x16_t)0);
      int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v126), v134), (int8x16_t)0);
      int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v133), v134), (int8x16_t)0);
      int8x16_t v147 = vsubq_s8(v142, v143);
      int8x16_t v148 = vsubq_s8(v142, v144);
      int8x16_t v149 = vsubq_s8(v142, v145);
      int8x16_t v150 = vsubq_s8(v142, v146);
      int8x16_t v151 = vceqq_s8(vaddq_s8(v146, v145), vnegq_s8(vaddq_s8(v143, v144)));
      v143.i64[0] = 0x404040404040404;
      v143.i64[1] = 0x404040404040404;
      int8x16_t v152 = vorrq_s8(vbicq_s8(v143, v151), v141);
      v153.i64[0] = 0x8000800080008;
      v153.i64[1] = 0x8000800080008;
      uint16x8_t v154 = vmovl_u8(*(uint8x8_t *)v88.i8);
      unsigned long long v155 = *(_OWORD *)&v154 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
      int8x16_t v400 = (int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8);
      unsigned long long v156 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v88.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
      unsigned long long v157 = *(_OWORD *)&v154 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
      v158.i64[0] = 0x2000200020002;
      v158.i64[1] = 0x2000200020002;
      int16x8_t v159 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v85.i8, *(int8x8_t *)v135.i8), *(int8x8_t *)v86.i8), 3uLL);
      int8x16_t v160 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v400, (int8x16_t)vceqzq_s16((int16x8_t)v155)), (int16x8_t)v156), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)v157, v158), v153)), *(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707), v159), vaddq_s16(vmlal_s8((int16x8_t)vaddl_u8((uint8x8_t)vbic_s8(
                                                                                *(int8x8_t *)v142.i8,
                                                                                (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v152.i8)), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v152.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v147.i8, (int8x8_t)0x707070707070707), vaddq_s16(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v149.i8, *(int8x8_t *)v148.i8), *(int8x8_t *)v150.i8), 3uLL), (int16x8_t)v153)))), 0);
      v158.i16[0] = vaddlvq_s8(v160);
      unint64_t v71 = v91 & 0xF | HIBYTE(v93);
      int v161 = v158.u16[0];
      if (v158.i16[0])
      {
        v162.i64[0] = 0x707070707070707;
        v162.i64[1] = 0x707070707070707;
        int8x16_t v163 = vsubq_s8(v162, v136);
        v164.i64[0] = -1;
        v164.i64[1] = -1;
        int8x16_t v165 = vandq_s8(vsubq_s8(vshlq_s8(v164, v163), v130), v138);
        int8x16_t v392 = vbslq_s8(v160, v396, v25);
        int8x16_t v397 = vbslq_s8(v160, v394, v26);
        int8x16_t v27 = vbslq_s8(v160, v99, v398);
        int8x16_t v97 = vbslq_s8(v160, v147, v97);
        int8x16_t v401 = vbslq_s8(v160, v165, v401);
        int8x16_t v69 = vbslq_s8(v160, v142, v69);
        int8x16_t v88 = vbslq_s8(v160, v152, v88);
        uint16x8_t v166 = vmovl_u8(*(uint8x8_t *)v88.i8);
        unsigned long long v155 = *(_OWORD *)&v166 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8);
        int8x16_t v400 = (int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8);
        unsigned long long v156 = *(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v88.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9);
        unsigned long long v157 = *(_OWORD *)&v166 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3);
        int16x8_t v167 = vmull_s8(*(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707);
        int8x16_t v393 = vbslq_s8(v160, v149, v85);
        int8x16_t v395 = vbslq_s8(v160, v150, v86);
        int8x16_t v391 = vbslq_s8(v160, v148, v135);
        int16x8_t v159 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v393.i8, *(int8x8_t *)v391.i8), *(int8x8_t *)v395.i8), 3uLL);
        int8x16_t v28 = vbslq_s8(v160, v101, v399);
      }
      else
      {
        int8x16_t v391 = v135;
        int8x16_t v392 = v25;
        int8x16_t v393 = v85;
        int8x16_t v395 = v86;
        int8x16_t v397 = v26;
        int16x8_t v167 = vmull_s8(*(int8x8_t *)v97.i8, (int8x8_t)0x707070707070707);
        int8x16_t v27 = v398;
        int8x16_t v28 = v399;
      }
      int8x16_t v83 = v97;
      int8x16_t v169 = v22;
      v169.i8[7] = v17.i8[7];
      int8x16_t v170 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7430));
      int8x16_t v171 = vsubq_s8(v22, vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7440));
      int8x16_t v172 = v18;
      v172.i8[7] = v17.i8[7];
      int8x16_t v173 = vsubq_s8(v18, vqtbl1q_s8(v172, (int8x16_t)xmmword_242EA7450));
      int8x16_t v174 = v23;
      v174.i8[7] = v17.i8[7];
      int8x16_t v175 = vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7460);
      int8x16_t v176 = vsubq_s8(v23, v175);
      int8x16_t v177 = v170;
      v177.i8[0] = v170.i8[7];
      v177.i8[7] = v170.i8[0];
      v170.i8[0] = vmaxvq_s8(v177);
      v175.i8[0] = vminvq_s8(v177);
      int8x16_t v178 = vdupq_lane_s8(*(int8x8_t *)v170.i8, 0);
      int8x16_t v179 = vdupq_lane_s8(*(int8x8_t *)v175.i8, 0);
      v180.i64[0] = 0x8080808080808080;
      v180.i64[1] = 0x8080808080808080;
      int8x16_t v181 = vmaxq_s8(v178, v180);
      v182.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v182.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v183 = vminq_s8(v179, v182);
      int8x16_t v184 = vzip1q_s8(v178, v179);
      int8x16_t v185 = vceqzq_s8(v184);
      v182.i64[0] = 0x808080808080808;
      v182.i64[1] = 0x808080808080808;
      int8x16_t v186 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v184)), v185);
      int8x16_t v187 = vpmaxq_s8(v186, v186);
      v186.i8[0] = vmaxvq_s8(v171);
      v185.i8[0] = vminvq_s8(v171);
      int8x16_t v188 = vdupq_lane_s8(*(int8x8_t *)v186.i8, 0);
      int8x16_t v189 = vdupq_lane_s8(*(int8x8_t *)v185.i8, 0);
      int8x16_t v190 = vmaxq_s8(v181, v188);
      int8x16_t v191 = vminq_s8(v183, v189);
      int8x16_t v192 = vzip1q_s8(v188, v189);
      int8x16_t v193 = vceqzq_s8(v192);
      int8x16_t v194 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v192)), v193);
      int8x16_t v195 = vpmaxq_s8(v194, v194);
      v194.i8[0] = vmaxvq_s8(v173);
      v193.i8[0] = vminvq_s8(v173);
      int8x16_t v196 = vdupq_lane_s8(*(int8x8_t *)v194.i8, 0);
      int8x16_t v197 = vdupq_lane_s8(*(int8x8_t *)v193.i8, 0);
      int8x16_t v198 = vmaxq_s8(v190, v196);
      int8x16_t v199 = vminq_s8(v191, v197);
      int8x16_t v200 = vzip1q_s8(v196, v197);
      int8x16_t v201 = vceqzq_s8(v200);
      int8x16_t v202 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v200)), v201);
      int8x16_t v203 = vpmaxq_s8(v202, v202);
      v202.i8[0] = vmaxvq_s8(v176);
      v201.i8[0] = vminvq_s8(v176);
      int8x16_t v204 = vdupq_lane_s8(*(int8x8_t *)v202.i8, 0);
      int8x16_t v205 = vdupq_lane_s8(*(int8x8_t *)v201.i8, 0);
      int8x16_t v206 = vmaxq_s8(v198, v204);
      int8x16_t v207 = vminq_s8(v199, v205);
      int8x16_t v208 = vzip1q_s8(v204, v205);
      int8x16_t v209 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v208)), vceqzq_s8(v208));
      int8x16_t v210 = vpmaxq_s8(v209, v209);
      int8x16_t v211 = vmaxq_s8(vmaxq_s8(v187, v195), vmaxq_s8(v203, v210));
      int8x16_t v212 = vclzq_s8(vsubq_s8(v206, v207));
      int8x16_t v213 = vsubq_s8(v182, v212);
      int8x16_t v214 = vcgtq_s8(v211, v213);
      int8x16_t v215 = vbslq_s8(v214, v213, v211);
      v213.i64[0] = 0x909090909090909;
      v213.i64[1] = 0x909090909090909;
      v182.i64[0] = 0x202020202020202;
      v182.i64[1] = 0x202020202020202;
      int8x16_t v216 = vorrq_s8(vandq_s8(vceqzq_s8(v215), v182), vsubq_s8(vandq_s8(v214, v213), vmvnq_s8(v214)));
      v217.i64[0] = 0x303030303030303;
      v217.i64[1] = 0x303030303030303;
      int8x16_t v218 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v187), v217), (int8x16_t)0);
      int8x16_t v219 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v195), v217), (int8x16_t)0);
      int8x16_t v220 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v203), v217), (int8x16_t)0);
      int8x16_t v221 = vmaxq_s8(vminq_s8(vsubq_s8(v215, v210), v217), (int8x16_t)0);
      int8x16_t v222 = vsubq_s8(v215, v218);
      int8x16_t v223 = vsubq_s8(v215, v219);
      int8x16_t v224 = vsubq_s8(v215, v220);
      int8x16_t v225 = vsubq_s8(v215, v221);
      v182.i64[0] = 0x404040404040404;
      v182.i64[1] = 0x404040404040404;
      int8x16_t v226 = vorrq_s8(vbicq_s8(v182, vceqq_s8(vaddq_s8(v221, v220), vnegq_s8(vaddq_s8(v218, v219)))), v216);
      v182.i64[0] = 0x2000200020002;
      v182.i64[1] = 0x2000200020002;
      int8x16_t v227 = (int8x16_t)vceqq_s16((int16x8_t)v157, (int16x8_t)v182);
      v182.i64[0] = 0x8000800080008;
      v182.i64[1] = 0x8000800080008;
      int8x16_t v228 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v400, (int8x16_t)vceqzq_s16((int16x8_t)v155)), (int16x8_t)v156), vaddq_s16((int16x8_t)vandq_s8(v227, v182), v167)), v159), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v215.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v226.i8))),
                                                                   (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v226.i8, *(int8x8_t *)v226.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v222.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v224.i8, *(int8x8_t *)v223.i8), *(int8x8_t *)v225.i8), 3uLL)))), 0);
      v216.i16[0] = vaddlvq_s8(v228);
      int v229 = v216.u16[0];
      if (v216.i16[0])
      {
        v230.i64[0] = 0x707070707070707;
        v230.i64[1] = 0x707070707070707;
        int8x16_t v231 = vsubq_s8(v230, v212);
        v230.i64[0] = -1;
        v230.i64[1] = -1;
        int8x16_t v232 = vandq_s8(vsubq_s8(vshlq_s8(v230, v231), v207), v214);
        v24.i8[0] = vbslq_s8(v228, vextq_s8(v17, v17, 0xFuLL), v24).u8[0];
        int8x16_t v25 = vbslq_s8(v228, v177, v392);
        int8x16_t v26 = vbslq_s8(v228, v171, v397);
        int8x16_t v27 = vbslq_s8(v228, v173, v27);
        int8x16_t v28 = vbslq_s8(v228, v176, v28);
        int8x16_t v83 = vbslq_s8(v228, v222, v83);
        int8x16_t v84 = vbslq_s8(v228, v223, v391);
        int8x16_t v85 = vbslq_s8(v228, v224, v393);
        int8x16_t v86 = vbslq_s8(v228, v225, v395);
        int8x16_t v75 = vbslq_s8(v228, v232, v401);
        int8x16_t v69 = vbslq_s8(v228, v215, v69);
        int8x16_t v88 = vbslq_s8(v228, v226, v88);
      }
      else
      {
        int8x16_t v75 = v401;
        int8x16_t v86 = v395;
        int8x16_t v26 = v397;
        int8x16_t v25 = v392;
        int8x16_t v85 = v393;
        int8x16_t v84 = v391;
      }
      if (v161) {
        BOOL v233 = v229 == 0;
      }
      else {
        BOOL v233 = 0;
      }
      char v70 = v233;
    }
    int8x16_t v234 = (int8x16_t)vmovl_s8(*(int8x8_t *)v88.i8);
    v235.i64[0] = 0x8000800080008;
    v235.i64[1] = 0x8000800080008;
    v236.i64[0] = 0x3000300030003;
    v236.i64[1] = 0x3000300030003;
    v237.i64[0] = 0x2000200020002;
    v237.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v69.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v234, v235))).u16[0]+ ((2 * v234.i16[0]) & 8)+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v234, v236), v237), v235).u16[0]- v83.i8[0]+ 8 * v83.i8[0]+ 8 * vaddq_s8(v85, vaddq_s8(v84, v86)).i8[0])- 117) <= 0xFFFFFFFFFFFFFF77)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 16;
    }
    else
    {
      int8x16_t v238 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v239 = 8 * (a1 & 7);
      if (v239) {
        uint64_t v240 = *v238 & ~(-1 << v239);
      }
      else {
        uint64_t v240 = 0;
      }
      int8x16_t v241 = vextq_s8(v83, (int8x16_t)0, 8uLL);
      int8x16_t v242 = vextq_s8(v84, (int8x16_t)0, 8uLL);
      int8x16_t v243 = vextq_s8(v85, (int8x16_t)0, 8uLL);
      int8x16_t v244 = vextq_s8(v86, (int8x16_t)0, 8uLL);
      if (v69.i8[0]) {
        int v245 = (16 * v69.i8[0] + 112) & 0x70;
      }
      else {
        int v245 = 0;
      }
      *a2 = 32 * v88.i8[0];
      unint64_t v246 = (v245 & 0xFFFF807F | v88.i8[0] & 8 | ((unint64_t)v24.u8[0] << 7)) >> 3;
      unint64_t v247 = (v246 << v239) | v240;
      if (v239 >= 0x34)
      {
        *int8x16_t v238 = v247;
        unint64_t v247 = v246 >> (-8 * (a1 & 7u));
      }
      int8x16_t v248 = vdupq_lane_s8(*(int8x8_t *)v69.i8, 0);
      unint64_t v249 = v239 + 12;
      v250.i64[0] = 0x202020202020202;
      v250.i64[1] = 0x202020202020202;
      int8x16_t v251 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v234.i8, (int8x8_t)0x4000400040004)))), v250);
      v250.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v250.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v252.i64[0] = -1;
      v252.i64[1] = -1;
      uint8x16_t v253 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v252, (uint8x16_t)vorrq_s8(v251, v250)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v248, vzip1q_s8(v241, v242)), (int16x8_t)vsubq_s8(v248, vzip1q_s8(v243, v244))).u32[0]);
      int16x8_t v254 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v251.i8);
      uint16x8_t v255 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v253.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v254)), (int16x8_t)vmovl_high_u8(v253));
      uint16x8_t v256 = (uint16x8_t)vpaddq_s16(v254, (int16x8_t)vmovl_high_u8((uint8x16_t)v251));
      int32x4_t v257 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v256.i8);
      int32x4_t v258 = (int32x4_t)vmovl_high_u16(v256);
      int32x4_t v259 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v255.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v257)), (int32x4_t)vshlq_u32(vmovl_high_u16(v255), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v258)));
      int32x4_t v260 = vpaddq_s32(v257, v258);
      v261.i64[0] = v259.u32[0];
      v261.i64[1] = v259.u32[1];
      uint64x2_t v262 = (uint64x2_t)v261;
      v261.i64[0] = v259.u32[2];
      v261.i64[1] = v259.u32[3];
      uint64x2_t v263 = (uint64x2_t)v261;
      v261.i64[0] = v260.u32[0];
      v261.i64[1] = v260.u32[1];
      int64x2_t v264 = v261;
      v261.i64[0] = v260.u32[2];
      v261.i64[1] = v260.u32[3];
      int64x2_t v265 = vpaddq_s64((int64x2_t)vshlq_u64(v262, (uint64x2_t)vzip1q_s64((int64x2_t)0, v264)), (int64x2_t)vshlq_u64(v263, (uint64x2_t)vzip1q_s64((int64x2_t)0, v261)));
      int64x2_t v266 = vpaddq_s64(v264, v261);
      uint64_t v267 = (v239 + 12) & 0x3C;
      unint64_t v268 = (v265.i64[0] << v267) | v247;
      if ((unint64_t)(v266.i64[0] + v267) >= 0x40)
      {
        *(void *)((char *)v238 + ((v249 >> 3) & 8)) = v268;
        unint64_t v268 = (unint64_t)v265.i64[0] >> -(char)v267;
      }
      unint64_t v269 = v266.i64[0] + v249;
      unint64_t v270 = v268 | (v265.i64[1] << v269);
      if ((v269 & 0x3F) + v266.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v269 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v270;
        unint64_t v270 = (unint64_t)v265.i64[1] >> -(v269 & 0x3F);
        if ((v269 & 0x3F) == 0) {
          unint64_t v270 = 0;
        }
      }
      int8x16_t v271 = vceqq_s8(v69, v83);
      unint64_t v272 = v269 + v266.i64[1];
      v273.i64[0] = 0x808080808080808;
      v273.i64[1] = 0x808080808080808;
      v274.i64[0] = -1;
      v274.i64[1] = -1;
      int8x16_t v275 = vandq_s8(vextq_s8(vtstq_s8(v88, v273), (int8x16_t)0, 0xFuLL), v69);
      v276.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v276.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v277 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v274, (uint8x16_t)vaddq_s8(v275, v276)), v75);
      int16x8_t v278 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v275.i8);
      uint16x8_t v279 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v277.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v278)), (int16x8_t)vmovl_high_u8(v277));
      uint16x8_t v280 = (uint16x8_t)vpaddq_s16(v278, (int16x8_t)vmovl_high_u8((uint8x16_t)v275));
      int32x4_t v281 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v280.i8);
      int32x4_t v282 = (int32x4_t)vmovl_high_u16(v280);
      int32x4_t v283 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v279.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v281)), (int32x4_t)vshlq_u32(vmovl_high_u16(v279), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v282)));
      int32x4_t v284 = vpaddq_s32(v281, v282);
      v285.i64[0] = v283.u32[0];
      v285.i64[1] = v283.u32[1];
      uint64x2_t v286 = (uint64x2_t)v285;
      v285.i64[0] = v283.u32[2];
      v285.i64[1] = v283.u32[3];
      uint64x2_t v287 = (uint64x2_t)v285;
      v285.i64[0] = v284.u32[0];
      v285.i64[1] = v284.u32[1];
      int64x2_t v288 = v285;
      v285.i64[0] = v284.u32[2];
      v285.i64[1] = v284.u32[3];
      int64x2_t v289 = vpaddq_s64((int64x2_t)vshlq_u64(v286, (uint64x2_t)vzip1q_s64((int64x2_t)0, v288)), (int64x2_t)vshlq_u64(v287, (uint64x2_t)vzip1q_s64((int64x2_t)0, v285)));
      int64x2_t v290 = vpaddq_s64(v288, v285);
      unint64_t v291 = (v289.i64[0] << v272) | v270;
      if (v290.i64[0] + (v272 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v272 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
        unint64_t v291 = (unint64_t)v289.i64[0] >> -(v272 & 0x3F);
        if ((v272 & 0x3F) == 0) {
          unint64_t v291 = 0;
        }
      }
      int8x16_t v292 = vandq_s8(v75, v271);
      unint64_t v293 = v290.i64[0] + v272;
      unint64_t v294 = v291 | (v289.i64[1] << v293);
      if ((v293 & 0x3F) + v290.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
        unint64_t v294 = (unint64_t)v289.i64[1] >> -(v293 & 0x3F);
        if ((v293 & 0x3F) == 0) {
          unint64_t v294 = 0;
        }
      }
      int8x16_t v295 = vceqq_s8(v69, v84);
      int8x16_t v296 = vaddq_s8(v292, v25);
      unint64_t v297 = v293 + v290.i64[1];
      if (v70)
      {
        v294 |= v71 << v297;
        if ((v297 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v238 + ((v297 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
          unint64_t v294 = v71 >> -(v297 & 0x3F);
        }
        v297 += 8;
      }
      int8x16_t v298 = vandq_s8(v75, v295);
      int16x8_t v299 = (int16x8_t)vmovl_high_u8((uint8x16_t)v241);
      v241.i8[0] = 0;
      v300.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v300.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v301.i64[0] = -1;
      v301.i64[1] = -1;
      uint8x16_t v302 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v301, (uint8x16_t)vaddq_s8(v241, v300)), v296);
      int16x8_t v303 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v241.i8);
      uint16x8_t v304 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v302.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v303)), (int16x8_t)vshlq_u16(vmovl_high_u8(v302), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)));
      uint16x8_t v305 = (uint16x8_t)vpaddq_s16(v303, v299);
      int32x4_t v306 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v305.i8);
      int32x4_t v307 = (int32x4_t)vmovl_high_u16(v305);
      int32x4_t v308 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v304.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v306)), (int32x4_t)vshlq_u32(vmovl_high_u16(v304), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v307)));
      int32x4_t v309 = vpaddq_s32(v306, v307);
      v310.i64[0] = v308.u32[0];
      v310.i64[1] = v308.u32[1];
      uint64x2_t v311 = (uint64x2_t)v310;
      v310.i64[0] = v308.u32[2];
      v310.i64[1] = v308.u32[3];
      uint64x2_t v312 = (uint64x2_t)v310;
      v310.i64[0] = v309.u32[0];
      v310.i64[1] = v309.u32[1];
      int64x2_t v313 = v310;
      v310.i64[0] = v309.u32[2];
      v310.i64[1] = v309.u32[3];
      int64x2_t v314 = vpaddq_s64((int64x2_t)vshlq_u64(v311, (uint64x2_t)vzip1q_s64((int64x2_t)0, v313)), (int64x2_t)vshlq_u64(v312, (uint64x2_t)vzip1q_s64((int64x2_t)0, v310)));
      int64x2_t v315 = vpaddq_s64(v313, v310);
      unint64_t v316 = (v314.i64[0] << v297) | v294;
      if (v315.i64[0] + (v297 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v297 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v316;
        unint64_t v316 = (unint64_t)v314.i64[0] >> -(v297 & 0x3F);
        if ((v297 & 0x3F) == 0) {
          unint64_t v316 = 0;
        }
      }
      int8x16_t v317 = vceqq_s8(v69, v85);
      int8x16_t v318 = vaddq_s8(v26, v298);
      unint64_t v319 = v315.i64[0] + v297;
      uint64_t v320 = (v315.i64[0] + v297) & 0x3F;
      unint64_t v321 = v316 | (v314.i64[1] << v319);
      if ((v319 & 0x3F) + v315.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v314.i64[1] >> -(char)v320;
        if (!v320) {
          unint64_t v321 = 0;
        }
      }
      int8x16_t v322 = vandq_s8(v75, v317);
      unint64_t v323 = v319 + v315.i64[1];
      v324.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v324.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v325.i64[0] = -1;
      v325.i64[1] = -1;
      uint8x16_t v326 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v325, (uint8x16_t)vaddq_s8(v242, v324)), v318);
      int16x8_t v327 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v242.i8);
      int16x8_t v328 = (int16x8_t)vmovl_high_u8((uint8x16_t)v242);
      uint16x8_t v329 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v326.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v327)), (int16x8_t)vshlq_u16(vmovl_high_u8(v326), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v328)));
      uint16x8_t v330 = (uint16x8_t)vpaddq_s16(v327, v328);
      int32x4_t v331 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v330.i8);
      int32x4_t v332 = (int32x4_t)vmovl_high_u16(v330);
      int32x4_t v333 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v329.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)), (int32x4_t)vshlq_u32(vmovl_high_u16(v329), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v332)));
      int32x4_t v334 = vpaddq_s32(v331, v332);
      v335.i64[0] = v333.u32[0];
      v335.i64[1] = v333.u32[1];
      uint64x2_t v336 = (uint64x2_t)v335;
      v335.i64[0] = v333.u32[2];
      v335.i64[1] = v333.u32[3];
      uint64x2_t v337 = (uint64x2_t)v335;
      v335.i64[0] = v334.u32[0];
      v335.i64[1] = v334.u32[1];
      int64x2_t v338 = v335;
      v335.i64[0] = v334.u32[2];
      v335.i64[1] = v334.u32[3];
      int64x2_t v339 = vpaddq_s64((int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v338)), (int64x2_t)vshlq_u64(v337, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)));
      int64x2_t v340 = vpaddq_s64(v338, v335);
      unint64_t v341 = (v339.i64[0] << v323) | v321;
      if (v340.i64[0] + (v323 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
        unint64_t v341 = (unint64_t)v339.i64[0] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v341 = 0;
        }
      }
      int8x16_t v342 = vceqq_s8(v69, v86);
      int8x16_t v343 = vaddq_s8(v27, v322);
      unint64_t v344 = v340.i64[0] + v323;
      unint64_t v345 = v341 | (v339.i64[1] << v344);
      if ((v344 & 0x3F) + v340.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v345;
        unint64_t v345 = (unint64_t)v339.i64[1] >> -(v344 & 0x3F);
        if ((v344 & 0x3F) == 0) {
          unint64_t v345 = 0;
        }
      }
      int8x16_t v346 = vandq_s8(v75, v342);
      unint64_t v347 = v344 + v340.i64[1];
      v348.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v348.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v349.i64[0] = -1;
      v349.i64[1] = -1;
      uint8x16_t v350 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v349, (uint8x16_t)vaddq_s8(v243, v348)), v343);
      int16x8_t v351 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v243.i8);
      int16x8_t v352 = (int16x8_t)vmovl_high_u8((uint8x16_t)v243);
      uint16x8_t v353 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v350.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v351)), (int16x8_t)vshlq_u16(vmovl_high_u8(v350), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v352)));
      uint16x8_t v354 = (uint16x8_t)vpaddq_s16(v351, v352);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16(v354);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)), (int32x4_t)vshlq_u32(vmovl_high_u16(v353), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v347) | v345;
      if (v364.i64[0] + (v347 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v238 + ((v347 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v363.i64[0] >> -(v347 & 0x3F);
        if ((v347 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      int8x16_t v366 = vaddq_s8(v28, v346);
      unint64_t v367 = v364.i64[0] + v347;
      unint64_t v368 = v365 | (v363.i64[1] << v367);
      if ((v367 & 0x3F) + v364.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v363.i64[1] >> -(v367 & 0x3F);
        if ((v367 & 0x3F) == 0) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v367 + v364.i64[1];
      v370.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v370.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      uint8x16_t v372 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v371, (uint8x16_t)vaddq_s8(v244, v370)), v366);
      int16x8_t v373 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v244.i8);
      int16x8_t v374 = (int16x8_t)vmovl_high_u8((uint8x16_t)v244);
      uint16x8_t v375 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v372.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)), (int16x8_t)vshlq_u16(vmovl_high_u8(v372), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v374)));
      uint16x8_t v376 = (uint16x8_t)vpaddq_s16(v373, v374);
      int32x4_t v377 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v376.i8);
      int32x4_t v378 = (int32x4_t)vmovl_high_u16(v376);
      int32x4_t v379 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v375.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)), (int32x4_t)vshlq_u32(vmovl_high_u16(v375), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v378)));
      int32x4_t v380 = vpaddq_s32(v377, v378);
      v381.i64[0] = v379.u32[0];
      v381.i64[1] = v379.u32[1];
      uint64x2_t v382 = (uint64x2_t)v381;
      v381.i64[0] = v379.u32[2];
      v381.i64[1] = v379.u32[3];
      uint64x2_t v383 = (uint64x2_t)v381;
      v381.i64[0] = v380.u32[0];
      v381.i64[1] = v380.u32[1];
      int64x2_t v384 = v381;
      v381.i64[0] = v380.u32[2];
      v381.i64[1] = v380.u32[3];
      int64x2_t v385 = vpaddq_s64((int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v384)), (int64x2_t)vshlq_u64(v383, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)));
      int64x2_t v386 = vpaddq_s64(v384, v381);
      unint64_t v387 = (v385.i64[0] << v369) | v368;
      if (v386.i64[0] + (v369 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v238 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v387;
        if ((v369 & 0x3F) != 0) {
          unint64_t v387 = (unint64_t)v385.i64[0] >> -(v369 & 0x3F);
        }
        else {
          unint64_t v387 = 0;
        }
      }
      unint64_t v388 = v386.i64[0] + v369;
      unint64_t v389 = v387 | (v385.i64[1] << v388);
      if ((v388 & 0x3F) + v386.i64[1] >= 0x40)
      {
        *(void *)((char *)v238 + ((v388 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
        unint64_t v389 = (unint64_t)v385.i64[1] >> -(v388 & 0x3F);
        if ((v388 & 0x3F) == 0) {
          unint64_t v389 = 0;
        }
      }
      unint64_t v390 = v388 + v386.i64[1];
      if ((v390 & 0x3F) != 0) {
        *(void *)((char *)v238 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
      }
      unint64_t result = (v390 - v239 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(unsigned char *)a1 = a3->i8[0];
    *a2 = 96;
    return 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(uint64_t a1, uint64_t a2, int16x4_t *a3, unsigned int a4, int a5)
{
  uint64_t v426 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v188 = 0;
LABEL_387:
    *(void *)a1 = 0;
    *(void *)(a1 + a2) = 0;
    *(void *)(a1 + 2 * a2) = 0;
    *(void *)(a1 + 3 * a2) = 0;
    return v188;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v5 = 0;
    unsigned int v6 = a5 & 0xFFFFFFFD;
    unint64_t v388 = a3;
    unsigned int v387 = a4;
    while (1)
    {
      unint64_t v23 = (unint64_t)a3 + 4 * v5;
      int8x16_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v25 = 8 * (v23 & 7);
      if ((a4 >> v5))
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = v25;
        do
        {
          if ((unint64_t)(v28 - v25 + (v27 << 6) - 29) < 0xFFFFFFFFFFFFFFDFLL)
          {
            char v29 = 0;
          }
          else
          {
            char v29 = 0;
            uint64_t v33 = 0;
            unint64_t v34 = 4;
            do
            {
              if (64 - v28 >= v34) {
                unint64_t v35 = v34;
              }
              else {
                unint64_t v35 = 64 - v28;
              }
              v29 |= (unint64_t)((v24[v27] >> v28) & ~(-1 << v35)) << v33;
              v33 += v35;
              unint64_t v36 = v35 + v28;
              v27 += v36 >> 6;
              uint64_t v28 = v36 & 0x3F;
              v34 -= v35;
            }
            while (v34);
          }
          int v30 = 16 * (v29 & 0xF);
          int v31 = v30 - (v29 & 1) + 8;
          if (v30 == 240) {
            int v31 = 255;
          }
          if (!v30) {
            int v31 = 0;
          }
          if (v30 == 128 && v6 == 1) {
            int v31 = v30;
          }
          if (a5 == 4) {
            int v31 = v30;
          }
          *(&v389 + v26++) = v31 ^ (((a5 & 0xFFFFFFFD) == 1) << 7);
        }
        while (v26 != 8);
        LOBYTE(v8) = v389;
        LOBYTE(v7) = v390;
        LOBYTE(v10) = v391;
        LOBYTE(v9) = v392;
        LOBYTE(v11) = v393;
        LOBYTE(v12) = v394;
        char v14 = v395;
        char v13 = v396;
        goto LABEL_5;
      }
      uint64_t v37 = v25 | 3;
      if (((*v24 >> v25) & 7) != 0)
      {
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        int v40 = 0;
        int v41 = ((*v24 >> v25) & 7) + 2;
        int v42 = 3;
        goto LABEL_41;
      }
      if ((unint64_t)(v37 - v25) > 0x1E) {
        break;
      }
      uint64_t v39 = 0;
      char v43 = 0;
      uint64_t v44 = 0;
      unint64_t v45 = 2;
      do
      {
        unint64_t v46 = 64 - v37;
        if (64 - v37 >= v45) {
          unint64_t v46 = v45;
        }
        v43 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v46)) << v44;
        v44 += v46;
        unint64_t v47 = v46 + v37;
        v39 += v47 >> 6;
        uint64_t v37 = v47 & 0x3F;
        v45 -= v46;
      }
      while (v45);
      int v40 = v43 & 3;
      switch(v40)
      {
        case 2:
          unsigned int v38 = 0;
          int v41 = 1;
          goto LABEL_40;
        case 1:
          int v41 = 0;
          int v40 = 2;
          int v42 = 5;
          unsigned int v38 = 255;
          break;
        case 0:
          goto LABEL_39;
        default:
          unsigned int v38 = 0;
          int v40 = 2;
          int v42 = 5;
          int v41 = 2;
          break;
      }
LABEL_41:
      int8x16_t v48 = &kDQuadParamTable[10 * v41];
      LODWORD(v49) = v48[4];
      unsigned int v50 = v48[5];
      if (v49 >= 8) {
        uint64_t v49 = 8;
      }
      else {
        uint64_t v49 = v49;
      }
      if (v50 >= 8) {
        uint64_t v51 = 8;
      }
      else {
        uint64_t v51 = v50;
      }
      char v52 = 8 - v49;
      if (v41)
      {
        if (v49)
        {
          if ((unint64_t)(v49 - v25 + v37 + (v39 << 6)) <= 0x20)
          {
            int v53 = 0;
            uint64_t v54 = 0;
            unint64_t v55 = v49;
            do
            {
              unint64_t v56 = 64 - v37;
              if (64 - v37 >= v55) {
                unint64_t v56 = v55;
              }
              v53 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v56)) << v54;
              v54 += v56;
              unint64_t v57 = v56 + v37;
              v39 += v57 >> 6;
              uint64_t v37 = v57 & 0x3F;
              v55 -= v56;
            }
            while (v55);
          }
          else
          {
            int v53 = 0;
          }
          int v42 = v49 + v40 + 3;
        }
        else
        {
          int v53 = 0;
        }
        unsigned int v38 = v53 << v52;
      }
      if (v51)
      {
        if ((unint64_t)(v37 - v25 + (v39 << 6) + 3) <= 0x20)
        {
          int v58 = 0;
          uint64_t v60 = 0;
          unint64_t v61 = 3;
          do
          {
            unint64_t v62 = 64 - v37;
            if (64 - v37 >= v61) {
              unint64_t v62 = v61;
            }
            v58 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v62)) << v60;
            v60 += v62;
            unint64_t v63 = v62 + v37;
            v39 += v63 >> 6;
            uint64_t v37 = v63 & 0x3F;
            v61 -= v62;
          }
          while (v61);
        }
        else
        {
          int v58 = 0;
        }
        uint64_t v422 = 0;
        uint64_t v423 = 0;
        int v425 = 0;
        uint64_t v424 = 0;
        unsigned int v64 = 29 - v42;
        unsigned int v65 = v64 / 7;
        uint64_t v66 = v51 - v25;
        unint64_t v67 = (v37 | (v39 << 6)) + v64 % 7;
        unint64_t v68 = v67 & 0x3F;
        if (v66 + v68 + (v67 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
        {
          uint64_t v59 = 0;
          uint64_t v69 = 0;
          unint64_t v70 = v67 >> 6;
          unint64_t v71 = v51;
          do
          {
            unint64_t v72 = 64 - v68;
            if (64 - v68 >= v71) {
              unint64_t v72 = v71;
            }
            v59 |= ((unint64_t)((v24[v70] >> v68) & ~(-1 << v72)) << v69);
            v69 += v72;
            unint64_t v73 = v72 + v68;
            v70 += v73 >> 6;
            unint64_t v68 = v73 & 0x3F;
            v71 -= v72;
          }
          while (v71);
          LODWORD(v422) = v59;
          unint64_t v67 = v68 | (v70 << 6);
        }
        else
        {
          uint64_t v59 = 0;
        }
        uint64_t v74 = v65 - v51;
        unint64_t v75 = v67 + v74;
        uint64_t v76 = (v67 + v74) & 0x3F;
        if (v66 + v76 + (v75 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
        {
          int v77 = 0;
          uint64_t v78 = 0;
          unint64_t v79 = v75 >> 6;
          unint64_t v80 = v51;
          do
          {
            unint64_t v81 = 64 - v76;
            if (64 - v76 >= v80) {
              unint64_t v81 = v80;
            }
            v77 |= (unint64_t)((v24[v79] >> v76) & ~(-1 << v81)) << v78;
            v78 += v81;
            unint64_t v82 = v81 + v76;
            v79 += v82 >> 6;
            uint64_t v76 = v82 & 0x3F;
            v80 -= v81;
          }
          while (v80);
          HIDWORD(v422) = v77;
          unint64_t v75 = v76 | (v79 << 6);
        }
        else
        {
          HIDWORD(v422) = 0;
        }
        unint64_t v83 = v75 + v74;
        uint64_t v84 = v83 & 0x3F;
        if (v66 + v84 + (v83 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
        {
          int v85 = 0;
          uint64_t v86 = 0;
          unint64_t v87 = v83 >> 6;
          unint64_t v88 = v51;
          do
          {
            unint64_t v89 = 64 - v84;
            if (64 - v84 >= v88) {
              unint64_t v89 = v88;
            }
            v85 |= (unint64_t)((v24[v87] >> v84) & ~(-1 << v89)) << v86;
            v86 += v89;
            unint64_t v90 = v89 + v84;
            v87 += v90 >> 6;
            uint64_t v84 = v90 & 0x3F;
            v88 -= v89;
          }
          while (v88);
          LODWORD(v423) = v85;
          unint64_t v83 = v84 | (v87 << 6);
        }
        else
        {
          LODWORD(v423) = 0;
        }
        unint64_t v91 = v83 + v74;
        uint64_t v92 = v91 & 0x3F;
        if (v66 + v92 + (v91 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
        {
          int v93 = 0;
          uint64_t v94 = 0;
          unint64_t v95 = v91 >> 6;
          unint64_t v96 = v51;
          do
          {
            unint64_t v97 = 64 - v92;
            if (64 - v92 >= v96) {
              unint64_t v97 = v96;
            }
            v93 |= (unint64_t)((v24[v95] >> v92) & ~(-1 << v97)) << v94;
            v94 += v97;
            unint64_t v98 = v97 + v92;
            v95 += v98 >> 6;
            uint64_t v92 = v98 & 0x3F;
            v96 -= v97;
          }
          while (v96);
          HIDWORD(v423) = v93;
          unint64_t v91 = v92 | (v95 << 6);
        }
        else
        {
          HIDWORD(v423) = 0;
        }
        unint64_t v99 = v91 + v74;
        uint64_t v100 = v99 & 0x3F;
        if (v66 + v100 + (v99 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
        {
          int v101 = 0;
          uint64_t v102 = 0;
          unint64_t v103 = v99 >> 6;
          unint64_t v104 = v51;
          do
          {
            unint64_t v105 = 64 - v100;
            if (64 - v100 >= v104) {
              unint64_t v105 = v104;
            }
            v101 |= (unint64_t)((v24[v103] >> v100) & ~(-1 << v105)) << v102;
            v102 += v105;
            unint64_t v106 = v105 + v100;
            v103 += v106 >> 6;
            uint64_t v100 = v106 & 0x3F;
            v104 -= v105;
          }
          while (v104);
          LODWORD(v424) = v101;
          unint64_t v99 = v100 | (v103 << 6);
        }
        else
        {
          LODWORD(v424) = 0;
        }
        unint64_t v107 = v99 + v74;
        unint64_t v108 = v107 >> 6;
        uint64_t v109 = v107 & 0x3F;
        if (v66 + v109 + (v107 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
        {
          int v110 = 0;
          uint64_t v111 = 0;
          unint64_t v112 = v51;
          do
          {
            unint64_t v113 = 64 - v109;
            if (64 - v109 >= v112) {
              unint64_t v113 = v112;
            }
            v110 |= (unint64_t)((v24[v108] >> v109) & ~(-1 << v113)) << v111;
            v111 += v113;
            unint64_t v114 = v113 + v109;
            v108 += v114 >> 6;
            uint64_t v109 = v114 & 0x3F;
            v112 -= v113;
          }
          while (v112);
        }
        else
        {
          int v110 = 0;
        }
        HIDWORD(v424) = v110;
        unint64_t v115 = (v109 | (v108 << 6)) + v74;
        uint64_t v116 = v115 & 0x3F;
        if (v66 + v116 + (v115 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
        {
          int v117 = 0;
          uint64_t v118 = 0;
          unint64_t v119 = v115 >> 6;
          unint64_t v120 = v51;
          do
          {
            unint64_t v121 = 64 - v116;
            if (64 - v116 >= v120) {
              unint64_t v121 = v120;
            }
            v117 |= (unint64_t)((v24[v119] >> v116) & ~(-1 << v121)) << v118;
            v118 += v121;
            unint64_t v122 = v121 + v116;
            v119 += v122 >> 6;
            uint64_t v116 = v122 & 0x3F;
            v120 -= v121;
          }
          while (v120);
        }
        else
        {
          int v117 = 0;
        }
        int v425 = v117;
      }
      else
      {
        int v58 = 0;
        uint64_t v59 = 0;
        uint64_t v422 = 0;
        uint64_t v423 = 0;
        int v425 = 0;
        uint64_t v424 = 0;
      }
      unint64_t v123 = *(void *)&kDQuadParamTable[10 * v41 + 2];
      if (v123 >> v51 <= 1) {
        unint64_t v124 = 1;
      }
      else {
        unint64_t v124 = v123 >> v51;
      }
      unint64_t v125 = v124 >> 1;
      unint64_t v126 = (unint64_t)(1 << v52) >> 1;
      if (v124 >> 1 < v126) {
        unint64_t v126 = v124 >> 1;
      }
      unint64_t v127 = 128 - v38;
      if (v38) {
        uint64_t v128 = v126;
      }
      else {
        uint64_t v128 = 0;
      }
      BOOL v129 = v38 == 128;
      if (v38 >= 0xFF) {
        char v130 = -1;
      }
      else {
        char v130 = v38;
      }
      char v131 = v130 ^ 0x80;
      if (v124 <= v127)
      {
        char v132 = 127;
      }
      else
      {
        char v131 = 0;
        char v132 = 0;
      }
      if (v6 == 1) {
        char v133 = v131;
      }
      else {
        char v133 = v130;
      }
      if (v6 == 1) {
        char v13 = v132;
      }
      else {
        char v13 = -1;
      }
      if (!v51)
      {
        if (a5 == 4)
        {
          char v14 = v13;
          LOBYTE(v12) = v13;
          LOBYTE(v11) = v13;
          LOBYTE(v9) = v13;
          LOBYTE(v10) = v13;
          LOBYTE(v7) = v13;
          LOBYTE(v8) = v13;
          a3 = v388;
          a4 = v387;
          if ((v38 & 0x7FC00000 | 0x80000000) != 0xFF800000)
          {
            char v13 = v133;
            char v14 = v133;
            LOBYTE(v12) = v133;
            LOBYTE(v11) = v133;
            LOBYTE(v9) = v133;
            LOBYTE(v10) = v133;
            LOBYTE(v7) = v133;
            LOBYTE(v8) = v133;
          }
          goto LABEL_5;
        }
        char v13 = v133;
        char v14 = v133;
        LOBYTE(v12) = v133;
        LOBYTE(v11) = v133;
        LOBYTE(v9) = v133;
        LOBYTE(v10) = v133;
        LOBYTE(v7) = v133;
        LOBYTE(v8) = v133;
        goto LABEL_311;
      }
      unint64_t v134 = v123 + v38;
      uint64_t v135 = ~(-1 << v51);
      unint64_t v136 = v127 / v124;
      if (!v58)
      {
        uint64_t v139 = 0;
        uint64_t v138 = v128;
        BOOL v137 = v38 == 128;
        goto LABEL_149;
      }
      BOOL v137 = v136 == v59;
      if (v38 || v59)
      {
        if (v134 >= 0x100 && v59 == v135)
        {
          uint64_t v139 = 1;
          uint64_t v138 = 255;
          goto LABEL_149;
        }
        uint64_t v138 = v125 + v124 * v59;
      }
      else
      {
        uint64_t v138 = 0;
      }
      uint64_t v139 = 1;
LABEL_149:
      unint64_t v140 = v138 + v38;
      unint64_t v141 = v140;
      if (a5 == 4)
      {
        unint64_t v141 = 2139095039;
        if ((v140 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v141 = 4286578687;
          if ((v140 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v141 = v140;
          }
        }
      }
      if (v141 >= 0xFF) {
        int v142 = 255;
      }
      else {
        int v142 = v141;
      }
      if (v137) {
        int v143 = 0;
      }
      else {
        int v143 = v142 ^ 0x80;
      }
      if (v6 == 1) {
        int v8 = v143;
      }
      else {
        int v8 = v142;
      }
      int v389 = v8;
      if (v58 == 1)
      {
        uint64_t v144 = v128;
        BOOL v145 = v38 == 128;
      }
      else
      {
        uint64_t v146 = *(unsigned int *)((unint64_t)&v422 | (4 * v139));
        BOOL v145 = v136 == v146;
        if (v38 | v146)
        {
          if (v134 >= 0x100 && v146 == v135) {
            uint64_t v144 = 255;
          }
          else {
            uint64_t v144 = v125 + v124 * v146;
          }
        }
        else
        {
          uint64_t v144 = 0;
        }
        ++v139;
      }
      unint64_t v147 = v144 + v38;
      unint64_t v148 = v147;
      if (a5 == 4)
      {
        unint64_t v148 = 2139095039;
        if ((v147 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v148 = 4286578687;
          if ((v147 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v148 = v147;
          }
        }
      }
      if (v148 >= 0xFF) {
        int v149 = 255;
      }
      else {
        int v149 = v148;
      }
      if (v145) {
        int v150 = 0;
      }
      else {
        int v150 = v149 ^ 0x80;
      }
      if (v6 == 1) {
        int v7 = v150;
      }
      else {
        int v7 = v149;
      }
      int v390 = v7;
      if (v58 == 2)
      {
        uint64_t v151 = v128;
        BOOL v152 = v38 == 128;
      }
      else
      {
        uint64_t v153 = *((unsigned int *)&v422 + v139);
        BOOL v152 = v136 == v153;
        if (v38 | v153)
        {
          if (v134 >= 0x100 && v153 == v135) {
            uint64_t v151 = 255;
          }
          else {
            uint64_t v151 = v125 + v124 * v153;
          }
        }
        else
        {
          uint64_t v151 = 0;
        }
        ++v139;
      }
      unint64_t v154 = v151 + v38;
      unint64_t v155 = v154;
      if (a5 == 4)
      {
        unint64_t v155 = 2139095039;
        if ((v154 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v155 = 4286578687;
          if ((v154 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v155 = v154;
          }
        }
      }
      if (v155 >= 0xFF) {
        int v156 = 255;
      }
      else {
        int v156 = v155;
      }
      if (v152) {
        int v157 = 0;
      }
      else {
        int v157 = v156 ^ 0x80;
      }
      if (v6 == 1) {
        int v10 = v157;
      }
      else {
        int v10 = v156;
      }
      int v391 = v10;
      if (v58 == 3)
      {
        uint64_t v158 = v128;
        BOOL v159 = v38 == 128;
      }
      else
      {
        uint64_t v160 = *((unsigned int *)&v422 + v139);
        BOOL v159 = v136 == v160;
        if (v38 | v160)
        {
          if (v134 >= 0x100 && v160 == v135) {
            uint64_t v158 = 255;
          }
          else {
            uint64_t v158 = v125 + v124 * v160;
          }
        }
        else
        {
          uint64_t v158 = 0;
        }
        ++v139;
      }
      unint64_t v161 = v158 + v38;
      unint64_t v162 = v161;
      if (a5 == 4)
      {
        unint64_t v162 = 2139095039;
        if ((v161 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v162 = 4286578687;
          if ((v161 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v162 = v161;
          }
        }
      }
      if (v162 >= 0xFF) {
        int v163 = 255;
      }
      else {
        int v163 = v162;
      }
      if (v159) {
        int v164 = 0;
      }
      else {
        int v164 = v163 ^ 0x80;
      }
      if (v6 == 1) {
        int v9 = v164;
      }
      else {
        int v9 = v163;
      }
      int v392 = v9;
      if (v58 == 4)
      {
        uint64_t v165 = v128;
        BOOL v166 = v38 == 128;
      }
      else
      {
        uint64_t v167 = *((unsigned int *)&v422 + v139);
        BOOL v166 = v136 == v167;
        if (v38 | v167)
        {
          if (v134 >= 0x100 && v167 == v135) {
            uint64_t v165 = 255;
          }
          else {
            uint64_t v165 = v125 + v124 * v167;
          }
        }
        else
        {
          uint64_t v165 = 0;
        }
        ++v139;
      }
      unint64_t v168 = v165 + v38;
      unint64_t v169 = v168;
      if (a5 == 4)
      {
        unint64_t v169 = 2139095039;
        if ((v168 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v168 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v169 = 4286578687;
          }
          else {
            unint64_t v169 = v168;
          }
        }
      }
      if (v169 >= 0xFF) {
        int v170 = 255;
      }
      else {
        int v170 = v169;
      }
      if (v166) {
        int v171 = 0;
      }
      else {
        int v171 = v170 ^ 0x80;
      }
      if (v6 == 1) {
        int v11 = v171;
      }
      else {
        int v11 = v170;
      }
      int v393 = v11;
      unint64_t v386 = v134;
      if (v58 == 5)
      {
        uint64_t v172 = ~(-1 << v51);
        uint64_t v173 = v128;
        BOOL v174 = v38 == 128;
      }
      else
      {
        uint64_t v175 = *((unsigned int *)&v422 + v139);
        BOOL v174 = v136 == v175;
        if (v38 | v175)
        {
          if (v134 >= 0x100 && v175 == v135)
          {
            uint64_t v172 = ~(-1 << v51);
            uint64_t v173 = 255;
          }
          else
          {
            uint64_t v172 = ~(-1 << v51);
            uint64_t v173 = v125 + v124 * v175;
          }
        }
        else
        {
          uint64_t v172 = ~(-1 << v51);
          uint64_t v173 = 0;
        }
        ++v139;
      }
      unint64_t v176 = v173 + v38;
      unint64_t v177 = v176;
      if (a5 == 4)
      {
        unint64_t v177 = 2139095039;
        if ((v176 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v176 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v177 = 4286578687;
          }
          else {
            unint64_t v177 = v176;
          }
        }
      }
      if (v177 >= 0xFF) {
        int v178 = 255;
      }
      else {
        int v178 = v177;
      }
      if (v174) {
        int v179 = 0;
      }
      else {
        int v179 = v178 ^ 0x80;
      }
      if (v6 == 1) {
        int v12 = v179;
      }
      else {
        int v12 = v178;
      }
      int v394 = v12;
      if (v58 == 6)
      {
        uint64_t v180 = v128;
        BOOL v181 = v38 == 128;
      }
      else
      {
        uint64_t v182 = *((unsigned int *)&v422 + v139);
        BOOL v181 = v136 == v182;
        if (v38 | v182)
        {
          if (v386 >= 0x100 && v182 == v172) {
            uint64_t v180 = 255;
          }
          else {
            uint64_t v180 = v125 + v124 * v182;
          }
        }
        else
        {
          uint64_t v180 = 0;
        }
        ++v139;
      }
      unint64_t v183 = v180 + v38;
      unint64_t v184 = v183;
      if (a5 == 4)
      {
        unint64_t v184 = 2139095039;
        if ((v183 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v184 = 4286578687;
          if ((v183 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v184 = v183;
          }
        }
      }
      if (v184 >= 0xFF) {
        LOBYTE(v184) = -1;
      }
      if (v181) {
        char v14 = 0;
      }
      else {
        char v14 = v184 ^ 0x80;
      }
      if (v6 != 1) {
        char v14 = v184;
      }
      if (v58 != 7)
      {
        uint64_t v185 = *((unsigned int *)&v422 + v139);
        BOOL v129 = v136 == v185;
        if (v38 | v185)
        {
          if (v386 >= 0x100 && v185 == v172) {
            uint64_t v128 = 255;
          }
          else {
            uint64_t v128 = v125 + v124 * v185;
          }
        }
        else
        {
          uint64_t v128 = 0;
        }
      }
      unint64_t v186 = v128 + v38;
      unint64_t v187 = v186;
      if (a5 == 4)
      {
        unint64_t v187 = 2139095039;
        if ((v186 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v187 = 4286578687;
          if ((v186 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v187 = v128 + v38;
          }
        }
      }
      if (v187 >= 0xFF) {
        LOBYTE(v187) = -1;
      }
      char v13 = v187 ^ 0x80;
      if (v129) {
        char v13 = 0;
      }
      if (v6 != 1) {
        char v13 = v187;
      }
LABEL_311:
      a3 = v388;
      a4 = v387;
LABEL_5:
      int8x8_t v15 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v5;
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      int8x16_t v18 = (char *)&v397 + 4 * v16;
      v18[v17] = v8;
      unsigned int v19 = (char *)&v397 + 4 * (v16 + 1);
      v19[v17] = v7;
      uint64_t v20 = (v17 + 1);
      v18[v20] = v10;
      v19[v20] = v9;
      int16x4_t v21 = (char *)&v397 + 4 * (v16 + 2);
      v21[v17] = v11;
      int8x16_t v22 = (char *)&v397 + 4 * (v16 + 3);
      v22[v17] = v12;
      v21[v20] = v14;
      v22[v20] = v13;
      if (++v5 == 4)
      {
        *(unsigned char *)a1 = v397;
        *(unsigned char *)(a1 + 1) = BYTE4(v397);
        *(unsigned char *)(a1 + 2) = v398;
        *(unsigned char *)(a1 + 3) = v402;
        *(unsigned char *)(a1 + 4) = v406;
        *(unsigned char *)(a1 + 5) = v410;
        *(unsigned char *)(a1 + 6) = v414;
        *(unsigned char *)(a1 + 7) = v418;
        int8x16_t v190 = (unsigned char *)(a1 + a2);
        *int8x16_t v190 = BYTE1(v397);
        v190[1] = BYTE5(v397);
        v190[2] = v399;
        v190[3] = v403;
        v190[4] = v407;
        v190[5] = v411;
        v190[6] = v415;
        v190[7] = v419;
        int8x16_t v191 = (unsigned char *)(a1 + a2 + a2);
        *int8x16_t v191 = BYTE2(v397);
        v191[1] = BYTE6(v397);
        v191[2] = v400;
        v191[3] = v404;
        v191[4] = v408;
        v191[5] = v412;
        v191[6] = v416;
        v191[7] = v420;
        int8x16_t v192 = &v191[a2];
        *int8x16_t v192 = BYTE3(v397);
        v192[1] = HIBYTE(v397);
        v192[2] = v401;
        v192[3] = v405;
        v192[4] = v409;
        v192[5] = v413;
        v192[6] = v417;
        uint64_t v188 = 16;
        v192[7] = v421;
        return v188;
      }
    }
    uint64_t v39 = 0;
LABEL_39:
    unsigned int v38 = 0;
    int v41 = 0;
    int v40 = 2;
LABEL_40:
    int v42 = 5;
    goto LABEL_41;
  }
  if (a4 == 31)
  {
    int16x4_t v193 = *a3;
    int16x4_t v194 = a3[1];
    int16x4_t v195 = a3[2];
    int16x4_t v196 = a3[3];
    *(int16x4_t *)a1 = vuzp1_s16(*a3, v195);
    *(int16x4_t *)(a1 + a2) = vuzp2_s16(v193, v195);
    int8x16_t v197 = (int16x4_t *)(a1 + 2 * a2);
    *int8x16_t v197 = vuzp1_s16(v194, v196);
    *(int16x4_t *)((char *)v197 + a2) = vuzp2_s16(v194, v196);
    return 32;
  }
  if (a4 == 96)
  {
    int8x8_t v189 = vdup_lane_s8((int8x8_t)*a3, 0);
    *(int8x8_t *)a1 = v189;
    *(int8x8_t *)(a1 + a2) = v189;
    *(int8x8_t *)(a1 + 2 * a2) = v189;
    *(int8x8_t *)(a1 + 3 * a2) = v189;
    return 1;
  }
  unint64_t v198 = 8 * (a3 & 7);
  unint64_t v199 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v200 = v198 + 12;
  unint64_t v201 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v198;
  if (v198 >= 0x35) {
    v201 |= *(void *)(v199 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v202 = (8 * (a3 & 7)) | 0x80;
  int8x16_t v203 = vdupq_n_s8(((a4 >> 5) | (8 * v201)) & 0xF);
  v204.i64[0] = 0x303030303030303;
  v204.i64[1] = 0x303030303030303;
  int8x16_t v205 = vandq_s8(v203, v204);
  int8x16_t v206 = vbicq_s8(vdupq_n_s8(((v201 >> 1) & 7) + 1), vceqq_s8(v205, v204));
  v204.i64[0] = 0x202020202020202;
  v204.i64[1] = 0x202020202020202;
  int8x16_t v207 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v203.i8), (int8x8_t)0x4000400040004)))), v204);
  if (vmaxvq_s8(v207) < 1)
  {
    int v217 = 0;
    v218.i64[0] = -1;
    v218.i64[1] = -1;
    int8x16_t v219 = v206;
    int8x16_t v220 = v206;
    int8x16_t v221 = v206;
    v222.i64[0] = -1;
    v222.i64[1] = -1;
    int8x16_t v223 = v206;
    v224.i64[0] = -1;
    v224.i64[1] = -1;
    v225.i64[0] = -1;
    v225.i64[1] = -1;
  }
  else
  {
    int8x16_t v208 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v207, v207));
    int8x16_t v209 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v208, (int16x8_t)v208));
    unint64_t v210 = vpaddq_s32((int32x4_t)v209, (int32x4_t)v209).u64[0];
    v211.i64[0] = v210;
    v211.i64[1] = HIDWORD(v210);
    int64x2_t v212 = v211;
    unint64_t v213 = vaddvq_s64(v211);
    unint64_t v214 = v213 + v200;
    if (v213 <= 0x80 && v202 >= v214)
    {
      int64x2_t v226 = vaddq_s64(vzip1q_s64((int64x2_t)0, v212), vdupq_n_s64(v200 & 0x3C));
      int8x16_t v227 = (int64x2_t *)(v199 + ((v200 >> 3) & 8));
      int8x16_t v216 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v226)));
      if (v213 + (v200 & 0x3C) < 0x81)
      {
        int v217 = 0;
      }
      else
      {
        int v217 = 0;
        int8x16_t v216 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v226))), v216);
      }
      unint64_t v200 = v214;
    }
    else
    {
      int8x16_t v216 = 0uLL;
      int v217 = 1;
    }
    int32x2_t v228 = vzip1_s32(*(int32x2_t *)v209.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v209, v209, 8uLL));
    v229.i64[0] = v228.u32[0];
    v229.i64[1] = v228.u32[1];
    int64x2_t v230 = (int64x2_t)vshlq_u64((uint64x2_t)v216, (uint64x2_t)vnegq_s64(v229));
    *(int32x2_t *)v216.i8 = vmovn_s64((int64x2_t)v216);
    *(int32x2_t *)v230.i8 = vmovn_s64(v230);
    int8x16_t v231 = (int8x16_t)vzip1q_s32((int32x4_t)v216, (int32x4_t)v230);
    int16x8_t v232 = (int16x8_t)vshlq_u32((uint32x4_t)v231, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v208.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v208, v208, 8uLL)))));
    *(int16x4_t *)v231.i8 = vmovn_s32((int32x4_t)v231);
    *(int16x4_t *)v232.i8 = vmovn_s32((int32x4_t)v232);
    int8x16_t v233 = (int8x16_t)vzip1q_s16((int16x8_t)v231, v232);
    *(int8x8_t *)v233.i8 = vzip1_s8(vmovn_s16((int16x8_t)v233), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v233, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v207.i8, *(int8x8_t *)v203.i8))))));
    v231.i64[0] = 0x101010101010101;
    v231.i64[1] = 0x101010101010101;
    int8x16_t v234 = vshlq_s8(v231, v207);
    v231.i64[0] = -1;
    v231.i64[1] = -1;
    v234.i64[0] = vandq_s8(v233, vaddq_s8(v234, v231)).u64[0];
    int8x16_t v235 = vdupq_lane_s8(*(int8x8_t *)v234.i8, 0);
    int8x16_t v236 = vdupq_lane_s8(*(int8x8_t *)v234.i8, 1);
    int8x16_t v237 = vdupq_lane_s8(*(int8x8_t *)v234.i8, 2);
    int8x16_t v238 = vdupq_lane_s8(*(int8x8_t *)v234.i8, 3);
    int8x16_t v223 = vsubq_s8(v206, v235);
    int8x16_t v221 = vsubq_s8(v206, v236);
    int8x16_t v220 = vsubq_s8(v206, v237);
    int8x16_t v219 = vsubq_s8(v206, v238);
    int8x16_t v225 = vceqzq_s8(v235);
    int8x16_t v224 = vceqzq_s8(v236);
    int8x16_t v222 = vceqzq_s8(v237);
    int8x16_t v218 = vceqzq_s8(v238);
  }
  v239.i64[0] = 0x707070707070707;
  v239.i64[1] = 0x707070707070707;
  int8x16_t v240 = 0uLL;
  int8x16_t v241 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v203, v239), (int8x16_t)0, 0xFuLL), v206);
  int8x16_t v242 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v241, v241));
  int8x16_t v243 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v242, (int16x8_t)v242));
  unint64_t v244 = vpaddq_s32((int32x4_t)v243, (int32x4_t)v243).u64[0];
  v245.i64[0] = v244;
  v245.i64[1] = HIDWORD(v244);
  int64x2_t v246 = v245;
  unint64_t v247 = vaddvq_s64(v245);
  unint64_t v248 = v247 + v200;
  if (v247 <= 0x80 && v202 >= v248)
  {
    unint64_t v250 = v200 & 0x3F;
    int64x2_t v251 = vaddq_s64(vzip1q_s64((int64x2_t)0, v246), vdupq_n_s64(v250));
    uint8x16_t v252 = (int64x2_t *)(v199 + 8 * (v200 >> 6));
    int8x16_t v240 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v252, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252->i64[0], 0), (uint64x2_t)vnegq_s64(v251)));
    if (v247 + v250 >= 0x81) {
      int8x16_t v240 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v252[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v251))), v240);
    }
    unint64_t v200 = v248;
  }
  else
  {
    int v217 = 1;
  }
  int8x16_t v253 = vandq_s8(v223, (int8x16_t)xmmword_242EA7380);
  int v254 = (a4 >> 5) & 3;
  if (v254 != 2)
  {
    unsigned int v258 = 0;
    unsigned int v256 = 0;
    unint64_t v259 = v200;
    goto LABEL_354;
  }
  unint64_t v255 = v200 + 4;
  if (v202 < v200 + 4)
  {
    unsigned int v256 = 0;
    unint64_t v255 = v200;
LABEL_353:
    unsigned int v258 = 0;
    int v217 = 1;
    unint64_t v259 = v255;
    goto LABEL_354;
  }
  uint64_t v260 = *(void *)(v199 + 8 * (v200 >> 6)) >> v200;
  if ((v200 & 0x3F) >= 0x3D) {
    v260 |= *(void *)(v199 + 8 * (v200 >> 6) + 8) << -(v200 & 0x3F);
  }
  unint64_t v259 = v200 + 8;
  unsigned int v256 = (int)(v260 << 28) >> 28;
  if (v202 < v200 + 8) {
    goto LABEL_353;
  }
  uint64_t v257 = *(void *)(v199 + 8 * (v255 >> 6)) >> v255;
  if ((v255 & 0x3F) >= 0x3D) {
    v257 |= *(void *)(v199 + 8 * (v255 >> 6) + 8) << -(v255 & 0x3F);
  }
  unsigned int v258 = (int)(v257 << 28) >> 28;
LABEL_354:
  int8x16_t v261 = vandq_s8(v221, (int8x16_t)xmmword_242EA7390);
  v253.i8[0] = 0;
  int8x16_t v262 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v253, v253));
  int8x16_t v263 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v262, (int16x8_t)v262));
  unint64_t v264 = vpaddq_s32((int32x4_t)v263, (int32x4_t)v263).u64[0];
  v265.i64[0] = v264;
  v265.i64[1] = HIDWORD(v264);
  int64x2_t v266 = v265;
  unint64_t v267 = vaddvq_s64(v265);
  unint64_t v268 = v267 + v259;
  int8x16_t v269 = 0uLL;
  if (v267 <= 0x80 && v202 >= v268)
  {
    unint64_t v272 = v259 & 0x3F;
    int64x2_t v273 = vaddq_s64(vzip1q_s64((int64x2_t)0, v266), vdupq_n_s64(v272));
    uint8x16_t v274 = (int64x2_t *)(v199 + 8 * (v259 >> 6));
    int8x16_t v271 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v274, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v273)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v274->i64[0], 0), (uint64x2_t)vnegq_s64(v273)));
    if (v267 + v272 >= 0x81) {
      int8x16_t v271 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v274[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v273)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v274[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v273))), v271);
    }
    unint64_t v259 = v268;
  }
  else
  {
    int v217 = 1;
    int8x16_t v271 = 0uLL;
  }
  int8x16_t v275 = vandq_s8(v220, (int8x16_t)xmmword_242EA7390);
  int8x16_t v276 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v261, v261));
  int8x16_t v277 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v276, (int16x8_t)v276));
  unint64_t v278 = vpaddq_s32((int32x4_t)v277, (int32x4_t)v277).u64[0];
  v279.i64[0] = v278;
  v279.i64[1] = HIDWORD(v278);
  int64x2_t v280 = v279;
  unint64_t v281 = vaddvq_s64(v279);
  if (v281 < 0x81)
  {
    int32x2_t v282 = vzip1_s32(*(int32x2_t *)v277.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v277, v277, 8uLL));
    v283.i64[0] = v282.u32[0];
    v283.i64[1] = v282.u32[1];
    int64x2_t v284 = v283;
    int32x4_t v285 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v276.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v276, v276, 8uLL)));
    int16x8_t v286 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v261.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v261, v261, 8uLL)));
    unint64_t v287 = v281 + v259;
    if (v202 >= v281 + v259)
    {
      unint64_t v288 = v259 & 0x3F;
      int64x2_t v289 = vaddq_s64(vzip1q_s64((int64x2_t)0, v280), vdupq_n_s64(v288));
      int64x2_t v290 = (int64x2_t *)(v199 + 8 * (v259 >> 6));
      int8x16_t v269 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v290, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v289)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v290->i64[0], 0), (uint64x2_t)vnegq_s64(v289)));
      if (v281 + v288 >= 0x81) {
        int8x16_t v269 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v290[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v289)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v290[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v289))), v269);
      }
      unint64_t v259 = v287;
    }
    else
    {
      int v217 = 1;
    }
    int64x2_t v291 = (int64x2_t)vshlq_u64((uint64x2_t)v269, (uint64x2_t)vnegq_s64(v284));
    *(int32x2_t *)v269.i8 = vmovn_s64((int64x2_t)v269);
    *(int32x2_t *)v291.i8 = vmovn_s64(v291);
    int16x8_t v292 = (int16x8_t)vzip1q_s32((int32x4_t)v269, (int32x4_t)v291);
    int16x8_t v293 = (int16x8_t)vshlq_u32((uint32x4_t)v292, (uint32x4_t)vnegq_s32(v285));
    *(int16x4_t *)v292.i8 = vmovn_s32((int32x4_t)v292);
    *(int16x4_t *)v293.i8 = vmovn_s32((int32x4_t)v293);
    int8x16_t v294 = (int8x16_t)vzip1q_s16(v292, v293);
    int8x16_t v295 = (int8x16_t)vshlq_u16((uint16x8_t)v294, (uint16x8_t)vnegq_s16(v286));
    *(int8x8_t *)v294.i8 = vmovn_s16((int16x8_t)v294);
    *(int8x8_t *)v295.i8 = vmovn_s16((int16x8_t)v295);
    int8x16_t v269 = vzip1q_s8(v294, v295);
  }
  else
  {
    int v217 = 1;
  }
  int8x16_t v296 = vandq_s8(v219, (int8x16_t)xmmword_242EA7390);
  int8x16_t v297 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v275, v275));
  int8x16_t v298 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v297, (int16x8_t)v297));
  unint64_t v299 = vpaddq_s32((int32x4_t)v298, (int32x4_t)v298).u64[0];
  v300.i64[0] = v299;
  v300.i64[1] = HIDWORD(v299);
  int64x2_t v301 = v300;
  unint64_t v302 = vaddvq_s64(v300);
  int8x16_t v303 = 0uLL;
  if (v302 <= 0x80)
  {
    int32x2_t v305 = vzip1_s32(*(int32x2_t *)v298.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v298, v298, 8uLL));
    v306.i64[0] = v305.u32[0];
    v306.i64[1] = v305.u32[1];
    int64x2_t v307 = v306;
    int32x4_t v308 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v297.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v297, v297, 8uLL)));
    int16x8_t v309 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v275.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v275, v275, 8uLL)));
    unint64_t v310 = v302 + v259;
    if (v202 >= v302 + v259)
    {
      unint64_t v312 = v259 & 0x3F;
      int64x2_t v313 = vaddq_s64(vzip1q_s64((int64x2_t)0, v301), vdupq_n_s64(v312));
      int64x2_t v314 = (int64x2_t *)(v199 + 8 * (v259 >> 6));
      int8x16_t v311 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v314, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v313)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v314->i64[0], 0), (uint64x2_t)vnegq_s64(v313)));
      if (v302 + v312 >= 0x81) {
        int8x16_t v311 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v314[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v313)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v314[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v313))), v311);
      }
      unint64_t v259 = v310;
    }
    else
    {
      int8x16_t v311 = 0uLL;
      int v217 = 1;
    }
    int64x2_t v315 = (int64x2_t)vshlq_u64((uint64x2_t)v311, (uint64x2_t)vnegq_s64(v307));
    *(int32x2_t *)v311.i8 = vmovn_s64((int64x2_t)v311);
    *(int32x2_t *)v315.i8 = vmovn_s64(v315);
    int16x8_t v316 = (int16x8_t)vzip1q_s32((int32x4_t)v311, (int32x4_t)v315);
    int16x8_t v317 = (int16x8_t)vshlq_u32((uint32x4_t)v316, (uint32x4_t)vnegq_s32(v308));
    *(int16x4_t *)v316.i8 = vmovn_s32((int32x4_t)v316);
    *(int16x4_t *)v317.i8 = vmovn_s32((int32x4_t)v317);
    int8x16_t v318 = (int8x16_t)vzip1q_s16(v316, v317);
    int8x16_t v319 = (int8x16_t)vshlq_u16((uint16x8_t)v318, (uint16x8_t)vnegq_s16(v309));
    *(int8x8_t *)v318.i8 = vmovn_s16((int16x8_t)v318);
    *(int8x8_t *)v319.i8 = vmovn_s16((int16x8_t)v319);
    int8x16_t v304 = vzip1q_s8(v318, v319);
  }
  else
  {
    int v217 = 1;
    int8x16_t v304 = 0uLL;
  }
  int8x16_t v320 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v296, v296));
  int8x16_t v321 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v320, (int16x8_t)v320));
  unint64_t v322 = vpaddq_s32((int32x4_t)v321, (int32x4_t)v321).u64[0];
  v323.i64[0] = v322;
  v323.i64[1] = HIDWORD(v322);
  int64x2_t v324 = v323;
  unint64_t v325 = vaddvq_s64(v323);
  if (v325 > 0x80) {
    goto LABEL_386;
  }
  if (v202 >= v325 + v259)
  {
    int64x2_t v326 = vaddq_s64(vzip1q_s64((int64x2_t)0, v324), vdupq_n_s64(v259 & 0x3F));
    int16x8_t v327 = (int64x2_t *)(v199 + 8 * (v259 >> 6));
    int8x16_t v303 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v327, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327->i64[0], 0), (uint64x2_t)vnegq_s64(v326)));
    if (v325 + (v259 & 0x3F) >= 0x81) {
      int8x16_t v303 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v327[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v326))), v303);
    }
    v259 += v325;
  }
  else
  {
    int v217 = 1;
  }
  if (v217 || (uint64_t v188 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v188) - v259 >= 9))
  {
LABEL_386:
    uint64_t v188 = 0;
    v397 |= 255 << (8 * (&v397 & 7u));
    goto LABEL_387;
  }
  int32x2_t v329 = vzip1_s32(*(int32x2_t *)v243.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v243, v243, 8uLL));
  int32x2_t v330 = vzip1_s32(*(int32x2_t *)v263.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v263, v263, 8uLL));
  v331.i64[0] = v329.u32[0];
  v331.i64[1] = v329.u32[1];
  int64x2_t v332 = v331;
  v331.i64[0] = v330.u32[0];
  v331.i64[1] = v330.u32[1];
  int64x2_t v333 = (int64x2_t)vshlq_u64((uint64x2_t)v240, (uint64x2_t)vnegq_s64(v332));
  int64x2_t v334 = (int64x2_t)vshlq_u64((uint64x2_t)v271, (uint64x2_t)vnegq_s64(v331));
  *(int32x2_t *)v240.i8 = vmovn_s64((int64x2_t)v240);
  *(int32x2_t *)v333.i8 = vmovn_s64(v333);
  *(int32x2_t *)v271.i8 = vmovn_s64((int64x2_t)v271);
  *(int32x2_t *)v334.i8 = vmovn_s64(v334);
  int16x8_t v335 = (int16x8_t)vzip1q_s32((int32x4_t)v240, (int32x4_t)v333);
  int16x8_t v336 = (int16x8_t)vzip1q_s32((int32x4_t)v271, (int32x4_t)v334);
  int16x8_t v337 = (int16x8_t)vshlq_u32((uint32x4_t)v335, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v242.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v242, v242, 8uLL)))));
  int16x8_t v338 = (int16x8_t)vshlq_u32((uint32x4_t)v336, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v262.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL)))));
  *(int16x4_t *)v335.i8 = vmovn_s32((int32x4_t)v335);
  *(int16x4_t *)v337.i8 = vmovn_s32((int32x4_t)v337);
  *(int16x4_t *)v336.i8 = vmovn_s32((int32x4_t)v336);
  *(int16x4_t *)v338.i8 = vmovn_s32((int32x4_t)v338);
  int8x16_t v339 = (int8x16_t)vzip1q_s16(v335, v337);
  int8x16_t v340 = (int8x16_t)vzip1q_s16(v336, v338);
  int8x16_t v341 = (int8x16_t)vshlq_u16((uint16x8_t)v339, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v241.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v241, v241, 8uLL)))));
  int8x16_t v342 = (int8x16_t)vshlq_u16((uint16x8_t)v340, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v253.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v253, v253, 8uLL)))));
  *(int8x8_t *)v339.i8 = vmovn_s16((int16x8_t)v339);
  *(int8x8_t *)v341.i8 = vmovn_s16((int16x8_t)v341);
  *(int8x8_t *)v340.i8 = vmovn_s16((int16x8_t)v340);
  *(int8x8_t *)v342.i8 = vmovn_s16((int16x8_t)v342);
  v343.i64[0] = 0x808080808080808;
  v343.i64[1] = 0x808080808080808;
  v344.i64[0] = 0x808080808080808;
  v344.i64[1] = 0x808080808080808;
  unint64_t v345 = v201 >> 4;
  int8x16_t v346 = vzip1q_s8(v339, v341);
  v341.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v341.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v347 = vzip1q_s8(v340, v342);
  v342.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v342.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v348 = vsubq_s8(v344, v261);
  *(int32x2_t *)v336.i8 = vzip1_s32(*(int32x2_t *)v321.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v321, v321, 8uLL));
  v349.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v349.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v350.i64[0] = 0x808080808080808;
  v350.i64[1] = 0x808080808080808;
  int8x16_t v351 = vaddq_s8(v261, v342);
  v331.i64[0] = v336.u32[0];
  v331.i64[1] = v336.u32[1];
  int8x16_t v352 = vshlq_s8(vshlq_s8(v346, vsubq_s8(v343, v241)), vaddq_s8(v241, v341));
  int8x16_t v353 = vshlq_s8(vshlq_s8(v347, vsubq_s8(v344, v253)), vaddq_s8(v253, v342));
  int8x16_t v354 = vshlq_s8(vshlq_s8(v269, v348), v351);
  int8x16_t v355 = vshlq_s8(vshlq_s8(v304, vsubq_s8(v344, v275)), vaddq_s8(v275, v342));
  int64x2_t v356 = (int64x2_t)vshlq_u64((uint64x2_t)v303, (uint64x2_t)vnegq_s64(v331));
  *(int32x2_t *)v351.i8 = vmovn_s64((int64x2_t)v303);
  *(int32x2_t *)v356.i8 = vmovn_s64(v356);
  int16x8_t v357 = (int16x8_t)vzip1q_s32((int32x4_t)v351, (int32x4_t)v356);
  int16x8_t v358 = (int16x8_t)vshlq_u32((uint32x4_t)v357, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v320.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v320, v320, 8uLL)))));
  *(int16x4_t *)v357.i8 = vmovn_s32((int32x4_t)v357);
  *(int16x4_t *)v358.i8 = vmovn_s32((int32x4_t)v358);
  int8x16_t v359 = (int8x16_t)vzip1q_s16(v357, v358);
  int8x16_t v360 = (int8x16_t)vshlq_u16((uint16x8_t)v359, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v296.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v296, v296, 8uLL)))));
  *(int8x8_t *)v359.i8 = vmovn_s16((int16x8_t)v359);
  *(int8x8_t *)v360.i8 = vmovn_s16((int16x8_t)v360);
  int8x16_t v361 = vshlq_s8(vshlq_s8(vzip1q_s8(v359, v360), vsubq_s8(v350, v296)), vaddq_s8(v296, v349));
  if (v254 == 2)
  {
    v362.i64[0] = 0xFFFF0000FFFF0000;
    v362.i64[1] = 0xFFFF0000FFFF0000;
    int8x16_t v363 = vmlaq_s8(vandq_s8(vdupq_n_s8(v258), v362), vdupq_n_s8(v256), (int8x16_t)xmmword_242EA73A0);
    int8x16_t v353 = vaddq_s8(v353, v363);
    int8x16_t v354 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v258), v363), v354);
    int8x16_t v355 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v256), v363), v355);
    int8x16_t v361 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v256 + 2 * v258), v363), v361);
  }
  int8x8_t v364 = (int8x8_t)vdupq_n_s8(v345).u64[0];
  int8x16_t v365 = vaddq_s8(vandq_s8(v352, v225), v353);
  int8x16_t v366 = vdupq_lane_s8(*(int8x8_t *)v352.i8, 0);
  int8x16_t v367 = vsubq_s8(v365, vandq_s8(v366, v225));
  int8x16_t v368 = vsubq_s8(v354, vandq_s8(v366, v224));
  int8x16_t v369 = vsubq_s8(v355, vandq_s8(v366, v222));
  int8x16_t v370 = vsubq_s8(v361, vandq_s8(v366, v218));
  v371.i64[0] = 0x101010101010101;
  v371.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v205, v371)))
  {
    int8x16_t v372 = v367;
    v372.i8[0] = v367.i8[7];
    v372.i8[7] = v367.i8[0];
    int8x16_t v373 = vnegq_s8(vandq_s8(v203, v371));
    int8x16_t v374 = vbslq_s8(v373, v372, v367);
    int8x16_t v375 = vaddq_s8(v374, vandq_s8(vqtbl1q_s8(v374, (int8x16_t)xmmword_242EA73B0), v373));
    v367.i64[0] = vaddq_s8(v375, vandq_s8(vqtbl1q_s8(v375, (int8x16_t)xmmword_242EA73C0), v373)).u64[0];
    int8x16_t v376 = vaddq_s8(vandq_s8(vqtbl1q_s8(v368, (int8x16_t)xmmword_242EA73D0), v373), v368);
    v368.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v376, (int8x16_t)xmmword_242EA73E0), v373), v376).u64[0];
    int8x16_t v377 = vaddq_s8(vandq_s8(vqtbl1q_s8(v369, (int8x16_t)xmmword_242EA73F0), v373), v369);
    v369.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v377, (int8x16_t)xmmword_242EA7400), v373), v377).u64[0];
    int8x16_t v378 = vaddq_s8(vandq_s8(vqtbl1q_s8(v370, (int8x16_t)xmmword_242EA7410), v373), v370);
    v370.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v378, (int8x16_t)xmmword_242EA7420), v373), v378).u64[0];
  }
  int16x4_t v379 = (int16x4_t)vadd_s8(v364, *(int8x8_t *)v367.i8);
  int16x4_t v380 = (int16x4_t)vadd_s8(*(int8x8_t *)v369.i8, v364);
  *(int16x4_t *)a1 = vuzp1_s16(v379, v380);
  *(int16x4_t *)(a1 + a2) = vuzp2_s16(v379, v380);
  int64x2_t v381 = (int16x4_t *)(a1 + 2 * a2);
  int16x4_t v382 = (int16x4_t)vadd_s8(*(int8x8_t *)v368.i8, v364);
  int16x4_t v383 = (int16x4_t)vadd_s8(*(int8x8_t *)v370.i8, v364);
  *int64x2_t v381 = vuzp1_s16(v382, v383);
  *(int16x4_t *)((char *)v381 + a2) = vuzp2_s16(v382, v383);
  return v188;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, int8x8_t a14)
{
  unint64_t v18 = a3;
  uint64_t v20 = (int16x4_t *)result;
  if (a5 >= 8) {
    unsigned int v21 = 8;
  }
  else {
    unsigned int v21 = a5;
  }
  if (a6 >= 4) {
    unsigned int v22 = 4;
  }
  else {
    unsigned int v22 = a6;
  }
  if (v21 && v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int16x4_t *)result, a2, v21, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    *a4 = 0;
  }
  unint64_t v23 = a4 + 1;
  if (a5 <= 8) {
    int v24 = 8;
  }
  else {
    int v24 = a5;
  }
  unsigned int v25 = v24 - 8;
  if (v25 >= 8) {
    int v26 = 8;
  }
  else {
    int v26 = v25;
  }
  if (v26 && v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v18, v23, v20 + 1, a2, v26, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    *unint64_t v23 = 0;
  }
  uint64_t v27 = 4 * a2;
  uint64_t v28 = a4 + 2;
  if (a6 <= 4) {
    int v29 = 4;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 4;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v21 && v31)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v18, v28, (int16x4_t *)((char *)v20 + v27), a2, v21, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int8x16_t v32 = a4 + 3;
    if (!v26) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v28 = 0;
    int8x16_t v32 = a4 + 3;
    if (!v26) {
      goto LABEL_34;
    }
  }
  if (v31)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v18, v32, (int16x4_t *)((char *)v20 + v27 + 8), a2, v26, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    goto LABEL_35;
  }
LABEL_34:
  *int8x16_t v32 = 0;
LABEL_35:
  uint64_t v33 = a4 + 4;
  if (a6 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a6;
  }
  unsigned int v35 = v34 - 8;
  if (v35 >= 4) {
    int v36 = 4;
  }
  else {
    int v36 = v35;
  }
  if (v21 && v36)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v18, v33, &v20[a2], a2, v21, v36, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    uint64_t v37 = a4 + 5;
    if (!v26) {
      goto LABEL_48;
    }
  }
  else
  {
    *uint64_t v33 = 0;
    uint64_t v37 = a4 + 5;
    if (!v26) {
      goto LABEL_48;
    }
  }
  if (v36)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v18, v37, &v20[a2 + 1], a2, v26, v36, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    goto LABEL_49;
  }
LABEL_48:
  *uint64_t v37 = 0;
LABEL_49:
  unsigned int v38 = a4 + 6;
  if (a6 <= 12) {
    int v39 = 12;
  }
  else {
    int v39 = a6;
  }
  unsigned int v40 = v39 - 12;
  if (v40 >= 4) {
    int v41 = 4;
  }
  else {
    int v41 = v40;
  }
  if (v21 && v41)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v18, v38, (int16x4_t *)((char *)v20 + 12 * a2), a2, v21, v41, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int v42 = a4 + 7;
    if (!v26) {
      goto LABEL_64;
    }
  }
  else
  {
    *unsigned int v38 = 0;
    int v42 = a4 + 7;
    if (!v26)
    {
LABEL_64:
      *int v42 = 0;
      return result;
    }
  }
  if (!v41) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v18, v42, (int16x4_t *)((char *)v20 + 12 * a2 + 8), a2, v26, v41, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressMacroblock(uint64_t a1, int16x4_t *a2, unsigned __int8 *a3, int a4)
{
  int v7 = (int16x4_t *)((char *)a2
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1, 16, a2, *a3, a4));
  int v8 = (int16x4_t *)((char *)v7
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 8, 16, v7, a3[1], a4));
  int v9 = (int16x4_t *)((char *)v8
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 64, 16, v8, a3[2], a4));
  int v10 = (int16x4_t *)((char *)v9
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 72, 16, v9, a3[3], a4));
  int v11 = (int16x4_t *)((char *)v10
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 128, 16, v10, a3[4], a4));
  int v12 = (int16x4_t *)((char *)v11
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 136, 16, v11, a3[5], a4));
  char v13 = (int16x4_t *)((char *)v12
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 192, 16, v12, a3[6], a4));
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 200, 16, v13, v14, a4);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)0>::decompressSubblock(int8x8_t *a1, uint64_t a2, int8x8_t *a3, unsigned int a4)
{
  switch(a4)
  {
    case 0x60u:
      int8x8_t v5 = vdup_lane_s8(*a3, 0);
      *a1 = v5;
      *(int8x8_t *)((char *)a1 + a2) = v5;
      *(int8x8_t *)((char *)a1 + 2 * a2) = v5;
      *(int8x8_t *)((char *)a1 + 3 * a2) = v5;
      return 1;
    case 0x1Fu:
      int16x4_t v6 = (int16x4_t)*a3;
      int16x4_t v7 = (int16x4_t)a3[1];
      int16x4_t v8 = (int16x4_t)a3[2];
      int16x4_t v9 = (int16x4_t)a3[3];
      *a1 = (int8x8_t)vuzp1_s16((int16x4_t)*a3, v8);
      *(int16x4_t *)((char *)a1 + a2) = vuzp2_s16(v6, v8);
      int v10 = (int16x4_t *)((char *)a1 + 2 * a2);
      *int v10 = vuzp1_s16(v7, v9);
      *(int16x4_t *)((char *)v10 + a2) = vuzp2_s16(v7, v9);
      return 32;
    case 0u:
      uint64_t v4 = 0;
LABEL_71:
      *a1 = 0;
      *(int8x8_t *)((char *)a1 + a2) = 0;
      *(int8x8_t *)((char *)a1 + 2 * a2) = 0;
      *(int8x8_t *)((char *)a1 + 3 * a2) = 0;
      return v4;
  }
  unint64_t v11 = 8 * (a3 & 7);
  unint64_t v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = v11 + 12;
  unint64_t v14 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v11;
  if (v11 >= 0x35) {
    v14 |= *(void *)(v12 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v15 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v16 = vdupq_n_s8(((a4 >> 5) | (8 * v14)) & 0xF);
  v17.i64[0] = 0x303030303030303;
  v17.i64[1] = 0x303030303030303;
  int8x16_t v18 = vandq_s8(v16, v17);
  int8x16_t v19 = vbicq_s8(vdupq_n_s8(((v14 >> 1) & 7) + 1), vceqq_s8(v18, v17));
  v17.i64[0] = 0x202020202020202;
  v17.i64[1] = 0x202020202020202;
  int8x16_t v20 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v16.i8), (int8x8_t)0x4000400040004)))), v17);
  if (vmaxvq_s8(v20) < 1)
  {
    int v30 = 0;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
    int8x16_t v32 = v19;
    int8x16_t v33 = v19;
    int8x16_t v34 = v19;
    v35.i64[0] = -1;
    v35.i64[1] = -1;
    int8x16_t v36 = v19;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v38.i64[0] = -1;
    v38.i64[1] = -1;
  }
  else
  {
    int8x16_t v21 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v20, v20));
    int8x16_t v22 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v21, (int16x8_t)v21));
    unint64_t v23 = vpaddq_s32((int32x4_t)v22, (int32x4_t)v22).u64[0];
    v24.i64[0] = v23;
    v24.i64[1] = HIDWORD(v23);
    int64x2_t v25 = v24;
    unint64_t v26 = vaddvq_s64(v24);
    unint64_t v27 = v26 + v13;
    if (v26 <= 0x80 && v15 >= v27)
    {
      int64x2_t v39 = vaddq_s64(vzip1q_s64((int64x2_t)0, v25), vdupq_n_s64(v13 & 0x3C));
      unsigned int v40 = (int64x2_t *)(v12 + ((v13 >> 3) & 8));
      int8x16_t v29 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v40, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v39)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v40->i64[0], 0), (uint64x2_t)vnegq_s64(v39)));
      if (v26 + (v13 & 0x3C) < 0x81)
      {
        int v30 = 0;
      }
      else
      {
        int v30 = 0;
        int8x16_t v29 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v40[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v39)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v40[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v39))), v29);
      }
      unint64_t v13 = v27;
    }
    else
    {
      int8x16_t v29 = 0uLL;
      int v30 = 1;
    }
    int32x2_t v41 = vzip1_s32(*(int32x2_t *)v22.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v22, v22, 8uLL));
    v42.i64[0] = v41.u32[0];
    v42.i64[1] = v41.u32[1];
    int64x2_t v43 = (int64x2_t)vshlq_u64((uint64x2_t)v29, (uint64x2_t)vnegq_s64(v42));
    *(int32x2_t *)v29.i8 = vmovn_s64((int64x2_t)v29);
    *(int32x2_t *)v43.i8 = vmovn_s64(v43);
    int8x16_t v44 = (int8x16_t)vzip1q_s32((int32x4_t)v29, (int32x4_t)v43);
    int16x8_t v45 = (int16x8_t)vshlq_u32((uint32x4_t)v44, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v21.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)))));
    *(int16x4_t *)v44.i8 = vmovn_s32((int32x4_t)v44);
    *(int16x4_t *)v45.i8 = vmovn_s32((int32x4_t)v45);
    int8x16_t v46 = (int8x16_t)vzip1q_s16((int16x8_t)v44, v45);
    *(int8x8_t *)v46.i8 = vzip1_s8(vmovn_s16((int16x8_t)v46), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v46, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v20.i8, *(int8x8_t *)v16.i8))))));
    v44.i64[0] = 0x101010101010101;
    v44.i64[1] = 0x101010101010101;
    int8x16_t v47 = vshlq_s8(v44, v20);
    v44.i64[0] = -1;
    v44.i64[1] = -1;
    v47.i64[0] = vandq_s8(v46, vaddq_s8(v47, v44)).u64[0];
    int8x16_t v48 = vdupq_lane_s8(*(int8x8_t *)v47.i8, 0);
    int8x16_t v49 = vdupq_lane_s8(*(int8x8_t *)v47.i8, 1);
    int8x16_t v50 = vdupq_lane_s8(*(int8x8_t *)v47.i8, 2);
    int8x16_t v51 = vdupq_lane_s8(*(int8x8_t *)v47.i8, 3);
    int8x16_t v36 = vsubq_s8(v19, v48);
    int8x16_t v34 = vsubq_s8(v19, v49);
    int8x16_t v33 = vsubq_s8(v19, v50);
    int8x16_t v32 = vsubq_s8(v19, v51);
    int8x16_t v38 = vceqzq_s8(v48);
    int8x16_t v37 = vceqzq_s8(v49);
    int8x16_t v35 = vceqzq_s8(v50);
    int8x16_t v31 = vceqzq_s8(v51);
  }
  v52.i64[0] = 0x707070707070707;
  v52.i64[1] = 0x707070707070707;
  int8x16_t v53 = 0uLL;
  int8x16_t v54 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v16, v52), (int8x16_t)0, 0xFuLL), v19);
  int8x16_t v55 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v54, v54));
  int8x16_t v56 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v55, (int16x8_t)v55));
  unint64_t v57 = vpaddq_s32((int32x4_t)v56, (int32x4_t)v56).u64[0];
  v58.i64[0] = v57;
  v58.i64[1] = HIDWORD(v57);
  int64x2_t v59 = v58;
  unint64_t v60 = vaddvq_s64(v58);
  unint64_t v61 = v60 + v13;
  if (v60 <= 0x80 && v15 >= v61)
  {
    unint64_t v63 = v13 & 0x3F;
    int64x2_t v64 = vaddq_s64(vzip1q_s64((int64x2_t)0, v59), vdupq_n_s64(v63));
    unsigned int v65 = (int64x2_t *)(v12 + 8 * (v13 >> 6));
    int8x16_t v53 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v65, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v64)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v65->i64[0], 0), (uint64x2_t)vnegq_s64(v64)));
    if (v60 + v63 >= 0x81) {
      int8x16_t v53 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v65[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v64)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v65[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v64))), v53);
    }
    unint64_t v13 = v61;
  }
  else
  {
    int v30 = 1;
  }
  int8x16_t v66 = vandq_s8(v36, (int8x16_t)xmmword_242EA7380);
  int v67 = (a4 >> 5) & 3;
  if (v67 == 2)
  {
    unint64_t v68 = v13 + 4;
    if (v15 >= v13 + 4)
    {
      uint64_t v73 = *(void *)(v12 + 8 * (v13 >> 6)) >> v13;
      if ((v13 & 0x3F) >= 0x3D) {
        v73 |= *(void *)(v12 + 8 * (v13 >> 6) + 8) << -(v13 & 0x3F);
      }
      unint64_t v72 = v13 + 8;
      unsigned int v69 = (int)(v73 << 28) >> 28;
      if (v15 >= v13 + 8)
      {
        uint64_t v70 = *(void *)(v12 + 8 * (v68 >> 6)) >> v68;
        if ((v68 & 0x3F) >= 0x3D) {
          v70 |= *(void *)(v12 + 8 * (v68 >> 6) + 8) << -(v68 & 0x3F);
        }
        unsigned int v71 = (int)(v70 << 28) >> 28;
        goto LABEL_40;
      }
    }
    else
    {
      unsigned int v69 = 0;
      unint64_t v68 = v13;
    }
    unsigned int v71 = 0;
    int v30 = 1;
    unint64_t v72 = v68;
  }
  else
  {
    unsigned int v71 = 0;
    unsigned int v69 = 0;
    unint64_t v72 = v13;
  }
LABEL_40:
  int8x16_t v74 = vandq_s8(v34, (int8x16_t)xmmword_242EA7390);
  v66.i8[0] = 0;
  int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v66, v66));
  int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
  unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
  v78.i64[0] = v77;
  v78.i64[1] = HIDWORD(v77);
  int64x2_t v79 = v78;
  unint64_t v80 = vaddvq_s64(v78);
  unint64_t v81 = v80 + v72;
  int8x16_t v82 = 0uLL;
  if (v80 <= 0x80 && v15 >= v81)
  {
    unint64_t v85 = v72 & 0x3F;
    int64x2_t v86 = vaddq_s64(vzip1q_s64((int64x2_t)0, v79), vdupq_n_s64(v85));
    unint64_t v87 = (int64x2_t *)(v12 + 8 * (v72 >> 6));
    int8x16_t v84 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v87, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v86)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v87->i64[0], 0), (uint64x2_t)vnegq_s64(v86)));
    if (v80 + v85 >= 0x81) {
      int8x16_t v84 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v87[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v86)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v87[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v86))), v84);
    }
    unint64_t v72 = v81;
  }
  else
  {
    int v30 = 1;
    int8x16_t v84 = 0uLL;
  }
  int8x16_t v88 = vandq_s8(v33, (int8x16_t)xmmword_242EA7390);
  int8x16_t v89 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
  int8x16_t v90 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v89, (int16x8_t)v89));
  unint64_t v91 = vpaddq_s32((int32x4_t)v90, (int32x4_t)v90).u64[0];
  v92.i64[0] = v91;
  v92.i64[1] = HIDWORD(v91);
  int64x2_t v93 = v92;
  unint64_t v94 = vaddvq_s64(v92);
  if (v94 < 0x81)
  {
    int32x2_t v95 = vzip1_s32(*(int32x2_t *)v90.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v90, v90, 8uLL));
    v96.i64[0] = v95.u32[0];
    v96.i64[1] = v95.u32[1];
    int64x2_t v97 = v96;
    int32x4_t v98 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v89.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL)));
    int16x8_t v99 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v74, v74, 8uLL)));
    unint64_t v100 = v94 + v72;
    if (v15 >= v94 + v72)
    {
      unint64_t v101 = v72 & 0x3F;
      int64x2_t v102 = vaddq_s64(vzip1q_s64((int64x2_t)0, v93), vdupq_n_s64(v101));
      unint64_t v103 = (int64x2_t *)(v12 + 8 * (v72 >> 6));
      int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v103, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103->i64[0], 0), (uint64x2_t)vnegq_s64(v102)));
      if (v94 + v101 >= 0x81) {
        int8x16_t v82 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v103[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v102))), v82);
      }
      unint64_t v72 = v100;
    }
    else
    {
      int v30 = 1;
    }
    int64x2_t v104 = (int64x2_t)vshlq_u64((uint64x2_t)v82, (uint64x2_t)vnegq_s64(v97));
    *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v82);
    *(int32x2_t *)v104.i8 = vmovn_s64(v104);
    int16x8_t v105 = (int16x8_t)vzip1q_s32((int32x4_t)v82, (int32x4_t)v104);
    int16x8_t v106 = (int16x8_t)vshlq_u32((uint32x4_t)v105, (uint32x4_t)vnegq_s32(v98));
    *(int16x4_t *)v105.i8 = vmovn_s32((int32x4_t)v105);
    *(int16x4_t *)v106.i8 = vmovn_s32((int32x4_t)v106);
    int8x16_t v107 = (int8x16_t)vzip1q_s16(v105, v106);
    int8x16_t v108 = (int8x16_t)vshlq_u16((uint16x8_t)v107, (uint16x8_t)vnegq_s16(v99));
    *(int8x8_t *)v107.i8 = vmovn_s16((int16x8_t)v107);
    *(int8x8_t *)v108.i8 = vmovn_s16((int16x8_t)v108);
    int8x16_t v82 = vzip1q_s8(v107, v108);
  }
  else
  {
    int v30 = 1;
  }
  int8x16_t v109 = vandq_s8(v32, (int8x16_t)xmmword_242EA7390);
  int8x16_t v110 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v88, v88));
  int8x16_t v111 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v110, (int16x8_t)v110));
  unint64_t v112 = vpaddq_s32((int32x4_t)v111, (int32x4_t)v111).u64[0];
  v113.i64[0] = v112;
  v113.i64[1] = HIDWORD(v112);
  int64x2_t v114 = v113;
  unint64_t v115 = vaddvq_s64(v113);
  if (v115 <= 0x80)
  {
    int32x2_t v117 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
    v118.i64[0] = v117.u32[0];
    v118.i64[1] = v117.u32[1];
    int64x2_t v119 = v118;
    int32x4_t v120 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v110.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)));
    int16x8_t v121 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v88.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL)));
    unint64_t v122 = v115 + v72;
    if (v15 >= v115 + v72)
    {
      unint64_t v124 = v72 & 0x3F;
      int64x2_t v125 = vaddq_s64(vzip1q_s64((int64x2_t)0, v114), vdupq_n_s64(v124));
      unint64_t v126 = (int64x2_t *)(v12 + 8 * (v72 >> 6));
      int8x16_t v123 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v126, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126->i64[0], 0), (uint64x2_t)vnegq_s64(v125)));
      if (v115 + v124 >= 0x81) {
        int8x16_t v123 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v126[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v125))), v123);
      }
      unint64_t v72 = v122;
    }
    else
    {
      int8x16_t v123 = 0uLL;
      int v30 = 1;
    }
    int64x2_t v127 = (int64x2_t)vshlq_u64((uint64x2_t)v123, (uint64x2_t)vnegq_s64(v119));
    *(int32x2_t *)v123.i8 = vmovn_s64((int64x2_t)v123);
    *(int32x2_t *)v127.i8 = vmovn_s64(v127);
    int16x8_t v128 = (int16x8_t)vzip1q_s32((int32x4_t)v123, (int32x4_t)v127);
    int16x8_t v129 = (int16x8_t)vshlq_u32((uint32x4_t)v128, (uint32x4_t)vnegq_s32(v120));
    *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v128);
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    int8x16_t v130 = (int8x16_t)vzip1q_s16(v128, v129);
    int8x16_t v131 = (int8x16_t)vshlq_u16((uint16x8_t)v130, (uint16x8_t)vnegq_s16(v121));
    *(int8x8_t *)v130.i8 = vmovn_s16((int16x8_t)v130);
    *(int8x8_t *)v131.i8 = vmovn_s16((int16x8_t)v131);
    int8x16_t v116 = vzip1q_s8(v130, v131);
  }
  else
  {
    int v30 = 1;
    int8x16_t v116 = 0uLL;
  }
  int8x16_t v132 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v109, v109));
  int8x16_t v133 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v132, (int16x8_t)v132));
  unint64_t v134 = vpaddq_s32((int32x4_t)v133, (int32x4_t)v133).u64[0];
  v135.i64[0] = v134;
  v135.i64[1] = HIDWORD(v134);
  int64x2_t v136 = v135;
  unint64_t v137 = vaddvq_s64(v135);
  if (v137 > 0x80 || v15 < v137 + v72) {
    goto LABEL_70;
  }
  int64x2_t v138 = vaddq_s64(vzip1q_s64((int64x2_t)0, v136), vdupq_n_s64(v72 & 0x3F));
  uint64_t v139 = (int64x2_t *)(v12 + 8 * (v72 >> 6));
  int8x16_t v140 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v139, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v138)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139->i64[0], 0), (uint64x2_t)vnegq_s64(v138)));
  if (v137 + (v72 & 0x3F) >= 0x81) {
    int8x16_t v140 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v138)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v139[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v138))), v140);
  }
  if (v30 || (uint64_t v4 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v4) - (v137 + v72) >= 9))
  {
LABEL_70:
    uint64_t v4 = 0;
    v197 |= 255 << (8 * ((&v197 + 7) & 7u));
    goto LABEL_71;
  }
  int32x2_t v142 = vzip1_s32(*(int32x2_t *)v56.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v56, v56, 8uLL));
  int32x2_t v143 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
  v144.i64[0] = v142.u32[0];
  v144.i64[1] = v142.u32[1];
  int64x2_t v145 = v144;
  v144.i64[0] = v143.u32[0];
  v144.i64[1] = v143.u32[1];
  int64x2_t v146 = (int64x2_t)vshlq_u64((uint64x2_t)v53, (uint64x2_t)vnegq_s64(v145));
  int64x2_t v147 = (int64x2_t)vshlq_u64((uint64x2_t)v84, (uint64x2_t)vnegq_s64(v144));
  *(int32x2_t *)v53.i8 = vmovn_s64((int64x2_t)v53);
  *(int32x2_t *)v146.i8 = vmovn_s64(v146);
  *(int32x2_t *)v84.i8 = vmovn_s64((int64x2_t)v84);
  *(int32x2_t *)v147.i8 = vmovn_s64(v147);
  int16x8_t v148 = (int16x8_t)vzip1q_s32((int32x4_t)v53, (int32x4_t)v146);
  int16x8_t v149 = (int16x8_t)vzip1q_s32((int32x4_t)v84, (int32x4_t)v147);
  int16x8_t v150 = (int16x8_t)vshlq_u32((uint32x4_t)v148, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v55.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v55, v55, 8uLL)))));
  int16x8_t v151 = (int16x8_t)vshlq_u32((uint32x4_t)v149, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
  *(int16x4_t *)v148.i8 = vmovn_s32((int32x4_t)v148);
  *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v150);
  *(int16x4_t *)v149.i8 = vmovn_s32((int32x4_t)v149);
  *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v151);
  int8x16_t v152 = (int8x16_t)vzip1q_s16(v148, v150);
  int8x16_t v153 = (int8x16_t)vzip1q_s16(v149, v151);
  int8x16_t v154 = (int8x16_t)vshlq_u16((uint16x8_t)v152, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v54.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v54, v54, 8uLL)))));
  int8x16_t v155 = (int8x16_t)vshlq_u16((uint16x8_t)v153, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v66.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL)))));
  *(int8x8_t *)v152.i8 = vmovn_s16((int16x8_t)v152);
  *(int8x8_t *)v154.i8 = vmovn_s16((int16x8_t)v154);
  *(int8x8_t *)v153.i8 = vmovn_s16((int16x8_t)v153);
  *(int8x8_t *)v155.i8 = vmovn_s16((int16x8_t)v155);
  v156.i64[0] = 0x808080808080808;
  v156.i64[1] = 0x808080808080808;
  v157.i64[0] = 0x808080808080808;
  v157.i64[1] = 0x808080808080808;
  unint64_t v158 = v14 >> 4;
  int8x16_t v159 = vzip1q_s8(v152, v154);
  v154.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v154.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v160 = vzip1q_s8(v153, v155);
  v155.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v155.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v161 = vsubq_s8(v157, v74);
  *(int32x2_t *)v149.i8 = vzip1_s32(*(int32x2_t *)v133.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v133, v133, 8uLL));
  v162.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v162.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v163.i64[0] = 0x808080808080808;
  v163.i64[1] = 0x808080808080808;
  int8x16_t v164 = vaddq_s8(v74, v155);
  v144.i64[0] = v149.u32[0];
  v144.i64[1] = v149.u32[1];
  int8x16_t v165 = vshlq_s8(vshlq_s8(v159, vsubq_s8(v156, v54)), vaddq_s8(v54, v154));
  int8x16_t v166 = vshlq_s8(vshlq_s8(v160, vsubq_s8(v157, v66)), vaddq_s8(v66, v155));
  int8x16_t v167 = vshlq_s8(vshlq_s8(v82, v161), v164);
  int8x16_t v168 = vshlq_s8(vshlq_s8(v116, vsubq_s8(v157, v88)), vaddq_s8(v88, v155));
  int64x2_t v169 = (int64x2_t)vshlq_u64((uint64x2_t)v140, (uint64x2_t)vnegq_s64(v144));
  *(int32x2_t *)v164.i8 = vmovn_s64((int64x2_t)v140);
  *(int32x2_t *)v169.i8 = vmovn_s64(v169);
  int16x8_t v170 = (int16x8_t)vzip1q_s32((int32x4_t)v164, (int32x4_t)v169);
  int16x8_t v171 = (int16x8_t)vshlq_u32((uint32x4_t)v170, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v132.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v132, v132, 8uLL)))));
  *(int16x4_t *)v170.i8 = vmovn_s32((int32x4_t)v170);
  *(int16x4_t *)v171.i8 = vmovn_s32((int32x4_t)v171);
  int8x16_t v172 = (int8x16_t)vzip1q_s16(v170, v171);
  int8x16_t v173 = (int8x16_t)vshlq_u16((uint16x8_t)v172, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v109.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v109, v109, 8uLL)))));
  *(int8x8_t *)v172.i8 = vmovn_s16((int16x8_t)v172);
  *(int8x8_t *)v173.i8 = vmovn_s16((int16x8_t)v173);
  int8x16_t v174 = vshlq_s8(vshlq_s8(vzip1q_s8(v172, v173), vsubq_s8(v163, v109)), vaddq_s8(v109, v162));
  if (v67 == 2)
  {
    v175.i64[0] = 0xFFFF0000FFFF0000;
    v175.i64[1] = 0xFFFF0000FFFF0000;
    int8x16_t v176 = vmlaq_s8(vandq_s8(vdupq_n_s8(v71), v175), vdupq_n_s8(v69), (int8x16_t)xmmword_242EA73A0);
    int8x16_t v166 = vaddq_s8(v166, v176);
    int8x16_t v167 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v71), v176), v167);
    int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v69), v176), v168);
    int8x16_t v174 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v69 + 2 * v71), v176), v174);
  }
  int8x8_t v177 = (int8x8_t)vdupq_n_s8(v158).u64[0];
  int8x16_t v178 = vaddq_s8(vandq_s8(v165, v38), v166);
  int8x16_t v179 = vdupq_lane_s8(*(int8x8_t *)v165.i8, 0);
  int8x16_t v180 = vsubq_s8(v178, vandq_s8(v179, v38));
  int8x16_t v181 = vsubq_s8(v167, vandq_s8(v179, v37));
  int8x16_t v182 = vsubq_s8(v168, vandq_s8(v179, v35));
  int8x16_t v183 = vsubq_s8(v174, vandq_s8(v179, v31));
  v184.i64[0] = 0x101010101010101;
  v184.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v18, v184)))
  {
    int8x16_t v185 = v180;
    v185.i8[0] = v180.i8[7];
    v185.i8[7] = v180.i8[0];
    int8x16_t v186 = vnegq_s8(vandq_s8(v16, v184));
    int8x16_t v187 = vbslq_s8(v186, v185, v180);
    int8x16_t v188 = vaddq_s8(v187, vandq_s8(vqtbl1q_s8(v187, (int8x16_t)xmmword_242EA73B0), v186));
    v180.i64[0] = vaddq_s8(v188, vandq_s8(vqtbl1q_s8(v188, (int8x16_t)xmmword_242EA73C0), v186)).u64[0];
    int8x16_t v189 = vaddq_s8(vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73D0), v186), v181);
    v181.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v189, (int8x16_t)xmmword_242EA73E0), v186), v189).u64[0];
    int8x16_t v190 = vaddq_s8(vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73F0), v186), v182);
    v182.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v190, (int8x16_t)xmmword_242EA7400), v186), v190).u64[0];
    int8x16_t v191 = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA7410), v186), v183);
    v183.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v191, (int8x16_t)xmmword_242EA7420), v186), v191).u64[0];
  }
  int16x4_t v192 = (int16x4_t)vadd_s8(v177, *(int8x8_t *)v180.i8);
  int16x4_t v193 = (int16x4_t)vadd_s8(*(int8x8_t *)v182.i8, v177);
  *a1 = (int8x8_t)vuzp1_s16(v192, v193);
  *(int16x4_t *)((char *)a1 + a2) = vuzp2_s16(v192, v193);
  int16x4_t v194 = (int16x4_t *)((char *)a1 + 2 * a2);
  int16x4_t v195 = (int16x4_t)vadd_s8(*(int8x8_t *)v181.i8, v177);
  int16x4_t v196 = (int16x4_t)vadd_s8(*(int8x8_t *)v183.i8, v177);
  *int16x4_t v194 = vuzp1_s16(v195, v196);
  *(int16x4_t *)((char *)v194 + a2) = vuzp2_s16(v195, v196);
  return v4;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int32x4_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  unint64_t v7 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = 8 * (a3 & 7);
  unint64_t v9 = v8 + 14;
  uint64_t v10 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v8;
  if (v8 >= 0x33) {
    v10 |= *(void *)(v7 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v11 = 4 * v10;
  uint32x2_t v12 = (uint32x2_t)vdup_n_s32(v11);
  a5.i32[0] = v11;
  a7.i32[0] = a4 >> 6;
  v13.i32[0] = vorr_s8(a5, a7).u32[0];
  v13.i32[1] = vshr_n_u32(v12, 5uLL).i32[1];
  int16x4_t v14 = (int16x4_t)vand_s8(v13, (int8x8_t)0x1F0000001FLL);
  v14.i8[1] = v14.i8[4];
  int16x4_t v15 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v12, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v15.i8[1] = v15.i8[4];
  unint64_t v16 = v8 + 30;
  unint64_t v17 = v9 >> 6;
  unint64_t v18 = v9 & 0x3E;
  uint64_t v19 = *(void *)(v7 + 8 * (v9 >> 6)) >> (v9 & 0x3E);
  if (v18 >= 0x31) {
    v19 |= *(void *)(v7 + 8 * v17 + 8) << -(char)v18;
  }
  unint64_t v20 = (8 * (a3 & 7)) | 0x200;
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(v14, 0);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(v15, 0);
  v23.i64[0] = 0x303030303030303;
  v23.i64[1] = 0x303030303030303;
  int8x16_t v24 = vandq_s8(v21, v23);
  int8x16_t v25 = vbicq_s8(v22, vceqq_s8(v24, v23));
  v23.i64[0] = 0x202020202020202;
  v23.i64[1] = 0x202020202020202;
  int8x16_t v26 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v21.i8), (int8x8_t)0x4000400040004)))), v23);
  if (vmaxvq_s8(v26) < 1)
  {
    int v36 = 0;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    int8x16_t v38 = v25;
    int8x16_t v39 = v25;
    int8x16_t v40 = v25;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = v25;
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v44.i64[0] = -1;
    v44.i64[1] = -1;
  }
  else
  {
    int8x16_t v27 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v26, v26));
    int8x16_t v28 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v27, (int16x8_t)v27));
    unint64_t v29 = vpaddq_s32((int32x4_t)v28, (int32x4_t)v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    int64x2_t v31 = v30;
    unint64_t v32 = vaddvq_s64(v30);
    unint64_t v33 = v16 + v32;
    if (v32 <= 0x80 && v20 >= v33)
    {
      unint64_t v45 = v16 & 0x3E;
      int64x2_t v46 = vaddq_s64(vdupq_n_s64(v45), vzip1q_s64((int64x2_t)0, v31));
      int8x16_t v47 = (int64x2_t *)(v7 + ((v16 >> 3) & 8));
      int8x16_t v35 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v47, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47->i64[0], 0), (uint64x2_t)vnegq_s64(v46)));
      if (v45 + v32 < 0x81)
      {
        int v36 = 0;
      }
      else
      {
        int v36 = 0;
        int8x16_t v35 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v47[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v46))), v35);
      }
      unint64_t v16 = v33;
    }
    else
    {
      int8x16_t v35 = 0uLL;
      int v36 = 1;
    }
    int32x2_t v48 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v28, v28, 8uLL));
    v49.i64[0] = v48.u32[0];
    v49.i64[1] = v48.u32[1];
    int64x2_t v50 = (int64x2_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vnegq_s64(v49));
    *(int32x2_t *)v35.i8 = vmovn_s64((int64x2_t)v35);
    *(int32x2_t *)v50.i8 = vmovn_s64(v50);
    int8x16_t v51 = (int8x16_t)vzip1q_s32((int32x4_t)v35, (int32x4_t)v50);
    int16x8_t v52 = (int16x8_t)vshlq_u32((uint32x4_t)v51, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v27, v27, 8uLL)))));
    *(int16x4_t *)v51.i8 = vmovn_s32((int32x4_t)v51);
    *(int16x4_t *)v52.i8 = vmovn_s32((int32x4_t)v52);
    int8x16_t v53 = (int8x16_t)vzip1q_s16((int16x8_t)v51, v52);
    *(int8x8_t *)v53.i8 = vzip1_s8(vmovn_s16((int16x8_t)v53), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v53, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v26.i8, *(int8x8_t *)v21.i8))))));
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    int8x16_t v54 = vshlq_s8(v51, v26);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54.i64[0] = vqtbl1q_s8(vandq_s8(v53, vaddq_s8(v54, v51)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v55 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 1);
    int8x16_t v57 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 2);
    int8x16_t v58 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 3);
    int8x16_t v42 = vsubq_s8(v25, v55);
    int8x16_t v40 = vsubq_s8(v25, v56);
    int8x16_t v39 = vsubq_s8(v25, v57);
    int8x16_t v38 = vsubq_s8(v25, v58);
    int8x16_t v44 = vceqzq_s8(v55);
    int8x16_t v43 = vceqzq_s8(v56);
    int8x16_t v41 = vceqzq_s8(v57);
    int8x16_t v37 = vceqzq_s8(v58);
  }
  v59.i64[0] = 0x808080808080808;
  v59.i64[1] = 0x808080808080808;
  int8x16_t v60 = 0uLL;
  int8x16_t v61 = vandq_s8(vextq_s8(vtstq_s8(v21, v59), (int8x16_t)0, 0xEuLL), v25);
  int8x16_t v62 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v61, v61));
  int8x16_t v63 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v62, (int16x8_t)v62));
  unint64_t v64 = vpaddq_s32((int32x4_t)v63, (int32x4_t)v63).u64[0];
  v65.i64[0] = v64;
  v65.i64[1] = HIDWORD(v64);
  int64x2_t v66 = v65;
  unint64_t v67 = vaddvq_s64(v65);
  unint64_t v68 = v16 + v67;
  if (v67 <= 0x80 && v20 >= v68)
  {
    unint64_t v70 = v16 & 0x3F;
    int64x2_t v71 = vaddq_s64(vdupq_n_s64(v70), vzip1q_s64((int64x2_t)0, v66));
    unint64_t v72 = (int64x2_t *)(v7 + 8 * (v16 >> 6));
    int8x16_t v60 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v72, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72->i64[0], 0), (uint64x2_t)vnegq_s64(v71)));
    if (v70 + v67 >= 0x81) {
      int8x16_t v60 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), v60);
    }
    unint64_t v16 = v68;
  }
  else
  {
    int v36 = 1;
  }
  int v73 = v21.i8[0] & 3;
  if (v73 == 2)
  {
    BOOL v74 = v20 < v16 + 4;
    unint64_t v75 = v16 + 8;
    if (v20 >= v16 + 4) {
      v16 += 4;
    }
    if (v75 > v20 || v74) {
      int v36 = 1;
    }
    else {
      v16 += 4;
    }
  }
  int8x16_t v77 = 0uLL;
  int8x16_t v78 = vextq_s8((int8x16_t)0, v42, 0xEuLL);
  int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v78, v78));
  int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
  unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v16 + v84;
  if (v84 <= 0x80 && v20 >= v85)
  {
    unint64_t v88 = v16 & 0x3F;
    int64x2_t v89 = vaddq_s64(vdupq_n_s64(v88), vzip1q_s64((int64x2_t)0, v83));
    int8x16_t v90 = (int64x2_t *)(v7 + 8 * (v16 >> 6));
    int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v88 + v84 >= 0x81) {
      int8x16_t v87 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), v87);
    }
    unint64_t v16 = v85;
  }
  else
  {
    int v36 = 1;
    int8x16_t v87 = 0uLL;
  }
  int8x16_t v91 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v40, v40));
  int8x16_t v92 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v91, (int16x8_t)v91));
  unint64_t v93 = vpaddq_s32((int32x4_t)v92, (int32x4_t)v92).u64[0];
  v94.i64[0] = v93;
  v94.i64[1] = HIDWORD(v93);
  int64x2_t v95 = v94;
  unint64_t v96 = vaddvq_s64(v94);
  if (v96 < 0x81)
  {
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v92.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = v98;
    int32x4_t v100 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v91.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v91, v91, 8uLL)));
    int16x8_t v101 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v40.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
    unint64_t v102 = v16 + v96;
    if (v20 >= v16 + v96)
    {
      unint64_t v103 = v16 & 0x3F;
      int64x2_t v104 = vaddq_s64(vdupq_n_s64(v103), vzip1q_s64((int64x2_t)0, v95));
      int16x8_t v105 = (int64x2_t *)(v7 + 8 * (v16 >> 6));
      int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
      if (v103 + v96 >= 0x81) {
        int8x16_t v77 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v77);
      }
      unint64_t v16 = v102;
    }
    else
    {
      int v36 = 1;
    }
    int64x2_t v106 = (int64x2_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v99));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v106.i8 = vmovn_s64(v106);
    int16x8_t v107 = (int16x8_t)vzip1q_s32((int32x4_t)v77, (int32x4_t)v106);
    int16x8_t v108 = (int16x8_t)vshlq_u32((uint32x4_t)v107, (uint32x4_t)vnegq_s32(v100));
    *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v107);
    *(int16x4_t *)v108.i8 = vmovn_s32((int32x4_t)v108);
    int8x16_t v109 = (int8x16_t)vzip1q_s16(v107, v108);
    int8x16_t v110 = (int8x16_t)vshlq_u16((uint16x8_t)v109, (uint16x8_t)vnegq_s16(v101));
    *(int8x8_t *)v109.i8 = vmovn_s16((int16x8_t)v109);
    *(int8x8_t *)v110.i8 = vmovn_s16((int16x8_t)v110);
    int8x16_t v77 = vzip1q_s8(v109, v110);
  }
  else
  {
    int v36 = 1;
  }
  int8x16_t v111 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v39, v39));
  int8x16_t v112 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v111, (int16x8_t)v111));
  unint64_t v113 = vpaddq_s32((int32x4_t)v112, (int32x4_t)v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v116 <= 0x80)
  {
    int32x2_t v118 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v112, v112, 8uLL));
    v119.i64[0] = v118.u32[0];
    v119.i64[1] = v118.u32[1];
    int64x2_t v120 = v119;
    int32x4_t v121 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL)));
    int16x8_t v122 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)));
    unint64_t v123 = v16 + v116;
    if (v20 >= v16 + v116)
    {
      unint64_t v125 = v16 & 0x3F;
      int64x2_t v126 = vaddq_s64(vdupq_n_s64(v125), vzip1q_s64((int64x2_t)0, v115));
      int64x2_t v127 = (int64x2_t *)(v7 + 8 * (v16 >> 6));
      int8x16_t v124 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
      if (v125 + v116 >= 0x81) {
        int8x16_t v124 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), v124);
      }
      unint64_t v16 = v123;
    }
    else
    {
      int8x16_t v124 = 0uLL;
      int v36 = 1;
    }
    int64x2_t v128 = (int64x2_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vnegq_s64(v120));
    *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
    *(int32x2_t *)v128.i8 = vmovn_s64(v128);
    int16x8_t v129 = (int16x8_t)vzip1q_s32((int32x4_t)v124, (int32x4_t)v128);
    int16x8_t v130 = (int16x8_t)vshlq_u32((uint32x4_t)v129, (uint32x4_t)vnegq_s32(v121));
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    int8x16_t v131 = (int8x16_t)vzip1q_s16(v129, v130);
    int8x16_t v132 = (int8x16_t)vshlq_u16((uint16x8_t)v131, (uint16x8_t)vnegq_s16(v122));
    *(int8x8_t *)v131.i8 = vmovn_s16((int16x8_t)v131);
    *(int8x8_t *)v132.i8 = vmovn_s16((int16x8_t)v132);
    int8x16_t v117 = vzip1q_s8(v131, v132);
  }
  else
  {
    int v36 = 1;
    int8x16_t v117 = 0uLL;
  }
  int8x16_t v133 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v38, v38));
  int8x16_t v134 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v133, (int16x8_t)v133));
  unint64_t v135 = vpaddq_s32((int32x4_t)v134, (int32x4_t)v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  if (v138 > 0x80 || v20 < v16 + v138) {
    goto LABEL_64;
  }
  int64x2_t v139 = vaddq_s64(vdupq_n_s64(v16 & 0x3F), vzip1q_s64((int64x2_t)0, v137));
  int8x16_t v140 = (int64x2_t *)(v7 + 8 * (v16 >> 6));
  int8x16_t v141 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
  if ((v16 & 0x3F) + v138 >= 0x81) {
    int8x16_t v141 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), v141);
  }
  if (v36 || (uint64_t v142 = (a4 & 0x3F) + 1, v20 + 8 * v142 - (v16 + v138) - 512 >= 9))
  {
LABEL_64:
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v211;
LABEL_65:
    *(void *)(v143 & 0xFFFFFFFFFFFFFFF8) |= 255 << ((8 * v143) & 0x30);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int64x2_t v144 = (uint64_t *)((char *)a1->i64 + a2);
    int64x2_t v145 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *int64x2_t v144 = 0;
    v144[1] = 0;
    int64x2_t v146 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *int64x2_t v145 = 0;
    v145[1] = 0;
    *int64x2_t v146 = 0;
    v146[1] = 0;
    return v142;
  }
  if (v73 == 2)
  {
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v212;
    goto LABEL_65;
  }
  int32x2_t v148 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL));
  int32x2_t v149 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
  v150.i64[0] = v148.u32[0];
  v150.i64[1] = v148.u32[1];
  int64x2_t v151 = v150;
  v150.i64[0] = v149.u32[0];
  v150.i64[1] = v149.u32[1];
  int16x4_t v152 = (int16x4_t)vextq_s8(v79, v79, 8uLL).u64[0];
  int64x2_t v153 = (int64x2_t)vshlq_u64((uint64x2_t)v60, (uint64x2_t)vnegq_s64(v151));
  int64x2_t v154 = (int64x2_t)vshlq_u64((uint64x2_t)v87, (uint64x2_t)vnegq_s64(v150));
  *(int32x2_t *)v60.i8 = vmovn_s64((int64x2_t)v60);
  *(int32x2_t *)v153.i8 = vmovn_s64(v153);
  *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
  *(int32x2_t *)v154.i8 = vmovn_s64(v154);
  int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v60, (int32x4_t)v153);
  int16x8_t v156 = (int16x8_t)vzip1q_s32((int32x4_t)v87, (int32x4_t)v154);
  int16x8_t v157 = (int16x8_t)vshlq_u32((uint32x4_t)v155, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL)))));
  int16x8_t v158 = (int16x8_t)vshlq_u32((uint32x4_t)v156, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, v152))));
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  *(int16x4_t *)v157.i8 = vmovn_s32((int32x4_t)v157);
  *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v156);
  *(int16x4_t *)v158.i8 = vmovn_s32((int32x4_t)v158);
  int8x16_t v159 = (int8x16_t)vzip1q_s16(v155, v157);
  int8x16_t v160 = (int8x16_t)vzip1q_s16(v156, v158);
  int8x16_t v161 = (int8x16_t)vshlq_u16((uint16x8_t)v159, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
  int8x16_t v162 = (int8x16_t)vshlq_u16((uint16x8_t)v160, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int8x8_t *)v159.i8 = vmovn_s16((int16x8_t)v159);
  *(int8x8_t *)v161.i8 = vmovn_s16((int16x8_t)v161);
  *(int8x8_t *)v160.i8 = vmovn_s16((int16x8_t)v160);
  *(int8x8_t *)v162.i8 = vmovn_s16((int16x8_t)v162);
  v152.i32[0] = v19;
  v163.i64[0] = 0x808080808080808;
  v163.i64[1] = 0x808080808080808;
  int8x16_t v164 = vzip1q_s8(v159, v161);
  v161.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v161.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v165 = vsubq_s8(v59, v61);
  int8x16_t v166 = vzip1q_s8(v160, v162);
  v162.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v162.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v156.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v134, v134, 8uLL));
  v167.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v167.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v168.i64[0] = 0x808080808080808;
  v168.i64[1] = 0x808080808080808;
  v152.i8[1] = BYTE1(v19);
  int8x16_t v169 = vaddq_s8(v61, v161);
  int8x16_t v170 = vshlq_s8(v164, v165);
  int8x16_t v171 = vaddq_s8(v78, v162);
  int8x16_t v172 = vshlq_s8(v166, vsubq_s8(v163, v78));
  int8x16_t v173 = vshlq_s8(v117, vsubq_s8(v163, v39));
  v150.i64[0] = v156.u32[0];
  v150.i64[1] = v156.u32[1];
  int16x8_t v174 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)));
  int8x16_t v175 = vaddq_s8(v38, v167);
  int8x16_t v176 = vsubq_s8(v168, v38);
  int8x16_t v177 = (int8x16_t)vdupq_lane_s16(v152, 0);
  int8x16_t v178 = vshlq_s8(v170, v169);
  int8x16_t v179 = vshlq_s8(v172, v171);
  int64x2_t v180 = (int64x2_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vnegq_s64(v150));
  *(int32x2_t *)v172.i8 = vmovn_s64((int64x2_t)v141);
  *(int32x2_t *)v180.i8 = vmovn_s64(v180);
  int16x8_t v181 = (int16x8_t)vzip1q_s32((int32x4_t)v172, (int32x4_t)v180);
  int16x8_t v182 = (int16x8_t)vshlq_u32((uint32x4_t)v181, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v133, v133, 8uLL)))));
  *(int16x4_t *)v181.i8 = vmovn_s32((int32x4_t)v181);
  *(int16x4_t *)v182.i8 = vmovn_s32((int32x4_t)v182);
  int8x16_t v183 = (int8x16_t)vzip1q_s16(v181, v182);
  int8x16_t v184 = (int8x16_t)vshlq_u16((uint16x8_t)v183, (uint16x8_t)vnegq_s16(v174));
  *(int8x8_t *)v183.i8 = vmovn_s16((int16x8_t)v183);
  *(int8x8_t *)v184.i8 = vmovn_s16((int16x8_t)v184);
  int8x16_t v185 = vaddq_s8(vandq_s8(v178, v44), v179);
  int8x16_t v186 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v178.i8, 0);
  int8x16_t v187 = vsubq_s8(v185, vandq_s8(v44, v186));
  int8x16_t v188 = vsubq_s8(vshlq_s8(vshlq_s8(v77, vsubq_s8(v163, v40)), vaddq_s8(v40, v162)), vandq_s8(v43, v186));
  int8x16_t v189 = vsubq_s8(vshlq_s8(v173, vaddq_s8(v39, v162)), vandq_s8(v41, v186));
  int8x16_t v190 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8(v183, v184), v176), v175), vandq_s8(v37, v186));
  v191.i64[0] = 0x101010101010101;
  v191.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v24, v191)))
  {
    int8x16_t v192 = vandq_s8(v21, v191);
    int8x16_t v193 = v187;
    v193.i16[0] = v187.i16[7];
    v193.i16[7] = v187.i16[0];
    int8x16_t v194 = vnegq_s8(v192);
    int8x16_t v195 = vbslq_s8(v194, v193, v187);
    int8x16_t v196 = vaddq_s8(v195, vandq_s8(vqtbl1q_s8(v195, (int8x16_t)xmmword_242EA7480), v194));
    int8x16_t v187 = vaddq_s8(v196, vandq_s8(vqtbl1q_s8(v196, (int8x16_t)xmmword_242EA7490), v194));
    int8x16_t v197 = vaddq_s8(vandq_s8(vqtbl1q_s8(v188, (int8x16_t)xmmword_242EA74A0), v194), v188);
    int8x16_t v188 = vaddq_s8(vandq_s8(vqtbl1q_s8(v197, (int8x16_t)xmmword_242EA74B0), v194), v197);
    int8x16_t v198 = vaddq_s8(vandq_s8(vqtbl1q_s8(v189, (int8x16_t)xmmword_242EA74C0), v194), v189);
    int8x16_t v189 = vaddq_s8(vandq_s8(vqtbl1q_s8(v198, (int8x16_t)xmmword_242EA74D0), v194), v198);
    int8x16_t v199 = vaddq_s8(vandq_s8(vqtbl1q_s8(v190, (int8x16_t)xmmword_242EA74E0), v194), v190);
    int8x16_t v190 = vaddq_s8(vandq_s8(vqtbl1q_s8(v199, (int8x16_t)xmmword_242EA74F0), v194), v199);
  }
  int8x16_t v200 = vaddq_s8(v187, v177);
  int8x16_t v201 = vaddq_s8(v188, v177);
  int8x16_t v202 = vaddq_s8(v189, v177);
  int8x16_t v203 = vaddq_s8(v190, v177);
  v204.i64[0] = 0x1010101010101010;
  v204.i64[1] = 0x1010101010101010;
  int8x16_t v205 = vceqzq_s8(vandq_s8(v21, v204));
  int32x4_t v206 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v200, (int8x16_t)xmmword_242EA7500), v205), v200);
  int32x4_t v207 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v201, (int8x16_t)xmmword_242EA7500), v205), v201);
  int32x4_t v208 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v202, (int8x16_t)xmmword_242EA7500), v205), v202);
  int32x4_t v209 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v203, (int8x16_t)xmmword_242EA7500), v205), v203);
  *a1 = vuzp1q_s32(v206, v208);
  *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v206, v208);
  unint64_t v210 = (int32x4_t *)((char *)a1 + 2 * a2);
  *unint64_t v210 = vuzp1q_s32(v207, v209);
  *(int32x4_t *)((char *)v210 + a2) = vuzp2q_s32(v207, v209);
  return v142;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(int8x16_t *a1, char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  int32x4_t v6 = *(int32x4_t *)((char *)a3 + a4);
  int8x16_t v7 = (int8x16_t)vzip1q_s32(*a3, v6);
  int8x16_t v8 = (int8x16_t)vzip2q_s32(*a3, v6);
  unint64_t v9 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v10 = *(int32x4_t *)((char *)v9 + a4);
  int8x16_t v11 = (int8x16_t)vzip1q_s32(*v9, v10);
  int8x16_t v12 = (int8x16_t)vzip2q_s32(*v9, v10);
  int8x16_t v13 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v7.i8, 0);
  int8x16_t v416 = v7;
  int8x16_t v14 = vsubq_s8(v7, v13);
  int8x16_t v15 = vsubq_s8(v11, v13);
  int8x16_t v16 = vsubq_s8(v8, v13);
  int8x16_t v17 = vsubq_s8(v12, v13);
  int8x16_t v18 = vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7510);
  int8x16_t v19 = vpmaxq_s8(v18, v18);
  int8x16_t v20 = vpminq_s8(v18, v18);
  int8x16_t v21 = vpmaxq_s8(v19, v19);
  int8x16_t v22 = vpminq_s8(v20, v20);
  int8x16_t v23 = vpmaxq_s8(v21, v21);
  int8x16_t v24 = vpminq_s8(v22, v22);
  v25.i64[0] = 0x8080808080808080;
  v25.i64[1] = 0x8080808080808080;
  int8x16_t v26 = vmaxq_s8(v23, v25);
  v27.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v27.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v28 = vminq_s8(v24, v27);
  int8x16_t v29 = vzip1q_s8(v23, v24);
  v30.i64[0] = 0x808080808080808;
  v30.i64[1] = 0x808080808080808;
  int8x16_t v31 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v29)), vceqzq_s8(v29));
  int8x16_t v32 = vpmaxq_s8(v31, v31);
  int8x16_t v33 = vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7510);
  int8x16_t v34 = vpmaxq_s8(v33, v33);
  int8x16_t v35 = vpminq_s8(v33, v33);
  int8x16_t v36 = vpmaxq_s8(v34, v34);
  int8x16_t v37 = vpminq_s8(v35, v35);
  int8x16_t v38 = vpmaxq_s8(v36, v36);
  int8x16_t v39 = vpminq_s8(v37, v37);
  int8x16_t v40 = vmaxq_s8(v26, v38);
  int8x16_t v41 = vminq_s8(v28, v39);
  int8x16_t v42 = vzip1q_s8(v38, v39);
  int8x16_t v43 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v42)), vceqzq_s8(v42));
  int8x16_t v44 = vpmaxq_s8(v43, v43);
  int8x16_t v45 = vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7510);
  int8x16_t v46 = vpmaxq_s8(v45, v45);
  int8x16_t v47 = vpminq_s8(v45, v45);
  int8x16_t v48 = vpmaxq_s8(v46, v46);
  int8x16_t v49 = vpminq_s8(v47, v47);
  int8x16_t v50 = vpmaxq_s8(v48, v48);
  int8x16_t v51 = vpminq_s8(v49, v49);
  int8x16_t v52 = vmaxq_s8(v40, v50);
  int8x16_t v53 = vminq_s8(v41, v51);
  int8x16_t v54 = vzip1q_s8(v50, v51);
  int8x16_t v55 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v54)), vceqzq_s8(v54));
  int8x16_t v56 = vpmaxq_s8(v55, v55);
  int8x16_t v57 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v58 = vpmaxq_s8(v57, v57);
  int8x16_t v59 = vpminq_s8(v57, v57);
  int8x16_t v60 = vpmaxq_s8(v58, v58);
  int8x16_t v61 = vpminq_s8(v59, v59);
  int8x16_t v62 = vpmaxq_s8(v60, v60);
  int8x16_t v63 = vpminq_s8(v61, v61);
  int8x16_t v64 = vmaxq_s8(v52, v62);
  int8x16_t v65 = vminq_s8(v53, v63);
  int8x16_t v66 = vzip1q_s8(v62, v63);
  int8x16_t v67 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v66)), vceqzq_s8(v66));
  int8x16_t v68 = vpmaxq_s8(v67, v67);
  int8x16_t v69 = vmaxq_s8(vmaxq_s8(v32, v44), vmaxq_s8(v56, v68));
  int8x16_t v70 = vclzq_s8(vsubq_s8(v64, v65));
  int8x16_t v71 = vsubq_s8(v30, v70);
  int8x16_t v72 = vcgtq_s8(v69, v71);
  int8x16_t v73 = vbslq_s8(v72, v71, v69);
  if (!vmaxvq_s8(v73))
  {
    a1->i16[0] = a3->i16[0];
    char v170 = 1;
    unint64_t v171 = 2;
    goto LABEL_69;
  }
  int8x16_t v413 = v11;
  int8x16_t v414 = v12;
  int8x16_t v415 = v8;
  v74.i64[0] = -1;
  v74.i64[1] = -1;
  v75.i64[0] = 0x707070707070707;
  v75.i64[1] = 0x707070707070707;
  int8x16_t v417 = vandq_s8(vsubq_s8(vshlq_s8(v74, vsubq_s8(v75, v70)), v65), v72);
  v76.i64[0] = 0x303030303030303;
  v76.i64[1] = 0x303030303030303;
  int8x16_t v77 = vorrq_s8(vandq_s8(v72, v30), vandq_s8(vceqzq_s8(v73), v76));
  int8x16_t v78 = vmaxq_s8(vminq_s8(vsubq_s8(v73, v32), v76), (int8x16_t)0);
  int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v73, v44), v76), (int8x16_t)0);
  int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v73, v56), v76), (int8x16_t)0);
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v73, v68), v76), (int8x16_t)0);
  v82.i64[0] = 0x404040404040404;
  v82.i64[1] = 0x404040404040404;
  int8x16_t v83 = vorrq_s8(vbicq_s8(v82, vceqq_s8(vaddq_s8(v81, v80), vnegq_s8(vaddq_s8(v78, v79)))), v77);
  int8x16_t v84 = vsubq_s8(v14, vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7500));
  int8x16_t v85 = vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7500));
  int8x16_t v86 = vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500));
  int8x16_t v87 = v17;
  int8x16_t v88 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
  int8x16_t v89 = vqtbl1q_s8(v84, (int8x16_t)xmmword_242EA7510);
  int8x16_t v90 = vpmaxq_s8(v89, v89);
  int8x16_t v91 = vpminq_s8(v89, v89);
  int8x16_t v92 = vpmaxq_s8(v90, v90);
  int8x16_t v93 = vpminq_s8(v91, v91);
  int8x16_t v94 = vpmaxq_s8(v92, v92);
  int8x16_t v95 = vpminq_s8(v93, v93);
  int8x16_t v96 = vmaxq_s8(v94, v25);
  int8x16_t v97 = vminq_s8(v95, v27);
  int8x16_t v98 = vzip1q_s8(v94, v95);
  int8x16_t v99 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v98)), vceqzq_s8(v98));
  int8x16_t v100 = vpmaxq_s8(v99, v99);
  int8x16_t v101 = vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7510);
  int8x16_t v102 = vpmaxq_s8(v101, v101);
  int8x16_t v103 = vpminq_s8(v101, v101);
  int8x16_t v104 = vpmaxq_s8(v102, v102);
  int8x16_t v105 = vpminq_s8(v103, v103);
  int8x16_t v106 = vpmaxq_s8(v104, v104);
  int8x16_t v107 = vpminq_s8(v105, v105);
  int8x16_t v108 = vmaxq_s8(v96, v106);
  int8x16_t v109 = vminq_s8(v97, v107);
  int8x16_t v110 = vzip1q_s8(v106, v107);
  int8x16_t v111 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v110)), vceqzq_s8(v110));
  int8x16_t v112 = vpmaxq_s8(v111, v111);
  int8x16_t v113 = vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7510);
  int8x16_t v114 = vpmaxq_s8(v113, v113);
  int8x16_t v115 = vpminq_s8(v113, v113);
  int8x16_t v116 = vpmaxq_s8(v114, v114);
  int8x16_t v117 = vpminq_s8(v115, v115);
  int8x16_t v118 = vpmaxq_s8(v116, v116);
  int8x16_t v119 = vpminq_s8(v117, v117);
  int8x16_t v120 = vmaxq_s8(v108, v118);
  int8x16_t v121 = vminq_s8(v109, v119);
  int8x16_t v122 = vzip1q_s8(v118, v119);
  int8x16_t v123 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v122)), vceqzq_s8(v122));
  int8x16_t v124 = vpmaxq_s8(v123, v123);
  int8x16_t v125 = vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7510);
  int8x16_t v126 = vpmaxq_s8(v125, v125);
  int8x16_t v127 = vpminq_s8(v125, v125);
  int8x16_t v128 = vpmaxq_s8(v126, v126);
  int8x16_t v129 = vpminq_s8(v127, v127);
  int8x16_t v130 = vpmaxq_s8(v128, v128);
  int8x16_t v131 = vpminq_s8(v129, v129);
  int8x16_t v132 = vmaxq_s8(v120, v130);
  int8x16_t v133 = vminq_s8(v121, v131);
  int8x16_t v134 = vzip1q_s8(v130, v131);
  int8x16_t v135 = vbicq_s8(vsubq_s8(v30, vclsq_s8(v134)), vceqzq_s8(v134));
  int8x16_t v136 = vpmaxq_s8(v135, v135);
  int8x16_t v137 = vmaxq_s8(vmaxq_s8(v100, v112), vmaxq_s8(v124, v136));
  int8x16_t v138 = vclzq_s8(vsubq_s8(v132, v133));
  int8x16_t v139 = vsubq_s8(v30, v138);
  int8x16_t v140 = vcgtq_s8(v137, v139);
  int8x16_t v141 = vbslq_s8(v140, v139, v137);
  v139.i64[0] = 0x1010101010101010;
  v139.i64[1] = 0x1010101010101010;
  v142.i64[0] = 0x1818181818181818;
  v142.i64[1] = 0x1818181818181818;
  int8x16_t v143 = vorrq_s8(vandq_s8(vceqzq_s8(v141), v76), vbslq_s8(v140, v142, v139));
  int8x16_t v144 = vmaxq_s8(vminq_s8(vsubq_s8(v141, v100), v76), (int8x16_t)0);
  int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v141, v112), v76), (int8x16_t)0);
  int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v141, v124), v76), (int8x16_t)0);
  int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v141, v136), v76), (int8x16_t)0);
  int8x16_t v148 = vsubq_s8(v141, v144);
  int8x16_t v149 = vsubq_s8(v141, v145);
  int8x16_t v150 = vsubq_s8(v141, v146);
  int8x16_t v151 = vsubq_s8(v141, v147);
  int8x16_t v152 = vorrq_s8(vbicq_s8(v82, vceqq_s8(vaddq_s8(v147, v146), vnegq_s8(vaddq_s8(v144, v145)))), v143);
  uint16x8_t v153 = vmovl_u8(*(uint8x8_t *)v152.i8);
  v144.i64[0] = 0x8000800080008;
  v144.i64[1] = 0x8000800080008;
  v145.i64[0] = 0x2000200020002;
  v145.i64[1] = 0x2000200020002;
  int16x8_t v154 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v141.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v153 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v152.i8, 1uLL), v144)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v153 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v145), v144)), *(int8x8_t *)v148.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v150.i8, *(int8x8_t *)v149.i8), *(int8x8_t *)v151.i8), 3uLL));
  int16x8_t v155 = vaddq_s16(vaddw_s8((int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v83.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9)), vbic_s8(*(int8x8_t *)v73.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v83.i8))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v83.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v145), v144));
  int8x16_t v156 = vsubq_s8(v73, v78);
  int8x16_t v157 = vsubq_s8(v73, v79);
  int8x16_t v158 = vsubq_s8(v73, v80);
  int8x16_t v159 = vsubq_s8(v73, v81);
  int8x16_t v160 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(v155, *(int8x8_t *)v156.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v158.i8, *(int8x8_t *)v157.i8), *(int8x8_t *)v159.i8), 3uLL)), v154)), 0);
  __int16 v161 = vaddlvq_s8(v160);
  BOOL v163 = a5 < 4 || a6 < 2;
  if (v161)
  {
    v164.i64[0] = 0x707070707070707;
    v164.i64[1] = 0x707070707070707;
    v165.i64[0] = -1;
    v165.i64[1] = -1;
    int8x16_t v13 = vbslq_s8(v160, vsubq_s8(v13, vqtbl1q_s8(v13, (int8x16_t)xmmword_242EA7500)), v13);
    int8x16_t v166 = vbslq_s8(v160, v84, v14);
    int8x16_t v167 = vbslq_s8(v160, v85, v15);
    int8x16_t v16 = vbslq_s8(v160, v86, v16);
    int8x16_t v87 = vbslq_s8(v160, v88, v87);
    int8x16_t v156 = vbslq_s8(v160, v148, v156);
    int8x16_t v157 = vbslq_s8(v160, v149, v157);
    int8x16_t v158 = vbslq_s8(v160, v150, v158);
    int8x16_t v159 = vbslq_s8(v160, v151, v159);
    int8x16_t v73 = vbslq_s8(v160, v141, v73);
    int8x16_t v83 = vbslq_s8(v160, v152, v83);
    int8x16_t v168 = vbslq_s8(v160, vandq_s8(vsubq_s8(vshlq_s8(v165, vsubq_s8(v164, v138)), v133), v140), v417);
    int8x16_t v169 = v416;
    if (v163) {
      goto LABEL_16;
    }
  }
  else
  {
    int8x16_t v168 = v417;
    int8x16_t v167 = v15;
    int8x16_t v166 = v14;
    int8x16_t v169 = v416;
    if (v163) {
      goto LABEL_16;
    }
  }
  int8x16_t v172 = v167;
  int8x16_t v418 = v168;
  int8x16_t v173 = v87;
  int8x16_t v174 = vsubq_s8(v169, vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7520));
  int8x16_t v175 = v413;
  v175.i16[7] = v169.i16[7];
  int8x16_t v176 = v415;
  v176.i16[7] = v169.i16[7];
  int8x16_t v177 = vsubq_s8(v413, vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7530));
  int8x16_t v178 = vsubq_s8(v415, vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7540));
  int8x16_t v179 = v414;
  v179.i16[7] = v169.i16[7];
  int8x16_t v180 = vsubq_s8(v414, vqtbl1q_s8(v179, (int8x16_t)xmmword_242EA7550));
  int8x16_t v181 = v174;
  v181.i16[0] = v174.i16[7];
  v181.i16[7] = v174.i16[0];
  int8x16_t v182 = vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA7510);
  int8x16_t v183 = vpmaxq_s8(v182, v182);
  int8x16_t v184 = vpminq_s8(v182, v182);
  int8x16_t v185 = vpmaxq_s8(v183, v183);
  int8x16_t v186 = vpminq_s8(v184, v184);
  int8x16_t v187 = vpmaxq_s8(v185, v185);
  int8x16_t v188 = vpminq_s8(v186, v186);
  v176.i64[0] = 0x8080808080808080;
  v176.i64[1] = 0x8080808080808080;
  int8x16_t v189 = vmaxq_s8(v187, v176);
  v176.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v176.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v190 = vminq_s8(v188, v176);
  int8x16_t v191 = vzip1q_s8(v187, v188);
  v192.i64[0] = 0x808080808080808;
  v192.i64[1] = 0x808080808080808;
  int8x16_t v193 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v191)), vceqzq_s8(v191));
  int8x16_t v194 = vpmaxq_s8(v193, v193);
  int8x16_t v195 = vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7510);
  int8x16_t v196 = vpmaxq_s8(v195, v195);
  int8x16_t v197 = vpminq_s8(v195, v195);
  int8x16_t v198 = vpmaxq_s8(v196, v196);
  int8x16_t v199 = vpminq_s8(v197, v197);
  int8x16_t v200 = vpmaxq_s8(v198, v198);
  int8x16_t v201 = vpminq_s8(v199, v199);
  int8x16_t v202 = vmaxq_s8(v189, v200);
  int8x16_t v203 = vminq_s8(v190, v201);
  int8x16_t v204 = vzip1q_s8(v200, v201);
  int8x16_t v205 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v204)), vceqzq_s8(v204));
  int8x16_t v206 = vpmaxq_s8(v205, v205);
  int8x16_t v207 = vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7510);
  int8x16_t v208 = vpmaxq_s8(v207, v207);
  int8x16_t v209 = vpminq_s8(v207, v207);
  int8x16_t v210 = vpmaxq_s8(v208, v208);
  int8x16_t v211 = vpminq_s8(v209, v209);
  int8x16_t v212 = vpmaxq_s8(v210, v210);
  int8x16_t v213 = vpminq_s8(v211, v211);
  int8x16_t v214 = vmaxq_s8(v202, v212);
  int8x16_t v215 = vminq_s8(v203, v213);
  int8x16_t v216 = vzip1q_s8(v212, v213);
  int8x16_t v217 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v216)), vceqzq_s8(v216));
  int8x16_t v218 = vpmaxq_s8(v217, v217);
  int8x16_t v219 = vqtbl1q_s8(v180, (int8x16_t)xmmword_242EA7510);
  int8x16_t v220 = vpmaxq_s8(v219, v219);
  int8x16_t v221 = vpminq_s8(v219, v219);
  int8x16_t v222 = vpmaxq_s8(v220, v220);
  int8x16_t v223 = vpminq_s8(v221, v221);
  int8x16_t v224 = vpmaxq_s8(v222, v222);
  int8x16_t v225 = vpminq_s8(v223, v223);
  int8x16_t v226 = vminq_s8(v215, v225);
  int8x16_t v227 = vzip1q_s8(v224, v225);
  int8x16_t v228 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v227)), vceqzq_s8(v227));
  int8x16_t v229 = vpmaxq_s8(v228, v228);
  int8x16_t v230 = vmaxq_s8(vmaxq_s8(v194, v206), vmaxq_s8(v218, v229));
  int8x16_t v231 = vclzq_s8(vsubq_s8(vmaxq_s8(v214, v224), v226));
  int8x16_t v232 = vsubq_s8(v192, v231);
  int8x16_t v233 = vcgtq_s8(v230, v232);
  int8x16_t v234 = vbslq_s8(v233, v232, v230);
  v232.i64[0] = 0x909090909090909;
  v232.i64[1] = 0x909090909090909;
  v235.i64[0] = 0x202020202020202;
  v235.i64[1] = 0x202020202020202;
  int8x16_t v236 = vorrq_s8(vandq_s8(vceqzq_s8(v234), v235), vsubq_s8(vandq_s8(v233, v232), vmvnq_s8(v233)));
  v230.i64[0] = 0x303030303030303;
  v230.i64[1] = 0x303030303030303;
  int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v194), v230), (int8x16_t)0);
  int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v206), v230), (int8x16_t)0);
  int8x16_t v239 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v218), v230), (int8x16_t)0);
  int8x16_t v240 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v229), v230), (int8x16_t)0);
  int8x16_t v241 = vsubq_s8(v234, v237);
  int8x16_t v242 = vsubq_s8(v234, v238);
  int8x16_t v243 = vsubq_s8(v234, v239);
  int8x16_t v244 = vsubq_s8(v234, v240);
  int8x16_t v245 = vceqq_s8(vaddq_s8(v240, v239), vnegq_s8(vaddq_s8(v237, v238)));
  v238.i64[0] = 0x404040404040404;
  v238.i64[1] = 0x404040404040404;
  int8x16_t v246 = vorrq_s8(vbicq_s8(v238, v245), v236);
  v247.i64[0] = 0x3000300030003;
  v247.i64[1] = 0x3000300030003;
  int8x16_t v248 = (int8x16_t)vmovl_s8(*(int8x8_t *)v83.i8);
  v240.i64[0] = 0x8000800080008;
  v240.i64[1] = 0x8000800080008;
  int16x8_t v249 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v73.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v248, v240)));
  int16x8_t v250 = (int16x8_t)vandq_s8(v248, v247);
  v247.i64[0] = 0x2000200020002;
  v247.i64[1] = 0x2000200020002;
  int8x16_t v251 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v249, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v83.i8, 1uLL), v240)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v250, (int16x8_t)v247), v240)), *(int8x8_t *)v156.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v158.i8, *(int8x8_t *)v157.i8),
                                                                *(int8x8_t *)v159.i8),
                                                              3uLL)),
                                                          vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v234.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v246.i8))), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v246.i8, *(int8x8_t *)v246.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v241.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v243.i8, *(int8x8_t *)v242.i8), *(int8x8_t *)v244.i8), 3uLL)))), 0);
  if (vaddlvq_s8(v251))
  {
    v252.i64[0] = 0x707070707070707;
    v252.i64[1] = 0x707070707070707;
    v253.i64[0] = -1;
    v253.i64[1] = -1;
    v13.i16[0] = vbslq_s8(v251, vextq_s8(v169, v169, 0xEuLL), v13).u16[0];
    int8x16_t v166 = vbslq_s8(v251, v181, v166);
    int8x16_t v167 = vbslq_s8(v251, v177, v172);
    int8x16_t v16 = vbslq_s8(v251, v178, v16);
    int8x16_t v87 = vbslq_s8(v251, v180, v173);
    int8x16_t v156 = vbslq_s8(v251, v241, v156);
    int8x16_t v157 = vbslq_s8(v251, v242, v157);
    int8x16_t v158 = vbslq_s8(v251, v243, v158);
    int8x16_t v159 = vbslq_s8(v251, v244, v159);
    int8x16_t v168 = vbslq_s8(v251, vandq_s8(vsubq_s8(vshlq_s8(v253, vsubq_s8(v252, v231)), v226), v233), v418);
    int8x16_t v73 = vbslq_s8(v251, v234, v73);
    int8x16_t v83 = vbslq_s8(v251, v246, v83);
  }
  else
  {
    int8x16_t v87 = v173;
    int8x16_t v168 = v418;
    int8x16_t v167 = v172;
  }
LABEL_16:
  int8x16_t v254 = (int8x16_t)vmovl_s8(*(int8x8_t *)v83.i8);
  v255.i64[0] = 0x8000800080008;
  v255.i64[1] = 0x8000800080008;
  v256.i64[0] = 0x3000300030003;
  v256.i64[1] = 0x3000300030003;
  v257.i64[0] = 0x2000200020002;
  v257.i64[1] = 0x2000200020002;
  int16x8_t v258 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v73.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v254, v255))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v83.i8, 1uLL), v255)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v254, v256), v257), v255)), *(int8x8_t *)v156.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v158.i8, *(int8x8_t *)v157.i8), *(int8x8_t *)v159.i8), 3uLL));
  if ((unint64_t)(vpaddq_s16(v258, v258).i16[0] + 37) >= 0x200)
  {
    *a1 = v169;
    a1[1] = v413;
    char v170 = 63;
    unint64_t v171 = 64;
    a1[2] = v415;
    a1[3] = v414;
  }
  else
  {
    unint64_t v259 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v260 = 8 * (a1 & 7);
    if (v260) {
      uint64_t v261 = *v259 & ~(-1 << v260);
    }
    else {
      uint64_t v261 = 0;
    }
    unint64_t v262 = (unint64_t)((v73.i8[0] - 1) & 7) << 10;
    if (!v73.i8[0]) {
      unint64_t v262 = 0;
    }
    if (v73.i8[1]) {
      uint64_t v263 = (unsigned __int16)((v73.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v263 = 0;
    }
    *a2 = v83.i8[0] << 6;
    unint64_t v264 = (v83.i8[0] & 0x1C | (32 * (v83.i8[1] & 0x1F)) | v263 | v262) >> 2;
    unint64_t v265 = (v264 << v260) | v261;
    if (v260 >= 0x32)
    {
      *unint64_t v259 = v265;
      unint64_t v265 = v264 >> (-8 * (a1 & 7u));
    }
    unint64_t v266 = (v260 + 14) & 0x3E;
    unint64_t v267 = v265 | ((unint64_t)v13.u16[0] << v266);
    if (v266 >= 0x30)
    {
      *(void *)((char *)v259 + (((v260 + 14) >> 3) & 8)) = v267;
      unint64_t v267 = (unint64_t)v13.u16[0] >> -(char)v266;
    }
    unint64_t v268 = v260 + 30;
    int8x16_t v269 = vsubq_s8(v73, v156);
    int8x16_t v270 = vsubq_s8(v73, v157);
    int8x16_t v271 = vsubq_s8(v73, v158);
    int8x16_t v272 = vsubq_s8(v73, v159);
    v269.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v269, v270), (int16x8_t)vzip1q_s8(v271, v272)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v269, v270), (int16x8_t)vtrn2q_s8(v271, v272))).u64[0];
    v271.i64[0] = 0x202020202020202;
    v271.i64[1] = 0x202020202020202;
    int8x16_t v273 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v254.i8, (int8x8_t)0x4000400040004)))), v271);
    v271.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v271.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v272.i64[0] = -1;
    v272.i64[1] = -1;
    uint8x16_t v274 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v272, (uint8x16_t)vorrq_s8(v273, v271)), (int8x16_t)v269.u64[0]);
    int16x8_t v275 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v273.i8);
    uint16x8_t v276 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v274.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v275)), (int16x8_t)vmovl_high_u8(v274));
    uint16x8_t v277 = (uint16x8_t)vpaddq_s16(v275, (int16x8_t)vmovl_high_u8((uint8x16_t)v273));
    int32x4_t v278 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v277.i8);
    int32x4_t v279 = (int32x4_t)vmovl_high_u16(v277);
    int32x4_t v280 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v276.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)), (int32x4_t)vshlq_u32(vmovl_high_u16(v276), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v279)));
    int32x4_t v281 = vpaddq_s32(v278, v279);
    v282.i64[0] = v280.u32[0];
    v282.i64[1] = v280.u32[1];
    uint64x2_t v283 = (uint64x2_t)v282;
    v282.i64[0] = v280.u32[2];
    v282.i64[1] = v280.u32[3];
    uint64x2_t v284 = (uint64x2_t)v282;
    v282.i64[0] = v281.u32[0];
    v282.i64[1] = v281.u32[1];
    int64x2_t v285 = v282;
    v282.i64[0] = v281.u32[2];
    v282.i64[1] = v281.u32[3];
    int64x2_t v286 = vpaddq_s64((int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v285)), (int64x2_t)vshlq_u64(v284, (uint64x2_t)vzip1q_s64((int64x2_t)0, v282)));
    int64x2_t v287 = vpaddq_s64(v285, v282);
    uint64_t v288 = (v260 + 30) & 0x3E;
    unint64_t v289 = (v286.i64[0] << v288) | v267;
    if ((unint64_t)(v287.i64[0] + v288) >= 0x40)
    {
      *(void *)((char *)v259 + ((v268 >> 3) & 8)) = v289;
      unint64_t v289 = (unint64_t)v286.i64[0] >> -(char)v288;
    }
    int8x16_t v290 = vceqq_s8(v73, v156);
    unint64_t v291 = v287.i64[0] + v268;
    unint64_t v292 = v289 | (v286.i64[1] << v291);
    if ((v291 & 0x3F) + v287.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v291 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v292;
      unint64_t v292 = (unint64_t)v286.i64[1] >> -(v291 & 0x3F);
      if ((v291 & 0x3F) == 0) {
        unint64_t v292 = 0;
      }
    }
    int8x16_t v293 = vandq_s8(v168, v290);
    unint64_t v294 = v291 + v287.i64[1];
    v295.i64[0] = 0x808080808080808;
    v295.i64[1] = 0x808080808080808;
    v296.i64[0] = -1;
    v296.i64[1] = -1;
    int8x16_t v297 = vandq_s8(vextq_s8(vtstq_s8(v83, v295), (int8x16_t)0, 0xEuLL), v73);
    v298.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v298.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v299 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v296, (uint8x16_t)vaddq_s8(v297, v298)), v168);
    int16x8_t v300 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v297.i8);
    uint16x8_t v301 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v299.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v300)), (int16x8_t)vmovl_high_u8(v299));
    uint16x8_t v302 = (uint16x8_t)vpaddq_s16(v300, (int16x8_t)vmovl_high_u8((uint8x16_t)v297));
    int32x4_t v303 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v302.i8);
    int32x4_t v304 = (int32x4_t)vmovl_high_u16(v302);
    int32x4_t v305 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v301.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)), (int32x4_t)vshlq_u32(vmovl_high_u16(v301), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v304)));
    int32x4_t v306 = vpaddq_s32(v303, v304);
    v307.i64[0] = v305.u32[0];
    v307.i64[1] = v305.u32[1];
    uint64x2_t v308 = (uint64x2_t)v307;
    v307.i64[0] = v305.u32[2];
    v307.i64[1] = v305.u32[3];
    uint64x2_t v309 = (uint64x2_t)v307;
    v307.i64[0] = v306.u32[0];
    v307.i64[1] = v306.u32[1];
    int64x2_t v310 = v307;
    v307.i64[0] = v306.u32[2];
    v307.i64[1] = v306.u32[3];
    int64x2_t v311 = vpaddq_s64((int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v310)), (int64x2_t)vshlq_u64(v309, (uint64x2_t)vzip1q_s64((int64x2_t)0, v307)));
    int64x2_t v312 = vpaddq_s64(v310, v307);
    unint64_t v313 = (v311.i64[0] << v294) | v292;
    if (v312.i64[0] + (v294 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v294 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v313;
      unint64_t v313 = (unint64_t)v311.i64[0] >> -(v294 & 0x3F);
      if ((v294 & 0x3F) == 0) {
        unint64_t v313 = 0;
      }
    }
    int8x16_t v314 = vceqq_s8(v73, v157);
    int8x16_t v315 = vaddq_s8(v293, v166);
    unint64_t v316 = v312.i64[0] + v294;
    unint64_t v317 = v313 | (v311.i64[1] << v316);
    if ((v316 & 0x3F) + v312.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v316 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v317;
      unint64_t v317 = (unint64_t)v311.i64[1] >> -(v316 & 0x3F);
      if ((v316 & 0x3F) == 0) {
        unint64_t v317 = 0;
      }
    }
    int8x16_t v318 = vandq_s8(v168, v314);
    unint64_t v319 = v316 + v312.i64[1];
    int8x16_t v320 = vextq_s8((int8x16_t)0, v156, 0xEuLL);
    v321.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v321.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v322.i64[0] = -1;
    v322.i64[1] = -1;
    uint8x16_t v323 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v322, (uint8x16_t)vaddq_s8(v320, v321)), v315);
    int16x8_t v324 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v320.i8);
    int16x8_t v325 = (int16x8_t)vmovl_high_u8((uint8x16_t)v320);
    uint16x8_t v326 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v323.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v324)), (int16x8_t)vshlq_u16(vmovl_high_u8(v323), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v325)));
    uint16x8_t v327 = (uint16x8_t)vpaddq_s16(v324, v325);
    int32x4_t v328 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v327.i8);
    int32x4_t v329 = (int32x4_t)vmovl_high_u16(v327);
    int32x4_t v330 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v326.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)), (int32x4_t)vshlq_u32(vmovl_high_u16(v326), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)));
    int32x4_t v331 = vpaddq_s32(v328, v329);
    v332.i64[0] = v330.u32[0];
    v332.i64[1] = v330.u32[1];
    uint64x2_t v333 = (uint64x2_t)v332;
    v332.i64[0] = v330.u32[2];
    v332.i64[1] = v330.u32[3];
    uint64x2_t v334 = (uint64x2_t)v332;
    v332.i64[0] = v331.u32[0];
    v332.i64[1] = v331.u32[1];
    int64x2_t v335 = v332;
    v332.i64[0] = v331.u32[2];
    v332.i64[1] = v331.u32[3];
    int64x2_t v336 = vpaddq_s64((int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)), (int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)));
    int64x2_t v337 = vpaddq_s64(v335, v332);
    unint64_t v338 = (v336.i64[0] << v319) | v317;
    if (v337.i64[0] + (v319 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v338;
      unint64_t v338 = (unint64_t)v336.i64[0] >> -(v319 & 0x3F);
      if ((v319 & 0x3F) == 0) {
        unint64_t v338 = 0;
      }
    }
    int8x16_t v339 = vceqq_s8(v73, v158);
    int8x16_t v340 = vaddq_s8(v167, v318);
    unint64_t v341 = v337.i64[0] + v319;
    unint64_t v342 = v338 | (v336.i64[1] << v341);
    if ((v341 & 0x3F) + v337.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v341 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
      unint64_t v342 = (unint64_t)v336.i64[1] >> -(v341 & 0x3F);
      if ((v341 & 0x3F) == 0) {
        unint64_t v342 = 0;
      }
    }
    int8x16_t v343 = vandq_s8(v168, v339);
    unint64_t v344 = v341 + v337.i64[1];
    v345.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v345.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v346.i64[0] = -1;
    v346.i64[1] = -1;
    uint8x16_t v347 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v346, (uint8x16_t)vaddq_s8(v157, v345)), v340);
    int16x8_t v348 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v157.i8);
    int16x8_t v349 = (int16x8_t)vmovl_high_u8((uint8x16_t)v157);
    uint16x8_t v350 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v347.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v348)), (int16x8_t)vshlq_u16(vmovl_high_u8(v347), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v349)));
    uint16x8_t v351 = (uint16x8_t)vpaddq_s16(v348, v349);
    int32x4_t v352 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
    int32x4_t v353 = (int32x4_t)vmovl_high_u16(v351);
    int32x4_t v354 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v350.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v352)), (int32x4_t)vshlq_u32(vmovl_high_u16(v350), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v353)));
    int32x4_t v355 = vpaddq_s32(v352, v353);
    v356.i64[0] = v354.u32[0];
    v356.i64[1] = v354.u32[1];
    uint64x2_t v357 = (uint64x2_t)v356;
    v356.i64[0] = v354.u32[2];
    v356.i64[1] = v354.u32[3];
    uint64x2_t v358 = (uint64x2_t)v356;
    v356.i64[0] = v355.u32[0];
    v356.i64[1] = v355.u32[1];
    int64x2_t v359 = v356;
    v356.i64[0] = v355.u32[2];
    v356.i64[1] = v355.u32[3];
    int64x2_t v360 = vpaddq_s64((int64x2_t)vshlq_u64(v357, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)), (int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v356)));
    int64x2_t v361 = vpaddq_s64(v359, v356);
    unint64_t v362 = (v360.i64[0] << v344) | v342;
    if (v361.i64[0] + (v344 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v362;
      unint64_t v362 = (unint64_t)v360.i64[0] >> -(v344 & 0x3F);
      if ((v344 & 0x3F) == 0) {
        unint64_t v362 = 0;
      }
    }
    int8x16_t v363 = vceqq_s8(v73, v159);
    int8x16_t v364 = vaddq_s8(v16, v343);
    unint64_t v365 = v361.i64[0] + v344;
    unint64_t v366 = v362 | (v360.i64[1] << v365);
    if ((v365 & 0x3F) + v361.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
      unint64_t v366 = (unint64_t)v360.i64[1] >> -(v365 & 0x3F);
      if ((v365 & 0x3F) == 0) {
        unint64_t v366 = 0;
      }
    }
    int8x16_t v367 = vandq_s8(v168, v363);
    unint64_t v368 = v365 + v361.i64[1];
    v369.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v369.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v370.i64[0] = -1;
    v370.i64[1] = -1;
    uint8x16_t v371 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v370, (uint8x16_t)vaddq_s8(v158, v369)), v364);
    int16x8_t v372 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v158.i8);
    int16x8_t v373 = (int16x8_t)vmovl_high_u8((uint8x16_t)v158);
    uint16x8_t v374 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v371.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v372)), (int16x8_t)vshlq_u16(vmovl_high_u8(v371), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)));
    uint16x8_t v375 = (uint16x8_t)vpaddq_s16(v372, v373);
    int32x4_t v376 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v375.i8);
    int32x4_t v377 = (int32x4_t)vmovl_high_u16(v375);
    int32x4_t v378 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v374.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v376)), (int32x4_t)vshlq_u32(vmovl_high_u16(v374), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)));
    int32x4_t v379 = vpaddq_s32(v376, v377);
    v380.i64[0] = v378.u32[0];
    v380.i64[1] = v378.u32[1];
    uint64x2_t v381 = (uint64x2_t)v380;
    v380.i64[0] = v378.u32[2];
    v380.i64[1] = v378.u32[3];
    uint64x2_t v382 = (uint64x2_t)v380;
    v380.i64[0] = v379.u32[0];
    v380.i64[1] = v379.u32[1];
    int64x2_t v383 = v380;
    v380.i64[0] = v379.u32[2];
    v380.i64[1] = v379.u32[3];
    int64x2_t v384 = vpaddq_s64((int64x2_t)vshlq_u64(v381, (uint64x2_t)vzip1q_s64((int64x2_t)0, v383)), (int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v380)));
    int64x2_t v385 = vpaddq_s64(v383, v380);
    unint64_t v386 = (v384.i64[0] << v368) | v366;
    if (v385.i64[0] + (v368 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v368 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v386;
      unint64_t v386 = (unint64_t)v384.i64[0] >> -(v368 & 0x3F);
      if ((v368 & 0x3F) == 0) {
        unint64_t v386 = 0;
      }
    }
    int8x16_t v387 = vaddq_s8(v87, v367);
    unint64_t v388 = v385.i64[0] + v368;
    unint64_t v389 = v386 | (v384.i64[1] << v388);
    if ((v388 & 0x3F) + v385.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v388 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
      unint64_t v389 = (unint64_t)v384.i64[1] >> -(v388 & 0x3F);
      if ((v388 & 0x3F) == 0) {
        unint64_t v389 = 0;
      }
    }
    unint64_t v390 = v388 + v385.i64[1];
    v391.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v391.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v392.i64[0] = -1;
    v392.i64[1] = -1;
    uint8x16_t v393 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v392, (uint8x16_t)vaddq_s8(v159, v391)), v387);
    int16x8_t v394 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
    int16x8_t v395 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
    uint16x8_t v396 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v393.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v394)), (int16x8_t)vshlq_u16(vmovl_high_u8(v393), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v395)));
    uint16x8_t v397 = (uint16x8_t)vpaddq_s16(v394, v395);
    int32x4_t v398 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v397.i8);
    int32x4_t v399 = (int32x4_t)vmovl_high_u16(v397);
    int32x4_t v400 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v396.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v398)), (int32x4_t)vshlq_u32(vmovl_high_u16(v396), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v399)));
    int32x4_t v401 = vpaddq_s32(v398, v399);
    v402.i64[0] = v400.u32[0];
    v402.i64[1] = v400.u32[1];
    uint64x2_t v403 = (uint64x2_t)v402;
    v402.i64[0] = v400.u32[2];
    v402.i64[1] = v400.u32[3];
    uint64x2_t v404 = (uint64x2_t)v402;
    v402.i64[0] = v401.u32[0];
    v402.i64[1] = v401.u32[1];
    int64x2_t v405 = v402;
    v402.i64[0] = v401.u32[2];
    v402.i64[1] = v401.u32[3];
    int64x2_t v406 = vpaddq_s64((int64x2_t)vshlq_u64(v403, (uint64x2_t)vzip1q_s64((int64x2_t)0, v405)), (int64x2_t)vshlq_u64(v404, (uint64x2_t)vzip1q_s64((int64x2_t)0, v402)));
    int64x2_t v407 = vpaddq_s64(v405, v402);
    unint64_t v408 = (v406.i64[0] << v390) | v389;
    if (v407.i64[0] + (v390 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v259 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v408;
      if ((v390 & 0x3F) != 0) {
        unint64_t v408 = (unint64_t)v406.i64[0] >> -(v390 & 0x3F);
      }
      else {
        unint64_t v408 = 0;
      }
    }
    unint64_t v409 = v407.i64[0] + v390;
    unint64_t v410 = v408 | (v406.i64[1] << v409);
    if ((v409 & 0x3F) + v407.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v409 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v410;
      unint64_t v410 = (unint64_t)v406.i64[1] >> -(v409 & 0x3F);
      if ((v409 & 0x3F) == 0) {
        unint64_t v410 = 0;
      }
    }
    unint64_t v411 = v409 + v407.i64[1];
    if ((v411 & 0x3F) != 0) {
      *(void *)((char *)v259 + ((v411 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v410;
    }
    unint64_t v171 = (v411 - v260 + 7) >> 3;
    char v170 = *a2 | (v171 - 1);
  }
LABEL_69:
  *a2 = v170;
  return v171;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x16_t *a3, char *a4, int a5, int a6)
{
  unint64_t v9 = a3;
  int8x16_t v11 = (int32x4_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v12, v13);
    unint64_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  int8x16_t v14 = a4 + 1;
  if (a5 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 8;
  if (v16 >= 8) {
    int v17 = 8;
  }
  else {
    int v17 = v16;
  }
  if (v17 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 1, a2, v17, v13);
    unint64_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int8x16_t v14 = 0;
  }
  uint64_t v18 = 4 * a2;
  int8x16_t v19 = a4 + 2;
  if (a6 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v12 && v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v19, (int32x4_t *)((char *)v11 + v18), a2, v12, v22);
    unint64_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  else
  {
    *int8x16_t v19 = 0;
    int8x16_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  if (v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int32x4_t *)((char *)v11 + v18 + 16), a2, v17, v22);
    unint64_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_35;
  }
LABEL_34:
  *int8x16_t v23 = 0;
LABEL_35:
  int8x16_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int32x4_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    unint64_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  else
  {
    *int8x16_t v24 = 0;
    int8x16_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int32x4_t *)((char *)v11 + 8 * a2 + 16), a2, v17, v27);
    unint64_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_49;
  }
LABEL_48:
  *int8x16_t v28 = 0;
LABEL_49:
  int8x16_t v29 = a4 + 6;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v29, (int32x4_t *)((char *)v11 + 12 * a2), a2, v12, v32);
    unint64_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v33 = a4 + 7;
    if (!v17) {
      goto LABEL_64;
    }
  }
  else
  {
    *int8x16_t v29 = 0;
    int8x16_t v33 = a4 + 7;
    if (!v17)
    {
LABEL_64:
      *int8x16_t v33 = 0;
      return result;
    }
  }
  if (!v32) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int32x4_t *)((char *)v11 + 12 * a2 + 16), a2, v17, v32);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(uint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int32x4_t v7 = *(int32x4_t *)((char *)a3 + a4);
  int8x16_t v8 = (int8x16_t)vzip1q_s32(*a3, v7);
  int8x16_t v9 = (int8x16_t)vzip2q_s32(*a3, v7);
  int32x4_t v10 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v11 = *(int32x4_t *)((char *)v10 + a4);
  int8x16_t v12 = (int8x16_t)vzip1q_s32(*v10, v11);
  int8x16_t v13 = (int8x16_t)vzip2q_s32(*v10, v11);
  int8x16_t v14 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v8.i8, 0);
  int8x16_t v15 = vsubq_s8(v8, v14);
  int8x16_t v16 = vsubq_s8(v12, v14);
  int8x16_t v17 = vsubq_s8(v9, v14);
  int8x16_t v18 = vsubq_s8(v13, v14);
  int8x16_t v19 = vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7510);
  int8x16_t v20 = vpmaxq_s8(v19, v19);
  int8x16_t v21 = vpminq_s8(v19, v19);
  int8x16_t v22 = vpmaxq_s8(v20, v20);
  int8x16_t v23 = vpminq_s8(v21, v21);
  int8x16_t v24 = vpmaxq_s8(v22, v22);
  int8x16_t v25 = vpminq_s8(v23, v23);
  v26.i64[0] = 0x8080808080808080;
  v26.i64[1] = 0x8080808080808080;
  int8x16_t v27 = vmaxq_s8(v24, v26);
  v28.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v28.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v29 = vminq_s8(v25, v28);
  int8x16_t v30 = vzip1q_s8(v24, v25);
  v31.i64[0] = 0x808080808080808;
  v31.i64[1] = 0x808080808080808;
  int8x16_t v32 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v30)), vceqzq_s8(v30));
  int8x16_t v33 = vpmaxq_s8(v32, v32);
  int8x16_t v34 = vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7510);
  int8x16_t v35 = vpmaxq_s8(v34, v34);
  int8x16_t v36 = vpminq_s8(v34, v34);
  int8x16_t v37 = vpmaxq_s8(v35, v35);
  int8x16_t v38 = vpminq_s8(v36, v36);
  int8x16_t v39 = vpmaxq_s8(v37, v37);
  int8x16_t v40 = vpminq_s8(v38, v38);
  int8x16_t v41 = vmaxq_s8(v27, v39);
  int8x16_t v42 = vminq_s8(v29, v40);
  int8x16_t v43 = vzip1q_s8(v39, v40);
  int8x16_t v44 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v43)), vceqzq_s8(v43));
  int8x16_t v45 = vpmaxq_s8(v44, v44);
  int8x16_t v46 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v47 = vpmaxq_s8(v46, v46);
  int8x16_t v48 = vpminq_s8(v46, v46);
  int8x16_t v49 = vpmaxq_s8(v47, v47);
  int8x16_t v50 = vpminq_s8(v48, v48);
  int8x16_t v51 = vpmaxq_s8(v49, v49);
  int8x16_t v52 = vpminq_s8(v50, v50);
  int8x16_t v53 = vmaxq_s8(v41, v51);
  int8x16_t v54 = vminq_s8(v42, v52);
  int8x16_t v55 = vzip1q_s8(v51, v52);
  int8x16_t v56 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v55)), vceqzq_s8(v55));
  int8x16_t v57 = vpmaxq_s8(v56, v56);
  int8x16_t v58 = vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7510);
  int8x16_t v59 = vpmaxq_s8(v58, v58);
  int8x16_t v60 = vpminq_s8(v58, v58);
  int8x16_t v61 = vpmaxq_s8(v59, v59);
  int8x16_t v62 = vpminq_s8(v60, v60);
  int8x16_t v63 = vpmaxq_s8(v61, v61);
  int8x16_t v64 = vpminq_s8(v62, v62);
  int8x16_t v65 = vmaxq_s8(v53, v63);
  int8x16_t v66 = vminq_s8(v54, v64);
  int8x16_t v67 = vzip1q_s8(v63, v64);
  int8x16_t v68 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v67)), vceqzq_s8(v67));
  int8x16_t v69 = vpmaxq_s8(v68, v68);
  int8x16_t v70 = vmaxq_s8(vmaxq_s8(v33, v45), vmaxq_s8(v57, v69));
  int8x16_t v71 = vclzq_s8(vsubq_s8(v65, v66));
  int8x16_t v72 = vsubq_s8(v31, v71);
  int8x16_t v73 = vcgtq_s8(v70, v72);
  int8x16_t v74 = vbslq_s8(v73, v72, v70);
  if (!vmaxvq_s8(v74))
  {
    *(_WORD *)a1 = a3->i16[0];
    *a2 = 1;
    return 2;
  }
  int8x16_t v411 = v12;
  int8x16_t v412 = v9;
  int8x16_t v413 = v13;
  v75.i64[0] = -1;
  v75.i64[1] = -1;
  v76.i64[0] = 0x707070707070707;
  v76.i64[1] = 0x707070707070707;
  int8x16_t v415 = vandq_s8(vsubq_s8(vshlq_s8(v75, vsubq_s8(v76, v71)), v66), v73);
  v77.i64[0] = 0x303030303030303;
  v77.i64[1] = 0x303030303030303;
  int8x16_t v78 = vorrq_s8(vandq_s8(v73, v31), vandq_s8(vceqzq_s8(v74), v77));
  int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v33), v77), (int8x16_t)0);
  int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v45), v77), (int8x16_t)0);
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v57), v77), (int8x16_t)0);
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v69), v77), (int8x16_t)0);
  v83.i64[0] = 0x404040404040404;
  v83.i64[1] = 0x404040404040404;
  int8x16_t v84 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)))), v78);
  int8x16_t v85 = vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500));
  int8x16_t v86 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
  int8x16_t v87 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7500));
  int8x16_t v414 = vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7500));
  int8x16_t v88 = vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA7510);
  int8x16_t v89 = v15;
  int8x16_t v90 = vpmaxq_s8(v88, v88);
  int8x16_t v91 = vpminq_s8(v88, v88);
  int8x16_t v92 = vpmaxq_s8(v90, v90);
  int8x16_t v93 = vpminq_s8(v91, v91);
  int8x16_t v94 = vpmaxq_s8(v92, v92);
  int8x16_t v95 = vpminq_s8(v93, v93);
  int8x16_t v96 = vmaxq_s8(v94, v26);
  int8x16_t v97 = vminq_s8(v95, v28);
  int8x16_t v98 = vzip1q_s8(v94, v95);
  int8x16_t v99 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v98)), vceqzq_s8(v98));
  int8x16_t v100 = vpmaxq_s8(v99, v99);
  int8x16_t v101 = vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7510);
  int8x16_t v102 = vpmaxq_s8(v101, v101);
  int8x16_t v103 = vpminq_s8(v101, v101);
  int8x16_t v104 = vpmaxq_s8(v102, v102);
  int8x16_t v105 = vpminq_s8(v103, v103);
  int8x16_t v106 = vpmaxq_s8(v104, v104);
  int8x16_t v107 = vpminq_s8(v105, v105);
  int8x16_t v108 = vmaxq_s8(v96, v106);
  int8x16_t v109 = vminq_s8(v97, v107);
  int8x16_t v110 = vzip1q_s8(v106, v107);
  int8x16_t v111 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v110)), vceqzq_s8(v110));
  int8x16_t v112 = vpmaxq_s8(v111, v111);
  int8x16_t v113 = vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7510);
  int8x16_t v114 = vpmaxq_s8(v113, v113);
  int8x16_t v115 = vpminq_s8(v113, v113);
  int8x16_t v116 = vpmaxq_s8(v114, v114);
  int8x16_t v117 = vpminq_s8(v115, v115);
  int8x16_t v118 = vpmaxq_s8(v116, v116);
  int8x16_t v119 = vpminq_s8(v117, v117);
  int8x16_t v120 = vmaxq_s8(v108, v118);
  int8x16_t v121 = vminq_s8(v109, v119);
  int8x16_t v122 = vzip1q_s8(v118, v119);
  int8x16_t v123 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v122)), vceqzq_s8(v122));
  int8x16_t v124 = v16;
  int8x16_t v125 = vpmaxq_s8(v123, v123);
  int8x16_t v126 = vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7510);
  int8x16_t v127 = vpmaxq_s8(v126, v126);
  int8x16_t v128 = vpminq_s8(v126, v126);
  int8x16_t v129 = vpmaxq_s8(v127, v127);
  int8x16_t v130 = vpminq_s8(v128, v128);
  int8x16_t v131 = vpmaxq_s8(v129, v129);
  int8x16_t v132 = vpminq_s8(v130, v130);
  int8x16_t v133 = vmaxq_s8(v120, v131);
  int8x16_t v134 = vminq_s8(v121, v132);
  int8x16_t v135 = vzip1q_s8(v131, v132);
  int8x16_t v136 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v135)), vceqzq_s8(v135));
  int8x16_t v137 = vpmaxq_s8(v136, v136);
  int8x16_t v138 = vmaxq_s8(vmaxq_s8(v100, v112), vmaxq_s8(v125, v137));
  int8x16_t v139 = vclzq_s8(vsubq_s8(v133, v134));
  int8x16_t v140 = vsubq_s8(v31, v139);
  int8x16_t v141 = vcgtq_s8(v138, v140);
  int8x16_t v142 = vbslq_s8(v141, v140, v138);
  v140.i64[0] = 0x1010101010101010;
  v140.i64[1] = 0x1010101010101010;
  v143.i64[0] = 0x1818181818181818;
  v143.i64[1] = 0x1818181818181818;
  int8x16_t v144 = vorrq_s8(vandq_s8(vceqzq_s8(v142), v77), vbslq_s8(v141, v143, v140));
  int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v100), v77), (int8x16_t)0);
  int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v112), v77), (int8x16_t)0);
  int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v125), v77), (int8x16_t)0);
  int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v137), v77), (int8x16_t)0);
  int8x16_t v149 = vsubq_s8(v142, v145);
  int8x16_t v150 = vsubq_s8(v142, v146);
  int8x16_t v151 = vsubq_s8(v142, v147);
  int8x16_t v152 = vsubq_s8(v142, v148);
  int8x16_t v153 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v148, v147), vnegq_s8(vaddq_s8(v145, v146)))), v144);
  uint16x8_t v154 = vmovl_u8(*(uint8x8_t *)v153.i8);
  v146.i64[0] = 0x8000800080008;
  v146.i64[1] = 0x8000800080008;
  v145.i64[0] = 0x2000200020002;
  v145.i64[1] = 0x2000200020002;
  int16x8_t v155 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v142.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v153.i8, 1uLL), v146)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v145), v146)), *(int8x8_t *)v149.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v151.i8, *(int8x8_t *)v150.i8), *(int8x8_t *)v152.i8), 3uLL));
  int16x8_t v156 = vaddq_s16(vaddw_s8((int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v84.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9)), vbic_s8(*(int8x8_t *)v74.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v84.i8))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v145), v146));
  int8x16_t v157 = vsubq_s8(v74, v79);
  int8x16_t v158 = vsubq_s8(v74, v80);
  int8x16_t v159 = vsubq_s8(v74, v81);
  int8x16_t v160 = vsubq_s8(v74, v82);
  int8x16_t v161 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(v156, *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8), *(int8x8_t *)v160.i8), 3uLL)), v155)), 0);
  __int16 v162 = vaddlvq_s8(v161);
  BOOL v164 = a5 < 4 || a6 < 2;
  if (v162)
  {
    v165.i64[0] = 0x707070707070707;
    v165.i64[1] = 0x707070707070707;
    v166.i64[0] = -1;
    v166.i64[1] = -1;
    int8x16_t v167 = vandq_s8(vsubq_s8(vshlq_s8(v166, vsubq_s8(v165, v139)), v134), v141);
    int8x16_t v14 = vbslq_s8(v161, vsubq_s8(v14, vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7500)), v14);
    int8x16_t v168 = vbslq_s8(v161, v414, v89);
    int8x16_t v169 = vbslq_s8(v161, v85, v124);
    int8x16_t v17 = vbslq_s8(v161, v86, v17);
    int8x16_t v18 = vbslq_s8(v161, v87, v18);
    int8x16_t v157 = vbslq_s8(v161, v149, v157);
    int8x16_t v158 = vbslq_s8(v161, v150, v158);
    int8x16_t v159 = vbslq_s8(v161, v151, v159);
    int8x16_t v160 = vbslq_s8(v161, v152, v160);
    int8x16_t v170 = vbslq_s8(v161, v167, v415);
    int8x16_t v74 = vbslq_s8(v161, v142, v74);
    int8x16_t v84 = vbslq_s8(v161, v153, v84);
    if (v164) {
      goto LABEL_16;
    }
  }
  else
  {
    int8x16_t v168 = v89;
    int8x16_t v169 = v124;
    int8x16_t v170 = v415;
    if (v164) {
      goto LABEL_16;
    }
  }
  int8x16_t v172 = v17;
  int8x16_t v416 = v18;
  int8x16_t v173 = vsubq_s8(v8, vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA7520));
  int8x16_t v174 = v411;
  v174.i16[7] = v8.i16[7];
  int8x16_t v175 = v412;
  v175.i16[7] = v8.i16[7];
  int8x16_t v176 = vsubq_s8(v411, vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7530));
  int8x16_t v177 = vsubq_s8(v412, vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7540));
  int8x16_t v178 = v413;
  v178.i16[7] = v8.i16[7];
  int8x16_t v179 = vsubq_s8(v413, vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7550));
  int8x16_t v180 = v173;
  v180.i16[0] = v173.i16[7];
  v180.i16[7] = v173.i16[0];
  int8x16_t v181 = vqtbl1q_s8(v180, (int8x16_t)xmmword_242EA7510);
  int8x16_t v182 = vpmaxq_s8(v181, v181);
  int8x16_t v183 = vpminq_s8(v181, v181);
  int8x16_t v184 = vpmaxq_s8(v182, v182);
  int8x16_t v185 = vpminq_s8(v183, v183);
  int8x16_t v186 = vpmaxq_s8(v184, v184);
  int8x16_t v187 = vpminq_s8(v185, v185);
  v175.i64[0] = 0x8080808080808080;
  v175.i64[1] = 0x8080808080808080;
  int8x16_t v188 = vmaxq_s8(v186, v175);
  v189.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v189.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v190 = vzip1q_s8(v186, v187);
  v191.i64[0] = 0x808080808080808;
  v191.i64[1] = 0x808080808080808;
  int8x16_t v192 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v190)), vceqzq_s8(v190));
  int8x16_t v193 = vpmaxq_s8(v192, v192);
  int8x16_t v194 = vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7510);
  int8x16_t v195 = vpmaxq_s8(v194, v194);
  int8x16_t v196 = vpminq_s8(v194, v194);
  int8x16_t v197 = vpmaxq_s8(v195, v195);
  int8x16_t v198 = vpminq_s8(v196, v196);
  int8x16_t v199 = vpmaxq_s8(v197, v197);
  int8x16_t v200 = vpminq_s8(v198, v198);
  int8x16_t v201 = vmaxq_s8(v188, v199);
  int8x16_t v202 = vminq_s8(vminq_s8(v187, v189), v200);
  int8x16_t v203 = vzip1q_s8(v199, v200);
  int8x16_t v204 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v203)), vceqzq_s8(v203));
  int8x16_t v205 = vpmaxq_s8(v204, v204);
  int8x16_t v206 = vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7510);
  int8x16_t v207 = vpmaxq_s8(v206, v206);
  int8x16_t v208 = vpminq_s8(v206, v206);
  int8x16_t v209 = vpmaxq_s8(v207, v207);
  int8x16_t v210 = vpminq_s8(v208, v208);
  int8x16_t v211 = vpmaxq_s8(v209, v209);
  int8x16_t v212 = vpminq_s8(v210, v210);
  int8x16_t v213 = vmaxq_s8(v201, v211);
  int8x16_t v214 = vminq_s8(v202, v212);
  int8x16_t v215 = vzip1q_s8(v211, v212);
  int8x16_t v216 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v215)), vceqzq_s8(v215));
  int8x16_t v217 = vpmaxq_s8(v216, v216);
  int8x16_t v218 = vqtbl1q_s8(v179, (int8x16_t)xmmword_242EA7510);
  int8x16_t v219 = vpmaxq_s8(v218, v218);
  int8x16_t v220 = vpminq_s8(v218, v218);
  int8x16_t v221 = vpmaxq_s8(v219, v219);
  int8x16_t v222 = vpminq_s8(v220, v220);
  int8x16_t v223 = vpmaxq_s8(v221, v221);
  int8x16_t v224 = vpminq_s8(v222, v222);
  int8x16_t v225 = vminq_s8(v214, v224);
  int8x16_t v226 = vzip1q_s8(v223, v224);
  int8x16_t v227 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v226)), vceqzq_s8(v226));
  int8x16_t v228 = vpmaxq_s8(v227, v227);
  int8x16_t v229 = vmaxq_s8(vmaxq_s8(v193, v205), vmaxq_s8(v217, v228));
  int8x16_t v230 = vclzq_s8(vsubq_s8(vmaxq_s8(v213, v223), v225));
  int8x16_t v231 = vsubq_s8(v191, v230);
  int8x16_t v232 = vcgtq_s8(v229, v231);
  int8x16_t v233 = vbslq_s8(v232, v231, v229);
  v231.i64[0] = 0x909090909090909;
  v231.i64[1] = 0x909090909090909;
  v234.i64[0] = 0x202020202020202;
  v234.i64[1] = 0x202020202020202;
  int8x16_t v235 = vorrq_s8(vandq_s8(vceqzq_s8(v233), v234), vsubq_s8(vandq_s8(v232, v231), vmvnq_s8(v232)));
  v229.i64[0] = 0x303030303030303;
  v229.i64[1] = 0x303030303030303;
  int8x16_t v236 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v193), v229), (int8x16_t)0);
  int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v205), v229), (int8x16_t)0);
  int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v217), v229), (int8x16_t)0);
  int8x16_t v239 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v228), v229), (int8x16_t)0);
  int8x16_t v240 = vsubq_s8(v233, v236);
  int8x16_t v241 = vsubq_s8(v233, v237);
  int8x16_t v242 = vsubq_s8(v233, v238);
  int8x16_t v243 = vsubq_s8(v233, v239);
  int8x16_t v244 = vceqq_s8(vaddq_s8(v239, v238), vnegq_s8(vaddq_s8(v236, v237)));
  v239.i64[0] = 0x404040404040404;
  v239.i64[1] = 0x404040404040404;
  int8x16_t v245 = vorrq_s8(vbicq_s8(v239, v244), v235);
  v246.i64[0] = 0x3000300030003;
  v246.i64[1] = 0x3000300030003;
  int8x16_t v247 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v237.i64[0] = 0x8000800080008;
  v237.i64[1] = 0x8000800080008;
  int16x8_t v248 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v247, v237)));
  int16x8_t v249 = (int16x8_t)vandq_s8(v247, v246);
  v246.i64[0] = 0x2000200020002;
  v246.i64[1] = 0x2000200020002;
  int8x16_t v250 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v248, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v237)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v249, (int16x8_t)v246), v237)), *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8),
                                                                *(int8x8_t *)v160.i8),
                                                              3uLL)),
                                                          vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v233.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v245.i8))), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v245.i8, *(int8x8_t *)v245.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v240.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v242.i8, *(int8x8_t *)v241.i8), *(int8x8_t *)v243.i8), 3uLL)))), 0);
  if (vaddlvq_s8(v250))
  {
    v251.i64[0] = 0x707070707070707;
    v251.i64[1] = 0x707070707070707;
    v252.i64[0] = -1;
    v252.i64[1] = -1;
    v14.i16[0] = vbslq_s8(v250, vextq_s8(v8, v8, 0xEuLL), v14).u16[0];
    int8x16_t v168 = vbslq_s8(v250, v180, v168);
    int8x16_t v169 = vbslq_s8(v250, v176, v169);
    int8x16_t v17 = vbslq_s8(v250, v177, v172);
    int8x16_t v18 = vbslq_s8(v250, v179, v416);
    int8x16_t v157 = vbslq_s8(v250, v240, v157);
    int8x16_t v158 = vbslq_s8(v250, v241, v158);
    int8x16_t v159 = vbslq_s8(v250, v242, v159);
    int8x16_t v160 = vbslq_s8(v250, v243, v160);
    int8x16_t v170 = vbslq_s8(v250, vandq_s8(vsubq_s8(vshlq_s8(v252, vsubq_s8(v251, v230)), v225), v232), v170);
    int8x16_t v74 = vbslq_s8(v250, v233, v74);
    int8x16_t v84 = vbslq_s8(v250, v245, v84);
  }
  else
  {
    int8x16_t v18 = v416;
    int8x16_t v17 = v172;
  }
LABEL_16:
  int8x16_t v253 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v254.i64[0] = 0x8000800080008;
  v254.i64[1] = 0x8000800080008;
  v255.i64[0] = 0x3000300030003;
  v255.i64[1] = 0x3000300030003;
  v256.i64[0] = 0x2000200020002;
  v256.i64[1] = 0x2000200020002;
  int16x8_t v257 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v253, v254))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v254)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v253, v255), v256), v254)), *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8), *(int8x8_t *)v160.i8), 3uLL));
  if ((unint64_t)(vpaddq_s16(v257, v257).i16[0] - 355) <= 0xFFFFFFFFFFFFFE77)
  {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
    return 48;
  }
  else
  {
    int16x8_t v258 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v259 = 8 * (a1 & 7);
    if (v259) {
      uint64_t v260 = *v258 & ~(-1 << v259);
    }
    else {
      uint64_t v260 = 0;
    }
    unint64_t v261 = (unint64_t)((v74.i8[0] - 1) & 7) << 10;
    if (!v74.i8[0]) {
      unint64_t v261 = 0;
    }
    if (v74.i8[1]) {
      uint64_t v262 = (unsigned __int16)((v74.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v262 = 0;
    }
    *a2 = v84.i8[0] << 6;
    unint64_t v263 = (v84.i8[0] & 0x1C | (32 * (v84.i8[1] & 0x1F)) | v262 | v261) >> 2;
    unint64_t v264 = (v263 << v259) | v260;
    if (v259 >= 0x32)
    {
      *int16x8_t v258 = v264;
      unint64_t v264 = v263 >> (-8 * (a1 & 7u));
    }
    unint64_t v265 = (v259 + 14) & 0x3E;
    unint64_t v266 = v264 | ((unint64_t)v14.u16[0] << v265);
    if (v265 >= 0x30)
    {
      *(void *)((char *)v258 + (((v259 + 14) >> 3) & 8)) = v266;
      unint64_t v266 = (unint64_t)v14.u16[0] >> -(char)v265;
    }
    unint64_t v267 = v259 + 30;
    int8x16_t v268 = vsubq_s8(v74, v157);
    int8x16_t v269 = vsubq_s8(v74, v158);
    int8x16_t v270 = vsubq_s8(v74, v159);
    int8x16_t v271 = vsubq_s8(v74, v160);
    v268.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v268, v269), (int16x8_t)vzip1q_s8(v270, v271)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v268, v269), (int16x8_t)vtrn2q_s8(v270, v271))).u64[0];
    v270.i64[0] = 0x202020202020202;
    v270.i64[1] = 0x202020202020202;
    int8x16_t v272 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v253.i8, (int8x8_t)0x4000400040004)))), v270);
    v270.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v270.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v271.i64[0] = -1;
    v271.i64[1] = -1;
    uint8x16_t v273 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v271, (uint8x16_t)vorrq_s8(v272, v270)), (int8x16_t)v268.u64[0]);
    int16x8_t v274 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v272.i8);
    uint16x8_t v275 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v273.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v274)), (int16x8_t)vmovl_high_u8(v273));
    uint16x8_t v276 = (uint16x8_t)vpaddq_s16(v274, (int16x8_t)vmovl_high_u8((uint8x16_t)v272));
    int32x4_t v277 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v276.i8);
    int32x4_t v278 = (int32x4_t)vmovl_high_u16(v276);
    int32x4_t v279 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v275.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)), (int32x4_t)vshlq_u32(vmovl_high_u16(v275), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)));
    int32x4_t v280 = vpaddq_s32(v277, v278);
    v281.i64[0] = v279.u32[0];
    v281.i64[1] = v279.u32[1];
    uint64x2_t v282 = (uint64x2_t)v281;
    v281.i64[0] = v279.u32[2];
    v281.i64[1] = v279.u32[3];
    uint64x2_t v283 = (uint64x2_t)v281;
    v281.i64[0] = v280.u32[0];
    v281.i64[1] = v280.u32[1];
    int64x2_t v284 = v281;
    v281.i64[0] = v280.u32[2];
    v281.i64[1] = v280.u32[3];
    int64x2_t v285 = vpaddq_s64((int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)), (int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)));
    int64x2_t v286 = vpaddq_s64(v284, v281);
    uint64_t v287 = (v259 + 30) & 0x3E;
    unint64_t v288 = (v285.i64[0] << v287) | v266;
    if ((unint64_t)(v286.i64[0] + v287) >= 0x40)
    {
      *(void *)((char *)v258 + ((v267 >> 3) & 8)) = v288;
      unint64_t v288 = (unint64_t)v285.i64[0] >> -(char)v287;
    }
    int8x16_t v289 = vceqq_s8(v74, v157);
    unint64_t v290 = v286.i64[0] + v267;
    unint64_t v291 = v288 | (v285.i64[1] << v290);
    if ((v290 & 0x3F) + v286.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
      unint64_t v291 = (unint64_t)v285.i64[1] >> -(v290 & 0x3F);
      if ((v290 & 0x3F) == 0) {
        unint64_t v291 = 0;
      }
    }
    int8x16_t v292 = vandq_s8(v170, v289);
    unint64_t v293 = v290 + v286.i64[1];
    v294.i64[0] = 0x808080808080808;
    v294.i64[1] = 0x808080808080808;
    v295.i64[0] = -1;
    v295.i64[1] = -1;
    int8x16_t v296 = vandq_s8(vextq_s8(vtstq_s8(v84, v294), (int8x16_t)0, 0xEuLL), v74);
    v297.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v297.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v298 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v295, (uint8x16_t)vaddq_s8(v296, v297)), v170);
    int16x8_t v299 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v296.i8);
    uint16x8_t v300 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v298.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)), (int16x8_t)vmovl_high_u8(v298));
    uint16x8_t v301 = (uint16x8_t)vpaddq_s16(v299, (int16x8_t)vmovl_high_u8((uint8x16_t)v296));
    int32x4_t v302 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v301.i8);
    int32x4_t v303 = (int32x4_t)vmovl_high_u16(v301);
    int32x4_t v304 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v300.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v302)), (int32x4_t)vshlq_u32(vmovl_high_u16(v300), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)));
    int32x4_t v305 = vpaddq_s32(v302, v303);
    v306.i64[0] = v304.u32[0];
    v306.i64[1] = v304.u32[1];
    uint64x2_t v307 = (uint64x2_t)v306;
    v306.i64[0] = v304.u32[2];
    v306.i64[1] = v304.u32[3];
    uint64x2_t v308 = (uint64x2_t)v306;
    v306.i64[0] = v305.u32[0];
    v306.i64[1] = v305.u32[1];
    int64x2_t v309 = v306;
    v306.i64[0] = v305.u32[2];
    v306.i64[1] = v305.u32[3];
    int64x2_t v310 = vpaddq_s64((int64x2_t)vshlq_u64(v307, (uint64x2_t)vzip1q_s64((int64x2_t)0, v309)), (int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v306)));
    int64x2_t v311 = vpaddq_s64(v309, v306);
    unint64_t v312 = (v310.i64[0] << v293) | v291;
    if (v311.i64[0] + (v293 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v312;
      unint64_t v312 = (unint64_t)v310.i64[0] >> -(v293 & 0x3F);
      if ((v293 & 0x3F) == 0) {
        unint64_t v312 = 0;
      }
    }
    int8x16_t v313 = vceqq_s8(v74, v158);
    int8x16_t v314 = vaddq_s8(v292, v168);
    unint64_t v315 = v311.i64[0] + v293;
    unint64_t v316 = v312 | (v310.i64[1] << v315);
    if ((v315 & 0x3F) + v311.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v315 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v316;
      unint64_t v316 = (unint64_t)v310.i64[1] >> -(v315 & 0x3F);
      if ((v315 & 0x3F) == 0) {
        unint64_t v316 = 0;
      }
    }
    int8x16_t v317 = vandq_s8(v170, v313);
    unint64_t v318 = v315 + v311.i64[1];
    int8x16_t v319 = vextq_s8((int8x16_t)0, v157, 0xEuLL);
    v320.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v320.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v321.i64[0] = -1;
    v321.i64[1] = -1;
    uint8x16_t v322 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v321, (uint8x16_t)vaddq_s8(v319, v320)), v314);
    int16x8_t v323 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v319.i8);
    int16x8_t v324 = (int16x8_t)vmovl_high_u8((uint8x16_t)v319);
    uint16x8_t v325 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v322.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v323)), (int16x8_t)vshlq_u16(vmovl_high_u8(v322), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v324)));
    uint16x8_t v326 = (uint16x8_t)vpaddq_s16(v323, v324);
    int32x4_t v327 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v326.i8);
    int32x4_t v328 = (int32x4_t)vmovl_high_u16(v326);
    int32x4_t v329 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v325.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v327)), (int32x4_t)vshlq_u32(vmovl_high_u16(v325), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)));
    int32x4_t v330 = vpaddq_s32(v327, v328);
    v331.i64[0] = v329.u32[0];
    v331.i64[1] = v329.u32[1];
    uint64x2_t v332 = (uint64x2_t)v331;
    v331.i64[0] = v329.u32[2];
    v331.i64[1] = v329.u32[3];
    uint64x2_t v333 = (uint64x2_t)v331;
    v331.i64[0] = v330.u32[0];
    v331.i64[1] = v330.u32[1];
    int64x2_t v334 = v331;
    v331.i64[0] = v330.u32[2];
    v331.i64[1] = v330.u32[3];
    int64x2_t v335 = vpaddq_s64((int64x2_t)vshlq_u64(v332, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)), (int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v331)));
    int64x2_t v336 = vpaddq_s64(v334, v331);
    unint64_t v337 = (v335.i64[0] << v318) | v316;
    if (v336.i64[0] + (v318 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v318 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v337;
      unint64_t v337 = (unint64_t)v335.i64[0] >> -(v318 & 0x3F);
      if ((v318 & 0x3F) == 0) {
        unint64_t v337 = 0;
      }
    }
    int8x16_t v338 = vceqq_s8(v74, v159);
    int8x16_t v339 = vaddq_s8(v169, v317);
    unint64_t v340 = v336.i64[0] + v318;
    unint64_t v341 = v337 | (v335.i64[1] << v340);
    if ((v340 & 0x3F) + v336.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
      unint64_t v341 = (unint64_t)v335.i64[1] >> -(v340 & 0x3F);
      if ((v340 & 0x3F) == 0) {
        unint64_t v341 = 0;
      }
    }
    int8x16_t v342 = vandq_s8(v170, v338);
    unint64_t v343 = v340 + v336.i64[1];
    v344.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v344.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v345.i64[0] = -1;
    v345.i64[1] = -1;
    uint8x16_t v346 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v345, (uint8x16_t)vaddq_s8(v158, v344)), v339);
    int16x8_t v347 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v158.i8);
    int16x8_t v348 = (int16x8_t)vmovl_high_u8((uint8x16_t)v158);
    uint16x8_t v349 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v346.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v347)), (int16x8_t)vshlq_u16(vmovl_high_u8(v346), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v348)));
    uint16x8_t v350 = (uint16x8_t)vpaddq_s16(v347, v348);
    int32x4_t v351 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v350.i8);
    int32x4_t v352 = (int32x4_t)vmovl_high_u16(v350);
    int32x4_t v353 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v349.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v351)), (int32x4_t)vshlq_u32(vmovl_high_u16(v349), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v352)));
    int32x4_t v354 = vpaddq_s32(v351, v352);
    v355.i64[0] = v353.u32[0];
    v355.i64[1] = v353.u32[1];
    uint64x2_t v356 = (uint64x2_t)v355;
    v355.i64[0] = v353.u32[2];
    v355.i64[1] = v353.u32[3];
    uint64x2_t v357 = (uint64x2_t)v355;
    v355.i64[0] = v354.u32[0];
    v355.i64[1] = v354.u32[1];
    int64x2_t v358 = v355;
    v355.i64[0] = v354.u32[2];
    v355.i64[1] = v354.u32[3];
    int64x2_t v359 = vpaddq_s64((int64x2_t)vshlq_u64(v356, (uint64x2_t)vzip1q_s64((int64x2_t)0, v358)), (int64x2_t)vshlq_u64(v357, (uint64x2_t)vzip1q_s64((int64x2_t)0, v355)));
    int64x2_t v360 = vpaddq_s64(v358, v355);
    unint64_t v361 = (v359.i64[0] << v343) | v341;
    if (v360.i64[0] + (v343 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
      unint64_t v361 = (unint64_t)v359.i64[0] >> -(v343 & 0x3F);
      if ((v343 & 0x3F) == 0) {
        unint64_t v361 = 0;
      }
    }
    int8x16_t v362 = vceqq_s8(v74, v160);
    int8x16_t v363 = vaddq_s8(v17, v342);
    unint64_t v364 = v360.i64[0] + v343;
    unint64_t v365 = v361 | (v359.i64[1] << v364);
    if ((v364 & 0x3F) + v360.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
      unint64_t v365 = (unint64_t)v359.i64[1] >> -(v364 & 0x3F);
      if ((v364 & 0x3F) == 0) {
        unint64_t v365 = 0;
      }
    }
    int8x16_t v366 = vandq_s8(v170, v362);
    unint64_t v367 = v364 + v360.i64[1];
    v368.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v368.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v369.i64[0] = -1;
    v369.i64[1] = -1;
    uint8x16_t v370 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v369, (uint8x16_t)vaddq_s8(v159, v368)), v363);
    int16x8_t v371 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
    int16x8_t v372 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
    uint16x8_t v373 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v370.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v371)), (int16x8_t)vshlq_u16(vmovl_high_u8(v370), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v372)));
    uint16x8_t v374 = (uint16x8_t)vpaddq_s16(v371, v372);
    int32x4_t v375 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v374.i8);
    int32x4_t v376 = (int32x4_t)vmovl_high_u16(v374);
    int32x4_t v377 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v376)));
    int32x4_t v378 = vpaddq_s32(v375, v376);
    v379.i64[0] = v377.u32[0];
    v379.i64[1] = v377.u32[1];
    uint64x2_t v380 = (uint64x2_t)v379;
    v379.i64[0] = v377.u32[2];
    v379.i64[1] = v377.u32[3];
    uint64x2_t v381 = (uint64x2_t)v379;
    v379.i64[0] = v378.u32[0];
    v379.i64[1] = v378.u32[1];
    int64x2_t v382 = v379;
    v379.i64[0] = v378.u32[2];
    v379.i64[1] = v378.u32[3];
    int64x2_t v383 = vpaddq_s64((int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v382)), (int64x2_t)vshlq_u64(v381, (uint64x2_t)vzip1q_s64((int64x2_t)0, v379)));
    int64x2_t v384 = vpaddq_s64(v382, v379);
    unint64_t v385 = (v383.i64[0] << v367) | v365;
    if (v384.i64[0] + (v367 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v385;
      unint64_t v385 = (unint64_t)v383.i64[0] >> -(v367 & 0x3F);
      if ((v367 & 0x3F) == 0) {
        unint64_t v385 = 0;
      }
    }
    int8x16_t v386 = vaddq_s8(v18, v366);
    unint64_t v387 = v384.i64[0] + v367;
    unint64_t v388 = v385 | (v383.i64[1] << v387);
    if ((v387 & 0x3F) + v384.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v387 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v388;
      unint64_t v388 = (unint64_t)v383.i64[1] >> -(v387 & 0x3F);
      if ((v387 & 0x3F) == 0) {
        unint64_t v388 = 0;
      }
    }
    unint64_t v389 = v387 + v384.i64[1];
    v390.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v390.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v391.i64[0] = -1;
    v391.i64[1] = -1;
    uint8x16_t v392 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v391, (uint8x16_t)vaddq_s8(v160, v390)), v386);
    int16x8_t v393 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v160.i8);
    int16x8_t v394 = (int16x8_t)vmovl_high_u8((uint8x16_t)v160);
    uint16x8_t v395 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v392.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v393)), (int16x8_t)vshlq_u16(vmovl_high_u8(v392), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v394)));
    uint16x8_t v396 = (uint16x8_t)vpaddq_s16(v393, v394);
    int32x4_t v397 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v396.i8);
    int32x4_t v398 = (int32x4_t)vmovl_high_u16(v396);
    int32x4_t v399 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v395.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v397)), (int32x4_t)vshlq_u32(vmovl_high_u16(v395), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v398)));
    int32x4_t v400 = vpaddq_s32(v397, v398);
    v401.i64[0] = v399.u32[0];
    v401.i64[1] = v399.u32[1];
    uint64x2_t v402 = (uint64x2_t)v401;
    v401.i64[0] = v399.u32[2];
    v401.i64[1] = v399.u32[3];
    uint64x2_t v403 = (uint64x2_t)v401;
    v401.i64[0] = v400.u32[0];
    v401.i64[1] = v400.u32[1];
    int64x2_t v404 = v401;
    v401.i64[0] = v400.u32[2];
    v401.i64[1] = v400.u32[3];
    int64x2_t v405 = vpaddq_s64((int64x2_t)vshlq_u64(v402, (uint64x2_t)vzip1q_s64((int64x2_t)0, v404)), (int64x2_t)vshlq_u64(v403, (uint64x2_t)vzip1q_s64((int64x2_t)0, v401)));
    int64x2_t v406 = vpaddq_s64(v404, v401);
    unint64_t v407 = (v405.i64[0] << v389) | v388;
    if (v406.i64[0] + (v389 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v258 + ((v389 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v407;
      if ((v389 & 0x3F) != 0) {
        unint64_t v407 = (unint64_t)v405.i64[0] >> -(v389 & 0x3F);
      }
      else {
        unint64_t v407 = 0;
      }
    }
    unint64_t v408 = v406.i64[0] + v389;
    unint64_t v409 = v407 | (v405.i64[1] << v408);
    if ((v408 & 0x3F) + v406.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v408 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
      unint64_t v409 = (unint64_t)v405.i64[1] >> -(v408 & 0x3F);
      if ((v408 & 0x3F) == 0) {
        unint64_t v409 = 0;
      }
    }
    unint64_t v410 = v408 + v406.i64[1];
    if ((v410 & 0x3F) != 0) {
      *(void *)((char *)v258 + ((v410 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
    }
    unint64_t result = (v410 - v259 + 7) >> 3;
    *a2 |= (_BYTE)result - 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  if (a5 > 1)
  {
    uint64_t v20 = a5 & 0xFE;
    if (a5 == v20)
    {
      uint64_t v21 = 0;
      int8x16_t v22 = (__int16 *)(a3 + 2);
      int8x16_t v23 = (char *)&v72 + 8;
      do
      {
        int8x16_t v24 = v23;
        int8x16_t v25 = v22;
        uint64_t v26 = a5;
        do
        {
          __int16 v27 = *(v25 - 1);
          __int16 v28 = *v25;
          v25 += 2;
          *(v24 - 4) = v27;
          *int8x16_t v24 = v28;
          v24 += 8;
          v26 -= 2;
        }
        while (v26);
        ++v21;
        int8x16_t v22 = (__int16 *)((char *)v22 + a4);
        v23 += 2;
      }
      while (v21 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (__int16 *)(a3 + 2);
      int8x16_t v31 = (char *)&v72 + 8;
      int8x16_t v32 = (char *)&v72 + ((8 * a5) & 0x7F0);
      do
      {
        int8x16_t v33 = v31;
        int8x16_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          __int16 v36 = *(v34 - 1);
          __int16 v37 = *v34;
          v34 += 2;
          *(v33 - 4) = v36;
          *int8x16_t v33 = v37;
          v33 += 8;
          v35 -= 2;
        }
        while (v35);
        int8x16_t v38 = (__int16 *)(a3 + v29 * a4 + 2 * v20);
        int8x16_t v39 = v32;
        uint64_t v40 = a5 - v20;
        do
        {
          __int16 v41 = *v38++;
          *int8x16_t v39 = v41;
          v39 += 4;
          --v40;
        }
        while (v40);
        ++v29;
        int8x16_t v30 = (__int16 *)((char *)v30 + a4);
        v31 += 2;
        v32 += 2;
      }
      while (v29 != a6);
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v11 = a6 & 0xFE;
    int8x16_t v12 = (__int16 *)(a3 + 1);
    int8x16_t v13 = (_WORD *)&v72 + 1;
    uint64_t v14 = v11;
    do
    {
      __int16 v15 = *(__int16 *)((char *)v12 - 1);
      __int16 v16 = *v12++;
      *(v13 - 1) = v15;
      *int8x16_t v13 = v16;
      v13 += 2;
      v14 -= 2;
    }
    while (v14);
    if (v11 != a6)
    {
LABEL_7:
      uint64_t v17 = a6 - v11;
      int8x16_t v18 = (_WORD *)&v72 + v11;
      int8x16_t v19 = (_WORD *)(a3 + v11 * a4);
      do
      {
        *v18++ = *v19;
        int8x16_t v19 = (_WORD *)((char *)v19 + a4);
        --v17;
      }
      while (v17);
    }
  }
  int v56 = v72;
  int v57 = BYTE1(v72);
  int v58 = BYTE8(v72);
  int v59 = BYTE9(v72);
  int v60 = BYTE2(v72);
  int v61 = BYTE3(v72);
  int v62 = BYTE10(v72);
  int v63 = BYTE11(v72);
  int v64 = v73;
  int v65 = BYTE1(v73);
  int v66 = BYTE8(v73);
  int v67 = BYTE9(v73);
  int v68 = BYTE2(v73);
  int v69 = BYTE3(v73);
  if (a5 >= 4) {
    unsigned int v42 = 4;
  }
  else {
    unsigned int v42 = a5;
  }
  if (a5 >= 4) {
    unsigned int v43 = a5 - 4;
  }
  else {
    unsigned int v43 = 0;
  }
  int v70 = BYTE10(v73);
  int v71 = BYTE11(v73);
  if (a6 >= 2) {
    unsigned int v44 = 2;
  }
  else {
    unsigned int v44 = a6;
  }
  if (a6 >= 2) {
    unsigned int v45 = a6 - 2;
  }
  else {
    unsigned int v45 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v56, a7, v42, v44);
  int v56 = BYTE4(v72);
  int v57 = BYTE5(v72);
  int v58 = BYTE12(v72);
  int v59 = BYTE13(v72);
  int v60 = BYTE6(v72);
  int v61 = BYTE7(v72);
  int v62 = BYTE14(v72);
  int v63 = HIBYTE(v72);
  int v64 = BYTE4(v73);
  int v65 = BYTE5(v73);
  int v66 = BYTE12(v73);
  int v67 = BYTE13(v73);
  int v68 = BYTE6(v73);
  int v69 = BYTE7(v73);
  int v70 = BYTE14(v73);
  int v71 = HIBYTE(v73);
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v45;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 12, (uint64_t)&v56, a7, v42, v47);
  int v56 = v74;
  int v57 = BYTE1(v74);
  int v58 = BYTE8(v74);
  int v59 = BYTE9(v74);
  int v60 = BYTE2(v74);
  int v61 = BYTE3(v74);
  int v62 = BYTE10(v74);
  int v63 = BYTE11(v74);
  int v64 = v75;
  int v65 = BYTE1(v75);
  int v66 = BYTE8(v75);
  int v67 = BYTE9(v75);
  int v68 = BYTE2(v75);
  int v69 = BYTE3(v75);
  if (a5 >= 8) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = v43;
  }
  int v70 = BYTE10(v75);
  int v71 = BYTE11(v75);
  int v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v56, a7, v49, v44);
  int v56 = BYTE4(v74);
  int v57 = BYTE5(v74);
  int v58 = BYTE12(v74);
  int v59 = BYTE13(v74);
  int v60 = BYTE6(v74);
  int v61 = BYTE7(v74);
  int v62 = BYTE14(v74);
  int v63 = HIBYTE(v74);
  int v64 = BYTE4(v75);
  int v65 = BYTE5(v75);
  int v66 = BYTE12(v75);
  int v67 = BYTE13(v75);
  int v68 = BYTE6(v75);
  int v69 = BYTE7(v75);
  int v70 = BYTE14(v75);
  int v71 = HIBYTE(v75);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 36, (uint64_t)&v56, a7, v49, v47);
  if (v50) {
    char v52 = 4;
  }
  else {
    char v52 = 0;
  }
  if (v48) {
    char v53 = 2;
  }
  else {
    char v53 = 0;
  }
  if (result) {
    char v54 = -8;
  }
  else {
    char v54 = -16;
  }
  *a2 = v54 | v52 | v46 | v53;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v277 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v241 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v240 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v239 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v238 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v236 = v7;
  BOOL v237 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v235 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[v6];
    *(&v275 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(unsigned int *)((char *)&v252 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v251[v17 + 2] = v18;
    int8x16_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint64_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint64_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint64_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint64_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint64_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint64_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint64_t v29 = &v273[v17 + 2];
    v273[v6 + 2] = v20;
    v274[v6] = v20;
    v273[v6] = 0;
    if (v235)
    {
      unsigned int v30 = v20;
      if (v237) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v273[v6] = 1;
        v274[v6] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        int8x16_t v31 = &v273[v17 + 2];
      }
      else {
        int8x16_t v31 = (unsigned int *)(&v257 + v6);
      }
      unsigned int v20 = *v31;
      *uint64_t v29 = *v31;
      if (v237)
      {
LABEL_58:
        if (v236) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v273[v6] = 2;
      v274[v6] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      int8x16_t v32 = &v273[v17 + 2];
    }
    else {
      int8x16_t v32 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v32;
    *uint64_t v29 = *v32;
    if (v236)
    {
LABEL_59:
      if (v238) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v273[v6] = 3;
      v274[v6] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      int8x16_t v33 = &v273[v17 + 2];
    }
    else {
      int8x16_t v33 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v33;
    *uint64_t v29 = *v33;
    if (v238)
    {
LABEL_60:
      if (v240) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v273[v6] = 4;
      v274[v6] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      int8x16_t v34 = &v273[v17 + 2];
    }
    else {
      int8x16_t v34 = (unsigned int *)(&v263 + v6);
    }
    unsigned int v20 = *v34;
    *uint64_t v29 = *v34;
    if (v240)
    {
LABEL_61:
      if (v239) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v273[v6] = 5;
      v274[v6] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      uint64_t v35 = &v273[v17 + 2];
    }
    else {
      uint64_t v35 = (unsigned int *)(&v265 + v6);
    }
    unsigned int v20 = *v35;
    *uint64_t v29 = *v35;
    if (v239)
    {
LABEL_62:
      if (v241) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v273[v6] = 7;
        v274[v6] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        __int16 v37 = &v273[v17 + 2];
      }
      else {
        __int16 v37 = (unsigned int *)(&v269 + v6);
      }
      unsigned int v20 = *v37;
      *uint64_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v273[v6] = 6;
      v274[v6] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      __int16 v36 = &v273[v17 + 2];
    }
    else {
      __int16 v36 = (unsigned int *)(&v267 + v6);
    }
    unsigned int v20 = *v36;
    *uint64_t v29 = *v36;
    if (!v241) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v271 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42]
          - v43
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v14
            + 1);
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v72 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v72) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v271 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v271 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  uint64_t v51 = v252;
  uint64_t v52 = v253;
  unsigned int v54 = v271;
  unsigned int v53 = v272;
  BOOL v56 = v272 >= v271;
  BOOL v57 = v272 < v271;
  int v58 = kDQuadParamTable[160 * v253 + 6 + 10 * v272];
  int v249 = kDQuadParamTable[160 * v252 + 6 + 10 * v271];
  int v55 = v249;
  int v250 = v58;
  v251[0] = v249;
  v251[1] = v58;
  if (*(&v271 + v56) == *(&v271 + v57))
  {
    int v59 = v249;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v251 | (4 * v57));
    int v59 = v249;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v249 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v249 | (4 * v56)) += v60;
      int v59 = v249;
    }
  }
  if (a4) {
    BOOL v61 = a5 == 0;
  }
  else {
    BOOL v61 = 1;
  }
  int v62 = v61;
  int v234 = v62;
  int v63 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v64 = *((void *)v63 + 1);
  int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v51
        + 1);
  int v66 = v63[4];
  LODWORD(v63) = v63[5];
  unsigned int v67 = v66 + v65;
  unsigned int v247 = v67;
  unsigned int v68 = v63 + v65;
  unsigned int v245 = v68;
  int v69 = v59 - v55;
  if (v69 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v69)
    {
      unsigned int v245 = --v68;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v70 = -1;
LABEL_167:
        unsigned int v247 = v70 + v67;
      }
    }
  }
  else if (v69)
  {
    v68 += v69;
    unsigned int v245 = v68;
    int v70 = v69;
    goto LABEL_167;
  }
  BOOL v72 = v51 == 5 && v54 == 1 && v69 < 2;
  int v73 = v72;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v74 = 31744;
    }
    else {
      int v74 = 0;
    }
    if (v51 == 4) {
      int v75 = 2139095040;
    }
    else {
      int v75 = v74;
    }
    int v76 = 1 << (v275 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_188;
      }
LABEL_336:
      if ((v75 & ~v257) == 0 || v257 == v76) {
        int v73 = 1;
      }
      if (!v237) {
        goto LABEL_343;
      }
LABEL_189:
      if (v236) {
        goto LABEL_190;
      }
LABEL_350:
      if ((v75 & ~v261) == 0 || v261 == v76) {
        int v73 = 1;
      }
      if (!v238) {
        goto LABEL_357;
      }
LABEL_191:
      if (v240) {
        goto LABEL_192;
      }
LABEL_364:
      if ((v75 & ~v265) == 0 || v265 == v76) {
        int v73 = 1;
      }
      if (!v239) {
        goto LABEL_371;
      }
LABEL_193:
      if (!v241) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v75 & ~v255) == 0 || v255 == v76) {
        int v73 = 1;
      }
      if (!v235) {
        goto LABEL_336;
      }
LABEL_188:
      if (v237) {
        goto LABEL_189;
      }
LABEL_343:
      if ((v75 & ~v259) == 0 || v259 == v76) {
        int v73 = 1;
      }
      if (!v236) {
        goto LABEL_350;
      }
LABEL_190:
      if (v238) {
        goto LABEL_191;
      }
LABEL_357:
      if ((v75 & ~v263) == 0 || v263 == v76) {
        int v73 = 1;
      }
      if (!v240) {
        goto LABEL_364;
      }
LABEL_192:
      if (v239) {
        goto LABEL_193;
      }
LABEL_371:
      if ((v75 & ~v267) == 0 || v267 == v76) {
        int v73 = 1;
      }
      if (!v241)
      {
LABEL_194:
        if ((v75 & ~v269) == 0 || v269 == v76) {
          int v73 = 1;
        }
      }
    }
  }
  BOOL v72 = v64 >> v68 > 4;
  int v78 = v234;
  if (v72) {
    int v78 = 1;
  }
  int v79 = v78 | v73;
  int8x16_t v80 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v81 = *((void *)v80 + 1);
  int v82 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v52
        + 1);
  int v83 = v80[4];
  LODWORD(v80) = v80[5];
  unsigned int v84 = v83 + v82;
  unsigned int v248 = v84;
  unsigned int v85 = v80 + v82;
  unsigned int v246 = v85;
  int v86 = v250 - v58;
  if (v250 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v250)
    {
      unsigned int v246 = --v85;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v87 = -1;
LABEL_206:
        unsigned int v248 = v87 + v84;
      }
    }
  }
  else if (v250 != v58)
  {
    v85 += v86;
    unsigned int v246 = v85;
    int v87 = v250 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v86 < 2) {
    int v79 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v88 = 31744;
    }
    else {
      int v88 = 0;
    }
    if (v52 == 4) {
      int v88 = 2139095040;
    }
    int v89 = 1 << (v276 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_221;
      }
LABEL_386:
      if ((v88 & ~v258) == 0 || v258 == v89) {
        int v79 = 1;
      }
      if (!v237) {
        goto LABEL_393;
      }
LABEL_222:
      if (v236) {
        goto LABEL_223;
      }
LABEL_400:
      if ((v88 & ~v262) == 0 || v262 == v89) {
        int v79 = 1;
      }
      if (!v238) {
        goto LABEL_407;
      }
LABEL_224:
      if (v240) {
        goto LABEL_225;
      }
LABEL_414:
      if ((v88 & ~v266) == 0 || v266 == v89) {
        int v79 = 1;
      }
      if (!v239) {
        goto LABEL_421;
      }
LABEL_226:
      if (!v241) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v88 & ~v256) == 0 || v256 == v89) {
        int v79 = 1;
      }
      if (!v235) {
        goto LABEL_386;
      }
LABEL_221:
      if (v237) {
        goto LABEL_222;
      }
LABEL_393:
      if ((v88 & ~v260) == 0 || v260 == v89) {
        int v79 = 1;
      }
      if (!v236) {
        goto LABEL_400;
      }
LABEL_223:
      if (v238) {
        goto LABEL_224;
      }
LABEL_407:
      if ((v88 & ~v264) == 0 || v264 == v89) {
        int v79 = 1;
      }
      if (!v240) {
        goto LABEL_414;
      }
LABEL_225:
      if (v239) {
        goto LABEL_226;
      }
LABEL_421:
      if ((v88 & ~v268) == 0 || v268 == v89) {
        int v79 = 1;
      }
      if (!v241)
      {
LABEL_227:
        if ((v88 & ~v270) == 0 || v270 == v89) {
          int v79 = 1;
        }
      }
    }
  }
  char v91 = 0;
  uint64_t v92 = 0;
  BOOL v72 = v81 >> v85 > 4;
  int v93 = v234;
  if (v72) {
    int v93 = 1;
  }
  int v231 = v93;
  int v232 = v79;
  uint64_t v244 = 0;
  uint64_t v243 = 0;
  memset(v242, 0, sizeof(v242));
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v275 + v92);
    if (v96 >= *(&v247 + v92)) {
      unsigned int v97 = *(&v247 + v92);
    }
    else {
      unsigned int v97 = *(&v275 + v92);
    }
    *(&v247 + v92) = v97;
    int8x16_t v98 = &kDQuadParamTable[160 * *(&v252 + v92) + 10 * *(&v271 + v92)];
    if (v98[5]) {
      unsigned int v99 = v96;
    }
    else {
      unsigned int v99 = 0;
    }
    if (v99 >= *(&v245 + v92)) {
      unsigned int v99 = *(&v245 + v92);
    }
    int v100 = v274[v92] & (-1 << (v96 - v97));
    int8x16_t v101 = &v255 + v92;
    int v102 = *v101 - v100;
    uint64_t v103 = 32 * v92;
    int8x16_t v104 = &v254[32 * v92];
    if (v234) {
      int v102 = 0;
    }
    int v105 = v101[2] - v100;
    if (v235) {
      int v105 = 0;
    }
    *int8x16_t v104 = v102;
    v104[1] = v105;
    int v106 = v101[4] - v100;
    if (v237) {
      int v106 = 0;
    }
    int v107 = v101[6] - v100;
    if (v236) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v101[8] - v100;
    if (v238) {
      int v108 = 0;
    }
    int v109 = v101[10] - v100;
    if (v240) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    int v110 = v101[12] - v100;
    if (v239) {
      int v110 = 0;
    }
    int v111 = v101[14] - v100;
    if (v241) {
      int v111 = 0;
    }
    v104[6] = v110;
    v104[7] = v111;
    char v112 = v91;
    *(&v245 + v92) = v99;
    unint64_t v113 = *((void *)v98 + 1);
    *((_DWORD *)&v244 + v92) = v100;
    unint64_t v114 = v113 >> v99;
    int v115 = ~(-1 << v96);
    if (v114 <= 1) {
      unint64_t v116 = 1;
    }
    else {
      unint64_t v116 = v114;
    }
    uint64_t v117 = 2 * v273[v92];
    do
    {
      if (v117 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)&v254[v103] / v116;
        }
        else {
          LODWORD(v118) = 0;
        }
        int8x16_t v119 = (int *)v242 + 7 * v92 + v95;
        *int8x16_t v119 = v118;
        if (v114 >= 2)
        {
          unint64_t v120 = *(unsigned int *)&v254[v103];
          if (v120)
          {
            if (v120 / v116 * v116 == v120 && ((v120 / v116) & 1) != 0)
            {
              if (v100 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v101[v94], v123 = v251[v92 + 2], v122 != v123)
                  && ((a3 | 2) != 3 || v116 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  *int8x16_t v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v101[v94] == v115) {
          *int8x16_t v119 = ~(-1 << v99);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94) >= a4)
        {
          *int8x16_t v119 = 0;
        }
        ++v95;
      }
      v103 += 4;
      v94 += 2;
    }
    while (v94 != 16);
    char v91 = 1;
    uint64_t v92 = 1;
  }
  while ((v112 & 1) == 0);
  int8x16_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)a1 = 0;
  if ((v231 | v232) == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v275;
    unsigned int v130 = v276;
    uint64_t v131 = v275 - 2;
    uint64_t v132 = v276 - 2;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= a5 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v255 + 2 * v127) >> 2;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v129 != 2 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x60)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 2;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_315:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v255 + 2 * v127 + 1) >> 2;
        if (v132 <= 0x100)
        {
LABEL_319:
          if (v130 != 2 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x60)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 2;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return v231 | v232;
      }
    }
  }
  unsigned int v147 = v271;
  char v148 = LOBYTE(v274[0]) | v271;
  if (v274[0] | v271)
  {
    char v148 = v271 - 2;
    if (v271 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v271 + 1;
      goto LABEL_430;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_430:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v272;
  if (v274[1] | v272)
  {
    char v169 = v272 - 2;
    if (v272 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v272 + 1;
      goto LABEL_436;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_436:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 94) >= 0xFFFFFFFFFFFFFF9FLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_453;
    }
LABEL_446:
    unsigned int v177 = v275;
    if (!v147) {
      goto LABEL_461;
    }
    goto LABEL_465;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x60) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_446;
  }
LABEL_453:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x60) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v275;
  if (!v147)
  {
LABEL_461:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v276;
      if (!v168) {
        goto LABEL_526;
      }
LABEL_473:
      unsigned int v192 = v248;
      if (v248 <= 0x100 && v248 && v167 - v126 + (v175 << 6) + (unint64_t)v248 <= 0x60)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v244) >> (v185 - v248));
        unint64_t v195 = v248;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_481;
    }
  }
LABEL_465:
  unsigned int v186 = v247;
  if (v247 <= 0x100 && v247 && v167 - v126 + (v175 << 6) + (unint64_t)v247 <= 0x60)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v244 >> (v177 - v247);
    unint64_t v189 = v247;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v276;
  if (v168) {
    goto LABEL_473;
  }
LABEL_526:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_473;
  }
LABEL_481:
  unint64_t v198 = v245;
  if (v245)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x60)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v273[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v246;
  if (v246)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x60)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v273[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 96 - v176;
  unsigned int v211 = (96 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x60)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x60)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v242 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x60)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v242[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_519:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x60)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_519;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return v231 | v232;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = ((a3 & 0xFFFFFFFD) == 1) << 7;
  uint64_t result = v6;
  do
  {
    if ((unint64_t)(result - v6 + (v4 << 6) - 91) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      char v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 6;
      do
      {
        unint64_t v18 = 64 - result;
        if (64 - result >= v17) {
          unint64_t v18 = v17;
        }
        v15 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v18)) << v16;
        v16 += v18;
        unint64_t v19 = v18 + result;
        v4 += v19 >> 6;
        uint64_t result = v19 & 0x3F;
        v17 -= v18;
      }
      while (v17);
    }
    else
    {
      char v15 = 0;
    }
    int v20 = 4 * (v15 & 0x3F);
    if (a3 != 4)
    {
      BOOL v25 = v20 == 128 && v7 == 1;
      if (!v25 && v20)
      {
        if (v20 == 252) {
          int v20 = 255;
        }
        else {
          v20 |= 2 - (v15 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 8 * v3) = v20 ^ v8;
    if ((unint64_t)(result - v6 + (v4 << 6) - 91) < 0xFFFFFFFFFFFFFF9FLL)
    {
      char v10 = 0;
    }
    else
    {
      char v10 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 6;
      do
      {
        unint64_t v23 = 64 - result;
        if (64 - result >= v22) {
          unint64_t v23 = v22;
        }
        v10 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v23)) << v21;
        v21 += v23;
        unint64_t v24 = v23 + result;
        v4 += v24 >> 6;
        uint64_t result = v24 & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    int v11 = 4 * (v10 & 0x3F);
    int v12 = (2 - (v10 & 1)) | v11;
    if (v11 == 252) {
      int v12 = 255;
    }
    if (v11 == 128 && v7 == 1 || v11 == 0) {
      int v12 = v11;
    }
    if (a3 == 4) {
      int v12 = v11;
    }
    *(_DWORD *)(a2 + 8 * v3++ + 4) = v12 ^ v8;
  }
  while (v3 != 8);
  return result;
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v193 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v188[0] = 8;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v178 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v178 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)1>::getDquadModeData(0, v12, v14, &v189);
  v192[0] = DquadModeData;
  v191[0] = 0;
  v188[1] = 8;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)1>::getDquadModeData(1, v11, v20, &v190);
  v192[1] = v24;
  v191[1] = 0;
  BOOL v25 = kDQuadParamTable;
  BOOL v27 = v24 < DquadModeData;
  unsigned int v28 = v24;
  int v29 = kDQuadParamTable[10 * v24 + 6];
  int v185 = kDQuadParamTable[10 * DquadModeData + 6];
  int v26 = v185;
  int v186 = v29;
  v187[0] = v185;
  v187[1] = v29;
  if (v192[v24 >= DquadModeData] == v192[v27])
  {
    int v30 = v185;
  }
  else
  {
    int v31 = *(_DWORD *)((unint64_t)v187 | (4 * v27));
    int v30 = v185;
    if (v31 >= 1)
    {
      *(_DWORD *)((unint64_t)&v185 | (4 * v27)) = 0;
      *(_DWORD *)((unint64_t)&v185 | (4 * (v24 >= DquadModeData))) += v31;
      int v30 = v185;
    }
  }
  int8x16_t v32 = &kDQuadParamTable[10 * DquadModeData];
  int v33 = v32[5];
  LODWORD(v34) = v32[4] + 2;
  unsigned int v35 = v33 + 2;
  int v36 = v30 - v26;
  if (v36 < 0)
  {
    if (kDQuadParamTable[10 * DquadModeData + 7] >= -v36) {
      goto LABEL_35;
    }
    unsigned int v35 = v33 + 1;
    if (kDQuadParamTable[10 * DquadModeData + 8]) {
      goto LABEL_35;
    }
    int v36 = -1;
  }
  else
  {
    if (!v36) {
      goto LABEL_35;
    }
    v35 += v36;
  }
  LODWORD(v34) = v36 + v34;
LABEL_35:
  if (v34 >= 8) {
    uint64_t v34 = 8;
  }
  else {
    uint64_t v34 = v34;
  }
  v184[0] = v34;
  LODWORD(v37) = 8 * (v33 != 0);
  if (v37 >= v35) {
    unint64_t v37 = v35;
  }
  else {
    unint64_t v37 = v37;
  }
  v183[0] = v37;
  unsigned int v38 = &kDQuadParamTable[10 * v24];
  int v39 = v38[5];
  LODWORD(v40) = v38[4] + 2;
  unsigned int v41 = v39 + 2;
  int v42 = v186 - v29;
  if (v42 < 0)
  {
    if (kDQuadParamTable[10 * v24 + 7] >= -v42) {
      goto LABEL_47;
    }
    unsigned int v41 = v39 + 1;
    if (kDQuadParamTable[10 * v24 + 8]) {
      goto LABEL_47;
    }
    int v42 = -1;
  }
  else
  {
    if (!v42) {
      goto LABEL_47;
    }
    v41 += v42;
  }
  LODWORD(v40) = v42 + v40;
LABEL_47:
  int v43 = v178 + v19;
  if (v40 >= 8) {
    uint64_t v40 = 8;
  }
  else {
    uint64_t v40 = v40;
  }
  v184[1] = v40;
  LODWORD(v44) = 8 * (v39 != 0);
  if (v44 >= v41) {
    unint64_t v44 = v41;
  }
  else {
    unint64_t v44 = v44;
  }
  v183[1] = v44;
  uint64_t v182 = 0;
  if (DquadModeData)
  {
    int v45 = 0;
    if (v34 && (unint64_t)(v10 - v6 + (v13 << 6) + v34) <= 0x60)
    {
      int v45 = 0;
      uint64_t v46 = 0;
      unint64_t v47 = v34;
      do
      {
        unint64_t v48 = 64 - v10;
        if (64 - v10 >= v47) {
          unint64_t v48 = v47;
        }
        v45 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v48)) << v46;
        v46 += v48;
        v13 += (v48 + v10) >> 6;
        uint64_t v10 = (v48 + v10) & 0x3F;
        v47 -= v48;
      }
      while (v47);
    }
    LODWORD(v182) = v45 << (8 - v34);
    v43 += v34;
    if (v28)
    {
LABEL_61:
      int v49 = 0;
      if (v40 && (unint64_t)(v10 - v6 + (v13 << 6) + v40) <= 0x60)
      {
        int v49 = 0;
        uint64_t v50 = 0;
        unint64_t v51 = v40;
        do
        {
          unint64_t v52 = 64 - v10;
          if (64 - v10 >= v51) {
            unint64_t v52 = v51;
          }
          v49 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v52)) << v50;
          v50 += v52;
          v13 += (v52 + v10) >> 6;
          uint64_t v10 = (v52 + v10) & 0x3F;
          v51 -= v52;
        }
        while (v51);
      }
      HIDWORD(v182) = v49 << (8 - v40);
      v43 += v40;
      uint64_t v181 = 0;
      if (!v37) {
        goto LABEL_78;
      }
      goto LABEL_71;
    }
  }
  else
  {
    LODWORD(v182) = v189;
    if (v24) {
      goto LABEL_61;
    }
  }
  HIDWORD(v182) = v190;
  uint64_t v181 = 0;
  if (v37)
  {
LABEL_71:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v53 = 0;
      uint64_t v54 = 0;
      unint64_t v55 = 3;
      do
      {
        unint64_t v56 = 64 - v10;
        if (64 - v10 >= v55) {
          unint64_t v56 = v55;
        }
        v53 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v56)) << v54;
        v54 += v56;
        v13 += (v56 + v10) >> 6;
        uint64_t v10 = (v56 + v10) & 0x3F;
        v55 -= v56;
      }
      while (v55);
    }
    else
    {
      int v53 = 0;
    }
    LODWORD(v181) = v53;
    v43 += 3;
  }
LABEL_78:
  if (v44)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v57 = 0;
      uint64_t v58 = 0;
      unint64_t v59 = 3;
      do
      {
        unint64_t v60 = 64 - v10;
        if (64 - v10 >= v59) {
          unint64_t v60 = v59;
        }
        v57 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v60)) << v58;
        v58 += v60;
        v13 += (v60 + v10) >> 6;
        uint64_t v10 = (v60 + v10) & 0x3F;
        v59 -= v60;
      }
      while (v59);
    }
    else
    {
      int v57 = 0;
    }
    HIDWORD(v181) = v57;
    v43 += 3;
  }
  uint64_t v61 = 0;
  unsigned int v62 = a3 & 0xFFFFFFFD;
  unsigned int v63 = 96 - v43;
  unsigned int v64 = (96 - v43) / 7u;
  unint64_t v65 = (v10 | (v13 << 6)) + v63 % 7;
  uint64_t v180 = 0;
  memset(v179, 0, sizeof(v179));
  do
  {
    unint64_t v67 = v65 >> 6;
    int64_t result = v65 & 0x3F;
    if (v37)
    {
      if (result - v6 + (v65 & 0xFFFFFFFFFFFFFFC0) + v37 <= 0x60)
      {
        int v69 = 0;
        uint64_t v70 = 0;
        unint64_t v71 = v37;
        do
        {
          unint64_t v72 = 64 - result;
          if (64 - result >= v71) {
            unint64_t v72 = v71;
          }
          v69 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v72)) << v70;
          v70 += v72;
          unint64_t v73 = v72 + result;
          v67 += v73 >> 6;
          int64_t result = v73 & 0x3F;
          v71 -= v72;
        }
        while (v71);
      }
      else
      {
        int v69 = 0;
      }
      *((_DWORD *)v179 + v61) = v69;
    }
    if (v44)
    {
      if (result - v6 + (v67 << 6) + v44 <= 0x60)
      {
        int v74 = 0;
        uint64_t v75 = 0;
        unint64_t v76 = v44;
        do
        {
          unint64_t v77 = 64 - result;
          if (64 - result >= v76) {
            unint64_t v77 = v76;
          }
          v74 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v77)) << v75;
          v75 += v77;
          unint64_t v78 = v77 + result;
          v67 += v78 >> 6;
          int64_t result = v78 & 0x3F;
          v76 -= v77;
        }
        while (v76);
      }
      else
      {
        int v74 = 0;
      }
      *((_DWORD *)&v179[1] + v61 + 3) = v74;
      int v66 = v44 + v37;
    }
    else
    {
      int v66 = v37;
    }
    unint64_t v65 = (result | (v67 << 6)) + v64 - v66;
    ++v61;
  }
  while (v61 != 7);
  char v79 = 0;
  uint64_t v80 = 0;
  do
  {
    char v85 = v79;
    unint64_t v86 = *(void *)&v25[160 * v191[v80] + 2 + 10 * v192[v80]];
    int v87 = v183[v80];
    if (v86 >> v87 <= 1) {
      unint64_t v88 = 1;
    }
    else {
      unint64_t v88 = v86 >> v87;
    }
    int v89 = v188[v80];
    unint64_t v90 = v88 >> 1;
    if (v88 >> 1 >= (unint64_t)(1 << (v89 - v184[v80])) >> 1) {
      unint64_t v91 = (unint64_t)(1 << (v89 - v184[v80])) >> 1;
    }
    else {
      unint64_t v91 = v88 >> 1;
    }
    unint64_t v92 = (1 << (v89 - 1));
    unint64_t v93 = v183[v80 - 2];
    unint64_t v94 = v92 - v93;
    unint64_t v95 = 1 << v89;
    int v96 = (1 << v89) - 1;
    if (v93) {
      unint64_t v97 = v91;
    }
    else {
      unint64_t v97 = 0;
    }
    BOOL v98 = v93 == v92;
    BOOL v99 = v89 == 16;
    if (v89 == 16) {
      unint64_t v100 = 31744;
    }
    else {
      unint64_t v100 = 2139095040;
    }
    if (v89 == 16) {
      unint64_t v101 = 64512;
    }
    else {
      unint64_t v101 = 4286578688;
    }
    unint64_t v102 = 2143289344;
    if (v99) {
      unint64_t v102 = 32256;
    }
    unint64_t v103 = 4290772992;
    if (v99) {
      unint64_t v103 = 65024;
    }
    unint64_t v104 = (v101 - 1);
    if (v87)
    {
      int64_t result = (int64_t)v25;
      unint64_t v105 = v86 + v93;
      uint64_t v106 = ~(-1 << v87);
      int v107 = *((_DWORD *)&v181 + v80);
      unint64_t v108 = v94 / v88;
      if (!v107)
      {
        uint64_t v116 = 0;
        unint64_t v111 = v97;
        BOOL v110 = v93 == v92;
        goto LABEL_171;
      }
      uint64_t v109 = *((unsigned int *)v179 + 7 * v80);
      BOOL v110 = v108 == v109;
      if (v93 | v109)
      {
        if (v105 >= v95 && v109 == v106)
        {
          uint64_t v116 = 1;
          unint64_t v111 = v95 - 1;
          goto LABEL_171;
        }
        unint64_t v111 = v90 + v88 * v109;
      }
      else
      {
        unint64_t v111 = 0;
      }
      uint64_t v116 = 1;
LABEL_171:
      unint64_t v117 = v111 + v93;
      unint64_t v118 = v117;
      if (a3 == 4)
      {
        BOOL v119 = v117 < v100 || v117 >= v102;
        unint64_t v118 = (v100 - 1);
        if (v119)
        {
          BOOL v120 = v117 < v102 || v117 >= v92;
          unint64_t v118 = v92;
          if (v120)
          {
            if (v117 < v103 && v117 >= v101) {
              unint64_t v118 = (v101 - 1);
            }
            else {
              unint64_t v118 = v117;
            }
          }
        }
      }
      if (v118 >= v95) {
        int v122 = v96;
      }
      else {
        int v122 = v118;
      }
      if (v110) {
        int v123 = 0;
      }
      else {
        int v123 = v122 ^ v92;
      }
      if (v62 != 1) {
        int v123 = v122;
      }
      *(_DWORD *)(a2 + 4 * v80) = v123;
      if (v107 == 1)
      {
        unint64_t v124 = v97;
        BOOL v125 = v93 == v92;
      }
      else
      {
        uint64_t v126 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v125 = v108 == v126;
        if (v93 | v126)
        {
          if (v105 < v95 || (unint64_t v124 = v95 - 1, v126 != v106)) {
            unint64_t v124 = v90 + v88 * v126;
          }
        }
        else
        {
          unint64_t v124 = 0;
        }
        ++v116;
      }
      unint64_t v127 = v124 + v93;
      unint64_t v128 = v127;
      if (a3 == 4)
      {
        BOOL v129 = v127 < v100 || v127 >= v102;
        unint64_t v128 = (v100 - 1);
        if (v129)
        {
          BOOL v130 = v127 < v102 || v127 >= v92;
          unint64_t v128 = v92;
          if (v130)
          {
            if (v127 < v103 && v127 >= v101) {
              unint64_t v128 = (v101 - 1);
            }
            else {
              unint64_t v128 = v127;
            }
          }
        }
      }
      if (v128 >= v95) {
        int v132 = v96;
      }
      else {
        int v132 = v128;
      }
      if (v125) {
        int v133 = 0;
      }
      else {
        int v133 = v132 ^ v92;
      }
      if (v62 != 1) {
        int v133 = v132;
      }
      *(_DWORD *)(a2 + 4 * v80 + 8) = v133;
      if (v107 == 2)
      {
        unint64_t v134 = v97;
        BOOL v135 = v93 == v92;
      }
      else
      {
        uint64_t v136 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v135 = v108 == v136;
        if (v93 | v136)
        {
          if (v105 < v95 || (unint64_t v134 = v95 - 1, v136 != v106)) {
            unint64_t v134 = v90 + v88 * v136;
          }
        }
        else
        {
          unint64_t v134 = 0;
        }
        ++v116;
      }
      unint64_t v137 = v134 + v93;
      unint64_t v138 = v137;
      if (a3 == 4)
      {
        if (v137 < v100 || (unint64_t v138 = (v100 - 1), v137 >= v102))
        {
          if (v137 < v102 || (unint64_t v138 = v92, v137 >= v92))
          {
            if (v137 < v103 && v137 >= v101) {
              unint64_t v138 = (v101 - 1);
            }
            else {
              unint64_t v138 = v137;
            }
          }
        }
      }
      if (v138 >= v95) {
        int v140 = v96;
      }
      else {
        int v140 = v138;
      }
      if (v135) {
        int v141 = 0;
      }
      else {
        int v141 = v140 ^ v92;
      }
      if (v62 != 1) {
        int v141 = v140;
      }
      *(_DWORD *)(a2 + 4 * v80 + 16) = v141;
      if (v107 == 3)
      {
        unint64_t v142 = v97;
        BOOL v143 = v93 == v92;
      }
      else
      {
        uint64_t v144 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v143 = v108 == v144;
        if (v93 | v144)
        {
          if (v105 < v95 || (unint64_t v142 = v95 - 1, v144 != v106)) {
            unint64_t v142 = v90 + v88 * v144;
          }
        }
        else
        {
          unint64_t v142 = 0;
        }
        ++v116;
      }
      unint64_t v145 = v142 + v93;
      unint64_t v146 = v145;
      if (a3 == 4)
      {
        if (v145 < v100 || (unint64_t v146 = (v100 - 1), v145 >= v102))
        {
          if (v145 < v102 || (unint64_t v146 = v92, v145 >= v92))
          {
            if (v145 < v103 && v145 >= v101) {
              unint64_t v146 = (v101 - 1);
            }
            else {
              unint64_t v146 = v145;
            }
          }
        }
      }
      if (v146 >= v95) {
        int v148 = v96;
      }
      else {
        int v148 = v146;
      }
      if (v143) {
        int v149 = 0;
      }
      else {
        int v149 = v148 ^ v92;
      }
      if (v62 != 1) {
        int v149 = v148;
      }
      *(_DWORD *)(a2 + 4 * v80 + 24) = v149;
      if (v107 == 4)
      {
        unint64_t v150 = v97;
        BOOL v151 = v93 == v92;
      }
      else
      {
        uint64_t v152 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v151 = v108 == v152;
        if (v93 | v152)
        {
          if (v105 < v95 || (unint64_t v150 = v95 - 1, v152 != v106)) {
            unint64_t v150 = v90 + v88 * v152;
          }
        }
        else
        {
          unint64_t v150 = 0;
        }
        ++v116;
      }
      unint64_t v153 = v150 + v93;
      unint64_t v154 = v153;
      if (a3 == 4)
      {
        if (v153 < v100 || (unint64_t v154 = (v100 - 1), v153 >= v102))
        {
          if (v153 < v102 || (unint64_t v154 = v92, v153 >= v92))
          {
            if (v153 < v103 && v153 >= v101) {
              unint64_t v154 = (v101 - 1);
            }
            else {
              unint64_t v154 = v153;
            }
          }
        }
      }
      if (v154 >= v95) {
        int v156 = v96;
      }
      else {
        int v156 = v154;
      }
      if (v151) {
        int v157 = 0;
      }
      else {
        int v157 = v156 ^ v92;
      }
      if (v62 != 1) {
        int v157 = v156;
      }
      *(_DWORD *)(a2 + 4 * v80 + 32) = v157;
      if (v107 == 5)
      {
        unint64_t v158 = v97;
        BOOL v159 = v93 == v92;
      }
      else
      {
        uint64_t v160 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v159 = v108 == v160;
        if (v93 | v160)
        {
          if (v105 < v95 || (unint64_t v158 = v95 - 1, v160 != v106)) {
            unint64_t v158 = v90 + v88 * v160;
          }
        }
        else
        {
          unint64_t v158 = 0;
        }
        ++v116;
      }
      unint64_t v161 = v158 + v93;
      unint64_t v162 = v161;
      if (a3 == 4)
      {
        if (v161 < v100 || (unint64_t v162 = (v100 - 1), v161 >= v102))
        {
          if (v161 < v102 || (unint64_t v162 = v92, v161 >= v92))
          {
            if (v161 < v103 && v161 >= v101) {
              unint64_t v162 = (v101 - 1);
            }
            else {
              unint64_t v162 = v161;
            }
          }
        }
      }
      if (v162 >= v95) {
        int v164 = v96;
      }
      else {
        int v164 = v162;
      }
      if (v159) {
        int v165 = 0;
      }
      else {
        int v165 = v164 ^ v92;
      }
      if (v62 != 1) {
        int v165 = v164;
      }
      *(_DWORD *)(a2 + 4 * v80 + 40) = v165;
      if (v107 == 6)
      {
        unint64_t v166 = v97;
        BOOL v167 = v93 == v92;
      }
      else
      {
        uint64_t v168 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v167 = v108 == v168;
        if (v93 | v168)
        {
          if (v105 < v95 || (unint64_t v166 = v95 - 1, v168 != v106)) {
            unint64_t v166 = v90 + v88 * v168;
          }
        }
        else
        {
          unint64_t v166 = 0;
        }
        ++v116;
      }
      unint64_t v169 = v166 + v93;
      unint64_t v170 = v169;
      if (a3 == 4)
      {
        if (v169 < v100 || (unint64_t v170 = (v100 - 1), v169 >= v102))
        {
          if (v169 < v102 || (unint64_t v170 = v92, v169 >= v92))
          {
            if (v169 < v103 && v169 >= v101) {
              unint64_t v170 = (v101 - 1);
            }
            else {
              unint64_t v170 = v169;
            }
          }
        }
      }
      if (v170 >= v95) {
        int v172 = v96;
      }
      else {
        int v172 = v170;
      }
      if (v167) {
        int v173 = 0;
      }
      else {
        int v173 = v172 ^ v92;
      }
      if (v62 != 1) {
        int v173 = v172;
      }
      *(_DWORD *)(a2 + 4 * v80 + 48) = v173;
      if (v107 != 7)
      {
        uint64_t v174 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v98 = v108 == v174;
        if (v93 | v174)
        {
          if (v105 >= v95 && v174 == v106) {
            unint64_t v97 = v95 - 1;
          }
          else {
            unint64_t v97 = v90 + v88 * v174;
          }
        }
        else
        {
          unint64_t v97 = 0;
        }
      }
      unint64_t v175 = v97 + v93;
      unint64_t v82 = v175;
      if (a3 == 4)
      {
        if (v175 < v100 || (unint64_t v82 = (v100 - 1), v175 >= v102))
        {
          if (v175 < v102 || (unint64_t v82 = v92, v175 >= v92))
          {
            if (v175 < v103 && v175 >= v101) {
              unint64_t v82 = (v101 - 1);
            }
            else {
              unint64_t v82 = v175;
            }
          }
        }
      }
      if (v82 >= v95) {
        int v83 = v96;
      }
      else {
        int v83 = v82;
      }
      int v84 = v83 ^ v92;
      if (v98) {
        int v84 = 0;
      }
      if (v62 == 1) {
        int v83 = v84;
      }
      BOOL v25 = (_DWORD *)result;
      goto LABEL_120;
    }
    BOOL v113 = v102 <= v93 && v93 < v92;
    BOOL v115 = v93 >= v101 && v103 > v93;
    if (a3 == 4)
    {
      if (v93 < v100 || v102 <= v93)
      {
        if (v113)
        {
          if (v95 <= v92) {
            int v83 = v96;
          }
          else {
            int v83 = v92;
          }
        }
        else
        {
          if (v115) {
            unint64_t v93 = v104;
          }
          if (v93 >= v95) {
            int v83 = v96;
          }
          else {
            int v83 = v93;
          }
        }
      }
      else if (v95 <= (v100 - 1))
      {
        int v83 = v96;
      }
      else
      {
        int v83 = v100 - 1;
      }
    }
    else if (v95 <= v93)
    {
      int v83 = v96;
    }
    else
    {
      int v83 = v183[v80 - 2];
    }
    int v176 = v83 ^ v92;
    if (v88 > v94) {
      int v176 = 0;
    }
    if (v62 == 1) {
      int v83 = v176;
    }
    unsigned int v177 = (_DWORD *)(a2 + 4 * v80);
    *unsigned int v177 = v83;
    v177[2] = v83;
    v177[4] = v83;
    v177[6] = v83;
    v177[8] = v83;
    v177[10] = v83;
    v177[12] = v83;
LABEL_120:
    *(_DWORD *)(a2 + 4 * v80 + 56) = v83;
    char v79 = 1;
    uint64_t v80 = 1;
  }
  while ((v85 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int8x8_t a6, double a7, int8x8_t a8)
{
  uint64_t v312 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    uint64_t v13 = (void *)(a1 + a2);
    *uint64_t v13 = 0;
    v13[1] = 0;
    char v14 = (void *)(a1 + 2 * a2);
    *char v14 = 0;
    v14[1] = 0;
    uint64_t v15 = (void *)(a1 + a2 + 2 * a2);
LABEL_88:
    *uint64_t v15 = 0;
    v15[1] = 0;
    return result;
  }
  char v10 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v297, a5);
    }
    __int16 v273 = WORD2(v297);
    unsigned __int8 v287 = v297;
    unsigned __int8 v288 = v298;
    unsigned __int8 v293 = v300;
    unsigned __int8 v294 = v302;
    __int16 v291 = v301;
    __int16 v292 = v303;
    __int16 v283 = v305;
    unsigned __int8 v284 = v304;
    unsigned __int8 v285 = v306;
    __int16 v286 = v299;
    __int16 v282 = v307;
    uint64_t v17 = a3 + 12;
    unsigned __int8 v289 = v310;
    unsigned __int8 v290 = v308;
    __int16 v271 = v311;
    __int16 v272 = v309;
    if ((v10 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v17, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v17, (uint64_t)&v297, a5);
    }
    unsigned __int8 v278 = v298;
    unsigned __int8 v279 = v297;
    __int16 v266 = v299;
    __int16 v267 = WORD2(v297);
    __int16 v265 = v301;
    unsigned __int8 v280 = v302;
    unsigned __int8 v281 = v300;
    __int16 v264 = v303;
    __int16 v262 = v307;
    __int16 v263 = v305;
    unsigned __int8 v276 = v304;
    unsigned __int8 v277 = v308;
    uint64_t v18 = a3 + 24;
    unsigned __int8 v274 = v306;
    unsigned __int8 v275 = v310;
    __int16 v260 = v311;
    __int16 v261 = v309;
    if ((v10 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v18, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v18, (uint64_t)&v297, a5);
    }
    unsigned __int8 v19 = v297;
    unsigned __int8 v20 = v300;
    __int16 v258 = v299;
    __int16 v259 = WORD2(v297);
    unsigned __int8 v269 = v302;
    unsigned __int8 v270 = v298;
    __int16 v256 = v303;
    __int16 v257 = v301;
    unsigned __int8 v268 = v304;
    unsigned __int8 v21 = v306;
    __int16 v255 = v305;
    __int16 v23 = v307;
    unsigned __int8 v22 = v308;
    __int16 v24 = v309;
    unsigned __int8 v25 = v310;
    uint64_t v26 = a3 + 36;
    __int16 v27 = v311;
    if ((v10 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v26, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v26, (uint64_t)&v297, a5);
    }
    *(_WORD *)(a1 + 8) = v19 | (unsigned __int16)(v259 << 8);
    __int16 v28 = v297;
    *(_WORD *)a1 = v287 | (unsigned __int16)(v273 << 8);
    __int16 v29 = WORD2(v297);
    __int16 v30 = v298;
    *(_WORD *)(a1 + 2) = v288 | (unsigned __int16)(v286 << 8);
    __int16 v31 = v299;
    __int16 v32 = v300;
    *(_WORD *)(a1 + 4) = v284 | (unsigned __int16)(v283 << 8);
    __int16 v33 = v301;
    __int16 v34 = v302;
    *(_WORD *)(a1 + 6) = v285 | (unsigned __int16)(v282 << 8);
    __int16 v35 = v303;
    *(_WORD *)(a1 + 10) = v270 | (unsigned __int16)(v258 << 8);
    __int16 v36 = v304;
    *(_WORD *)(a1 + 12) = v268 | (unsigned __int16)(v255 << 8);
    __int16 v37 = v305;
    *(_WORD *)(a1 + 14) = v21 | (unsigned __int16)(v23 << 8);
    __int16 v38 = v306;
    __int16 v39 = v307;
    uint64_t v40 = (_WORD *)(a1 + a2);
    *uint64_t v40 = v293 | (unsigned __int16)(v291 << 8);
    __int16 v41 = v308;
    __int16 v42 = v309;
    v40[1] = v294 | (unsigned __int16)(v292 << 8);
    __int16 v43 = v310;
    __int16 v44 = v28 | (v29 << 8);
    __int16 v45 = v311;
    v40[2] = v290 | (unsigned __int16)(v272 << 8);
    v40[3] = v289 | (unsigned __int16)(v271 << 8);
    __int16 v46 = v30 | (v31 << 8);
    v40[4] = v20 | (unsigned __int16)(v257 << 8);
    v40[5] = v269 | (unsigned __int16)(v256 << 8);
    __int16 v47 = v32 | (v33 << 8);
    v40[6] = v22 | (unsigned __int16)(v24 << 8);
    v40[7] = v25 | (unsigned __int16)(v27 << 8);
    unint64_t v48 = (_WORD *)(a1 + a2 + a2);
    *unint64_t v48 = v279 | (unsigned __int16)(v267 << 8);
    v48[1] = v278 | (unsigned __int16)(v266 << 8);
    v48[2] = v276 | (unsigned __int16)(v263 << 8);
    v48[3] = v274 | (unsigned __int16)(v262 << 8);
    v48[4] = v44;
    v48[5] = v46;
    v48[6] = v36 | (v37 << 8);
    v48[7] = v38 | (v39 << 8);
    int v49 = (_WORD *)((char *)v48 + a2);
    *int v49 = v281 | (unsigned __int16)(v265 << 8);
    v49[1] = v280 | (unsigned __int16)(v264 << 8);
    v49[2] = v277 | (unsigned __int16)(v261 << 8);
    v49[3] = v275 | (unsigned __int16)(v260 << 8);
    v49[4] = v47;
    v49[5] = v34 | (v35 << 8);
    v49[6] = v41 | (v42 << 8);
    uint64_t result = 48;
    v49[7] = v43 | (v45 << 8);
    return result;
  }
  if (a4 == 63)
  {
    int32x4_t v50 = *(int32x4_t *)a3;
    int32x4_t v51 = *(int32x4_t *)(a3 + 16);
    int32x4_t v52 = *(int32x4_t *)(a3 + 32);
    int32x4_t v53 = *(int32x4_t *)(a3 + 48);
    *(int32x4_t *)a1 = vuzp1q_s32(*(int32x4_t *)a3, v52);
    *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v50, v52);
    uint64_t v54 = (int32x4_t *)(a1 + 2 * a2);
    *uint64_t v54 = vuzp1q_s32(v51, v53);
    *(int32x4_t *)((char *)v54 + a2) = vuzp2q_s32(v51, v53);
    return 64;
  }
  if (a4 == 1)
  {
    int16x8_t v16 = vld1q_dup_s16((const __int16 *)a3);
    *(int16x8_t *)a1 = v16;
    *(int16x8_t *)(a1 + a2) = v16;
    *(int16x8_t *)(a1 + 2 * a2) = v16;
    *(int16x8_t *)(a1 + 3 * a2) = v16;
    return 2;
  }
  unint64_t v55 = 8 * (a3 & 7);
  unint64_t v56 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = v55 + 14;
  uint64_t v58 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v55;
  if (v55 >= 0x33) {
    v58 |= *(void *)(v56 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v59 = 4 * v58;
  uint32x2_t v60 = (uint32x2_t)vdup_n_s32(v59);
  a6.i32[0] = v59;
  a8.i32[0] = a4 >> 6;
  v61.i32[0] = vorr_s8(a6, a8).u32[0];
  v61.i32[1] = vshr_n_u32(v60, 5uLL).i32[1];
  int16x4_t v62 = (int16x4_t)vand_s8(v61, (int8x8_t)0x1F0000001FLL);
  v62.i8[1] = v62.i8[4];
  int16x4_t v63 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v60, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v63.i8[1] = v63.i8[4];
  unint64_t v64 = v55 + 30;
  unint64_t v65 = v57 >> 6;
  unint64_t v66 = v57 & 0x3E;
  uint64_t v67 = *(void *)(v56 + 8 * v65) >> v66;
  if (v66 >= 0x31) {
    v67 |= *(void *)(v56 + 8 * v65 + 8) << -(char)v66;
  }
  unint64_t v68 = (8 * (a3 & 7)) | 0x180;
  int8x16_t v69 = (int8x16_t)vdupq_lane_s16(v62, 0);
  int8x16_t v70 = (int8x16_t)vdupq_lane_s16(v63, 0);
  v71.i64[0] = 0x303030303030303;
  v71.i64[1] = 0x303030303030303;
  int8x16_t v72 = vandq_s8(v69, v71);
  int8x16_t v73 = vbicq_s8(v70, vceqq_s8(v72, v71));
  v71.i64[0] = 0x202020202020202;
  v71.i64[1] = 0x202020202020202;
  int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v69.i8), (int8x8_t)0x4000400040004)))), v71);
  if (vmaxvq_s8(v74) < 1)
  {
    int v84 = 0;
    v85.i64[0] = -1;
    v85.i64[1] = -1;
    int8x16_t v86 = v73;
    int8x16_t v87 = v73;
    int8x16_t v88 = v73;
    v89.i64[0] = -1;
    v89.i64[1] = -1;
    int8x16_t v90 = v73;
    v91.i64[0] = -1;
    v91.i64[1] = -1;
    v92.i64[0] = -1;
    v92.i64[1] = -1;
  }
  else
  {
    int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
    int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
    unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
    v78.i64[0] = v77;
    v78.i64[1] = HIDWORD(v77);
    int64x2_t v79 = v78;
    unint64_t v80 = vaddvq_s64(v78);
    unint64_t v81 = v64 + v80;
    if (v80 <= 0x80 && v68 >= v81)
    {
      unint64_t v93 = v64 & 0x3E;
      int64x2_t v94 = vaddq_s64(vdupq_n_s64(v93), vzip1q_s64((int64x2_t)0, v79));
      unint64_t v95 = (int64x2_t *)(v56 + ((v64 >> 3) & 8));
      int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v95, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95->i64[0], 0), (uint64x2_t)vnegq_s64(v94)));
      if (v93 + v80 < 0x81)
      {
        int v84 = 0;
      }
      else
      {
        int v84 = 0;
        int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v95[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v94))), v83);
      }
      unint64_t v64 = v81;
    }
    else
    {
      int8x16_t v83 = 0uLL;
      int v84 = 1;
    }
    int32x2_t v96 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
    v97.i64[0] = v96.u32[0];
    v97.i64[1] = v96.u32[1];
    int64x2_t v98 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v97));
    *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
    *(int32x2_t *)v98.i8 = vmovn_s64(v98);
    int8x16_t v99 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v98);
    int16x8_t v100 = (int16x8_t)vshlq_u32((uint32x4_t)v99, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    *(int16x4_t *)v100.i8 = vmovn_s32((int32x4_t)v100);
    int8x16_t v101 = (int8x16_t)vzip1q_s16((int16x8_t)v99, v100);
    *(int8x8_t *)v101.i8 = vzip1_s8(vmovn_s16((int16x8_t)v101), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v101, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v69.i8))))));
    v99.i64[0] = 0x101010101010101;
    v99.i64[1] = 0x101010101010101;
    int8x16_t v102 = vshlq_s8(v99, v74);
    v99.i64[0] = -1;
    v99.i64[1] = -1;
    v102.i64[0] = vqtbl1q_s8(vandq_s8(v101, vaddq_s8(v102, v99)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v103 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 0);
    int8x16_t v104 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 1);
    int8x16_t v105 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 2);
    int8x16_t v106 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 3);
    int8x16_t v90 = vsubq_s8(v73, v103);
    int8x16_t v88 = vsubq_s8(v73, v104);
    int8x16_t v87 = vsubq_s8(v73, v105);
    int8x16_t v86 = vsubq_s8(v73, v106);
    int8x16_t v92 = vceqzq_s8(v103);
    int8x16_t v91 = vceqzq_s8(v104);
    int8x16_t v89 = vceqzq_s8(v105);
    int8x16_t v85 = vceqzq_s8(v106);
  }
  v107.i64[0] = 0x808080808080808;
  v107.i64[1] = 0x808080808080808;
  int8x16_t v108 = 0uLL;
  int8x16_t v109 = vandq_s8(vextq_s8(vtstq_s8(v69, v107), (int8x16_t)0, 0xEuLL), v73);
  int8x16_t v110 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v109, v109));
  int8x16_t v111 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v110, (int16x8_t)v110));
  unint64_t v112 = vpaddq_s32((int32x4_t)v111, (int32x4_t)v111).u64[0];
  v113.i64[0] = v112;
  v113.i64[1] = HIDWORD(v112);
  int64x2_t v114 = v113;
  unint64_t v115 = vaddvq_s64(v113);
  unint64_t v116 = v64 + v115;
  if (v115 <= 0x80 && v68 >= v116)
  {
    unint64_t v118 = v64 & 0x3F;
    int64x2_t v119 = vaddq_s64(vdupq_n_s64(v118), vzip1q_s64((int64x2_t)0, v114));
    BOOL v120 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v108 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
    if (v118 + v115 >= 0x81) {
      int8x16_t v108 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), v108);
    }
    unint64_t v64 = v116;
  }
  else
  {
    int v84 = 1;
  }
  int v121 = v69.i8[0] & 3;
  if (v121 == 2)
  {
    BOOL v122 = v68 < v64 + 4;
    unint64_t v123 = v64 + 8;
    if (v68 >= v64 + 4) {
      v64 += 4;
    }
    if (v123 > v68 || v122) {
      int v84 = 1;
    }
    else {
      v64 += 4;
    }
  }
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v90, 0xEuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v126, v126));
  int8x16_t v128 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v127, (int16x8_t)v127));
  unint64_t v129 = vpaddq_s32((int32x4_t)v128, (int32x4_t)v128).u64[0];
  v130.i64[0] = v129;
  v130.i64[1] = HIDWORD(v129);
  int64x2_t v131 = v130;
  unint64_t v132 = vaddvq_s64(v130);
  unint64_t v133 = v64 + v132;
  if (v132 <= 0x80 && v68 >= v133)
  {
    unint64_t v136 = v64 & 0x3F;
    int64x2_t v137 = vaddq_s64(vdupq_n_s64(v136), vzip1q_s64((int64x2_t)0, v131));
    unint64_t v138 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v135 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v138, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138->i64[0], 0), (uint64x2_t)vnegq_s64(v137)));
    if (v136 + v132 >= 0x81) {
      int8x16_t v135 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v138[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v137))), v135);
    }
    unint64_t v64 = v133;
  }
  else
  {
    int v84 = 1;
    int8x16_t v135 = 0uLL;
  }
  int8x16_t v139 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v88, v88));
  int8x16_t v140 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v139, (int16x8_t)v139));
  unint64_t v141 = vpaddq_s32((int32x4_t)v140, (int32x4_t)v140).u64[0];
  v142.i64[0] = v141;
  v142.i64[1] = HIDWORD(v141);
  int64x2_t v143 = v142;
  unint64_t v144 = vaddvq_s64(v142);
  if (v144 < 0x81)
  {
    int32x2_t v145 = vzip1_s32(*(int32x2_t *)v140.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v140, v140, 8uLL));
    v146.i64[0] = v145.u32[0];
    v146.i64[1] = v145.u32[1];
    int64x2_t v147 = v146;
    int32x4_t v148 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v139.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v139, v139, 8uLL)));
    int16x8_t v149 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v88.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL)));
    unint64_t v150 = v64 + v144;
    if (v68 >= v64 + v144)
    {
      unint64_t v151 = v64 & 0x3F;
      int64x2_t v152 = vaddq_s64(vdupq_n_s64(v151), vzip1q_s64((int64x2_t)0, v143));
      unint64_t v153 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
      int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v153, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153->i64[0], 0), (uint64x2_t)vnegq_s64(v152)));
      if (v151 + v144 >= 0x81) {
        int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v153[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v152))), v125);
      }
      unint64_t v64 = v150;
    }
    else
    {
      int v84 = 1;
    }
    int64x2_t v154 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v147));
    *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
    *(int32x2_t *)v154.i8 = vmovn_s64(v154);
    int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v154);
    int16x8_t v156 = (int16x8_t)vshlq_u32((uint32x4_t)v155, (uint32x4_t)vnegq_s32(v148));
    *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
    *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v156);
    int8x16_t v157 = (int8x16_t)vzip1q_s16(v155, v156);
    int8x16_t v158 = (int8x16_t)vshlq_u16((uint16x8_t)v157, (uint16x8_t)vnegq_s16(v149));
    *(int8x8_t *)v157.i8 = vmovn_s16((int16x8_t)v157);
    *(int8x8_t *)v158.i8 = vmovn_s16((int16x8_t)v158);
    int8x16_t v125 = vzip1q_s8(v157, v158);
  }
  else
  {
    int v84 = 1;
  }
  int8x16_t v159 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v87, v87));
  int8x16_t v160 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v159, (int16x8_t)v159));
  unint64_t v161 = vpaddq_s32((int32x4_t)v160, (int32x4_t)v160).u64[0];
  v162.i64[0] = v161;
  v162.i64[1] = HIDWORD(v161);
  int64x2_t v163 = v162;
  unint64_t v164 = vaddvq_s64(v162);
  int8x16_t v165 = 0uLL;
  if (v164 <= 0x80)
  {
    int32x2_t v167 = vzip1_s32(*(int32x2_t *)v160.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v160, v160, 8uLL));
    v168.i64[0] = v167.u32[0];
    v168.i64[1] = v167.u32[1];
    int64x2_t v169 = v168;
    int32x4_t v170 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v159.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v159, v159, 8uLL)));
    int16x8_t v171 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v87.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL)));
    unint64_t v172 = v64 + v164;
    if (v68 >= v64 + v164)
    {
      unint64_t v174 = v64 & 0x3F;
      int64x2_t v175 = vaddq_s64(vdupq_n_s64(v174), vzip1q_s64((int64x2_t)0, v163));
      int v176 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
      int8x16_t v173 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v176, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176->i64[0], 0), (uint64x2_t)vnegq_s64(v175)));
      if (v174 + v164 >= 0x81) {
        int8x16_t v173 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v176[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v175))), v173);
      }
      unint64_t v64 = v172;
    }
    else
    {
      int8x16_t v173 = 0uLL;
      int v84 = 1;
    }
    int64x2_t v177 = (int64x2_t)vshlq_u64((uint64x2_t)v173, (uint64x2_t)vnegq_s64(v169));
    *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v173);
    *(int32x2_t *)v177.i8 = vmovn_s64(v177);
    int16x8_t v178 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v177);
    int16x8_t v179 = (int16x8_t)vshlq_u32((uint32x4_t)v178, (uint32x4_t)vnegq_s32(v170));
    *(int16x4_t *)v178.i8 = vmovn_s32((int32x4_t)v178);
    *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v179);
    int8x16_t v180 = (int8x16_t)vzip1q_s16(v178, v179);
    int8x16_t v181 = (int8x16_t)vshlq_u16((uint16x8_t)v180, (uint16x8_t)vnegq_s16(v171));
    *(int8x8_t *)v180.i8 = vmovn_s16((int16x8_t)v180);
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    int8x16_t v166 = vzip1q_s8(v180, v181);
  }
  else
  {
    int v84 = 1;
    int8x16_t v166 = 0uLL;
  }
  int8x16_t v182 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v86, v86));
  int8x16_t v183 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v182, (int16x8_t)v182));
  unint64_t v184 = vpaddq_s32((int32x4_t)v183, (int32x4_t)v183).u64[0];
  v185.i64[0] = v184;
  v185.i64[1] = HIDWORD(v184);
  int64x2_t v186 = v185;
  unint64_t v187 = vaddvq_s64(v185);
  if (v187 > 0x80) {
    goto LABEL_87;
  }
  if (v68 >= v64 + v187)
  {
    int64x2_t v188 = vaddq_s64(vdupq_n_s64(v64 & 0x3F), vzip1q_s64((int64x2_t)0, v186));
    int v189 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v165 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v189, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v188)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v189->i64[0], 0), (uint64x2_t)vnegq_s64(v188)));
    if ((v64 & 0x3F) + v187 >= 0x81) {
      int8x16_t v165 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v189[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v188)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v189[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v188))), v165);
    }
    v64 += v187;
  }
  else
  {
    int v84 = 1;
  }
  if (v84 || (uint64_t result = (a4 & 0x3F) + 1, v68 + 8 * result - v64 - 384 >= 9) || v121 == 2)
  {
LABEL_87:
    uint64_t result = 0;
    v297 |= 255 << ((8 * &v297) & 0x30);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    int v190 = (void *)(a1 + a2);
    unint64_t v191 = (void *)(a1 + 2 * a2);
    *int v190 = 0;
    v190[1] = 0;
    uint64_t v15 = (void *)(a1 + a2 + 2 * a2);
    *unint64_t v191 = 0;
    v191[1] = 0;
    goto LABEL_88;
  }
  int32x2_t v192 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x2_t v193 = vzip1_s32(*(int32x2_t *)v128.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL));
  v194.i64[0] = v192.u32[0];
  v194.i64[1] = v192.u32[1];
  int64x2_t v195 = v194;
  v194.i64[0] = v193.u32[0];
  v194.i64[1] = v193.u32[1];
  int16x4_t v196 = (int16x4_t)vextq_s8(v127, v127, 8uLL).u64[0];
  int64x2_t v197 = (int64x2_t)vshlq_u64((uint64x2_t)v108, (uint64x2_t)vnegq_s64(v195));
  int64x2_t v198 = (int64x2_t)vshlq_u64((uint64x2_t)v135, (uint64x2_t)vnegq_s64(v194));
  *(int32x2_t *)v108.i8 = vmovn_s64((int64x2_t)v108);
  *(int32x2_t *)v197.i8 = vmovn_s64(v197);
  *(int32x2_t *)v135.i8 = vmovn_s64((int64x2_t)v135);
  *(int32x2_t *)v198.i8 = vmovn_s64(v198);
  int16x8_t v199 = (int16x8_t)vzip1q_s32((int32x4_t)v108, (int32x4_t)v197);
  int16x8_t v200 = (int16x8_t)vzip1q_s32((int32x4_t)v135, (int32x4_t)v198);
  int16x8_t v201 = (int16x8_t)vshlq_u32((uint32x4_t)v199, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v110.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  int16x8_t v202 = (int16x8_t)vshlq_u32((uint32x4_t)v200, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v127.i8, v196))));
  *(int16x4_t *)v199.i8 = vmovn_s32((int32x4_t)v199);
  *(int16x4_t *)v201.i8 = vmovn_s32((int32x4_t)v201);
  *(int16x4_t *)v200.i8 = vmovn_s32((int32x4_t)v200);
  *(int16x4_t *)v202.i8 = vmovn_s32((int32x4_t)v202);
  int8x16_t v203 = (int8x16_t)vzip1q_s16(v199, v201);
  int8x16_t v204 = (int8x16_t)vzip1q_s16(v200, v202);
  int8x16_t v205 = (int8x16_t)vshlq_u16((uint16x8_t)v203, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v109.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v109, v109, 8uLL)))));
  int8x16_t v206 = (int8x16_t)vshlq_u16((uint16x8_t)v204, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v126.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  *(int8x8_t *)v203.i8 = vmovn_s16((int16x8_t)v203);
  *(int8x8_t *)v205.i8 = vmovn_s16((int16x8_t)v205);
  *(int8x8_t *)v204.i8 = vmovn_s16((int16x8_t)v204);
  *(int8x8_t *)v206.i8 = vmovn_s16((int16x8_t)v206);
  v196.i32[0] = v67;
  v207.i64[0] = 0x808080808080808;
  v207.i64[1] = 0x808080808080808;
  int8x16_t v208 = vzip1q_s8(v203, v205);
  v205.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v205.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v209 = vsubq_s8(v107, v109);
  int8x16_t v210 = vzip1q_s8(v204, v206);
  v206.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v206.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v200.i8 = vzip1_s32(*(int32x2_t *)v183.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v183, v183, 8uLL));
  v211.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v211.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v212.i64[0] = 0x808080808080808;
  v212.i64[1] = 0x808080808080808;
  v196.i8[1] = BYTE1(v67);
  int8x16_t v213 = vaddq_s8(v109, v205);
  int8x16_t v214 = vshlq_s8(v208, v209);
  int8x16_t v215 = vaddq_s8(v126, v206);
  int8x16_t v216 = vshlq_s8(v210, vsubq_s8(v207, v126));
  int8x16_t v217 = vshlq_s8(v166, vsubq_s8(v207, v87));
  v194.i64[0] = v200.u32[0];
  v194.i64[1] = v200.u32[1];
  int16x8_t v218 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v86.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL)));
  int8x16_t v219 = vaddq_s8(v86, v211);
  int8x16_t v220 = vsubq_s8(v212, v86);
  int8x16_t v221 = (int8x16_t)vdupq_lane_s16(v196, 0);
  int8x16_t v222 = vshlq_s8(v214, v213);
  int8x16_t v223 = vshlq_s8(v216, v215);
  int64x2_t v224 = (int64x2_t)vshlq_u64((uint64x2_t)v165, (uint64x2_t)vnegq_s64(v194));
  *(int32x2_t *)v216.i8 = vmovn_s64((int64x2_t)v165);
  *(int32x2_t *)v224.i8 = vmovn_s64(v224);
  int16x8_t v225 = (int16x8_t)vzip1q_s32((int32x4_t)v216, (int32x4_t)v224);
  int16x8_t v226 = (int16x8_t)vshlq_u32((uint32x4_t)v225, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v182.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v182, v182, 8uLL)))));
  *(int16x4_t *)v225.i8 = vmovn_s32((int32x4_t)v225);
  *(int16x4_t *)v226.i8 = vmovn_s32((int32x4_t)v226);
  int8x16_t v227 = (int8x16_t)vzip1q_s16(v225, v226);
  int8x16_t v228 = (int8x16_t)vshlq_u16((uint16x8_t)v227, (uint16x8_t)vnegq_s16(v218));
  *(int8x8_t *)v227.i8 = vmovn_s16((int16x8_t)v227);
  *(int8x8_t *)v228.i8 = vmovn_s16((int16x8_t)v228);
  int8x16_t v229 = vaddq_s8(vandq_s8(v222, v92), v223);
  int8x16_t v230 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v222.i8, 0);
  int8x16_t v231 = vsubq_s8(v229, vandq_s8(v92, v230));
  int8x16_t v232 = vsubq_s8(vshlq_s8(vshlq_s8(v125, vsubq_s8(v207, v88)), vaddq_s8(v88, v206)), vandq_s8(v91, v230));
  int8x16_t v233 = vsubq_s8(vshlq_s8(v217, vaddq_s8(v87, v206)), vandq_s8(v89, v230));
  int8x16_t v234 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8(v227, v228), v220), v219), vandq_s8(v85, v230));
  v235.i64[0] = 0x101010101010101;
  v235.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v72, v235)))
  {
    int8x16_t v236 = vandq_s8(v69, v235);
    int8x16_t v237 = v231;
    v237.i16[0] = v231.i16[7];
    v237.i16[7] = v231.i16[0];
    int8x16_t v238 = vnegq_s8(v236);
    int8x16_t v239 = vbslq_s8(v238, v237, v231);
    int8x16_t v240 = vaddq_s8(v239, vandq_s8(vqtbl1q_s8(v239, (int8x16_t)xmmword_242EA7480), v238));
    int8x16_t v231 = vaddq_s8(v240, vandq_s8(vqtbl1q_s8(v240, (int8x16_t)xmmword_242EA7490), v238));
    int8x16_t v241 = vaddq_s8(vandq_s8(vqtbl1q_s8(v232, (int8x16_t)xmmword_242EA74A0), v238), v232);
    int8x16_t v232 = vaddq_s8(vandq_s8(vqtbl1q_s8(v241, (int8x16_t)xmmword_242EA74B0), v238), v241);
    int8x16_t v242 = vaddq_s8(vandq_s8(vqtbl1q_s8(v233, (int8x16_t)xmmword_242EA74C0), v238), v233);
    int8x16_t v233 = vaddq_s8(vandq_s8(vqtbl1q_s8(v242, (int8x16_t)xmmword_242EA74D0), v238), v242);
    int8x16_t v243 = vaddq_s8(vandq_s8(vqtbl1q_s8(v234, (int8x16_t)xmmword_242EA74E0), v238), v234);
    int8x16_t v234 = vaddq_s8(vandq_s8(vqtbl1q_s8(v243, (int8x16_t)xmmword_242EA74F0), v238), v243);
  }
  int8x16_t v244 = vaddq_s8(v231, v221);
  int8x16_t v245 = vaddq_s8(v232, v221);
  int8x16_t v246 = vaddq_s8(v233, v221);
  int8x16_t v247 = vaddq_s8(v234, v221);
  v248.i64[0] = 0x1010101010101010;
  v248.i64[1] = 0x1010101010101010;
  int8x16_t v249 = vceqzq_s8(vandq_s8(v69, v248));
  int32x4_t v250 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v244, (int8x16_t)xmmword_242EA7500), v249), v244);
  int32x4_t v251 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v245, (int8x16_t)xmmword_242EA7500), v249), v245);
  int32x4_t v252 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v246, (int8x16_t)xmmword_242EA7500), v249), v246);
  int32x4_t v253 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v247, (int8x16_t)xmmword_242EA7500), v249), v247);
  *(int32x4_t *)a1 = vuzp1q_s32(v250, v252);
  *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v250, v252);
  int8x16_t v254 = (int32x4_t *)(a1 + 2 * a2);
  *int8x16_t v254 = vuzp1q_s32(v251, v253);
  *(int32x4_t *)((char *)v254 + a2) = vuzp2q_s32(v251, v253);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = (int32x4_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int16x8_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v16, v13 + 1, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int16x8_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  unsigned __int8 v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v21, (int32x4_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    unsigned __int8 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *unsigned __int8 v21 = 0;
    unsigned __int8 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v25, (int32x4_t *)((char *)v13 + v20 + 16), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned __int8 v25 = 0;
LABEL_35:
  uint64_t v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v26, (int32x4_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *uint64_t v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v30, (int32x4_t *)((char *)v13 + 8 * a2 + 16), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  __int16 v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v31, (int32x4_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    __int16 v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *__int16 v31 = 0;
    __int16 v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      *__int16 v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v35, (int32x4_t *)((char *)v13 + 12 * a2 + 16), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  uint64_t v10 = a2
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1, 32, a2, *a3, a4, a5, a6, a7);
  uint64_t v14 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 16, 32, v10, a3[1], a4, v11, v12, v13);
  uint64_t v18 = v14
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 128, 32, v14, a3[2], a4, v15, v16, v17);
  uint64_t v22 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 144, 32, v18, a3[3], a4, v19, v20, v21);
  uint64_t v26 = v22
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 256, 32, v22, a3[4], a4, v23, v24, v25);
  uint64_t v30 = v26
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 272, 32, v26, a3[5], a4, v27, v28, v29);
  uint64_t v34 = v30
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 384, 32, v30, a3[6], a4, v31, v32, v33);
  unsigned int v38 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 400, 32, v34, v38, a4, v35, v36, v37);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)2>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(unint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int32x4_t v7 = *(int32x4_t *)((char *)a3 + a4);
  int8x16_t v8 = (int8x16_t)vzip1q_s32(*a3, v7);
  int8x16_t v9 = (int8x16_t)vzip2q_s32(*a3, v7);
  uint64_t v10 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v11 = *(int32x4_t *)((char *)v10 + a4);
  int8x16_t v12 = (int8x16_t)vzip1q_s32(*v10, v11);
  int8x16_t v13 = (int8x16_t)vzip2q_s32(*v10, v11);
  int8x16_t v14 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v8.i8, 0);
  int8x16_t v15 = vsubq_s8(v8, v14);
  int8x16_t v16 = vsubq_s8(v12, v14);
  int8x16_t v17 = vsubq_s8(v9, v14);
  int8x16_t v18 = vsubq_s8(v13, v14);
  int8x16_t v19 = vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7510);
  int8x16_t v20 = vpmaxq_s8(v19, v19);
  int8x16_t v21 = vpminq_s8(v19, v19);
  int8x16_t v22 = vpmaxq_s8(v20, v20);
  int8x16_t v23 = vpminq_s8(v21, v21);
  int8x16_t v24 = vpmaxq_s8(v22, v22);
  int8x16_t v25 = vpminq_s8(v23, v23);
  v26.i64[0] = 0x8080808080808080;
  v26.i64[1] = 0x8080808080808080;
  int8x16_t v27 = vmaxq_s8(v24, v26);
  v28.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v28.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v29 = vminq_s8(v25, v28);
  int8x16_t v30 = vzip1q_s8(v24, v25);
  v31.i64[0] = 0x808080808080808;
  v31.i64[1] = 0x808080808080808;
  int8x16_t v32 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v30)), vceqzq_s8(v30));
  int8x16_t v33 = vpmaxq_s8(v32, v32);
  int8x16_t v34 = vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7510);
  int8x16_t v35 = vpmaxq_s8(v34, v34);
  int8x16_t v36 = vpminq_s8(v34, v34);
  int8x16_t v37 = vpmaxq_s8(v35, v35);
  int8x16_t v38 = vpminq_s8(v36, v36);
  int8x16_t v39 = vpmaxq_s8(v37, v37);
  int8x16_t v40 = vpminq_s8(v38, v38);
  int8x16_t v41 = vmaxq_s8(v27, v39);
  int8x16_t v42 = vminq_s8(v29, v40);
  int8x16_t v43 = vzip1q_s8(v39, v40);
  int8x16_t v44 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v43)), vceqzq_s8(v43));
  int8x16_t v45 = vpmaxq_s8(v44, v44);
  int8x16_t v46 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v47 = vpmaxq_s8(v46, v46);
  int8x16_t v48 = vpminq_s8(v46, v46);
  int8x16_t v49 = vpmaxq_s8(v47, v47);
  int8x16_t v50 = vpminq_s8(v48, v48);
  int8x16_t v51 = vpmaxq_s8(v49, v49);
  int8x16_t v52 = vpminq_s8(v50, v50);
  int8x16_t v53 = vmaxq_s8(v41, v51);
  int8x16_t v54 = vminq_s8(v42, v52);
  int8x16_t v55 = vzip1q_s8(v51, v52);
  int8x16_t v56 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v55)), vceqzq_s8(v55));
  int8x16_t v57 = vpmaxq_s8(v56, v56);
  int8x16_t v58 = vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7510);
  int8x16_t v59 = vpmaxq_s8(v58, v58);
  int8x16_t v60 = vpminq_s8(v58, v58);
  int8x16_t v61 = vpmaxq_s8(v59, v59);
  int8x16_t v62 = vpminq_s8(v60, v60);
  int8x16_t v63 = vpmaxq_s8(v61, v61);
  int8x16_t v64 = vpminq_s8(v62, v62);
  int8x16_t v65 = vmaxq_s8(v53, v63);
  int8x16_t v66 = vminq_s8(v54, v64);
  int8x16_t v67 = vzip1q_s8(v63, v64);
  int8x16_t v68 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v67)), vceqzq_s8(v67));
  int8x16_t v69 = vpmaxq_s8(v68, v68);
  int8x16_t v70 = vmaxq_s8(vmaxq_s8(v33, v45), vmaxq_s8(v57, v69));
  int8x16_t v71 = vclzq_s8(vsubq_s8(v65, v66));
  int8x16_t v72 = vsubq_s8(v31, v71);
  int8x16_t v73 = vcgtq_s8(v70, v72);
  int8x16_t v74 = vbslq_s8(v73, v72, v70);
  if (!vmaxvq_s8(v74))
  {
    *(_WORD *)a1 = a3->i16[0];
    *a2 = 1;
    return 2;
  }
  int8x16_t v411 = v12;
  int8x16_t v412 = v9;
  int8x16_t v413 = v13;
  v75.i64[0] = -1;
  v75.i64[1] = -1;
  v76.i64[0] = 0x707070707070707;
  v76.i64[1] = 0x707070707070707;
  int8x16_t v415 = vandq_s8(vsubq_s8(vshlq_s8(v75, vsubq_s8(v76, v71)), v66), v73);
  v77.i64[0] = 0x303030303030303;
  v77.i64[1] = 0x303030303030303;
  int8x16_t v78 = vorrq_s8(vandq_s8(v73, v31), vandq_s8(vceqzq_s8(v74), v77));
  int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v33), v77), (int8x16_t)0);
  int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v45), v77), (int8x16_t)0);
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v57), v77), (int8x16_t)0);
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v69), v77), (int8x16_t)0);
  v83.i64[0] = 0x404040404040404;
  v83.i64[1] = 0x404040404040404;
  int8x16_t v84 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)))), v78);
  int8x16_t v85 = vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500));
  int8x16_t v86 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
  int8x16_t v87 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7500));
  int8x16_t v414 = vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7500));
  int8x16_t v88 = vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA7510);
  int8x16_t v89 = v15;
  int8x16_t v90 = vpmaxq_s8(v88, v88);
  int8x16_t v91 = vpminq_s8(v88, v88);
  int8x16_t v92 = vpmaxq_s8(v90, v90);
  int8x16_t v93 = vpminq_s8(v91, v91);
  int8x16_t v94 = vpmaxq_s8(v92, v92);
  int8x16_t v95 = vpminq_s8(v93, v93);
  int8x16_t v96 = vmaxq_s8(v94, v26);
  int8x16_t v97 = vminq_s8(v95, v28);
  int8x16_t v98 = vzip1q_s8(v94, v95);
  int8x16_t v99 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v98)), vceqzq_s8(v98));
  int8x16_t v100 = vpmaxq_s8(v99, v99);
  int8x16_t v101 = vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7510);
  int8x16_t v102 = vpmaxq_s8(v101, v101);
  int8x16_t v103 = vpminq_s8(v101, v101);
  int8x16_t v104 = vpmaxq_s8(v102, v102);
  int8x16_t v105 = vpminq_s8(v103, v103);
  int8x16_t v106 = vpmaxq_s8(v104, v104);
  int8x16_t v107 = vpminq_s8(v105, v105);
  int8x16_t v108 = vmaxq_s8(v96, v106);
  int8x16_t v109 = vminq_s8(v97, v107);
  int8x16_t v110 = vzip1q_s8(v106, v107);
  int8x16_t v111 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v110)), vceqzq_s8(v110));
  int8x16_t v112 = vpmaxq_s8(v111, v111);
  int8x16_t v113 = vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7510);
  int8x16_t v114 = vpmaxq_s8(v113, v113);
  int8x16_t v115 = vpminq_s8(v113, v113);
  int8x16_t v116 = vpmaxq_s8(v114, v114);
  int8x16_t v117 = vpminq_s8(v115, v115);
  int8x16_t v118 = vpmaxq_s8(v116, v116);
  int8x16_t v119 = vpminq_s8(v117, v117);
  int8x16_t v120 = vmaxq_s8(v108, v118);
  int8x16_t v121 = vminq_s8(v109, v119);
  int8x16_t v122 = vzip1q_s8(v118, v119);
  int8x16_t v123 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v122)), vceqzq_s8(v122));
  int8x16_t v124 = v16;
  int8x16_t v125 = vpmaxq_s8(v123, v123);
  int8x16_t v126 = vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7510);
  int8x16_t v127 = vpmaxq_s8(v126, v126);
  int8x16_t v128 = vpminq_s8(v126, v126);
  int8x16_t v129 = vpmaxq_s8(v127, v127);
  int8x16_t v130 = vpminq_s8(v128, v128);
  int8x16_t v131 = vpmaxq_s8(v129, v129);
  int8x16_t v132 = vpminq_s8(v130, v130);
  int8x16_t v133 = vmaxq_s8(v120, v131);
  int8x16_t v134 = vminq_s8(v121, v132);
  int8x16_t v135 = vzip1q_s8(v131, v132);
  int8x16_t v136 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v135)), vceqzq_s8(v135));
  int8x16_t v137 = vpmaxq_s8(v136, v136);
  int8x16_t v138 = vmaxq_s8(vmaxq_s8(v100, v112), vmaxq_s8(v125, v137));
  int8x16_t v139 = vclzq_s8(vsubq_s8(v133, v134));
  int8x16_t v140 = vsubq_s8(v31, v139);
  int8x16_t v141 = vcgtq_s8(v138, v140);
  int8x16_t v142 = vbslq_s8(v141, v140, v138);
  v140.i64[0] = 0x1010101010101010;
  v140.i64[1] = 0x1010101010101010;
  v143.i64[0] = 0x1818181818181818;
  v143.i64[1] = 0x1818181818181818;
  int8x16_t v144 = vorrq_s8(vandq_s8(vceqzq_s8(v142), v77), vbslq_s8(v141, v143, v140));
  int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v100), v77), (int8x16_t)0);
  int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v112), v77), (int8x16_t)0);
  int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v125), v77), (int8x16_t)0);
  int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v137), v77), (int8x16_t)0);
  int8x16_t v149 = vsubq_s8(v142, v145);
  int8x16_t v150 = vsubq_s8(v142, v146);
  int8x16_t v151 = vsubq_s8(v142, v147);
  int8x16_t v152 = vsubq_s8(v142, v148);
  int8x16_t v153 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v148, v147), vnegq_s8(vaddq_s8(v145, v146)))), v144);
  uint16x8_t v154 = vmovl_u8(*(uint8x8_t *)v153.i8);
  v146.i64[0] = 0x8000800080008;
  v146.i64[1] = 0x8000800080008;
  v145.i64[0] = 0x2000200020002;
  v145.i64[1] = 0x2000200020002;
  int16x8_t v155 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v142.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v153.i8, 1uLL), v146)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v145), v146)), *(int8x8_t *)v149.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v151.i8, *(int8x8_t *)v150.i8), *(int8x8_t *)v152.i8), 3uLL));
  int16x8_t v156 = vaddq_s16(vaddw_s8((int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v84.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9)), vbic_s8(*(int8x8_t *)v74.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v84.i8))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v145), v146));
  int8x16_t v157 = vsubq_s8(v74, v79);
  int8x16_t v158 = vsubq_s8(v74, v80);
  int8x16_t v159 = vsubq_s8(v74, v81);
  int8x16_t v160 = vsubq_s8(v74, v82);
  int8x16_t v161 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(v156, *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8), *(int8x8_t *)v160.i8), 3uLL)), v155)), 0);
  __int16 v162 = vaddlvq_s8(v161);
  BOOL v164 = a5 < 4 || a6 < 2;
  if (v162)
  {
    v165.i64[0] = 0x707070707070707;
    v165.i64[1] = 0x707070707070707;
    v166.i64[0] = -1;
    v166.i64[1] = -1;
    int8x16_t v167 = vandq_s8(vsubq_s8(vshlq_s8(v166, vsubq_s8(v165, v139)), v134), v141);
    int8x16_t v14 = vbslq_s8(v161, vsubq_s8(v14, vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7500)), v14);
    int8x16_t v168 = vbslq_s8(v161, v414, v89);
    int8x16_t v169 = vbslq_s8(v161, v85, v124);
    int8x16_t v17 = vbslq_s8(v161, v86, v17);
    int8x16_t v18 = vbslq_s8(v161, v87, v18);
    int8x16_t v157 = vbslq_s8(v161, v149, v157);
    int8x16_t v158 = vbslq_s8(v161, v150, v158);
    int8x16_t v159 = vbslq_s8(v161, v151, v159);
    int8x16_t v160 = vbslq_s8(v161, v152, v160);
    int8x16_t v170 = vbslq_s8(v161, v167, v415);
    int8x16_t v74 = vbslq_s8(v161, v142, v74);
    int8x16_t v84 = vbslq_s8(v161, v153, v84);
    if (v164) {
      goto LABEL_16;
    }
  }
  else
  {
    int8x16_t v168 = v89;
    int8x16_t v169 = v124;
    int8x16_t v170 = v415;
    if (v164) {
      goto LABEL_16;
    }
  }
  int8x16_t v172 = v17;
  int8x16_t v416 = v18;
  int8x16_t v173 = vsubq_s8(v8, vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA7520));
  int8x16_t v174 = v411;
  v174.i16[7] = v8.i16[7];
  int8x16_t v175 = v412;
  v175.i16[7] = v8.i16[7];
  int8x16_t v176 = vsubq_s8(v411, vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7530));
  int8x16_t v177 = vsubq_s8(v412, vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7540));
  int8x16_t v178 = v413;
  v178.i16[7] = v8.i16[7];
  int8x16_t v179 = vsubq_s8(v413, vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7550));
  int8x16_t v180 = v173;
  v180.i16[0] = v173.i16[7];
  v180.i16[7] = v173.i16[0];
  int8x16_t v181 = vqtbl1q_s8(v180, (int8x16_t)xmmword_242EA7510);
  int8x16_t v182 = vpmaxq_s8(v181, v181);
  int8x16_t v183 = vpminq_s8(v181, v181);
  int8x16_t v184 = vpmaxq_s8(v182, v182);
  int8x16_t v185 = vpminq_s8(v183, v183);
  int8x16_t v186 = vpmaxq_s8(v184, v184);
  int8x16_t v187 = vpminq_s8(v185, v185);
  v175.i64[0] = 0x8080808080808080;
  v175.i64[1] = 0x8080808080808080;
  int8x16_t v188 = vmaxq_s8(v186, v175);
  v189.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v189.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v190 = vzip1q_s8(v186, v187);
  v191.i64[0] = 0x808080808080808;
  v191.i64[1] = 0x808080808080808;
  int8x16_t v192 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v190)), vceqzq_s8(v190));
  int8x16_t v193 = vpmaxq_s8(v192, v192);
  int8x16_t v194 = vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7510);
  int8x16_t v195 = vpmaxq_s8(v194, v194);
  int8x16_t v196 = vpminq_s8(v194, v194);
  int8x16_t v197 = vpmaxq_s8(v195, v195);
  int8x16_t v198 = vpminq_s8(v196, v196);
  int8x16_t v199 = vpmaxq_s8(v197, v197);
  int8x16_t v200 = vpminq_s8(v198, v198);
  int8x16_t v201 = vmaxq_s8(v188, v199);
  int8x16_t v202 = vminq_s8(vminq_s8(v187, v189), v200);
  int8x16_t v203 = vzip1q_s8(v199, v200);
  int8x16_t v204 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v203)), vceqzq_s8(v203));
  int8x16_t v205 = vpmaxq_s8(v204, v204);
  int8x16_t v206 = vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7510);
  int8x16_t v207 = vpmaxq_s8(v206, v206);
  int8x16_t v208 = vpminq_s8(v206, v206);
  int8x16_t v209 = vpmaxq_s8(v207, v207);
  int8x16_t v210 = vpminq_s8(v208, v208);
  int8x16_t v211 = vpmaxq_s8(v209, v209);
  int8x16_t v212 = vpminq_s8(v210, v210);
  int8x16_t v213 = vmaxq_s8(v201, v211);
  int8x16_t v214 = vminq_s8(v202, v212);
  int8x16_t v215 = vzip1q_s8(v211, v212);
  int8x16_t v216 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v215)), vceqzq_s8(v215));
  int8x16_t v217 = vpmaxq_s8(v216, v216);
  int8x16_t v218 = vqtbl1q_s8(v179, (int8x16_t)xmmword_242EA7510);
  int8x16_t v219 = vpmaxq_s8(v218, v218);
  int8x16_t v220 = vpminq_s8(v218, v218);
  int8x16_t v221 = vpmaxq_s8(v219, v219);
  int8x16_t v222 = vpminq_s8(v220, v220);
  int8x16_t v223 = vpmaxq_s8(v221, v221);
  int8x16_t v224 = vpminq_s8(v222, v222);
  int8x16_t v225 = vminq_s8(v214, v224);
  int8x16_t v226 = vzip1q_s8(v223, v224);
  int8x16_t v227 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v226)), vceqzq_s8(v226));
  int8x16_t v228 = vpmaxq_s8(v227, v227);
  int8x16_t v229 = vmaxq_s8(vmaxq_s8(v193, v205), vmaxq_s8(v217, v228));
  int8x16_t v230 = vclzq_s8(vsubq_s8(vmaxq_s8(v213, v223), v225));
  int8x16_t v231 = vsubq_s8(v191, v230);
  int8x16_t v232 = vcgtq_s8(v229, v231);
  int8x16_t v233 = vbslq_s8(v232, v231, v229);
  v231.i64[0] = 0x909090909090909;
  v231.i64[1] = 0x909090909090909;
  v234.i64[0] = 0x202020202020202;
  v234.i64[1] = 0x202020202020202;
  int8x16_t v235 = vorrq_s8(vandq_s8(vceqzq_s8(v233), v234), vsubq_s8(vandq_s8(v232, v231), vmvnq_s8(v232)));
  v229.i64[0] = 0x303030303030303;
  v229.i64[1] = 0x303030303030303;
  int8x16_t v236 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v193), v229), (int8x16_t)0);
  int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v205), v229), (int8x16_t)0);
  int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v217), v229), (int8x16_t)0);
  int8x16_t v239 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v228), v229), (int8x16_t)0);
  int8x16_t v240 = vsubq_s8(v233, v236);
  int8x16_t v241 = vsubq_s8(v233, v237);
  int8x16_t v242 = vsubq_s8(v233, v238);
  int8x16_t v243 = vsubq_s8(v233, v239);
  int8x16_t v244 = vceqq_s8(vaddq_s8(v239, v238), vnegq_s8(vaddq_s8(v236, v237)));
  v239.i64[0] = 0x404040404040404;
  v239.i64[1] = 0x404040404040404;
  int8x16_t v245 = vorrq_s8(vbicq_s8(v239, v244), v235);
  v246.i64[0] = 0x3000300030003;
  v246.i64[1] = 0x3000300030003;
  int8x16_t v247 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v237.i64[0] = 0x8000800080008;
  v237.i64[1] = 0x8000800080008;
  int16x8_t v248 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v247, v237)));
  int16x8_t v249 = (int16x8_t)vandq_s8(v247, v246);
  v246.i64[0] = 0x2000200020002;
  v246.i64[1] = 0x2000200020002;
  int8x16_t v250 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v248, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v237)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v249, (int16x8_t)v246), v237)), *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8),
                                                                *(int8x8_t *)v160.i8),
                                                              3uLL)),
                                                          vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v233.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v245.i8))), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v245.i8, *(int8x8_t *)v245.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v240.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v242.i8, *(int8x8_t *)v241.i8), *(int8x8_t *)v243.i8), 3uLL)))), 0);
  if (vaddlvq_s8(v250))
  {
    v251.i64[0] = 0x707070707070707;
    v251.i64[1] = 0x707070707070707;
    v252.i64[0] = -1;
    v252.i64[1] = -1;
    v14.i16[0] = vbslq_s8(v250, vextq_s8(v8, v8, 0xEuLL), v14).u16[0];
    int8x16_t v168 = vbslq_s8(v250, v180, v168);
    int8x16_t v169 = vbslq_s8(v250, v176, v169);
    int8x16_t v17 = vbslq_s8(v250, v177, v172);
    int8x16_t v18 = vbslq_s8(v250, v179, v416);
    int8x16_t v157 = vbslq_s8(v250, v240, v157);
    int8x16_t v158 = vbslq_s8(v250, v241, v158);
    int8x16_t v159 = vbslq_s8(v250, v242, v159);
    int8x16_t v160 = vbslq_s8(v250, v243, v160);
    int8x16_t v170 = vbslq_s8(v250, vandq_s8(vsubq_s8(vshlq_s8(v252, vsubq_s8(v251, v230)), v225), v232), v170);
    int8x16_t v74 = vbslq_s8(v250, v233, v74);
    int8x16_t v84 = vbslq_s8(v250, v245, v84);
  }
  else
  {
    int8x16_t v18 = v416;
    int8x16_t v17 = v172;
  }
LABEL_16:
  int8x16_t v253 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v254.i64[0] = 0x8000800080008;
  v254.i64[1] = 0x8000800080008;
  v255.i64[0] = 0x3000300030003;
  v255.i64[1] = 0x3000300030003;
  v256.i64[0] = 0x2000200020002;
  v256.i64[1] = 0x2000200020002;
  int16x8_t v257 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v253, v254))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v254)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v253, v255), v256), v254)), *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8), *(int8x8_t *)v160.i8), 3uLL));
  if ((unint64_t)(vpaddq_s16(v257, v257).i16[0] - 227) <= 0xFFFFFFFFFFFFFEF7)
  {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
    return 32;
  }
  else
  {
    __int16 v258 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v259 = 8 * (a1 & 7);
    if (v259) {
      uint64_t v260 = *v258 & ~(-1 << v259);
    }
    else {
      uint64_t v260 = 0;
    }
    unint64_t v261 = (unint64_t)((v74.i8[0] - 1) & 7) << 10;
    if (!v74.i8[0]) {
      unint64_t v261 = 0;
    }
    if (v74.i8[1]) {
      uint64_t v262 = (unsigned __int16)((v74.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v262 = 0;
    }
    *a2 = v84.i8[0] << 6;
    unint64_t v263 = (v84.i8[0] & 0x1C | (32 * (v84.i8[1] & 0x1F)) | v262 | v261) >> 2;
    unint64_t v264 = (v263 << v259) | v260;
    if (v259 >= 0x32)
    {
      *__int16 v258 = v264;
      unint64_t v264 = v263 >> (-8 * (a1 & 7u));
    }
    unint64_t v265 = (v259 + 14) & 0x3E;
    unint64_t v266 = v264 | ((unint64_t)v14.u16[0] << v265);
    if (v265 >= 0x30)
    {
      *(void *)((char *)v258 + (((v259 + 14) >> 3) & 8)) = v266;
      unint64_t v266 = (unint64_t)v14.u16[0] >> -(char)v265;
    }
    unint64_t v267 = v259 + 30;
    int8x16_t v268 = vsubq_s8(v74, v157);
    int8x16_t v269 = vsubq_s8(v74, v158);
    int8x16_t v270 = vsubq_s8(v74, v159);
    int8x16_t v271 = vsubq_s8(v74, v160);
    v268.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v268, v269), (int16x8_t)vzip1q_s8(v270, v271)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v268, v269), (int16x8_t)vtrn2q_s8(v270, v271))).u64[0];
    v270.i64[0] = 0x202020202020202;
    v270.i64[1] = 0x202020202020202;
    int8x16_t v272 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v253.i8, (int8x8_t)0x4000400040004)))), v270);
    v270.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v270.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v271.i64[0] = -1;
    v271.i64[1] = -1;
    uint8x16_t v273 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v271, (uint8x16_t)vorrq_s8(v272, v270)), (int8x16_t)v268.u64[0]);
    int16x8_t v274 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v272.i8);
    uint16x8_t v275 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v273.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v274)), (int16x8_t)vmovl_high_u8(v273));
    uint16x8_t v276 = (uint16x8_t)vpaddq_s16(v274, (int16x8_t)vmovl_high_u8((uint8x16_t)v272));
    int32x4_t v277 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v276.i8);
    int32x4_t v278 = (int32x4_t)vmovl_high_u16(v276);
    int32x4_t v279 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v275.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)), (int32x4_t)vshlq_u32(vmovl_high_u16(v275), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)));
    int32x4_t v280 = vpaddq_s32(v277, v278);
    v281.i64[0] = v279.u32[0];
    v281.i64[1] = v279.u32[1];
    uint64x2_t v282 = (uint64x2_t)v281;
    v281.i64[0] = v279.u32[2];
    v281.i64[1] = v279.u32[3];
    uint64x2_t v283 = (uint64x2_t)v281;
    v281.i64[0] = v280.u32[0];
    v281.i64[1] = v280.u32[1];
    int64x2_t v284 = v281;
    v281.i64[0] = v280.u32[2];
    v281.i64[1] = v280.u32[3];
    int64x2_t v285 = vpaddq_s64((int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)), (int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)));
    int64x2_t v286 = vpaddq_s64(v284, v281);
    uint64_t v287 = (v259 + 30) & 0x3E;
    unint64_t v288 = (v285.i64[0] << v287) | v266;
    if ((unint64_t)(v286.i64[0] + v287) >= 0x40)
    {
      *(void *)((char *)v258 + ((v267 >> 3) & 8)) = v288;
      unint64_t v288 = (unint64_t)v285.i64[0] >> -(char)v287;
    }
    int8x16_t v289 = vceqq_s8(v74, v157);
    unint64_t v290 = v286.i64[0] + v267;
    unint64_t v291 = v288 | (v285.i64[1] << v290);
    if ((v290 & 0x3F) + v286.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
      unint64_t v291 = (unint64_t)v285.i64[1] >> -(v290 & 0x3F);
      if ((v290 & 0x3F) == 0) {
        unint64_t v291 = 0;
      }
    }
    int8x16_t v292 = vandq_s8(v170, v289);
    unint64_t v293 = v290 + v286.i64[1];
    v294.i64[0] = 0x808080808080808;
    v294.i64[1] = 0x808080808080808;
    v295.i64[0] = -1;
    v295.i64[1] = -1;
    int8x16_t v296 = vandq_s8(vextq_s8(vtstq_s8(v84, v294), (int8x16_t)0, 0xEuLL), v74);
    v297.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v297.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v298 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v295, (uint8x16_t)vaddq_s8(v296, v297)), v170);
    int16x8_t v299 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v296.i8);
    uint16x8_t v300 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v298.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)), (int16x8_t)vmovl_high_u8(v298));
    uint16x8_t v301 = (uint16x8_t)vpaddq_s16(v299, (int16x8_t)vmovl_high_u8((uint8x16_t)v296));
    int32x4_t v302 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v301.i8);
    int32x4_t v303 = (int32x4_t)vmovl_high_u16(v301);
    int32x4_t v304 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v300.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v302)), (int32x4_t)vshlq_u32(vmovl_high_u16(v300), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)));
    int32x4_t v305 = vpaddq_s32(v302, v303);
    v306.i64[0] = v304.u32[0];
    v306.i64[1] = v304.u32[1];
    uint64x2_t v307 = (uint64x2_t)v306;
    v306.i64[0] = v304.u32[2];
    v306.i64[1] = v304.u32[3];
    uint64x2_t v308 = (uint64x2_t)v306;
    v306.i64[0] = v305.u32[0];
    v306.i64[1] = v305.u32[1];
    int64x2_t v309 = v306;
    v306.i64[0] = v305.u32[2];
    v306.i64[1] = v305.u32[3];
    int64x2_t v310 = vpaddq_s64((int64x2_t)vshlq_u64(v307, (uint64x2_t)vzip1q_s64((int64x2_t)0, v309)), (int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v306)));
    int64x2_t v311 = vpaddq_s64(v309, v306);
    unint64_t v312 = (v310.i64[0] << v293) | v291;
    if (v311.i64[0] + (v293 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v312;
      unint64_t v312 = (unint64_t)v310.i64[0] >> -(v293 & 0x3F);
      if ((v293 & 0x3F) == 0) {
        unint64_t v312 = 0;
      }
    }
    int8x16_t v313 = vceqq_s8(v74, v158);
    int8x16_t v314 = vaddq_s8(v292, v168);
    unint64_t v315 = v311.i64[0] + v293;
    unint64_t v316 = v312 | (v310.i64[1] << v315);
    if ((v315 & 0x3F) + v311.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v315 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v316;
      unint64_t v316 = (unint64_t)v310.i64[1] >> -(v315 & 0x3F);
      if ((v315 & 0x3F) == 0) {
        unint64_t v316 = 0;
      }
    }
    int8x16_t v317 = vandq_s8(v170, v313);
    unint64_t v318 = v315 + v311.i64[1];
    int8x16_t v319 = vextq_s8((int8x16_t)0, v157, 0xEuLL);
    v320.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v320.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v321.i64[0] = -1;
    v321.i64[1] = -1;
    uint8x16_t v322 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v321, (uint8x16_t)vaddq_s8(v319, v320)), v314);
    int16x8_t v323 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v319.i8);
    int16x8_t v324 = (int16x8_t)vmovl_high_u8((uint8x16_t)v319);
    uint16x8_t v325 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v322.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v323)), (int16x8_t)vshlq_u16(vmovl_high_u8(v322), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v324)));
    uint16x8_t v326 = (uint16x8_t)vpaddq_s16(v323, v324);
    int32x4_t v327 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v326.i8);
    int32x4_t v328 = (int32x4_t)vmovl_high_u16(v326);
    int32x4_t v329 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v325.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v327)), (int32x4_t)vshlq_u32(vmovl_high_u16(v325), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)));
    int32x4_t v330 = vpaddq_s32(v327, v328);
    v331.i64[0] = v329.u32[0];
    v331.i64[1] = v329.u32[1];
    uint64x2_t v332 = (uint64x2_t)v331;
    v331.i64[0] = v329.u32[2];
    v331.i64[1] = v329.u32[3];
    uint64x2_t v333 = (uint64x2_t)v331;
    v331.i64[0] = v330.u32[0];
    v331.i64[1] = v330.u32[1];
    int64x2_t v334 = v331;
    v331.i64[0] = v330.u32[2];
    v331.i64[1] = v330.u32[3];
    int64x2_t v335 = vpaddq_s64((int64x2_t)vshlq_u64(v332, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)), (int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v331)));
    int64x2_t v336 = vpaddq_s64(v334, v331);
    unint64_t v337 = (v335.i64[0] << v318) | v316;
    if (v336.i64[0] + (v318 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v318 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v337;
      unint64_t v337 = (unint64_t)v335.i64[0] >> -(v318 & 0x3F);
      if ((v318 & 0x3F) == 0) {
        unint64_t v337 = 0;
      }
    }
    int8x16_t v338 = vceqq_s8(v74, v159);
    int8x16_t v339 = vaddq_s8(v169, v317);
    unint64_t v340 = v336.i64[0] + v318;
    unint64_t v341 = v337 | (v335.i64[1] << v340);
    if ((v340 & 0x3F) + v336.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
      unint64_t v341 = (unint64_t)v335.i64[1] >> -(v340 & 0x3F);
      if ((v340 & 0x3F) == 0) {
        unint64_t v341 = 0;
      }
    }
    int8x16_t v342 = vandq_s8(v170, v338);
    unint64_t v343 = v340 + v336.i64[1];
    v344.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v344.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v345.i64[0] = -1;
    v345.i64[1] = -1;
    uint8x16_t v346 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v345, (uint8x16_t)vaddq_s8(v158, v344)), v339);
    int16x8_t v347 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v158.i8);
    int16x8_t v348 = (int16x8_t)vmovl_high_u8((uint8x16_t)v158);
    uint16x8_t v349 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v346.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v347)), (int16x8_t)vshlq_u16(vmovl_high_u8(v346), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v348)));
    uint16x8_t v350 = (uint16x8_t)vpaddq_s16(v347, v348);
    int32x4_t v351 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v350.i8);
    int32x4_t v352 = (int32x4_t)vmovl_high_u16(v350);
    int32x4_t v353 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v349.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v351)), (int32x4_t)vshlq_u32(vmovl_high_u16(v349), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v352)));
    int32x4_t v354 = vpaddq_s32(v351, v352);
    v355.i64[0] = v353.u32[0];
    v355.i64[1] = v353.u32[1];
    uint64x2_t v356 = (uint64x2_t)v355;
    v355.i64[0] = v353.u32[2];
    v355.i64[1] = v353.u32[3];
    uint64x2_t v357 = (uint64x2_t)v355;
    v355.i64[0] = v354.u32[0];
    v355.i64[1] = v354.u32[1];
    int64x2_t v358 = v355;
    v355.i64[0] = v354.u32[2];
    v355.i64[1] = v354.u32[3];
    int64x2_t v359 = vpaddq_s64((int64x2_t)vshlq_u64(v356, (uint64x2_t)vzip1q_s64((int64x2_t)0, v358)), (int64x2_t)vshlq_u64(v357, (uint64x2_t)vzip1q_s64((int64x2_t)0, v355)));
    int64x2_t v360 = vpaddq_s64(v358, v355);
    unint64_t v361 = (v359.i64[0] << v343) | v341;
    if (v360.i64[0] + (v343 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
      unint64_t v361 = (unint64_t)v359.i64[0] >> -(v343 & 0x3F);
      if ((v343 & 0x3F) == 0) {
        unint64_t v361 = 0;
      }
    }
    int8x16_t v362 = vceqq_s8(v74, v160);
    int8x16_t v363 = vaddq_s8(v17, v342);
    unint64_t v364 = v360.i64[0] + v343;
    unint64_t v365 = v361 | (v359.i64[1] << v364);
    if ((v364 & 0x3F) + v360.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
      unint64_t v365 = (unint64_t)v359.i64[1] >> -(v364 & 0x3F);
      if ((v364 & 0x3F) == 0) {
        unint64_t v365 = 0;
      }
    }
    int8x16_t v366 = vandq_s8(v170, v362);
    unint64_t v367 = v364 + v360.i64[1];
    v368.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v368.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v369.i64[0] = -1;
    v369.i64[1] = -1;
    uint8x16_t v370 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v369, (uint8x16_t)vaddq_s8(v159, v368)), v363);
    int16x8_t v371 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
    int16x8_t v372 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
    uint16x8_t v373 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v370.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v371)), (int16x8_t)vshlq_u16(vmovl_high_u8(v370), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v372)));
    uint16x8_t v374 = (uint16x8_t)vpaddq_s16(v371, v372);
    int32x4_t v375 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v374.i8);
    int32x4_t v376 = (int32x4_t)vmovl_high_u16(v374);
    int32x4_t v377 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v376)));
    int32x4_t v378 = vpaddq_s32(v375, v376);
    v379.i64[0] = v377.u32[0];
    v379.i64[1] = v377.u32[1];
    uint64x2_t v380 = (uint64x2_t)v379;
    v379.i64[0] = v377.u32[2];
    v379.i64[1] = v377.u32[3];
    uint64x2_t v381 = (uint64x2_t)v379;
    v379.i64[0] = v378.u32[0];
    v379.i64[1] = v378.u32[1];
    int64x2_t v382 = v379;
    v379.i64[0] = v378.u32[2];
    v379.i64[1] = v378.u32[3];
    int64x2_t v383 = vpaddq_s64((int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v382)), (int64x2_t)vshlq_u64(v381, (uint64x2_t)vzip1q_s64((int64x2_t)0, v379)));
    int64x2_t v384 = vpaddq_s64(v382, v379);
    unint64_t v385 = (v383.i64[0] << v367) | v365;
    if (v384.i64[0] + (v367 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v385;
      unint64_t v385 = (unint64_t)v383.i64[0] >> -(v367 & 0x3F);
      if ((v367 & 0x3F) == 0) {
        unint64_t v385 = 0;
      }
    }
    int8x16_t v386 = vaddq_s8(v18, v366);
    unint64_t v387 = v384.i64[0] + v367;
    unint64_t v388 = v385 | (v383.i64[1] << v387);
    if ((v387 & 0x3F) + v384.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v387 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v388;
      unint64_t v388 = (unint64_t)v383.i64[1] >> -(v387 & 0x3F);
      if ((v387 & 0x3F) == 0) {
        unint64_t v388 = 0;
      }
    }
    unint64_t v389 = v387 + v384.i64[1];
    v390.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v390.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v391.i64[0] = -1;
    v391.i64[1] = -1;
    uint8x16_t v392 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v391, (uint8x16_t)vaddq_s8(v160, v390)), v386);
    int16x8_t v393 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v160.i8);
    int16x8_t v394 = (int16x8_t)vmovl_high_u8((uint8x16_t)v160);
    uint16x8_t v395 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v392.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v393)), (int16x8_t)vshlq_u16(vmovl_high_u8(v392), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v394)));
    uint16x8_t v396 = (uint16x8_t)vpaddq_s16(v393, v394);
    int32x4_t v397 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v396.i8);
    int32x4_t v398 = (int32x4_t)vmovl_high_u16(v396);
    int32x4_t v399 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v395.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v397)), (int32x4_t)vshlq_u32(vmovl_high_u16(v395), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v398)));
    int32x4_t v400 = vpaddq_s32(v397, v398);
    v401.i64[0] = v399.u32[0];
    v401.i64[1] = v399.u32[1];
    uint64x2_t v402 = (uint64x2_t)v401;
    v401.i64[0] = v399.u32[2];
    v401.i64[1] = v399.u32[3];
    uint64x2_t v403 = (uint64x2_t)v401;
    v401.i64[0] = v400.u32[0];
    v401.i64[1] = v400.u32[1];
    int64x2_t v404 = v401;
    v401.i64[0] = v400.u32[2];
    v401.i64[1] = v400.u32[3];
    int64x2_t v405 = vpaddq_s64((int64x2_t)vshlq_u64(v402, (uint64x2_t)vzip1q_s64((int64x2_t)0, v404)), (int64x2_t)vshlq_u64(v403, (uint64x2_t)vzip1q_s64((int64x2_t)0, v401)));
    int64x2_t v406 = vpaddq_s64(v404, v401);
    unint64_t v407 = (v405.i64[0] << v389) | v388;
    if (v406.i64[0] + (v389 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v258 + ((v389 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v407;
      if ((v389 & 0x3F) != 0) {
        unint64_t v407 = (unint64_t)v405.i64[0] >> -(v389 & 0x3F);
      }
      else {
        unint64_t v407 = 0;
      }
    }
    unint64_t v408 = v406.i64[0] + v389;
    unint64_t v409 = v407 | (v405.i64[1] << v408);
    if ((v408 & 0x3F) + v406.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v408 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
      unint64_t v409 = (unint64_t)v405.i64[1] >> -(v408 & 0x3F);
      if ((v408 & 0x3F) == 0) {
        unint64_t v409 = 0;
      }
    }
    unint64_t v410 = v408 + v406.i64[1];
    if ((v410 & 0x3F) != 0) {
      *(void *)((char *)v258 + ((v410 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
    }
    unint64_t result = (v410 - v259 + 7) >> 3;
    *a2 |= (_BYTE)result - 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  if (a5 > 1)
  {
    uint64_t v20 = a5 & 0xFE;
    if (a5 == v20)
    {
      uint64_t v21 = 0;
      int8x16_t v22 = (__int16 *)(a3 + 2);
      int8x16_t v23 = (char *)&v72 + 8;
      do
      {
        int8x16_t v24 = v23;
        int8x16_t v25 = v22;
        uint64_t v26 = a5;
        do
        {
          __int16 v27 = *(v25 - 1);
          __int16 v28 = *v25;
          v25 += 2;
          *(v24 - 4) = v27;
          *int8x16_t v24 = v28;
          v24 += 8;
          v26 -= 2;
        }
        while (v26);
        ++v21;
        int8x16_t v22 = (__int16 *)((char *)v22 + a4);
        v23 += 2;
      }
      while (v21 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (__int16 *)(a3 + 2);
      int8x16_t v31 = (char *)&v72 + 8;
      int8x16_t v32 = (char *)&v72 + ((8 * a5) & 0x7F0);
      do
      {
        int8x16_t v33 = v31;
        int8x16_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          __int16 v36 = *(v34 - 1);
          __int16 v37 = *v34;
          v34 += 2;
          *(v33 - 4) = v36;
          *int8x16_t v33 = v37;
          v33 += 8;
          v35 -= 2;
        }
        while (v35);
        int8x16_t v38 = (__int16 *)(a3 + v29 * a4 + 2 * v20);
        int8x16_t v39 = v32;
        uint64_t v40 = a5 - v20;
        do
        {
          __int16 v41 = *v38++;
          *int8x16_t v39 = v41;
          v39 += 4;
          --v40;
        }
        while (v40);
        ++v29;
        int8x16_t v30 = (__int16 *)((char *)v30 + a4);
        v31 += 2;
        v32 += 2;
      }
      while (v29 != a6);
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v11 = a6 & 0xFE;
    int8x16_t v12 = (__int16 *)(a3 + 1);
    int8x16_t v13 = (_WORD *)&v72 + 1;
    uint64_t v14 = v11;
    do
    {
      __int16 v15 = *(__int16 *)((char *)v12 - 1);
      __int16 v16 = *v12++;
      *(v13 - 1) = v15;
      *int8x16_t v13 = v16;
      v13 += 2;
      v14 -= 2;
    }
    while (v14);
    if (v11 != a6)
    {
LABEL_7:
      uint64_t v17 = a6 - v11;
      int8x16_t v18 = (_WORD *)&v72 + v11;
      int8x16_t v19 = (_WORD *)(a3 + v11 * a4);
      do
      {
        *v18++ = *v19;
        int8x16_t v19 = (_WORD *)((char *)v19 + a4);
        --v17;
      }
      while (v17);
    }
  }
  int v56 = v72;
  int v57 = BYTE1(v72);
  int v58 = BYTE8(v72);
  int v59 = BYTE9(v72);
  int v60 = BYTE2(v72);
  int v61 = BYTE3(v72);
  int v62 = BYTE10(v72);
  int v63 = BYTE11(v72);
  int v64 = v73;
  int v65 = BYTE1(v73);
  int v66 = BYTE8(v73);
  int v67 = BYTE9(v73);
  int v68 = BYTE2(v73);
  int v69 = BYTE3(v73);
  if (a5 >= 4) {
    unsigned int v42 = 4;
  }
  else {
    unsigned int v42 = a5;
  }
  if (a5 >= 4) {
    unsigned int v43 = a5 - 4;
  }
  else {
    unsigned int v43 = 0;
  }
  int v70 = BYTE10(v73);
  int v71 = BYTE11(v73);
  if (a6 >= 2) {
    unsigned int v44 = 2;
  }
  else {
    unsigned int v44 = a6;
  }
  if (a6 >= 2) {
    unsigned int v45 = a6 - 2;
  }
  else {
    unsigned int v45 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v56, a7, v42, v44);
  int v56 = BYTE4(v72);
  int v57 = BYTE5(v72);
  int v58 = BYTE12(v72);
  int v59 = BYTE13(v72);
  int v60 = BYTE6(v72);
  int v61 = BYTE7(v72);
  int v62 = BYTE14(v72);
  int v63 = HIBYTE(v72);
  int v64 = BYTE4(v73);
  int v65 = BYTE5(v73);
  int v66 = BYTE12(v73);
  int v67 = BYTE13(v73);
  int v68 = BYTE6(v73);
  int v69 = BYTE7(v73);
  int v70 = BYTE14(v73);
  int v71 = HIBYTE(v73);
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v45;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 8, (uint64_t)&v56, a7, v42, v47);
  int v56 = v74;
  int v57 = BYTE1(v74);
  int v58 = BYTE8(v74);
  int v59 = BYTE9(v74);
  int v60 = BYTE2(v74);
  int v61 = BYTE3(v74);
  int v62 = BYTE10(v74);
  int v63 = BYTE11(v74);
  int v64 = v75;
  int v65 = BYTE1(v75);
  int v66 = BYTE8(v75);
  int v67 = BYTE9(v75);
  int v68 = BYTE2(v75);
  int v69 = BYTE3(v75);
  if (a5 >= 8) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = v43;
  }
  int v70 = BYTE10(v75);
  int v71 = BYTE11(v75);
  int v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v56, a7, v49, v44);
  int v56 = BYTE4(v74);
  int v57 = BYTE5(v74);
  int v58 = BYTE12(v74);
  int v59 = BYTE13(v74);
  int v60 = BYTE6(v74);
  int v61 = BYTE7(v74);
  int v62 = BYTE14(v74);
  int v63 = HIBYTE(v74);
  int v64 = BYTE4(v75);
  int v65 = BYTE5(v75);
  int v66 = BYTE12(v75);
  int v67 = BYTE13(v75);
  int v68 = BYTE6(v75);
  int v69 = BYTE7(v75);
  int v70 = BYTE14(v75);
  int v71 = HIBYTE(v75);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v56, a7, v49, v47);
  if (v50) {
    char v52 = 4;
  }
  else {
    char v52 = 0;
  }
  if (v48) {
    char v53 = 2;
  }
  else {
    char v53 = 0;
  }
  if (result) {
    char v54 = -8;
  }
  else {
    char v54 = -16;
  }
  *a2 = v54 | v52 | v46 | v53;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v277 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v241 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v240 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v239 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v238 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v236 = v7;
  BOOL v237 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v235 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[v6];
    *(&v275 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(unsigned int *)((char *)&v252 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v251[v17 + 2] = v18;
    int8x16_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint64_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint64_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint64_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint64_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint64_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint64_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint64_t v29 = &v273[v17 + 2];
    v273[v6 + 2] = v20;
    v274[v6] = v20;
    v273[v6] = 0;
    if (v235)
    {
      unsigned int v30 = v20;
      if (v237) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v273[v6] = 1;
        v274[v6] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        int8x16_t v31 = &v273[v17 + 2];
      }
      else {
        int8x16_t v31 = (unsigned int *)(&v257 + v6);
      }
      unsigned int v20 = *v31;
      *uint64_t v29 = *v31;
      if (v237)
      {
LABEL_58:
        if (v236) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v273[v6] = 2;
      v274[v6] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      int8x16_t v32 = &v273[v17 + 2];
    }
    else {
      int8x16_t v32 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v32;
    *uint64_t v29 = *v32;
    if (v236)
    {
LABEL_59:
      if (v238) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v273[v6] = 3;
      v274[v6] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      int8x16_t v33 = &v273[v17 + 2];
    }
    else {
      int8x16_t v33 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v33;
    *uint64_t v29 = *v33;
    if (v238)
    {
LABEL_60:
      if (v240) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v273[v6] = 4;
      v274[v6] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      int8x16_t v34 = &v273[v17 + 2];
    }
    else {
      int8x16_t v34 = (unsigned int *)(&v263 + v6);
    }
    unsigned int v20 = *v34;
    *uint64_t v29 = *v34;
    if (v240)
    {
LABEL_61:
      if (v239) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v273[v6] = 5;
      v274[v6] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      uint64_t v35 = &v273[v17 + 2];
    }
    else {
      uint64_t v35 = (unsigned int *)(&v265 + v6);
    }
    unsigned int v20 = *v35;
    *uint64_t v29 = *v35;
    if (v239)
    {
LABEL_62:
      if (v241) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v273[v6] = 7;
        v274[v6] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        __int16 v37 = &v273[v17 + 2];
      }
      else {
        __int16 v37 = (unsigned int *)(&v269 + v6);
      }
      unsigned int v20 = *v37;
      *uint64_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v273[v6] = 6;
      v274[v6] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      __int16 v36 = &v273[v17 + 2];
    }
    else {
      __int16 v36 = (unsigned int *)(&v267 + v6);
    }
    unsigned int v20 = *v36;
    *uint64_t v29 = *v36;
    if (!v241) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v271 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42]
          - v43
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v14
            + 2);
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v72 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v72) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v271 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v271 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  uint64_t v51 = v252;
  uint64_t v52 = v253;
  unsigned int v54 = v271;
  unsigned int v53 = v272;
  BOOL v56 = v272 >= v271;
  BOOL v57 = v272 < v271;
  int v58 = kDQuadParamTable[160 * v253 + 6 + 10 * v272];
  int v249 = kDQuadParamTable[160 * v252 + 6 + 10 * v271];
  int v55 = v249;
  int v250 = v58;
  v251[0] = v249;
  v251[1] = v58;
  if (*(&v271 + v56) == *(&v271 + v57))
  {
    int v59 = v249;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v251 | (4 * v57));
    int v59 = v249;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v249 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v249 | (4 * v56)) += v60;
      int v59 = v249;
    }
  }
  if (a4) {
    BOOL v61 = a5 == 0;
  }
  else {
    BOOL v61 = 1;
  }
  int v62 = v61;
  int v234 = v62;
  int v63 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v64 = *((void *)v63 + 1);
  int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v51
        + 2);
  int v66 = v63[4];
  LODWORD(v63) = v63[5];
  unsigned int v67 = v66 + v65;
  unsigned int v247 = v67;
  unsigned int v68 = v63 + v65;
  unsigned int v245 = v68;
  int v69 = v59 - v55;
  if (v69 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v69)
    {
      unsigned int v245 = --v68;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v70 = -1;
LABEL_167:
        unsigned int v247 = v70 + v67;
      }
    }
  }
  else if (v69)
  {
    v68 += v69;
    unsigned int v245 = v68;
    int v70 = v69;
    goto LABEL_167;
  }
  BOOL v72 = v51 == 5 && v54 == 1 && v69 < 2;
  int v73 = v72;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v74 = 31744;
    }
    else {
      int v74 = 0;
    }
    if (v51 == 4) {
      int v75 = 2139095040;
    }
    else {
      int v75 = v74;
    }
    int v76 = 1 << (v275 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_188;
      }
LABEL_336:
      if ((v75 & ~v257) == 0 || v257 == v76) {
        int v73 = 1;
      }
      if (!v237) {
        goto LABEL_343;
      }
LABEL_189:
      if (v236) {
        goto LABEL_190;
      }
LABEL_350:
      if ((v75 & ~v261) == 0 || v261 == v76) {
        int v73 = 1;
      }
      if (!v238) {
        goto LABEL_357;
      }
LABEL_191:
      if (v240) {
        goto LABEL_192;
      }
LABEL_364:
      if ((v75 & ~v265) == 0 || v265 == v76) {
        int v73 = 1;
      }
      if (!v239) {
        goto LABEL_371;
      }
LABEL_193:
      if (!v241) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v75 & ~v255) == 0 || v255 == v76) {
        int v73 = 1;
      }
      if (!v235) {
        goto LABEL_336;
      }
LABEL_188:
      if (v237) {
        goto LABEL_189;
      }
LABEL_343:
      if ((v75 & ~v259) == 0 || v259 == v76) {
        int v73 = 1;
      }
      if (!v236) {
        goto LABEL_350;
      }
LABEL_190:
      if (v238) {
        goto LABEL_191;
      }
LABEL_357:
      if ((v75 & ~v263) == 0 || v263 == v76) {
        int v73 = 1;
      }
      if (!v240) {
        goto LABEL_364;
      }
LABEL_192:
      if (v239) {
        goto LABEL_193;
      }
LABEL_371:
      if ((v75 & ~v267) == 0 || v267 == v76) {
        int v73 = 1;
      }
      if (!v241)
      {
LABEL_194:
        if ((v75 & ~v269) == 0 || v269 == v76) {
          int v73 = 1;
        }
      }
    }
  }
  BOOL v72 = v64 >> v68 > 0x10;
  int v78 = v234;
  if (v72) {
    int v78 = 1;
  }
  int v79 = v78 | v73;
  int8x16_t v80 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v81 = *((void *)v80 + 1);
  int v82 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v52
        + 2);
  int v83 = v80[4];
  LODWORD(v80) = v80[5];
  unsigned int v84 = v83 + v82;
  unsigned int v248 = v84;
  unsigned int v85 = v80 + v82;
  unsigned int v246 = v85;
  int v86 = v250 - v58;
  if (v250 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v250)
    {
      unsigned int v246 = --v85;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v87 = -1;
LABEL_206:
        unsigned int v248 = v87 + v84;
      }
    }
  }
  else if (v250 != v58)
  {
    v85 += v86;
    unsigned int v246 = v85;
    int v87 = v250 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v86 < 2) {
    int v79 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v88 = 31744;
    }
    else {
      int v88 = 0;
    }
    if (v52 == 4) {
      int v88 = 2139095040;
    }
    int v89 = 1 << (v276 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_221;
      }
LABEL_386:
      if ((v88 & ~v258) == 0 || v258 == v89) {
        int v79 = 1;
      }
      if (!v237) {
        goto LABEL_393;
      }
LABEL_222:
      if (v236) {
        goto LABEL_223;
      }
LABEL_400:
      if ((v88 & ~v262) == 0 || v262 == v89) {
        int v79 = 1;
      }
      if (!v238) {
        goto LABEL_407;
      }
LABEL_224:
      if (v240) {
        goto LABEL_225;
      }
LABEL_414:
      if ((v88 & ~v266) == 0 || v266 == v89) {
        int v79 = 1;
      }
      if (!v239) {
        goto LABEL_421;
      }
LABEL_226:
      if (!v241) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v88 & ~v256) == 0 || v256 == v89) {
        int v79 = 1;
      }
      if (!v235) {
        goto LABEL_386;
      }
LABEL_221:
      if (v237) {
        goto LABEL_222;
      }
LABEL_393:
      if ((v88 & ~v260) == 0 || v260 == v89) {
        int v79 = 1;
      }
      if (!v236) {
        goto LABEL_400;
      }
LABEL_223:
      if (v238) {
        goto LABEL_224;
      }
LABEL_407:
      if ((v88 & ~v264) == 0 || v264 == v89) {
        int v79 = 1;
      }
      if (!v240) {
        goto LABEL_414;
      }
LABEL_225:
      if (v239) {
        goto LABEL_226;
      }
LABEL_421:
      if ((v88 & ~v268) == 0 || v268 == v89) {
        int v79 = 1;
      }
      if (!v241)
      {
LABEL_227:
        if ((v88 & ~v270) == 0 || v270 == v89) {
          int v79 = 1;
        }
      }
    }
  }
  char v91 = 0;
  uint64_t v92 = 0;
  BOOL v72 = v81 >> v85 > 0x10;
  int v93 = v234;
  if (v72) {
    int v93 = 1;
  }
  int v231 = v93;
  int v232 = v79;
  uint64_t v244 = 0;
  uint64_t v243 = 0;
  memset(v242, 0, sizeof(v242));
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v275 + v92);
    if (v96 >= *(&v247 + v92)) {
      unsigned int v97 = *(&v247 + v92);
    }
    else {
      unsigned int v97 = *(&v275 + v92);
    }
    *(&v247 + v92) = v97;
    int8x16_t v98 = &kDQuadParamTable[160 * *(&v252 + v92) + 10 * *(&v271 + v92)];
    if (v98[5]) {
      unsigned int v99 = v96;
    }
    else {
      unsigned int v99 = 0;
    }
    if (v99 >= *(&v245 + v92)) {
      unsigned int v99 = *(&v245 + v92);
    }
    int v100 = v274[v92] & (-1 << (v96 - v97));
    int8x16_t v101 = &v255 + v92;
    int v102 = *v101 - v100;
    uint64_t v103 = 32 * v92;
    int8x16_t v104 = &v254[32 * v92];
    if (v234) {
      int v102 = 0;
    }
    int v105 = v101[2] - v100;
    if (v235) {
      int v105 = 0;
    }
    *int8x16_t v104 = v102;
    v104[1] = v105;
    int v106 = v101[4] - v100;
    if (v237) {
      int v106 = 0;
    }
    int v107 = v101[6] - v100;
    if (v236) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v101[8] - v100;
    if (v238) {
      int v108 = 0;
    }
    int v109 = v101[10] - v100;
    if (v240) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    int v110 = v101[12] - v100;
    if (v239) {
      int v110 = 0;
    }
    int v111 = v101[14] - v100;
    if (v241) {
      int v111 = 0;
    }
    v104[6] = v110;
    v104[7] = v111;
    char v112 = v91;
    *(&v245 + v92) = v99;
    unint64_t v113 = *((void *)v98 + 1);
    *((_DWORD *)&v244 + v92) = v100;
    unint64_t v114 = v113 >> v99;
    int v115 = ~(-1 << v96);
    if (v114 <= 1) {
      unint64_t v116 = 1;
    }
    else {
      unint64_t v116 = v114;
    }
    uint64_t v117 = 2 * v273[v92];
    do
    {
      if (v117 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)&v254[v103] / v116;
        }
        else {
          LODWORD(v118) = 0;
        }
        int8x16_t v119 = (int *)v242 + 7 * v92 + v95;
        *int8x16_t v119 = v118;
        if (v114 >= 2)
        {
          unint64_t v120 = *(unsigned int *)&v254[v103];
          if (v120)
          {
            if (v120 / v116 * v116 == v120 && ((v120 / v116) & 1) != 0)
            {
              if (v100 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v101[v94], v123 = v251[v92 + 2], v122 != v123)
                  && ((a3 | 2) != 3 || v116 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  *int8x16_t v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v101[v94] == v115) {
          *int8x16_t v119 = ~(-1 << v99);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94) >= a4)
        {
          *int8x16_t v119 = 0;
        }
        ++v95;
      }
      v103 += 4;
      v94 += 2;
    }
    while (v94 != 16);
    char v91 = 1;
    uint64_t v92 = 1;
  }
  while ((v112 & 1) == 0);
  int8x16_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if ((v231 | v232) == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v275;
    unsigned int v130 = v276;
    uint64_t v131 = v275 - 4;
    uint64_t v132 = v276 - 4;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= a5 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v255 + 2 * v127) >> 4;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v129 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x40)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 4;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_315:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v255 + 2 * v127 + 1) >> 4;
        if (v132 <= 0x100)
        {
LABEL_319:
          if (v130 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x40)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 4;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return v231 | v232;
      }
    }
  }
  unsigned int v147 = v271;
  char v148 = LOBYTE(v274[0]) | v271;
  if (v274[0] | v271)
  {
    char v148 = v271 - 2;
    if (v271 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v271 + 1;
      goto LABEL_430;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_430:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v272;
  if (v274[1] | v272)
  {
    char v169 = v272 - 2;
    if (v272 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v272 + 1;
      goto LABEL_436;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_436:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 62) >= 0xFFFFFFFFFFFFFFBFLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_453;
    }
LABEL_446:
    unsigned int v177 = v275;
    if (!v147) {
      goto LABEL_461;
    }
    goto LABEL_465;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x40) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_446;
  }
LABEL_453:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x40) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v275;
  if (!v147)
  {
LABEL_461:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v276;
      if (!v168) {
        goto LABEL_526;
      }
LABEL_473:
      unsigned int v192 = v248;
      if (v248 <= 0x100 && v248 && v167 - v126 + (v175 << 6) + (unint64_t)v248 <= 0x40)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v244) >> (v185 - v248));
        unint64_t v195 = v248;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_481;
    }
  }
LABEL_465:
  unsigned int v186 = v247;
  if (v247 <= 0x100 && v247 && v167 - v126 + (v175 << 6) + (unint64_t)v247 <= 0x40)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v244 >> (v177 - v247);
    unint64_t v189 = v247;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v276;
  if (v168) {
    goto LABEL_473;
  }
LABEL_526:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_473;
  }
LABEL_481:
  unint64_t v198 = v245;
  if (v245)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v273[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v246;
  if (v246)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v273[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 64 - v176;
  unsigned int v211 = (64 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x40)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x40)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v242 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x40)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v242[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_519:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x40)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_519;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return v231 | v232;
  }
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v195 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x3D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x3D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v190[0] = 8;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v180 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 63) >= 0xFFFFFFFFFFFFFFBFLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v180 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)2>::getDquadModeData(0, v12, v14, &v191);
  v194[0] = DquadModeData;
  v193[0] = 0;
  v190[1] = 8;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 63) >= 0xFFFFFFFFFFFFFFBFLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)2>::getDquadModeData(1, v11, v20, &v192);
  v194[1] = v24;
  v193[1] = 0;
  unsigned int v25 = kDQuadParamTable;
  BOOL v27 = v24 < DquadModeData;
  unsigned int v28 = v24;
  int v29 = kDQuadParamTable[10 * v24 + 6];
  int v187 = kDQuadParamTable[10 * DquadModeData + 6];
  int v26 = v187;
  int v188 = v29;
  v189[0] = v187;
  v189[1] = v29;
  if (v194[v24 >= DquadModeData] == v194[v27])
  {
    int v30 = v187;
  }
  else
  {
    int v31 = *(_DWORD *)((unint64_t)v189 | (4 * v27));
    int v30 = v187;
    if (v31 >= 1)
    {
      *(_DWORD *)((unint64_t)&v187 | (4 * v27)) = 0;
      *(_DWORD *)((unint64_t)&v187 | (4 * (v24 >= DquadModeData))) += v31;
      int v30 = v187;
    }
  }
  int8x16_t v32 = &kDQuadParamTable[10 * DquadModeData];
  int v34 = v32[4];
  unsigned int v33 = v32[5];
  unsigned int v35 = v34 + 1;
  unsigned int v36 = v33 + 1;
  int v37 = v30 - v26;
  if (v37 >= 0)
  {
    if (!v37) {
      goto LABEL_36;
    }
    v36 += v37;
    goto LABEL_32;
  }
  if (kDQuadParamTable[10 * DquadModeData + 7] < -v37)
  {
    if (!kDQuadParamTable[10 * DquadModeData + 8])
    {
      int v37 = -1;
      unsigned int v36 = v33;
LABEL_32:
      v35 += v37;
      goto LABEL_36;
    }
    unsigned int v36 = v33;
  }
LABEL_36:
  if (v35 >= 8) {
    uint64_t v38 = 8;
  }
  else {
    uint64_t v38 = v35;
  }
  v186[0] = v38;
  LODWORD(v39) = 8 * (v33 != 0);
  if (v39 >= v36) {
    unint64_t v39 = v36;
  }
  else {
    unint64_t v39 = v39;
  }
  v185[0] = v39;
  int v40 = &kDQuadParamTable[10 * v24];
  int v41 = v40[5];
  LODWORD(v42) = v40[4] + 1;
  unsigned int v43 = v41 + 1;
  int v44 = v188 - v29;
  if (v44 >= 0)
  {
    if (!v44) {
      goto LABEL_49;
    }
    v43 += v44;
    goto LABEL_45;
  }
  if (kDQuadParamTable[10 * v24 + 7] < -v44)
  {
    if (!kDQuadParamTable[10 * v24 + 8])
    {
      int v44 = -1;
      unsigned int v43 = v40[5];
LABEL_45:
      LODWORD(v42) = v44 + v42;
      goto LABEL_49;
    }
    unsigned int v43 = v40[5];
  }
LABEL_49:
  int v45 = v180 + v19;
  if (v42 >= 8) {
    uint64_t v42 = 8;
  }
  else {
    uint64_t v42 = v42;
  }
  v186[1] = v42;
  LODWORD(v46) = 8 * (v41 != 0);
  if (v46 >= v43) {
    unint64_t v46 = v43;
  }
  else {
    unint64_t v46 = v46;
  }
  v185[1] = v46;
  uint64_t v184 = 0;
  if (DquadModeData)
  {
    int v47 = 0;
    if (v38 && (unint64_t)(v10 - v6 + (v13 << 6) + v38) <= 0x40)
    {
      int v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = v38;
      do
      {
        unint64_t v50 = 64 - v10;
        if (64 - v10 >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v50)) << v48;
        v48 += v50;
        v13 += (v50 + v10) >> 6;
        uint64_t v10 = (v50 + v10) & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    LODWORD(v184) = v47 << (8 - v38);
    v45 += v38;
    if (v28)
    {
LABEL_63:
      int v51 = 0;
      if (v42 && (unint64_t)(v10 - v6 + (v13 << 6) + v42) <= 0x40)
      {
        int v51 = 0;
        uint64_t v52 = 0;
        unint64_t v53 = v42;
        do
        {
          unint64_t v54 = 64 - v10;
          if (64 - v10 >= v53) {
            unint64_t v54 = v53;
          }
          v51 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v54)) << v52;
          v52 += v54;
          v13 += (v54 + v10) >> 6;
          uint64_t v10 = (v54 + v10) & 0x3F;
          v53 -= v54;
        }
        while (v53);
      }
      HIDWORD(v184) = v51 << (8 - v42);
      v45 += v42;
      uint64_t v183 = 0;
      if (!v39) {
        goto LABEL_80;
      }
      goto LABEL_73;
    }
  }
  else
  {
    LODWORD(v184) = v191;
    if (v24) {
      goto LABEL_63;
    }
  }
  HIDWORD(v184) = v192;
  uint64_t v183 = 0;
  if (v39)
  {
LABEL_73:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x40)
    {
      int v55 = 0;
      uint64_t v56 = 0;
      unint64_t v57 = 3;
      do
      {
        unint64_t v58 = 64 - v10;
        if (64 - v10 >= v57) {
          unint64_t v58 = v57;
        }
        v55 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v58)) << v56;
        v56 += v58;
        v13 += (v58 + v10) >> 6;
        uint64_t v10 = (v58 + v10) & 0x3F;
        v57 -= v58;
      }
      while (v57);
    }
    else
    {
      int v55 = 0;
    }
    LODWORD(v183) = v55;
    v45 += 3;
  }
LABEL_80:
  if (v46)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x40)
    {
      int v59 = 0;
      uint64_t v60 = 0;
      unint64_t v61 = 3;
      do
      {
        unint64_t v62 = 64 - v10;
        if (64 - v10 >= v61) {
          unint64_t v62 = v61;
        }
        v59 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v62)) << v60;
        v60 += v62;
        v13 += (v62 + v10) >> 6;
        uint64_t v10 = (v62 + v10) & 0x3F;
        v61 -= v62;
      }
      while (v61);
    }
    else
    {
      int v59 = 0;
    }
    HIDWORD(v183) = v59;
    v45 += 3;
  }
  uint64_t v63 = 0;
  unsigned int v64 = a3 & 0xFFFFFFFD;
  unsigned int v65 = 64 - v45;
  unsigned int v66 = (64 - v45) / 7u;
  uint64_t v182 = 0;
  unint64_t v67 = (v10 | (v13 << 6)) + v65 % 7;
  memset(v181, 0, sizeof(v181));
  do
  {
    unint64_t v69 = v67 >> 6;
    int64_t result = v67 & 0x3F;
    if (v39)
    {
      if (result - v6 + (v67 & 0xFFFFFFFFFFFFFFC0) + v39 <= 0x40)
      {
        int v71 = 0;
        uint64_t v72 = 0;
        unint64_t v73 = v39;
        do
        {
          unint64_t v74 = 64 - result;
          if (64 - result >= v73) {
            unint64_t v74 = v73;
          }
          v71 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v74)) << v72;
          v72 += v74;
          unint64_t v75 = v74 + result;
          v69 += v75 >> 6;
          int64_t result = v75 & 0x3F;
          v73 -= v74;
        }
        while (v73);
      }
      else
      {
        int v71 = 0;
      }
      *((_DWORD *)v181 + v63) = v71;
    }
    if (v46)
    {
      if (result - v6 + (v69 << 6) + v46 <= 0x40)
      {
        int v76 = 0;
        uint64_t v77 = 0;
        unint64_t v78 = v46;
        do
        {
          unint64_t v79 = 64 - result;
          if (64 - result >= v78) {
            unint64_t v79 = v78;
          }
          v76 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v79)) << v77;
          v77 += v79;
          unint64_t v80 = v79 + result;
          v69 += v80 >> 6;
          int64_t result = v80 & 0x3F;
          v78 -= v79;
        }
        while (v78);
      }
      else
      {
        int v76 = 0;
      }
      *((_DWORD *)&v181[1] + v63 + 3) = v76;
      int v68 = v46 + v39;
    }
    else
    {
      int v68 = v39;
    }
    unint64_t v67 = (result | (v69 << 6)) + v66 - v68;
    ++v63;
  }
  while (v63 != 7);
  char v81 = 0;
  uint64_t v82 = 0;
  do
  {
    char v87 = v81;
    unint64_t v88 = *(void *)&v25[160 * v193[v82] + 2 + 10 * v194[v82]];
    int v89 = v185[v82];
    if (v88 >> v89 <= 1) {
      unint64_t v90 = 1;
    }
    else {
      unint64_t v90 = v88 >> v89;
    }
    int v91 = v190[v82];
    unint64_t v92 = v90 >> 1;
    if (v90 >> 1 >= (unint64_t)(1 << (v91 - v186[v82])) >> 1) {
      unint64_t v93 = (unint64_t)(1 << (v91 - v186[v82])) >> 1;
    }
    else {
      unint64_t v93 = v90 >> 1;
    }
    unint64_t v94 = (1 << (v91 - 1));
    unint64_t v95 = v185[v82 - 2];
    unint64_t v96 = v94 - v95;
    unint64_t v97 = 1 << v91;
    int v98 = (1 << v91) - 1;
    if (v95) {
      unint64_t v99 = v93;
    }
    else {
      unint64_t v99 = 0;
    }
    BOOL v100 = v95 == v94;
    BOOL v101 = v91 == 16;
    if (v91 == 16) {
      unint64_t v102 = 31744;
    }
    else {
      unint64_t v102 = 2139095040;
    }
    if (v91 == 16) {
      unint64_t v103 = 64512;
    }
    else {
      unint64_t v103 = 4286578688;
    }
    unint64_t v104 = 2143289344;
    if (v101) {
      unint64_t v104 = 32256;
    }
    unint64_t v105 = 4290772992;
    if (v101) {
      unint64_t v105 = 65024;
    }
    unint64_t v106 = (v103 - 1);
    if (v89)
    {
      int64_t result = (int64_t)v25;
      unint64_t v107 = v88 + v95;
      uint64_t v108 = ~(-1 << v89);
      int v109 = *((_DWORD *)&v183 + v82);
      unint64_t v110 = v96 / v90;
      if (!v109)
      {
        uint64_t v118 = 0;
        unint64_t v113 = v99;
        BOOL v112 = v95 == v94;
        goto LABEL_173;
      }
      uint64_t v111 = *((unsigned int *)v181 + 7 * v82);
      BOOL v112 = v110 == v111;
      if (v95 | v111)
      {
        if (v107 >= v97 && v111 == v108)
        {
          uint64_t v118 = 1;
          unint64_t v113 = v97 - 1;
          goto LABEL_173;
        }
        unint64_t v113 = v92 + v90 * v111;
      }
      else
      {
        unint64_t v113 = 0;
      }
      uint64_t v118 = 1;
LABEL_173:
      unint64_t v119 = v113 + v95;
      unint64_t v120 = v119;
      if (a3 == 4)
      {
        BOOL v121 = v119 < v102 || v119 >= v104;
        unint64_t v120 = (v102 - 1);
        if (v121)
        {
          BOOL v122 = v119 < v104 || v119 >= v94;
          unint64_t v120 = v94;
          if (v122)
          {
            if (v119 < v105 && v119 >= v103) {
              unint64_t v120 = (v103 - 1);
            }
            else {
              unint64_t v120 = v119;
            }
          }
        }
      }
      if (v120 >= v97) {
        int v124 = v98;
      }
      else {
        int v124 = v120;
      }
      if (v112) {
        int v125 = 0;
      }
      else {
        int v125 = v124 ^ v94;
      }
      if (v64 != 1) {
        int v125 = v124;
      }
      *(_DWORD *)(a2 + 4 * v82) = v125;
      if (v109 == 1)
      {
        unint64_t v126 = v99;
        BOOL v127 = v95 == v94;
      }
      else
      {
        uint64_t v128 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v127 = v110 == v128;
        if (v95 | v128)
        {
          if (v107 < v97 || (unint64_t v126 = v97 - 1, v128 != v108)) {
            unint64_t v126 = v92 + v90 * v128;
          }
        }
        else
        {
          unint64_t v126 = 0;
        }
        ++v118;
      }
      unint64_t v129 = v126 + v95;
      unint64_t v130 = v129;
      if (a3 == 4)
      {
        BOOL v131 = v129 < v102 || v129 >= v104;
        unint64_t v130 = (v102 - 1);
        if (v131)
        {
          BOOL v132 = v129 < v104 || v129 >= v94;
          unint64_t v130 = v94;
          if (v132)
          {
            if (v129 < v105 && v129 >= v103) {
              unint64_t v130 = (v103 - 1);
            }
            else {
              unint64_t v130 = v129;
            }
          }
        }
      }
      if (v130 >= v97) {
        int v134 = v98;
      }
      else {
        int v134 = v130;
      }
      if (v127) {
        int v135 = 0;
      }
      else {
        int v135 = v134 ^ v94;
      }
      if (v64 != 1) {
        int v135 = v134;
      }
      *(_DWORD *)(a2 + 4 * v82 + 8) = v135;
      if (v109 == 2)
      {
        unint64_t v136 = v99;
        BOOL v137 = v95 == v94;
      }
      else
      {
        uint64_t v138 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v137 = v110 == v138;
        if (v95 | v138)
        {
          if (v107 < v97 || (unint64_t v136 = v97 - 1, v138 != v108)) {
            unint64_t v136 = v92 + v90 * v138;
          }
        }
        else
        {
          unint64_t v136 = 0;
        }
        ++v118;
      }
      unint64_t v139 = v136 + v95;
      unint64_t v140 = v139;
      if (a3 == 4)
      {
        if (v139 < v102 || (unint64_t v140 = (v102 - 1), v139 >= v104))
        {
          if (v139 < v104 || (unint64_t v140 = v94, v139 >= v94))
          {
            if (v139 < v105 && v139 >= v103) {
              unint64_t v140 = (v103 - 1);
            }
            else {
              unint64_t v140 = v139;
            }
          }
        }
      }
      if (v140 >= v97) {
        int v142 = v98;
      }
      else {
        int v142 = v140;
      }
      if (v137) {
        int v143 = 0;
      }
      else {
        int v143 = v142 ^ v94;
      }
      if (v64 != 1) {
        int v143 = v142;
      }
      *(_DWORD *)(a2 + 4 * v82 + 16) = v143;
      if (v109 == 3)
      {
        unint64_t v144 = v99;
        BOOL v145 = v95 == v94;
      }
      else
      {
        uint64_t v146 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v145 = v110 == v146;
        if (v95 | v146)
        {
          if (v107 < v97 || (unint64_t v144 = v97 - 1, v146 != v108)) {
            unint64_t v144 = v92 + v90 * v146;
          }
        }
        else
        {
          unint64_t v144 = 0;
        }
        ++v118;
      }
      unint64_t v147 = v144 + v95;
      unint64_t v148 = v147;
      if (a3 == 4)
      {
        if (v147 < v102 || (unint64_t v148 = (v102 - 1), v147 >= v104))
        {
          if (v147 < v104 || (unint64_t v148 = v94, v147 >= v94))
          {
            if (v147 < v105 && v147 >= v103) {
              unint64_t v148 = (v103 - 1);
            }
            else {
              unint64_t v148 = v147;
            }
          }
        }
      }
      if (v148 >= v97) {
        int v150 = v98;
      }
      else {
        int v150 = v148;
      }
      if (v145) {
        int v151 = 0;
      }
      else {
        int v151 = v150 ^ v94;
      }
      if (v64 != 1) {
        int v151 = v150;
      }
      *(_DWORD *)(a2 + 4 * v82 + 24) = v151;
      if (v109 == 4)
      {
        unint64_t v152 = v99;
        BOOL v153 = v95 == v94;
      }
      else
      {
        uint64_t v154 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v153 = v110 == v154;
        if (v95 | v154)
        {
          if (v107 < v97 || (unint64_t v152 = v97 - 1, v154 != v108)) {
            unint64_t v152 = v92 + v90 * v154;
          }
        }
        else
        {
          unint64_t v152 = 0;
        }
        ++v118;
      }
      unint64_t v155 = v152 + v95;
      unint64_t v156 = v155;
      if (a3 == 4)
      {
        if (v155 < v102 || (unint64_t v156 = (v102 - 1), v155 >= v104))
        {
          if (v155 < v104 || (unint64_t v156 = v94, v155 >= v94))
          {
            if (v155 < v105 && v155 >= v103) {
              unint64_t v156 = (v103 - 1);
            }
            else {
              unint64_t v156 = v155;
            }
          }
        }
      }
      if (v156 >= v97) {
        int v158 = v98;
      }
      else {
        int v158 = v156;
      }
      if (v153) {
        int v159 = 0;
      }
      else {
        int v159 = v158 ^ v94;
      }
      if (v64 != 1) {
        int v159 = v158;
      }
      *(_DWORD *)(a2 + 4 * v82 + 32) = v159;
      if (v109 == 5)
      {
        unint64_t v160 = v99;
        BOOL v161 = v95 == v94;
      }
      else
      {
        uint64_t v162 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v161 = v110 == v162;
        if (v95 | v162)
        {
          if (v107 < v97 || (unint64_t v160 = v97 - 1, v162 != v108)) {
            unint64_t v160 = v92 + v90 * v162;
          }
        }
        else
        {
          unint64_t v160 = 0;
        }
        ++v118;
      }
      unint64_t v163 = v160 + v95;
      unint64_t v164 = v163;
      if (a3 == 4)
      {
        if (v163 < v102 || (unint64_t v164 = (v102 - 1), v163 >= v104))
        {
          if (v163 < v104 || (unint64_t v164 = v94, v163 >= v94))
          {
            if (v163 < v105 && v163 >= v103) {
              unint64_t v164 = (v103 - 1);
            }
            else {
              unint64_t v164 = v163;
            }
          }
        }
      }
      if (v164 >= v97) {
        int v166 = v98;
      }
      else {
        int v166 = v164;
      }
      if (v161) {
        int v167 = 0;
      }
      else {
        int v167 = v166 ^ v94;
      }
      if (v64 != 1) {
        int v167 = v166;
      }
      *(_DWORD *)(a2 + 4 * v82 + 40) = v167;
      if (v109 == 6)
      {
        unint64_t v168 = v99;
        BOOL v169 = v95 == v94;
      }
      else
      {
        uint64_t v170 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v169 = v110 == v170;
        if (v95 | v170)
        {
          if (v107 < v97 || (unint64_t v168 = v97 - 1, v170 != v108)) {
            unint64_t v168 = v92 + v90 * v170;
          }
        }
        else
        {
          unint64_t v168 = 0;
        }
        ++v118;
      }
      unint64_t v171 = v168 + v95;
      unint64_t v172 = v171;
      if (a3 == 4)
      {
        if (v171 < v102 || (unint64_t v172 = (v102 - 1), v171 >= v104))
        {
          if (v171 < v104 || (unint64_t v172 = v94, v171 >= v94))
          {
            if (v171 < v105 && v171 >= v103) {
              unint64_t v172 = (v103 - 1);
            }
            else {
              unint64_t v172 = v171;
            }
          }
        }
      }
      if (v172 >= v97) {
        int v174 = v98;
      }
      else {
        int v174 = v172;
      }
      if (v169) {
        int v175 = 0;
      }
      else {
        int v175 = v174 ^ v94;
      }
      if (v64 != 1) {
        int v175 = v174;
      }
      *(_DWORD *)(a2 + 4 * v82 + 48) = v175;
      if (v109 != 7)
      {
        uint64_t v176 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v100 = v110 == v176;
        if (v95 | v176)
        {
          if (v107 >= v97 && v176 == v108) {
            unint64_t v99 = v97 - 1;
          }
          else {
            unint64_t v99 = v92 + v90 * v176;
          }
        }
        else
        {
          unint64_t v99 = 0;
        }
      }
      unint64_t v177 = v99 + v95;
      unint64_t v84 = v177;
      if (a3 == 4)
      {
        if (v177 < v102 || (unint64_t v84 = (v102 - 1), v177 >= v104))
        {
          if (v177 < v104 || (unint64_t v84 = v94, v177 >= v94))
          {
            if (v177 < v105 && v177 >= v103) {
              unint64_t v84 = (v103 - 1);
            }
            else {
              unint64_t v84 = v177;
            }
          }
        }
      }
      if (v84 >= v97) {
        int v85 = v98;
      }
      else {
        int v85 = v84;
      }
      int v86 = v85 ^ v94;
      if (v100) {
        int v86 = 0;
      }
      if (v64 == 1) {
        int v85 = v86;
      }
      unsigned int v25 = (_DWORD *)result;
      goto LABEL_122;
    }
    BOOL v115 = v104 <= v95 && v95 < v94;
    BOOL v117 = v95 >= v103 && v105 > v95;
    if (a3 == 4)
    {
      if (v95 < v102 || v104 <= v95)
      {
        if (v115)
        {
          if (v97 <= v94) {
            int v85 = v98;
          }
          else {
            int v85 = v94;
          }
        }
        else
        {
          if (v117) {
            unint64_t v95 = v106;
          }
          if (v95 >= v97) {
            int v85 = v98;
          }
          else {
            int v85 = v95;
          }
        }
      }
      else if (v97 <= (v102 - 1))
      {
        int v85 = v98;
      }
      else
      {
        int v85 = v102 - 1;
      }
    }
    else if (v97 <= v95)
    {
      int v85 = v98;
    }
    else
    {
      int v85 = v185[v82 - 2];
    }
    int v178 = v85 ^ v94;
    if (v90 > v96) {
      int v178 = 0;
    }
    if (v64 == 1) {
      int v85 = v178;
    }
    unint64_t v179 = (_DWORD *)(a2 + 4 * v82);
    *unint64_t v179 = v85;
    v179[2] = v85;
    v179[4] = v85;
    v179[6] = v85;
    v179[8] = v85;
    v179[10] = v85;
    v179[12] = v85;
LABEL_122:
    *(_DWORD *)(a2 + 4 * v82 + 56) = v85;
    char v81 = 1;
    uint64_t v82 = 1;
  }
  while ((v87 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int8x8_t a6, double a7, int8x8_t a8)
{
  uint64_t v312 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    uint64_t v13 = (void *)(a1 + a2);
    *uint64_t v13 = 0;
    v13[1] = 0;
    char v14 = (void *)(a1 + 2 * a2);
    *char v14 = 0;
    v14[1] = 0;
    uint64_t v15 = (void *)(a1 + a2 + 2 * a2);
LABEL_88:
    *uint64_t v15 = 0;
    v15[1] = 0;
    return result;
  }
  char v10 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v297, a5);
    }
    __int16 v273 = WORD2(v297);
    unsigned __int8 v287 = v297;
    unsigned __int8 v288 = v298;
    unsigned __int8 v293 = v300;
    unsigned __int8 v294 = v302;
    __int16 v291 = v301;
    __int16 v292 = v303;
    __int16 v283 = v305;
    unsigned __int8 v284 = v304;
    unsigned __int8 v285 = v306;
    __int16 v286 = v299;
    __int16 v282 = v307;
    uint64_t v17 = a3 + 8;
    unsigned __int8 v289 = v310;
    unsigned __int8 v290 = v308;
    __int16 v271 = v311;
    __int16 v272 = v309;
    if ((v10 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v17, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v17, (uint64_t)&v297, a5);
    }
    unsigned __int8 v278 = v298;
    unsigned __int8 v279 = v297;
    __int16 v266 = v299;
    __int16 v267 = WORD2(v297);
    __int16 v265 = v301;
    unsigned __int8 v280 = v302;
    unsigned __int8 v281 = v300;
    __int16 v264 = v303;
    __int16 v262 = v307;
    __int16 v263 = v305;
    unsigned __int8 v276 = v304;
    unsigned __int8 v277 = v308;
    uint64_t v18 = a3 + 16;
    unsigned __int8 v274 = v306;
    unsigned __int8 v275 = v310;
    __int16 v260 = v311;
    __int16 v261 = v309;
    if ((v10 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v18, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v18, (uint64_t)&v297, a5);
    }
    unsigned __int8 v19 = v297;
    unsigned __int8 v20 = v300;
    __int16 v258 = v299;
    __int16 v259 = WORD2(v297);
    unsigned __int8 v269 = v302;
    unsigned __int8 v270 = v298;
    __int16 v256 = v303;
    __int16 v257 = v301;
    unsigned __int8 v268 = v304;
    unsigned __int8 v21 = v306;
    __int16 v255 = v305;
    __int16 v23 = v307;
    unsigned __int8 v22 = v308;
    __int16 v24 = v309;
    unsigned __int8 v25 = v310;
    uint64_t v26 = a3 + 24;
    __int16 v27 = v311;
    if ((v10 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v26, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v26, (uint64_t)&v297, a5);
    }
    *(_WORD *)(a1 + 8) = v19 | (unsigned __int16)(v259 << 8);
    __int16 v28 = v297;
    *(_WORD *)a1 = v287 | (unsigned __int16)(v273 << 8);
    __int16 v29 = WORD2(v297);
    __int16 v30 = v298;
    *(_WORD *)(a1 + 2) = v288 | (unsigned __int16)(v286 << 8);
    __int16 v31 = v299;
    __int16 v32 = v300;
    *(_WORD *)(a1 + 4) = v284 | (unsigned __int16)(v283 << 8);
    __int16 v33 = v301;
    __int16 v34 = v302;
    *(_WORD *)(a1 + 6) = v285 | (unsigned __int16)(v282 << 8);
    __int16 v35 = v303;
    *(_WORD *)(a1 + 10) = v270 | (unsigned __int16)(v258 << 8);
    __int16 v36 = v304;
    *(_WORD *)(a1 + 12) = v268 | (unsigned __int16)(v255 << 8);
    __int16 v37 = v305;
    *(_WORD *)(a1 + 14) = v21 | (unsigned __int16)(v23 << 8);
    __int16 v38 = v306;
    __int16 v39 = v307;
    int v40 = (_WORD *)(a1 + a2);
    *int v40 = v293 | (unsigned __int16)(v291 << 8);
    __int16 v41 = v308;
    __int16 v42 = v309;
    v40[1] = v294 | (unsigned __int16)(v292 << 8);
    __int16 v43 = v310;
    __int16 v44 = v28 | (v29 << 8);
    __int16 v45 = v311;
    v40[2] = v290 | (unsigned __int16)(v272 << 8);
    v40[3] = v289 | (unsigned __int16)(v271 << 8);
    __int16 v46 = v30 | (v31 << 8);
    v40[4] = v20 | (unsigned __int16)(v257 << 8);
    v40[5] = v269 | (unsigned __int16)(v256 << 8);
    __int16 v47 = v32 | (v33 << 8);
    v40[6] = v22 | (unsigned __int16)(v24 << 8);
    v40[7] = v25 | (unsigned __int16)(v27 << 8);
    uint64_t v48 = (_WORD *)(a1 + a2 + a2);
    *uint64_t v48 = v279 | (unsigned __int16)(v267 << 8);
    v48[1] = v278 | (unsigned __int16)(v266 << 8);
    v48[2] = v276 | (unsigned __int16)(v263 << 8);
    v48[3] = v274 | (unsigned __int16)(v262 << 8);
    v48[4] = v44;
    v48[5] = v46;
    v48[6] = v36 | (v37 << 8);
    v48[7] = v38 | (v39 << 8);
    unint64_t v49 = (_WORD *)((char *)v48 + a2);
    *unint64_t v49 = v281 | (unsigned __int16)(v265 << 8);
    v49[1] = v280 | (unsigned __int16)(v264 << 8);
    v49[2] = v277 | (unsigned __int16)(v261 << 8);
    v49[3] = v275 | (unsigned __int16)(v260 << 8);
    v49[4] = v47;
    v49[5] = v34 | (v35 << 8);
    v49[6] = v41 | (v42 << 8);
    uint64_t result = 32;
    v49[7] = v43 | (v45 << 8);
    return result;
  }
  if (a4 == 63)
  {
    int32x4_t v50 = *(int32x4_t *)a3;
    int32x4_t v51 = *(int32x4_t *)(a3 + 16);
    int32x4_t v52 = *(int32x4_t *)(a3 + 32);
    int32x4_t v53 = *(int32x4_t *)(a3 + 48);
    *(int32x4_t *)a1 = vuzp1q_s32(*(int32x4_t *)a3, v52);
    *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v50, v52);
    unint64_t v54 = (int32x4_t *)(a1 + 2 * a2);
    *unint64_t v54 = vuzp1q_s32(v51, v53);
    *(int32x4_t *)((char *)v54 + a2) = vuzp2q_s32(v51, v53);
    return 64;
  }
  if (a4 == 1)
  {
    int16x8_t v16 = vld1q_dup_s16((const __int16 *)a3);
    *(int16x8_t *)a1 = v16;
    *(int16x8_t *)(a1 + a2) = v16;
    *(int16x8_t *)(a1 + 2 * a2) = v16;
    *(int16x8_t *)(a1 + 3 * a2) = v16;
    return 2;
  }
  unint64_t v55 = 8 * (a3 & 7);
  unint64_t v56 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = v55 + 14;
  uint64_t v58 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v55;
  if (v55 >= 0x33) {
    v58 |= *(void *)(v56 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v59 = 4 * v58;
  uint32x2_t v60 = (uint32x2_t)vdup_n_s32(v59);
  a6.i32[0] = v59;
  a8.i32[0] = a4 >> 6;
  v61.i32[0] = vorr_s8(a6, a8).u32[0];
  v61.i32[1] = vshr_n_u32(v60, 5uLL).i32[1];
  int16x4_t v62 = (int16x4_t)vand_s8(v61, (int8x8_t)0x1F0000001FLL);
  v62.i8[1] = v62.i8[4];
  int16x4_t v63 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v60, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v63.i8[1] = v63.i8[4];
  unint64_t v64 = v55 + 30;
  unint64_t v65 = v57 >> 6;
  unint64_t v66 = v57 & 0x3E;
  uint64_t v67 = *(void *)(v56 + 8 * v65) >> v66;
  if (v66 >= 0x31) {
    v67 |= *(void *)(v56 + 8 * v65 + 8) << -(char)v66;
  }
  unint64_t v68 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v69 = (int8x16_t)vdupq_lane_s16(v62, 0);
  int8x16_t v70 = (int8x16_t)vdupq_lane_s16(v63, 0);
  v71.i64[0] = 0x303030303030303;
  v71.i64[1] = 0x303030303030303;
  int8x16_t v72 = vandq_s8(v69, v71);
  int8x16_t v73 = vbicq_s8(v70, vceqq_s8(v72, v71));
  v71.i64[0] = 0x202020202020202;
  v71.i64[1] = 0x202020202020202;
  int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v69.i8), (int8x8_t)0x4000400040004)))), v71);
  if (vmaxvq_s8(v74) < 1)
  {
    int v84 = 0;
    v85.i64[0] = -1;
    v85.i64[1] = -1;
    int8x16_t v86 = v73;
    int8x16_t v87 = v73;
    int8x16_t v88 = v73;
    v89.i64[0] = -1;
    v89.i64[1] = -1;
    int8x16_t v90 = v73;
    v91.i64[0] = -1;
    v91.i64[1] = -1;
    v92.i64[0] = -1;
    v92.i64[1] = -1;
  }
  else
  {
    int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
    int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
    unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
    v78.i64[0] = v77;
    v78.i64[1] = HIDWORD(v77);
    int64x2_t v79 = v78;
    unint64_t v80 = vaddvq_s64(v78);
    unint64_t v81 = v64 + v80;
    if (v80 <= 0x80 && v68 >= v81)
    {
      unint64_t v93 = v64 & 0x3E;
      int64x2_t v94 = vaddq_s64(vdupq_n_s64(v93), vzip1q_s64((int64x2_t)0, v79));
      unint64_t v95 = (int64x2_t *)(v56 + ((v64 >> 3) & 8));
      int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v95, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95->i64[0], 0), (uint64x2_t)vnegq_s64(v94)));
      if (v93 + v80 < 0x81)
      {
        int v84 = 0;
      }
      else
      {
        int v84 = 0;
        int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v95[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v94))), v83);
      }
      unint64_t v64 = v81;
    }
    else
    {
      int8x16_t v83 = 0uLL;
      int v84 = 1;
    }
    int32x2_t v96 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
    v97.i64[0] = v96.u32[0];
    v97.i64[1] = v96.u32[1];
    int64x2_t v98 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v97));
    *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
    *(int32x2_t *)v98.i8 = vmovn_s64(v98);
    int8x16_t v99 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v98);
    int16x8_t v100 = (int16x8_t)vshlq_u32((uint32x4_t)v99, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    *(int16x4_t *)v100.i8 = vmovn_s32((int32x4_t)v100);
    int8x16_t v101 = (int8x16_t)vzip1q_s16((int16x8_t)v99, v100);
    *(int8x8_t *)v101.i8 = vzip1_s8(vmovn_s16((int16x8_t)v101), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v101, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v69.i8))))));
    v99.i64[0] = 0x101010101010101;
    v99.i64[1] = 0x101010101010101;
    int8x16_t v102 = vshlq_s8(v99, v74);
    v99.i64[0] = -1;
    v99.i64[1] = -1;
    v102.i64[0] = vqtbl1q_s8(vandq_s8(v101, vaddq_s8(v102, v99)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v103 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 0);
    int8x16_t v104 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 1);
    int8x16_t v105 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 2);
    int8x16_t v106 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 3);
    int8x16_t v90 = vsubq_s8(v73, v103);
    int8x16_t v88 = vsubq_s8(v73, v104);
    int8x16_t v87 = vsubq_s8(v73, v105);
    int8x16_t v86 = vsubq_s8(v73, v106);
    int8x16_t v92 = vceqzq_s8(v103);
    int8x16_t v91 = vceqzq_s8(v104);
    int8x16_t v89 = vceqzq_s8(v105);
    int8x16_t v85 = vceqzq_s8(v106);
  }
  v107.i64[0] = 0x808080808080808;
  v107.i64[1] = 0x808080808080808;
  int8x16_t v108 = 0uLL;
  int8x16_t v109 = vandq_s8(vextq_s8(vtstq_s8(v69, v107), (int8x16_t)0, 0xEuLL), v73);
  int8x16_t v110 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v109, v109));
  int8x16_t v111 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v110, (int16x8_t)v110));
  unint64_t v112 = vpaddq_s32((int32x4_t)v111, (int32x4_t)v111).u64[0];
  v113.i64[0] = v112;
  v113.i64[1] = HIDWORD(v112);
  int64x2_t v114 = v113;
  unint64_t v115 = vaddvq_s64(v113);
  unint64_t v116 = v64 + v115;
  if (v115 <= 0x80 && v68 >= v116)
  {
    unint64_t v118 = v64 & 0x3F;
    int64x2_t v119 = vaddq_s64(vdupq_n_s64(v118), vzip1q_s64((int64x2_t)0, v114));
    unint64_t v120 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v108 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
    if (v118 + v115 >= 0x81) {
      int8x16_t v108 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), v108);
    }
    unint64_t v64 = v116;
  }
  else
  {
    int v84 = 1;
  }
  int v121 = v69.i8[0] & 3;
  if (v121 == 2)
  {
    BOOL v122 = v68 < v64 + 4;
    unint64_t v123 = v64 + 8;
    if (v68 >= v64 + 4) {
      v64 += 4;
    }
    if (v123 > v68 || v122) {
      int v84 = 1;
    }
    else {
      v64 += 4;
    }
  }
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v90, 0xEuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v126, v126));
  int8x16_t v128 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v127, (int16x8_t)v127));
  unint64_t v129 = vpaddq_s32((int32x4_t)v128, (int32x4_t)v128).u64[0];
  v130.i64[0] = v129;
  v130.i64[1] = HIDWORD(v129);
  int64x2_t v131 = v130;
  unint64_t v132 = vaddvq_s64(v130);
  unint64_t v133 = v64 + v132;
  if (v132 <= 0x80 && v68 >= v133)
  {
    unint64_t v136 = v64 & 0x3F;
    int64x2_t v137 = vaddq_s64(vdupq_n_s64(v136), vzip1q_s64((int64x2_t)0, v131));
    uint64_t v138 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v135 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v138, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138->i64[0], 0), (uint64x2_t)vnegq_s64(v137)));
    if (v136 + v132 >= 0x81) {
      int8x16_t v135 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v138[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v137))), v135);
    }
    unint64_t v64 = v133;
  }
  else
  {
    int v84 = 1;
    int8x16_t v135 = 0uLL;
  }
  int8x16_t v139 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v88, v88));
  int8x16_t v140 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v139, (int16x8_t)v139));
  unint64_t v141 = vpaddq_s32((int32x4_t)v140, (int32x4_t)v140).u64[0];
  v142.i64[0] = v141;
  v142.i64[1] = HIDWORD(v141);
  int64x2_t v143 = v142;
  unint64_t v144 = vaddvq_s64(v142);
  if (v144 < 0x81)
  {
    int32x2_t v145 = vzip1_s32(*(int32x2_t *)v140.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v140, v140, 8uLL));
    v146.i64[0] = v145.u32[0];
    v146.i64[1] = v145.u32[1];
    int64x2_t v147 = v146;
    int32x4_t v148 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v139.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v139, v139, 8uLL)));
    int16x8_t v149 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v88.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL)));
    unint64_t v150 = v64 + v144;
    if (v68 >= v64 + v144)
    {
      unint64_t v151 = v64 & 0x3F;
      int64x2_t v152 = vaddq_s64(vdupq_n_s64(v151), vzip1q_s64((int64x2_t)0, v143));
      BOOL v153 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
      int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v153, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153->i64[0], 0), (uint64x2_t)vnegq_s64(v152)));
      if (v151 + v144 >= 0x81) {
        int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v153[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v152))), v125);
      }
      unint64_t v64 = v150;
    }
    else
    {
      int v84 = 1;
    }
    int64x2_t v154 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v147));
    *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
    *(int32x2_t *)v154.i8 = vmovn_s64(v154);
    int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v154);
    int16x8_t v156 = (int16x8_t)vshlq_u32((uint32x4_t)v155, (uint32x4_t)vnegq_s32(v148));
    *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
    *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v156);
    int8x16_t v157 = (int8x16_t)vzip1q_s16(v155, v156);
    int8x16_t v158 = (int8x16_t)vshlq_u16((uint16x8_t)v157, (uint16x8_t)vnegq_s16(v149));
    *(int8x8_t *)v157.i8 = vmovn_s16((int16x8_t)v157);
    *(int8x8_t *)v158.i8 = vmovn_s16((int16x8_t)v158);
    int8x16_t v125 = vzip1q_s8(v157, v158);
  }
  else
  {
    int v84 = 1;
  }
  int8x16_t v159 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v87, v87));
  int8x16_t v160 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v159, (int16x8_t)v159));
  unint64_t v161 = vpaddq_s32((int32x4_t)v160, (int32x4_t)v160).u64[0];
  v162.i64[0] = v161;
  v162.i64[1] = HIDWORD(v161);
  int64x2_t v163 = v162;
  unint64_t v164 = vaddvq_s64(v162);
  int8x16_t v165 = 0uLL;
  if (v164 <= 0x80)
  {
    int32x2_t v167 = vzip1_s32(*(int32x2_t *)v160.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v160, v160, 8uLL));
    v168.i64[0] = v167.u32[0];
    v168.i64[1] = v167.u32[1];
    int64x2_t v169 = v168;
    int32x4_t v170 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v159.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v159, v159, 8uLL)));
    int16x8_t v171 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v87.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL)));
    unint64_t v172 = v64 + v164;
    if (v68 >= v64 + v164)
    {
      unint64_t v174 = v64 & 0x3F;
      int64x2_t v175 = vaddq_s64(vdupq_n_s64(v174), vzip1q_s64((int64x2_t)0, v163));
      uint64_t v176 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
      int8x16_t v173 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v176, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176->i64[0], 0), (uint64x2_t)vnegq_s64(v175)));
      if (v174 + v164 >= 0x81) {
        int8x16_t v173 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v176[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v175))), v173);
      }
      unint64_t v64 = v172;
    }
    else
    {
      int8x16_t v173 = 0uLL;
      int v84 = 1;
    }
    int64x2_t v177 = (int64x2_t)vshlq_u64((uint64x2_t)v173, (uint64x2_t)vnegq_s64(v169));
    *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v173);
    *(int32x2_t *)v177.i8 = vmovn_s64(v177);
    int16x8_t v178 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v177);
    int16x8_t v179 = (int16x8_t)vshlq_u32((uint32x4_t)v178, (uint32x4_t)vnegq_s32(v170));
    *(int16x4_t *)v178.i8 = vmovn_s32((int32x4_t)v178);
    *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v179);
    int8x16_t v180 = (int8x16_t)vzip1q_s16(v178, v179);
    int8x16_t v181 = (int8x16_t)vshlq_u16((uint16x8_t)v180, (uint16x8_t)vnegq_s16(v171));
    *(int8x8_t *)v180.i8 = vmovn_s16((int16x8_t)v180);
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    int8x16_t v166 = vzip1q_s8(v180, v181);
  }
  else
  {
    int v84 = 1;
    int8x16_t v166 = 0uLL;
  }
  int8x16_t v182 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v86, v86));
  int8x16_t v183 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v182, (int16x8_t)v182));
  unint64_t v184 = vpaddq_s32((int32x4_t)v183, (int32x4_t)v183).u64[0];
  v185.i64[0] = v184;
  v185.i64[1] = HIDWORD(v184);
  int64x2_t v186 = v185;
  unint64_t v187 = vaddvq_s64(v185);
  if (v187 > 0x80) {
    goto LABEL_87;
  }
  if (v68 >= v64 + v187)
  {
    int64x2_t v188 = vaddq_s64(vdupq_n_s64(v64 & 0x3F), vzip1q_s64((int64x2_t)0, v186));
    unint64_t v189 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v165 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v189, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v188)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v189->i64[0], 0), (uint64x2_t)vnegq_s64(v188)));
    if ((v64 & 0x3F) + v187 >= 0x81) {
      int8x16_t v165 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v189[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v188)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v189[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v188))), v165);
    }
    v64 += v187;
  }
  else
  {
    int v84 = 1;
  }
  if (v84 || (uint64_t result = (a4 & 0x3F) + 1, v68 + 8 * result - v64 - 256 >= 9) || v121 == 2)
  {
LABEL_87:
    uint64_t result = 0;
    v297 |= 255 << ((8 * &v297) & 0x30);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    unint64_t v190 = (void *)(a1 + a2);
    int v191 = (void *)(a1 + 2 * a2);
    *unint64_t v190 = 0;
    v190[1] = 0;
    uint64_t v15 = (void *)(a1 + a2 + 2 * a2);
    *int v191 = 0;
    v191[1] = 0;
    goto LABEL_88;
  }
  int32x2_t v192 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x2_t v193 = vzip1_s32(*(int32x2_t *)v128.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL));
  v194.i64[0] = v192.u32[0];
  v194.i64[1] = v192.u32[1];
  int64x2_t v195 = v194;
  v194.i64[0] = v193.u32[0];
  v194.i64[1] = v193.u32[1];
  int16x4_t v196 = (int16x4_t)vextq_s8(v127, v127, 8uLL).u64[0];
  int64x2_t v197 = (int64x2_t)vshlq_u64((uint64x2_t)v108, (uint64x2_t)vnegq_s64(v195));
  int64x2_t v198 = (int64x2_t)vshlq_u64((uint64x2_t)v135, (uint64x2_t)vnegq_s64(v194));
  *(int32x2_t *)v108.i8 = vmovn_s64((int64x2_t)v108);
  *(int32x2_t *)v197.i8 = vmovn_s64(v197);
  *(int32x2_t *)v135.i8 = vmovn_s64((int64x2_t)v135);
  *(int32x2_t *)v198.i8 = vmovn_s64(v198);
  int16x8_t v199 = (int16x8_t)vzip1q_s32((int32x4_t)v108, (int32x4_t)v197);
  int16x8_t v200 = (int16x8_t)vzip1q_s32((int32x4_t)v135, (int32x4_t)v198);
  int16x8_t v201 = (int16x8_t)vshlq_u32((uint32x4_t)v199, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v110.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  int16x8_t v202 = (int16x8_t)vshlq_u32((uint32x4_t)v200, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v127.i8, v196))));
  *(int16x4_t *)v199.i8 = vmovn_s32((int32x4_t)v199);
  *(int16x4_t *)v201.i8 = vmovn_s32((int32x4_t)v201);
  *(int16x4_t *)v200.i8 = vmovn_s32((int32x4_t)v200);
  *(int16x4_t *)v202.i8 = vmovn_s32((int32x4_t)v202);
  int8x16_t v203 = (int8x16_t)vzip1q_s16(v199, v201);
  int8x16_t v204 = (int8x16_t)vzip1q_s16(v200, v202);
  int8x16_t v205 = (int8x16_t)vshlq_u16((uint16x8_t)v203, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v109.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v109, v109, 8uLL)))));
  int8x16_t v206 = (int8x16_t)vshlq_u16((uint16x8_t)v204, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v126.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  *(int8x8_t *)v203.i8 = vmovn_s16((int16x8_t)v203);
  *(int8x8_t *)v205.i8 = vmovn_s16((int16x8_t)v205);
  *(int8x8_t *)v204.i8 = vmovn_s16((int16x8_t)v204);
  *(int8x8_t *)v206.i8 = vmovn_s16((int16x8_t)v206);
  v196.i32[0] = v67;
  v207.i64[0] = 0x808080808080808;
  v207.i64[1] = 0x808080808080808;
  int8x16_t v208 = vzip1q_s8(v203, v205);
  v205.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v205.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v209 = vsubq_s8(v107, v109);
  int8x16_t v210 = vzip1q_s8(v204, v206);
  v206.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v206.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v200.i8 = vzip1_s32(*(int32x2_t *)v183.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v183, v183, 8uLL));
  v211.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v211.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v212.i64[0] = 0x808080808080808;
  v212.i64[1] = 0x808080808080808;
  v196.i8[1] = BYTE1(v67);
  int8x16_t v213 = vaddq_s8(v109, v205);
  int8x16_t v214 = vshlq_s8(v208, v209);
  int8x16_t v215 = vaddq_s8(v126, v206);
  int8x16_t v216 = vshlq_s8(v210, vsubq_s8(v207, v126));
  int8x16_t v217 = vshlq_s8(v166, vsubq_s8(v207, v87));
  v194.i64[0] = v200.u32[0];
  v194.i64[1] = v200.u32[1];
  int16x8_t v218 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v86.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL)));
  int8x16_t v219 = vaddq_s8(v86, v211);
  int8x16_t v220 = vsubq_s8(v212, v86);
  int8x16_t v221 = (int8x16_t)vdupq_lane_s16(v196, 0);
  int8x16_t v222 = vshlq_s8(v214, v213);
  int8x16_t v223 = vshlq_s8(v216, v215);
  int64x2_t v224 = (int64x2_t)vshlq_u64((uint64x2_t)v165, (uint64x2_t)vnegq_s64(v194));
  *(int32x2_t *)v216.i8 = vmovn_s64((int64x2_t)v165);
  *(int32x2_t *)v224.i8 = vmovn_s64(v224);
  int16x8_t v225 = (int16x8_t)vzip1q_s32((int32x4_t)v216, (int32x4_t)v224);
  int16x8_t v226 = (int16x8_t)vshlq_u32((uint32x4_t)v225, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v182.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v182, v182, 8uLL)))));
  *(int16x4_t *)v225.i8 = vmovn_s32((int32x4_t)v225);
  *(int16x4_t *)v226.i8 = vmovn_s32((int32x4_t)v226);
  int8x16_t v227 = (int8x16_t)vzip1q_s16(v225, v226);
  int8x16_t v228 = (int8x16_t)vshlq_u16((uint16x8_t)v227, (uint16x8_t)vnegq_s16(v218));
  *(int8x8_t *)v227.i8 = vmovn_s16((int16x8_t)v227);
  *(int8x8_t *)v228.i8 = vmovn_s16((int16x8_t)v228);
  int8x16_t v229 = vaddq_s8(vandq_s8(v222, v92), v223);
  int8x16_t v230 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v222.i8, 0);
  int8x16_t v231 = vsubq_s8(v229, vandq_s8(v92, v230));
  int8x16_t v232 = vsubq_s8(vshlq_s8(vshlq_s8(v125, vsubq_s8(v207, v88)), vaddq_s8(v88, v206)), vandq_s8(v91, v230));
  int8x16_t v233 = vsubq_s8(vshlq_s8(v217, vaddq_s8(v87, v206)), vandq_s8(v89, v230));
  int8x16_t v234 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8(v227, v228), v220), v219), vandq_s8(v85, v230));
  v235.i64[0] = 0x101010101010101;
  v235.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v72, v235)))
  {
    int8x16_t v236 = vandq_s8(v69, v235);
    int8x16_t v237 = v231;
    v237.i16[0] = v231.i16[7];
    v237.i16[7] = v231.i16[0];
    int8x16_t v238 = vnegq_s8(v236);
    int8x16_t v239 = vbslq_s8(v238, v237, v231);
    int8x16_t v240 = vaddq_s8(v239, vandq_s8(vqtbl1q_s8(v239, (int8x16_t)xmmword_242EA7480), v238));
    int8x16_t v231 = vaddq_s8(v240, vandq_s8(vqtbl1q_s8(v240, (int8x16_t)xmmword_242EA7490), v238));
    int8x16_t v241 = vaddq_s8(vandq_s8(vqtbl1q_s8(v232, (int8x16_t)xmmword_242EA74A0), v238), v232);
    int8x16_t v232 = vaddq_s8(vandq_s8(vqtbl1q_s8(v241, (int8x16_t)xmmword_242EA74B0), v238), v241);
    int8x16_t v242 = vaddq_s8(vandq_s8(vqtbl1q_s8(v233, (int8x16_t)xmmword_242EA74C0), v238), v233);
    int8x16_t v233 = vaddq_s8(vandq_s8(vqtbl1q_s8(v242, (int8x16_t)xmmword_242EA74D0), v238), v242);
    int8x16_t v243 = vaddq_s8(vandq_s8(vqtbl1q_s8(v234, (int8x16_t)xmmword_242EA74E0), v238), v234);
    int8x16_t v234 = vaddq_s8(vandq_s8(vqtbl1q_s8(v243, (int8x16_t)xmmword_242EA74F0), v238), v243);
  }
  int8x16_t v244 = vaddq_s8(v231, v221);
  int8x16_t v245 = vaddq_s8(v232, v221);
  int8x16_t v246 = vaddq_s8(v233, v221);
  int8x16_t v247 = vaddq_s8(v234, v221);
  v248.i64[0] = 0x1010101010101010;
  v248.i64[1] = 0x1010101010101010;
  int8x16_t v249 = vceqzq_s8(vandq_s8(v69, v248));
  int32x4_t v250 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v244, (int8x16_t)xmmword_242EA7500), v249), v244);
  int32x4_t v251 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v245, (int8x16_t)xmmword_242EA7500), v249), v245);
  int32x4_t v252 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v246, (int8x16_t)xmmword_242EA7500), v249), v246);
  int32x4_t v253 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v247, (int8x16_t)xmmword_242EA7500), v249), v247);
  *(int32x4_t *)a1 = vuzp1q_s32(v250, v252);
  *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v250, v252);
  int8x16_t v254 = (int32x4_t *)(a1 + 2 * a2);
  *int8x16_t v254 = vuzp1q_s32(v251, v253);
  *(int32x4_t *)((char *)v254 + a2) = vuzp2q_s32(v251, v253);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  uint64_t v13 = (int32x4_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int16x8_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v16, v13 + 1, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int16x8_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  unsigned __int8 v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v21, (int32x4_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    unsigned __int8 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *unsigned __int8 v21 = 0;
    unsigned __int8 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v25, (int32x4_t *)((char *)v13 + v20 + 16), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned __int8 v25 = 0;
LABEL_35:
  uint64_t v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v26, (int32x4_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *uint64_t v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v30, (int32x4_t *)((char *)v13 + 8 * a2 + 16), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  __int16 v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v31, (int32x4_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    __int16 v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *__int16 v31 = 0;
    __int16 v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      *__int16 v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v35, (int32x4_t *)((char *)v13 + 12 * a2 + 16), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  uint64_t v10 = a2
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1, 32, a2, *a3, a4, a5, a6, a7);
  uint64_t v14 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 16, 32, v10, a3[1], a4, v11, v12, v13);
  uint64_t v18 = v14
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 128, 32, v14, a3[2], a4, v15, v16, v17);
  uint64_t v22 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 144, 32, v18, a3[3], a4, v19, v20, v21);
  uint64_t v26 = v22
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 256, 32, v22, a3[4], a4, v23, v24, v25);
  uint64_t v30 = v26
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 272, 32, v26, a3[5], a4, v27, v28, v29);
  uint64_t v34 = v30
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 384, 32, v30, a3[6], a4, v31, v32, v33);
  unsigned int v38 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 400, 32, v34, v38, a4, v35, v36, v37);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int32x4_t v7 = *(int32x4_t *)((char *)a3 + a4);
  int8x16_t v8 = (int8x16_t)vzip1q_s32(*a3, v7);
  int8x16_t v9 = (int8x16_t)vzip2q_s32(*a3, v7);
  uint64_t v10 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v11 = *(int32x4_t *)((char *)v10 + a4);
  int8x16_t v12 = (int8x16_t)vzip1q_s32(*v10, v11);
  int8x16_t v13 = (int8x16_t)vzip2q_s32(*v10, v11);
  int8x16_t v14 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v8.i8, 0);
  int8x16_t v15 = vsubq_s8(v8, v14);
  int8x16_t v16 = vsubq_s8(v12, v14);
  int8x16_t v17 = vsubq_s8(v9, v14);
  int8x16_t v18 = vsubq_s8(v13, v14);
  int8x16_t v19 = vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7510);
  int8x16_t v20 = vpmaxq_s8(v19, v19);
  int8x16_t v21 = vpminq_s8(v19, v19);
  int8x16_t v22 = vpmaxq_s8(v20, v20);
  int8x16_t v23 = vpminq_s8(v21, v21);
  int8x16_t v24 = vpmaxq_s8(v22, v22);
  int8x16_t v25 = vpminq_s8(v23, v23);
  v26.i64[0] = 0x8080808080808080;
  v26.i64[1] = 0x8080808080808080;
  int8x16_t v27 = vmaxq_s8(v24, v26);
  v28.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v28.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v29 = vminq_s8(v25, v28);
  int8x16_t v30 = vzip1q_s8(v24, v25);
  v31.i64[0] = 0x808080808080808;
  v31.i64[1] = 0x808080808080808;
  int8x16_t v32 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v30)), vceqzq_s8(v30));
  int8x16_t v33 = vpmaxq_s8(v32, v32);
  int8x16_t v34 = vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7510);
  int8x16_t v35 = vpmaxq_s8(v34, v34);
  int8x16_t v36 = vpminq_s8(v34, v34);
  int8x16_t v37 = vpmaxq_s8(v35, v35);
  int8x16_t v38 = vpminq_s8(v36, v36);
  int8x16_t v39 = vpmaxq_s8(v37, v37);
  int8x16_t v40 = vpminq_s8(v38, v38);
  int8x16_t v41 = vmaxq_s8(v27, v39);
  int8x16_t v42 = vminq_s8(v29, v40);
  int8x16_t v43 = vzip1q_s8(v39, v40);
  int8x16_t v44 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v43)), vceqzq_s8(v43));
  int8x16_t v45 = vpmaxq_s8(v44, v44);
  int8x16_t v46 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v47 = vpmaxq_s8(v46, v46);
  int8x16_t v48 = vpminq_s8(v46, v46);
  int8x16_t v49 = vpmaxq_s8(v47, v47);
  int8x16_t v50 = vpminq_s8(v48, v48);
  int8x16_t v51 = vpmaxq_s8(v49, v49);
  int8x16_t v52 = vpminq_s8(v50, v50);
  int8x16_t v53 = vmaxq_s8(v41, v51);
  int8x16_t v54 = vminq_s8(v42, v52);
  int8x16_t v55 = vzip1q_s8(v51, v52);
  int8x16_t v56 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v55)), vceqzq_s8(v55));
  int8x16_t v57 = vpmaxq_s8(v56, v56);
  int8x16_t v58 = vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7510);
  int8x16_t v59 = vpmaxq_s8(v58, v58);
  int8x16_t v60 = vpminq_s8(v58, v58);
  int8x16_t v61 = vpmaxq_s8(v59, v59);
  int8x16_t v62 = vpminq_s8(v60, v60);
  int8x16_t v63 = vpmaxq_s8(v61, v61);
  int8x16_t v64 = vpminq_s8(v62, v62);
  int8x16_t v65 = vmaxq_s8(v53, v63);
  int8x16_t v66 = vminq_s8(v54, v64);
  int8x16_t v67 = vzip1q_s8(v63, v64);
  int8x16_t v68 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v67)), vceqzq_s8(v67));
  int8x16_t v69 = vpmaxq_s8(v68, v68);
  int8x16_t v70 = vmaxq_s8(vmaxq_s8(v33, v45), vmaxq_s8(v57, v69));
  int8x16_t v71 = vclzq_s8(vsubq_s8(v65, v66));
  int8x16_t v72 = vsubq_s8(v31, v71);
  int8x16_t v73 = vcgtq_s8(v70, v72);
  int8x16_t v74 = vbslq_s8(v73, v72, v70);
  if (!vmaxvq_s8(v74))
  {
    *(_WORD *)a1 = a3->i16[0];
    *a2 = 1;
    return 2;
  }
  int8x16_t v411 = v12;
  int8x16_t v412 = v9;
  int8x16_t v413 = v13;
  v75.i64[0] = -1;
  v75.i64[1] = -1;
  v76.i64[0] = 0x707070707070707;
  v76.i64[1] = 0x707070707070707;
  int8x16_t v415 = vandq_s8(vsubq_s8(vshlq_s8(v75, vsubq_s8(v76, v71)), v66), v73);
  v77.i64[0] = 0x303030303030303;
  v77.i64[1] = 0x303030303030303;
  int8x16_t v78 = vorrq_s8(vandq_s8(v73, v31), vandq_s8(vceqzq_s8(v74), v77));
  int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v33), v77), (int8x16_t)0);
  int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v45), v77), (int8x16_t)0);
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v57), v77), (int8x16_t)0);
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v69), v77), (int8x16_t)0);
  v83.i64[0] = 0x404040404040404;
  v83.i64[1] = 0x404040404040404;
  int8x16_t v84 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)))), v78);
  int8x16_t v85 = vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500));
  int8x16_t v86 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
  int8x16_t v87 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7500));
  int8x16_t v414 = vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7500));
  int8x16_t v88 = vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA7510);
  int8x16_t v89 = v15;
  int8x16_t v90 = vpmaxq_s8(v88, v88);
  int8x16_t v91 = vpminq_s8(v88, v88);
  int8x16_t v92 = vpmaxq_s8(v90, v90);
  int8x16_t v93 = vpminq_s8(v91, v91);
  int8x16_t v94 = vpmaxq_s8(v92, v92);
  int8x16_t v95 = vpminq_s8(v93, v93);
  int8x16_t v96 = vmaxq_s8(v94, v26);
  int8x16_t v97 = vminq_s8(v95, v28);
  int8x16_t v98 = vzip1q_s8(v94, v95);
  int8x16_t v99 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v98)), vceqzq_s8(v98));
  int8x16_t v100 = vpmaxq_s8(v99, v99);
  int8x16_t v101 = vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7510);
  int8x16_t v102 = vpmaxq_s8(v101, v101);
  int8x16_t v103 = vpminq_s8(v101, v101);
  int8x16_t v104 = vpmaxq_s8(v102, v102);
  int8x16_t v105 = vpminq_s8(v103, v103);
  int8x16_t v106 = vpmaxq_s8(v104, v104);
  int8x16_t v107 = vpminq_s8(v105, v105);
  int8x16_t v108 = vmaxq_s8(v96, v106);
  int8x16_t v109 = vminq_s8(v97, v107);
  int8x16_t v110 = vzip1q_s8(v106, v107);
  int8x16_t v111 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v110)), vceqzq_s8(v110));
  int8x16_t v112 = vpmaxq_s8(v111, v111);
  int8x16_t v113 = vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7510);
  int8x16_t v114 = vpmaxq_s8(v113, v113);
  int8x16_t v115 = vpminq_s8(v113, v113);
  int8x16_t v116 = vpmaxq_s8(v114, v114);
  int8x16_t v117 = vpminq_s8(v115, v115);
  int8x16_t v118 = vpmaxq_s8(v116, v116);
  int8x16_t v119 = vpminq_s8(v117, v117);
  int8x16_t v120 = vmaxq_s8(v108, v118);
  int8x16_t v121 = vminq_s8(v109, v119);
  int8x16_t v122 = vzip1q_s8(v118, v119);
  int8x16_t v123 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v122)), vceqzq_s8(v122));
  int8x16_t v124 = v16;
  int8x16_t v125 = vpmaxq_s8(v123, v123);
  int8x16_t v126 = vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7510);
  int8x16_t v127 = vpmaxq_s8(v126, v126);
  int8x16_t v128 = vpminq_s8(v126, v126);
  int8x16_t v129 = vpmaxq_s8(v127, v127);
  int8x16_t v130 = vpminq_s8(v128, v128);
  int8x16_t v131 = vpmaxq_s8(v129, v129);
  int8x16_t v132 = vpminq_s8(v130, v130);
  int8x16_t v133 = vmaxq_s8(v120, v131);
  int8x16_t v134 = vminq_s8(v121, v132);
  int8x16_t v135 = vzip1q_s8(v131, v132);
  int8x16_t v136 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v135)), vceqzq_s8(v135));
  int8x16_t v137 = vpmaxq_s8(v136, v136);
  int8x16_t v138 = vmaxq_s8(vmaxq_s8(v100, v112), vmaxq_s8(v125, v137));
  int8x16_t v139 = vclzq_s8(vsubq_s8(v133, v134));
  int8x16_t v140 = vsubq_s8(v31, v139);
  int8x16_t v141 = vcgtq_s8(v138, v140);
  int8x16_t v142 = vbslq_s8(v141, v140, v138);
  v140.i64[0] = 0x1010101010101010;
  v140.i64[1] = 0x1010101010101010;
  v143.i64[0] = 0x1818181818181818;
  v143.i64[1] = 0x1818181818181818;
  int8x16_t v144 = vorrq_s8(vandq_s8(vceqzq_s8(v142), v77), vbslq_s8(v141, v143, v140));
  int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v100), v77), (int8x16_t)0);
  int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v112), v77), (int8x16_t)0);
  int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v125), v77), (int8x16_t)0);
  int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v142, v137), v77), (int8x16_t)0);
  int8x16_t v149 = vsubq_s8(v142, v145);
  int8x16_t v150 = vsubq_s8(v142, v146);
  int8x16_t v151 = vsubq_s8(v142, v147);
  int8x16_t v152 = vsubq_s8(v142, v148);
  int8x16_t v153 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v148, v147), vnegq_s8(vaddq_s8(v145, v146)))), v144);
  uint16x8_t v154 = vmovl_u8(*(uint8x8_t *)v153.i8);
  v146.i64[0] = 0x8000800080008;
  v146.i64[1] = 0x8000800080008;
  v145.i64[0] = 0x2000200020002;
  v145.i64[1] = 0x2000200020002;
  int16x8_t v155 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v142.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v153.i8, 1uLL), v146)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v145), v146)), *(int8x8_t *)v149.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v151.i8, *(int8x8_t *)v150.i8), *(int8x8_t *)v152.i8), 3uLL));
  int16x8_t v156 = vaddq_s16(vaddw_s8((int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v84.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9)), vbic_s8(*(int8x8_t *)v74.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v84.i8))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v145), v146));
  int8x16_t v157 = vsubq_s8(v74, v79);
  int8x16_t v158 = vsubq_s8(v74, v80);
  int8x16_t v159 = vsubq_s8(v74, v81);
  int8x16_t v160 = vsubq_s8(v74, v82);
  int8x16_t v161 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(v156, *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8), *(int8x8_t *)v160.i8), 3uLL)), v155)), 0);
  __int16 v162 = vaddlvq_s8(v161);
  BOOL v164 = a5 < 4 || a6 < 2;
  if (v162)
  {
    v165.i64[0] = 0x707070707070707;
    v165.i64[1] = 0x707070707070707;
    v166.i64[0] = -1;
    v166.i64[1] = -1;
    int8x16_t v167 = vandq_s8(vsubq_s8(vshlq_s8(v166, vsubq_s8(v165, v139)), v134), v141);
    int8x16_t v14 = vbslq_s8(v161, vsubq_s8(v14, vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7500)), v14);
    int8x16_t v168 = vbslq_s8(v161, v414, v89);
    int8x16_t v169 = vbslq_s8(v161, v85, v124);
    int8x16_t v17 = vbslq_s8(v161, v86, v17);
    int8x16_t v18 = vbslq_s8(v161, v87, v18);
    int8x16_t v157 = vbslq_s8(v161, v149, v157);
    int8x16_t v158 = vbslq_s8(v161, v150, v158);
    int8x16_t v159 = vbslq_s8(v161, v151, v159);
    int8x16_t v160 = vbslq_s8(v161, v152, v160);
    int8x16_t v170 = vbslq_s8(v161, v167, v415);
    int8x16_t v74 = vbslq_s8(v161, v142, v74);
    int8x16_t v84 = vbslq_s8(v161, v153, v84);
    if (v164) {
      goto LABEL_16;
    }
  }
  else
  {
    int8x16_t v168 = v89;
    int8x16_t v169 = v124;
    int8x16_t v170 = v415;
    if (v164) {
      goto LABEL_16;
    }
  }
  int8x16_t v172 = v17;
  int8x16_t v416 = v18;
  int8x16_t v173 = vsubq_s8(v8, vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA7520));
  int8x16_t v174 = v411;
  v174.i16[7] = v8.i16[7];
  int8x16_t v175 = v412;
  v175.i16[7] = v8.i16[7];
  int8x16_t v176 = vsubq_s8(v411, vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7530));
  int8x16_t v177 = vsubq_s8(v412, vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7540));
  int8x16_t v178 = v413;
  v178.i16[7] = v8.i16[7];
  int8x16_t v179 = vsubq_s8(v413, vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7550));
  int8x16_t v180 = v173;
  v180.i16[0] = v173.i16[7];
  v180.i16[7] = v173.i16[0];
  int8x16_t v181 = vqtbl1q_s8(v180, (int8x16_t)xmmword_242EA7510);
  int8x16_t v182 = vpmaxq_s8(v181, v181);
  int8x16_t v183 = vpminq_s8(v181, v181);
  int8x16_t v184 = vpmaxq_s8(v182, v182);
  int8x16_t v185 = vpminq_s8(v183, v183);
  int8x16_t v186 = vpmaxq_s8(v184, v184);
  int8x16_t v187 = vpminq_s8(v185, v185);
  v175.i64[0] = 0x8080808080808080;
  v175.i64[1] = 0x8080808080808080;
  int8x16_t v188 = vmaxq_s8(v186, v175);
  v189.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v189.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v190 = vzip1q_s8(v186, v187);
  v191.i64[0] = 0x808080808080808;
  v191.i64[1] = 0x808080808080808;
  int8x16_t v192 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v190)), vceqzq_s8(v190));
  int8x16_t v193 = vpmaxq_s8(v192, v192);
  int8x16_t v194 = vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7510);
  int8x16_t v195 = vpmaxq_s8(v194, v194);
  int8x16_t v196 = vpminq_s8(v194, v194);
  int8x16_t v197 = vpmaxq_s8(v195, v195);
  int8x16_t v198 = vpminq_s8(v196, v196);
  int8x16_t v199 = vpmaxq_s8(v197, v197);
  int8x16_t v200 = vpminq_s8(v198, v198);
  int8x16_t v201 = vmaxq_s8(v188, v199);
  int8x16_t v202 = vminq_s8(vminq_s8(v187, v189), v200);
  int8x16_t v203 = vzip1q_s8(v199, v200);
  int8x16_t v204 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v203)), vceqzq_s8(v203));
  int8x16_t v205 = vpmaxq_s8(v204, v204);
  int8x16_t v206 = vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7510);
  int8x16_t v207 = vpmaxq_s8(v206, v206);
  int8x16_t v208 = vpminq_s8(v206, v206);
  int8x16_t v209 = vpmaxq_s8(v207, v207);
  int8x16_t v210 = vpminq_s8(v208, v208);
  int8x16_t v211 = vpmaxq_s8(v209, v209);
  int8x16_t v212 = vpminq_s8(v210, v210);
  int8x16_t v213 = vmaxq_s8(v201, v211);
  int8x16_t v214 = vminq_s8(v202, v212);
  int8x16_t v215 = vzip1q_s8(v211, v212);
  int8x16_t v216 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v215)), vceqzq_s8(v215));
  int8x16_t v217 = vpmaxq_s8(v216, v216);
  int8x16_t v218 = vqtbl1q_s8(v179, (int8x16_t)xmmword_242EA7510);
  int8x16_t v219 = vpmaxq_s8(v218, v218);
  int8x16_t v220 = vpminq_s8(v218, v218);
  int8x16_t v221 = vpmaxq_s8(v219, v219);
  int8x16_t v222 = vpminq_s8(v220, v220);
  int8x16_t v223 = vpmaxq_s8(v221, v221);
  int8x16_t v224 = vpminq_s8(v222, v222);
  int8x16_t v225 = vminq_s8(v214, v224);
  int8x16_t v226 = vzip1q_s8(v223, v224);
  int8x16_t v227 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v226)), vceqzq_s8(v226));
  int8x16_t v228 = vpmaxq_s8(v227, v227);
  int8x16_t v229 = vmaxq_s8(vmaxq_s8(v193, v205), vmaxq_s8(v217, v228));
  int8x16_t v230 = vclzq_s8(vsubq_s8(vmaxq_s8(v213, v223), v225));
  int8x16_t v231 = vsubq_s8(v191, v230);
  int8x16_t v232 = vcgtq_s8(v229, v231);
  int8x16_t v233 = vbslq_s8(v232, v231, v229);
  v231.i64[0] = 0x909090909090909;
  v231.i64[1] = 0x909090909090909;
  v234.i64[0] = 0x202020202020202;
  v234.i64[1] = 0x202020202020202;
  int8x16_t v235 = vorrq_s8(vandq_s8(vceqzq_s8(v233), v234), vsubq_s8(vandq_s8(v232, v231), vmvnq_s8(v232)));
  v229.i64[0] = 0x303030303030303;
  v229.i64[1] = 0x303030303030303;
  int8x16_t v236 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v193), v229), (int8x16_t)0);
  int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v205), v229), (int8x16_t)0);
  int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v217), v229), (int8x16_t)0);
  int8x16_t v239 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v228), v229), (int8x16_t)0);
  int8x16_t v240 = vsubq_s8(v233, v236);
  int8x16_t v241 = vsubq_s8(v233, v237);
  int8x16_t v242 = vsubq_s8(v233, v238);
  int8x16_t v243 = vsubq_s8(v233, v239);
  int8x16_t v244 = vceqq_s8(vaddq_s8(v239, v238), vnegq_s8(vaddq_s8(v236, v237)));
  v239.i64[0] = 0x404040404040404;
  v239.i64[1] = 0x404040404040404;
  int8x16_t v245 = vorrq_s8(vbicq_s8(v239, v244), v235);
  v246.i64[0] = 0x3000300030003;
  v246.i64[1] = 0x3000300030003;
  int8x16_t v247 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v237.i64[0] = 0x8000800080008;
  v237.i64[1] = 0x8000800080008;
  int16x8_t v248 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v247, v237)));
  int16x8_t v249 = (int16x8_t)vandq_s8(v247, v246);
  v246.i64[0] = 0x2000200020002;
  v246.i64[1] = 0x2000200020002;
  int8x16_t v250 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v248, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v237)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v249, (int16x8_t)v246), v237)), *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8),
                                                                *(int8x8_t *)v160.i8),
                                                              3uLL)),
                                                          vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v233.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v245.i8))), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v245.i8, *(int8x8_t *)v245.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v240.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v242.i8, *(int8x8_t *)v241.i8), *(int8x8_t *)v243.i8), 3uLL)))), 0);
  if (vaddlvq_s8(v250))
  {
    v251.i64[0] = 0x707070707070707;
    v251.i64[1] = 0x707070707070707;
    v252.i64[0] = -1;
    v252.i64[1] = -1;
    v14.i16[0] = vbslq_s8(v250, vextq_s8(v8, v8, 0xEuLL), v14).u16[0];
    int8x16_t v168 = vbslq_s8(v250, v180, v168);
    int8x16_t v169 = vbslq_s8(v250, v176, v169);
    int8x16_t v17 = vbslq_s8(v250, v177, v172);
    int8x16_t v18 = vbslq_s8(v250, v179, v416);
    int8x16_t v157 = vbslq_s8(v250, v240, v157);
    int8x16_t v158 = vbslq_s8(v250, v241, v158);
    int8x16_t v159 = vbslq_s8(v250, v242, v159);
    int8x16_t v160 = vbslq_s8(v250, v243, v160);
    int8x16_t v170 = vbslq_s8(v250, vandq_s8(vsubq_s8(vshlq_s8(v252, vsubq_s8(v251, v230)), v225), v232), v170);
    int8x16_t v74 = vbslq_s8(v250, v233, v74);
    int8x16_t v84 = vbslq_s8(v250, v245, v84);
  }
  else
  {
    int8x16_t v18 = v416;
    int8x16_t v17 = v172;
  }
LABEL_16:
  int8x16_t v253 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v254.i64[0] = 0x8000800080008;
  v254.i64[1] = 0x8000800080008;
  v255.i64[0] = 0x3000300030003;
  v255.i64[1] = 0x3000300030003;
  v256.i64[0] = 0x2000200020002;
  v256.i64[1] = 0x2000200020002;
  int16x8_t v257 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v253, v254))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v254)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v253, v255), v256), v254)), *(int8x8_t *)v157.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8), *(int8x8_t *)v160.i8), 3uLL));
  if ((unint64_t)(vpaddq_s16(v257, v257).i16[0] - 227) <= 0xFFFFFFFFFFFFFEF7)
  {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
    return 32;
  }
  else
  {
    __int16 v258 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v259 = 8 * (a1 & 7);
    if (v259) {
      uint64_t v260 = *v258 & ~(-1 << v259);
    }
    else {
      uint64_t v260 = 0;
    }
    unint64_t v261 = (unint64_t)((v74.i8[0] - 1) & 7) << 10;
    if (!v74.i8[0]) {
      unint64_t v261 = 0;
    }
    if (v74.i8[1]) {
      uint64_t v262 = (unsigned __int16)((v74.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v262 = 0;
    }
    *a2 = v84.i8[0] << 6;
    unint64_t v263 = (v84.i8[0] & 0x1C | (32 * (v84.i8[1] & 0x1F)) | v262 | v261) >> 2;
    unint64_t v264 = (v263 << v259) | v260;
    if (v259 >= 0x32)
    {
      *__int16 v258 = v264;
      unint64_t v264 = v263 >> (-8 * (a1 & 7u));
    }
    unint64_t v265 = (v259 + 14) & 0x3E;
    unint64_t v266 = v264 | ((unint64_t)v14.u16[0] << v265);
    if (v265 >= 0x30)
    {
      *(void *)((char *)v258 + (((v259 + 14) >> 3) & 8)) = v266;
      unint64_t v266 = (unint64_t)v14.u16[0] >> -(char)v265;
    }
    unint64_t v267 = v259 + 30;
    int8x16_t v268 = vsubq_s8(v74, v157);
    int8x16_t v269 = vsubq_s8(v74, v158);
    int8x16_t v270 = vsubq_s8(v74, v159);
    int8x16_t v271 = vsubq_s8(v74, v160);
    v268.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v268, v269), (int16x8_t)vzip1q_s8(v270, v271)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v268, v269), (int16x8_t)vtrn2q_s8(v270, v271))).u64[0];
    v270.i64[0] = 0x202020202020202;
    v270.i64[1] = 0x202020202020202;
    int8x16_t v272 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v253.i8, (int8x8_t)0x4000400040004)))), v270);
    v270.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v270.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v271.i64[0] = -1;
    v271.i64[1] = -1;
    uint8x16_t v273 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v271, (uint8x16_t)vorrq_s8(v272, v270)), (int8x16_t)v268.u64[0]);
    int16x8_t v274 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v272.i8);
    uint16x8_t v275 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v273.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v274)), (int16x8_t)vmovl_high_u8(v273));
    uint16x8_t v276 = (uint16x8_t)vpaddq_s16(v274, (int16x8_t)vmovl_high_u8((uint8x16_t)v272));
    int32x4_t v277 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v276.i8);
    int32x4_t v278 = (int32x4_t)vmovl_high_u16(v276);
    int32x4_t v279 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v275.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)), (int32x4_t)vshlq_u32(vmovl_high_u16(v275), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)));
    int32x4_t v280 = vpaddq_s32(v277, v278);
    v281.i64[0] = v279.u32[0];
    v281.i64[1] = v279.u32[1];
    uint64x2_t v282 = (uint64x2_t)v281;
    v281.i64[0] = v279.u32[2];
    v281.i64[1] = v279.u32[3];
    uint64x2_t v283 = (uint64x2_t)v281;
    v281.i64[0] = v280.u32[0];
    v281.i64[1] = v280.u32[1];
    int64x2_t v284 = v281;
    v281.i64[0] = v280.u32[2];
    v281.i64[1] = v280.u32[3];
    int64x2_t v285 = vpaddq_s64((int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)), (int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)));
    int64x2_t v286 = vpaddq_s64(v284, v281);
    uint64_t v287 = (v259 + 30) & 0x3E;
    unint64_t v288 = (v285.i64[0] << v287) | v266;
    if ((unint64_t)(v286.i64[0] + v287) >= 0x40)
    {
      *(void *)((char *)v258 + ((v267 >> 3) & 8)) = v288;
      unint64_t v288 = (unint64_t)v285.i64[0] >> -(char)v287;
    }
    int8x16_t v289 = vceqq_s8(v74, v157);
    unint64_t v290 = v286.i64[0] + v267;
    unint64_t v291 = v288 | (v285.i64[1] << v290);
    if ((v290 & 0x3F) + v286.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
      unint64_t v291 = (unint64_t)v285.i64[1] >> -(v290 & 0x3F);
      if ((v290 & 0x3F) == 0) {
        unint64_t v291 = 0;
      }
    }
    int8x16_t v292 = vandq_s8(v170, v289);
    unint64_t v293 = v290 + v286.i64[1];
    v294.i64[0] = 0x808080808080808;
    v294.i64[1] = 0x808080808080808;
    v295.i64[0] = -1;
    v295.i64[1] = -1;
    int8x16_t v296 = vandq_s8(vextq_s8(vtstq_s8(v84, v294), (int8x16_t)0, 0xEuLL), v74);
    v297.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v297.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v298 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v295, (uint8x16_t)vaddq_s8(v296, v297)), v170);
    int16x8_t v299 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v296.i8);
    uint16x8_t v300 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v298.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)), (int16x8_t)vmovl_high_u8(v298));
    uint16x8_t v301 = (uint16x8_t)vpaddq_s16(v299, (int16x8_t)vmovl_high_u8((uint8x16_t)v296));
    int32x4_t v302 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v301.i8);
    int32x4_t v303 = (int32x4_t)vmovl_high_u16(v301);
    int32x4_t v304 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v300.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v302)), (int32x4_t)vshlq_u32(vmovl_high_u16(v300), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)));
    int32x4_t v305 = vpaddq_s32(v302, v303);
    v306.i64[0] = v304.u32[0];
    v306.i64[1] = v304.u32[1];
    uint64x2_t v307 = (uint64x2_t)v306;
    v306.i64[0] = v304.u32[2];
    v306.i64[1] = v304.u32[3];
    uint64x2_t v308 = (uint64x2_t)v306;
    v306.i64[0] = v305.u32[0];
    v306.i64[1] = v305.u32[1];
    int64x2_t v309 = v306;
    v306.i64[0] = v305.u32[2];
    v306.i64[1] = v305.u32[3];
    int64x2_t v310 = vpaddq_s64((int64x2_t)vshlq_u64(v307, (uint64x2_t)vzip1q_s64((int64x2_t)0, v309)), (int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v306)));
    int64x2_t v311 = vpaddq_s64(v309, v306);
    unint64_t v312 = (v310.i64[0] << v293) | v291;
    if (v311.i64[0] + (v293 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v312;
      unint64_t v312 = (unint64_t)v310.i64[0] >> -(v293 & 0x3F);
      if ((v293 & 0x3F) == 0) {
        unint64_t v312 = 0;
      }
    }
    int8x16_t v313 = vceqq_s8(v74, v158);
    int8x16_t v314 = vaddq_s8(v292, v168);
    unint64_t v315 = v311.i64[0] + v293;
    unint64_t v316 = v312 | (v310.i64[1] << v315);
    if ((v315 & 0x3F) + v311.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v315 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v316;
      unint64_t v316 = (unint64_t)v310.i64[1] >> -(v315 & 0x3F);
      if ((v315 & 0x3F) == 0) {
        unint64_t v316 = 0;
      }
    }
    int8x16_t v317 = vandq_s8(v170, v313);
    unint64_t v318 = v315 + v311.i64[1];
    int8x16_t v319 = vextq_s8((int8x16_t)0, v157, 0xEuLL);
    v320.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v320.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v321.i64[0] = -1;
    v321.i64[1] = -1;
    uint8x16_t v322 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v321, (uint8x16_t)vaddq_s8(v319, v320)), v314);
    int16x8_t v323 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v319.i8);
    int16x8_t v324 = (int16x8_t)vmovl_high_u8((uint8x16_t)v319);
    uint16x8_t v325 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v322.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v323)), (int16x8_t)vshlq_u16(vmovl_high_u8(v322), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v324)));
    uint16x8_t v326 = (uint16x8_t)vpaddq_s16(v323, v324);
    int32x4_t v327 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v326.i8);
    int32x4_t v328 = (int32x4_t)vmovl_high_u16(v326);
    int32x4_t v329 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v325.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v327)), (int32x4_t)vshlq_u32(vmovl_high_u16(v325), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)));
    int32x4_t v330 = vpaddq_s32(v327, v328);
    v331.i64[0] = v329.u32[0];
    v331.i64[1] = v329.u32[1];
    uint64x2_t v332 = (uint64x2_t)v331;
    v331.i64[0] = v329.u32[2];
    v331.i64[1] = v329.u32[3];
    uint64x2_t v333 = (uint64x2_t)v331;
    v331.i64[0] = v330.u32[0];
    v331.i64[1] = v330.u32[1];
    int64x2_t v334 = v331;
    v331.i64[0] = v330.u32[2];
    v331.i64[1] = v330.u32[3];
    int64x2_t v335 = vpaddq_s64((int64x2_t)vshlq_u64(v332, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)), (int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v331)));
    int64x2_t v336 = vpaddq_s64(v334, v331);
    unint64_t v337 = (v335.i64[0] << v318) | v316;
    if (v336.i64[0] + (v318 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v318 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v337;
      unint64_t v337 = (unint64_t)v335.i64[0] >> -(v318 & 0x3F);
      if ((v318 & 0x3F) == 0) {
        unint64_t v337 = 0;
      }
    }
    int8x16_t v338 = vceqq_s8(v74, v159);
    int8x16_t v339 = vaddq_s8(v169, v317);
    unint64_t v340 = v336.i64[0] + v318;
    unint64_t v341 = v337 | (v335.i64[1] << v340);
    if ((v340 & 0x3F) + v336.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
      unint64_t v341 = (unint64_t)v335.i64[1] >> -(v340 & 0x3F);
      if ((v340 & 0x3F) == 0) {
        unint64_t v341 = 0;
      }
    }
    int8x16_t v342 = vandq_s8(v170, v338);
    unint64_t v343 = v340 + v336.i64[1];
    v344.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v344.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v345.i64[0] = -1;
    v345.i64[1] = -1;
    uint8x16_t v346 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v345, (uint8x16_t)vaddq_s8(v158, v344)), v339);
    int16x8_t v347 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v158.i8);
    int16x8_t v348 = (int16x8_t)vmovl_high_u8((uint8x16_t)v158);
    uint16x8_t v349 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v346.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v347)), (int16x8_t)vshlq_u16(vmovl_high_u8(v346), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v348)));
    uint16x8_t v350 = (uint16x8_t)vpaddq_s16(v347, v348);
    int32x4_t v351 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v350.i8);
    int32x4_t v352 = (int32x4_t)vmovl_high_u16(v350);
    int32x4_t v353 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v349.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v351)), (int32x4_t)vshlq_u32(vmovl_high_u16(v349), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v352)));
    int32x4_t v354 = vpaddq_s32(v351, v352);
    v355.i64[0] = v353.u32[0];
    v355.i64[1] = v353.u32[1];
    uint64x2_t v356 = (uint64x2_t)v355;
    v355.i64[0] = v353.u32[2];
    v355.i64[1] = v353.u32[3];
    uint64x2_t v357 = (uint64x2_t)v355;
    v355.i64[0] = v354.u32[0];
    v355.i64[1] = v354.u32[1];
    int64x2_t v358 = v355;
    v355.i64[0] = v354.u32[2];
    v355.i64[1] = v354.u32[3];
    int64x2_t v359 = vpaddq_s64((int64x2_t)vshlq_u64(v356, (uint64x2_t)vzip1q_s64((int64x2_t)0, v358)), (int64x2_t)vshlq_u64(v357, (uint64x2_t)vzip1q_s64((int64x2_t)0, v355)));
    int64x2_t v360 = vpaddq_s64(v358, v355);
    unint64_t v361 = (v359.i64[0] << v343) | v341;
    if (v360.i64[0] + (v343 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
      unint64_t v361 = (unint64_t)v359.i64[0] >> -(v343 & 0x3F);
      if ((v343 & 0x3F) == 0) {
        unint64_t v361 = 0;
      }
    }
    int8x16_t v362 = vceqq_s8(v74, v160);
    int8x16_t v363 = vaddq_s8(v17, v342);
    unint64_t v364 = v360.i64[0] + v343;
    unint64_t v365 = v361 | (v359.i64[1] << v364);
    if ((v364 & 0x3F) + v360.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
      unint64_t v365 = (unint64_t)v359.i64[1] >> -(v364 & 0x3F);
      if ((v364 & 0x3F) == 0) {
        unint64_t v365 = 0;
      }
    }
    int8x16_t v366 = vandq_s8(v170, v362);
    unint64_t v367 = v364 + v360.i64[1];
    v368.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v368.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v369.i64[0] = -1;
    v369.i64[1] = -1;
    uint8x16_t v370 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v369, (uint8x16_t)vaddq_s8(v159, v368)), v363);
    int16x8_t v371 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
    int16x8_t v372 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
    uint16x8_t v373 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v370.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v371)), (int16x8_t)vshlq_u16(vmovl_high_u8(v370), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v372)));
    uint16x8_t v374 = (uint16x8_t)vpaddq_s16(v371, v372);
    int32x4_t v375 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v374.i8);
    int32x4_t v376 = (int32x4_t)vmovl_high_u16(v374);
    int32x4_t v377 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v376)));
    int32x4_t v378 = vpaddq_s32(v375, v376);
    v379.i64[0] = v377.u32[0];
    v379.i64[1] = v377.u32[1];
    uint64x2_t v380 = (uint64x2_t)v379;
    v379.i64[0] = v377.u32[2];
    v379.i64[1] = v377.u32[3];
    uint64x2_t v381 = (uint64x2_t)v379;
    v379.i64[0] = v378.u32[0];
    v379.i64[1] = v378.u32[1];
    int64x2_t v382 = v379;
    v379.i64[0] = v378.u32[2];
    v379.i64[1] = v378.u32[3];
    int64x2_t v383 = vpaddq_s64((int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v382)), (int64x2_t)vshlq_u64(v381, (uint64x2_t)vzip1q_s64((int64x2_t)0, v379)));
    int64x2_t v384 = vpaddq_s64(v382, v379);
    unint64_t v385 = (v383.i64[0] << v367) | v365;
    if (v384.i64[0] + (v367 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v258 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v385;
      unint64_t v385 = (unint64_t)v383.i64[0] >> -(v367 & 0x3F);
      if ((v367 & 0x3F) == 0) {
        unint64_t v385 = 0;
      }
    }
    int8x16_t v386 = vaddq_s8(v18, v366);
    unint64_t v387 = v384.i64[0] + v367;
    unint64_t v388 = v385 | (v383.i64[1] << v387);
    if ((v387 & 0x3F) + v384.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v387 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v388;
      unint64_t v388 = (unint64_t)v383.i64[1] >> -(v387 & 0x3F);
      if ((v387 & 0x3F) == 0) {
        unint64_t v388 = 0;
      }
    }
    unint64_t v389 = v387 + v384.i64[1];
    v390.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v390.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v391.i64[0] = -1;
    v391.i64[1] = -1;
    uint8x16_t v392 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v391, (uint8x16_t)vaddq_s8(v160, v390)), v386);
    int16x8_t v393 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v160.i8);
    int16x8_t v394 = (int16x8_t)vmovl_high_u8((uint8x16_t)v160);
    uint16x8_t v395 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v392.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v393)), (int16x8_t)vshlq_u16(vmovl_high_u8(v392), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v394)));
    uint16x8_t v396 = (uint16x8_t)vpaddq_s16(v393, v394);
    int32x4_t v397 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v396.i8);
    int32x4_t v398 = (int32x4_t)vmovl_high_u16(v396);
    int32x4_t v399 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v395.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v397)), (int32x4_t)vshlq_u32(vmovl_high_u16(v395), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v398)));
    int32x4_t v400 = vpaddq_s32(v397, v398);
    v401.i64[0] = v399.u32[0];
    v401.i64[1] = v399.u32[1];
    uint64x2_t v402 = (uint64x2_t)v401;
    v401.i64[0] = v399.u32[2];
    v401.i64[1] = v399.u32[3];
    uint64x2_t v403 = (uint64x2_t)v401;
    v401.i64[0] = v400.u32[0];
    v401.i64[1] = v400.u32[1];
    int64x2_t v404 = v401;
    v401.i64[0] = v400.u32[2];
    v401.i64[1] = v400.u32[3];
    int64x2_t v405 = vpaddq_s64((int64x2_t)vshlq_u64(v402, (uint64x2_t)vzip1q_s64((int64x2_t)0, v404)), (int64x2_t)vshlq_u64(v403, (uint64x2_t)vzip1q_s64((int64x2_t)0, v401)));
    int64x2_t v406 = vpaddq_s64(v404, v401);
    unint64_t v407 = (v405.i64[0] << v389) | v388;
    if (v406.i64[0] + (v389 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v258 + ((v389 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v407;
      if ((v389 & 0x3F) != 0) {
        unint64_t v407 = (unint64_t)v405.i64[0] >> -(v389 & 0x3F);
      }
      else {
        unint64_t v407 = 0;
      }
    }
    unint64_t v408 = v406.i64[0] + v389;
    unint64_t v409 = v407 | (v405.i64[1] << v408);
    if ((v408 & 0x3F) + v406.i64[1] >= 0x40)
    {
      *(void *)((char *)v258 + ((v408 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
      unint64_t v409 = (unint64_t)v405.i64[1] >> -(v408 & 0x3F);
      if ((v408 & 0x3F) == 0) {
        unint64_t v409 = 0;
      }
    }
    unint64_t v410 = v408 + v406.i64[1];
    if ((v410 & 0x3F) != 0) {
      *(void *)((char *)v258 + ((v410 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
    }
    unint64_t result = (v410 - v259 + 7) >> 3;
    *a2 |= (_BYTE)result - 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  if (a5 > 1)
  {
    uint64_t v20 = a5 & 0xFE;
    if (a5 == v20)
    {
      uint64_t v21 = 0;
      int8x16_t v22 = (__int16 *)(a3 + 2);
      int8x16_t v23 = (char *)&v72 + 8;
      do
      {
        int8x16_t v24 = v23;
        int8x16_t v25 = v22;
        uint64_t v26 = a5;
        do
        {
          __int16 v27 = *(v25 - 1);
          __int16 v28 = *v25;
          v25 += 2;
          *(v24 - 4) = v27;
          *int8x16_t v24 = v28;
          v24 += 8;
          v26 -= 2;
        }
        while (v26);
        ++v21;
        int8x16_t v22 = (__int16 *)((char *)v22 + a4);
        v23 += 2;
      }
      while (v21 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (__int16 *)(a3 + 2);
      int8x16_t v31 = (char *)&v72 + 8;
      int8x16_t v32 = (char *)&v72 + ((8 * a5) & 0x7F0);
      do
      {
        int8x16_t v33 = v31;
        int8x16_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          __int16 v36 = *(v34 - 1);
          __int16 v37 = *v34;
          v34 += 2;
          *(v33 - 4) = v36;
          *int8x16_t v33 = v37;
          v33 += 8;
          v35 -= 2;
        }
        while (v35);
        int8x16_t v38 = (__int16 *)(a3 + v29 * a4 + 2 * v20);
        int8x16_t v39 = v32;
        uint64_t v40 = a5 - v20;
        do
        {
          __int16 v41 = *v38++;
          *int8x16_t v39 = v41;
          v39 += 4;
          --v40;
        }
        while (v40);
        ++v29;
        int8x16_t v30 = (__int16 *)((char *)v30 + a4);
        v31 += 2;
        v32 += 2;
      }
      while (v29 != a6);
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v11 = a6 & 0xFE;
    int8x16_t v12 = (__int16 *)(a3 + 1);
    int8x16_t v13 = (_WORD *)&v72 + 1;
    uint64_t v14 = v11;
    do
    {
      __int16 v15 = *(__int16 *)((char *)v12 - 1);
      __int16 v16 = *v12++;
      *(v13 - 1) = v15;
      *int8x16_t v13 = v16;
      v13 += 2;
      v14 -= 2;
    }
    while (v14);
    if (v11 != a6)
    {
LABEL_7:
      uint64_t v17 = a6 - v11;
      int8x16_t v18 = (_WORD *)&v72 + v11;
      int8x16_t v19 = (_WORD *)(a3 + v11 * a4);
      do
      {
        *v18++ = *v19;
        int8x16_t v19 = (_WORD *)((char *)v19 + a4);
        --v17;
      }
      while (v17);
    }
  }
  int v56 = v72;
  int v57 = BYTE1(v72);
  int v58 = BYTE8(v72);
  int v59 = BYTE9(v72);
  int v60 = BYTE2(v72);
  int v61 = BYTE3(v72);
  int v62 = BYTE10(v72);
  int v63 = BYTE11(v72);
  int v64 = v73;
  int v65 = BYTE1(v73);
  int v66 = BYTE8(v73);
  int v67 = BYTE9(v73);
  int v68 = BYTE2(v73);
  int v69 = BYTE3(v73);
  if (a5 >= 4) {
    unsigned int v42 = 4;
  }
  else {
    unsigned int v42 = a5;
  }
  if (a5 >= 4) {
    unsigned int v43 = a5 - 4;
  }
  else {
    unsigned int v43 = 0;
  }
  int v70 = BYTE10(v73);
  int v71 = BYTE11(v73);
  if (a6 >= 2) {
    unsigned int v44 = 2;
  }
  else {
    unsigned int v44 = a6;
  }
  if (a6 >= 2) {
    unsigned int v45 = a6 - 2;
  }
  else {
    unsigned int v45 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v56, a7, v42, v44);
  int v56 = BYTE4(v72);
  int v57 = BYTE5(v72);
  int v58 = BYTE12(v72);
  int v59 = BYTE13(v72);
  int v60 = BYTE6(v72);
  int v61 = BYTE7(v72);
  int v62 = BYTE14(v72);
  int v63 = HIBYTE(v72);
  int v64 = BYTE4(v73);
  int v65 = BYTE5(v73);
  int v66 = BYTE12(v73);
  int v67 = BYTE13(v73);
  int v68 = BYTE6(v73);
  int v69 = BYTE7(v73);
  int v70 = BYTE14(v73);
  int v71 = HIBYTE(v73);
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v45;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, (uint64_t)&v56, a7, v42, v47);
  int v56 = v74;
  int v57 = BYTE1(v74);
  int v58 = BYTE8(v74);
  int v59 = BYTE9(v74);
  int v60 = BYTE2(v74);
  int v61 = BYTE3(v74);
  int v62 = BYTE10(v74);
  int v63 = BYTE11(v74);
  int v64 = v75;
  int v65 = BYTE1(v75);
  int v66 = BYTE8(v75);
  int v67 = BYTE9(v75);
  int v68 = BYTE2(v75);
  int v69 = BYTE3(v75);
  if (a5 >= 8) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = v43;
  }
  int v70 = BYTE10(v75);
  int v71 = BYTE11(v75);
  int v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v56, a7, v49, v44);
  int v56 = BYTE4(v74);
  int v57 = BYTE5(v74);
  int v58 = BYTE12(v74);
  int v59 = BYTE13(v74);
  int v60 = BYTE6(v74);
  int v61 = BYTE7(v74);
  int v62 = BYTE14(v74);
  int v63 = HIBYTE(v74);
  int v64 = BYTE4(v75);
  int v65 = BYTE5(v75);
  int v66 = BYTE12(v75);
  int v67 = BYTE13(v75);
  int v68 = BYTE6(v75);
  int v69 = BYTE7(v75);
  int v70 = BYTE14(v75);
  int v71 = HIBYTE(v75);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v56, a7, v49, v47);
  if (v50) {
    char v52 = 4;
  }
  else {
    char v52 = 0;
  }
  if (v48) {
    char v53 = 2;
  }
  else {
    char v53 = 0;
  }
  if (result) {
    char v54 = -8;
  }
  else {
    char v54 = -16;
  }
  *a2 = v54 | v52 | v46 | v53;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v279 = *MEMORY[0x263EF8340];
  BOOL v8 = a5 < 2;
  BOOL v9 = a4 < 4 || a5 < 2;
  BOOL v242 = v9;
  int v243 = a3;
  BOOL v10 = a4 < 4 || a5 == 0;
  BOOL v241 = v10;
  BOOL v11 = a4 < 3 || a5 < 2;
  BOOL v240 = v11;
  BOOL v12 = a4 < 3 || a5 == 0;
  BOOL v239 = v12;
  if (a4) {
    BOOL v13 = a5 < 2;
  }
  else {
    BOOL v13 = 1;
  }
  if (a4 < 2) {
    BOOL v8 = 1;
  }
  BOOL v237 = v8;
  BOOL v238 = v13;
  BOOL v14 = a4 < 2 || a5 == 0;
  BOOL v236 = v14;
  do
  {
    uint64_t v15 = 0;
    char v16 = v6;
    unsigned int v17 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[v7];
    *(&v277 + v7) = v17;
    switch(v17)
    {
      case 2u:
        uint64_t v15 = 5;
        break;
      case 0xAu:
        uint64_t v15 = 1;
        break;
      case 0xCu:
        uint64_t v15 = 2;
        break;
      case 0x10u:
        uint64_t v15 = 3;
        break;
      case 0x20u:
        uint64_t v15 = 4;
        break;
      default:
        break;
    }
    unint64_t v18 = 4 * v7;
    *(int *)((char *)&v254 + v18) = v15;
    unsigned int v19 = 1 << (v17 - 1);
    v253[v18 / 4 + 2] = v19;
    if (a3 == 1)
    {
      uint64_t v29 = (_DWORD *)(a2 + v18);
      uint64_t v21 = (unsigned int *)((char *)&v257 + v18);
      if ((*(_DWORD *)(a2 + 4 * v7) ^ v19) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      }
      *uint64_t v21 = v20;
      if ((v29[2] ^ v19) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v29[2] ^ v19;
      }
      v21[2] = v22;
      if ((v29[4] ^ v19) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v29[4] ^ v19;
      }
      v21[4] = v23;
      if ((v29[6] ^ v19) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v29[6] ^ v19;
      }
      v21[6] = v24;
      if ((v29[8] ^ v19) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v29[8] ^ v19;
      }
      v21[8] = v25;
      if ((v29[10] ^ v19) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v29[10] ^ v19;
      }
      v21[10] = v26;
      unsigned int v27 = v29[12] ^ v19;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v29[14] ^ v19;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      uint64_t v21 = (unsigned int *)((char *)&v257 + v18);
      *uint64_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8) ^ v19;
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16) ^ v19;
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24) ^ v19;
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32) ^ v19;
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40) ^ v19;
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48) ^ v19;
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56) ^ v19;
    }
    else
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7);
      uint64_t v21 = (unsigned int *)((char *)&v257 + v18);
      *uint64_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8);
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16);
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24);
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32);
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40);
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48);
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56);
    }
    v21[14] = v28;
    int8x16_t v30 = &v275[v18 / 4 + 2];
    v275[v7 + 2] = v20;
    v276[v7] = v20;
    v275[v7] = 0;
    if (v236)
    {
      unsigned int v31 = v20;
      if (v238) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v31 = v20;
      if (v22 < v20)
      {
        v275[v7] = 1;
        v276[v7] = v22;
        unsigned int v31 = v22;
      }
      if (v20 >= v22) {
        int8x16_t v32 = &v275[v18 / 4 + 2];
      }
      else {
        int8x16_t v32 = (unsigned int *)(&v259 + v7);
      }
      unsigned int v20 = *v32;
      *int8x16_t v30 = *v32;
      if (v238)
      {
LABEL_58:
        if (v237) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v31)
    {
      v275[v7] = 2;
      v276[v7] = v23;
      unsigned int v31 = v23;
    }
    if (v20 >= v23) {
      int8x16_t v33 = &v275[v18 / 4 + 2];
    }
    else {
      int8x16_t v33 = (unsigned int *)(&v261 + v7);
    }
    unsigned int v20 = *v33;
    *int8x16_t v30 = *v33;
    if (v237)
    {
LABEL_59:
      if (v239) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v31)
    {
      v275[v7] = 3;
      v276[v7] = v24;
      unsigned int v31 = v24;
    }
    if (v20 >= v24) {
      int8x16_t v34 = &v275[v18 / 4 + 2];
    }
    else {
      int8x16_t v34 = (unsigned int *)(&v263 + v7);
    }
    unsigned int v20 = *v34;
    *int8x16_t v30 = *v34;
    if (v239)
    {
LABEL_60:
      if (v241) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v31)
    {
      v275[v7] = 4;
      v276[v7] = v25;
      unsigned int v31 = v25;
    }
    if (v20 >= v25) {
      uint64_t v35 = &v275[v18 / 4 + 2];
    }
    else {
      uint64_t v35 = (unsigned int *)(&v265 + v7);
    }
    unsigned int v20 = *v35;
    *int8x16_t v30 = *v35;
    if (v241)
    {
LABEL_61:
      if (v240) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v31)
    {
      v275[v7] = 5;
      v276[v7] = v26;
      unsigned int v31 = v26;
    }
    if (v20 >= v26) {
      __int16 v36 = &v275[v18 / 4 + 2];
    }
    else {
      __int16 v36 = (unsigned int *)(&v267 + v7);
    }
    unsigned int v20 = *v36;
    *int8x16_t v30 = *v36;
    if (v240)
    {
LABEL_62:
      if (v242) {
        goto LABEL_105;
      }
LABEL_100:
      if (v28 < v31)
      {
        v275[v7] = 7;
        v276[v7] = v28;
        unsigned int v31 = v28;
      }
      int8x16_t v38 = (unsigned int *)(&v271 + v7);
      if (v20 >= v28) {
        int8x16_t v38 = v30;
      }
      unsigned int v20 = *v38;
      *int8x16_t v30 = *v38;
      goto LABEL_105;
    }
LABEL_94:
    if (v27 < v31)
    {
      v275[v7] = 6;
      v276[v7] = v27;
      unsigned int v31 = v27;
    }
    if (v20 >= v27) {
      __int16 v37 = &v275[v18 / 4 + 2];
    }
    else {
      __int16 v37 = (unsigned int *)(&v269 + v7);
    }
    unsigned int v20 = *v37;
    *int8x16_t v30 = *v37;
    if (!v242) {
      goto LABEL_100;
    }
LABEL_105:
    unsigned int v39 = __clz(v20 - v31);
    unsigned int v40 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::computeDquadMode(v17, 32 - v39, v31, v20);
    *(&v273 + v7) = v40;
    a3 = v243;
    if ((v243 | 2) != 3)
    {
      BOOL v41 = 0;
      uint64_t v42 = v15;
LABEL_110:
      unsigned int v43 = a5;
      goto LABEL_111;
    }
    BOOL v41 = 0;
    uint64_t v42 = v15;
    if (v20 < v19) {
      goto LABEL_110;
    }
    unsigned int v43 = a5;
    if (v31 < v19) {
      BOOL v41 = kDQuadParamTable[160 * v42 + 8 + 10 * v40] == 0;
    }
LABEL_111:
    if (v40 >= kDquadTransition[v42] || v41)
    {
      unsigned int v44 = kDQuadParamTable[160 * v42 + 4 + 10 * v40] - v41;
      if (v41) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v17 >= v44;
      unsigned int v46 = v17 - v44;
      BOOL v71 = v46 != 0 && v50;
      int v47 = v31 & ~(-1 << v46);
      if (!v71) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      BOOL v71 = v48 < 1;
      unsigned int v49 = __clz(v48 + v20 - v31);
      BOOL v50 = v71 || v49 >= v39;
      if (v50)
      {
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v273 + v7) = ++v40;
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      unsigned int v51 = kDquadMaxMode[v42];
      if (v51 >= v40) {
        unsigned int v51 = v40;
      }
      *(&v273 + v7) = v51;
    }
LABEL_22:
    char v6 = 1;
    uint64_t v7 = 1u;
  }
  while ((v16 & 1) == 0);
  int v53 = v254;
  int v52 = v255;
  unsigned int v54 = v273;
  unsigned int v55 = v274;
  BOOL v57 = v274 >= v273;
  BOOL v58 = v274 < v273;
  int v59 = kDQuadParamTable[160 * v255 + 6 + 10 * v274];
  int v251 = kDQuadParamTable[160 * v254 + 6 + 10 * v273];
  int v56 = v251;
  int v252 = v59;
  v253[0] = v251;
  v253[1] = v59;
  if (*(&v273 + v57) == *(&v273 + v58))
  {
    int v60 = v251;
  }
  else
  {
    int v61 = *(_DWORD *)((unint64_t)v253 | (4 * v58));
    int v60 = v251;
    if (v61 >= 1)
    {
      *(_DWORD *)((unint64_t)&v251 | (4 * v58)) = 0;
      *(_DWORD *)((unint64_t)&v251 | (4 * v57)) += v61;
      int v60 = v251;
    }
  }
  int v62 = &kDQuadParamTable[160 * v53 + 10 * v54];
  unint64_t v63 = *((void *)v62 + 1);
  unsigned int v65 = v62[4];
  unsigned int v64 = v62[5];
  if (a4) {
    BOOL v66 = v43 == 0;
  }
  else {
    BOOL v66 = 1;
  }
  int v67 = v66;
  int v235 = v67;
  unsigned int v249 = v65;
  unsigned int v247 = v64;
  int v68 = v60 - v56;
  if (v68 < 0)
  {
    if (kDQuadParamTable[160 * v53 + 7 + 10 * v54] < -v68)
    {
      unsigned int v247 = --v64;
      if (!kDQuadParamTable[160 * v53 + 8 + 10 * v54])
      {
        int v69 = -1;
LABEL_142:
        unsigned int v249 = v69 + v65;
      }
    }
  }
  else if (v68)
  {
    v64 += v68;
    unsigned int v247 = v64;
    int v69 = v68;
    goto LABEL_142;
  }
  BOOL v71 = v53 == 5 && v54 == 1 && v68 < 2;
  int v72 = v71;
  if (v243 == 4)
  {
    if (v53 == 3) {
      int v73 = 31744;
    }
    else {
      int v73 = 0;
    }
    if (v53 == 4) {
      int v74 = 2139095040;
    }
    else {
      int v74 = v73;
    }
    int v75 = 1 << (v277 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_163;
      }
LABEL_310:
      if ((v74 & ~v259) == 0 || v259 == v75) {
        int v72 = 1;
      }
      if (!v238) {
        goto LABEL_317;
      }
LABEL_164:
      if (v237) {
        goto LABEL_165;
      }
LABEL_324:
      if ((v74 & ~v263) == 0 || v263 == v75) {
        int v72 = 1;
      }
      if (!v239) {
        goto LABEL_331;
      }
LABEL_166:
      if (v241) {
        goto LABEL_167;
      }
LABEL_338:
      if ((v74 & ~v267) == 0 || v267 == v75) {
        int v72 = 1;
      }
      if (!v240) {
        goto LABEL_345;
      }
LABEL_168:
      if (!v242) {
        goto LABEL_169;
      }
    }
    else
    {
      if ((v74 & ~v257) == 0 || v257 == v75) {
        int v72 = 1;
      }
      if (!v236) {
        goto LABEL_310;
      }
LABEL_163:
      if (v238) {
        goto LABEL_164;
      }
LABEL_317:
      if ((v74 & ~v261) == 0 || v261 == v75) {
        int v72 = 1;
      }
      if (!v237) {
        goto LABEL_324;
      }
LABEL_165:
      if (v239) {
        goto LABEL_166;
      }
LABEL_331:
      if ((v74 & ~v265) == 0 || v265 == v75) {
        int v72 = 1;
      }
      if (!v241) {
        goto LABEL_338;
      }
LABEL_167:
      if (v240) {
        goto LABEL_168;
      }
LABEL_345:
      if ((v74 & ~v269) == 0 || v269 == v75) {
        int v72 = 1;
      }
      if (!v242)
      {
LABEL_169:
        if ((v74 & ~v271) == 0 || v271 == v75) {
          int v72 = 1;
        }
      }
    }
  }
  BOOL v71 = v63 >> v64 > 0x10;
  int v77 = v67;
  if (v71) {
    int v77 = 1;
  }
  int v78 = v77 | v72;
  int8x16_t v79 = &kDQuadParamTable[160 * v52 + 10 * v55];
  unint64_t v80 = *((void *)v79 + 1);
  unsigned int v81 = v79[4];
  unsigned int v82 = v79[5];
  unsigned int v250 = v81;
  unsigned int v248 = v82;
  int v83 = v252 - v59;
  if (v252 - v59 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v55] < v59 - v252)
    {
      unsigned int v248 = --v82;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v55])
      {
        int v84 = -1;
LABEL_181:
        unsigned int v250 = v84 + v81;
      }
    }
  }
  else if (v252 != v59)
  {
    v82 += v83;
    unsigned int v248 = v82;
    int v84 = v252 - v59;
    goto LABEL_181;
  }
  if (v52 == 5 && v55 == 1 && v83 < 2) {
    int v78 = 1;
  }
  if (v243 == 4)
  {
    if (v52 == 3) {
      int v85 = 31744;
    }
    else {
      int v85 = 0;
    }
    if (v52 == 4) {
      int v85 = 2139095040;
    }
    int v86 = 1 << (v278 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_196;
      }
LABEL_360:
      if ((v85 & ~v260) == 0 || v260 == v86) {
        int v78 = 1;
      }
      if (!v238) {
        goto LABEL_367;
      }
LABEL_197:
      if (v237) {
        goto LABEL_198;
      }
LABEL_374:
      if ((v85 & ~v264) == 0 || v264 == v86) {
        int v78 = 1;
      }
      if (!v239) {
        goto LABEL_381;
      }
LABEL_199:
      if (v241) {
        goto LABEL_200;
      }
LABEL_388:
      if ((v85 & ~v268) == 0 || v268 == v86) {
        int v78 = 1;
      }
      if (!v240) {
        goto LABEL_395;
      }
LABEL_201:
      if (!v242) {
        goto LABEL_202;
      }
    }
    else
    {
      if ((v85 & ~v258) == 0 || v258 == v86) {
        int v78 = 1;
      }
      if (!v236) {
        goto LABEL_360;
      }
LABEL_196:
      if (v238) {
        goto LABEL_197;
      }
LABEL_367:
      if ((v85 & ~v262) == 0 || v262 == v86) {
        int v78 = 1;
      }
      if (!v237) {
        goto LABEL_374;
      }
LABEL_198:
      if (v239) {
        goto LABEL_199;
      }
LABEL_381:
      if ((v85 & ~v266) == 0 || v266 == v86) {
        int v78 = 1;
      }
      if (!v241) {
        goto LABEL_388;
      }
LABEL_200:
      if (v240) {
        goto LABEL_201;
      }
LABEL_395:
      if ((v85 & ~v270) == 0 || v270 == v86) {
        int v78 = 1;
      }
      if (!v242)
      {
LABEL_202:
        if ((v85 & ~v272) == 0 || v272 == v86) {
          int v78 = 1;
        }
      }
    }
  }
  char v88 = 0;
  uint64_t v89 = 0;
  int v90 = v67;
  if (v80 >> v82 > 0x10) {
    int v90 = 1;
  }
  int v230 = v90;
  int v231 = v78;
  uint64_t v246 = 0;
  uint64_t v245 = 0;
  memset(v244, 0, sizeof(v244));
  do
  {
    uint64_t v91 = 0;
    unsigned int v92 = 0;
    unsigned int v93 = *(&v277 + v89);
    unsigned int v94 = *(&v249 + v89);
    if (v93 < v94) {
      unsigned int v94 = *(&v277 + v89);
    }
    *(&v249 + v89) = v94;
    int8x16_t v95 = &kDQuadParamTable[160 * *(&v254 + v89) + 10 * *(&v273 + v89)];
    if (v95[5]) {
      unsigned int v96 = v93;
    }
    else {
      unsigned int v96 = 0;
    }
    if (v96 >= *(&v247 + v89)) {
      int v97 = *(&v247 + v89);
    }
    else {
      int v97 = v96;
    }
    int v98 = v276[v89] & (-1 << (v93 - v94));
    int8x16_t v99 = &v257 + v89;
    int v100 = *v99 - v98;
    uint64_t v101 = 32 * v89;
    int8x16_t v102 = &v256[32 * v89];
    if (v235) {
      int v100 = 0;
    }
    int v103 = v99[2] - v98;
    if (v236) {
      int v103 = 0;
    }
    *int8x16_t v102 = v100;
    v102[1] = v103;
    int v104 = v99[4] - v98;
    if (v238) {
      int v104 = 0;
    }
    int v105 = v99[6] - v98;
    if (v237) {
      int v105 = 0;
    }
    v102[2] = v104;
    v102[3] = v105;
    int v106 = v99[8] - v98;
    if (v239) {
      int v106 = 0;
    }
    int v107 = v99[10] - v98;
    if (v241) {
      int v107 = 0;
    }
    v102[4] = v106;
    v102[5] = v107;
    int v108 = v99[12] - v98;
    if (v240) {
      int v108 = 0;
    }
    int v109 = v99[14] - v98;
    if (v242) {
      int v109 = 0;
    }
    v102[6] = v108;
    v102[7] = v109;
    char v110 = v88;
    uint64_t v111 = -1 << v93;
    *(&v247 + v89) = v97;
    unint64_t v112 = *((void *)v95 + 1);
    *((_DWORD *)&v246 + v89) = v98;
    unint64_t v113 = v112 >> v97;
    int v114 = ~v111;
    if (v113 <= 1) {
      unint64_t v115 = 1;
    }
    else {
      unint64_t v115 = v113;
    }
    uint64_t v116 = 2 * v275[v89];
    do
    {
      if (v116 != v91)
      {
        if (v97) {
          unint64_t v117 = *(unsigned int *)&v256[v101] / v115;
        }
        else {
          LODWORD(v117) = 0;
        }
        int8x16_t v118 = (int *)v244 + 7 * v89 + v92;
        *int8x16_t v118 = v117;
        if (v113 >= 2)
        {
          unint64_t v119 = *(unsigned int *)&v256[v101];
          if (v119)
          {
            if (v119 / v115 * v115 == v119 && ((v119 / v115) & 1) != 0)
            {
              if (v98 || v117 != 1)
              {
                if ((v243 | 2) != 3
                  || (uint64_t v121 = v99[v91], v122 = v253[v89 + 2], v121 != v122)
                  && ((v243 | 2) != 3 || v115 + v122 != v121))
                {
                  LODWORD(v117) = v117 - 1;
                  *int8x16_t v118 = v117;
                }
              }
              else
              {
                LODWORD(v117) = 1;
              }
            }
          }
        }
        if ((unint64_t)v117 >> v97 || v99[v91] == v114) {
          *int8x16_t v118 = ~(-1 << v97);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91 + 1) >= v43
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91) >= a4)
        {
          *int8x16_t v118 = 0;
        }
        ++v92;
      }
      v101 += 4;
      v91 += 2;
    }
    while (v91 != 16);
    char v88 = 1;
    uint64_t v89 = 1;
  }
  while ((v110 & 1) == 0);
  uint64_t result = v230 | v231;
  int8x16_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if (result == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v277;
    unsigned int v130 = v278;
    uint64_t v131 = v277 - 4;
    uint64_t v132 = v278 - 4;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= v43 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v257 + 2 * v127) >> 4;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      if (v129 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x40)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 4;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_289:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_293;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v257 + 2 * v127 + 1) >> 4;
        if (v132 <= 0x100)
        {
LABEL_293:
          if (v130 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x40)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 4;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return result;
      }
    }
  }
  unsigned int v147 = v273;
  char v148 = LOBYTE(v276[0]) | v273;
  if (v276[0] | v273)
  {
    char v148 = v273 - 2;
    if (v273 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v273 + 1;
      goto LABEL_404;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_404:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v274;
  if (v276[1] | v274)
  {
    char v169 = v274 - 2;
    if (v274 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v274 + 1;
      goto LABEL_410;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_410:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 62) >= 0xFFFFFFFFFFFFFFBFLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_427;
    }
LABEL_420:
    unsigned int v177 = v277;
    if (!v147) {
      goto LABEL_435;
    }
    goto LABEL_439;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x40) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_420;
  }
LABEL_427:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x40) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v277;
  if (!v147)
  {
LABEL_435:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v278;
      if (!v168) {
        goto LABEL_500;
      }
LABEL_447:
      unsigned int v192 = v250;
      if (v250 <= 0x100 && v250 && v167 - v126 + (v175 << 6) + (unint64_t)v250 <= 0x40)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v246) >> (v185 - v250));
        unint64_t v195 = v250;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_455;
    }
  }
LABEL_439:
  unsigned int v186 = v249;
  if (v249 <= 0x100 && v249 && v167 - v126 + (v175 << 6) + (unint64_t)v249 <= 0x40)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v246 >> (v177 - v249);
    unint64_t v189 = v249;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v278;
  if (v168) {
    goto LABEL_447;
  }
LABEL_500:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_447;
  }
LABEL_455:
  unint64_t v198 = v247;
  if (v247)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v275[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v248;
  if (v248)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v275[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 64 - v176;
  unsigned int v211 = (64 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x40)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x40)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v244 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x40)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v244[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_493:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x40)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_493;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return result;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int8x8_t a6, double a7, int8x8_t a8)
{
  uint64_t v312 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    BOOL v13 = (void *)(a1 + a2);
    *BOOL v13 = 0;
    v13[1] = 0;
    BOOL v14 = (void *)(a1 + 2 * a2);
    *BOOL v14 = 0;
    v14[1] = 0;
    uint64_t v15 = (void *)(a1 + a2 + 2 * a2);
LABEL_88:
    *uint64_t v15 = 0;
    v15[1] = 0;
    return result;
  }
  char v10 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v297, a5);
    }
    __int16 v273 = WORD2(v297);
    unsigned __int8 v287 = v297;
    unsigned __int8 v288 = v298;
    unsigned __int8 v293 = v300;
    unsigned __int8 v294 = v302;
    __int16 v291 = v301;
    __int16 v292 = v303;
    __int16 v283 = v305;
    unsigned __int8 v284 = v304;
    unsigned __int8 v285 = v306;
    __int16 v286 = v299;
    __int16 v282 = v307;
    uint64_t v17 = a3 + 8;
    unsigned __int8 v289 = v310;
    unsigned __int8 v290 = v308;
    __int16 v271 = v311;
    __int16 v272 = v309;
    if ((v10 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v17, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v17, (uint64_t)&v297, a5);
    }
    unsigned __int8 v278 = v298;
    unsigned __int8 v279 = v297;
    __int16 v266 = v299;
    __int16 v267 = WORD2(v297);
    __int16 v265 = v301;
    unsigned __int8 v280 = v302;
    unsigned __int8 v281 = v300;
    __int16 v264 = v303;
    __int16 v262 = v307;
    __int16 v263 = v305;
    unsigned __int8 v276 = v304;
    unsigned __int8 v277 = v308;
    uint64_t v18 = a3 + 16;
    unsigned __int8 v274 = v306;
    unsigned __int8 v275 = v310;
    __int16 v260 = v311;
    __int16 v261 = v309;
    if ((v10 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v18, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v18, (uint64_t)&v297, a5);
    }
    unsigned __int8 v19 = v297;
    unsigned __int8 v20 = v300;
    __int16 v258 = v299;
    __int16 v259 = WORD2(v297);
    unsigned __int8 v269 = v302;
    unsigned __int8 v270 = v298;
    __int16 v256 = v303;
    __int16 v257 = v301;
    unsigned __int8 v268 = v304;
    unsigned __int8 v21 = v306;
    __int16 v255 = v305;
    __int16 v23 = v307;
    unsigned __int8 v22 = v308;
    __int16 v24 = v309;
    unsigned __int8 v25 = v310;
    uint64_t v26 = a3 + 24;
    __int16 v27 = v311;
    if ((v10 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v26, (uint64_t)&v297, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v26, (uint64_t)&v297, a5);
    }
    *(_WORD *)(a1 + 8) = v19 | (unsigned __int16)(v259 << 8);
    __int16 v28 = v297;
    *(_WORD *)a1 = v287 | (unsigned __int16)(v273 << 8);
    __int16 v29 = WORD2(v297);
    __int16 v30 = v298;
    *(_WORD *)(a1 + 2) = v288 | (unsigned __int16)(v286 << 8);
    __int16 v31 = v299;
    __int16 v32 = v300;
    *(_WORD *)(a1 + 4) = v284 | (unsigned __int16)(v283 << 8);
    __int16 v33 = v301;
    __int16 v34 = v302;
    *(_WORD *)(a1 + 6) = v285 | (unsigned __int16)(v282 << 8);
    __int16 v35 = v303;
    *(_WORD *)(a1 + 10) = v270 | (unsigned __int16)(v258 << 8);
    __int16 v36 = v304;
    *(_WORD *)(a1 + 12) = v268 | (unsigned __int16)(v255 << 8);
    __int16 v37 = v305;
    *(_WORD *)(a1 + 14) = v21 | (unsigned __int16)(v23 << 8);
    __int16 v38 = v306;
    __int16 v39 = v307;
    unsigned int v40 = (_WORD *)(a1 + a2);
    *unsigned int v40 = v293 | (unsigned __int16)(v291 << 8);
    __int16 v41 = v308;
    __int16 v42 = v309;
    v40[1] = v294 | (unsigned __int16)(v292 << 8);
    __int16 v43 = v310;
    __int16 v44 = v28 | (v29 << 8);
    __int16 v45 = v311;
    v40[2] = v290 | (unsigned __int16)(v272 << 8);
    v40[3] = v289 | (unsigned __int16)(v271 << 8);
    __int16 v46 = v30 | (v31 << 8);
    v40[4] = v20 | (unsigned __int16)(v257 << 8);
    v40[5] = v269 | (unsigned __int16)(v256 << 8);
    __int16 v47 = v32 | (v33 << 8);
    v40[6] = v22 | (unsigned __int16)(v24 << 8);
    v40[7] = v25 | (unsigned __int16)(v27 << 8);
    int v48 = (_WORD *)(a1 + a2 + a2);
    *int v48 = v279 | (unsigned __int16)(v267 << 8);
    v48[1] = v278 | (unsigned __int16)(v266 << 8);
    v48[2] = v276 | (unsigned __int16)(v263 << 8);
    v48[3] = v274 | (unsigned __int16)(v262 << 8);
    v48[4] = v44;
    v48[5] = v46;
    v48[6] = v36 | (v37 << 8);
    v48[7] = v38 | (v39 << 8);
    unsigned int v49 = (_WORD *)((char *)v48 + a2);
    *unsigned int v49 = v281 | (unsigned __int16)(v265 << 8);
    v49[1] = v280 | (unsigned __int16)(v264 << 8);
    v49[2] = v277 | (unsigned __int16)(v261 << 8);
    v49[3] = v275 | (unsigned __int16)(v260 << 8);
    v49[4] = v47;
    v49[5] = v34 | (v35 << 8);
    v49[6] = v41 | (v42 << 8);
    uint64_t result = 32;
    v49[7] = v43 | (v45 << 8);
    return result;
  }
  if (a4 == 63)
  {
    int32x4_t v50 = *(int32x4_t *)a3;
    int32x4_t v51 = *(int32x4_t *)(a3 + 16);
    int32x4_t v52 = *(int32x4_t *)(a3 + 32);
    int32x4_t v53 = *(int32x4_t *)(a3 + 48);
    *(int32x4_t *)a1 = vuzp1q_s32(*(int32x4_t *)a3, v52);
    *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v50, v52);
    unsigned int v54 = (int32x4_t *)(a1 + 2 * a2);
    *unsigned int v54 = vuzp1q_s32(v51, v53);
    *(int32x4_t *)((char *)v54 + a2) = vuzp2q_s32(v51, v53);
    return 64;
  }
  if (a4 == 1)
  {
    int16x8_t v16 = vld1q_dup_s16((const __int16 *)a3);
    *(int16x8_t *)a1 = v16;
    *(int16x8_t *)(a1 + a2) = v16;
    *(int16x8_t *)(a1 + 2 * a2) = v16;
    *(int16x8_t *)(a1 + 3 * a2) = v16;
    return 2;
  }
  unint64_t v55 = 8 * (a3 & 7);
  unint64_t v56 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = v55 + 14;
  uint64_t v58 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v55;
  if (v55 >= 0x33) {
    v58 |= *(void *)(v56 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v59 = 4 * v58;
  uint32x2_t v60 = (uint32x2_t)vdup_n_s32(v59);
  a6.i32[0] = v59;
  a8.i32[0] = a4 >> 6;
  v61.i32[0] = vorr_s8(a6, a8).u32[0];
  v61.i32[1] = vshr_n_u32(v60, 5uLL).i32[1];
  int16x4_t v62 = (int16x4_t)vand_s8(v61, (int8x8_t)0x1F0000001FLL);
  v62.i8[1] = v62.i8[4];
  int16x4_t v63 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v60, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v63.i8[1] = v63.i8[4];
  unint64_t v64 = v55 + 30;
  unint64_t v65 = v57 >> 6;
  unint64_t v66 = v57 & 0x3E;
  uint64_t v67 = *(void *)(v56 + 8 * v65) >> v66;
  if (v66 >= 0x31) {
    v67 |= *(void *)(v56 + 8 * v65 + 8) << -(char)v66;
  }
  unint64_t v68 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v69 = (int8x16_t)vdupq_lane_s16(v62, 0);
  int8x16_t v70 = (int8x16_t)vdupq_lane_s16(v63, 0);
  v71.i64[0] = 0x303030303030303;
  v71.i64[1] = 0x303030303030303;
  int8x16_t v72 = vandq_s8(v69, v71);
  int8x16_t v73 = vbicq_s8(v70, vceqq_s8(v72, v71));
  v71.i64[0] = 0x202020202020202;
  v71.i64[1] = 0x202020202020202;
  int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v69.i8), (int8x8_t)0x4000400040004)))), v71);
  if (vmaxvq_s8(v74) < 1)
  {
    int v84 = 0;
    v85.i64[0] = -1;
    v85.i64[1] = -1;
    int8x16_t v86 = v73;
    int8x16_t v87 = v73;
    int8x16_t v88 = v73;
    v89.i64[0] = -1;
    v89.i64[1] = -1;
    int8x16_t v90 = v73;
    v91.i64[0] = -1;
    v91.i64[1] = -1;
    v92.i64[0] = -1;
    v92.i64[1] = -1;
  }
  else
  {
    int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
    int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
    unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
    v78.i64[0] = v77;
    v78.i64[1] = HIDWORD(v77);
    int64x2_t v79 = v78;
    unint64_t v80 = vaddvq_s64(v78);
    unint64_t v81 = v64 + v80;
    if (v80 <= 0x80 && v68 >= v81)
    {
      unint64_t v93 = v64 & 0x3E;
      int64x2_t v94 = vaddq_s64(vdupq_n_s64(v93), vzip1q_s64((int64x2_t)0, v79));
      int8x16_t v95 = (int64x2_t *)(v56 + ((v64 >> 3) & 8));
      int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v95, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95->i64[0], 0), (uint64x2_t)vnegq_s64(v94)));
      if (v93 + v80 < 0x81)
      {
        int v84 = 0;
      }
      else
      {
        int v84 = 0;
        int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v95[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v94))), v83);
      }
      unint64_t v64 = v81;
    }
    else
    {
      int8x16_t v83 = 0uLL;
      int v84 = 1;
    }
    int32x2_t v96 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
    v97.i64[0] = v96.u32[0];
    v97.i64[1] = v96.u32[1];
    int64x2_t v98 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v97));
    *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
    *(int32x2_t *)v98.i8 = vmovn_s64(v98);
    int8x16_t v99 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v98);
    int16x8_t v100 = (int16x8_t)vshlq_u32((uint32x4_t)v99, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    *(int16x4_t *)v100.i8 = vmovn_s32((int32x4_t)v100);
    int8x16_t v101 = (int8x16_t)vzip1q_s16((int16x8_t)v99, v100);
    *(int8x8_t *)v101.i8 = vzip1_s8(vmovn_s16((int16x8_t)v101), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v101, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v69.i8))))));
    v99.i64[0] = 0x101010101010101;
    v99.i64[1] = 0x101010101010101;
    int8x16_t v102 = vshlq_s8(v99, v74);
    v99.i64[0] = -1;
    v99.i64[1] = -1;
    v102.i64[0] = vqtbl1q_s8(vandq_s8(v101, vaddq_s8(v102, v99)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v103 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 0);
    int8x16_t v104 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 1);
    int8x16_t v105 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 2);
    int8x16_t v106 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v102.i8, 3);
    int8x16_t v90 = vsubq_s8(v73, v103);
    int8x16_t v88 = vsubq_s8(v73, v104);
    int8x16_t v87 = vsubq_s8(v73, v105);
    int8x16_t v86 = vsubq_s8(v73, v106);
    int8x16_t v92 = vceqzq_s8(v103);
    int8x16_t v91 = vceqzq_s8(v104);
    int8x16_t v89 = vceqzq_s8(v105);
    int8x16_t v85 = vceqzq_s8(v106);
  }
  v107.i64[0] = 0x808080808080808;
  v107.i64[1] = 0x808080808080808;
  int8x16_t v108 = 0uLL;
  int8x16_t v109 = vandq_s8(vextq_s8(vtstq_s8(v69, v107), (int8x16_t)0, 0xEuLL), v73);
  int8x16_t v110 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v109, v109));
  int8x16_t v111 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v110, (int16x8_t)v110));
  unint64_t v112 = vpaddq_s32((int32x4_t)v111, (int32x4_t)v111).u64[0];
  v113.i64[0] = v112;
  v113.i64[1] = HIDWORD(v112);
  int64x2_t v114 = v113;
  unint64_t v115 = vaddvq_s64(v113);
  unint64_t v116 = v64 + v115;
  if (v115 <= 0x80 && v68 >= v116)
  {
    unint64_t v118 = v64 & 0x3F;
    int64x2_t v119 = vaddq_s64(vdupq_n_s64(v118), vzip1q_s64((int64x2_t)0, v114));
    int8x16_t v120 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v108 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
    if (v118 + v115 >= 0x81) {
      int8x16_t v108 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), v108);
    }
    unint64_t v64 = v116;
  }
  else
  {
    int v84 = 1;
  }
  int v121 = v69.i8[0] & 3;
  if (v121 == 2)
  {
    BOOL v122 = v68 < v64 + 4;
    unint64_t v123 = v64 + 8;
    if (v68 >= v64 + 4) {
      v64 += 4;
    }
    if (v123 > v68 || v122) {
      int v84 = 1;
    }
    else {
      v64 += 4;
    }
  }
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v90, 0xEuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v126, v126));
  int8x16_t v128 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v127, (int16x8_t)v127));
  unint64_t v129 = vpaddq_s32((int32x4_t)v128, (int32x4_t)v128).u64[0];
  v130.i64[0] = v129;
  v130.i64[1] = HIDWORD(v129);
  int64x2_t v131 = v130;
  unint64_t v132 = vaddvq_s64(v130);
  unint64_t v133 = v64 + v132;
  if (v132 <= 0x80 && v68 >= v133)
  {
    unint64_t v136 = v64 & 0x3F;
    int64x2_t v137 = vaddq_s64(vdupq_n_s64(v136), vzip1q_s64((int64x2_t)0, v131));
    uint64_t v138 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v135 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v138, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138->i64[0], 0), (uint64x2_t)vnegq_s64(v137)));
    if (v136 + v132 >= 0x81) {
      int8x16_t v135 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v138[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v137))), v135);
    }
    unint64_t v64 = v133;
  }
  else
  {
    int v84 = 1;
    int8x16_t v135 = 0uLL;
  }
  int8x16_t v139 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v88, v88));
  int8x16_t v140 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v139, (int16x8_t)v139));
  unint64_t v141 = vpaddq_s32((int32x4_t)v140, (int32x4_t)v140).u64[0];
  v142.i64[0] = v141;
  v142.i64[1] = HIDWORD(v141);
  int64x2_t v143 = v142;
  unint64_t v144 = vaddvq_s64(v142);
  if (v144 < 0x81)
  {
    int32x2_t v145 = vzip1_s32(*(int32x2_t *)v140.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v140, v140, 8uLL));
    v146.i64[0] = v145.u32[0];
    v146.i64[1] = v145.u32[1];
    int64x2_t v147 = v146;
    int32x4_t v148 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v139.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v139, v139, 8uLL)));
    int16x8_t v149 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v88.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL)));
    unint64_t v150 = v64 + v144;
    if (v68 >= v64 + v144)
    {
      unint64_t v151 = v64 & 0x3F;
      int64x2_t v152 = vaddq_s64(vdupq_n_s64(v151), vzip1q_s64((int64x2_t)0, v143));
      int8x16_t v153 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
      int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v153, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153->i64[0], 0), (uint64x2_t)vnegq_s64(v152)));
      if (v151 + v144 >= 0x81) {
        int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v153[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v152))), v125);
      }
      unint64_t v64 = v150;
    }
    else
    {
      int v84 = 1;
    }
    int64x2_t v154 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v147));
    *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
    *(int32x2_t *)v154.i8 = vmovn_s64(v154);
    int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v154);
    int16x8_t v156 = (int16x8_t)vshlq_u32((uint32x4_t)v155, (uint32x4_t)vnegq_s32(v148));
    *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
    *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v156);
    int8x16_t v157 = (int8x16_t)vzip1q_s16(v155, v156);
    int8x16_t v158 = (int8x16_t)vshlq_u16((uint16x8_t)v157, (uint16x8_t)vnegq_s16(v149));
    *(int8x8_t *)v157.i8 = vmovn_s16((int16x8_t)v157);
    *(int8x8_t *)v158.i8 = vmovn_s16((int16x8_t)v158);
    int8x16_t v125 = vzip1q_s8(v157, v158);
  }
  else
  {
    int v84 = 1;
  }
  int8x16_t v159 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v87, v87));
  int8x16_t v160 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v159, (int16x8_t)v159));
  unint64_t v161 = vpaddq_s32((int32x4_t)v160, (int32x4_t)v160).u64[0];
  v162.i64[0] = v161;
  v162.i64[1] = HIDWORD(v161);
  int64x2_t v163 = v162;
  unint64_t v164 = vaddvq_s64(v162);
  int8x16_t v165 = 0uLL;
  if (v164 <= 0x80)
  {
    int32x2_t v167 = vzip1_s32(*(int32x2_t *)v160.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v160, v160, 8uLL));
    v168.i64[0] = v167.u32[0];
    v168.i64[1] = v167.u32[1];
    int64x2_t v169 = v168;
    int32x4_t v170 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v159.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v159, v159, 8uLL)));
    int16x8_t v171 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v87.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL)));
    unint64_t v172 = v64 + v164;
    if (v68 >= v64 + v164)
    {
      unint64_t v174 = v64 & 0x3F;
      int64x2_t v175 = vaddq_s64(vdupq_n_s64(v174), vzip1q_s64((int64x2_t)0, v163));
      int v176 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
      int8x16_t v173 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v176, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176->i64[0], 0), (uint64x2_t)vnegq_s64(v175)));
      if (v174 + v164 >= 0x81) {
        int8x16_t v173 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v176[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v175)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v176[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v175))), v173);
      }
      unint64_t v64 = v172;
    }
    else
    {
      int8x16_t v173 = 0uLL;
      int v84 = 1;
    }
    int64x2_t v177 = (int64x2_t)vshlq_u64((uint64x2_t)v173, (uint64x2_t)vnegq_s64(v169));
    *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v173);
    *(int32x2_t *)v177.i8 = vmovn_s64(v177);
    int16x8_t v178 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v177);
    int16x8_t v179 = (int16x8_t)vshlq_u32((uint32x4_t)v178, (uint32x4_t)vnegq_s32(v170));
    *(int16x4_t *)v178.i8 = vmovn_s32((int32x4_t)v178);
    *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v179);
    int8x16_t v180 = (int8x16_t)vzip1q_s16(v178, v179);
    int8x16_t v181 = (int8x16_t)vshlq_u16((uint16x8_t)v180, (uint16x8_t)vnegq_s16(v171));
    *(int8x8_t *)v180.i8 = vmovn_s16((int16x8_t)v180);
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    int8x16_t v166 = vzip1q_s8(v180, v181);
  }
  else
  {
    int v84 = 1;
    int8x16_t v166 = 0uLL;
  }
  int8x16_t v182 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v86, v86));
  int8x16_t v183 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v182, (int16x8_t)v182));
  unint64_t v184 = vpaddq_s32((int32x4_t)v183, (int32x4_t)v183).u64[0];
  v185.i64[0] = v184;
  v185.i64[1] = HIDWORD(v184);
  int64x2_t v186 = v185;
  unint64_t v187 = vaddvq_s64(v185);
  if (v187 > 0x80) {
    goto LABEL_87;
  }
  if (v68 >= v64 + v187)
  {
    int64x2_t v188 = vaddq_s64(vdupq_n_s64(v64 & 0x3F), vzip1q_s64((int64x2_t)0, v186));
    unint64_t v189 = (int64x2_t *)(v56 + 8 * (v64 >> 6));
    int8x16_t v165 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v189, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v188)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v189->i64[0], 0), (uint64x2_t)vnegq_s64(v188)));
    if ((v64 & 0x3F) + v187 >= 0x81) {
      int8x16_t v165 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v189[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v188)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v189[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v188))), v165);
    }
    v64 += v187;
  }
  else
  {
    int v84 = 1;
  }
  if (v84 || (uint64_t result = (a4 & 0x3F) + 1, v68 + 8 * result - v64 - 256 >= 9) || v121 == 2)
  {
LABEL_87:
    uint64_t result = 0;
    v297 |= 255 << ((8 * &v297) & 0x30);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    unint64_t v190 = (void *)(a1 + a2);
    unint64_t v191 = (void *)(a1 + 2 * a2);
    *unint64_t v190 = 0;
    v190[1] = 0;
    uint64_t v15 = (void *)(a1 + a2 + 2 * a2);
    *unint64_t v191 = 0;
    v191[1] = 0;
    goto LABEL_88;
  }
  int32x2_t v192 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x2_t v193 = vzip1_s32(*(int32x2_t *)v128.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL));
  v194.i64[0] = v192.u32[0];
  v194.i64[1] = v192.u32[1];
  int64x2_t v195 = v194;
  v194.i64[0] = v193.u32[0];
  v194.i64[1] = v193.u32[1];
  int16x4_t v196 = (int16x4_t)vextq_s8(v127, v127, 8uLL).u64[0];
  int64x2_t v197 = (int64x2_t)vshlq_u64((uint64x2_t)v108, (uint64x2_t)vnegq_s64(v195));
  int64x2_t v198 = (int64x2_t)vshlq_u64((uint64x2_t)v135, (uint64x2_t)vnegq_s64(v194));
  *(int32x2_t *)v108.i8 = vmovn_s64((int64x2_t)v108);
  *(int32x2_t *)v197.i8 = vmovn_s64(v197);
  *(int32x2_t *)v135.i8 = vmovn_s64((int64x2_t)v135);
  *(int32x2_t *)v198.i8 = vmovn_s64(v198);
  int16x8_t v199 = (int16x8_t)vzip1q_s32((int32x4_t)v108, (int32x4_t)v197);
  int16x8_t v200 = (int16x8_t)vzip1q_s32((int32x4_t)v135, (int32x4_t)v198);
  int16x8_t v201 = (int16x8_t)vshlq_u32((uint32x4_t)v199, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v110.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  int16x8_t v202 = (int16x8_t)vshlq_u32((uint32x4_t)v200, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v127.i8, v196))));
  *(int16x4_t *)v199.i8 = vmovn_s32((int32x4_t)v199);
  *(int16x4_t *)v201.i8 = vmovn_s32((int32x4_t)v201);
  *(int16x4_t *)v200.i8 = vmovn_s32((int32x4_t)v200);
  *(int16x4_t *)v202.i8 = vmovn_s32((int32x4_t)v202);
  int8x16_t v203 = (int8x16_t)vzip1q_s16(v199, v201);
  int8x16_t v204 = (int8x16_t)vzip1q_s16(v200, v202);
  int8x16_t v205 = (int8x16_t)vshlq_u16((uint16x8_t)v203, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v109.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v109, v109, 8uLL)))));
  int8x16_t v206 = (int8x16_t)vshlq_u16((uint16x8_t)v204, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v126.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  *(int8x8_t *)v203.i8 = vmovn_s16((int16x8_t)v203);
  *(int8x8_t *)v205.i8 = vmovn_s16((int16x8_t)v205);
  *(int8x8_t *)v204.i8 = vmovn_s16((int16x8_t)v204);
  *(int8x8_t *)v206.i8 = vmovn_s16((int16x8_t)v206);
  v196.i32[0] = v67;
  v207.i64[0] = 0x808080808080808;
  v207.i64[1] = 0x808080808080808;
  int8x16_t v208 = vzip1q_s8(v203, v205);
  v205.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v205.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v209 = vsubq_s8(v107, v109);
  int8x16_t v210 = vzip1q_s8(v204, v206);
  v206.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v206.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v200.i8 = vzip1_s32(*(int32x2_t *)v183.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v183, v183, 8uLL));
  v211.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v211.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v212.i64[0] = 0x808080808080808;
  v212.i64[1] = 0x808080808080808;
  v196.i8[1] = BYTE1(v67);
  int8x16_t v213 = vaddq_s8(v109, v205);
  int8x16_t v214 = vshlq_s8(v208, v209);
  int8x16_t v215 = vaddq_s8(v126, v206);
  int8x16_t v216 = vshlq_s8(v210, vsubq_s8(v207, v126));
  int8x16_t v217 = vshlq_s8(v166, vsubq_s8(v207, v87));
  v194.i64[0] = v200.u32[0];
  v194.i64[1] = v200.u32[1];
  int16x8_t v218 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v86.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL)));
  int8x16_t v219 = vaddq_s8(v86, v211);
  int8x16_t v220 = vsubq_s8(v212, v86);
  int8x16_t v221 = (int8x16_t)vdupq_lane_s16(v196, 0);
  int8x16_t v222 = vshlq_s8(v214, v213);
  int8x16_t v223 = vshlq_s8(v216, v215);
  int64x2_t v224 = (int64x2_t)vshlq_u64((uint64x2_t)v165, (uint64x2_t)vnegq_s64(v194));
  *(int32x2_t *)v216.i8 = vmovn_s64((int64x2_t)v165);
  *(int32x2_t *)v224.i8 = vmovn_s64(v224);
  int16x8_t v225 = (int16x8_t)vzip1q_s32((int32x4_t)v216, (int32x4_t)v224);
  int16x8_t v226 = (int16x8_t)vshlq_u32((uint32x4_t)v225, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v182.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v182, v182, 8uLL)))));
  *(int16x4_t *)v225.i8 = vmovn_s32((int32x4_t)v225);
  *(int16x4_t *)v226.i8 = vmovn_s32((int32x4_t)v226);
  int8x16_t v227 = (int8x16_t)vzip1q_s16(v225, v226);
  int8x16_t v228 = (int8x16_t)vshlq_u16((uint16x8_t)v227, (uint16x8_t)vnegq_s16(v218));
  *(int8x8_t *)v227.i8 = vmovn_s16((int16x8_t)v227);
  *(int8x8_t *)v228.i8 = vmovn_s16((int16x8_t)v228);
  int8x16_t v229 = vaddq_s8(vandq_s8(v222, v92), v223);
  int8x16_t v230 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v222.i8, 0);
  int8x16_t v231 = vsubq_s8(v229, vandq_s8(v92, v230));
  int8x16_t v232 = vsubq_s8(vshlq_s8(vshlq_s8(v125, vsubq_s8(v207, v88)), vaddq_s8(v88, v206)), vandq_s8(v91, v230));
  int8x16_t v233 = vsubq_s8(vshlq_s8(v217, vaddq_s8(v87, v206)), vandq_s8(v89, v230));
  int8x16_t v234 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8(v227, v228), v220), v219), vandq_s8(v85, v230));
  v235.i64[0] = 0x101010101010101;
  v235.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v72, v235)))
  {
    int8x16_t v236 = vandq_s8(v69, v235);
    int8x16_t v237 = v231;
    v237.i16[0] = v231.i16[7];
    v237.i16[7] = v231.i16[0];
    int8x16_t v238 = vnegq_s8(v236);
    int8x16_t v239 = vbslq_s8(v238, v237, v231);
    int8x16_t v240 = vaddq_s8(v239, vandq_s8(vqtbl1q_s8(v239, (int8x16_t)xmmword_242EA7480), v238));
    int8x16_t v231 = vaddq_s8(v240, vandq_s8(vqtbl1q_s8(v240, (int8x16_t)xmmword_242EA7490), v238));
    int8x16_t v241 = vaddq_s8(vandq_s8(vqtbl1q_s8(v232, (int8x16_t)xmmword_242EA74A0), v238), v232);
    int8x16_t v232 = vaddq_s8(vandq_s8(vqtbl1q_s8(v241, (int8x16_t)xmmword_242EA74B0), v238), v241);
    int8x16_t v242 = vaddq_s8(vandq_s8(vqtbl1q_s8(v233, (int8x16_t)xmmword_242EA74C0), v238), v233);
    int8x16_t v233 = vaddq_s8(vandq_s8(vqtbl1q_s8(v242, (int8x16_t)xmmword_242EA74D0), v238), v242);
    int8x16_t v243 = vaddq_s8(vandq_s8(vqtbl1q_s8(v234, (int8x16_t)xmmword_242EA74E0), v238), v234);
    int8x16_t v234 = vaddq_s8(vandq_s8(vqtbl1q_s8(v243, (int8x16_t)xmmword_242EA74F0), v238), v243);
  }
  int8x16_t v244 = vaddq_s8(v231, v221);
  int8x16_t v245 = vaddq_s8(v232, v221);
  int8x16_t v246 = vaddq_s8(v233, v221);
  int8x16_t v247 = vaddq_s8(v234, v221);
  v248.i64[0] = 0x1010101010101010;
  v248.i64[1] = 0x1010101010101010;
  int8x16_t v249 = vceqzq_s8(vandq_s8(v69, v248));
  int32x4_t v250 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v244, (int8x16_t)xmmword_242EA7500), v249), v244);
  int32x4_t v251 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v245, (int8x16_t)xmmword_242EA7500), v249), v245);
  int32x4_t v252 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v246, (int8x16_t)xmmword_242EA7500), v249), v246);
  int32x4_t v253 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v247, (int8x16_t)xmmword_242EA7500), v249), v247);
  *(int32x4_t *)a1 = vuzp1q_s32(v250, v252);
  *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v250, v252);
  int v254 = (int32x4_t *)(a1 + 2 * a2);
  *int v254 = vuzp1q_s32(v251, v253);
  *(int32x4_t *)((char *)v254 + a2) = vuzp2q_s32(v251, v253);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  BOOL v13 = (int32x4_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int16x8_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v16, v13 + 1, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int16x8_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  unsigned __int8 v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v21, (int32x4_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    unsigned __int8 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *unsigned __int8 v21 = 0;
    unsigned __int8 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v25, (int32x4_t *)((char *)v13 + v20 + 16), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned __int8 v25 = 0;
LABEL_35:
  uint64_t v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v26, (int32x4_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *uint64_t v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v30, (int32x4_t *)((char *)v13 + 8 * a2 + 16), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  __int16 v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v31, (int32x4_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    __int16 v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *__int16 v31 = 0;
    __int16 v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      *__int16 v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v35, (int32x4_t *)((char *)v13 + 12 * a2 + 16), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  uint64_t v10 = a2
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1, 32, a2, *a3, a4, a5, a6, a7);
  uint64_t v14 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 16, 32, v10, a3[1], a4, v11, v12, v13);
  uint64_t v18 = v14
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 128, 32, v14, a3[2], a4, v15, v16, v17);
  uint64_t v22 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 144, 32, v18, a3[3], a4, v19, v20, v21);
  uint64_t v26 = v22
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 256, 32, v22, a3[4], a4, v23, v24, v25);
  uint64_t v30 = v26
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 272, 32, v26, a3[5], a4, v27, v28, v29);
  uint64_t v34 = v30
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 384, 32, v30, a3[6], a4, v31, v32, v33);
  unsigned int v38 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 400, 32, v34, v38, a4, v35, v36, v37);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(int64x2_t *a1, uint64_t a2, int64x2_t *a3, unsigned int a4)
{
  switch(a4)
  {
    case 0x7Fu:
      int64x2_t v11 = *a3;
      int64x2_t v12 = a3[1];
      int64x2_t v13 = a3[2];
      int64x2_t v14 = a3[3];
      int64x2_t v15 = a3[4];
      int64x2_t v16 = a3[5];
      int64x2_t v17 = a3[6];
      int64x2_t v18 = a3[7];
      int8x8_t v19 = (int64x2_t *)((char *)a1 + a2);
      *a1 = vzip1q_s64(*a3, v12);
      a1[1] = vzip1q_s64(v15, v16);
      double v20 = (int64x2_t *)((char *)a1 + 2 * a2);
      *int8x8_t v19 = vzip2q_s64(v11, v12);
      v19[1] = vzip2q_s64(v15, v16);
      *double v20 = vzip1q_s64(v13, v14);
      v20[1] = vzip1q_s64(v17, v18);
      int8x8_t v21 = (int64x2_t *)((char *)v20 + a2);
      *int8x8_t v21 = vzip2q_s64(v13, v14);
      v21[1] = vzip2q_s64(v17, v18);
      return 128;
    case 3u:
      float32x4_t v22 = vld1q_dup_f32((const float *)a3->i32);
      *a1 = (int64x2_t)v22;
      a1[1] = (int64x2_t)v22;
      int8x8_t v23 = (float32x4_t *)&a1->i8[a2];
      *int8x8_t v23 = v22;
      v23[1] = v22;
      double v24 = (float32x4_t *)((char *)a1 + 2 * a2);
      *double v24 = v22;
      v24[1] = v22;
      int8x8_t v25 = (float32x4_t *)((char *)a1 + 2 * a2 + a2);
      *int8x8_t v25 = v22;
      v25[1] = v22;
      return 4;
    case 0u:
      uint64_t result = 0;
      long long v7 = 0uLL;
      *a1 = 0u;
      a1[1] = 0u;
      BOOL v8 = &a1->i8[a2];
      *(_OWORD *)BOOL v8 = 0u;
      *((_OWORD *)v8 + 1) = 0u;
      BOOL v9 = &a1->i8[2 * a2];
      *(_OWORD *)BOOL v9 = 0u;
      *((_OWORD *)v9 + 1) = 0u;
      uint64_t v10 = &a1->i8[2 * a2 + a2];
LABEL_147:
      *(_OWORD *)uint64_t v10 = v7;
      *((_OWORD *)v10 + 1) = v7;
      return result;
  }
  unsigned __int8 v320 = 0;
  unint64_t v317 = 8 * (a3 & 7);
  unint64_t v318 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v319 = v317 | 0x400;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v322, (uint64_t)v327, (float *)v321.i32, &v317, a4);
  v27.i64[0] = 0x303030303030303;
  v27.i64[1] = 0x303030303030303;
  int8x16_t v28 = vandq_s8(v322, v27);
  int8x16_t v29 = vbicq_s8(v327[0], vceqq_s8(v28, v27));
  v327[0] = v29;
  int8x16_t v323 = v29;
  int8x16_t v324 = v29;
  int8x16_t v325 = v29;
  int8x16_t v326 = v29;
  v30.i64[0] = 0x202020202020202;
  v30.i64[1] = 0x202020202020202;
  int8x16_t v31 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v322.i8), (int16x4_t)0x4000400040004)), v30);
  unint64_t v32 = v317;
  int8x16_t v316 = v28;
  if (vmaxvq_s8(v31) < 1)
  {
    v45.i64[0] = -1;
    v45.i64[1] = -1;
    v46.i64[0] = -1;
    v46.i64[1] = -1;
    v47.i64[0] = -1;
    v47.i64[1] = -1;
    v48.i64[0] = -1;
    v48.i64[1] = -1;
  }
  else
  {
    int8x16_t v33 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v31, v31));
    int8x16_t v34 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v33, (int16x8_t)v33));
    unint64_t v35 = vpaddq_s32((int32x4_t)v34, (int32x4_t)v34).u64[0];
    v36.i64[0] = v35;
    v36.i64[1] = HIDWORD(v35);
    int64x2_t v37 = v36;
    unint64_t v38 = vaddvq_s64(v36);
    unint64_t v39 = v38;
    unint64_t v40 = v317 + v38;
    if (v319) {
      BOOL v41 = v319 >= v40;
    }
    else {
      BOOL v41 = 1;
    }
    int v42 = !v41;
    if (v38 <= 0x80 && v42 == 0)
    {
      v26.i64[0] = 63;
      unsigned int v49 = (int64x2_t *)(v318 + 8 * (v317 >> 6));
      int64x2_t v50 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v317, v26).i64[0], 0), vzip1q_s64((int64x2_t)0, v37));
      int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v49, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v50)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v49->i64[0], 0), (uint64x2_t)vnegq_s64(v50)));
      if ((v317 & 0x3F) + v39 >= 0x81) {
        int8x16_t v44 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v49[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v50)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v49[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v50))), v44);
      }
      unint64_t v32 = v40;
    }
    else
    {
      unsigned __int8 v320 = 1;
      int8x16_t v44 = 0uLL;
    }
    int32x2_t v51 = vzip1_s32(*(int32x2_t *)v34.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL));
    v52.i64[0] = v51.u32[0];
    v52.i64[1] = v51.u32[1];
    int64x2_t v53 = (int64x2_t)vshlq_u64((uint64x2_t)v44, (uint64x2_t)vnegq_s64(v52));
    *(int32x2_t *)v44.i8 = vmovn_s64((int64x2_t)v44);
    *(int32x2_t *)v53.i8 = vmovn_s64(v53);
    int16x8_t v54 = (int16x8_t)vzip1q_s32((int32x4_t)v44, (int32x4_t)v53);
    int16x8_t v55 = (int16x8_t)vshlq_u32((uint32x4_t)v54, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL)))));
    *(int16x4_t *)v54.i8 = vmovn_s32((int32x4_t)v54);
    *(int16x4_t *)v55.i8 = vmovn_s32((int32x4_t)v55);
    int8x16_t v56 = (int8x16_t)vzip1q_s16(v54, v55);
    int8x16_t v57 = (int8x16_t)vshlq_u16((uint16x8_t)v56, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v31.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v31, v31, 8uLL)))));
    *(int8x8_t *)v56.i8 = vmovn_s16((int16x8_t)v56);
    *(int8x8_t *)v57.i8 = vmovn_s16((int16x8_t)v57);
    int8x16_t v58 = vzip1q_s8(v56, v57);
    v57.i64[0] = 0x101010101010101;
    v57.i64[1] = 0x101010101010101;
    int8x16_t v59 = vshlq_s8(v57, v31);
    v57.i64[0] = -1;
    v57.i64[1] = -1;
    int32x4_t v60 = (int32x4_t)vqtbl1q_s8(vandq_s8(v58, vaddq_s8(v59, v57)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v61 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v60.i8, 0);
    int8x16_t v62 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v60.i8, 1);
    int8x16_t v63 = (int8x16_t)vdupq_laneq_s32(v60, 2);
    int8x16_t v64 = (int8x16_t)vdupq_laneq_s32(v60, 3);
    int8x16_t v323 = vsubq_s8(v323, v61);
    int8x16_t v324 = vsubq_s8(v324, v62);
    int8x16_t v325 = vsubq_s8(v325, v63);
    int8x16_t v326 = vsubq_s8(v326, v64);
    int8x16_t v48 = vceqzq_s8(v61);
    int8x16_t v47 = vceqzq_s8(v62);
    int8x16_t v46 = vceqzq_s8(v63);
    int8x16_t v45 = vceqzq_s8(v64);
  }
  v65.i64[0] = 0x808080808080808;
  v65.i64[1] = 0x808080808080808;
  int8x16_t v66 = 0uLL;
  int8x16_t v67 = vandq_s8(vextq_s8(vtstq_s8(v322, v65), (int8x16_t)0, 0xCuLL), v29);
  int8x16_t v68 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int8x16_t v69 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v68, (int16x8_t)v68));
  unint64_t v70 = vpaddq_s32((int32x4_t)v69, (int32x4_t)v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  if (v319) {
    BOOL v74 = v319 >= v32 + v73;
  }
  else {
    BOOL v74 = 1;
  }
  int v75 = !v74;
  if (v73 <= 0x80 && v75 == 0)
  {
    int64x2_t v77 = vaddq_s64(vdupq_n_s64(v32 & 0x3F), vzip1q_s64((int64x2_t)0, v72));
    int64x2_t v78 = (int64x2_t *)(v318 + 8 * (v32 >> 6));
    int8x16_t v66 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v78, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v78->i64[0], 0), (uint64x2_t)vnegq_s64(v77)));
    if ((v32 & 0x3F) + v73 >= 0x81) {
      int8x16_t v66 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v78[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v78[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v77))), v66);
    }
    v32 += v73;
  }
  else
  {
    unsigned __int8 v320 = 1;
  }
  int v79 = v322.i8[0] & 3;
  int8x16_t v314 = v45;
  int8x16_t v315 = v48;
  int8x16_t v312 = v47;
  int8x16_t v313 = v46;
  if (v79 == 2)
  {
    unint64_t v80 = v32 + 4;
    if (v319)
    {
      if (v319 < v80)
      {
        unsigned __int8 v320 = 1;
LABEL_45:
        unsigned __int8 v320 = 1;
        goto LABEL_46;
      }
      unint64_t v81 = v32 + 8;
      v32 += 4;
      if (v319 < v81) {
        goto LABEL_45;
      }
      unint64_t v80 = v32;
    }
    unint64_t v32 = v80 + 4;
  }
LABEL_46:
  int8x16_t v82 = 0uLL;
  int8x16_t v83 = vextq_s8((int8x16_t)0, v323, 0xCuLL);
  int8x16_t v84 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v83, v83));
  int8x16_t v85 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v84, (int16x8_t)v84));
  unint64_t v86 = vpaddq_s32((int32x4_t)v85, (int32x4_t)v85).u64[0];
  v87.i64[0] = v86;
  v87.i64[1] = HIDWORD(v86);
  int64x2_t v88 = v87;
  unint64_t v89 = vaddvq_s64(v87);
  unint64_t v90 = v32 + v89;
  if (v319) {
    BOOL v91 = v319 >= v90;
  }
  else {
    BOOL v91 = 1;
  }
  int v92 = !v91;
  if (v89 > 0x80 || v92)
  {
    int v97 = 1;
    unint64_t v95 = v318;
  }
  else
  {
    unint64_t v93 = v32 & 0x3F;
    int64x2_t v94 = vaddq_s64(vdupq_n_s64(v93), vzip1q_s64((int64x2_t)0, v88));
    unint64_t v95 = v318;
    int32x2_t v96 = (int64x2_t *)(v318 + 8 * (v32 >> 6));
    int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v94)));
    if (v93 + v89 >= 0x81) {
      int8x16_t v82 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v94)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v94))), v82);
    }
    int v97 = v320;
    unint64_t v32 = v90;
  }
  int8x16_t v98 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v323, v323));
  int8x16_t v99 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v98, (int16x8_t)v98));
  unint64_t v100 = vpaddq_s32((int32x4_t)v99, (int32x4_t)v99).u64[0];
  v101.i64[0] = v100;
  v101.i64[1] = HIDWORD(v100);
  int64x2_t v102 = v101;
  unint64_t v103 = vaddvq_s64(v101);
  unint64_t v104 = v32 + v103;
  if (v319) {
    BOOL v105 = v319 >= v104;
  }
  else {
    BOOL v105 = 1;
  }
  char v106 = !v105;
  int8x16_t v107 = 0uLL;
  if (v103 > 0x80 || (v106 & 1) != 0)
  {
    int v97 = 1;
    unint64_t v104 = v32;
    int8x16_t v111 = 0uLL;
  }
  else
  {
    unint64_t v108 = v32 & 0x3F;
    int64x2_t v109 = vaddq_s64(vdupq_n_s64(v108), vzip1q_s64((int64x2_t)0, v102));
    int8x16_t v110 = (int64x2_t *)(v95 + 8 * (v32 >> 6));
    int8x16_t v111 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v110, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
    if (v108 + v103 >= 0x81) {
      int8x16_t v111 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v110[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), v111);
    }
  }
  int8x16_t v112 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v324, v324));
  int8x16_t v113 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v112, (int16x8_t)v112));
  unint64_t v114 = vpaddq_s32((int32x4_t)v113, (int32x4_t)v113).u64[0];
  v115.i64[0] = v114;
  v115.i64[1] = HIDWORD(v114);
  int64x2_t v116 = v115;
  unint64_t v117 = vaddvq_s64(v115);
  unint64_t v118 = v117;
  unint64_t v119 = v104 + v117;
  if (v319) {
    BOOL v120 = v319 >= v119;
  }
  else {
    BOOL v120 = 1;
  }
  char v121 = !v120;
  if (v117 > 0x80 || (v121 & 1) != 0)
  {
    int v97 = 1;
    unint64_t v119 = v104;
  }
  else
  {
    unint64_t v122 = v104 & 0x3F;
    int64x2_t v123 = vaddq_s64(vdupq_n_s64(v122), vzip1q_s64((int64x2_t)0, v116));
    int8x16_t v124 = (int64x2_t *)(v95 + 8 * (v104 >> 6));
    int8x16_t v107 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v124, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v123)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v124->i64[0], 0), (uint64x2_t)vnegq_s64(v123)));
    if (v122 + v118 >= 0x81) {
      int8x16_t v107 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v124[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v123)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v124[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v123))), v107);
    }
  }
  unint64_t v125 = v119 + v118;
  if (v319) {
    BOOL v126 = v319 >= v125;
  }
  else {
    BOOL v126 = 1;
  }
  char v127 = !v126;
  int8x16_t v128 = 0uLL;
  if (v118 > 0x80 || (v127 & 1) != 0)
  {
    int v97 = 1;
    unint64_t v125 = v119;
    int8x16_t v132 = 0uLL;
  }
  else
  {
    unint64_t v129 = v119 & 0x3F;
    int64x2_t v130 = vaddq_s64(vdupq_n_s64(v129), vzip1q_s64((int64x2_t)0, v116));
    int64x2_t v131 = (int64x2_t *)(v95 + 8 * (v119 >> 6));
    int8x16_t v132 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v131, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131->i64[0], 0), (uint64x2_t)vnegq_s64(v130)));
    if (v129 + v118 >= 0x81) {
      int8x16_t v132 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v131[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v130))), v132);
    }
  }
  int8x16_t v133 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v325, v325));
  int8x16_t v134 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v133, (int16x8_t)v133));
  unint64_t v135 = vpaddq_s32((int32x4_t)v134, (int32x4_t)v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  unint64_t v139 = v138;
  unint64_t v140 = v125 + v138;
  if (v319) {
    BOOL v141 = v319 >= v140;
  }
  else {
    BOOL v141 = 1;
  }
  char v142 = !v141;
  if (v138 > 0x80 || (v142 & 1) != 0)
  {
    int v97 = 1;
    unint64_t v140 = v125;
  }
  else
  {
    unint64_t v143 = v125 & 0x3F;
    int64x2_t v144 = vaddq_s64(vdupq_n_s64(v143), vzip1q_s64((int64x2_t)0, v137));
    int32x2_t v145 = (int64x2_t *)(v95 + 8 * (v125 >> 6));
    int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v145, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v144)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v145->i64[0], 0), (uint64x2_t)vnegq_s64(v144)));
    if (v143 + v139 >= 0x81) {
      int8x16_t v128 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v145[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v144)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v145[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v144))), v128);
    }
  }
  unint64_t v146 = v140 + v139;
  if (v319) {
    BOOL v147 = v319 >= v146;
  }
  else {
    BOOL v147 = 1;
  }
  char v148 = !v147;
  int8x16_t v149 = 0uLL;
  if (v139 > 0x80 || (v148 & 1) != 0)
  {
    int v97 = 1;
    unint64_t v146 = v140;
    int8x16_t v153 = 0uLL;
  }
  else
  {
    unint64_t v150 = v140 & 0x3F;
    int64x2_t v151 = vaddq_s64(vdupq_n_s64(v150), vzip1q_s64((int64x2_t)0, v137));
    int64x2_t v152 = (int64x2_t *)(v95 + 8 * (v140 >> 6));
    int8x16_t v153 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v152, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152->i64[0], 0), (uint64x2_t)vnegq_s64(v151)));
    if (v150 + v139 >= 0x81) {
      int8x16_t v153 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v152[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v151))), v153);
    }
  }
  int8x16_t v154 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v326, v326));
  int8x16_t v155 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v154, (int16x8_t)v154));
  unint64_t v156 = vpaddq_s32((int32x4_t)v155, (int32x4_t)v155).u64[0];
  v157.i64[0] = v156;
  v157.i64[1] = HIDWORD(v156);
  int64x2_t v158 = v157;
  unint64_t v159 = vaddvq_s64(v157);
  unint64_t v160 = v159;
  unint64_t v161 = v146 + v159;
  if (v319) {
    BOOL v162 = v319 >= v161;
  }
  else {
    BOOL v162 = 1;
  }
  char v163 = !v162;
  if (v159 > 0x80 || (v163 & 1) != 0)
  {
    int v97 = 1;
    unint64_t v161 = v146;
  }
  else
  {
    unint64_t v164 = v146 & 0x3F;
    int64x2_t v165 = vaddq_s64(vdupq_n_s64(v164), vzip1q_s64((int64x2_t)0, v158));
    int8x16_t v166 = (int64x2_t *)(v95 + 8 * (v146 >> 6));
    int8x16_t v149 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v166, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v165)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v166->i64[0], 0), (uint64x2_t)vnegq_s64(v165)));
    if (v164 + v160 >= 0x81) {
      int8x16_t v149 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v166[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v165)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v166[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v165))), v149);
    }
  }
  unint64_t v167 = v161 + v160;
  if (v319) {
    BOOL v168 = v319 >= v167;
  }
  else {
    BOOL v168 = 1;
  }
  char v169 = !v168;
  if (v160 > 0x80 || (v169 & 1) != 0) {
    goto LABEL_139;
  }
  int64x2_t v170 = vaddq_s64(vdupq_n_s64(v161 & 0x3F), vzip1q_s64((int64x2_t)0, v158));
  int16x8_t v171 = (int64x2_t *)(v95 + 8 * (v161 >> 6));
  int8x16_t v172 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v171, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v170)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v171->i64[0], 0), (uint64x2_t)vnegq_s64(v170)));
  if ((v161 & 0x3F) + v160 >= 0x81) {
    int8x16_t v172 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v171[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v170)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v171[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v170))), v172);
  }
  if (v97 || v319 + 8 * result - v167 - 1024 >= 9 || v79 == 2)
  {
LABEL_139:
    uint64_t v173 = (8 * (&vars0 - 100)) & 0x20;
    uint64_t v174 = v328 | (255 << v173);
    uint64_t v328 = v174;
    unint64_t v175 = (32 * ((((unint64_t)&v328 + 4) >> 2) & 1)) | 8;
    unint64_t v176 = (((32 * ((((unint64_t)&v328 + 4) >> 2) & 1)) | 0x10) - v173) | 8;
    if (v175 - v173 > 0x18) {
      unint64_t v176 = v175 - v173 + 8;
    }
    if (v176 <= 0x20)
    {
      if (v175 - v173 <= 0x18) {
        LOBYTE(v175) = (32 * ((((unint64_t)&v328 + 4) & 4) != 0)) | 0x10;
      }
      uint64_t v177 = v174 | (255 << v175);
      uint64_t v328 = v177;
      uint64_t v178 = ((_BYTE)v175 + 8) & 0x38;
      if ((unint64_t)(v178 - v173 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v328 = v177 | (255 << v178);
      }
    }
    uint64_t result = 0;
    int16x8_t v179 = &a1->i8[a2];
    long long v7 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    int8x16_t v180 = &a1->i8[2 * a2];
    *(_OWORD *)int16x8_t v179 = 0u;
    *((_OWORD *)v179 + 1) = 0u;
    uint64_t v10 = &a1->i8[2 * a2 + a2];
    *(_OWORD *)int8x16_t v180 = 0u;
    *((_OWORD *)v180 + 1) = 0u;
    goto LABEL_147;
  }
  int32x2_t v181 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL));
  int32x2_t v182 = vzip1_s32(*(int32x2_t *)v113.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v113, v113, 8uLL));
  uint16x4_t v183 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v68, v68, 8uLL));
  int32x4_t v184 = (int32x4_t)vextq_s8(v112, v112, 8uLL);
  uint16x4_t v185 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v112.i8, *(int16x4_t *)v184.i8);
  v186.i64[0] = v181.u32[0];
  v186.i64[1] = v181.u32[1];
  int64x2_t v187 = v186;
  v186.i64[0] = v182.u32[0];
  v186.i64[1] = v182.u32[1];
  uint64x2_t v188 = (uint64x2_t)vnegq_s64(v186);
  int64x2_t v189 = (int64x2_t)vshlq_u64((uint64x2_t)v66, (uint64x2_t)vnegq_s64(v187));
  *(int32x2_t *)v184.i8 = vmovn_s64((int64x2_t)v66);
  *(int32x2_t *)v189.i8 = vmovn_s64(v189);
  int16x8_t v190 = (int16x8_t)vzip1q_s32(v184, (int32x4_t)v189);
  int64x2_t v191 = (int64x2_t)vshlq_u64((uint64x2_t)v107, v188);
  *(int32x2_t *)v66.i8 = vmovn_s64((int64x2_t)v107);
  *(int32x2_t *)v191.i8 = vmovn_s64(v191);
  int32x4_t v192 = vzip1q_s32((int32x4_t)v66, (int32x4_t)v191);
  int64x2_t v193 = (int64x2_t)vshlq_u64((uint64x2_t)v132, v188);
  *(int32x2_t *)v191.i8 = vmovn_s64((int64x2_t)v132);
  *(int32x2_t *)v193.i8 = vmovn_s64(v193);
  int16x8_t v194 = (int16x8_t)vzip1q_s32((int32x4_t)v191, (int32x4_t)v193);
  int32x4_t v195 = (int32x4_t)vmovl_u16(v183);
  int16x8_t v196 = (int16x8_t)vmovl_u16(v185);
  uint32x4_t v197 = (uint32x4_t)vnegq_s32((int32x4_t)v196);
  int16x8_t v198 = (int16x8_t)vshlq_u32((uint32x4_t)v190, (uint32x4_t)vnegq_s32(v195));
  *(int16x4_t *)v190.i8 = vmovn_s32((int32x4_t)v190);
  *(int16x4_t *)v198.i8 = vmovn_s32((int32x4_t)v198);
  int8x16_t v199 = (int8x16_t)vzip1q_s16(v190, v198);
  int16x8_t v200 = (int16x8_t)vshlq_u32((uint32x4_t)v192, v197);
  *(int16x4_t *)v196.i8 = vmovn_s32(v192);
  *(int16x4_t *)v200.i8 = vmovn_s32((int32x4_t)v200);
  int8x16_t v201 = (int8x16_t)vzip1q_s16(v196, v200);
  int16x8_t v202 = (int16x8_t)vshlq_u32((uint32x4_t)v194, v197);
  *(int16x4_t *)v194.i8 = vmovn_s32((int32x4_t)v194);
  *(int16x4_t *)v202.i8 = vmovn_s32((int32x4_t)v202);
  int8x16_t v203 = (int8x16_t)vzip1q_s16(v194, v202);
  uint16x8_t v204 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v324.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v324, v324, 8uLL))));
  int8x16_t v205 = (int8x16_t)vshlq_u16((uint16x8_t)v199, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)))));
  *(int8x8_t *)v199.i8 = vmovn_s16((int16x8_t)v199);
  *(int8x8_t *)v205.i8 = vmovn_s16((int16x8_t)v205);
  int8x16_t v206 = vzip1q_s8(v199, v205);
  int8x16_t v207 = (int8x16_t)vshlq_u16((uint16x8_t)v201, v204);
  int8x16_t v208 = (int8x16_t)vshlq_u16((uint16x8_t)v203, v204);
  *(int8x8_t *)v201.i8 = vmovn_s16((int16x8_t)v201);
  *(int8x8_t *)v207.i8 = vmovn_s16((int16x8_t)v207);
  *(int8x8_t *)v203.i8 = vmovn_s16((int16x8_t)v203);
  *(int8x8_t *)v208.i8 = vmovn_s16((int16x8_t)v208);
  int8x16_t v209 = vzip1q_s8(v201, v207);
  v207.i64[0] = 0x808080808080808;
  v207.i64[1] = 0x808080808080808;
  int8x16_t v210 = vzip1q_s8(v203, v208);
  v208.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v208.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v211 = vsubq_s8(v207, v67);
  int8x16_t v212 = vaddq_s8(v67, v208);
  v208.i64[0] = 0x808080808080808;
  v208.i64[1] = 0x808080808080808;
  int8x16_t v213 = vshlq_s8(v206, v211);
  v211.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v211.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v214 = vsubq_s8(v208, v324);
  int8x16_t v215 = vaddq_s8(v324, v211);
  int8x16_t v216 = vshlq_s8(v209, v214);
  int8x16_t v217 = vshlq_s8(v210, v214);
  int8x16_t v218 = vshlq_s8(v213, v212);
  int8x16_t v219 = vshlq_s8(v216, v215);
  int8x16_t v220 = vshlq_s8(v217, v215);
  int8x16_t v221 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v218.i8, 0);
  int8x16_t v222 = vandq_s8(v312, v221);
  int8x16_t v223 = vsubq_s8(v219, v222);
  int8x16_t v224 = vsubq_s8(v220, v222);
  *(int32x2_t *)v219.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v134, v134, 8uLL));
  *(int32x2_t *)v220.i8 = vzip1_s32(*(int32x2_t *)v155.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v155, v155, 8uLL));
  v186.i64[0] = v219.u32[0];
  v186.i64[1] = v219.u32[1];
  uint64x2_t v225 = (uint64x2_t)vnegq_s64(v186);
  *(int16x4_t *)v222.i8 = vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v133, v133, 8uLL));
  int64x2_t v226 = (int64x2_t)vshlq_u64((uint64x2_t)v128, v225);
  *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
  *(int32x2_t *)v226.i8 = vmovn_s64(v226);
  int16x8_t v227 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v226);
  v186.i64[0] = v220.u32[0];
  v186.i64[1] = v220.u32[1];
  uint64x2_t v228 = (uint64x2_t)vnegq_s64(v186);
  int64x2_t v229 = (int64x2_t)vshlq_u64((uint64x2_t)v153, v225);
  *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v153);
  *(int32x2_t *)v229.i8 = vmovn_s64(v229);
  int16x8_t v230 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v229);
  int64x2_t v231 = (int64x2_t)vshlq_u64((uint64x2_t)v149, v228);
  *(int32x2_t *)v133.i8 = vmovn_s64((int64x2_t)v149);
  *(int32x2_t *)v231.i8 = vmovn_s64(v231);
  uint32x4_t v232 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v222.i8));
  int16x8_t v233 = (int16x8_t)vzip1q_s32((int32x4_t)v133, (int32x4_t)v231);
  int16x8_t v234 = (int16x8_t)vshlq_u32((uint32x4_t)v227, v232);
  *(int16x4_t *)v227.i8 = vmovn_s32((int32x4_t)v227);
  *(int16x4_t *)v234.i8 = vmovn_s32((int32x4_t)v234);
  int8x16_t v235 = (int8x16_t)vzip1q_s16(v227, v234);
  uint32x4_t v236 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v154.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v154, v154, 8uLL))));
  int16x8_t v237 = (int16x8_t)vshlq_u32((uint32x4_t)v230, v232);
  *(int16x4_t *)v230.i8 = vmovn_s32((int32x4_t)v230);
  *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v237);
  int8x16_t v238 = (int8x16_t)vzip1q_s16(v230, v237);
  int16x8_t v239 = (int16x8_t)vshlq_u32((uint32x4_t)v233, v236);
  *(int16x4_t *)v233.i8 = vmovn_s32((int32x4_t)v233);
  *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v239);
  uint16x8_t v240 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v325.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v325, v325, 8uLL))));
  int8x16_t v241 = (int8x16_t)vzip1q_s16(v233, v239);
  int8x16_t v242 = (int8x16_t)vshlq_u16((uint16x8_t)v235, v240);
  int8x16_t v243 = (int8x16_t)vshlq_u16((uint16x8_t)v238, v240);
  *(int8x8_t *)v235.i8 = vmovn_s16((int16x8_t)v235);
  *(int8x8_t *)v242.i8 = vmovn_s16((int16x8_t)v242);
  *(int8x8_t *)v238.i8 = vmovn_s16((int16x8_t)v238);
  *(int8x8_t *)v243.i8 = vmovn_s16((int16x8_t)v243);
  int8x16_t v244 = vzip1q_s8(v235, v242);
  v242.i64[0] = 0x808080808080808;
  v242.i64[1] = 0x808080808080808;
  int8x16_t v245 = vzip1q_s8(v238, v243);
  v243.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v243.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v246 = vsubq_s8(v242, v325);
  int8x16_t v247 = vaddq_s8(v325, v243);
  int8x16_t v248 = vshlq_s8(v244, v246);
  int8x16_t v249 = vshlq_s8(v245, v246);
  uint16x8_t v250 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v326.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v326, v326, 8uLL))));
  int8x16_t v251 = vshlq_s8(v249, v247);
  int8x16_t v252 = vandq_s8(v313, v221);
  int8x16_t v253 = vsubq_s8(vshlq_s8(v248, v247), v252);
  int8x16_t v254 = vsubq_s8(v251, v252);
  int8x16_t v255 = (int8x16_t)vshlq_u16((uint16x8_t)v241, v250);
  *(int8x8_t *)v241.i8 = vmovn_s16((int16x8_t)v241);
  *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
  v252.i64[0] = 0x808080808080808;
  v252.i64[1] = 0x808080808080808;
  int8x16_t v256 = vzip1q_s8(v241, v255);
  v241.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v241.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v257 = vsubq_s8(v252, v326);
  int8x16_t v258 = vaddq_s8(v326, v241);
  int64x2_t v259 = (int64x2_t)vshlq_u64((uint64x2_t)v172, v228);
  *(int32x2_t *)v172.i8 = vmovn_s64((int64x2_t)v172);
  *(int32x2_t *)v259.i8 = vmovn_s64(v259);
  int16x8_t v260 = (int16x8_t)vzip1q_s32((int32x4_t)v172, (int32x4_t)v259);
  int16x8_t v261 = (int16x8_t)vshlq_u32((uint32x4_t)v260, v236);
  *(int16x4_t *)v260.i8 = vmovn_s32((int32x4_t)v260);
  *(int16x4_t *)v261.i8 = vmovn_s32((int32x4_t)v261);
  int8x16_t v262 = (int8x16_t)vzip1q_s16(v260, v261);
  int8x16_t v263 = (int8x16_t)vshlq_u16((uint16x8_t)v262, v250);
  *(int8x8_t *)v262.i8 = vmovn_s16((int16x8_t)v262);
  *(int8x8_t *)v263.i8 = vmovn_s16((int16x8_t)v263);
  int8x16_t v264 = vshlq_s8(vshlq_s8(vzip1q_s8(v262, v263), v257), v258);
  int8x16_t v265 = vandq_s8(v314, v221);
  int8x16_t v266 = vsubq_s8(vshlq_s8(vshlq_s8(v256, v257), v258), v265);
  int8x16_t v267 = vsubq_s8(v264, v265);
  *(int32x2_t *)v256.i8 = vzip1_s32(*(int32x2_t *)v85.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v85, v85, 8uLL));
  *(int32x2_t *)v264.i8 = vzip1_s32(*(int32x2_t *)v99.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v99, v99, 8uLL));
  v186.i64[0] = v256.u32[0];
  v186.i64[1] = v256.u32[1];
  int64x2_t v268 = (int64x2_t)vshlq_u64((uint64x2_t)v82, (uint64x2_t)vnegq_s64(v186));
  *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v82);
  *(int32x2_t *)v268.i8 = vmovn_s64(v268);
  int16x8_t v269 = (int16x8_t)vzip1q_s32((int32x4_t)v82, (int32x4_t)v268);
  v186.i64[0] = v264.u32[0];
  v186.i64[1] = v264.u32[1];
  int64x2_t v270 = (int64x2_t)vshlq_u64((uint64x2_t)v111, (uint64x2_t)vnegq_s64(v186));
  *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v111);
  *(int32x2_t *)v270.i8 = vmovn_s64(v270);
  int16x8_t v271 = (int16x8_t)vzip1q_s32((int32x4_t)v82, (int32x4_t)v270);
  int16x8_t v272 = (int16x8_t)vshlq_u32((uint32x4_t)v269, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v84.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v84, v84, 8uLL)))));
  *(int16x4_t *)v269.i8 = vmovn_s32((int32x4_t)v269);
  *(int16x4_t *)v272.i8 = vmovn_s32((int32x4_t)v272);
  int8x16_t v273 = (int8x16_t)vzip1q_s16(v269, v272);
  int16x8_t v274 = (int16x8_t)vshlq_u32((uint32x4_t)v271, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v98.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v98, v98, 8uLL)))));
  *(int16x4_t *)v271.i8 = vmovn_s32((int32x4_t)v271);
  *(int16x4_t *)v274.i8 = vmovn_s32((int32x4_t)v274);
  int8x16_t v275 = (int8x16_t)vzip1q_s16(v271, v274);
  int8x16_t v276 = (int8x16_t)vshlq_u16((uint16x8_t)v273, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v83.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL)))));
  int8x16_t v277 = (int8x16_t)vshlq_u16((uint16x8_t)v275, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v323.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v323, v323, 8uLL)))));
  *(int8x8_t *)v273.i8 = vmovn_s16((int16x8_t)v273);
  *(int8x8_t *)v276.i8 = vmovn_s16((int16x8_t)v276);
  *(int8x8_t *)v275.i8 = vmovn_s16((int16x8_t)v275);
  *(int8x8_t *)v277.i8 = vmovn_s16((int16x8_t)v277);
  int8x16_t v278 = vzip1q_s8(v273, v276);
  v276.i64[0] = 0x808080808080808;
  v276.i64[1] = 0x808080808080808;
  int8x16_t v279 = vzip1q_s8(v275, v277);
  v277.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v277.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v280 = vshlq_s8(vshlq_s8(v278, vsubq_s8(v276, v83)), vaddq_s8(v83, v277));
  int8x16_t v281 = vshlq_s8(vshlq_s8(v279, vsubq_s8(v276, v323)), vaddq_s8(v323, v277));
  int8x16_t v282 = vandq_s8(v315, v221);
  v283.i64[0] = 0x101010101010101;
  v283.i64[1] = 0x101010101010101;
  int8x16_t v284 = vsubq_s8(vaddq_s8(vandq_s8(v218, v315), v280), v282);
  int8x16_t v285 = vsubq_s8(v281, v282);
  if (vaddlvq_s8(vceqq_s8(v316, v283)))
  {
    int8x16_t v286 = vnegq_s8(vandq_s8(v322, v283));
    int8x16_t v287 = v285;
    v287.i32[3] = v284.i32[0];
    int8x16_t v288 = v284;
    v288.i32[0] = v285.i32[3];
    v330.val[0] = vbslq_s8(v286, v288, v284);
    v330.val[1] = vbslq_s8(v286, v287, v285);
    v289.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v289.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v331.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v330, (int8x16_t)xmmword_242EA7570), v286), v330.val[0]);
    v331.val[1] = vaddq_s8(v330.val[1], vandq_s8(vqtbl2q_s8(v330, v289), v286));
    int8x16_t v284 = vaddq_s8(vandq_s8(vqtbl2q_s8(v331, (int8x16_t)xmmword_242EA7580), v286), v331.val[0]);
    int8x16_t v285 = vaddq_s8(vandq_s8(vqtbl2q_s8(v331, v289), v286), v331.val[1]);
    v331.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v223.i8, (int8x16_t)xmmword_242EA7590), v286), v223);
    v331.val[1] = vaddq_s8(v224, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v223.i8, (int8x16_t)xmmword_242EA75A0), v286));
    int8x16_t v223 = vaddq_s8(vandq_s8(vqtbl2q_s8(v331, (int8x16_t)xmmword_242EA75B0), v286), v331.val[0]);
    int8x16_t v224 = vaddq_s8(vandq_s8(vqtbl2q_s8(v331, v289), v286), v331.val[1]);
    v331.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v253.i8, (int8x16_t)xmmword_242EA75C0), v286), v253);
    v331.val[1] = vaddq_s8(v254, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v253.i8, (int8x16_t)xmmword_242EA7570), v286));
    int8x16_t v253 = vaddq_s8(vandq_s8(vqtbl2q_s8(v331, v289), v286), v331.val[0]);
    int8x16_t v254 = vaddq_s8(vandq_s8(vqtbl2q_s8(v331, (int8x16_t)xmmword_242EA75D0), v286), v331.val[1]);
    v330.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA75E0), v286), v266);
    v330.val[1] = vaddq_s8(v267, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA7570), v286));
    int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v330, v289), v286), v330.val[0]);
    int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v330, (int8x16_t)xmmword_242EA75F0), v286), v330.val[1]);
  }
  int8x16_t v290 = vaddq_s8(v321, v284);
  int8x16_t v291 = vaddq_s8(v285, v321);
  int8x16_t v292 = vaddq_s8(v223, v321);
  int8x16_t v293 = vaddq_s8(v224, v321);
  int8x16_t v294 = vaddq_s8(v253, v321);
  int8x16_t v295 = vaddq_s8(v254, v321);
  int8x16_t v296 = vaddq_s8(v266, v321);
  int8x16_t v297 = vaddq_s8(v267, v321);
  v298.i64[0] = 0x1010101010101010;
  v298.i64[1] = 0x1010101010101010;
  int8x16_t v299 = vtstq_s8(v322, v298);
  if ((v322.i8[1] & 0x10) != 0)
  {
    v299.i8[1] = v299.i8[2];
    v299.i8[2] = 0;
    int8x16_t v299 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v299.i8, 0);
    int8x16_t v300 = (int8x16_t)xmmword_242EA7610;
  }
  else
  {
    int8x16_t v300 = (int8x16_t)xmmword_242EA7600;
  }
  int64x2_t v301 = (int64x2_t)vaddq_s8(vandq_s8(v299, vqtbl1q_s8(v290, v300)), v290);
  int64x2_t v302 = (int64x2_t)vaddq_s8(vandq_s8(v299, vqtbl1q_s8(v291, v300)), v291);
  int64x2_t v303 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v292, v300), v299), v292);
  int64x2_t v304 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v293, v300), v299), v293);
  int64x2_t v305 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v294, v300), v299), v294);
  int64x2_t v306 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v295, v300), v299), v295);
  int v307 = (int64x2_t *)((char *)a1 + a2);
  *a1 = vzip1q_s64(v301, v302);
  a1[1] = vzip1q_s64(v305, v306);
  int v308 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t v309 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v296, v300), v299), v296);
  *int v307 = vzip2q_s64(v301, v302);
  v307[1] = vzip2q_s64(v305, v306);
  int64x2_t v310 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v297, v300), v299), v297);
  *int v308 = vzip1q_s64(v303, v304);
  v308[1] = vzip1q_s64(v309, v310);
  int v311 = (int64x2_t *)((char *)v308 + a2);
  *int v311 = vzip2q_s64(v303, v304);
  v311[1] = vzip2q_s64(v309, v310);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressMacroblock(int64x2_t *a1, int64x2_t *a2, unsigned __int8 *a3)
{
  unint64_t v5 = (int64x2_t *)((char *)a2
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1, 64, a2, *a3));
  char v6 = (int64x2_t *)((char *)v5
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 2, 64, v5, a3[1]));
  long long v7 = (int64x2_t *)((char *)v6
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 16, 64, v6, a3[2]));
  BOOL v8 = (int64x2_t *)((char *)v7
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 18, 64, v7, a3[3]));
  BOOL v9 = (int64x2_t *)((char *)v8
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 32, 64, v8, a3[4]));
  uint64_t v10 = (int64x2_t *)((char *)v9
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 34, 64, v9, a3[5]));
  int64x2_t v11 = (int64x2_t *)((char *)v10
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 48, 64, v10, a3[6]));
  unsigned int v12 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 50, 64, v11, v12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(int8x16_t *a1, char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  int64x2_t v7 = a3[1];
  char v6 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v8 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v9 = *(int64x2_t *)((char *)&a3[1] + a4);
  int8x16_t v10 = (int8x16_t)vzip1q_s64(*a3, v8);
  int8x16_t v11 = (int8x16_t)vzip2q_s64(*a3, v8);
  int8x16_t v12 = (int8x16_t)vzip1q_s64(v7, v9);
  int64x2_t v14 = *v6;
  int64x2_t v15 = v6[1];
  int64x2_t v13 = (int64x2_t *)((char *)v6 + a4);
  int8x16_t v16 = (int8x16_t)vzip2q_s64(v7, v9);
  int64x2_t v17 = v13[1];
  int8x16_t v18 = (int8x16_t)vzip1q_s64(v14, *v13);
  int8x16_t v19 = (int8x16_t)vzip2q_s64(v14, *v13);
  int8x16_t v20 = (int8x16_t)vzip1q_s64(v15, v17);
  int8x16_t v21 = (int8x16_t)vzip2q_s64(v15, v17);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v10.i8, 0);
  int8x16_t v23 = vsubq_s8(v10, v22);
  int8x16_t v426 = v23;
  int8x16_t v428 = vsubq_s8(v11, v22);
  int8x16_t v24 = vsubq_s8(v18, v22);
  int8x16_t v430 = v24;
  int8x16_t v431 = vsubq_s8(v19, v22);
  int8x16_t v25 = vsubq_s8(v12, v22);
  int8x16_t v432 = v25;
  int8x16_t v433 = vsubq_s8(v16, v22);
  int8x16_t v26 = vsubq_s8(v20, v22);
  int8x16_t v434 = v26;
  int8x16_t v435 = vsubq_s8(v21, v22);
  int8x16_t v27 = vqtbl1q_s8(vmaxq_s8(v23, v428), (int8x16_t)xmmword_242EA7560);
  int8x16_t v28 = vqtbl1q_s8(vminq_s8(v23, v428), (int8x16_t)xmmword_242EA7560);
  int8x16_t v29 = vpmaxq_s8(v27, v27);
  int8x16_t v30 = vpminq_s8(v28, v28);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  v33.i64[0] = 0x8080808080808080;
  v33.i64[1] = 0x8080808080808080;
  int8x16_t v34 = vmaxq_s8(v31, v33);
  v35.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v35.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v36 = vminq_s8(v32, v35);
  int8x16_t v37 = vzip1q_s8(v31, v32);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v37)), vceqzq_s8(v37));
  int8x16_t v40 = vpmaxq_s8(v39, v39);
  int8x16_t v41 = vqtbl1q_s8(vmaxq_s8(v24, v431), (int8x16_t)xmmword_242EA7560);
  int8x16_t v42 = vqtbl1q_s8(vminq_s8(v24, v431), (int8x16_t)xmmword_242EA7560);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vpmaxq_s8(v43, v43);
  int8x16_t v46 = vpminq_s8(v44, v44);
  int8x16_t v47 = vmaxq_s8(v34, v45);
  int8x16_t v48 = vminq_s8(v36, v46);
  int8x16_t v49 = vzip1q_s8(v45, v46);
  int8x16_t v50 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v49)), vceqzq_s8(v49));
  int8x16_t v51 = vpmaxq_s8(v50, v50);
  int8x16_t v52 = vqtbl1q_s8(vmaxq_s8(v25, v433), (int8x16_t)xmmword_242EA7560);
  int8x16_t v53 = vqtbl1q_s8(vminq_s8(v25, v433), (int8x16_t)xmmword_242EA7560);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vpmaxq_s8(v54, v54);
  int8x16_t v57 = vpminq_s8(v55, v55);
  int8x16_t v58 = vmaxq_s8(v47, v56);
  int8x16_t v59 = vminq_s8(v48, v57);
  int8x16_t v60 = vzip1q_s8(v56, v57);
  int8x16_t v61 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v60)), vceqzq_s8(v60));
  int8x16_t v62 = vpmaxq_s8(v61, v61);
  int8x16_t v63 = vqtbl1q_s8(vmaxq_s8(v26, v435), (int8x16_t)xmmword_242EA7560);
  int8x16_t v64 = vqtbl1q_s8(vminq_s8(v26, v435), (int8x16_t)xmmword_242EA7560);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vpmaxq_s8(v65, v65);
  int8x16_t v68 = vpminq_s8(v66, v66);
  int8x16_t v69 = vmaxq_s8(v58, v67);
  int8x16_t v70 = vminq_s8(v59, v68);
  int8x16_t v71 = vzip1q_s8(v67, v68);
  int8x16_t v72 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v71)), vceqzq_s8(v71));
  v67.i64[0] = -1;
  v67.i64[1] = -1;
  int8x16_t v73 = vpmaxq_s8(v72, v72);
  int8x16_t v74 = vmaxq_s8(vmaxq_s8(v40, v51), vmaxq_s8(v62, v73));
  int8x16_t v75 = vclzq_s8(vsubq_s8(v69, v70));
  v76.i64[0] = 0x707070707070707;
  v76.i64[1] = 0x707070707070707;
  int8x16_t v77 = vsubq_s8(v76, v75);
  int8x16_t v78 = vsubq_s8(v38, v75);
  int8x16_t v79 = vsubq_s8(vshlq_s8(v67, v77), v70);
  int8x16_t v80 = vcgtq_s8(v74, v78);
  int8x16_t v442 = vbslq_s8(v80, v78, v74);
  int8x16_t v443 = v70;
  int8x16_t v444 = v69;
  int8x16_t v445 = vandq_s8(v79, v80);
  v81.i64[0] = 0x303030303030303;
  v81.i64[1] = 0x303030303030303;
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v442, v40), v81), (int8x16_t)0);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v442, v51), v81), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v442, v62), v81), (int8x16_t)0);
  int8x16_t v85 = vmaxq_s8(vminq_s8(vsubq_s8(v442, v73), v81), (int8x16_t)0);
  int8x16_t v438 = vsubq_s8(v442, v82);
  int8x16_t v439 = vsubq_s8(v442, v83);
  int8x16_t v440 = vsubq_s8(v442, v84);
  int8x16_t v441 = vsubq_s8(v442, v85);
  v86.i64[0] = 0x404040404040404;
  v86.i64[1] = 0x404040404040404;
  int8x16_t v87 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v85, v84), vnegq_s8(vaddq_s8(v82, v83)))), vorrq_s8(vandq_s8(v80, v38), vandq_s8(vceqzq_s8(v442), v81)));
  int8x16_t v436 = v22;
  int8x16_t v437 = v87;
  if (vmaxvq_s8(v442))
  {
    int8x16_t v421 = v19;
    int8x16_t v425 = v18;
    int8x16_t v422 = v21;
    int8x16_t v420 = v16;
    int8x16_t v423 = v20;
    int8x16_t v424 = v12;
    BOOL v89 = a5 < 4 || a6 < 2;
    int8x16_t v90 = vsubq_s8(v23, vqtbl1q_s8(v23, (int8x16_t)xmmword_242EA7600));
    int8x16_t v91 = vsubq_s8(v428, vqtbl1q_s8(v428, (int8x16_t)xmmword_242EA7600));
    int8x16_t v92 = vsubq_s8(v25, vqtbl1q_s8(v25, (int8x16_t)xmmword_242EA7600));
    int8x16_t v93 = vsubq_s8(v433, vqtbl1q_s8(v433, (int8x16_t)xmmword_242EA7600));
    int8x16_t v94 = vsubq_s8(v26, vqtbl1q_s8(v26, (int8x16_t)xmmword_242EA7600));
    int8x16_t v95 = vsubq_s8(v435, vqtbl1q_s8(v435, (int8x16_t)xmmword_242EA7600));
    int8x16_t v96 = vqtbl1q_s8(vmaxq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v97 = vqtbl1q_s8(vminq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    int8x16_t v100 = vpmaxq_s8(v98, v98);
    int8x16_t v101 = vpminq_s8(v99, v99);
    int8x16_t v102 = vmaxq_s8(v100, v33);
    int8x16_t v103 = vminq_s8(v101, v35);
    int8x16_t v104 = vzip1q_s8(v100, v101);
    int8x16_t v105 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v104)), vceqzq_s8(v104));
    int8x16_t v106 = vpmaxq_s8(v105, v105);
    int8x16_t v418 = vsubq_s8(v431, vqtbl1q_s8(v431, (int8x16_t)xmmword_242EA7600));
    int8x16_t v419 = vsubq_s8(v24, vqtbl1q_s8(v24, (int8x16_t)xmmword_242EA7600));
    int8x16_t v107 = vqtbl1q_s8(vmaxq_s8(v419, v418), (int8x16_t)xmmword_242EA7560);
    int8x16_t v108 = vqtbl1q_s8(vminq_s8(v419, v418), (int8x16_t)xmmword_242EA7560);
    int8x16_t v109 = vpmaxq_s8(v107, v107);
    int8x16_t v110 = vpminq_s8(v108, v108);
    int8x16_t v111 = vpmaxq_s8(v109, v109);
    int8x16_t v112 = vpminq_s8(v110, v110);
    int8x16_t v113 = vmaxq_s8(v102, v111);
    int8x16_t v114 = vminq_s8(v103, v112);
    int8x16_t v115 = vzip1q_s8(v111, v112);
    int8x16_t v116 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v115)), vceqzq_s8(v115));
    int8x16_t v117 = vpmaxq_s8(v116, v116);
    int8x16_t v118 = vqtbl1q_s8(vmaxq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v119 = vqtbl1q_s8(vminq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vmaxq_s8(v113, v122);
    int8x16_t v125 = vminq_s8(v114, v123);
    int8x16_t v126 = vzip1q_s8(v122, v123);
    int8x16_t v127 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v126)), vceqzq_s8(v126));
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v129 = vqtbl1q_s8(vmaxq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v130 = vqtbl1q_s8(vminq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v131 = vpmaxq_s8(v129, v129);
    int8x16_t v132 = vpminq_s8(v130, v130);
    int8x16_t v133 = vpmaxq_s8(v131, v131);
    int8x16_t v134 = vpminq_s8(v132, v132);
    int8x16_t v135 = vmaxq_s8(v124, v133);
    int8x16_t v136 = vminq_s8(v125, v134);
    int8x16_t v137 = vzip1q_s8(v133, v134);
    int8x16_t v138 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v137)), vceqzq_s8(v137));
    int8x16_t v139 = vpmaxq_s8(v138, v138);
    int8x16_t v140 = vmaxq_s8(vmaxq_s8(v106, v117), vmaxq_s8(v128, v139));
    int8x16_t v417 = v135;
    int8x16_t v141 = vclzq_s8(vsubq_s8(v135, v136));
    int8x16_t v142 = vsubq_s8(v38, v141);
    int8x16_t v143 = vcgtq_s8(v140, v142);
    int8x16_t v144 = vbslq_s8(v143, v142, v140);
    v142.i64[0] = 0x1010101010101010;
    v142.i64[1] = 0x1010101010101010;
    v140.i64[0] = 0x1818181818181818;
    v140.i64[1] = 0x1818181818181818;
    int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v144), v81), vbslq_s8(v143, v140, v142));
    int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v106), v81), (int8x16_t)0);
    int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v117), v81), (int8x16_t)0);
    int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v128), v81), (int8x16_t)0);
    int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v139), v81), (int8x16_t)0);
    int8x16_t v150 = vsubq_s8(v144, v146);
    int8x16_t v151 = vsubq_s8(v144, v147);
    int8x16_t v152 = vsubq_s8(v144, v148);
    int8x16_t v153 = vsubq_s8(v144, v149);
    int8x16_t v154 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8(v146, v147)))), v145);
    uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
    v145.i64[0] = 0x8000800080008;
    v145.i64[1] = 0x8000800080008;
    v148.i64[0] = 0x2000200020002;
    v148.i64[1] = 0x2000200020002;
    int16x8_t v156 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v144.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v145)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v148), v145)), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL));
    uint16x8_t v157 = vmovl_u8(*(uint8x8_t *)v87.i8);
    int8x16_t v158 = v442;
    int16x8_t v159 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v442.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v157 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8))));
    int16x8_t v160 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v157 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v148), v145);
    int8x16_t v161 = v438;
    int8x16_t v162 = v439;
    int8x16_t v164 = v440;
    int8x16_t v163 = v441;
    int8x16_t v165 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v159, (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v87.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), v160), *(int8x8_t *)v438.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v440.i8, *(int8x8_t *)v439.i8), *(int8x8_t *)v441.i8), 3uLL)), v156)), 0);
    if (vaddlvq_s8(v165))
    {
      v166.i64[0] = 0x707070707070707;
      v166.i64[1] = 0x707070707070707;
      int8x16_t v167 = vsubq_s8(v166, v141);
      v166.i64[0] = -1;
      v166.i64[1] = -1;
      int8x16_t v426 = vbslq_s8(v165, v90, v426);
      int8x16_t v428 = vbslq_s8(v165, v91, v428);
      int8x16_t v430 = vbslq_s8(v165, v419, v430);
      int8x16_t v431 = vbslq_s8(v165, v418, v431);
      int8x16_t v432 = vbslq_s8(v165, v92, v432);
      int8x16_t v433 = vbslq_s8(v165, v93, v433);
      int8x16_t v434 = vbslq_s8(v165, v94, v434);
      int8x16_t v435 = vbslq_s8(v165, v95, v435);
      int8x16_t v161 = vbslq_s8(v165, v150, v438);
      int8x16_t v162 = vbslq_s8(v165, v151, v439);
      int8x16_t v438 = v161;
      int8x16_t v439 = v162;
      int8x16_t v164 = vbslq_s8(v165, v152, v440);
      int8x16_t v163 = vbslq_s8(v165, v153, v441);
      int8x16_t v440 = v164;
      int8x16_t v441 = v163;
      int8x16_t v444 = vbslq_s8(v165, v417, v444);
      int8x16_t v445 = vbslq_s8(v165, vandq_s8(vsubq_s8(vshlq_s8(v166, v167), v136), v143), v445);
      int8x16_t v158 = vbslq_s8(v165, v144, v442);
      int8x16_t v442 = v158;
      int8x16_t v443 = vbslq_s8(v165, v136, v443);
      int8x16_t v87 = vbslq_s8(v165, v154, v87);
      int8x16_t v436 = vbslq_s8(v165, vsubq_s8(v22, vqtbl1q_s8(v22, (int8x16_t)xmmword_242EA7600)), v436);
      int8x16_t v437 = v87;
    }
    int8x16_t v168 = v425;
    if (!v89)
    {
      int8x16_t v177 = vsubq_s8(v10, vqtbl2q_s8(*(int8x16x2_t *)v10.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v169 = vsubq_s8(v11, vqtbl2q_s8(*(int8x16x2_t *)v10.i8, (int8x16_t)xmmword_242EA7620));
      int8x16_t v170 = v421;
      v170.i32[3] = v11.i32[3];
      int8x16_t v171 = vsubq_s8(v425, vqtbl2q_s8(*(int8x16x2_t *)v168.i8, (int8x16_t)xmmword_242EA7590));
      int8x16_t v172 = vsubq_s8(v421, vqtbl2q_s8(*(int8x16x2_t *)v168.i8, (int8x16_t)xmmword_242EA7630));
      v447.val[0] = v424;
      v447.val[1] = v420;
      v447.val[1].i32[3] = v11.i32[3];
      int8x16_t v173 = vsubq_s8(v424, vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7640));
      int8x16_t v174 = vsubq_s8(v420, vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7570));
      v446.val[0] = v423;
      v446.val[1] = v21;
      v446.val[1].i32[3] = v11.i32[3];
      int8x16_t v175 = vsubq_s8(v423, vqtbl2q_s8(v446, (int8x16_t)xmmword_242EA7650));
      int8x16_t v176 = v169;
      v176.i32[3] = v177.i32[0];
      v177.i32[0] = v169.i32[3];
      int8x16_t v178 = vsubq_s8(v422, vqtbl2q_s8(v446, (int8x16_t)xmmword_242EA7570));
      int8x16_t v179 = vqtbl1q_s8(vmaxq_s8(v177, v176), (int8x16_t)xmmword_242EA7560);
      int8x16_t v180 = vqtbl1q_s8(vminq_s8(v177, v176), (int8x16_t)xmmword_242EA7560);
      int8x16_t v181 = vpmaxq_s8(v179, v179);
      int8x16_t v182 = vpminq_s8(v180, v180);
      int8x16_t v183 = vpmaxq_s8(v181, v181);
      int8x16_t v184 = vpminq_s8(v182, v182);
      v185.i64[0] = 0x8080808080808080;
      v185.i64[1] = 0x8080808080808080;
      v446.val[0].i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v446.val[0].i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v446.val[0] = vminq_s8(v184, v446.val[0]);
      int8x16_t v186 = vzip1q_s8(v183, v184);
      v187.i64[0] = 0x808080808080808;
      v187.i64[1] = 0x808080808080808;
      int8x16_t v188 = vbicq_s8(vsubq_s8(v187, vclsq_s8(v186)), vceqzq_s8(v186));
      int8x16_t v189 = vpmaxq_s8(v188, v188);
      v446.val[1] = vqtbl1q_s8(vmaxq_s8(v171, v172), (int8x16_t)xmmword_242EA7560);
      v447.val[0] = vqtbl1q_s8(vminq_s8(v171, v172), (int8x16_t)xmmword_242EA7560);
      v446.val[1] = vpmaxq_s8(v446.val[1], v446.val[1]);
      v447.val[0] = vpminq_s8(v447.val[0], v447.val[0]);
      v446.val[1] = vpmaxq_s8(v446.val[1], v446.val[1]);
      v447.val[0] = vpminq_s8(v447.val[0], v447.val[0]);
      int8x16_t v190 = vmaxq_s8(vmaxq_s8(v183, v185), v446.val[1]);
      v446.val[0] = vminq_s8(v446.val[0], v447.val[0]);
      v446.val[1] = vzip1q_s8(v446.val[1], v447.val[0]);
      v446.val[1] = vbicq_s8(vsubq_s8(v187, vclsq_s8(v446.val[1])), vceqzq_s8(v446.val[1]));
      v446.val[1] = vpmaxq_s8(v446.val[1], v446.val[1]);
      v447.val[0] = vqtbl1q_s8(vmaxq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      v447.val[1] = vqtbl1q_s8(vminq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      v447.val[0] = vpmaxq_s8(v447.val[0], v447.val[0]);
      v447.val[1] = vpminq_s8(v447.val[1], v447.val[1]);
      v447.val[0] = vpmaxq_s8(v447.val[0], v447.val[0]);
      v447.val[1] = vpminq_s8(v447.val[1], v447.val[1]);
      int8x16_t v191 = vmaxq_s8(v190, v447.val[0]);
      v446.val[0] = vminq_s8(v446.val[0], v447.val[1]);
      v447.val[0] = vzip1q_s8(v447.val[0], v447.val[1]);
      v447.val[0] = vbicq_s8(vsubq_s8(v187, vclsq_s8(v447.val[0])), vceqzq_s8(v447.val[0]));
      v447.val[0] = vpmaxq_s8(v447.val[0], v447.val[0]);
      v447.val[1] = vqtbl1q_s8(vmaxq_s8(v175, v178), (int8x16_t)xmmword_242EA7560);
      int8x16_t v192 = vqtbl1q_s8(vminq_s8(v175, v178), (int8x16_t)xmmword_242EA7560);
      v447.val[1] = vpmaxq_s8(v447.val[1], v447.val[1]);
      int8x16_t v193 = vpminq_s8(v192, v192);
      v447.val[1] = vpmaxq_s8(v447.val[1], v447.val[1]);
      int8x16_t v194 = vpminq_s8(v193, v193);
      int8x16_t v195 = vmaxq_s8(v191, v447.val[1]);
      int8x16_t v196 = vminq_s8(v446.val[0], v194);
      int8x16_t v197 = vzip1q_s8(v447.val[1], v194);
      int8x16_t v198 = vbicq_s8(vsubq_s8(v187, vclsq_s8(v197)), vceqzq_s8(v197));
      v447.val[1] = vpmaxq_s8(v198, v198);
      int8x16_t v199 = vmaxq_s8(vmaxq_s8(v189, v446.val[1]), vmaxq_s8(v447.val[0], v447.val[1]));
      int8x16_t v200 = vclzq_s8(vsubq_s8(v195, v196));
      int8x16_t v201 = vsubq_s8(v187, v200);
      int8x16_t v202 = vcgtq_s8(v199, v201);
      int8x16_t v203 = vbslq_s8(v202, v201, v199);
      v201.i64[0] = 0x909090909090909;
      v201.i64[1] = 0x909090909090909;
      v204.i64[0] = 0x202020202020202;
      v204.i64[1] = 0x202020202020202;
      int8x16_t v205 = vorrq_s8(vandq_s8(vceqzq_s8(v203), v204), vsubq_s8(vandq_s8(v202, v201), vmvnq_s8(v202)));
      v201.i64[0] = 0x303030303030303;
      v201.i64[1] = 0x303030303030303;
      int8x16_t v87 = vmaxq_s8(vminq_s8(vsubq_s8(v203, v189), v201), (int8x16_t)0);
      int8x16_t v206 = vmaxq_s8(vminq_s8(vsubq_s8(v203, v446.val[1]), v201), (int8x16_t)0);
      v447.val[0] = vmaxq_s8(vminq_s8(vsubq_s8(v203, v447.val[0]), v201), (int8x16_t)0);
      v447.val[1] = vmaxq_s8(vminq_s8(vsubq_s8(v203, v447.val[1]), v201), (int8x16_t)0);
      int8x16_t v207 = vsubq_s8(v203, v87);
      int8x16_t v208 = vsubq_s8(v203, v206);
      int8x16_t v209 = vsubq_s8(v203, v447.val[0]);
      int8x16_t v210 = vsubq_s8(v203, v447.val[1]);
      v447.val[0] = vceqq_s8(vaddq_s8(v447.val[1], v447.val[0]), vnegq_s8(vaddq_s8(v87, v206)));
      v447.val[1].i64[0] = 0x404040404040404;
      v447.val[1].i64[1] = 0x404040404040404;
      int8x16_t v211 = vorrq_s8(vbicq_s8(v447.val[1], v447.val[0]), v205);
      v87.i64[0] = v437.i64[0];
      int8x16_t v161 = v438;
      v447.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v437.i8);
      v212.i64[0] = 0x8000800080008;
      v212.i64[1] = 0x8000800080008;
      int8x16_t v163 = v441;
      int8x16_t v158 = v442;
      int16x8_t v213 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v442.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v447.val[1], v212)));
      v214.i64[0] = 0x3000300030003;
      v214.i64[1] = 0x3000300030003;
      v447.val[1] = vandq_s8(v447.val[1], v214);
      v214.i64[0] = 0x2000200020002;
      v214.i64[1] = 0x2000200020002;
      v447.val[1] = (int8x16_t)vaddq_s16(vaddq_s16(v213, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v437.i8, 1uLL), v212)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)v447.val[1], (int16x8_t)v214), v212));
      int8x16_t v162 = v439;
      int8x16_t v164 = v440;
      int8x16_t v215 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8((int16x8_t)v447.val[1], *(int8x8_t *)v438.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v440.i8, *(int8x8_t *)v439.i8), *(int8x8_t *)v441.i8), 3uLL)), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v203.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v211.i8))), (uint8x8_t)vand_s8(
                                                                                            vadd_s8(*(int8x8_t *)v211.i8, *(int8x8_t *)v211.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v207.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v209.i8, *(int8x8_t *)v208.i8), *(int8x8_t *)v210.i8), 3uLL)))), 0);
      if (vaddlvq_s8(v215))
      {
        v216.i64[0] = 0x707070707070707;
        v216.i64[1] = 0x707070707070707;
        int8x16_t v217 = vsubq_s8(v216, v200);
        v216.i64[0] = -1;
        v216.i64[1] = -1;
        int8x16_t v426 = vbslq_s8(v215, v177, v426);
        int8x16_t v428 = vbslq_s8(v215, v176, v428);
        int8x16_t v430 = vbslq_s8(v215, v171, v430);
        int8x16_t v431 = vbslq_s8(v215, v172, v431);
        int8x16_t v432 = vbslq_s8(v215, v173, v432);
        int8x16_t v433 = vbslq_s8(v215, v174, v433);
        int8x16_t v434 = vbslq_s8(v215, v175, v434);
        int8x16_t v435 = vbslq_s8(v215, v178, v435);
        int8x16_t v161 = vbslq_s8(v215, v207, v438);
        int8x16_t v162 = vbslq_s8(v215, v208, v439);
        int8x16_t v438 = v161;
        int8x16_t v439 = v162;
        int8x16_t v164 = vbslq_s8(v215, v209, v440);
        int8x16_t v163 = vbslq_s8(v215, v210, v441);
        int8x16_t v440 = v164;
        int8x16_t v441 = v163;
        int8x16_t v444 = vbslq_s8(v215, v195, v444);
        int8x16_t v445 = vbslq_s8(v215, vandq_s8(vsubq_s8(vshlq_s8(v216, v217), v196), v202), v445);
        int8x16_t v158 = vbslq_s8(v215, v203, v442);
        int8x16_t v442 = v158;
        int8x16_t v443 = vbslq_s8(v215, v196, v443);
        int8x16_t v87 = vbslq_s8(v215, v211, v437);
        int8x16_t v436 = vbslq_s8(v215, vextq_s8(v11, v11, 0xCuLL), v436);
        int8x16_t v437 = v87;
      }
      int8x16_t v168 = v425;
    }
    int8x16_t v218 = vandq_s8(v445, vceqq_s8(v158, v161));
    int8x16_t v427 = vaddq_s8(v218, v426);
    int8x16_t v429 = vaddq_s8(v428, v218);
    int8x16_t v219 = vandq_s8(v445, vceqq_s8(v158, v162));
    int8x16_t v430 = vaddq_s8(v430, v219);
    int8x16_t v431 = vaddq_s8(v431, v219);
    int8x16_t v220 = vandq_s8(v445, vceqq_s8(v158, v164));
    int8x16_t v432 = vaddq_s8(v432, v220);
    int8x16_t v433 = vaddq_s8(v433, v220);
    int8x16_t v221 = vandq_s8(v445, vceqq_s8(v158, v163));
    int8x16_t v434 = vaddq_s8(v434, v221);
    int8x16_t v435 = vaddq_s8(v435, v221);
    int8x16_t v222 = (int8x16_t)vmovl_s8(*(int8x8_t *)v87.i8);
    v223.i64[0] = 0x8000800080008;
    v223.i64[1] = 0x8000800080008;
    int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v158.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v222, v223)));
    v225.i64[0] = 0x3000300030003;
    v225.i64[1] = 0x3000300030003;
    int16x8_t v226 = (int16x8_t)vandq_s8(v222, v225);
    v225.i64[0] = 0x2000200020002;
    v225.i64[1] = 0x2000200020002;
    int16x8_t v227 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v224, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v87.i8, 1uLL), v223)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v226, (int16x8_t)v225), v223)), *(int8x8_t *)v161.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v164.i8, *(int8x8_t *)v162.i8), *(int8x8_t *)v163.i8), 3uLL));
    int16x8_t v228 = vpaddq_s16(v227, v227);
    if ((unint64_t)(vpaddq_s16(v228, v228).i16[0] + 71) > 0x3FF)
    {
      *a1 = v10;
      a1[1] = v11;
      a1[2] = v168;
      a1[3] = v421;
      a1[4] = v424;
      a1[5] = v420;
      int16x8_t v234 = a1 + 6;
      char v232 = 127;
      unint64_t result = 128;
      *int16x8_t v234 = v423;
      v234[1] = v422;
    }
    else
    {
      int64x2_t v229 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v230 = 8 * (a1 & 7);
      if (v230) {
        uint64_t v231 = *v229 & ~(-1 << v230);
      }
      else {
        uint64_t v231 = 0;
      }
      *a2 = 0;
      __int32 v235 = v436.i32[0];
      int16x4_t v236 = (int16x4_t)vzip1_s8(*(int8x8_t *)v158.i8, *(int8x8_t *)v436.i8);
      int8x8_t v237 = (int8x8_t)vadd_s16(v236, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v238 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v236 & 0xFF00FF00FF00FFLL)));
      v239.i64[0] = v238.u32[0];
      v239.i64[1] = v238.u32[1];
      int8x16_t v240 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v239, 0x38uLL), 0x38uLL);
      v239.i64[0] = v238.u32[2];
      v239.i64[1] = v238.u32[3];
      int8x16_t v241 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v239, 0x38uLL), 0x38uLL);
      uint32x4_t v242 = vmovl_u16((uint16x4_t)vand_s8(v237, (int8x8_t)0x7000700070007));
      v239.i64[0] = v242.u32[2];
      v239.i64[1] = v242.u32[3];
      v243.i64[0] = 255;
      v243.i64[1] = 255;
      uint64x2_t v244 = (uint64x2_t)vandq_s8((int8x16_t)v239, v243);
      v239.i64[0] = v242.u32[0];
      v239.i64[1] = v242.u32[1];
      int8x16_t v245 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v239, v243), (uint64x2_t)xmmword_242EA7660), v240), vbicq_s8((int8x16_t)vshlq_u64(v244, (uint64x2_t)xmmword_242EA7670), v241));
      *(int8x8_t *)v245.i8 = vorr_s8(*(int8x8_t *)v245.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v245, v245, 8uLL));
      v239.i64[0] = v87.u8[1];
      v239.i64[1] = v87.u8[2];
      v245.i64[1] = (unint64_t)(v87.i8[3] & 0x1F) << 15;
      int8x16_t v246 = vorrq_s8(v245, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v239, v243), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v247 = vorrq_s8(v246, (int8x16_t)vdupq_laneq_s64((int64x2_t)v246, 1)).u64[0] | v87.i8[0] & 0x1F;
      unint64_t v248 = (v247 << v230) | v231;
      if (v230 >= 0x20)
      {
        *int64x2_t v229 = v248;
        unint64_t v248 = v247 >> (-8 * (a1 & 7u));
      }
      uint64_t v249 = (unsigned __int16)v235;
      v250.i64[0] = BYTE2(v235);
      v250.i64[1] = HIBYTE(v235);
      uint64x2_t v251 = vshlq_u64((uint64x2_t)vandq_s8(v250, v243), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v252 = v249 | v251.i64[0] | v251.i64[1];
      unint64_t v253 = (v230 + 32) & 0x38;
      unint64_t v254 = v248 | (v252 << v253);
      if (v253 >= 0x20)
      {
        *(void *)((char *)v229 + (((v230 + 32) >> 3) & 8)) = v254;
        unint64_t v254 = v252 >> -(char)v253;
      }
      int8x16_t v255 = vsubq_s8(v442, v438);
      int8x16_t v256 = vsubq_s8(v442, v439);
      int8x16_t v257 = vsubq_s8(v442, v440);
      int8x16_t v258 = vsubq_s8(v442, v441);
      int16x8_t v259 = (int16x8_t)vtrn1q_s8(v255, v256);
      int16x8_t v260 = (int16x8_t)vtrn2q_s8(v255, v256);
      int8x16_t v261 = vtrn1q_s8(v257, v258);
      int16x8_t v262 = (int16x8_t)vtrn2q_s8(v257, v258);
      int8x16_t v263 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v259, (int16x8_t)v261), (int32x4_t)vzip1q_s16(v260, v262)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v259, (int16x8_t)v261), (int32x4_t)vtrn2q_s16(v260, v262)));
      v261.i64[0] = 0x202020202020202;
      v261.i64[1] = 0x202020202020202;
      int8x16_t v264 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v437.i8), (int16x4_t)0x4000400040004)), v261);
      v261.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v261.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v257.i64[0] = -1;
      v257.i64[1] = -1;
      uint8x16_t v265 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v257, (uint8x16_t)vorrq_s8(v264, v261)), v263);
      int16x8_t v266 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v264.i8);
      int16x8_t v267 = (int16x8_t)vmovl_high_u8((uint8x16_t)v264);
      uint16x8_t v268 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v265.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v266)), (int16x8_t)vshlq_u16(vmovl_high_u8(v265), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v267)));
      uint16x8_t v269 = (uint16x8_t)vpaddq_s16(v266, v267);
      int32x4_t v270 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v269.i8);
      int32x4_t v271 = (int32x4_t)vmovl_high_u16(v269);
      int32x4_t v272 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v268.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v270)), (int32x4_t)vshlq_u32(vmovl_high_u16(v268), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v271)));
      int32x4_t v273 = vpaddq_s32(v270, v271);
      v274.i64[0] = v272.u32[0];
      v274.i64[1] = v272.u32[1];
      uint64x2_t v275 = (uint64x2_t)v274;
      v274.i64[0] = v272.u32[2];
      v274.i64[1] = v272.u32[3];
      uint64x2_t v276 = (uint64x2_t)v274;
      v274.i64[0] = v273.u32[0];
      v274.i64[1] = v273.u32[1];
      int64x2_t v277 = v274;
      v274.i64[0] = v273.u32[2];
      v274.i64[1] = v273.u32[3];
      int64x2_t v278 = vpaddq_s64((int64x2_t)vshlq_u64(v275, (uint64x2_t)vzip1q_s64((int64x2_t)0, v277)), (int64x2_t)vshlq_u64(v276, (uint64x2_t)vzip1q_s64((int64x2_t)0, v274)));
      int64x2_t v279 = vpaddq_s64(v277, v274);
      unint64_t v280 = (v278.i64[0] << v230) | v254;
      if (v279.i64[0] + v230 >= 0x40)
      {
        v229[1] = v280;
        unint64_t v280 = (unint64_t)v278.i64[0] >> (-8 * (a1 & 7u));
        if (!v230) {
          unint64_t v280 = 0;
        }
      }
      unint64_t v281 = v279.i64[0] + (v230 | 0x40);
      unint64_t v282 = v280 | (v278.i64[1] << v281);
      if ((v281 & 0x3F) + v279.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v281 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v282;
        unint64_t v282 = (unint64_t)v278.i64[1] >> -(v281 & 0x3F);
        if ((v281 & 0x3F) == 0) {
          unint64_t v282 = 0;
        }
      }
      unint64_t v283 = v281 + v279.i64[1];
      v284.i64[0] = 0x808080808080808;
      v284.i64[1] = 0x808080808080808;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      int8x16_t v286 = vandq_s8(vextq_s8(vtstq_s8(v437, v284), (int8x16_t)0, 0xCuLL), v442);
      v287.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v287.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v285, (uint8x16_t)vaddq_s8(v286, v287)), v445);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v286.i8);
      uint16x8_t v290 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vmovl_high_u8(v288));
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16(v289, (int16x8_t)vmovl_high_u8((uint8x16_t)v286));
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16(v291);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      unint64_t v302 = (v300.i64[0] << v283) | v282;
      if (v301.i64[0] + (v283 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v229 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v300.i64[0] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      unint64_t v303 = v301.i64[0] + v283;
      unint64_t v304 = v302 | (v300.i64[1] << v303);
      if ((v303 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v303 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v304;
        unint64_t v304 = (unint64_t)v300.i64[1] >> -(v303 & 0x3F);
        if ((v303 & 0x3F) == 0) {
          unint64_t v304 = 0;
        }
      }
      unint64_t v305 = v303 + v301.i64[1];
      int8x16_t v306 = vextq_s8((int8x16_t)0, v438, 0xCuLL);
      v307.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v307.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v308.i64[0] = -1;
      v308.i64[1] = -1;
      uint8x16_t v309 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v308, (uint8x16_t)vaddq_s8(v306, v307)), v427);
      int16x8_t v310 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v306.i8);
      int16x8_t v311 = (int16x8_t)vmovl_high_u8((uint8x16_t)v306);
      uint16x8_t v312 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v309.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v310)), (int16x8_t)vshlq_u16(vmovl_high_u8(v309), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v311)));
      uint16x8_t v313 = (uint16x8_t)vpaddq_s16(v310, v311);
      int32x4_t v314 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v313.i8);
      int32x4_t v315 = (int32x4_t)vmovl_high_u16(v313);
      int32x4_t v316 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v312.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v314)), (int32x4_t)vshlq_u32(vmovl_high_u16(v312), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v315)));
      int32x4_t v317 = vpaddq_s32(v314, v315);
      v318.i64[0] = v316.u32[0];
      v318.i64[1] = v316.u32[1];
      uint64x2_t v319 = (uint64x2_t)v318;
      v318.i64[0] = v316.u32[2];
      v318.i64[1] = v316.u32[3];
      uint64x2_t v320 = (uint64x2_t)v318;
      v318.i64[0] = v317.u32[0];
      v318.i64[1] = v317.u32[1];
      int64x2_t v321 = v318;
      v318.i64[0] = v317.u32[2];
      v318.i64[1] = v317.u32[3];
      int64x2_t v322 = vpaddq_s64((int64x2_t)vshlq_u64(v319, (uint64x2_t)vzip1q_s64((int64x2_t)0, v321)), (int64x2_t)vshlq_u64(v320, (uint64x2_t)vzip1q_s64((int64x2_t)0, v318)));
      int64x2_t v323 = vpaddq_s64(v321, v318);
      unint64_t v324 = (v322.i64[0] << v305) | v304;
      if (v323.i64[0] + (v305 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v229 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v322.i64[0] >> -(v305 & 0x3F);
        if ((v305 & 0x3F) == 0) {
          unint64_t v324 = 0;
        }
      }
      unint64_t v325 = v323.i64[0] + v305;
      unint64_t v326 = v324 | (v322.i64[1] << v325);
      if ((v325 & 0x3F) + v323.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v325 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v326;
        unint64_t v326 = (unint64_t)v322.i64[1] >> -(v325 & 0x3F);
        if ((v325 & 0x3F) == 0) {
          unint64_t v326 = 0;
        }
      }
      unint64_t v327 = v325 + v323.i64[1];
      v328.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v328.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v329.i64[0] = -1;
      v329.i64[1] = -1;
      uint8x16_t v330 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v329, (uint8x16_t)vaddq_s8(v438, v328)), v429);
      int16x8_t v331 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v438.i8);
      int16x8_t v332 = (int16x8_t)vmovl_high_u8((uint8x16_t)v438);
      uint16x8_t v333 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v330.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v331)), (int16x8_t)vshlq_u16(vmovl_high_u8(v330), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v332)));
      uint16x8_t v334 = (uint16x8_t)vpaddq_s16(v331, v332);
      int32x4_t v335 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v334.i8);
      int32x4_t v336 = (int32x4_t)vmovl_high_u16(v334);
      int32x4_t v337 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v333.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v335)), (int32x4_t)vshlq_u32(vmovl_high_u16(v333), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v336)));
      int32x4_t v338 = vpaddq_s32(v335, v336);
      v339.i64[0] = v337.u32[0];
      v339.i64[1] = v337.u32[1];
      uint64x2_t v340 = (uint64x2_t)v339;
      v339.i64[0] = v337.u32[2];
      v339.i64[1] = v337.u32[3];
      uint64x2_t v341 = (uint64x2_t)v339;
      v339.i64[0] = v338.u32[0];
      v339.i64[1] = v338.u32[1];
      int64x2_t v342 = v339;
      v339.i64[0] = v338.u32[2];
      v339.i64[1] = v338.u32[3];
      int64x2_t v343 = vpaddq_s64((int64x2_t)vshlq_u64(v340, (uint64x2_t)vzip1q_s64((int64x2_t)0, v342)), (int64x2_t)vshlq_u64(v341, (uint64x2_t)vzip1q_s64((int64x2_t)0, v339)));
      int64x2_t v344 = vpaddq_s64(v342, v339);
      unint64_t v345 = (v343.i64[0] << v327) | v326;
      if (v344.i64[0] + (v327 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v229 + ((v327 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v345;
        if ((v327 & 0x3F) != 0) {
          unint64_t v345 = (unint64_t)v343.i64[0] >> -(v327 & 0x3F);
        }
        else {
          unint64_t v345 = 0;
        }
      }
      uint64_t v346 = v344.i64[1];
      unint64_t v347 = v344.i64[0] + v327;
      uint64_t v348 = (v344.i64[0] + v327) & 0x3F;
      unint64_t v349 = v345 | (v343.i64[1] << v347);
      if ((unint64_t)(v348 + v344.i64[1]) >= 0x40)
      {
        *(void *)((char *)v229 + ((v347 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v343.i64[1] >> -(char)v348;
        if (!v348) {
          unint64_t v349 = 0;
        }
      }
      uint64_t v350 = 0;
      v351.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v351.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v352.i64[0] = -1;
      v352.i64[1] = -1;
      unint64_t v353 = v347 + v346;
      char v354 = 1;
      do
      {
        char v355 = v354;
        uint8x16_t v356 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v352, (uint8x16_t)vaddq_s8(v439, v351)), *(&v430 + v350));
        int16x8_t v357 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v439.i8);
        int16x8_t v358 = (int16x8_t)vmovl_high_u8((uint8x16_t)v439);
        uint16x8_t v359 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v356.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v357)), (int16x8_t)vshlq_u16(vmovl_high_u8(v356), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v358)));
        uint16x8_t v360 = (uint16x8_t)vpaddq_s16(v357, v358);
        int32x4_t v361 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v360.i8);
        int32x4_t v362 = (int32x4_t)vmovl_high_u16(v360);
        int32x4_t v363 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v359.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v361)), (int32x4_t)vshlq_u32(vmovl_high_u16(v359), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v362)));
        int32x4_t v364 = vpaddq_s32(v361, v362);
        v365.i64[0] = v363.u32[0];
        v365.i64[1] = v363.u32[1];
        uint64x2_t v366 = (uint64x2_t)v365;
        v365.i64[0] = v363.u32[2];
        v365.i64[1] = v363.u32[3];
        uint64x2_t v367 = (uint64x2_t)v365;
        v365.i64[0] = v364.u32[0];
        v365.i64[1] = v364.u32[1];
        int64x2_t v368 = v365;
        v365.i64[0] = v364.u32[2];
        v365.i64[1] = v364.u32[3];
        int64x2_t v369 = vpaddq_s64((int64x2_t)vshlq_u64(v366, (uint64x2_t)vzip1q_s64((int64x2_t)0, v368)), (int64x2_t)vshlq_u64(v367, (uint64x2_t)vzip1q_s64((int64x2_t)0, v365)));
        int64x2_t v370 = vpaddq_s64(v368, v365);
        unint64_t v371 = (v369.i64[0] << v353) | v349;
        if (v370.i64[0] + (v353 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v229 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v371;
          unint64_t v371 = (unint64_t)v369.i64[0] >> -(v353 & 0x3F);
          if ((v353 & 0x3F) == 0) {
            unint64_t v371 = 0;
          }
        }
        unint64_t v372 = v370.i64[0] + v353;
        unint64_t v349 = v371 | (v369.i64[1] << v372);
        if ((v372 & 0x3F) + v370.i64[1] >= 0x40)
        {
          *(void *)((char *)v229 + ((v372 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
          unint64_t v349 = (unint64_t)v369.i64[1] >> -(v372 & 0x3F);
          if ((v372 & 0x3F) == 0) {
            unint64_t v349 = 0;
          }
        }
        char v354 = 0;
        unint64_t v353 = v372 + v370.i64[1];
        uint64_t v350 = 1;
      }
      while ((v355 & 1) != 0);
      uint64_t v373 = 0;
      char v374 = 1;
      v375.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v375.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v376.i64[0] = -1;
      v376.i64[1] = -1;
      do
      {
        char v377 = v374;
        uint8x16_t v378 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v376, (uint8x16_t)vaddq_s8(v440, v375)), *(&v432 + v373));
        int16x8_t v379 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v440.i8);
        int16x8_t v380 = (int16x8_t)vmovl_high_u8((uint8x16_t)v440);
        uint16x8_t v381 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v378.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v379)), (int16x8_t)vshlq_u16(vmovl_high_u8(v378), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v380)));
        uint16x8_t v382 = (uint16x8_t)vpaddq_s16(v379, v380);
        int32x4_t v383 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v382.i8);
        int32x4_t v384 = (int32x4_t)vmovl_high_u16(v382);
        int32x4_t v385 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v381.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v383)), (int32x4_t)vshlq_u32(vmovl_high_u16(v381), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v384)));
        int32x4_t v386 = vpaddq_s32(v383, v384);
        v387.i64[0] = v385.u32[0];
        v387.i64[1] = v385.u32[1];
        uint64x2_t v388 = (uint64x2_t)v387;
        v387.i64[0] = v385.u32[2];
        v387.i64[1] = v385.u32[3];
        uint64x2_t v389 = (uint64x2_t)v387;
        v387.i64[0] = v386.u32[0];
        v387.i64[1] = v386.u32[1];
        int64x2_t v390 = v387;
        v387.i64[0] = v386.u32[2];
        v387.i64[1] = v386.u32[3];
        int64x2_t v391 = vpaddq_s64((int64x2_t)vshlq_u64(v388, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)), (int64x2_t)vshlq_u64(v389, (uint64x2_t)vzip1q_s64((int64x2_t)0, v387)));
        int64x2_t v392 = vpaddq_s64(v390, v387);
        unint64_t v393 = (v391.i64[0] << v353) | v349;
        if (v392.i64[0] + (v353 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v229 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v393;
          unint64_t v393 = (unint64_t)v391.i64[0] >> -(v353 & 0x3F);
          if ((v353 & 0x3F) == 0) {
            unint64_t v393 = 0;
          }
        }
        unint64_t v394 = v392.i64[0] + v353;
        unint64_t v349 = v393 | (v391.i64[1] << v394);
        if ((v394 & 0x3F) + v392.i64[1] >= 0x40)
        {
          *(void *)((char *)v229 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
          unint64_t v349 = (unint64_t)v391.i64[1] >> -(v394 & 0x3F);
          if ((v394 & 0x3F) == 0) {
            unint64_t v349 = 0;
          }
        }
        char v374 = 0;
        unint64_t v353 = v394 + v392.i64[1];
        uint64_t v373 = 1;
      }
      while ((v377 & 1) != 0);
      uint64_t v395 = 0;
      char v396 = 1;
      v397.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v397.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v398.i64[0] = -1;
      v398.i64[1] = -1;
      do
      {
        char v399 = v396;
        uint8x16_t v400 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v398, (uint8x16_t)vaddq_s8(v441, v397)), *(&v434 + v395));
        int16x8_t v401 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v441.i8);
        int16x8_t v402 = (int16x8_t)vmovl_high_u8((uint8x16_t)v441);
        uint16x8_t v403 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v400.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v401)), (int16x8_t)vshlq_u16(vmovl_high_u8(v400), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v402)));
        uint16x8_t v404 = (uint16x8_t)vpaddq_s16(v401, v402);
        int32x4_t v405 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v404.i8);
        int32x4_t v406 = (int32x4_t)vmovl_high_u16(v404);
        int32x4_t v407 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v403.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v405)), (int32x4_t)vshlq_u32(vmovl_high_u16(v403), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)));
        int32x4_t v408 = vpaddq_s32(v405, v406);
        v409.i64[0] = v407.u32[0];
        v409.i64[1] = v407.u32[1];
        uint64x2_t v410 = (uint64x2_t)v409;
        v409.i64[0] = v407.u32[2];
        v409.i64[1] = v407.u32[3];
        uint64x2_t v411 = (uint64x2_t)v409;
        v409.i64[0] = v408.u32[0];
        v409.i64[1] = v408.u32[1];
        int64x2_t v412 = v409;
        v409.i64[0] = v408.u32[2];
        v409.i64[1] = v408.u32[3];
        int64x2_t v413 = vpaddq_s64((int64x2_t)vshlq_u64(v410, (uint64x2_t)vzip1q_s64((int64x2_t)0, v412)), (int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v409)));
        int64x2_t v414 = vpaddq_s64(v412, v409);
        unint64_t v415 = (v413.i64[0] << v353) | v349;
        if (v414.i64[0] + (v353 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v229 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v415;
          unint64_t v415 = (unint64_t)v413.i64[0] >> -(v353 & 0x3F);
          if ((v353 & 0x3F) == 0) {
            unint64_t v415 = 0;
          }
        }
        unint64_t v416 = v414.i64[0] + v353;
        unint64_t v349 = v415 | (v413.i64[1] << v416);
        if ((v416 & 0x3F) + v414.i64[1] >= 0x40)
        {
          *(void *)((char *)v229 + ((v416 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
          unint64_t v349 = (unint64_t)v413.i64[1] >> -(v416 & 0x3F);
          if ((v416 & 0x3F) == 0) {
            unint64_t v349 = 0;
          }
        }
        char v396 = 0;
        unint64_t v353 = v416 + v414.i64[1];
        uint64_t v395 = 1;
      }
      while ((v399 & 1) != 0);
      if ((v353 & 0x3F) != 0) {
        *(void *)((char *)v229 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
      }
      unint64_t result = (v353 - v230 + 7) >> 3;
      char v232 = *a2 | (result - 1);
    }
  }
  else
  {
    a1->i32[0] = a3->i32[0];
    char v232 = 3;
    unint64_t result = 4;
  }
  *a2 = v232;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x16_t *a3, char *a4, int a5, int a6)
{
  int64x2_t v9 = a3;
  int8x16_t v11 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v12, v13);
    int64x2_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  int64x2_t v14 = a4 + 1;
  if (a5 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 8;
  if (v16 >= 8) {
    int v17 = 8;
  }
  else {
    int v17 = v16;
  }
  if (v17 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 2, a2, v17, v13);
    int64x2_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int64x2_t v14 = 0;
  }
  uint64_t v18 = 4 * a2;
  int8x16_t v19 = a4 + 2;
  if (a6 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v12 && v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v19, (int64x2_t *)((char *)v11 + v18), a2, v12, v22);
    int64x2_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  else
  {
    *int8x16_t v19 = 0;
    int8x16_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  if (v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int64x2_t *)((char *)v11 + v18 + 32), a2, v17, v22);
    int64x2_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_35;
  }
LABEL_34:
  *int8x16_t v23 = 0;
LABEL_35:
  int8x16_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int64x2_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    int64x2_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  else
  {
    *int8x16_t v24 = 0;
    int8x16_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int64x2_t *)((char *)v11 + 8 * a2 + 32), a2, v17, v27);
    int64x2_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_49;
  }
LABEL_48:
  *int8x16_t v28 = 0;
LABEL_49:
  int8x16_t v29 = a4 + 6;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v29, (int64x2_t *)((char *)v11 + 12 * a2), a2, v12, v32);
    int64x2_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v33 = a4 + 7;
    if (!v17) {
      goto LABEL_64;
    }
  }
  else
  {
    *int8x16_t v29 = 0;
    int8x16_t v33 = a4 + 7;
    if (!v17)
    {
LABEL_64:
      *int8x16_t v33 = 0;
      return result;
    }
  }
  if (!v32) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int64x2_t *)((char *)v11 + 12 * a2 + 32), a2, v17, v32);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = *(int64x2_t *)(a3 + 16);
  int64x2_t v7 = (int64x2_t *)(a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)(a3 + a4);
  int64x2_t v10 = *(int64x2_t *)(a3 + a4 + 16);
  int8x16_t v11 = (int8x16_t)vzip1q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v12 = (int8x16_t)vzip2q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v13 = (int8x16_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  int64x2_t v14 = (int64x2_t *)((char *)v7 + a4);
  int8x16_t v17 = (int8x16_t)vzip2q_s64(v8, v10);
  int64x2_t v18 = v14[1];
  int8x16_t v19 = (int8x16_t)vzip2q_s64(v15, *v14);
  int8x16_t v20 = (int8x16_t)vzip1q_s64(v16, v18);
  int8x16_t v21 = (int8x16_t)vzip2q_s64(v16, v18);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v11.i8, 0);
  int8x16_t v23 = vsubq_s8(v11, v22);
  int8x16_t v454 = v23;
  int8x16_t v456 = vsubq_s8(v12, v22);
  int8x16_t v453 = (int8x16_t)vzip1q_s64(v15, *v14);
  int8x16_t v24 = vsubq_s8(v453, v22);
  int8x16_t v458 = v24;
  int8x16_t v459 = vsubq_s8(v19, v22);
  int8x16_t v25 = vsubq_s8(v13, v22);
  int8x16_t v460 = v25;
  int8x16_t v461 = vsubq_s8(v17, v22);
  int8x16_t v26 = vsubq_s8(v20, v22);
  int8x16_t v462 = v26;
  int8x16_t v463 = vsubq_s8(v21, v22);
  int8x16_t v27 = vqtbl1q_s8(vmaxq_s8(v23, v456), (int8x16_t)xmmword_242EA7560);
  int8x16_t v28 = vqtbl1q_s8(vminq_s8(v23, v456), (int8x16_t)xmmword_242EA7560);
  int8x16_t v29 = vpmaxq_s8(v27, v27);
  int8x16_t v30 = vpminq_s8(v28, v28);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  v33.i64[0] = 0x8080808080808080;
  v33.i64[1] = 0x8080808080808080;
  int8x16_t v34 = vmaxq_s8(v31, v33);
  v35.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v35.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v36 = vminq_s8(v32, v35);
  int8x16_t v37 = vzip1q_s8(v31, v32);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v37)), vceqzq_s8(v37));
  int8x16_t v40 = vpmaxq_s8(v39, v39);
  int8x16_t v41 = vqtbl1q_s8(vmaxq_s8(v24, v459), (int8x16_t)xmmword_242EA7560);
  int8x16_t v42 = vqtbl1q_s8(vminq_s8(v24, v459), (int8x16_t)xmmword_242EA7560);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vpmaxq_s8(v43, v43);
  int8x16_t v46 = vpminq_s8(v44, v44);
  int8x16_t v47 = vmaxq_s8(v34, v45);
  int8x16_t v48 = vminq_s8(v36, v46);
  int8x16_t v49 = vzip1q_s8(v45, v46);
  int8x16_t v50 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v49)), vceqzq_s8(v49));
  int8x16_t v51 = vpmaxq_s8(v50, v50);
  int8x16_t v52 = vqtbl1q_s8(vmaxq_s8(v25, v461), (int8x16_t)xmmword_242EA7560);
  int8x16_t v53 = vqtbl1q_s8(vminq_s8(v25, v461), (int8x16_t)xmmword_242EA7560);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vpmaxq_s8(v54, v54);
  int8x16_t v57 = vpminq_s8(v55, v55);
  int8x16_t v58 = vmaxq_s8(v47, v56);
  int8x16_t v59 = vminq_s8(v48, v57);
  int8x16_t v60 = vzip1q_s8(v56, v57);
  int8x16_t v61 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v60)), vceqzq_s8(v60));
  int8x16_t v62 = vpmaxq_s8(v61, v61);
  int8x16_t v63 = vqtbl1q_s8(vmaxq_s8(v26, v463), (int8x16_t)xmmword_242EA7560);
  int8x16_t v64 = vqtbl1q_s8(vminq_s8(v26, v463), (int8x16_t)xmmword_242EA7560);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vpmaxq_s8(v65, v65);
  int8x16_t v68 = vpminq_s8(v66, v66);
  int8x16_t v69 = vmaxq_s8(v58, v67);
  int8x16_t v70 = vminq_s8(v59, v68);
  int8x16_t v71 = vzip1q_s8(v67, v68);
  int8x16_t v72 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v71)), vceqzq_s8(v71));
  v67.i64[0] = -1;
  v67.i64[1] = -1;
  int8x16_t v73 = vpmaxq_s8(v72, v72);
  int8x16_t v74 = vmaxq_s8(vmaxq_s8(v40, v51), vmaxq_s8(v62, v73));
  int8x16_t v75 = vclzq_s8(vsubq_s8(v69, v70));
  v76.i64[0] = 0x707070707070707;
  v76.i64[1] = 0x707070707070707;
  int8x16_t v77 = vsubq_s8(v76, v75);
  int8x16_t v78 = vsubq_s8(v38, v75);
  int8x16_t v79 = vsubq_s8(vshlq_s8(v67, v77), v70);
  int8x16_t v80 = vcgtq_s8(v74, v78);
  int8x16_t v470 = vbslq_s8(v80, v78, v74);
  int8x16_t v471 = v70;
  int8x16_t v472 = v69;
  int8x16_t v473 = vandq_s8(v79, v80);
  v81.i64[0] = 0x303030303030303;
  v81.i64[1] = 0x303030303030303;
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v40), v81), (int8x16_t)0);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v51), v81), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v62), v81), (int8x16_t)0);
  int8x16_t v85 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v73), v81), (int8x16_t)0);
  int8x16_t v466 = vsubq_s8(v470, v82);
  int8x16_t v467 = vsubq_s8(v470, v83);
  int8x16_t v468 = vsubq_s8(v470, v84);
  int8x16_t v469 = vsubq_s8(v470, v85);
  v86.i64[0] = 0x404040404040404;
  v86.i64[1] = 0x404040404040404;
  int8x16_t v87 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v85, v84), vnegq_s8(vaddq_s8(v82, v83)))), vorrq_s8(vandq_s8(v80, v38), vandq_s8(vceqzq_s8(v470), v81)));
  int8x16_t v464 = v22;
  int8x16_t v465 = v87;
  if (vmaxvq_s8(v470))
  {
    int8x16_t v449 = v19;
    int8x16_t v450 = v17;
    int8x16_t v451 = v20;
    int8x16_t v452 = v13;
    int8x16_t v445 = v21;
    BOOL v89 = a5 < 4 || a6 < 2;
    int8x16_t v90 = vsubq_s8(v23, vqtbl1q_s8(v23, (int8x16_t)xmmword_242EA7600));
    int8x16_t v91 = vsubq_s8(v456, vqtbl1q_s8(v456, (int8x16_t)xmmword_242EA7600));
    int8x16_t v92 = vsubq_s8(v25, vqtbl1q_s8(v25, (int8x16_t)xmmword_242EA7600));
    int8x16_t v93 = vsubq_s8(v461, vqtbl1q_s8(v461, (int8x16_t)xmmword_242EA7600));
    int8x16_t v94 = vsubq_s8(v26, vqtbl1q_s8(v26, (int8x16_t)xmmword_242EA7600));
    int8x16_t v95 = vsubq_s8(v463, vqtbl1q_s8(v463, (int8x16_t)xmmword_242EA7600));
    int8x16_t v96 = vqtbl1q_s8(vmaxq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v97 = vqtbl1q_s8(vminq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    int8x16_t v100 = vpmaxq_s8(v98, v98);
    int8x16_t v101 = vpminq_s8(v99, v99);
    int8x16_t v102 = vmaxq_s8(v100, v33);
    int8x16_t v103 = vminq_s8(v101, v35);
    int8x16_t v104 = vzip1q_s8(v100, v101);
    int8x16_t v105 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v104)), vceqzq_s8(v104));
    int8x16_t v106 = vpmaxq_s8(v105, v105);
    int8x16_t v447 = vsubq_s8(v459, vqtbl1q_s8(v459, (int8x16_t)xmmword_242EA7600));
    int8x16_t v448 = vsubq_s8(v24, vqtbl1q_s8(v24, (int8x16_t)xmmword_242EA7600));
    int8x16_t v107 = vqtbl1q_s8(vmaxq_s8(v448, v447), (int8x16_t)xmmword_242EA7560);
    int8x16_t v108 = vqtbl1q_s8(vminq_s8(v448, v447), (int8x16_t)xmmword_242EA7560);
    int8x16_t v109 = vpmaxq_s8(v107, v107);
    int8x16_t v110 = vpminq_s8(v108, v108);
    int8x16_t v111 = vpmaxq_s8(v109, v109);
    int8x16_t v112 = vpminq_s8(v110, v110);
    int8x16_t v113 = vmaxq_s8(v102, v111);
    int8x16_t v114 = vminq_s8(v103, v112);
    int8x16_t v115 = vzip1q_s8(v111, v112);
    int8x16_t v116 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v115)), vceqzq_s8(v115));
    int8x16_t v117 = vpmaxq_s8(v116, v116);
    int8x16_t v118 = vqtbl1q_s8(vmaxq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v119 = vqtbl1q_s8(vminq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vmaxq_s8(v113, v122);
    int8x16_t v125 = vminq_s8(v114, v123);
    int8x16_t v126 = vzip1q_s8(v122, v123);
    int8x16_t v127 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v126)), vceqzq_s8(v126));
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v129 = vqtbl1q_s8(vmaxq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v130 = vqtbl1q_s8(vminq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v131 = vpmaxq_s8(v129, v129);
    int8x16_t v132 = vpminq_s8(v130, v130);
    int8x16_t v133 = vpmaxq_s8(v131, v131);
    int8x16_t v134 = vpminq_s8(v132, v132);
    int8x16_t v135 = vmaxq_s8(v124, v133);
    int8x16_t v136 = vminq_s8(v125, v134);
    int8x16_t v137 = vzip1q_s8(v133, v134);
    int8x16_t v138 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v137)), vceqzq_s8(v137));
    int8x16_t v139 = vpmaxq_s8(v138, v138);
    int8x16_t v140 = vmaxq_s8(vmaxq_s8(v106, v117), vmaxq_s8(v128, v139));
    int8x16_t v446 = v135;
    int8x16_t v141 = vclzq_s8(vsubq_s8(v135, v136));
    int8x16_t v142 = vsubq_s8(v38, v141);
    int8x16_t v143 = vcgtq_s8(v140, v142);
    int8x16_t v144 = vbslq_s8(v143, v142, v140);
    v140.i64[0] = 0x1010101010101010;
    v140.i64[1] = 0x1010101010101010;
    v142.i64[0] = 0x1818181818181818;
    v142.i64[1] = 0x1818181818181818;
    int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v144), v81), vbslq_s8(v143, v142, v140));
    int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v106), v81), (int8x16_t)0);
    int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v117), v81), (int8x16_t)0);
    int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v128), v81), (int8x16_t)0);
    int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v139), v81), (int8x16_t)0);
    int8x16_t v150 = vsubq_s8(v144, v146);
    int8x16_t v151 = vsubq_s8(v144, v147);
    int8x16_t v152 = vsubq_s8(v144, v148);
    int8x16_t v153 = vsubq_s8(v144, v149);
    int8x16_t v154 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8(v146, v147)))), v145);
    uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
    v145.i64[0] = 0x8000800080008;
    v145.i64[1] = 0x8000800080008;
    v156.i64[0] = 0x2000200020002;
    v156.i64[1] = 0x2000200020002;
    int16x8_t v157 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v144.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v145)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v156), v145)), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL));
    uint16x8_t v158 = vmovl_u8(*(uint8x8_t *)v87.i8);
    int8x16_t v159 = v470;
    int16x8_t v160 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v470.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8))));
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v156), v145);
    int8x16_t v162 = v466;
    int8x16_t v163 = v467;
    int8x16_t v165 = v468;
    int8x16_t v164 = v469;
    int8x16_t v166 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v160, (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v87.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), v161), *(int8x8_t *)v466.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v468.i8, *(int8x8_t *)v467.i8), *(int8x8_t *)v469.i8), 3uLL)), v157)), 0);
    if (vaddlvq_s8(v166))
    {
      v167.i64[0] = 0x707070707070707;
      v167.i64[1] = 0x707070707070707;
      int8x16_t v168 = vsubq_s8(v167, v141);
      v167.i64[0] = -1;
      v167.i64[1] = -1;
      int8x16_t v454 = vbslq_s8(v166, v90, v454);
      int8x16_t v456 = vbslq_s8(v166, v91, v456);
      int8x16_t v458 = vbslq_s8(v166, v448, v458);
      int8x16_t v459 = vbslq_s8(v166, v447, v459);
      int8x16_t v460 = vbslq_s8(v166, v92, v460);
      int8x16_t v461 = vbslq_s8(v166, v93, v461);
      int8x16_t v462 = vbslq_s8(v166, v94, v462);
      int8x16_t v463 = vbslq_s8(v166, v95, v463);
      int8x16_t v162 = vbslq_s8(v166, v150, v466);
      int8x16_t v163 = vbslq_s8(v166, v151, v467);
      int8x16_t v466 = v162;
      int8x16_t v467 = v163;
      int8x16_t v165 = vbslq_s8(v166, v152, v468);
      int8x16_t v164 = vbslq_s8(v166, v153, v469);
      int8x16_t v468 = v165;
      int8x16_t v469 = v164;
      int8x16_t v472 = vbslq_s8(v166, v446, v472);
      int8x16_t v473 = vbslq_s8(v166, vandq_s8(vsubq_s8(vshlq_s8(v167, v168), v136), v143), v473);
      int8x16_t v159 = vbslq_s8(v166, v144, v470);
      int8x16_t v470 = v159;
      int8x16_t v471 = vbslq_s8(v166, v136, v471);
      int8x16_t v87 = vbslq_s8(v166, v154, v87);
      int8x16_t v464 = vbslq_s8(v166, vsubq_s8(v22, vqtbl1q_s8(v22, (int8x16_t)xmmword_242EA7600)), v464);
      int8x16_t v465 = v87;
    }
    int8x16_t v169 = v452;
    int8x16_t v170 = v451;
    if (!v89)
    {
      int8x16_t v181 = vsubq_s8(v11, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v171 = vsubq_s8(v12, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7620));
      v474.val[0] = v453;
      v474.val[1] = v449;
      v474.val[1].i32[3] = v12.i32[3];
      int8x16_t v172 = vqtbl2q_s8(v474, (int8x16_t)xmmword_242EA7630);
      int8x16_t v173 = vsubq_s8(v453, vqtbl2q_s8(v474, (int8x16_t)xmmword_242EA7590));
      int8x16_t v174 = vsubq_s8(v449, v172);
      int8x16_t v175 = v450;
      v175.i32[3] = v12.i32[3];
      int8x16_t v176 = vsubq_s8(v452, vqtbl2q_s8(*(int8x16x2_t *)v169.i8, (int8x16_t)xmmword_242EA7640));
      int8x16_t v177 = vsubq_s8(v450, vqtbl2q_s8(*(int8x16x2_t *)v169.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v178 = v445;
      v178.i32[3] = v12.i32[3];
      int8x16_t v179 = vsubq_s8(v451, vqtbl2q_s8(*(int8x16x2_t *)v170.i8, (int8x16_t)xmmword_242EA7650));
      int8x16_t v180 = v171;
      v180.i32[3] = v181.i32[0];
      v181.i32[0] = v171.i32[3];
      int8x16_t v182 = vsubq_s8(v445, vqtbl2q_s8(*(int8x16x2_t *)v170.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v183 = vqtbl1q_s8(vmaxq_s8(v181, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v184 = vqtbl1q_s8(vminq_s8(v181, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v185 = vpmaxq_s8(v183, v183);
      int8x16_t v186 = vpminq_s8(v184, v184);
      int8x16_t v187 = vpmaxq_s8(v185, v185);
      int8x16_t v188 = vpminq_s8(v186, v186);
      v474.val[1].i64[0] = 0x8080808080808080;
      v474.val[1].i64[1] = 0x8080808080808080;
      v189.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v189.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v190 = vminq_s8(v188, v189);
      int8x16_t v191 = vzip1q_s8(v187, v188);
      v192.i64[0] = 0x808080808080808;
      v192.i64[1] = 0x808080808080808;
      int8x16_t v193 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v191)), vceqzq_s8(v191));
      int8x16_t v194 = vpmaxq_s8(v193, v193);
      int8x16_t v195 = vqtbl1q_s8(vmaxq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v196 = vqtbl1q_s8(vminq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v197 = vpmaxq_s8(v195, v195);
      int8x16_t v198 = vpminq_s8(v196, v196);
      int8x16_t v199 = vpmaxq_s8(v197, v197);
      int8x16_t v200 = vpminq_s8(v198, v198);
      v474.val[1] = vmaxq_s8(vmaxq_s8(v187, v474.val[1]), v199);
      int8x16_t v201 = vminq_s8(v190, v200);
      int8x16_t v202 = vzip1q_s8(v199, v200);
      int8x16_t v203 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v202)), vceqzq_s8(v202));
      int8x16_t v204 = vpmaxq_s8(v203, v203);
      int8x16_t v205 = vqtbl1q_s8(vmaxq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v206 = vqtbl1q_s8(vminq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v207 = vpmaxq_s8(v205, v205);
      int8x16_t v208 = vpminq_s8(v206, v206);
      int8x16_t v209 = vpmaxq_s8(v207, v207);
      int8x16_t v210 = vpminq_s8(v208, v208);
      v474.val[1] = vmaxq_s8(v474.val[1], v209);
      int8x16_t v211 = vminq_s8(v201, v210);
      int8x16_t v212 = vzip1q_s8(v209, v210);
      int8x16_t v213 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v212)), vceqzq_s8(v212));
      int8x16_t v214 = vpmaxq_s8(v213, v213);
      int8x16_t v215 = vqtbl1q_s8(vmaxq_s8(v179, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v216 = vqtbl1q_s8(vminq_s8(v179, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v217 = vpmaxq_s8(v215, v215);
      int8x16_t v218 = vpminq_s8(v216, v216);
      int8x16_t v219 = vpmaxq_s8(v217, v217);
      int8x16_t v220 = vpminq_s8(v218, v218);
      int8x16_t v221 = vmaxq_s8(v474.val[1], v219);
      int8x16_t v222 = vminq_s8(v211, v220);
      v474.val[1] = vzip1q_s8(v219, v220);
      v474.val[1] = vbicq_s8(vsubq_s8(v192, vclsq_s8(v474.val[1])), vceqzq_s8(v474.val[1]));
      int8x16_t v223 = vpmaxq_s8(v474.val[1], v474.val[1]);
      v474.val[1] = vmaxq_s8(vmaxq_s8(v194, v204), vmaxq_s8(v214, v223));
      int8x16_t v224 = vclzq_s8(vsubq_s8(v221, v222));
      int8x16_t v225 = vsubq_s8(v192, v224);
      int8x16_t v226 = vcgtq_s8(v474.val[1], v225);
      int8x16_t v227 = vbslq_s8(v226, v225, v474.val[1]);
      v225.i64[0] = 0x909090909090909;
      v225.i64[1] = 0x909090909090909;
      v220.i64[0] = 0x202020202020202;
      v220.i64[1] = 0x202020202020202;
      int8x16_t v228 = vorrq_s8(vandq_s8(vceqzq_s8(v227), v220), vsubq_s8(vandq_s8(v226, v225), vmvnq_s8(v226)));
      v219.i64[0] = 0x303030303030303;
      v219.i64[1] = 0x303030303030303;
      int8x16_t v229 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v194), v219), (int8x16_t)0);
      int8x16_t v230 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v204), v219), (int8x16_t)0);
      int8x16_t v231 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v214), v219), (int8x16_t)0);
      int8x16_t v232 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v223), v219), (int8x16_t)0);
      int8x16_t v233 = vsubq_s8(v227, v229);
      int8x16_t v234 = vsubq_s8(v227, v230);
      int8x16_t v235 = vsubq_s8(v227, v231);
      int8x16_t v236 = vsubq_s8(v227, v232);
      int8x16_t v87 = vceqq_s8(vaddq_s8(v232, v231), vnegq_s8(vaddq_s8(v229, v230)));
      v229.i64[0] = 0x404040404040404;
      v229.i64[1] = 0x404040404040404;
      int8x16_t v237 = vorrq_s8(vbicq_s8(v229, v87), v228);
      v230.i64[0] = 0x3000300030003;
      v230.i64[1] = 0x3000300030003;
      v87.i64[0] = v465.i64[0];
      int8x16_t v162 = v466;
      int8x16_t v238 = (int8x16_t)vmovl_s8(*(int8x8_t *)v465.i8);
      v239.i64[0] = 0x8000800080008;
      v239.i64[1] = 0x8000800080008;
      int8x16_t v164 = v469;
      int8x16_t v159 = v470;
      int16x8_t v240 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v470.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v238, v239)));
      int16x8_t v241 = (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v465.i8, 1uLL), v239);
      int16x8_t v242 = (int16x8_t)vandq_s8(v238, v230);
      v238.i64[0] = 0x2000200020002;
      v238.i64[1] = 0x2000200020002;
      int16x8_t v243 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v242, (int16x8_t)v238), v239);
      int8x16_t v163 = v467;
      int8x16_t v165 = v468;
      int8x16_t v244 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v240, v241), v243), *(int8x8_t *)v466.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v468.i8, *(int8x8_t *)v467.i8), *(int8x8_t *)v469.i8), 3uLL)), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v227.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v237.i8))), (uint8x8_t)vand_s8(
                                                                                            vadd_s8(*(int8x8_t *)v237.i8, *(int8x8_t *)v237.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v233.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v235.i8, *(int8x8_t *)v234.i8), *(int8x8_t *)v236.i8), 3uLL)))), 0);
      if (vaddlvq_s8(v244))
      {
        v245.i64[0] = 0x707070707070707;
        v245.i64[1] = 0x707070707070707;
        int8x16_t v246 = vsubq_s8(v245, v224);
        v245.i64[0] = -1;
        v245.i64[1] = -1;
        int8x16_t v454 = vbslq_s8(v244, v181, v454);
        int8x16_t v456 = vbslq_s8(v244, v180, v456);
        int8x16_t v458 = vbslq_s8(v244, v173, v458);
        int8x16_t v459 = vbslq_s8(v244, v174, v459);
        int8x16_t v460 = vbslq_s8(v244, v176, v460);
        int8x16_t v461 = vbslq_s8(v244, v177, v461);
        int8x16_t v462 = vbslq_s8(v244, v179, v462);
        int8x16_t v463 = vbslq_s8(v244, v182, v463);
        int8x16_t v162 = vbslq_s8(v244, v233, v466);
        int8x16_t v163 = vbslq_s8(v244, v234, v467);
        int8x16_t v466 = v162;
        int8x16_t v467 = v163;
        int8x16_t v165 = vbslq_s8(v244, v235, v468);
        int8x16_t v164 = vbslq_s8(v244, v236, v469);
        int8x16_t v468 = v165;
        int8x16_t v469 = v164;
        int8x16_t v472 = vbslq_s8(v244, v221, v472);
        int8x16_t v473 = vbslq_s8(v244, vandq_s8(vsubq_s8(vshlq_s8(v245, v246), v222), v226), v473);
        int8x16_t v159 = vbslq_s8(v244, v227, v470);
        int8x16_t v470 = v159;
        int8x16_t v471 = vbslq_s8(v244, v222, v471);
        int8x16_t v87 = vbslq_s8(v244, v237, v465);
        int8x16_t v464 = vbslq_s8(v244, vextq_s8(v12, v12, 0xCuLL), v464);
        int8x16_t v465 = v87;
      }
    }
    int8x16_t v247 = vandq_s8(v473, vceqq_s8(v159, v162));
    int8x16_t v455 = vaddq_s8(v247, v454);
    int8x16_t v457 = vaddq_s8(v456, v247);
    int8x16_t v248 = vandq_s8(v473, vceqq_s8(v159, v163));
    int8x16_t v458 = vaddq_s8(v458, v248);
    int8x16_t v459 = vaddq_s8(v459, v248);
    int8x16_t v249 = vandq_s8(v473, vceqq_s8(v159, v165));
    int8x16_t v460 = vaddq_s8(v460, v249);
    int8x16_t v461 = vaddq_s8(v461, v249);
    int8x16_t v250 = vandq_s8(v473, vceqq_s8(v159, v164));
    int8x16_t v462 = vaddq_s8(v462, v250);
    int8x16_t v463 = vaddq_s8(v463, v250);
    int8x16_t v251 = (int8x16_t)vmovl_s8(*(int8x8_t *)v87.i8);
    v252.i64[0] = 0x8000800080008;
    v252.i64[1] = 0x8000800080008;
    int16x8_t v253 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v159.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v251, v252)));
    v254.i64[0] = 0x3000300030003;
    v254.i64[1] = 0x3000300030003;
    int16x8_t v255 = (int16x8_t)vandq_s8(v251, v254);
    v254.i64[0] = 0x2000200020002;
    v254.i64[1] = 0x2000200020002;
    int16x8_t v256 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v253, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v87.i8, 1uLL), v252)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v255, (int16x8_t)v254), v252)), *(int8x8_t *)v162.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v165.i8, *(int8x8_t *)v163.i8), *(int8x8_t *)v164.i8), 3uLL));
    int16x8_t v257 = vpaddq_s16(v256, v256);
    if ((unint64_t)(vpaddq_s16(v257, v257).i16[0] - 705) < 0xFFFFFFFFFFFFFCF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 96;
    }
    else
    {
      int8x16_t v258 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v259 = 8 * (a1 & 7);
      if (v259) {
        uint64_t v260 = *v258 & ~(-1 << v259);
      }
      else {
        uint64_t v260 = 0;
      }
      *a2 = 0;
      __int32 v262 = v464.i32[0];
      int16x4_t v263 = (int16x4_t)vzip1_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v464.i8);
      int8x8_t v264 = (int8x8_t)vadd_s16(v263, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v265 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v263 & 0xFF00FF00FF00FFLL)));
      v266.i64[0] = v265.u32[0];
      v266.i64[1] = v265.u32[1];
      int8x16_t v267 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v266, 0x38uLL), 0x38uLL);
      v266.i64[0] = v265.u32[2];
      v266.i64[1] = v265.u32[3];
      int8x16_t v268 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v266, 0x38uLL), 0x38uLL);
      uint32x4_t v269 = vmovl_u16((uint16x4_t)vand_s8(v264, (int8x8_t)0x7000700070007));
      v266.i64[0] = v269.u32[2];
      v266.i64[1] = v269.u32[3];
      v270.i64[0] = 255;
      v270.i64[1] = 255;
      uint64x2_t v271 = (uint64x2_t)vandq_s8((int8x16_t)v266, v270);
      v266.i64[0] = v269.u32[0];
      v266.i64[1] = v269.u32[1];
      uint64_t v272 = v87.i8[0] & 0x1F;
      int8x16_t v273 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v266, v270), (uint64x2_t)xmmword_242EA7660), v267), vbicq_s8((int8x16_t)vshlq_u64(v271, (uint64x2_t)xmmword_242EA7670), v268));
      *(int8x8_t *)v273.i8 = vorr_s8(*(int8x8_t *)v273.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v273, v273, 8uLL));
      v266.i64[0] = v87.u8[1];
      v266.i64[1] = v87.u8[2];
      v273.i64[1] = (unint64_t)(v87.i8[3] & 0x1F) << 15;
      int8x16_t v274 = vorrq_s8(v273, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v266, v270), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v275 = vorrq_s8(v274, (int8x16_t)vdupq_laneq_s64((int64x2_t)v274, 1)).u64[0] | v272;
      unint64_t v276 = (v275 << v259) | v260;
      if (v259 >= 0x20)
      {
        *int8x16_t v258 = v276;
        unint64_t v276 = v275 >> (-8 * (a1 & 7u));
      }
      uint64_t v277 = (unsigned __int16)v262;
      v278.i64[0] = BYTE2(v262);
      v278.i64[1] = HIBYTE(v262);
      uint64x2_t v279 = vshlq_u64((uint64x2_t)vandq_s8(v278, v270), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v280 = v277 | v279.i64[0] | v279.i64[1];
      unint64_t v281 = (v259 + 32) & 0x38;
      unint64_t v282 = v276 | (v280 << v281);
      if (v281 >= 0x20)
      {
        *(void *)((char *)v258 + (((v259 + 32) >> 3) & 8)) = v282;
        unint64_t v282 = v280 >> -(char)v281;
      }
      int8x16_t v283 = vsubq_s8(v470, v466);
      int8x16_t v284 = vsubq_s8(v470, v467);
      int8x16_t v285 = vsubq_s8(v470, v468);
      int8x16_t v286 = vsubq_s8(v470, v469);
      int16x8_t v287 = (int16x8_t)vtrn1q_s8(v283, v284);
      int16x8_t v288 = (int16x8_t)vtrn2q_s8(v283, v284);
      int8x16_t v289 = vtrn1q_s8(v285, v286);
      int16x8_t v290 = (int16x8_t)vtrn2q_s8(v285, v286);
      int8x16_t v291 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v287, (int16x8_t)v289), (int32x4_t)vzip1q_s16(v288, v290)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v287, (int16x8_t)v289), (int32x4_t)vtrn2q_s16(v288, v290)));
      v289.i64[0] = 0x202020202020202;
      v289.i64[1] = 0x202020202020202;
      int8x16_t v292 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v465.i8), (int16x4_t)0x4000400040004)), v289);
      v289.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v289.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      uint8x16_t v293 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v285, (uint8x16_t)vorrq_s8(v292, v289)), v291);
      int16x8_t v294 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v292.i8);
      int16x8_t v295 = (int16x8_t)vmovl_high_u8((uint8x16_t)v292);
      uint16x8_t v296 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v293.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v294)), (int16x8_t)vshlq_u16(vmovl_high_u8(v293), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v295)));
      uint16x8_t v297 = (uint16x8_t)vpaddq_s16(v294, v295);
      int32x4_t v298 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v297.i8);
      int32x4_t v299 = (int32x4_t)vmovl_high_u16(v297);
      int32x4_t v300 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v296.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v298)), (int32x4_t)vshlq_u32(vmovl_high_u16(v296), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v299)));
      int32x4_t v301 = vpaddq_s32(v298, v299);
      v302.i64[0] = v300.u32[0];
      v302.i64[1] = v300.u32[1];
      uint64x2_t v303 = (uint64x2_t)v302;
      v302.i64[0] = v300.u32[2];
      v302.i64[1] = v300.u32[3];
      uint64x2_t v304 = (uint64x2_t)v302;
      v302.i64[0] = v301.u32[0];
      v302.i64[1] = v301.u32[1];
      int64x2_t v305 = v302;
      v302.i64[0] = v301.u32[2];
      v302.i64[1] = v301.u32[3];
      int64x2_t v306 = vpaddq_s64((int64x2_t)vshlq_u64(v303, (uint64x2_t)vzip1q_s64((int64x2_t)0, v305)), (int64x2_t)vshlq_u64(v304, (uint64x2_t)vzip1q_s64((int64x2_t)0, v302)));
      int64x2_t v307 = vpaddq_s64(v305, v302);
      unint64_t v308 = (v306.i64[0] << v259) | v282;
      if (v307.i64[0] + v259 >= 0x40)
      {
        v258[1] = v308;
        unint64_t v308 = (unint64_t)v306.i64[0] >> (-8 * (a1 & 7u));
        if (!v259) {
          unint64_t v308 = 0;
        }
      }
      unint64_t v309 = v307.i64[0] + (v259 | 0x40);
      unint64_t v310 = v308 | (v306.i64[1] << v309);
      if ((v309 & 0x3F) + v307.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v310;
        unint64_t v310 = (unint64_t)v306.i64[1] >> -(v309 & 0x3F);
        if ((v309 & 0x3F) == 0) {
          unint64_t v310 = 0;
        }
      }
      unint64_t v311 = v309 + v307.i64[1];
      v312.i64[0] = 0x808080808080808;
      v312.i64[1] = 0x808080808080808;
      v313.i64[0] = -1;
      v313.i64[1] = -1;
      int8x16_t v314 = vandq_s8(vextq_s8(vtstq_s8(v465, v312), (int8x16_t)0, 0xCuLL), v470);
      v315.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v315.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v316 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v313, (uint8x16_t)vaddq_s8(v314, v315)), v473);
      int16x8_t v317 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v314.i8);
      uint16x8_t v318 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v316.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v317)), (int16x8_t)vmovl_high_u8(v316));
      uint16x8_t v319 = (uint16x8_t)vpaddq_s16(v317, (int16x8_t)vmovl_high_u8((uint8x16_t)v314));
      int32x4_t v320 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v319.i8);
      int32x4_t v321 = (int32x4_t)vmovl_high_u16(v319);
      int32x4_t v322 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v318.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v320)), (int32x4_t)vshlq_u32(vmovl_high_u16(v318), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v321)));
      int32x4_t v323 = vpaddq_s32(v320, v321);
      v324.i64[0] = v322.u32[0];
      v324.i64[1] = v322.u32[1];
      uint64x2_t v325 = (uint64x2_t)v324;
      v324.i64[0] = v322.u32[2];
      v324.i64[1] = v322.u32[3];
      uint64x2_t v326 = (uint64x2_t)v324;
      v324.i64[0] = v323.u32[0];
      v324.i64[1] = v323.u32[1];
      int64x2_t v327 = v324;
      v324.i64[0] = v323.u32[2];
      v324.i64[1] = v323.u32[3];
      int64x2_t v328 = vpaddq_s64((int64x2_t)vshlq_u64(v325, (uint64x2_t)vzip1q_s64((int64x2_t)0, v327)), (int64x2_t)vshlq_u64(v326, (uint64x2_t)vzip1q_s64((int64x2_t)0, v324)));
      int64x2_t v329 = vpaddq_s64(v327, v324);
      unint64_t v330 = (v328.i64[0] << v311) | v310;
      if (v329.i64[0] + (v311 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v311 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330;
        unint64_t v330 = (unint64_t)v328.i64[0] >> -(v311 & 0x3F);
        if ((v311 & 0x3F) == 0) {
          unint64_t v330 = 0;
        }
      }
      unint64_t v331 = v329.i64[0] + v311;
      unint64_t v332 = v330 | (v328.i64[1] << v331);
      if ((v331 & 0x3F) + v329.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v331 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v332;
        unint64_t v332 = (unint64_t)v328.i64[1] >> -(v331 & 0x3F);
        if ((v331 & 0x3F) == 0) {
          unint64_t v332 = 0;
        }
      }
      unint64_t v333 = v331 + v329.i64[1];
      int8x16_t v334 = vextq_s8((int8x16_t)0, v466, 0xCuLL);
      v335.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v335.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v336.i64[0] = -1;
      v336.i64[1] = -1;
      uint8x16_t v337 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v336, (uint8x16_t)vaddq_s8(v334, v335)), v455);
      int16x8_t v338 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v334.i8);
      int16x8_t v339 = (int16x8_t)vmovl_high_u8((uint8x16_t)v334);
      uint16x8_t v340 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v337.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v338)), (int16x8_t)vshlq_u16(vmovl_high_u8(v337), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v339)));
      uint16x8_t v341 = (uint16x8_t)vpaddq_s16(v338, v339);
      int32x4_t v342 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v341.i8);
      int32x4_t v343 = (int32x4_t)vmovl_high_u16(v341);
      int32x4_t v344 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v340.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)), (int32x4_t)vshlq_u32(vmovl_high_u16(v340), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v343)));
      int32x4_t v345 = vpaddq_s32(v342, v343);
      v346.i64[0] = v344.u32[0];
      v346.i64[1] = v344.u32[1];
      uint64x2_t v347 = (uint64x2_t)v346;
      v346.i64[0] = v344.u32[2];
      v346.i64[1] = v344.u32[3];
      uint64x2_t v348 = (uint64x2_t)v346;
      v346.i64[0] = v345.u32[0];
      v346.i64[1] = v345.u32[1];
      int64x2_t v349 = v346;
      v346.i64[0] = v345.u32[2];
      v346.i64[1] = v345.u32[3];
      int64x2_t v350 = vpaddq_s64((int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)), (int64x2_t)vshlq_u64(v348, (uint64x2_t)vzip1q_s64((int64x2_t)0, v346)));
      int64x2_t v351 = vpaddq_s64(v349, v346);
      unint64_t v352 = (v350.i64[0] << v333) | v332;
      if (v351.i64[0] + (v333 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v333 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        unint64_t v352 = (unint64_t)v350.i64[0] >> -(v333 & 0x3F);
        if ((v333 & 0x3F) == 0) {
          unint64_t v352 = 0;
        }
      }
      unint64_t v353 = v351.i64[0] + v333;
      unint64_t v354 = v352 | (v350.i64[1] << v353);
      if ((v353 & 0x3F) + v351.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v354;
        unint64_t v354 = (unint64_t)v350.i64[1] >> -(v353 & 0x3F);
        if ((v353 & 0x3F) == 0) {
          unint64_t v354 = 0;
        }
      }
      unint64_t v355 = v353 + v351.i64[1];
      v356.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v356.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v357.i64[0] = -1;
      v357.i64[1] = -1;
      uint8x16_t v358 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v357, (uint8x16_t)vaddq_s8(v466, v356)), v457);
      int16x8_t v359 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v466.i8);
      int16x8_t v360 = (int16x8_t)vmovl_high_u8((uint8x16_t)v466);
      uint16x8_t v361 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v358.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v359)), (int16x8_t)vshlq_u16(vmovl_high_u8(v358), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v360)));
      uint16x8_t v362 = (uint16x8_t)vpaddq_s16(v359, v360);
      int32x4_t v363 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v362.i8);
      int32x4_t v364 = (int32x4_t)vmovl_high_u16(v362);
      int32x4_t v365 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v361.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v363)), (int32x4_t)vshlq_u32(vmovl_high_u16(v361), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)));
      int32x4_t v366 = vpaddq_s32(v363, v364);
      v367.i64[0] = v365.u32[0];
      v367.i64[1] = v365.u32[1];
      uint64x2_t v368 = (uint64x2_t)v367;
      v367.i64[0] = v365.u32[2];
      v367.i64[1] = v365.u32[3];
      uint64x2_t v369 = (uint64x2_t)v367;
      v367.i64[0] = v366.u32[0];
      v367.i64[1] = v366.u32[1];
      int64x2_t v370 = v367;
      v367.i64[0] = v366.u32[2];
      v367.i64[1] = v366.u32[3];
      int64x2_t v371 = vpaddq_s64((int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)), (int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v367)));
      int64x2_t v372 = vpaddq_s64(v370, v367);
      unint64_t v373 = (v371.i64[0] << v355) | v354;
      if (v372.i64[0] + (v355 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v355 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v373;
        if ((v355 & 0x3F) != 0) {
          unint64_t v373 = (unint64_t)v371.i64[0] >> -(v355 & 0x3F);
        }
        else {
          unint64_t v373 = 0;
        }
      }
      uint64_t v374 = v372.i64[1];
      unint64_t v375 = v372.i64[0] + v355;
      uint64_t v376 = (v372.i64[0] + v355) & 0x3F;
      unint64_t v377 = v373 | (v371.i64[1] << v375);
      if ((unint64_t)(v376 + v372.i64[1]) >= 0x40)
      {
        *(void *)((char *)v258 + ((v375 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
        unint64_t v377 = (unint64_t)v371.i64[1] >> -(char)v376;
        if (!v376) {
          unint64_t v377 = 0;
        }
      }
      uint64_t v378 = 0;
      v379.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v379.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v380.i64[0] = -1;
      v380.i64[1] = -1;
      unint64_t v381 = v375 + v374;
      char v382 = 1;
      do
      {
        char v383 = v382;
        uint8x16_t v384 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v380, (uint8x16_t)vaddq_s8(v467, v379)), *(&v458 + v378));
        int16x8_t v385 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v467.i8);
        int16x8_t v386 = (int16x8_t)vmovl_high_u8((uint8x16_t)v467);
        uint16x8_t v387 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v384.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v385)), (int16x8_t)vshlq_u16(vmovl_high_u8(v384), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v386)));
        uint16x8_t v388 = (uint16x8_t)vpaddq_s16(v385, v386);
        int32x4_t v389 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v388.i8);
        int32x4_t v390 = (int32x4_t)vmovl_high_u16(v388);
        int32x4_t v391 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v387.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v389)), (int32x4_t)vshlq_u32(vmovl_high_u16(v387), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)));
        int32x4_t v392 = vpaddq_s32(v389, v390);
        v393.i64[0] = v391.u32[0];
        v393.i64[1] = v391.u32[1];
        uint64x2_t v394 = (uint64x2_t)v393;
        v393.i64[0] = v391.u32[2];
        v393.i64[1] = v391.u32[3];
        uint64x2_t v395 = (uint64x2_t)v393;
        v393.i64[0] = v392.u32[0];
        v393.i64[1] = v392.u32[1];
        int64x2_t v396 = v393;
        v393.i64[0] = v392.u32[2];
        v393.i64[1] = v392.u32[3];
        int64x2_t v397 = vpaddq_s64((int64x2_t)vshlq_u64(v394, (uint64x2_t)vzip1q_s64((int64x2_t)0, v396)), (int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v393)));
        int64x2_t v398 = vpaddq_s64(v396, v393);
        unint64_t v399 = (v397.i64[0] << v381) | v377;
        if (v398.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v399;
          unint64_t v399 = (unint64_t)v397.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v399 = 0;
          }
        }
        unint64_t v400 = v398.i64[0] + v381;
        unint64_t v377 = v399 | (v397.i64[1] << v400);
        if ((v400 & 0x3F) + v398.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v400 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v397.i64[1] >> -(v400 & 0x3F);
          if ((v400 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v382 = 0;
        unint64_t v381 = v400 + v398.i64[1];
        uint64_t v378 = 1;
      }
      while ((v383 & 1) != 0);
      uint64_t v401 = 0;
      char v402 = 1;
      v403.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v403.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        char v405 = v402;
        uint8x16_t v406 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v404, (uint8x16_t)vaddq_s8(v468, v403)), *(&v460 + v401));
        int16x8_t v407 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v468.i8);
        int16x8_t v408 = (int16x8_t)vmovl_high_u8((uint8x16_t)v468);
        uint16x8_t v409 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v406.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v407)), (int16x8_t)vshlq_u16(vmovl_high_u8(v406), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v408)));
        uint16x8_t v410 = (uint16x8_t)vpaddq_s16(v407, v408);
        int32x4_t v411 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v410.i8);
        int32x4_t v412 = (int32x4_t)vmovl_high_u16(v410);
        int32x4_t v413 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v409.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v411)), (int32x4_t)vshlq_u32(vmovl_high_u16(v409), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v412)));
        int32x4_t v414 = vpaddq_s32(v411, v412);
        v415.i64[0] = v413.u32[0];
        v415.i64[1] = v413.u32[1];
        uint64x2_t v416 = (uint64x2_t)v415;
        v415.i64[0] = v413.u32[2];
        v415.i64[1] = v413.u32[3];
        uint64x2_t v417 = (uint64x2_t)v415;
        v415.i64[0] = v414.u32[0];
        v415.i64[1] = v414.u32[1];
        int64x2_t v418 = v415;
        v415.i64[0] = v414.u32[2];
        v415.i64[1] = v414.u32[3];
        int64x2_t v419 = vpaddq_s64((int64x2_t)vshlq_u64(v416, (uint64x2_t)vzip1q_s64((int64x2_t)0, v418)), (int64x2_t)vshlq_u64(v417, (uint64x2_t)vzip1q_s64((int64x2_t)0, v415)));
        int64x2_t v420 = vpaddq_s64(v418, v415);
        unint64_t v421 = (v419.i64[0] << v381) | v377;
        if (v420.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v421;
          unint64_t v421 = (unint64_t)v419.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v421 = 0;
          }
        }
        unint64_t v422 = v420.i64[0] + v381;
        unint64_t v377 = v421 | (v419.i64[1] << v422);
        if ((v422 & 0x3F) + v420.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v422 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v419.i64[1] >> -(v422 & 0x3F);
          if ((v422 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v402 = 0;
        unint64_t v381 = v422 + v420.i64[1];
        uint64_t v401 = 1;
      }
      while ((v405 & 1) != 0);
      uint64_t v423 = 0;
      char v424 = 1;
      v425.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v425.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v426.i64[0] = -1;
      v426.i64[1] = -1;
      do
      {
        char v427 = v424;
        uint8x16_t v428 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v426, (uint8x16_t)vaddq_s8(v469, v425)), *(&v462 + v423));
        int16x8_t v429 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v469.i8);
        int16x8_t v430 = (int16x8_t)vmovl_high_u8((uint8x16_t)v469);
        uint16x8_t v431 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v428.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v429)), (int16x8_t)vshlq_u16(vmovl_high_u8(v428), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v430)));
        uint16x8_t v432 = (uint16x8_t)vpaddq_s16(v429, v430);
        int32x4_t v433 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v432.i8);
        int32x4_t v434 = (int32x4_t)vmovl_high_u16(v432);
        int32x4_t v435 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v431.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v433)), (int32x4_t)vshlq_u32(vmovl_high_u16(v431), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v434)));
        int32x4_t v436 = vpaddq_s32(v433, v434);
        v437.i64[0] = v435.u32[0];
        v437.i64[1] = v435.u32[1];
        uint64x2_t v438 = (uint64x2_t)v437;
        v437.i64[0] = v435.u32[2];
        v437.i64[1] = v435.u32[3];
        uint64x2_t v439 = (uint64x2_t)v437;
        v437.i64[0] = v436.u32[0];
        v437.i64[1] = v436.u32[1];
        int64x2_t v440 = v437;
        v437.i64[0] = v436.u32[2];
        v437.i64[1] = v436.u32[3];
        int64x2_t v441 = vpaddq_s64((int64x2_t)vshlq_u64(v438, (uint64x2_t)vzip1q_s64((int64x2_t)0, v440)), (int64x2_t)vshlq_u64(v439, (uint64x2_t)vzip1q_s64((int64x2_t)0, v437)));
        int64x2_t v442 = vpaddq_s64(v440, v437);
        unint64_t v443 = (v441.i64[0] << v381) | v377;
        if (v442.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v443;
          unint64_t v443 = (unint64_t)v441.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v443 = 0;
          }
        }
        unint64_t v444 = v442.i64[0] + v381;
        unint64_t v377 = v443 | (v441.i64[1] << v444);
        if ((v444 & 0x3F) + v442.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v444 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v441.i64[1] >> -(v444 & 0x3F);
          if ((v444 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v424 = 0;
        unint64_t v381 = v444 + v442.i64[1];
        uint64_t v423 = 1;
      }
      while ((v427 & 1) != 0);
      if ((v381 & 0x3F) != 0) {
        *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
      }
      unint64_t result = (v381 - v259 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v106 = *MEMORY[0x263EF8340];
  long long v104 = 0u;
  long long v105 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  uint64_t v11 = a6;
  if (a5 > 1)
  {
    uint64_t v21 = a5 & 0xFE;
    if (a5 == v21)
    {
      uint64_t v22 = 0;
      int8x16_t v23 = (int *)(a3 + 4);
      int8x16_t v24 = &v99;
      do
      {
        int8x16_t v25 = v24;
        int8x16_t v26 = v23;
        uint64_t v27 = a5;
        do
        {
          int v28 = *v26;
          *((_DWORD *)v25 - 4) = *(v26 - 1);
          *(_DWORD *)int8x16_t v25 = v28;
          v25 += 2;
          v26 += 2;
          v27 -= 2;
        }
        while (v27);
        ++v22;
        int8x16_t v23 = (int *)((char *)v23 + a4);
        int8x16_t v24 = (long long *)((char *)v24 + 4);
      }
      while (v22 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (int *)(a3 + 4);
      int8x16_t v31 = &v99;
      int8x16_t v32 = (char *)&v98 + ((16 * a5) & 0xFE0);
      do
      {
        int8x16_t v33 = v31;
        int8x16_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          int v36 = *v34;
          *((_DWORD *)v33 - 4) = *(v34 - 1);
          *(_DWORD *)int8x16_t v33 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 2;
        }
        while (v35);
        int8x16_t v37 = (int *)(a3 + v29 * a4 + 4 * v21);
        int8x16_t v38 = v32;
        uint64_t v39 = a5 - v21;
        do
        {
          int v40 = *v37++;
          *int8x16_t v38 = v40;
          v38 += 4;
          --v39;
        }
        while (v39);
        ++v29;
        int8x16_t v30 = (int *)((char *)v30 + a4);
        int8x16_t v31 = (long long *)((char *)v31 + 4);
        v32 += 4;
      }
      while (v29 != v11);
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v12 = a6 & 0xFE;
    int8x16_t v13 = (int *)(a3 + 1);
    int64x2_t v14 = (_DWORD *)&v98 + 1;
    uint64_t v15 = v12;
    do
    {
      int v16 = *(int *)((char *)v13 - 1);
      int v17 = *v13;
      int8x16_t v13 = (int *)((char *)v13 + 2);
      *(v14 - 1) = v16;
      *int64x2_t v14 = v17;
      v14 += 2;
      v15 -= 2;
    }
    while (v15);
    if (v12 != a6)
    {
LABEL_7:
      uint64_t v18 = a6 - v12;
      int8x16_t v19 = (_DWORD *)&v98 + v12;
      int8x16_t v20 = (_DWORD *)(a3 + v12 * a4);
      do
      {
        *v19++ = *v20;
        int8x16_t v20 = (_DWORD *)((char *)v20 + a4);
        --v18;
      }
      while (v18);
    }
  }
  uint16x4_t v41 = (uint16x4_t)vmovl_u8((uint8x8_t)v98).u64[0];
  uint32x4_t v42 = vmovl_u16(v41);
  v41.i32[0] = v99;
  uint32x4_t v43 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v41));
  uint32x4_t v90 = v42;
  uint32x4_t v91 = v43;
  v43.i32[0] = DWORD1(v98);
  v43.i64[0] = vmovl_u8(*(uint8x8_t *)v43.i8).u64[0];
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)v43.i8);
  v43.i32[0] = DWORD1(v99);
  uint32x4_t v45 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v43.i8));
  uint32x4_t v92 = v44;
  uint32x4_t v93 = v45;
  v45.i32[0] = v100;
  v45.i64[0] = vmovl_u8(*(uint8x8_t *)v45.i8).u64[0];
  uint32x4_t v46 = vmovl_u16(*(uint16x4_t *)v45.i8);
  v45.i32[0] = v101;
  uint32x4_t v47 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v45.i8));
  uint32x4_t v94 = v46;
  uint32x4_t v95 = v47;
  v47.i32[0] = DWORD1(v100);
  v47.i64[0] = vmovl_u8(*(uint8x8_t *)v47.i8).u64[0];
  uint32x4_t v48 = vmovl_u16(*(uint16x4_t *)v47.i8);
  v47.i32[0] = DWORD1(v101);
  uint32x4_t v96 = v48;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v47.i8));
  if (a5 >= 4) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = a5;
  }
  if (a5 >= 4) {
    unsigned int v50 = a5 - 4;
  }
  else {
    unsigned int v50 = 0;
  }
  if (a6 >= 2) {
    unsigned int v51 = 2;
  }
  else {
    unsigned int v51 = a6;
  }
  if (a6 >= 2) {
    unsigned int v52 = a6 - 2;
  }
  else {
    unsigned int v52 = 0;
  }
  char v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v90, a7, v49, v51);
  v54.i32[0] = DWORD2(v98);
  uint16x4_t v55 = (uint16x4_t)vmovl_u8(v54).u64[0];
  uint32x4_t v56 = vmovl_u16(v55);
  v55.i32[0] = DWORD2(v99);
  uint32x4_t v57 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v55));
  uint32x4_t v90 = v56;
  uint32x4_t v91 = v57;
  v57.i32[0] = HIDWORD(v98);
  v57.i64[0] = vmovl_u8(*(uint8x8_t *)v57.i8).u64[0];
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)v57.i8);
  v57.i32[0] = HIDWORD(v99);
  uint32x4_t v59 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v57.i8));
  uint32x4_t v92 = v58;
  uint32x4_t v93 = v59;
  v59.i32[0] = DWORD2(v100);
  v59.i64[0] = vmovl_u8(*(uint8x8_t *)v59.i8).u64[0];
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)v59.i8);
  v59.i32[0] = DWORD2(v101);
  uint32x4_t v61 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v59.i8));
  uint32x4_t v94 = v60;
  uint32x4_t v95 = v61;
  v61.i32[0] = HIDWORD(v100);
  v61.i64[0] = vmovl_u8(*(uint8x8_t *)v61.i8).u64[0];
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)v61.i8);
  v61.i32[0] = HIDWORD(v101);
  uint32x4_t v96 = v62;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v61.i8));
  if (a6 >= 4) {
    unsigned int v63 = 2;
  }
  else {
    unsigned int v63 = v52;
  }
  int v64 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v90, a7, v49, v63);
  v65.i32[0] = v102;
  uint16x4_t v66 = (uint16x4_t)vmovl_u8(v65).u64[0];
  uint32x4_t v67 = vmovl_u16(v66);
  v66.i32[0] = v103;
  uint32x4_t v68 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v66));
  uint32x4_t v90 = v67;
  uint32x4_t v91 = v68;
  v68.i32[0] = DWORD1(v102);
  v68.i64[0] = vmovl_u8(*(uint8x8_t *)v68.i8).u64[0];
  uint32x4_t v69 = vmovl_u16(*(uint16x4_t *)v68.i8);
  v68.i32[0] = DWORD1(v103);
  uint32x4_t v70 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v68.i8));
  uint32x4_t v92 = v69;
  uint32x4_t v93 = v70;
  v70.i32[0] = v104;
  v70.i64[0] = vmovl_u8(*(uint8x8_t *)v70.i8).u64[0];
  uint32x4_t v71 = vmovl_u16(*(uint16x4_t *)v70.i8);
  v70.i32[0] = v105;
  uint32x4_t v72 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v70.i8));
  uint32x4_t v94 = v71;
  uint32x4_t v95 = v72;
  v72.i32[0] = DWORD1(v104);
  v72.i64[0] = vmovl_u8(*(uint8x8_t *)v72.i8).u64[0];
  uint32x4_t v73 = vmovl_u16(*(uint16x4_t *)v72.i8);
  v72.i32[0] = DWORD1(v105);
  uint32x4_t v96 = v73;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v72.i8));
  if (a5 >= 8) {
    unsigned int v74 = 4;
  }
  else {
    unsigned int v74 = v50;
  }
  int v75 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v90, a7, v74, v51);
  v76.i32[0] = DWORD2(v102);
  uint16x4_t v77 = (uint16x4_t)vmovl_u8(v76).u64[0];
  uint32x4_t v78 = vmovl_u16(v77);
  v77.i32[0] = DWORD2(v103);
  uint32x4_t v79 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v77));
  uint32x4_t v90 = v78;
  uint32x4_t v91 = v79;
  v79.i32[0] = HIDWORD(v102);
  v79.i64[0] = vmovl_u8(*(uint8x8_t *)v79.i8).u64[0];
  uint32x4_t v80 = vmovl_u16(*(uint16x4_t *)v79.i8);
  v79.i32[0] = HIDWORD(v103);
  uint32x4_t v81 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v79.i8));
  uint32x4_t v92 = v80;
  uint32x4_t v93 = v81;
  v81.i32[0] = DWORD2(v104);
  v81.i64[0] = vmovl_u8(*(uint8x8_t *)v81.i8).u64[0];
  uint32x4_t v82 = vmovl_u16(*(uint16x4_t *)v81.i8);
  v81.i32[0] = DWORD2(v105);
  uint32x4_t v83 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v81.i8));
  uint32x4_t v94 = v82;
  uint32x4_t v95 = v83;
  v83.i32[0] = HIDWORD(v104);
  v83.i64[0] = vmovl_u8(*(uint8x8_t *)v83.i8).u64[0];
  uint32x4_t v84 = vmovl_u16(*(uint16x4_t *)v83.i8);
  v83.i32[0] = HIDWORD(v105);
  uint32x4_t v96 = v84;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v83.i8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 72, (uint64_t)&v90, a7, v74, v63);
  if (v75) {
    char v86 = 4;
  }
  else {
    char v86 = 0;
  }
  if (v64) {
    char v87 = 2;
  }
  else {
    char v87 = 0;
  }
  if (result) {
    char v88 = -8;
  }
  else {
    char v88 = -16;
  }
  *a2 = v88 | v86 | v53 | v87;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v331 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v300 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v299 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v298 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v297 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v295 = v9;
  BOOL v296 = v14;
  BOOL v15 = a4 < 2 || a5 == 0;
  do
  {
    *(unsigned int *)((char *)&v327 + v8 * 4) = 8;
    v315[v8] = 0;
    *(_DWORD *)((char *)&v314[2] + v8 * 4) = 128;
    int8x16_t v23 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      int8x16_t v25 = &v317[v8];
      if ((*v23 ^ 0x80) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = *v23 ^ 0x80;
      }
      *int8x16_t v25 = v24;
      if ((v23[4] ^ 0x80) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v23[4] ^ 0x80;
      }
      v25[4] = v26;
      if ((v23[8] ^ 0x80) == 1) {
        unsigned int v27 = 0;
      }
      else {
        unsigned int v27 = v23[8] ^ 0x80;
      }
      v25[8] = v27;
      if ((v23[12] ^ 0x80) == 1) {
        unsigned int v28 = 0;
      }
      else {
        unsigned int v28 = v23[12] ^ 0x80;
      }
      v25[12] = v28;
      unsigned int v29 = v23[16] ^ 0x80;
      if (v29 == 1) {
        unsigned int v29 = 0;
      }
      v25[16] = v29;
      unsigned int v30 = v23[20] ^ 0x80;
      if (v30 == 1) {
        unsigned int v30 = 0;
      }
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x80;
      if (v31 == 1) {
        unsigned int v31 = 0;
      }
      v25[24] = v31;
      int v33 = v23[28] ^ 0x80;
      if (v33 == 1) {
        unsigned int v32 = 0;
      }
      else {
        unsigned int v32 = v33;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v24 = *v23 ^ 0x80;
      int8x16_t v25 = &v317[v8];
      *int8x16_t v25 = v24;
      unsigned int v26 = v23[4] ^ 0x80;
      v25[4] = v26;
      unsigned int v27 = v23[8] ^ 0x80;
      v25[8] = v27;
      unsigned int v28 = v23[12] ^ 0x80;
      v25[12] = v28;
      unsigned int v29 = v23[16] ^ 0x80;
      v25[16] = v29;
      unsigned int v30 = v23[20] ^ 0x80;
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x80;
      v25[24] = v31;
      unsigned int v32 = v23[28] ^ 0x80;
    }
    else
    {
      unsigned int v24 = *v23;
      int8x16_t v25 = &v317[v8];
      *int8x16_t v25 = *v23;
      unsigned int v26 = v23[4];
      v25[4] = v26;
      unsigned int v27 = v23[8];
      v25[8] = v27;
      unsigned int v28 = v23[12];
      v25[12] = v28;
      unsigned int v29 = v23[16];
      v25[16] = v29;
      unsigned int v30 = v23[20];
      v25[20] = v30;
      unsigned int v31 = v23[24];
      v25[24] = v31;
      unsigned int v32 = v23[28];
    }
    v25[28] = v32;
    int8x16_t v34 = &v322[v8 + 4];
    v322[v8 + 4] = v24;
    *(int *)((char *)&v323 + v8 * 4) = v24;
    v322[v8] = 0;
    unsigned int v35 = v24;
    if (v15)
    {
      if (v296) {
        goto LABEL_59;
      }
    }
    else
    {
      if (v26 < v24)
      {
        v322[v8] = 1;
        *(int *)((char *)&v323 + v8 * 4) = v26;
        unsigned int v35 = v26;
      }
      if (v24 >= v26) {
        int v36 = &v322[v8 + 4];
      }
      else {
        int v36 = &v317[v8 + 4];
      }
      unsigned int v24 = *v36;
      *int8x16_t v34 = *v36;
      if (v296)
      {
LABEL_59:
        if (v295) {
          goto LABEL_60;
        }
        goto LABEL_77;
      }
    }
    if (v27 < v35)
    {
      v322[v8] = 2;
      *(int *)((char *)&v323 + v8 * 4) = v27;
      unsigned int v35 = v27;
    }
    if (v24 >= v27) {
      int8x16_t v37 = &v322[v8 + 4];
    }
    else {
      int8x16_t v37 = &v317[v8 + 8];
    }
    unsigned int v24 = *v37;
    *int8x16_t v34 = *v37;
    if (v295)
    {
LABEL_60:
      if (v297) {
        goto LABEL_61;
      }
      goto LABEL_83;
    }
LABEL_77:
    if (v28 < v35)
    {
      v322[v8] = 3;
      *(int *)((char *)&v323 + v8 * 4) = v28;
      unsigned int v35 = v28;
    }
    if (v24 >= v28) {
      int8x16_t v38 = &v322[v8 + 4];
    }
    else {
      int8x16_t v38 = &v317[v8 + 12];
    }
    unsigned int v24 = *v38;
    *int8x16_t v34 = *v38;
    if (v297)
    {
LABEL_61:
      if (v299) {
        goto LABEL_62;
      }
      goto LABEL_89;
    }
LABEL_83:
    if (v29 < v35)
    {
      v322[v8] = 4;
      *(int *)((char *)&v323 + v8 * 4) = v29;
      unsigned int v35 = v29;
    }
    if (v24 >= v29) {
      uint64_t v39 = &v322[v8 + 4];
    }
    else {
      uint64_t v39 = &v317[v8 + 16];
    }
    unsigned int v24 = *v39;
    *int8x16_t v34 = *v39;
    if (v299)
    {
LABEL_62:
      if (v298) {
        goto LABEL_63;
      }
      goto LABEL_94;
    }
LABEL_89:
    if (v30 < v35)
    {
      v322[v8] = 5;
      *(int *)((char *)&v323 + v8 * 4) = v30;
      unsigned int v35 = v30;
    }
    int v40 = &v317[v8 + 20];
    if (v24 >= v30) {
      int v40 = &v322[v8 + 4];
    }
    unsigned int v24 = *v40;
    *int8x16_t v34 = *v40;
    if (v298)
    {
LABEL_63:
      if (v300) {
        goto LABEL_104;
      }
LABEL_99:
      if (v32 < v35)
      {
        v322[v8] = 7;
        *(int *)((char *)&v323 + v8 * 4) = v32;
        unsigned int v35 = v32;
      }
      uint32x4_t v42 = &v317[v8 + 28];
      if (v24 >= v32) {
        uint32x4_t v42 = &v322[v8 + 4];
      }
      unsigned int v24 = *v42;
      *int8x16_t v34 = *v42;
      goto LABEL_104;
    }
LABEL_94:
    if (v31 < v35)
    {
      v322[v8] = 6;
      *(int *)((char *)&v323 + v8 * 4) = v31;
      unsigned int v35 = v31;
    }
    uint16x4_t v41 = &v317[v8 + 24];
    if (v24 >= v31) {
      uint16x4_t v41 = &v322[v8 + 4];
    }
    unsigned int v24 = *v41;
    *int8x16_t v34 = *v41;
    if (!v300) {
      goto LABEL_99;
    }
LABEL_104:
    int v43 = __clz(v24 - v35);
    unsigned int v44 = 32 - v43;
    if (v43 > 32) {
      unsigned int v44 = -1;
    }
    if (v35) {
      BOOL v45 = v35 == 255;
    }
    else {
      BOOL v45 = 1;
    }
    int v46 = !v45;
    if (v44 < 2 && v24 == v35) {
      unsigned int v48 = v46;
    }
    else {
      unsigned int v48 = v44 + 1;
    }
    *(unsigned int *)((char *)&v318 + v8 * 4) = v48;
    if ((a3 | 2) != 3)
    {
      BOOL v49 = 0;
LABEL_124:
      if (v48 <= 5) {
        goto LABEL_125;
      }
      goto LABEL_21;
    }
    BOOL v49 = 0;
    if (v24 >= 0x80)
    {
      if (v35 <= 0x7F)
      {
        BOOL v49 = kDQuadParamTable[10 * v48 + 8] == 0;
        if (v48 <= 5) {
          goto LABEL_125;
        }
        goto LABEL_21;
      }
      goto LABEL_124;
    }
    if (v48 <= 5)
    {
LABEL_125:
      if (!v49) {
        goto LABEL_31;
      }
    }
LABEL_21:
    int v16 = kDQuadParamTable[10 * v48 + 4] - v49;
    unsigned int v17 = v16 + 2;
    if (v49) {
      int v18 = 0;
    }
    else {
      int v18 = -2;
    }
    int v19 = v35 & ~(-1 << (6 - v16));
    if (v17 >= 8) {
      int v19 = 0;
    }
    int v20 = v19 + v18;
    unsigned int v21 = __clz(v20 + v24 - v35);
    if (v20 >= 1 && v21 < v43) {
      *(unsigned int *)((char *)&v318 + v8 * 4) = v48 + 1;
    }
LABEL_31:
    ++v8;
  }
  while (v8 != 4);
  v314[0] = 0;
  v314[1] = 0;
  v313[0] = 0;
  v313[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v315, &v318, v314, v313);
  unint64_t v50 = 0;
  int v51 = 0;
  if (a4) {
    BOOL v52 = a5 == 0;
  }
  else {
    BOOL v52 = 1;
  }
  int v53 = v52;
  while (2)
  {
    uint64_t v55 = v315[v50 / 4];
    int v56 = *(unsigned int *)((char *)&v318 + v50);
    uint32x4_t v57 = &kDQuadParamTable[160 * v55 + 10 * v56];
    int v58 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
          + 4 * v55
          + 1);
    int v59 = v57[5];
    unsigned int v60 = v57[4] + v58;
    *(unsigned int *)((char *)&v309 + v50) = v60;
    int v61 = v59 + v58;
    *(unsigned int *)((char *)&v305 + v50) = v61;
    unint64_t v62 = *((void *)v57 + 1);
    int v63 = *(_DWORD *)((char *)v313 + v50) - *(_DWORD *)((char *)v314 + v50);
    if (v63 < 0)
    {
      if (kDQuadParamTable[160 * v55 + 7 + 10 * v56] < *(_DWORD *)((char *)v314 + v50)
                                                                    - *(_DWORD *)((char *)v313 + v50))
      {
        *(unsigned int *)((char *)&v305 + v50) = --v61;
        if (!kDQuadParamTable[160 * v55 + 8 + 10 * v56])
        {
          int v64 = -1;
LABEL_142:
          *(unsigned int *)((char *)&v309 + v50) = v64 + v60;
        }
      }
    }
    else if (v63)
    {
      v61 += v63;
      *(unsigned int *)((char *)&v305 + v50) = v61;
      int v64 = v63;
      goto LABEL_142;
    }
    if (v55 == 5)
    {
      int v65 = (v63 < 2) | v51;
      if (v56 == 1) {
        int v51 = v65;
      }
    }
    if (a3 == 4)
    {
      if (v55 == 3) {
        int v66 = 31744;
      }
      else {
        int v66 = 0;
      }
      if (v55 == 4) {
        int v67 = 2139095040;
      }
      else {
        int v67 = v66;
      }
      int v68 = 1 << (*(unsigned int *)((char *)&v327 + v50) - 1);
      if (v53)
      {
        if (v15) {
          goto LABEL_157;
        }
LABEL_171:
        unsigned int v72 = v317[v50 / 4 + 4];
        BOOL v74 = (v67 & ~v72) == 0 || v72 == v68;
        v51 |= v74;
        if (!v296) {
          goto LABEL_178;
        }
LABEL_158:
        if (v295) {
          goto LABEL_159;
        }
LABEL_185:
        unsigned int v78 = v317[v50 / 4 + 12];
        BOOL v80 = (v67 & ~v78) == 0 || v78 == v68;
        v51 |= v80;
        if (!v297) {
          goto LABEL_192;
        }
LABEL_160:
        if (v299) {
          goto LABEL_161;
        }
LABEL_199:
        unsigned int v84 = v317[v50 / 4 + 20];
        BOOL v86 = (v67 & ~v84) == 0 || v84 == v68;
        v51 |= v86;
        if (!v298) {
          goto LABEL_206;
        }
LABEL_162:
        if (!v300) {
          goto LABEL_213;
        }
      }
      else
      {
        unsigned int v69 = v317[v50 / 4];
        BOOL v71 = (v67 & ~v69) == 0 || v69 == v68;
        v51 |= v71;
        if (!v15) {
          goto LABEL_171;
        }
LABEL_157:
        if (v296) {
          goto LABEL_158;
        }
LABEL_178:
        unsigned int v75 = v317[v50 / 4 + 8];
        BOOL v77 = (v67 & ~v75) == 0 || v75 == v68;
        v51 |= v77;
        if (!v295) {
          goto LABEL_185;
        }
LABEL_159:
        if (v297) {
          goto LABEL_160;
        }
LABEL_192:
        unsigned int v81 = v317[v50 / 4 + 16];
        BOOL v83 = (v67 & ~v81) == 0 || v81 == v68;
        v51 |= v83;
        if (!v299) {
          goto LABEL_199;
        }
LABEL_161:
        if (v298) {
          goto LABEL_162;
        }
LABEL_206:
        unsigned int v87 = v317[v50 / 4 + 24];
        BOOL v89 = (v67 & ~v87) == 0 || v87 == v68;
        v51 |= v89;
        if (!v300)
        {
LABEL_213:
          unsigned int v90 = v317[v50 / 4 + 28];
          BOOL v92 = (v67 & ~v90) == 0 || v90 == v68;
          v51 |= v92;
        }
      }
    }
    if (v62 >> v61 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)15,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v50
                                       + 16))
      int v54 = 1;
    else {
      int v54 = v53;
    }
    v51 |= v54;
    v50 += 4;
    if (v50 != 16) {
      continue;
    }
    break;
  }
  uint64_t v93 = 0;
  uint64_t v303 = 0;
  uint64_t v304 = 0;
  memset(v302, 0, sizeof(v302));
  uint32x4_t v94 = v317;
  uint32x4_t v95 = v316;
  do
  {
    uint64_t v96 = 0;
    unsigned int v97 = 0;
    unsigned int v98 = *(&v327 + v93);
    if (v98 >= *(&v309 + v93)) {
      unsigned int v99 = *(&v309 + v93);
    }
    else {
      unsigned int v99 = *(&v327 + v93);
    }
    *(&v309 + v93) = v99;
    long long v100 = &kDQuadParamTable[160 * v315[v93] + 10 * *(&v318 + v93)];
    unsigned int v101 = *(&v305 + v93);
    if (v100[5]) {
      unsigned int v102 = v98;
    }
    else {
      unsigned int v102 = 0;
    }
    if (v102 < v101) {
      unsigned int v101 = v102;
    }
    int v103 = *(&v323 + v93) & (-1 << (v98 - v99));
    long long v104 = &v317[v93];
    int v105 = *v104 - v103;
    uint64_t v106 = &v316[2 * v93];
    if (v53) {
      int v105 = 0;
    }
    int v107 = v104[4] - v103;
    if (v15) {
      int v107 = 0;
    }
    *uint64_t v106 = v105;
    v106[1] = v107;
    int v108 = v104[8] - v103;
    if (v296) {
      int v108 = 0;
    }
    int v109 = v104[12] - v103;
    if (v295) {
      int v109 = 0;
    }
    v106[2] = v108;
    v106[3] = v109;
    int v110 = v104[16] - v103;
    if (v297) {
      int v110 = 0;
    }
    int v111 = v104[20] - v103;
    if (v299) {
      int v111 = 0;
    }
    v106[4] = v110;
    v106[5] = v111;
    uint64_t v112 = -1 << v98;
    *(&v305 + v93) = v101;
    unint64_t v113 = *((void *)v100 + 1);
    *((_DWORD *)&v303 + v93) = v103;
    unint64_t v114 = v113 >> v101;
    int v115 = v104[24] - v103;
    if (v298) {
      int v115 = 0;
    }
    int v116 = v104[28] - v103;
    if (v300) {
      int v116 = 0;
    }
    v106[6] = v115;
    v106[7] = v116;
    if (v114 <= 1) {
      unint64_t v117 = 1;
    }
    else {
      unint64_t v117 = v114;
    }
    uint64_t v118 = 4 * v322[v93];
    int8x16_t v119 = &byte_242EA911D;
    do
    {
      if (v118 != v96)
      {
        if (v101) {
          unint64_t v120 = *(unsigned int *)((char *)v95 + v96) / v117;
        }
        else {
          LODWORD(v120) = 0;
        }
        int8x16_t v121 = (int *)v302 + 7 * v93 + v97;
        *int8x16_t v121 = v120;
        if (v114 >= 2)
        {
          unint64_t v122 = *(unsigned int *)((char *)v95 + v96);
          if (v122)
          {
            if (v122 / v117 * v117 == v122 && ((v122 / v117) & 1) != 0)
            {
              if (v103 || v120 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v124 = v94[v96], v125 = *((unsigned int *)&v314[2] + v93), v124 != v125)
                  && ((a3 | 2) != 3 || v117 + v125 != v124))
                {
                  LODWORD(v120) = v120 - 1;
                  *int8x16_t v121 = v120;
                }
              }
              else
              {
                LODWORD(v120) = 1;
              }
            }
          }
        }
        if ((unint64_t)v120 >> v101 || v94[v96] == ~v112) {
          *int8x16_t v121 = ~(-1 << v101);
        }
        if (*v119 >= a5 || *(v119 - 1) >= a4) {
          *int8x16_t v121 = 0;
        }
        ++v97;
      }
      v96 += 4;
      v119 += 2;
    }
    while (v96 != 32);
    ++v93;
    v95 += 2;
    ++v94;
  }
  while (v93 != 4);
  int8x16_t v126 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v127 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v51)
  {
    uint64_t v128 = 0;
    uint64_t v129 = 0;
    unsigned int v130 = v327;
    unsigned int v131 = v328;
    uint64_t v132 = v327 - 2;
    uint64_t v133 = v328 - 2;
    unsigned int v135 = v329;
    unsigned int v134 = v330;
    uint64_t v136 = v329 - 2;
    uint64_t v137 = v330 - 2;
    uint64_t v138 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v139 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v128;
      BOOL v140 = v139[1] >= a5 || *v139 >= a4;
      char v141 = v140;
      if (v140)
      {
        unint64_t v142 = 0;
        if (v132 > 0x100) {
          goto LABEL_298;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)v317[4 * v128] >> 2;
        if (v132 > 0x100) {
          goto LABEL_298;
        }
      }
      if (v130 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v132) <= 0xC0)
      {
        uint64_t v143 = 0;
        unint64_t v144 = v130 - 2;
        do
        {
          unint64_t v145 = 64 - v138;
          if (64 - v138 >= v144) {
            unint64_t v145 = v144;
          }
          v126[v129] |= ((v142 >> v143) & ~(-1 << v145)) << v138;
          v143 += v145;
          unint64_t v146 = v145 + v138;
          v129 += v146 >> 6;
          uint64_t v138 = v146 & 0x3F;
          v144 -= v145;
        }
        while (v144);
      }
LABEL_298:
      if (v141)
      {
        unint64_t v147 = 0;
        if (v133 > 0x100) {
          goto LABEL_308;
        }
      }
      else
      {
        unint64_t v147 = (unint64_t)v317[4 * v128 + 1] >> 2;
        if (v133 > 0x100) {
          goto LABEL_308;
        }
      }
      if (v131 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v133) <= 0xC0)
      {
        uint64_t v148 = 0;
        unint64_t v149 = v131 - 2;
        do
        {
          unint64_t v150 = 64 - v138;
          if (64 - v138 >= v149) {
            unint64_t v150 = v149;
          }
          v126[v129] |= ((v147 >> v148) & ~(-1 << v150)) << v138;
          v148 += v150;
          unint64_t v151 = v150 + v138;
          v129 += v151 >> 6;
          uint64_t v138 = v151 & 0x3F;
          v149 -= v150;
        }
        while (v149);
      }
LABEL_308:
      if (v141)
      {
        unint64_t v152 = 0;
        if (v136 > 0x100) {
          goto LABEL_318;
        }
      }
      else
      {
        unint64_t v152 = (unint64_t)v317[4 * v128 + 2] >> 2;
        if (v136 > 0x100) {
          goto LABEL_318;
        }
      }
      if (v135 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v136) <= 0xC0)
      {
        uint64_t v153 = 0;
        unint64_t v154 = v135 - 2;
        do
        {
          unint64_t v155 = 64 - v138;
          if (64 - v138 >= v154) {
            unint64_t v155 = v154;
          }
          v126[v129] |= ((v152 >> v153) & ~(-1 << v155)) << v138;
          v153 += v155;
          unint64_t v156 = v155 + v138;
          v129 += v156 >> 6;
          uint64_t v138 = v156 & 0x3F;
          v154 -= v155;
        }
        while (v154);
      }
LABEL_318:
      if (v141)
      {
        unint64_t v157 = 0;
        if (v137 <= 0x100) {
          goto LABEL_322;
        }
      }
      else
      {
        unint64_t v157 = (unint64_t)v317[4 * v128 + 3] >> 2;
        if (v137 <= 0x100)
        {
LABEL_322:
          if (v134 != 2 && (unint64_t)(v138 - v127 + (v129 << 6) + v137) <= 0xC0)
          {
            uint64_t v158 = 0;
            unint64_t v159 = v134 - 2;
            do
            {
              unint64_t v160 = 64 - v138;
              if (64 - v138 >= v159) {
                unint64_t v160 = v159;
              }
              v126[v129] |= ((v157 >> v158) & ~(-1 << v160)) << v138;
              v158 += v160;
              unint64_t v161 = v160 + v138;
              v129 += v161 >> 6;
              uint64_t v138 = v161 & 0x3F;
              v159 -= v160;
            }
            while (v159);
          }
        }
      }
      if (++v128 == 8) {
        return v51 & 1;
      }
    }
  }
  unsigned int v162 = v318;
  char v163 = v323 | v318;
  if (v323 | v318)
  {
    char v163 = v318 - 2;
    if (v318 > 2)
    {
      unsigned int v166 = 0;
      unsigned int v165 = 0;
      char v164 = 1;
    }
    else
    {
      char v163 = 0;
      char v164 = 0;
      unsigned int v165 = v318 + 1;
      unsigned int v166 = 2;
    }
  }
  else
  {
    unsigned int v165 = 0;
    char v164 = 0;
    unsigned int v166 = 2;
  }
  unint64_t v167 = ((unint64_t)(v163 & 7) << v127) | *v126;
  *int8x16_t v126 = v167;
  uint64_t v168 = v127 | 3;
  unsigned int v169 = v319;
  char v170 = v324 | v319;
  if (v324 | v319)
  {
    if (v319 < 3)
    {
      char v170 = 0;
      char v171 = 0;
      unsigned int v172 = v319 + 1;
      goto LABEL_338;
    }
    unsigned int v173 = 0;
    unsigned int v172 = 0;
    char v170 = v319 - 2;
    char v171 = 1;
  }
  else
  {
    unsigned int v172 = 0;
    char v171 = 0;
LABEL_338:
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v168 - v127) <= 0xBD)
  {
    *int8x16_t v126 = ((unint64_t)(v170 & 7) << v168) | v167;
    uint64_t v168 = v127 | 6;
  }
  unsigned int v174 = v320;
  if (v325 | v320)
  {
    if (v320 < 3)
    {
      unsigned int v175 = 0;
      char v176 = 0;
      unsigned int v301 = v320 + 1;
      goto LABEL_346;
    }
    unsigned int v177 = 0;
    unsigned int v301 = 0;
    unsigned int v175 = v320 - 2;
    char v176 = 1;
  }
  else
  {
    unsigned int v175 = 0;
    unsigned int v301 = 0;
    char v176 = 0;
LABEL_346:
    unsigned int v177 = 2;
  }
  if ((unint64_t)(v168 - v127 - 190) >= 0xFFFFFFFFFFFFFF3FLL)
  {
    uint64_t v178 = 0;
    uint64_t v179 = 0;
    unint64_t v180 = 3;
    do
    {
      unint64_t v181 = 64 - v168;
      if (64 - v168 >= v180) {
        unint64_t v181 = v180;
      }
      v126[v178] |= (((unint64_t)v175 >> v179) & ~(-1 << v181)) << v168;
      v179 += v181;
      unint64_t v182 = v181 + v168;
      v178 += v182 >> 6;
      uint64_t v168 = v182 & 0x3F;
      v180 -= v181;
    }
    while (v180);
  }
  else
  {
    uint64_t v178 = 0;
  }
  unsigned int v183 = v321;
  int v184 = v326 | v321;
  LODWORD(v185) = v321 - 2;
  if (v321 >= 3)
  {
    unsigned int v186 = 0;
  }
  else
  {
    LODWORD(v185) = 0;
    unsigned int v186 = 2;
  }
  if (v321 < 3) {
    unsigned int v187 = v321 + 1;
  }
  else {
    unsigned int v187 = 0;
  }
  BOOL v188 = v184 == 0;
  if (v184) {
    unint64_t v185 = v185;
  }
  else {
    unint64_t v185 = 0;
  }
  if (v184) {
    uint64_t v189 = v186;
  }
  else {
    uint64_t v189 = 2;
  }
  if (v188) {
    unint64_t v190 = 0;
  }
  else {
    unint64_t v190 = v187;
  }
  BOOL v191 = !v188 && v321 >= 3;
  if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
  {
    uint64_t v192 = 0;
    unint64_t v193 = 3;
    do
    {
      unint64_t v194 = 64 - v168;
      if (64 - v168 >= v193) {
        unint64_t v194 = v193;
      }
      v126[v178] |= ((v185 >> v192) & ~(-1 << v194)) << v168;
      v192 += v194;
      unint64_t v195 = v194 + v168;
      v178 += v195 >> 6;
      uint64_t v168 = v195 & 0x3F;
      v193 -= v194;
    }
    while (v193);
  }
  if (v164)
  {
    int v196 = 12;
    if (v171) {
      goto LABEL_392;
    }
LABEL_386:
    unint64_t v201 = v173;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v173 <= 0xC0)
    {
      uint64_t v202 = 0;
      do
      {
        unint64_t v203 = 64 - v168;
        if (64 - v168 >= v201) {
          unint64_t v203 = v201;
        }
        v126[v178] |= (((unint64_t)v172 >> v202) & ~(-1 << v203)) << v168;
        v202 += v203;
        unint64_t v204 = v203 + v168;
        v178 += v204 >> 6;
        uint64_t v168 = v204 & 0x3F;
        v201 -= v203;
      }
      while (v201);
    }
    v196 += v173;
  }
  else
  {
    unint64_t v197 = v166;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v166 <= 0xC0)
    {
      uint64_t v198 = 0;
      do
      {
        unint64_t v199 = 64 - v168;
        if (64 - v168 >= v197) {
          unint64_t v199 = v197;
        }
        v126[v178] |= (((unint64_t)v165 >> v198) & ~(-1 << v199)) << v168;
        v198 += v199;
        unint64_t v200 = v199 + v168;
        v178 += v200 >> 6;
        uint64_t v168 = v200 & 0x3F;
        v197 -= v199;
      }
      while (v197);
    }
    int v196 = v166 | 0xC;
    if ((v171 & 1) == 0) {
      goto LABEL_386;
    }
  }
LABEL_392:
  if (v176)
  {
    if (v191) {
      goto LABEL_394;
    }
LABEL_402:
    if ((unint64_t)(v168 - v127 + (v178 << 6) + v189) <= 0xC0)
    {
      uint64_t v210 = 0;
      unint64_t v211 = v189;
      do
      {
        unint64_t v212 = 64 - v168;
        if (64 - v168 >= v211) {
          unint64_t v212 = v211;
        }
        v126[v178] |= ((v190 >> v210) & ~(-1 << v212)) << v168;
        v210 += v212;
        unint64_t v213 = v212 + v168;
        v178 += v213 >> 6;
        uint64_t v168 = v213 & 0x3F;
        v211 -= v212;
      }
      while (v211);
    }
    v196 += v189;
    unsigned int v205 = v327;
    if (!v162) {
      goto LABEL_408;
    }
LABEL_412:
    unsigned int v215 = v309;
    if (v309 <= 0x100 && v309 && v168 - v127 + (v178 << 6) + (unint64_t)v309 <= 0xC0)
    {
      uint64_t v216 = 0;
      unint64_t v217 = v303 >> (v205 - v309);
      unint64_t v218 = v309;
      do
      {
        unint64_t v219 = 64 - v168;
        if (64 - v168 >= v218) {
          unint64_t v219 = v218;
        }
        v126[v178] |= ((v217 >> v216) & ~(-1 << v219)) << v168;
        v216 += v219;
        unint64_t v220 = v219 + v168;
        v178 += v220 >> 6;
        uint64_t v168 = v220 & 0x3F;
        v218 -= v219;
      }
      while (v218);
    }
    v196 += v215;
    unsigned int v214 = v328;
    if (v169) {
      goto LABEL_420;
    }
LABEL_521:
    if (v214 == 2 || v214 >= 0x10) {
      goto LABEL_420;
    }
  }
  else
  {
    unint64_t v206 = v177;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v177 <= 0xC0)
    {
      uint64_t v207 = 0;
      do
      {
        unint64_t v208 = 64 - v168;
        if (64 - v168 >= v206) {
          unint64_t v208 = v206;
        }
        v126[v178] |= (((unint64_t)v301 >> v207) & ~(-1 << v208)) << v168;
        v207 += v208;
        unint64_t v209 = v208 + v168;
        v178 += v209 >> 6;
        uint64_t v168 = v209 & 0x3F;
        v206 -= v208;
      }
      while (v206);
    }
    v196 += v177;
    if (!v191) {
      goto LABEL_402;
    }
LABEL_394:
    unsigned int v205 = v327;
    if (v162) {
      goto LABEL_412;
    }
LABEL_408:
    if (v205 == 2 || v205 >= 0x10) {
      goto LABEL_412;
    }
    unsigned int v214 = v328;
    if (!v169) {
      goto LABEL_521;
    }
LABEL_420:
    unsigned int v221 = v310;
    if (v310 <= 0x100 && v310 && v168 - v127 + (v178 << 6) + (unint64_t)v310 <= 0xC0)
    {
      uint64_t v222 = 0;
      unint64_t v223 = (HIDWORD(v303) >> (v214 - v310));
      unint64_t v224 = v310;
      do
      {
        unint64_t v225 = 64 - v168;
        if (64 - v168 >= v224) {
          unint64_t v225 = v224;
        }
        v126[v178] |= ((v223 >> v222) & ~(-1 << v225)) << v168;
        v222 += v225;
        unint64_t v226 = v225 + v168;
        v178 += v226 >> 6;
        uint64_t v168 = v226 & 0x3F;
        v224 -= v225;
      }
      while (v224);
    }
    v196 += v221;
  }
  if (v174 || v329 == 2 || v329 >= 0x10)
  {
    unsigned int v227 = v311;
    if (v311 <= 0x100 && v311 && v168 - v127 + (v178 << 6) + (unint64_t)v311 <= 0xC0)
    {
      uint64_t v228 = 0;
      unint64_t v229 = v304 >> (v329 - v311);
      unint64_t v230 = v311;
      do
      {
        unint64_t v231 = 64 - v168;
        if (64 - v168 >= v230) {
          unint64_t v231 = v230;
        }
        v126[v178] |= ((v229 >> v228) & ~(-1 << v231)) << v168;
        v228 += v231;
        unint64_t v232 = v231 + v168;
        v178 += v232 >> 6;
        uint64_t v168 = v232 & 0x3F;
        v230 -= v231;
      }
      while (v230);
    }
    v196 += v227;
  }
  if (v183 || v330 == 2 || v330 >= 0x10)
  {
    unsigned int v233 = v312;
    if (v312 <= 0x100 && v312 && v168 - v127 + (v178 << 6) + (unint64_t)v312 <= 0xC0)
    {
      uint64_t v234 = 0;
      unint64_t v235 = (HIDWORD(v304) >> (v330 - v312));
      unint64_t v236 = v312;
      do
      {
        unint64_t v237 = 64 - v168;
        if (64 - v168 >= v236) {
          unint64_t v237 = v236;
        }
        v126[v178] |= ((v235 >> v234) & ~(-1 << v237)) << v168;
        v234 += v237;
        unint64_t v238 = v237 + v168;
        v178 += v238 >> 6;
        uint64_t v168 = v238 & 0x3F;
        v236 -= v237;
      }
      while (v236);
    }
    v196 += v233;
  }
  unint64_t v239 = v305;
  if (v305)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v240 = 0;
      unint64_t v241 = v322[0];
      unint64_t v242 = 3;
      do
      {
        unint64_t v243 = 64 - v168;
        if (64 - v168 >= v242) {
          unint64_t v243 = v242;
        }
        v126[v178] |= ((v241 >> v240) & ~(-1 << v243)) << v168;
        v240 += v243;
        unint64_t v244 = v243 + v168;
        v178 += v244 >> 6;
        uint64_t v168 = v244 & 0x3F;
        v242 -= v243;
      }
      while (v242);
    }
    v196 += 3;
  }
  unint64_t v245 = v306;
  if (v306)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v246 = 0;
      unint64_t v247 = v322[1];
      unint64_t v248 = 3;
      do
      {
        unint64_t v249 = 64 - v168;
        if (64 - v168 >= v248) {
          unint64_t v249 = v248;
        }
        v126[v178] |= ((v247 >> v246) & ~(-1 << v249)) << v168;
        v246 += v249;
        unint64_t v250 = v249 + v168;
        v178 += v250 >> 6;
        uint64_t v168 = v250 & 0x3F;
        v248 -= v249;
      }
      while (v248);
    }
    v196 += 3;
  }
  unint64_t v251 = v307;
  if (v307)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v252 = 0;
      unint64_t v253 = v322[2];
      unint64_t v254 = 3;
      do
      {
        unint64_t v255 = 64 - v168;
        if (64 - v168 >= v254) {
          unint64_t v255 = v254;
        }
        v126[v178] |= ((v253 >> v252) & ~(-1 << v255)) << v168;
        v252 += v255;
        unint64_t v256 = v255 + v168;
        v178 += v256 >> 6;
        uint64_t v168 = v256 & 0x3F;
        v254 -= v255;
      }
      while (v254);
    }
    v196 += 3;
  }
  unint64_t v257 = v308;
  if (v308)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v258 = 0;
      unint64_t v259 = v322[3];
      unint64_t v260 = 3;
      do
      {
        unint64_t v261 = 64 - v168;
        if (64 - v168 >= v260) {
          unint64_t v261 = v260;
        }
        v126[v178] |= ((v259 >> v258) & ~(-1 << v261)) << v168;
        v258 += v261;
        unint64_t v262 = v261 + v168;
        v178 += v262 >> 6;
        uint64_t v168 = v262 & 0x3F;
        v260 -= v261;
      }
      while (v260);
    }
    v196 += 3;
  }
  unsigned int v263 = 192 - v196;
  unsigned int v264 = (192 - v196) / 7u;
  unint64_t v265 = v263 % 7;
  if ((v265 - 257) >= 0xFFFFFF00 && v168 - v127 + (v178 << 6) + v265 <= 0xC0)
  {
    do
    {
      unint64_t v266 = 64 - v168;
      if (64 - v168 >= v265) {
        unint64_t v266 = v265;
      }
      unint64_t v267 = v266 + v168;
      v178 += v267 >> 6;
      uint64_t v168 = v267 & 0x3F;
      v265 -= v266;
    }
    while (v265);
  }
  uint64_t v268 = 0;
  while (2)
  {
    if (v239 && v239 <= 0x100 && v168 - v127 + (v178 << 6) + v239 <= 0xC0)
    {
      uint64_t v269 = 0;
      unint64_t v270 = *((unsigned int *)v302 + v268);
      unint64_t v271 = v239;
      do
      {
        unint64_t v272 = 64 - v168;
        if (64 - v168 >= v271) {
          unint64_t v272 = v271;
        }
        v126[v178] |= ((v270 >> v269) & ~(-1 << v272)) << v168;
        v269 += v272;
        unint64_t v273 = v272 + v168;
        v178 += v273 >> 6;
        uint64_t v168 = v273 & 0x3F;
        v271 -= v272;
      }
      while (v271);
    }
    if (!v245)
    {
      int v279 = v239;
      if (!v251) {
        goto LABEL_505;
      }
      goto LABEL_498;
    }
    if (v245 <= 0x100 && v168 - v127 + (v178 << 6) + v245 <= 0xC0)
    {
      uint64_t v274 = 0;
      unint64_t v275 = *((unsigned int *)&v302[1] + v268 + 3);
      unint64_t v276 = v245;
      do
      {
        unint64_t v277 = 64 - v168;
        if (64 - v168 >= v276) {
          unint64_t v277 = v276;
        }
        v126[v178] |= ((v275 >> v274) & ~(-1 << v277)) << v168;
        v274 += v277;
        unint64_t v278 = v277 + v168;
        v178 += v278 >> 6;
        uint64_t v168 = v278 & 0x3F;
        v276 -= v277;
      }
      while (v276);
    }
    int v279 = v245 + v239;
    if (v251)
    {
LABEL_498:
      if (v251 <= 0x100 && v168 - v127 + (v178 << 6) + v251 <= 0xC0)
      {
        uint64_t v280 = 0;
        unint64_t v281 = *((unsigned int *)&v302[3] + v268 + 2);
        unint64_t v282 = v251;
        do
        {
          unint64_t v283 = 64 - v168;
          if (64 - v168 >= v282) {
            unint64_t v283 = v282;
          }
          v126[v178] |= ((v281 >> v280) & ~(-1 << v283)) << v168;
          v280 += v283;
          unint64_t v284 = v283 + v168;
          v178 += v284 >> 6;
          uint64_t v168 = v284 & 0x3F;
          v282 -= v283;
        }
        while (v282);
      }
      v279 += v251;
    }
LABEL_505:
    if (v257)
    {
      if (v257 <= 0x100 && v168 - v127 + (v178 << 6) + v257 <= 0xC0)
      {
        uint64_t v285 = 0;
        unint64_t v286 = *((unsigned int *)&v302[5] + v268 + 1);
        unint64_t v287 = v257;
        do
        {
          unint64_t v288 = 64 - v168;
          if (64 - v168 >= v287) {
            unint64_t v288 = v287;
          }
          v126[v178] |= ((v286 >> v285) & ~(-1 << v288)) << v168;
          v285 += v288;
          unint64_t v289 = v288 + v168;
          v178 += v289 >> 6;
          uint64_t v168 = v289 & 0x3F;
          v287 -= v288;
        }
        while (v287);
      }
      v279 += v257;
    }
    unint64_t v290 = v264 - v279;
    if (v290 && v290 <= 0x100 && v168 - v127 + (v178 << 6) + v290 <= 0xC0)
    {
      do
      {
        unint64_t v291 = 64 - v168;
        if (64 - v168 >= v290) {
          unint64_t v291 = v290;
        }
        unint64_t v292 = v291 + v168;
        v178 += v292 >> 6;
        uint64_t v168 = v292 & 0x3F;
        v290 -= v291;
      }
      while (v290);
    }
    if (++v268 != 7) {
      continue;
    }
    return v51 & 1;
  }
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(unint64_t result, uint64_t a2, int a3)
{
  unint64_t v3 = result & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = 8 * (result & 7);
  unsigned int v5 = a3 & 0xFFFFFFFD;
  int v6 = ((a3 & 0xFFFFFFFD) == 1) << 7;
  if (a3 == 4)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 8 * (result & 7);
    while ((unint64_t)(v9 - v4 + (v8 << 6) - 187) >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v11 = 0;
      uint64_t v12 = 0;
      unint64_t v13 = 6;
      do
      {
        unint64_t v14 = 64 - v9;
        if (64 - v9 >= v13) {
          unint64_t v14 = v13;
        }
        v11 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v14)) << v12;
        v12 += v14;
        unint64_t v15 = v14 + v9;
        v8 += v15 >> 6;
        uint64_t v9 = v15 & 0x3F;
        v13 -= v14;
      }
      while (v13);
      uint64_t result = 16 * v7;
      *(_DWORD *)(a2 + 16 * v7) = (4 * (v11 & 0x3F)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 187) < 0xFFFFFFFFFFFFFF3FLL) {
        goto LABEL_4;
      }
      char v16 = 0;
      uint64_t v17 = 0;
      unint64_t v18 = 6;
      do
      {
        unint64_t v19 = 64 - v9;
        if (64 - v9 >= v18) {
          unint64_t v19 = v18;
        }
        v16 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v19)) << v17;
        v17 += v19;
        unint64_t v20 = v19 + v9;
        v8 += v20 >> 6;
        uint64_t v9 = v20 & 0x3F;
        v18 -= v19;
      }
      while (v18);
      uint64_t result = a2 + 16 * v7;
      *(_DWORD *)(result + 4) = (4 * (v16 & 0x3F)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 187) >= 0xFFFFFFFFFFFFFF3FLL)
      {
        char v21 = 0;
        uint64_t v22 = 0;
        unint64_t v23 = 6;
        do
        {
          unint64_t v24 = 64 - v9;
          if (64 - v9 >= v23) {
            unint64_t v24 = v23;
          }
          v21 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v24)) << v22;
          v22 += v24;
          unint64_t v25 = v24 + v9;
          v8 += v25 >> 6;
          uint64_t v9 = v25 & 0x3F;
          v23 -= v24;
        }
        while (v23);
        uint64_t result = a2 + 16 * v7;
        *(_DWORD *)(result + 8) = (4 * (v21 & 0x3F)) ^ v6;
        if ((unint64_t)(v9 - v4 + (v8 << 6) - 187) >= 0xFFFFFFFFFFFFFF3FLL)
        {
          char v10 = 0;
          uint64_t v26 = 0;
          uint64_t result = 6;
          do
          {
            unint64_t v27 = 64 - v9;
            if (64 - v9 >= result) {
              unint64_t v27 = result;
            }
            v10 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v27)) << v26;
            v26 += v27;
            unint64_t v28 = v27 + v9;
            v8 += v28 >> 6;
            uint64_t v9 = v28 & 0x3F;
            result -= v27;
          }
          while (result);
        }
        else
        {
          char v10 = 0;
        }
        goto LABEL_6;
      }
LABEL_5:
      char v10 = 0;
      *(_DWORD *)(a2 + 16 * v7 + 8) = v6;
LABEL_6:
      *(_DWORD *)(a2 + 16 * v7++ + 12) = (4 * (v10 & 0x3F)) ^ v6;
      if (v7 == 8) {
        return result;
      }
    }
    *(_DWORD *)(a2 + 16 * v7) = v6;
LABEL_4:
    *(_DWORD *)(a2 + 16 * v7 + 4) = v6;
    goto LABEL_5;
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t result = 8 * (result & 7);
  do
  {
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 6;
      do
      {
        unint64_t v34 = 64 - result;
        if (64 - result >= v33) {
          unint64_t v34 = v33;
        }
        v31 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v34)) << v32;
        v32 += v34;
        unint64_t v35 = v34 + result;
        v30 += v35 >> 6;
        uint64_t result = v35 & 0x3F;
        v33 -= v34;
      }
      while (v33);
    }
    else
    {
      char v31 = 0;
    }
    int v36 = 4 * (v31 & 0x3F);
    BOOL v37 = v36 == 128 && v5 == 1;
    if (!v37 && v36)
    {
      if (v36 == 252) {
        int v36 = 255;
      }
      else {
        v36 |= 2 - (v31 & 1);
      }
    }
    *(_DWORD *)(a2 + 16 * v29) = v36 ^ v6;
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v38 = 0;
      uint64_t v39 = 0;
      unint64_t v40 = 6;
      do
      {
        unint64_t v41 = 64 - result;
        if (64 - result >= v40) {
          unint64_t v41 = v40;
        }
        v38 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v41)) << v39;
        v39 += v41;
        unint64_t v42 = v41 + result;
        v30 += v42 >> 6;
        uint64_t result = v42 & 0x3F;
        v40 -= v41;
      }
      while (v40);
    }
    else
    {
      char v38 = 0;
    }
    int v43 = 4 * (v38 & 0x3F);
    if ((v43 != 128 || v5 != 1) && v43 != 0)
    {
      int v46 = (2 - (v38 & 1)) | v43;
      if (v43 == 252) {
        int v43 = 255;
      }
      else {
        int v43 = v46;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 4) = v43 ^ v6;
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 6;
      do
      {
        unint64_t v50 = 64 - result;
        if (64 - result >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v50)) << v48;
        v48 += v50;
        unint64_t v51 = v50 + result;
        v30 += v51 >> 6;
        uint64_t result = v51 & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    else
    {
      char v47 = 0;
    }
    int v52 = 4 * (v47 & 0x3F);
    if ((v52 != 128 || v5 != 1) && v52 != 0)
    {
      int v55 = (2 - (v47 & 1)) | v52;
      if (v52 == 252) {
        int v52 = 255;
      }
      else {
        int v52 = v55;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 8) = v52 ^ v6;
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v56 = 0;
      uint64_t v57 = 0;
      unint64_t v58 = 6;
      do
      {
        unint64_t v59 = 64 - result;
        if (64 - result >= v58) {
          unint64_t v59 = v58;
        }
        v56 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v59)) << v57;
        v57 += v59;
        unint64_t v60 = v59 + result;
        v30 += v60 >> 6;
        uint64_t result = v60 & 0x3F;
        v58 -= v59;
      }
      while (v58);
    }
    else
    {
      char v56 = 0;
    }
    int v61 = 4 * (v56 & 0x3F);
    if ((v61 != 128 || v5 != 1) && v61 != 0)
    {
      int v64 = (2 - (v56 & 1)) | v61;
      if (v61 == 252) {
        int v61 = 255;
      }
      else {
        int v61 = v64;
      }
    }
    *(_DWORD *)(a2 + 16 * v29++ + 12) = v61 ^ v6;
  }
  while (v29 != 8);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v280 = *MEMORY[0x263EF8340];
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = 8 * (a1 & 7);
  unint64_t v6 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (v6 >> v5) & 7;
  uint64_t v8 = v5 | 3;
  uint64_t v9 = (v6 >> (v5 | 3u)) & 7;
  if ((v5 | 3uLL) - v5 <= 0xBD) {
    uint64_t v10 = ((8 * (a1 & 7)) | 6) - v5;
  }
  else {
    uint64_t v10 = v8 - v5;
  }
  if ((unint64_t)(v8 - v5) <= 0xBD) {
    uint64_t v11 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v11 = (8 * (a1 & 7)) | 3;
  }
  if ((unint64_t)(v8 - v5) <= 0xBD) {
    int v12 = v9;
  }
  else {
    int v12 = 0;
  }
  int v259 = v12;
  if ((unint64_t)(v10 - 190) >= 0xFFFFFFFFFFFFFF3FLL)
  {
    uint64_t v15 = 0;
    int v13 = 0;
    uint64_t v17 = 0;
    unint64_t v18 = 3;
    do
    {
      unint64_t v19 = 64 - v11;
      if (64 - v11 >= v18) {
        unint64_t v19 = v18;
      }
      v13 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v19)) << v17);
      v17 += v19;
      v15 += (v19 + v11) >> 6;
      uint64_t v11 = (v19 + v11) & 0x3F;
      v18 -= v19;
    }
    while (v18);
    uint64_t v14 = v15 << 6;
    uint64_t v10 = v11 - v5;
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v16 = 0;
      uint64_t v20 = 0;
      unint64_t v21 = 3;
      do
      {
        unint64_t v22 = 64 - v11;
        if (64 - v11 >= v21) {
          unint64_t v22 = v21;
        }
        v16 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v22)) << v20);
        v20 += v22;
        v15 += (v22 + v11) >> 6;
        uint64_t v11 = (v22 + v11) & 0x3F;
        v21 -= v22;
      }
      while (v21);
      uint64_t v14 = v15 << 6;
      uint64_t v10 = v11 - v5;
    }
    else
    {
      int v16 = 0;
    }
  }
  else
  {
    int v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    int v16 = 0;
  }
  memset_pattern16(&__b, &unk_242EA8880, 0x10uLL);
  char v23 = 0;
  unint64_t v24 = 2 * (v7 == 0);
  int v262 = 2 * (v7 == 0);
  if (v7)
  {
    int v26 = v259;
    int v257 = 0;
    unsigned int v28 = v7 + 2;
  }
  else
  {
    if (v10 + v14 + v24 > 0xC0)
    {
      int v26 = v259;
    }
    else
    {
      char v23 = 0;
      uint64_t v25 = 0;
      int v26 = v259;
      do
      {
        unint64_t v27 = 64 - v11;
        if (64 - v11 >= v24) {
          unint64_t v27 = v24;
        }
        v23 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v27)) << v25;
        v25 += v27;
        v15 += (v27 + v11) >> 6;
        uint64_t v11 = (v27 + v11) & 0x3F;
        v24 -= v27;
      }
      while (v24);
    }
    unsigned int v29 = v23 & 3;
    if (v29 == 3)
    {
      int v257 = 0;
      unsigned int v28 = 2;
    }
    else
    {
      uint64_t v30 = 4 * v29;
      int v257 = *(_DWORD *)((char *)&unk_242EA9110 + v30);
      unsigned int v28 = *(_DWORD *)((char *)&unk_242EAA17C + v30);
    }
  }
  char v31 = 0;
  v279[0] = v28;
  v278[0] = 0;
  unint64_t v32 = 2 * (v26 == 0);
  int v261 = 2 * (v26 == 0);
  if (!v26 && v11 - v5 + (v15 << 6) + v32 <= 0xC0)
  {
    char v31 = 0;
    uint64_t v33 = 0;
    do
    {
      unint64_t v34 = 64 - v11;
      if (64 - v11 >= v32) {
        unint64_t v34 = v32;
      }
      v31 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v34)) << v33;
      v33 += v34;
      v15 += (v34 + v11) >> 6;
      uint64_t v11 = (v34 + v11) & 0x3F;
      v32 -= v34;
    }
    while (v32);
  }
  if (v26)
  {
    int v256 = 0;
    unsigned int v35 = v26 + 2;
  }
  else
  {
    unsigned int v36 = v31 & 3;
    if (v36 == 3)
    {
      int v256 = 0;
      unsigned int v35 = 2;
    }
    else
    {
      uint64_t v37 = 4 * v36;
      int v256 = *(_DWORD *)((char *)&unk_242EA9110 + v37);
      unsigned int v35 = *(_DWORD *)((char *)&unk_242EAA17C + v37);
    }
  }
  char v38 = 0;
  v279[1] = v35;
  v278[1] = 0;
  unint64_t v39 = 2 * (v13 == 0);
  int v260 = 2 * (v13 == 0);
  if (!v13 && v11 - v5 + (v15 << 6) + v39 <= 0xC0)
  {
    char v38 = 0;
    uint64_t v40 = 0;
    do
    {
      unint64_t v41 = 64 - v11;
      if (64 - v11 >= v39) {
        unint64_t v41 = v39;
      }
      v38 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v41)) << v40;
      v40 += v41;
      v15 += (v41 + v11) >> 6;
      uint64_t v11 = (v41 + v11) & 0x3F;
      v39 -= v41;
    }
    while (v39);
  }
  if ((v13 & 7) != 0)
  {
    int v255 = 0;
    int v42 = (v13 & 7) + 2;
  }
  else
  {
    unsigned int v43 = v38 & 3;
    if (v43 == 3)
    {
      int v255 = 0;
      int v42 = 2;
    }
    else
    {
      uint64_t v44 = 4 * v43;
      int v255 = *(_DWORD *)((char *)&unk_242EA9110 + v44);
      int v42 = *(_DWORD *)((char *)&unk_242EAA17C + v44);
    }
  }
  char v45 = 0;
  v279[2] = v42;
  v278[2] = 0;
  uint64_t v46 = 2 * (v16 == 0);
  if (!v16 && (unint64_t)(v11 - v5 + (v15 << 6) + v46) <= 0xC0)
  {
    char v45 = 0;
    uint64_t v47 = 0;
    unint64_t v48 = 2 * (v16 == 0);
    do
    {
      unint64_t v49 = 64 - v11;
      if (64 - v11 >= v48) {
        unint64_t v49 = v48;
      }
      v45 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v49)) << v47;
      v47 += v49;
      v15 += (v49 + v11) >> 6;
      uint64_t v11 = (v49 + v11) & 0x3F;
      v48 -= v49;
    }
    while (v48);
  }
  int v50 = v16 & 7;
  if ((v16 & 7) != 0)
  {
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    int v254 = 0;
    unsigned int v53 = v50 + 2;
  }
  else
  {
    unsigned int v54 = v45 & 3;
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    if (v54 == 3)
    {
      int v254 = 0;
      unsigned int v53 = 2;
    }
    else
    {
      uint64_t v55 = 4 * v54;
      int v254 = *(_DWORD *)((char *)&unk_242EA9110 + v55);
      unsigned int v53 = *(_DWORD *)((char *)&unk_242EAA17C + v55);
    }
  }
  unsigned int v56 = v53;
  v279[3] = v53;
  v278[3] = 0;
  uint64_t v272 = 0;
  uint64_t v273 = 0;
  uint64_t v270 = 0;
  uint64_t v271 = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v278, v279, &v272, &v270);
  unsigned int v57 = v52;
  unint64_t v58 = &kDQuadParamTable[10 * v52];
  int v59 = v58[5];
  unsigned int v60 = v58[4] + 2;
  LODWORD(v61) = v59 + 2;
  int v62 = v270 - v272;
  if ((int)v270 - (int)v272 >= 0)
  {
    unsigned int v63 = v51;
    int v64 = v42;
    unsigned int v65 = v56;
    int v66 = v262;
    if (!v62) {
      goto LABEL_77;
    }
    LODWORD(v61) = v62 + v61;
    goto LABEL_71;
  }
  unsigned int v67 = v52;
  int v68 = kDQuadParamTable[10 * v52 + 7];
  unsigned int v63 = v51;
  int v64 = v42;
  if (v68 >= (int)v272 - (int)v270)
  {
    unsigned int v65 = v56;
  }
  else
  {
    LODWORD(v61) = v59 + 1;
    unsigned int v65 = v56;
    if (!kDQuadParamTable[10 * v67 + 8])
    {
      int v62 = -1;
      int v66 = v262;
LABEL_71:
      v60 += v62;
      goto LABEL_77;
    }
  }
  int v66 = v262;
LABEL_77:
  int v69 = v66 | 0xC;
  if (__b >= v60) {
    unint64_t v70 = v60;
  }
  else {
    unint64_t v70 = __b;
  }
  v269[0] = v70;
  if (v59) {
    unsigned int v71 = __b;
  }
  else {
    unsigned int v71 = 0;
  }
  if (v71 >= v61) {
    unint64_t v61 = v61;
  }
  else {
    unint64_t v61 = v71;
  }
  v268[0] = v61;
  unint64_t v74 = (unint64_t)&kDQuadParamTable[10 * v63];
  int v72 = *(_DWORD *)(v74 + 20);
  unsigned int v73 = *(_DWORD *)(v74 + 16) + 2;
  LODWORD(v74) = v72 + 2;
  int v75 = HIDWORD(v270) - HIDWORD(v272);
  if (HIDWORD(v270) - HIDWORD(v272) < 0)
  {
    if (kDQuadParamTable[10 * v63 + 7] >= HIDWORD(v272) - HIDWORD(v270)) {
      goto LABEL_92;
    }
    LODWORD(v74) = v72 + 1;
    if (kDQuadParamTable[10 * v63 + 8]) {
      goto LABEL_92;
    }
    int v75 = -1;
  }
  else
  {
    if (!v75) {
      goto LABEL_92;
    }
    LODWORD(v74) = v75 + v74;
  }
  v73 += v75;
LABEL_92:
  int v76 = v69 + v261;
  if (v275 >= v73) {
    unint64_t v77 = v73;
  }
  else {
    unint64_t v77 = v275;
  }
  v269[1] = v77;
  if (v72) {
    unsigned int v78 = v275;
  }
  else {
    unsigned int v78 = 0;
  }
  if (v78 >= v74) {
    unint64_t v74 = v74;
  }
  else {
    unint64_t v74 = v78;
  }
  v268[1] = v74;
  uint32x4_t v79 = &kDQuadParamTable[10 * v64];
  int v80 = v79[5];
  unsigned int v81 = v79[4] + 2;
  unsigned int v82 = v80 + 2;
  int v83 = v271 - v273;
  if ((int)v271 - (int)v273 < 0)
  {
    if (kDQuadParamTable[10 * v64 + 7] >= (int)v273 - (int)v271) {
      goto LABEL_107;
    }
    unsigned int v82 = v80 + 1;
    if (kDQuadParamTable[10 * v64 + 8]) {
      goto LABEL_107;
    }
    int v83 = -1;
  }
  else
  {
    if (!v83) {
      goto LABEL_107;
    }
    v82 += v83;
  }
  v81 += v83;
LABEL_107:
  int v84 = v76 + v260;
  if (v276 >= v81) {
    unint64_t v85 = v81;
  }
  else {
    unint64_t v85 = v276;
  }
  v269[2] = v85;
  if (v80) {
    unsigned int v86 = v276;
  }
  else {
    unsigned int v86 = 0;
  }
  if (v86 >= v82) {
    unint64_t v87 = v82;
  }
  else {
    unint64_t v87 = v86;
  }
  v268[2] = v87;
  unint64_t v89 = (unint64_t)&kDQuadParamTable[10 * v65];
  int v88 = *(_DWORD *)(v89 + 20);
  LODWORD(v89) = *(_DWORD *)(v89 + 16) + 2;
  LODWORD(v90) = v88 + 2;
  int v91 = HIDWORD(v271) - HIDWORD(v273);
  if (HIDWORD(v271) - HIDWORD(v273) < 0)
  {
    if (kDQuadParamTable[10 * v65 + 7] >= HIDWORD(v273) - HIDWORD(v271)) {
      goto LABEL_122;
    }
    LODWORD(v90) = v88 + 1;
    if (kDQuadParamTable[10 * v65 + 8]) {
      goto LABEL_122;
    }
    int v91 = -1;
  }
  else
  {
    if (!v91) {
      goto LABEL_122;
    }
    LODWORD(v90) = v91 + v90;
  }
  LODWORD(v89) = v91 + v89;
LABEL_122:
  if (v277 >= v89) {
    unint64_t v89 = v89;
  }
  else {
    unint64_t v89 = v277;
  }
  v269[3] = v89;
  if (v88) {
    unsigned int v92 = v277;
  }
  else {
    unsigned int v92 = 0;
  }
  if (v92 >= v90) {
    unint64_t v90 = v90;
  }
  else {
    unint64_t v90 = v92;
  }
  v268[3] = v90;
  int v93 = v84 + v46;
  uint64_t v266 = 0;
  uint64_t v267 = 0;
  if (v57 || __b - 8 > 4)
  {
    if (v70 <= 0x20)
    {
      int v94 = 0;
      if (v70 && v11 - v5 + (v15 << 6) + v70 <= 0xC0)
      {
        int v94 = 0;
        uint64_t v95 = 0;
        unint64_t v96 = v70;
        do
        {
          unint64_t v97 = 64 - v11;
          if (64 - v11 >= v96) {
            unint64_t v97 = v96;
          }
          v94 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v97)) << v95;
          v95 += v97;
          unint64_t v98 = v97 + v11;
          v15 += v98 >> 6;
          uint64_t v11 = v98 & 0x3F;
          v96 -= v97;
        }
        while (v96);
      }
    }
    else
    {
      int v94 = 0;
    }
    LODWORD(v266) = v94 << (__b - v70);
    v93 += v70;
    if (v63)
    {
LABEL_147:
      if (v77 <= 0x20)
      {
        int v99 = 0;
        if (v77 && v11 - v5 + (v15 << 6) + v77 <= 0xC0)
        {
          int v99 = 0;
          uint64_t v100 = 0;
          unint64_t v101 = v77;
          do
          {
            unint64_t v102 = 64 - v11;
            if (64 - v11 >= v101) {
              unint64_t v102 = v101;
            }
            v99 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v102)) << v100;
            v100 += v102;
            v15 += (v102 + v11) >> 6;
            uint64_t v11 = (v102 + v11) & 0x3F;
            v101 -= v102;
          }
          while (v101);
        }
      }
      else
      {
        int v99 = 0;
      }
      HIDWORD(v266) = v99 << (v275 - v77);
      v93 += v77;
      if (v64) {
        goto LABEL_159;
      }
      goto LABEL_156;
    }
  }
  else
  {
    LODWORD(v266) = v257;
    if (v63) {
      goto LABEL_147;
    }
  }
  if (v275 - 8 >= 5) {
    goto LABEL_147;
  }
  HIDWORD(v266) = v256;
  if (v64) {
    goto LABEL_159;
  }
LABEL_156:
  if (v276 - 8 < 5)
  {
    LODWORD(v267) = v255;
    if (v65) {
      goto LABEL_171;
    }
    goto LABEL_168;
  }
LABEL_159:
  if (v85 <= 0x20)
  {
    int v103 = 0;
    if (v85 && v11 - v5 + (v15 << 6) + v85 <= 0xC0)
    {
      int v103 = 0;
      uint64_t v104 = 0;
      unint64_t v105 = v85;
      do
      {
        unint64_t v106 = 64 - v11;
        if (64 - v11 >= v105) {
          unint64_t v106 = v105;
        }
        v103 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v106)) << v104;
        v104 += v106;
        v15 += (v106 + v11) >> 6;
        uint64_t v11 = (v106 + v11) & 0x3F;
        v105 -= v106;
      }
      while (v105);
    }
  }
  else
  {
    int v103 = 0;
  }
  LODWORD(v267) = v103 << (v276 - v85);
  v93 += v85;
  if (v65)
  {
LABEL_171:
    if (v89 <= 0x20)
    {
      int v108 = 0;
      if (v89)
      {
        uint64_t v107 = a2;
        if (v11 - v5 + (v15 << 6) + v89 <= 0xC0)
        {
          int v108 = 0;
          uint64_t v109 = 0;
          unint64_t v110 = v89;
          do
          {
            unint64_t v111 = 64 - v11;
            if (64 - v11 >= v110) {
              unint64_t v111 = v110;
            }
            v108 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v111)) << v109;
            v109 += v111;
            v15 += (v111 + v11) >> 6;
            uint64_t v11 = (v111 + v11) & 0x3F;
            v110 -= v111;
          }
          while (v110);
        }
LABEL_181:
        HIDWORD(v267) = v108 << (v277 - v89);
        v93 += v89;
        uint64_t v264 = 0;
        uint64_t v265 = 0;
        if (v61) {
          goto LABEL_182;
        }
        goto LABEL_189;
      }
    }
    else
    {
      int v108 = 0;
    }
    uint64_t v107 = a2;
    goto LABEL_181;
  }
LABEL_168:
  if (v277 - 8 >= 5) {
    goto LABEL_171;
  }
  HIDWORD(v267) = v254;
  uint64_t v107 = a2;
  uint64_t v264 = 0;
  uint64_t v265 = 0;
  if (v61)
  {
LABEL_182:
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v112 = 0;
      uint64_t v113 = 0;
      unint64_t v114 = 3;
      do
      {
        unint64_t v115 = 64 - v11;
        if (64 - v11 >= v114) {
          unint64_t v115 = v114;
        }
        v112 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v115)) << v113;
        v113 += v115;
        v15 += (v115 + v11) >> 6;
        uint64_t v11 = (v115 + v11) & 0x3F;
        v114 -= v115;
      }
      while (v114);
    }
    else
    {
      int v112 = 0;
    }
    LODWORD(v264) = v112;
    v93 += 3;
  }
LABEL_189:
  if (v74)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v116 = 0;
      uint64_t v117 = 0;
      unint64_t v118 = 3;
      do
      {
        unint64_t v119 = 64 - v11;
        if (64 - v11 >= v118) {
          unint64_t v119 = v118;
        }
        v116 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v119)) << v117;
        v117 += v119;
        v15 += (v119 + v11) >> 6;
        uint64_t v11 = (v119 + v11) & 0x3F;
        v118 -= v119;
      }
      while (v118);
    }
    else
    {
      int v116 = 0;
    }
    HIDWORD(v264) = v116;
    v93 += 3;
  }
  if (v87)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v120 = 0;
      uint64_t v121 = 0;
      unint64_t v122 = 3;
      do
      {
        unint64_t v123 = 64 - v11;
        if (64 - v11 >= v122) {
          unint64_t v123 = v122;
        }
        v120 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v123)) << v121;
        v121 += v123;
        v15 += (v123 + v11) >> 6;
        uint64_t v11 = (v123 + v11) & 0x3F;
        v122 -= v123;
      }
      while (v122);
    }
    else
    {
      int v120 = 0;
    }
    LODWORD(v265) = v120;
    v93 += 3;
  }
  if (v90)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v124 = 0;
      uint64_t v125 = 0;
      unint64_t v126 = 3;
      do
      {
        unint64_t v127 = 64 - v11;
        if (64 - v11 >= v126) {
          unint64_t v127 = v126;
        }
        v124 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v127)) << v125;
        v125 += v127;
        v15 += (v127 + v11) >> 6;
        uint64_t v11 = (v127 + v11) & 0x3F;
        v126 -= v127;
      }
      while (v126);
    }
    else
    {
      int v124 = 0;
    }
    HIDWORD(v265) = v124;
    v93 += 3;
  }
  uint64_t v128 = 0;
  unsigned int v129 = a3 & 0xFFFFFFFD;
  unsigned int v130 = 192 - v93;
  unsigned int v131 = (192 - v93) / 7u;
  unint64_t v132 = (v11 | (v15 << 6)) + v130 % 7;
  memset(v263, 0, sizeof(v263));
  do
  {
    unint64_t v135 = v132 >> 6;
    unint64_t v136 = v132 & 0x3F;
    if (v61)
    {
      if (v61 <= 0x20 && v136 - v5 + (v132 & 0xFFFFFFFFFFFFFFC0) + v61 <= 0xC0)
      {
        int v137 = 0;
        uint64_t v138 = 0;
        unint64_t v139 = v61;
        do
        {
          unint64_t v140 = 64 - v136;
          if (64 - v136 >= v139) {
            unint64_t v140 = v139;
          }
          v137 |= (unint64_t)((*(void *)(v4 + 8 * v135) >> v136) & ~(-1 << v140)) << v138;
          v138 += v140;
          unint64_t v141 = v140 + v136;
          v135 += v141 >> 6;
          unint64_t v136 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
      else
      {
        int v137 = 0;
      }
      *((_DWORD *)v263 + v128) = v137;
    }
    if (!v74)
    {
      int v134 = v61;
      if (!v87) {
        goto LABEL_245;
      }
LABEL_237:
      if (v87 <= 0x20 && v136 - v5 + (v135 << 6) + v87 <= 0xC0)
      {
        int v147 = 0;
        uint64_t v148 = 0;
        unint64_t v149 = v87;
        do
        {
          unint64_t v150 = 64 - v136;
          if (64 - v136 >= v149) {
            unint64_t v150 = v149;
          }
          v147 |= (unint64_t)((*(void *)(v4 + 8 * v135) >> v136) & ~(-1 << v150)) << v148;
          v148 += v150;
          unint64_t v151 = v150 + v136;
          v135 += v151 >> 6;
          unint64_t v136 = v151 & 0x3F;
          v149 -= v150;
        }
        while (v149);
      }
      else
      {
        int v147 = 0;
      }
      *((_DWORD *)&v263[3] + v128 + 2) = v147;
      v134 += v87;
      goto LABEL_245;
    }
    if (v74 <= 0x20 && v136 - v5 + (v135 << 6) + v74 <= 0xC0)
    {
      int v142 = 0;
      uint64_t v143 = 0;
      unint64_t v144 = v74;
      do
      {
        unint64_t v145 = 64 - v136;
        if (64 - v136 >= v144) {
          unint64_t v145 = v144;
        }
        v142 |= (unint64_t)((*(void *)(v4 + 8 * v135) >> v136) & ~(-1 << v145)) << v143;
        v143 += v145;
        unint64_t v146 = v145 + v136;
        v135 += v146 >> 6;
        unint64_t v136 = v146 & 0x3F;
        v144 -= v145;
      }
      while (v144);
    }
    else
    {
      int v142 = 0;
    }
    *((_DWORD *)&v263[1] + v128 + 3) = v142;
    int v134 = v74 + v61;
    if (v87) {
      goto LABEL_237;
    }
LABEL_245:
    if (v90)
    {
      if (v90 > 0x20 || v136 - v5 + (v135 << 6) + v90 > 0xC0)
      {
        int v133 = 0;
      }
      else
      {
        int v133 = 0;
        uint64_t v152 = 0;
        unint64_t v153 = v90;
        do
        {
          unint64_t v154 = 64 - v136;
          if (64 - v136 >= v153) {
            unint64_t v154 = v153;
          }
          v133 |= (unint64_t)((*(void *)(v4 + 8 * v135) >> v136) & ~(-1 << v154)) << v152;
          v152 += v154;
          unint64_t v155 = v154 + v136;
          v135 += v155 >> 6;
          unint64_t v136 = v155 & 0x3F;
          v153 -= v154;
        }
        while (v153);
      }
      *((_DWORD *)&v263[5] + v128 + 1) = v133;
      v134 += v90;
    }
    unint64_t v132 = (v136 | (v135 << 6)) + v131 - v134;
    ++v128;
  }
  while (v128 != 7);
  unint64_t v156 = 0;
  uint64_t v157 = 0;
  uint64_t v158 = v107 + 112;
  do
  {
    unint64_t v163 = *(void *)&kDQuadParamTable[160 * v278[v156 / 4] + 2 + 10 * v279[v156 / 4]];
    int v164 = v268[v156 / 4];
    unint64_t v165 = v163 >> v164;
    if (v163 >> v164 <= 1) {
      unint64_t v165 = 1;
    }
    int v166 = *(unsigned int *)((char *)&__b + v156);
    unint64_t v167 = v165 >> 1;
    unint64_t v168 = (unint64_t)(1 << (v166 - v269[v156 / 4])) >> 1;
    if (v165 >> 1 < v168) {
      unint64_t v168 = v165 >> 1;
    }
    unint64_t v169 = (1 << (v166 - 1));
    unint64_t v170 = *(unsigned int *)((char *)&v266 + v156);
    unint64_t v171 = v169 - v170;
    unint64_t v172 = 1 << v166;
    int v173 = (1 << v166) - 1;
    if (v170) {
      unint64_t v174 = v168;
    }
    else {
      unint64_t v174 = 0;
    }
    BOOL v175 = v170 == v169;
    BOOL v176 = v166 == 16;
    if (v166 == 16) {
      unint64_t result = 31744;
    }
    else {
      unint64_t result = 2139095040;
    }
    if (v166 == 16) {
      unint64_t v178 = 64512;
    }
    else {
      unint64_t v178 = 4286578688;
    }
    unint64_t v179 = 2143289344;
    if (v176) {
      unint64_t v179 = 32256;
    }
    unint64_t v180 = 4290772992;
    if (v176) {
      unint64_t v180 = 65024;
    }
    unint64_t v181 = (v178 - 1);
    if (v164)
    {
      unint64_t v182 = v163 + v170;
      uint64_t v183 = ~(-1 << v164);
      int v184 = *(_DWORD *)((char *)&v264 + v156);
      unint64_t v185 = v171 / v165;
      if (!v184)
      {
        uint64_t v194 = 0;
        unint64_t v188 = v174;
        BOOL v187 = v170 == v169;
        goto LABEL_316;
      }
      uint64_t v186 = *(unsigned int *)((char *)v263 + v157);
      BOOL v187 = v185 == v186;
      if (v170 | v186)
      {
        if (v182 >= v172 && v186 == v183)
        {
          uint64_t v194 = 1;
          unint64_t v188 = v172 - 1;
          goto LABEL_316;
        }
        unint64_t v188 = v167 + v165 * v186;
      }
      else
      {
        unint64_t v188 = 0;
      }
      uint64_t v194 = 1;
LABEL_316:
      unint64_t v195 = v188 + v170;
      unint64_t v196 = v195;
      if (a3 == 4)
      {
        BOOL v197 = v195 < result || v195 >= v179;
        unint64_t v196 = (result - 1);
        if (v197)
        {
          BOOL v198 = v195 < v179 || v195 >= v169;
          unint64_t v196 = v169;
          if (v198)
          {
            if (v195 < v180 && v195 >= v178) {
              unint64_t v196 = (v178 - 1);
            }
            else {
              unint64_t v196 = v195;
            }
          }
        }
      }
      if (v196 >= v172) {
        int v200 = v173;
      }
      else {
        int v200 = v196;
      }
      if (v187) {
        int v201 = 0;
      }
      else {
        int v201 = v200 ^ v169;
      }
      if (v129 != 1) {
        int v201 = v200;
      }
      *(_DWORD *)(v158 + v156 - 112) = v201;
      if (v184 == 1)
      {
        unint64_t v202 = v174;
        BOOL v203 = v170 == v169;
      }
      else
      {
        uint64_t v204 = *(unsigned int *)(((unint64_t)v263 | (4 * v194)) + v157);
        BOOL v203 = v185 == v204;
        if (v170 | v204)
        {
          if (v182 < v172 || (unint64_t v202 = v172 - 1, v204 != v183)) {
            unint64_t v202 = v167 + v165 * v204;
          }
        }
        else
        {
          unint64_t v202 = 0;
        }
        ++v194;
      }
      unint64_t v205 = v202 + v170;
      unint64_t v206 = v205;
      if (a3 == 4)
      {
        BOOL v207 = v205 < result || v205 >= v179;
        unint64_t v206 = (result - 1);
        if (v207)
        {
          if (v205 < v179 || (unint64_t v206 = v169, v205 >= v169))
          {
            if (v205 < v180 && v205 >= v178) {
              unint64_t v206 = (v178 - 1);
            }
            else {
              unint64_t v206 = v205;
            }
          }
        }
      }
      if (v206 >= v172) {
        int v209 = v173;
      }
      else {
        int v209 = v206;
      }
      if (v203) {
        int v210 = 0;
      }
      else {
        int v210 = v209 ^ v169;
      }
      if (v129 != 1) {
        int v210 = v209;
      }
      *(_DWORD *)(v158 + v156 - 96) = v210;
      if (v184 == 2)
      {
        unint64_t v211 = v174;
        BOOL v212 = v170 == v169;
      }
      else
      {
        uint64_t v213 = *(unsigned int *)(((unint64_t)v263 | (4 * v194)) + v157);
        BOOL v212 = v185 == v213;
        if (v170 | v213)
        {
          if (v182 < v172 || (unint64_t v211 = v172 - 1, v213 != v183)) {
            unint64_t v211 = v167 + v165 * v213;
          }
        }
        else
        {
          unint64_t v211 = 0;
        }
        ++v194;
      }
      unint64_t v214 = v211 + v170;
      unint64_t v215 = v214;
      if (a3 == 4)
      {
        if (v214 < result || (unint64_t v215 = (result - 1), v214 >= v179))
        {
          if (v214 < v179 || (unint64_t v215 = v169, v214 >= v169))
          {
            if (v214 < v180 && v214 >= v178) {
              unint64_t v215 = (v178 - 1);
            }
            else {
              unint64_t v215 = v214;
            }
          }
        }
      }
      if (v215 >= v172) {
        int v217 = v173;
      }
      else {
        int v217 = v215;
      }
      if (v212) {
        int v218 = 0;
      }
      else {
        int v218 = v217 ^ v169;
      }
      if (v129 != 1) {
        int v218 = v217;
      }
      *(_DWORD *)(v158 + v156 - 80) = v218;
      if (v184 == 3)
      {
        unint64_t v219 = v174;
        BOOL v220 = v170 == v169;
      }
      else
      {
        uint64_t v221 = *(unsigned int *)((char *)v263 + 4 * v194 + v157);
        BOOL v220 = v185 == v221;
        if (v170 | v221)
        {
          if (v182 < v172 || (unint64_t v219 = v172 - 1, v221 != v183)) {
            unint64_t v219 = v167 + v165 * v221;
          }
        }
        else
        {
          unint64_t v219 = 0;
        }
        ++v194;
      }
      unint64_t v222 = v219 + v170;
      unint64_t v223 = v222;
      if (a3 == 4)
      {
        if (v222 < result || (unint64_t v223 = (result - 1), v222 >= v179))
        {
          if (v222 < v179 || (unint64_t v223 = v169, v222 >= v169))
          {
            if (v222 < v180 && v222 >= v178) {
              unint64_t v223 = (v178 - 1);
            }
            else {
              unint64_t v223 = v222;
            }
          }
        }
      }
      if (v223 >= v172) {
        int v225 = v173;
      }
      else {
        int v225 = v223;
      }
      if (v220) {
        int v226 = 0;
      }
      else {
        int v226 = v225 ^ v169;
      }
      if (v129 != 1) {
        int v226 = v225;
      }
      *(_DWORD *)(v158 + v156 - 64) = v226;
      if (v184 == 4)
      {
        unint64_t v227 = v174;
        BOOL v228 = v170 == v169;
      }
      else
      {
        uint64_t v229 = *(unsigned int *)((char *)v263 + 4 * v194 + v157);
        BOOL v228 = v185 == v229;
        if (v170 | v229)
        {
          if (v182 < v172 || (unint64_t v227 = v172 - 1, v229 != v183)) {
            unint64_t v227 = v167 + v165 * v229;
          }
        }
        else
        {
          unint64_t v227 = 0;
        }
        ++v194;
      }
      unint64_t v230 = v227 + v170;
      unint64_t v231 = v230;
      if (a3 == 4)
      {
        if (v230 < result || (unint64_t v231 = (result - 1), v230 >= v179))
        {
          if (v230 < v179 || (unint64_t v231 = v169, v230 >= v169))
          {
            if (v230 < v180 && v230 >= v178) {
              unint64_t v231 = (v178 - 1);
            }
            else {
              unint64_t v231 = v230;
            }
          }
        }
      }
      if (v231 >= v172) {
        int v233 = v173;
      }
      else {
        int v233 = v231;
      }
      if (v228) {
        int v234 = 0;
      }
      else {
        int v234 = v233 ^ v169;
      }
      if (v129 != 1) {
        int v234 = v233;
      }
      *(_DWORD *)(v158 + v156 - 48) = v234;
      if (v184 == 5)
      {
        unint64_t v235 = v174;
        BOOL v236 = v170 == v169;
      }
      else
      {
        uint64_t v237 = *(unsigned int *)((char *)v263 + 4 * v194 + v157);
        BOOL v236 = v185 == v237;
        if (v170 | v237)
        {
          if (v182 < v172 || (unint64_t v235 = v172 - 1, v237 != v183)) {
            unint64_t v235 = v167 + v165 * v237;
          }
        }
        else
        {
          unint64_t v235 = 0;
        }
        ++v194;
      }
      unint64_t v238 = v235 + v170;
      unint64_t v239 = v238;
      if (a3 == 4)
      {
        if (v238 < result || (unint64_t v239 = (result - 1), v238 >= v179))
        {
          if (v238 < v179 || (unint64_t v239 = v169, v238 >= v169))
          {
            if (v238 < v180 && v238 >= v178) {
              unint64_t v239 = (v178 - 1);
            }
            else {
              unint64_t v239 = v238;
            }
          }
        }
      }
      if (v239 >= v172) {
        int v241 = v173;
      }
      else {
        int v241 = v239;
      }
      if (v236) {
        int v242 = 0;
      }
      else {
        int v242 = v241 ^ v169;
      }
      if (v129 != 1) {
        int v242 = v241;
      }
      *(_DWORD *)(v158 + v156 - 32) = v242;
      if (v184 == 6)
      {
        unint64_t v243 = v174;
        BOOL v244 = v170 == v169;
      }
      else
      {
        uint64_t v245 = *(unsigned int *)((char *)v263 + 4 * v194 + v157);
        BOOL v244 = v185 == v245;
        if (v170 | v245)
        {
          if (v182 < v172 || (unint64_t v243 = v172 - 1, v245 != v183)) {
            unint64_t v243 = v167 + v165 * v245;
          }
        }
        else
        {
          unint64_t v243 = 0;
        }
        ++v194;
      }
      unint64_t v246 = v243 + v170;
      unint64_t v247 = v246;
      if (a3 == 4)
      {
        if (v246 < result || (unint64_t v247 = (result - 1), v246 >= v179))
        {
          if (v246 < v179 || (unint64_t v247 = v169, v246 >= v169))
          {
            if (v246 < v180 && v246 >= v178) {
              unint64_t v247 = (v178 - 1);
            }
            else {
              unint64_t v247 = v246;
            }
          }
        }
      }
      if (v247 >= v172) {
        int v249 = v173;
      }
      else {
        int v249 = v247;
      }
      if (v244) {
        int v250 = 0;
      }
      else {
        int v250 = v249 ^ v169;
      }
      if (v129 != 1) {
        int v250 = v249;
      }
      *(_DWORD *)(v158 + v156 - 16) = v250;
      if (v184 != 7)
      {
        uint64_t v251 = *(unsigned int *)((char *)v263 + 4 * v194 + v157);
        BOOL v175 = v185 == v251;
        if (v170 | v251)
        {
          if (v182 >= v172 && v251 == v183) {
            unint64_t v174 = v172 - 1;
          }
          else {
            unint64_t v174 = v167 + v165 * v251;
          }
        }
        else
        {
          unint64_t v174 = 0;
        }
      }
      unint64_t v252 = v174 + v170;
      unint64_t v160 = v174 + v170;
      if (a3 == 4)
      {
        if (v252 < result || (unint64_t v160 = (result - 1), v252 >= v179))
        {
          if (v252 < v179 || (unint64_t v160 = v169, v252 >= v169))
          {
            if (v252 < v180 && v252 >= v178) {
              unint64_t v160 = (v178 - 1);
            }
            else {
              unint64_t v160 = v174 + v170;
            }
          }
        }
      }
      if (v160 >= v172) {
        int v161 = v173;
      }
      else {
        int v161 = v160;
      }
      int v162 = v161 ^ v169;
      if (v175) {
        int v162 = 0;
      }
      if (v129 == 1) {
        int v161 = v162;
      }
      goto LABEL_267;
    }
    BOOL v190 = v179 <= v170 && v170 < v169;
    BOOL v192 = v170 >= v178 && v180 > v170;
    if (a3 == 4)
    {
      if (v170 < result || v179 <= v170)
      {
        if (v190)
        {
          if (v172 <= v169) {
            LODWORD(v193) = v173;
          }
          else {
            LODWORD(v193) = v169;
          }
        }
        else
        {
          if (v192) {
            unint64_t v193 = v181;
          }
          else {
            unint64_t v193 = *(unsigned int *)((char *)&v266 + v156);
          }
          if (v193 >= v172) {
            LODWORD(v193) = v173;
          }
        }
      }
      else if (v172 <= (result - 1))
      {
        LODWORD(v193) = v173;
      }
      else
      {
        LODWORD(v193) = result - 1;
      }
    }
    else if (v172 <= v170)
    {
      LODWORD(v193) = v173;
    }
    else
    {
      LODWORD(v193) = *(_DWORD *)((char *)&v266 + v156);
    }
    if (v165 <= v171) {
      int v161 = v193 ^ v169;
    }
    else {
      int v161 = 0;
    }
    if (v129 != 1) {
      int v161 = v193;
    }
    uint64_t v253 = v158 + v156;
    *(_DWORD *)(v253 - 112) = v161;
    *(_DWORD *)(v253 - 96) = v161;
    *(_DWORD *)(v253 - 80) = v161;
    *(_DWORD *)(v253 - 64) = v161;
    *(_DWORD *)(v253 - 48) = v161;
    *(_DWORD *)(v253 - 32) = v161;
    *(_DWORD *)(v253 - 16) = v161;
LABEL_267:
    *(_DWORD *)(v158 + v156) = v161;
    v157 += 28;
    v156 += 4;
  }
  while (v157 != 112);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(float32x4_t *a1, uint64_t a2, unint64_t a3, unsigned int a4, int a5)
{
  uint64_t v405 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v19 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    uint64_t v20 = (_OWORD *)((char *)a1->f32 + a2);
    *uint64_t v20 = 0u;
    v20[1] = 0u;
    unint64_t v21 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *unint64_t v21 = 0u;
    v21[1] = 0u;
    unint64_t v22 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
LABEL_161:
    *unint64_t v22 = v19;
    v22[1] = v19;
    return result;
  }
  char v15 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v390, a5);
    }
    int32x4_t v378 = v391;
    int32x4_t v380 = v390;
    int32x4_t v374 = v393;
    int32x4_t v376 = v392;
    int32x4_t v372 = v395;
    int32x4_t v373 = v394;
    unint64_t v27 = a3 + 24;
    int32x4_t v370 = v397;
    int32x4_t v371 = v396;
    if ((v15 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v27, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v27, (uint64_t)&v390, a5);
    }
    int32x4_t v368 = v391;
    int32x4_t v369 = v390;
    int32x4_t v366 = v393;
    int32x4_t v367 = v392;
    int32x4_t v364 = v395;
    int32x4_t v365 = v394;
    unint64_t v28 = a3 + 48;
    int32x4_t v363 = v396;
    int32x4_t v382 = v397;
    if ((v15 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v28, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v28, (uint64_t)&v390, a5);
    }
    int32x4_t v361 = v391;
    int32x4_t v362 = v390;
    int32x4_t v359 = v393;
    int32x4_t v360 = v392;
    int32x4_t v357 = v395;
    int32x4_t v358 = v394;
    unint64_t v29 = a3 + 72;
    int32x4_t v355 = v397;
    int32x4_t v356 = v396;
    if ((v15 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v390, a5);
    }
    *(int16x4_t *)v38.i8 = vmovn_s32(v355);
    *(int16x4_t *)v42.i8 = vmovn_s32(v356);
    *(int16x4_t *)v47.i8 = vmovn_s32(v357);
    *(int16x4_t *)v49.i8 = vmovn_s32(v358);
    *(int16x4_t *)v44.i8 = vmovn_s32(v359);
    *(int16x4_t *)v45.i8 = vmovn_s32(v360);
    *(int16x4_t *)v5.i8 = vmovn_s32(v361);
    *(int16x4_t *)v6.i8 = vmovn_s32(v362);
    v50.i64[1] = v382.i64[1];
    *(int16x4_t *)v50.i8 = vmovn_s32(v382);
    int16x8_t v383 = v50;
    *(int16x4_t *)v30.i8 = vmovn_s32(v363);
    *(int16x4_t *)v34.i8 = vmovn_s32(v364);
    *(int16x4_t *)v35.i8 = vmovn_s32(v365);
    *(int16x4_t *)v31.i8 = vmovn_s32(v366);
    *(int16x4_t *)v33.i8 = vmovn_s32(v367);
    *(int16x4_t *)v41.i8 = vmovn_s32(v368);
    *(int16x4_t *)v43.i8 = vmovn_s32(v369);
    *(int16x4_t *)v46.i8 = vmovn_s32(v370);
    *(int16x4_t *)v48.i8 = vmovn_s32(v371);
    *(int16x4_t *)v7.i8 = vmovn_s32(v372);
    *(int16x4_t *)v8.i8 = vmovn_s32(v373);
    *(int16x4_t *)v9.i8 = vmovn_s32(v374);
    *(int16x4_t *)v10.i8 = vmovn_s32(v376);
    *(int16x4_t *)v11.i8 = vmovn_s32(v378);
    *(int16x4_t *)v12.i8 = vmovn_s32(v380);
    *(int16x4_t *)v39.i8 = vmovn_s32(v390);
    *(int16x4_t *)v37.i8 = vmovn_s32(v391);
    v51.i64[1] = v393.i64[1];
    *(int16x4_t *)v32.i8 = vmovn_s32(v392);
    *(int16x4_t *)v51.i8 = vmovn_s32(v393);
    v52.i64[1] = v395.i64[1];
    *(int16x4_t *)v40.i8 = vmovn_s32(v394);
    *(int16x4_t *)v36.i8 = vmovn_s32(v395);
    v53.i64[1] = v396.i64[1];
    *(int16x4_t *)v52.i8 = vmovn_s32(v396);
    *(int16x4_t *)v53.i8 = vmovn_s32(v397);
    v50.i32[0] = vmovn_s16(v12).u32[0];
    v50.i32[1] = vmovn_s16(v11).u32[0];
    v50.i32[2] = vmovn_s16(v8).u32[0];
    v50.i32[3] = vmovn_s16(v7).u32[0];
    v54.i32[0] = vmovn_s16(v6).u32[0];
    v54.i32[1] = vmovn_s16(v5).u32[0];
    v54.i32[2] = vmovn_s16(v49).u32[0];
    v54.i32[3] = vmovn_s16(v47).u32[0];
    *a1 = (float32x4_t)v50;
    a1[1] = v54;
    v50.i32[0] = vmovn_s16(v10).u32[0];
    v50.i32[1] = vmovn_s16(v9).u32[0];
    v50.i32[2] = vmovn_s16(v48).u32[0];
    v50.i32[3] = vmovn_s16(v46).u32[0];
    uint64_t v55 = (int16x8_t *)((char *)a1 + a2);
    v56.i32[0] = vmovn_s16(v45).u32[0];
    v56.i32[1] = vmovn_s16(v44).u32[0];
    v56.i32[2] = vmovn_s16(v42).u32[0];
    v56.i32[3] = vmovn_s16(v38).u32[0];
    *uint64_t v55 = v50;
    v55[1] = v56;
    v50.i32[0] = vmovn_s16(v43).u32[0];
    v50.i32[1] = vmovn_s16(v41).u32[0];
    v50.i32[2] = vmovn_s16(v35).u32[0];
    v50.i32[3] = vmovn_s16(v34).u32[0];
    v57.i32[0] = vmovn_s16(v39).u32[0];
    v57.i32[1] = vmovn_s16(v37).u32[0];
    v57.i32[2] = vmovn_s16(v40).u32[0];
    unint64_t v58 = (int16x8_t *)((char *)a1 + a2 + a2);
    v57.i32[3] = vmovn_s16(v36).u32[0];
    LODWORD(v59) = vmovn_s16(v33).u32[0];
    DWORD1(v59) = vmovn_s16(v31).u32[0];
    DWORD2(v59) = vmovn_s16(v30).u32[0];
    *unint64_t v58 = v50;
    v58[1] = v57;
    HIDWORD(v59) = vmovn_s16(v383).u32[0];
    v50.i32[0] = vmovn_s16(v32).u32[0];
    v50.i32[1] = vmovn_s16(v51).u32[0];
    v50.i32[2] = vmovn_s16(v52).u32[0];
    v50.i32[3] = vmovn_s16(v53).u32[0];
    unsigned int v60 = &v58->i8[a2];
    *(_OWORD *)unsigned int v60 = v59;
    *((int16x8_t *)v60 + 1) = v50;
    return 96;
  }
  if (a4 == 127)
  {
    int64x2_t v61 = *(int64x2_t *)a3;
    int64x2_t v62 = *(int64x2_t *)(a3 + 16);
    int64x2_t v63 = *(int64x2_t *)(a3 + 32);
    int64x2_t v64 = *(int64x2_t *)(a3 + 48);
    int64x2_t v65 = *(int64x2_t *)(a3 + 64);
    int64x2_t v66 = *(int64x2_t *)(a3 + 80);
    int64x2_t v67 = *(int64x2_t *)(a3 + 96);
    int64x2_t v68 = *(int64x2_t *)(a3 + 112);
    int v69 = (int64x2_t *)((char *)a1 + a2);
    *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v62);
    a1[1] = (float32x4_t)vzip1q_s64(v65, v66);
    unint64_t v70 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int v69 = vzip2q_s64(v61, v62);
    v69[1] = vzip2q_s64(v65, v66);
    *unint64_t v70 = vzip1q_s64(v63, v64);
    v70[1] = vzip1q_s64(v67, v68);
    unsigned int v71 = (int64x2_t *)((char *)v70 + a2);
    *unsigned int v71 = vzip2q_s64(v63, v64);
    v71[1] = vzip2q_s64(v67, v68);
    return 128;
  }
  if (a4 == 3)
  {
    float32x4_t v23 = vld1q_dup_f32((const float *)a3);
    *a1 = v23;
    a1[1] = v23;
    unint64_t v24 = (float32x4_t *)((char *)a1 + a2);
    *unint64_t v24 = v23;
    v24[1] = v23;
    uint64_t v25 = (float32x4_t *)((char *)a1 + 2 * a2);
    *uint64_t v25 = v23;
    v25[1] = v23;
    int v26 = (float32x4_t *)((char *)a1 + 2 * a2 + a2);
    *int v26 = v23;
    v26[1] = v23;
    return 4;
  }
  unsigned __int8 v388 = 0;
  unint64_t v385 = 8 * (a3 & 7);
  unint64_t v386 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v387 = v385 | 0x300;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v399, (uint64_t)v404, (float *)v398.i32, &v385, a4);
  v73.i64[0] = 0x303030303030303;
  v73.i64[1] = 0x303030303030303;
  int8x16_t v74 = vandq_s8(v399, v73);
  int8x16_t v75 = vbicq_s8(v404[0], vceqq_s8(v74, v73));
  v404[0] = v75;
  int8x16_t v400 = v75;
  int8x16_t v401 = v75;
  int8x16_t v402 = v75;
  int8x16_t v403 = v75;
  v76.i64[0] = 0x202020202020202;
  v76.i64[1] = 0x202020202020202;
  int8x16_t v77 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v399.i8), (int16x4_t)0x4000400040004)), v76);
  unint64_t v78 = v385;
  if (vmaxvq_s8(v77) < 1)
  {
    v91.i64[0] = -1;
    v91.i64[1] = -1;
    int8x16_t v377 = v91;
    int8x16_t v379 = v91;
    int8x16_t v375 = v91;
    int8x16_t v381 = v91;
  }
  else
  {
    int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v77, v77));
    int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
    unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
    v82.i64[0] = v81;
    v82.i64[1] = HIDWORD(v81);
    int64x2_t v83 = v82;
    unint64_t v84 = vaddvq_s64(v82);
    unint64_t v85 = v84;
    unint64_t v86 = v385 + v84;
    if (v387) {
      BOOL v87 = v387 >= v86;
    }
    else {
      BOOL v87 = 1;
    }
    int v88 = !v87;
    if (v84 <= 0x80 && v88 == 0)
    {
      v72.i64[0] = 63;
      unsigned int v92 = (int64x2_t *)(v386 + 8 * (v385 >> 6));
      int64x2_t v93 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v385, v72).i64[0], 0), vzip1q_s64((int64x2_t)0, v83));
      int8x16_t v90 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v93)));
      if ((v385 & 0x3F) + v85 >= 0x81) {
        int8x16_t v90 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v93))), v90);
      }
      unint64_t v78 = v86;
    }
    else
    {
      unsigned __int8 v388 = 1;
      int8x16_t v90 = 0uLL;
    }
    int32x2_t v94 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v95.i64[0] = v94.u32[0];
    v95.i64[1] = v94.u32[1];
    int64x2_t v96 = (int64x2_t)vshlq_u64((uint64x2_t)v90, (uint64x2_t)vnegq_s64(v95));
    *(int32x2_t *)v90.i8 = vmovn_s64((int64x2_t)v90);
    *(int32x2_t *)v96.i8 = vmovn_s64(v96);
    int16x8_t v97 = (int16x8_t)vzip1q_s32((int32x4_t)v90, (int32x4_t)v96);
    int16x8_t v98 = (int16x8_t)vshlq_u32((uint32x4_t)v97, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v97.i8 = vmovn_s32((int32x4_t)v97);
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    int8x16_t v99 = (int8x16_t)vzip1q_s16(v97, v98);
    int8x16_t v100 = (int8x16_t)vshlq_u16((uint16x8_t)v99, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v77.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL)))));
    *(int8x8_t *)v99.i8 = vmovn_s16((int16x8_t)v99);
    *(int8x8_t *)v100.i8 = vmovn_s16((int16x8_t)v100);
    int8x16_t v101 = vzip1q_s8(v99, v100);
    v100.i64[0] = 0x101010101010101;
    v100.i64[1] = 0x101010101010101;
    int8x16_t v102 = vshlq_s8(v100, v77);
    v100.i64[0] = -1;
    v100.i64[1] = -1;
    int32x4_t v103 = (int32x4_t)vqtbl1q_s8(vandq_s8(v101, vaddq_s8(v102, v100)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v104 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v103.i8, 0);
    int8x16_t v105 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v103.i8, 1);
    int8x16_t v106 = (int8x16_t)vdupq_laneq_s32(v103, 2);
    int8x16_t v107 = (int8x16_t)vdupq_laneq_s32(v103, 3);
    int8x16_t v400 = vsubq_s8(v400, v104);
    int8x16_t v401 = vsubq_s8(v401, v105);
    int8x16_t v402 = vsubq_s8(v402, v106);
    int8x16_t v403 = vsubq_s8(v403, v107);
    int8x16_t v381 = vceqzq_s8(v104);
    int8x16_t v375 = vceqzq_s8(v105);
    int8x16_t v377 = vceqzq_s8(v106);
    int8x16_t v379 = vceqzq_s8(v107);
  }
  v108.i64[0] = 0x808080808080808;
  v108.i64[1] = 0x808080808080808;
  int8x16_t v109 = 0uLL;
  int8x16_t v110 = vandq_s8(vextq_s8(vtstq_s8(v399, v108), (int8x16_t)0, 0xCuLL), v75);
  int8x16_t v111 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v110, v110));
  int8x16_t v112 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v111, (int16x8_t)v111));
  unint64_t v113 = vpaddq_s32((int32x4_t)v112, (int32x4_t)v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v387) {
    BOOL v117 = v387 >= v78 + v116;
  }
  else {
    BOOL v117 = 1;
  }
  int v118 = !v117;
  if (v116 <= 0x80 && v118 == 0)
  {
    int64x2_t v120 = vaddq_s64(vdupq_n_s64(v78 & 0x3F), vzip1q_s64((int64x2_t)0, v115));
    uint64_t v121 = (int64x2_t *)(v386 + 8 * (v78 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v121, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v121->i64[0], 0), (uint64x2_t)vnegq_s64(v120)));
    if ((v78 & 0x3F) + v116 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v121[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v121[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v120))), v109);
    }
    v78 += v116;
  }
  else
  {
    unsigned __int8 v388 = 1;
  }
  int v122 = v399.i8[0] & 3;
  if (v122 == 2)
  {
    unint64_t v123 = v78 + 4;
    if (v387)
    {
      if (v387 >= v123)
      {
        unint64_t v124 = v78 + 8;
        v78 += 4;
      }
      else
      {
        unsigned __int8 v388 = 1;
        unint64_t v124 = v78 + 4;
      }
      if (v387 < v124)
      {
        unsigned __int8 v388 = 1;
        goto LABEL_61;
      }
      unint64_t v123 = v78;
    }
    unint64_t v78 = v123 + 4;
  }
LABEL_61:
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v400, 0xCuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v126, v126));
  int8x16_t v128 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v127, (int16x8_t)v127));
  unint64_t v129 = vpaddq_s32((int32x4_t)v128, (int32x4_t)v128).u64[0];
  v130.i64[0] = v129;
  v130.i64[1] = HIDWORD(v129);
  int64x2_t v131 = v130;
  unint64_t v132 = vaddvq_s64(v130);
  unint64_t v133 = v78 + v132;
  if (v387) {
    BOOL v134 = v387 >= v133;
  }
  else {
    BOOL v134 = 1;
  }
  int v135 = !v134;
  int8x16_t v384 = v74;
  if (v132 > 0x80 || v135)
  {
    int v140 = 1;
    unint64_t v138 = v386;
  }
  else
  {
    unint64_t v136 = v78 & 0x3F;
    int64x2_t v137 = vaddq_s64(vdupq_n_s64(v136), vzip1q_s64((int64x2_t)0, v131));
    unint64_t v138 = v386;
    unint64_t v139 = (int64x2_t *)(v386 + 8 * (v78 >> 6));
    int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v139, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139->i64[0], 0), (uint64x2_t)vnegq_s64(v137)));
    if (v136 + v132 >= 0x81) {
      int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v139[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v137))), v125);
    }
    int v140 = v388;
    unint64_t v78 = v133;
  }
  int8x16_t v141 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v400, v400));
  int8x16_t v142 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v141, (int16x8_t)v141));
  unint64_t v143 = vpaddq_s32((int32x4_t)v142, (int32x4_t)v142).u64[0];
  v144.i64[0] = v143;
  v144.i64[1] = HIDWORD(v143);
  int64x2_t v145 = v144;
  unint64_t v146 = vaddvq_s64(v144);
  unint64_t v147 = v78 + v146;
  if (v387) {
    BOOL v148 = v387 >= v147;
  }
  else {
    BOOL v148 = 1;
  }
  char v149 = !v148;
  int8x16_t v150 = 0uLL;
  if (v146 > 0x80 || (v149 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v147 = v78;
    int8x16_t v154 = 0uLL;
  }
  else
  {
    unint64_t v151 = v78 & 0x3F;
    int64x2_t v152 = vaddq_s64(vdupq_n_s64(v151), vzip1q_s64((int64x2_t)0, v145));
    unint64_t v153 = (int64x2_t *)(v138 + 8 * (v78 >> 6));
    int8x16_t v154 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v153, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153->i64[0], 0), (uint64x2_t)vnegq_s64(v152)));
    if (v151 + v146 >= 0x81) {
      int8x16_t v154 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v153[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v152))), v154);
    }
  }
  int8x16_t v155 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v401, v401));
  int8x16_t v156 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v155, (int16x8_t)v155));
  unint64_t v157 = vpaddq_s32((int32x4_t)v156, (int32x4_t)v156).u64[0];
  v158.i64[0] = v157;
  v158.i64[1] = HIDWORD(v157);
  int64x2_t v159 = v158;
  unint64_t v160 = vaddvq_s64(v158);
  unint64_t v161 = v160;
  unint64_t v162 = v147 + v160;
  if (v387) {
    BOOL v163 = v387 >= v162;
  }
  else {
    BOOL v163 = 1;
  }
  char v164 = !v163;
  if (v160 > 0x80 || (v164 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v162 = v147;
  }
  else
  {
    unint64_t v165 = v147 & 0x3F;
    int64x2_t v166 = vaddq_s64(vdupq_n_s64(v165), vzip1q_s64((int64x2_t)0, v159));
    unint64_t v167 = (int64x2_t *)(v138 + 8 * (v147 >> 6));
    int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v167, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v166)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v167->i64[0], 0), (uint64x2_t)vnegq_s64(v166)));
    if (v165 + v161 >= 0x81) {
      int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v167[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v166)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v167[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v166))), v150);
    }
  }
  unint64_t v168 = v162 + v161;
  if (v387) {
    BOOL v169 = v387 >= v168;
  }
  else {
    BOOL v169 = 1;
  }
  char v170 = !v169;
  int8x16_t v171 = 0uLL;
  if (v161 > 0x80 || (v170 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v168 = v162;
    int8x16_t v175 = 0uLL;
  }
  else
  {
    unint64_t v172 = v162 & 0x3F;
    int64x2_t v173 = vaddq_s64(vdupq_n_s64(v172), vzip1q_s64((int64x2_t)0, v159));
    unint64_t v174 = (int64x2_t *)(v138 + 8 * (v162 >> 6));
    int8x16_t v175 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v174, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v174->i64[0], 0), (uint64x2_t)vnegq_s64(v173)));
    if (v172 + v161 >= 0x81) {
      int8x16_t v175 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v174[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v174[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v173))), v175);
    }
  }
  int8x16_t v176 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v402, v402));
  int8x16_t v177 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v176, (int16x8_t)v176));
  unint64_t v178 = vpaddq_s32((int32x4_t)v177, (int32x4_t)v177).u64[0];
  v179.i64[0] = v178;
  v179.i64[1] = HIDWORD(v178);
  int64x2_t v180 = v179;
  unint64_t v181 = vaddvq_s64(v179);
  unint64_t v182 = v181;
  unint64_t v183 = v168 + v181;
  if (v387) {
    BOOL v184 = v387 >= v183;
  }
  else {
    BOOL v184 = 1;
  }
  char v185 = !v184;
  if (v181 > 0x80 || (v185 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v183 = v168;
  }
  else
  {
    unint64_t v186 = v168 & 0x3F;
    int64x2_t v187 = vaddq_s64(vdupq_n_s64(v186), vzip1q_s64((int64x2_t)0, v180));
    unint64_t v188 = (int64x2_t *)(v138 + 8 * (v168 >> 6));
    int8x16_t v171 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v188, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v187)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v188->i64[0], 0), (uint64x2_t)vnegq_s64(v187)));
    if (v186 + v182 >= 0x81) {
      int8x16_t v171 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v188[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v187)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v188[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v187))), v171);
    }
  }
  unint64_t v189 = v183 + v182;
  if (v387) {
    BOOL v190 = v387 >= v189;
  }
  else {
    BOOL v190 = 1;
  }
  char v191 = !v190;
  int8x16_t v192 = 0uLL;
  if (v182 > 0x80 || (v191 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v189 = v183;
    int8x16_t v196 = 0uLL;
  }
  else
  {
    unint64_t v193 = v183 & 0x3F;
    int64x2_t v194 = vaddq_s64(vdupq_n_s64(v193), vzip1q_s64((int64x2_t)0, v180));
    unint64_t v195 = (int64x2_t *)(v138 + 8 * (v183 >> 6));
    int8x16_t v196 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v195, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v194)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195->i64[0], 0), (uint64x2_t)vnegq_s64(v194)));
    if (v193 + v182 >= 0x81) {
      int8x16_t v196 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v194)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v195[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v194))), v196);
    }
  }
  int8x16_t v197 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v403, v403));
  int8x16_t v198 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v197, (int16x8_t)v197));
  unint64_t v199 = vpaddq_s32((int32x4_t)v198, (int32x4_t)v198).u64[0];
  v200.i64[0] = v199;
  v200.i64[1] = HIDWORD(v199);
  int64x2_t v201 = v200;
  unint64_t v202 = vaddvq_s64(v200);
  unint64_t v203 = v202;
  unint64_t v204 = v189 + v202;
  if (v387) {
    BOOL v205 = v387 >= v204;
  }
  else {
    BOOL v205 = 1;
  }
  char v206 = !v205;
  if (v202 > 0x80 || (v206 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v204 = v189;
  }
  else
  {
    unint64_t v207 = v189 & 0x3F;
    int64x2_t v208 = vaddq_s64(vdupq_n_s64(v207), vzip1q_s64((int64x2_t)0, v201));
    int v209 = (int64x2_t *)(v138 + 8 * (v189 >> 6));
    int8x16_t v192 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v209, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209->i64[0], 0), (uint64x2_t)vnegq_s64(v208)));
    if (v207 + v203 >= 0x81) {
      int8x16_t v192 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v209[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v208))), v192);
    }
  }
  unint64_t v210 = v204 + v203;
  if (v387) {
    BOOL v211 = v387 >= v210;
  }
  else {
    BOOL v211 = 1;
  }
  char v212 = !v211;
  int8x16_t v213 = 0uLL;
  if (v203 > 0x80 || (v212 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v210 = v204;
  }
  else
  {
    int64x2_t v214 = vaddq_s64(vdupq_n_s64(v204 & 0x3F), vzip1q_s64((int64x2_t)0, v201));
    unint64_t v215 = (int64x2_t *)(v138 + 8 * (v204 >> 6));
    int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v215, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215->i64[0], 0), (uint64x2_t)vnegq_s64(v214)));
    if ((v204 & 0x3F) + v203 >= 0x81) {
      int8x16_t v213 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v215[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v214))), v213);
    }
  }
  if (v140 || v387 + 8 * result - v210 - 768 >= 9 || v122 == 2)
  {
    uint64_t v216 = (8 * (&v389 + 4)) & 0x20;
    uint64_t v217 = v389 | (255 << v216);
    uint64_t v389 = v217;
    unint64_t v218 = (32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 8;
    unint64_t v219 = (((32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 0x10) - v216) | 8;
    if (v218 - v216 > 0x18) {
      unint64_t v219 = v218 - v216 + 8;
    }
    if (v219 <= 0x20)
    {
      if (v218 - v216 <= 0x18) {
        unint64_t v218 = (32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 0x10;
      }
      uint64_t v220 = v217 | (255 << v218);
      uint64_t v389 = v220;
      uint64_t v221 = ((_BYTE)v218 + 8) & 0x38;
      if ((unint64_t)(v221 - v216 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v389 = v220 | (255 << v221);
      }
    }
    uint64_t result = 0;
    unint64_t v222 = (_OWORD *)((char *)a1->f32 + a2);
    long long v19 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    unint64_t v223 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *unint64_t v222 = 0u;
    v222[1] = 0u;
    unint64_t v22 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
    *unint64_t v223 = 0u;
    v223[1] = 0u;
    goto LABEL_161;
  }
  int32x2_t v224 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v112, v112, 8uLL));
  int32x2_t v225 = vzip1_s32(*(int32x2_t *)v156.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v156, v156, 8uLL));
  uint16x4_t v226 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x4_t v227 = (int32x4_t)vextq_s8(v155, v155, 8uLL);
  uint16x4_t v228 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v155.i8, *(int16x4_t *)v227.i8);
  v229.i64[0] = v224.u32[0];
  v229.i64[1] = v224.u32[1];
  int64x2_t v230 = v229;
  v229.i64[0] = v225.u32[0];
  v229.i64[1] = v225.u32[1];
  uint64x2_t v231 = (uint64x2_t)vnegq_s64(v229);
  int64x2_t v232 = (int64x2_t)vshlq_u64((uint64x2_t)v109, (uint64x2_t)vnegq_s64(v230));
  *(int32x2_t *)v227.i8 = vmovn_s64((int64x2_t)v109);
  *(int32x2_t *)v232.i8 = vmovn_s64(v232);
  int16x8_t v233 = (int16x8_t)vzip1q_s32(v227, (int32x4_t)v232);
  int64x2_t v234 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v231);
  *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v150);
  *(int32x2_t *)v234.i8 = vmovn_s64(v234);
  int32x4_t v235 = vzip1q_s32((int32x4_t)v109, (int32x4_t)v234);
  int64x2_t v236 = (int64x2_t)vshlq_u64((uint64x2_t)v175, v231);
  *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v175);
  *(int32x2_t *)v236.i8 = vmovn_s64(v236);
  int16x8_t v237 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v236);
  int32x4_t v238 = (int32x4_t)vmovl_u16(v226);
  int16x8_t v239 = (int16x8_t)vmovl_u16(v228);
  uint32x4_t v240 = (uint32x4_t)vnegq_s32((int32x4_t)v239);
  int16x8_t v241 = (int16x8_t)vshlq_u32((uint32x4_t)v233, (uint32x4_t)vnegq_s32(v238));
  *(int16x4_t *)v233.i8 = vmovn_s32((int32x4_t)v233);
  *(int16x4_t *)v241.i8 = vmovn_s32((int32x4_t)v241);
  int8x16_t v242 = (int8x16_t)vzip1q_s16(v233, v241);
  int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v235, v240);
  *(int16x4_t *)v239.i8 = vmovn_s32(v235);
  *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
  int8x16_t v244 = (int8x16_t)vzip1q_s16(v239, v243);
  int16x8_t v245 = (int16x8_t)vshlq_u32((uint32x4_t)v237, v240);
  *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v237);
  *(int16x4_t *)v245.i8 = vmovn_s32((int32x4_t)v245);
  int8x16_t v246 = (int8x16_t)vzip1q_s16(v237, v245);
  uint16x8_t v247 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v401.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v401, v401, 8uLL))));
  int8x16_t v248 = (int8x16_t)vshlq_u16((uint16x8_t)v242, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v110.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  *(int8x8_t *)v242.i8 = vmovn_s16((int16x8_t)v242);
  *(int8x8_t *)v248.i8 = vmovn_s16((int16x8_t)v248);
  int8x16_t v249 = vzip1q_s8(v242, v248);
  int8x16_t v250 = (int8x16_t)vshlq_u16((uint16x8_t)v244, v247);
  int8x16_t v251 = (int8x16_t)vshlq_u16((uint16x8_t)v246, v247);
  *(int8x8_t *)v244.i8 = vmovn_s16((int16x8_t)v244);
  *(int8x8_t *)v250.i8 = vmovn_s16((int16x8_t)v250);
  *(int8x8_t *)v246.i8 = vmovn_s16((int16x8_t)v246);
  *(int8x8_t *)v251.i8 = vmovn_s16((int16x8_t)v251);
  int8x16_t v252 = vzip1q_s8(v244, v250);
  v250.i64[0] = 0x808080808080808;
  v250.i64[1] = 0x808080808080808;
  int8x16_t v253 = vzip1q_s8(v246, v251);
  v251.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v251.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v254 = vsubq_s8(v250, v110);
  int8x16_t v255 = vaddq_s8(v110, v251);
  v251.i64[0] = 0x808080808080808;
  v251.i64[1] = 0x808080808080808;
  int8x16_t v256 = vshlq_s8(v249, v254);
  v254.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v254.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v257 = vsubq_s8(v251, v401);
  int8x16_t v258 = vaddq_s8(v401, v254);
  int8x16_t v259 = vshlq_s8(v252, v257);
  int8x16_t v260 = vshlq_s8(v253, v257);
  int8x16_t v261 = vshlq_s8(v256, v255);
  int8x16_t v262 = vshlq_s8(v259, v258);
  int8x16_t v263 = vshlq_s8(v260, v258);
  int8x16_t v264 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v261.i8, 0);
  int8x16_t v265 = vandq_s8(v375, v264);
  int8x16_t v266 = vsubq_s8(v262, v265);
  int8x16_t v267 = vsubq_s8(v263, v265);
  *(int32x2_t *)v262.i8 = vzip1_s32(*(int32x2_t *)v177.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v177, v177, 8uLL));
  *(int32x2_t *)v263.i8 = vzip1_s32(*(int32x2_t *)v198.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v198, v198, 8uLL));
  v229.i64[0] = v262.u32[0];
  v229.i64[1] = v262.u32[1];
  uint64x2_t v268 = (uint64x2_t)vnegq_s64(v229);
  *(int16x4_t *)v265.i8 = vuzp1_s16(*(int16x4_t *)v176.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v176, v176, 8uLL));
  int64x2_t v269 = (int64x2_t)vshlq_u64((uint64x2_t)v171, v268);
  *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v171);
  *(int32x2_t *)v269.i8 = vmovn_s64(v269);
  int16x8_t v270 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v269);
  v229.i64[0] = v263.u32[0];
  v229.i64[1] = v263.u32[1];
  uint64x2_t v271 = (uint64x2_t)vnegq_s64(v229);
  int64x2_t v272 = (int64x2_t)vshlq_u64((uint64x2_t)v196, v268);
  *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v196);
  *(int32x2_t *)v272.i8 = vmovn_s64(v272);
  int16x8_t v273 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v272);
  int64x2_t v274 = (int64x2_t)vshlq_u64((uint64x2_t)v192, v271);
  *(int32x2_t *)v176.i8 = vmovn_s64((int64x2_t)v192);
  *(int32x2_t *)v274.i8 = vmovn_s64(v274);
  uint32x4_t v275 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v265.i8));
  int16x8_t v276 = (int16x8_t)vzip1q_s32((int32x4_t)v176, (int32x4_t)v274);
  int16x8_t v277 = (int16x8_t)vshlq_u32((uint32x4_t)v270, v275);
  *(int16x4_t *)v270.i8 = vmovn_s32((int32x4_t)v270);
  *(int16x4_t *)v277.i8 = vmovn_s32((int32x4_t)v277);
  int8x16_t v278 = (int8x16_t)vzip1q_s16(v270, v277);
  uint32x4_t v279 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v197.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v197, v197, 8uLL))));
  int16x8_t v280 = (int16x8_t)vshlq_u32((uint32x4_t)v273, v275);
  *(int16x4_t *)v273.i8 = vmovn_s32((int32x4_t)v273);
  *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
  int8x16_t v281 = (int8x16_t)vzip1q_s16(v273, v280);
  int16x8_t v282 = (int16x8_t)vshlq_u32((uint32x4_t)v276, v279);
  *(int16x4_t *)v276.i8 = vmovn_s32((int32x4_t)v276);
  *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
  uint16x8_t v283 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v402.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v402, v402, 8uLL))));
  int8x16_t v284 = (int8x16_t)vzip1q_s16(v276, v282);
  int8x16_t v285 = (int8x16_t)vshlq_u16((uint16x8_t)v278, v283);
  int8x16_t v286 = (int8x16_t)vshlq_u16((uint16x8_t)v281, v283);
  *(int8x8_t *)v278.i8 = vmovn_s16((int16x8_t)v278);
  *(int8x8_t *)v285.i8 = vmovn_s16((int16x8_t)v285);
  *(int8x8_t *)v281.i8 = vmovn_s16((int16x8_t)v281);
  *(int8x8_t *)v286.i8 = vmovn_s16((int16x8_t)v286);
  int8x16_t v287 = vzip1q_s8(v278, v285);
  v285.i64[0] = 0x808080808080808;
  v285.i64[1] = 0x808080808080808;
  int8x16_t v288 = vzip1q_s8(v281, v286);
  v286.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v286.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v289 = vsubq_s8(v285, v402);
  int8x16_t v290 = vaddq_s8(v402, v286);
  int8x16_t v291 = vshlq_s8(v287, v289);
  int8x16_t v292 = vshlq_s8(v288, v289);
  uint16x8_t v293 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v403.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v403, v403, 8uLL))));
  int8x16_t v294 = vshlq_s8(v292, v290);
  int8x16_t v295 = vandq_s8(v377, v264);
  int8x16_t v296 = vsubq_s8(vshlq_s8(v291, v290), v295);
  int8x16_t v297 = vsubq_s8(v294, v295);
  int8x16_t v298 = (int8x16_t)vshlq_u16((uint16x8_t)v284, v293);
  *(int8x8_t *)v284.i8 = vmovn_s16((int16x8_t)v284);
  *(int8x8_t *)v298.i8 = vmovn_s16((int16x8_t)v298);
  v295.i64[0] = 0x808080808080808;
  v295.i64[1] = 0x808080808080808;
  int8x16_t v299 = vzip1q_s8(v284, v298);
  v284.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v284.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v300 = vsubq_s8(v295, v403);
  int8x16_t v301 = vaddq_s8(v403, v284);
  int64x2_t v302 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v271);
  *(int32x2_t *)v213.i8 = vmovn_s64((int64x2_t)v213);
  *(int32x2_t *)v302.i8 = vmovn_s64(v302);
  int16x8_t v303 = (int16x8_t)vzip1q_s32((int32x4_t)v213, (int32x4_t)v302);
  int16x8_t v304 = (int16x8_t)vshlq_u32((uint32x4_t)v303, v279);
  *(int16x4_t *)v303.i8 = vmovn_s32((int32x4_t)v303);
  *(int16x4_t *)v304.i8 = vmovn_s32((int32x4_t)v304);
  int8x16_t v305 = (int8x16_t)vzip1q_s16(v303, v304);
  int8x16_t v306 = (int8x16_t)vshlq_u16((uint16x8_t)v305, v293);
  *(int8x8_t *)v305.i8 = vmovn_s16((int16x8_t)v305);
  *(int8x8_t *)v306.i8 = vmovn_s16((int16x8_t)v306);
  int8x16_t v307 = vshlq_s8(vshlq_s8(vzip1q_s8(v305, v306), v300), v301);
  int8x16_t v308 = vandq_s8(v379, v264);
  int8x16_t v309 = vsubq_s8(vshlq_s8(vshlq_s8(v299, v300), v301), v308);
  int8x16_t v310 = vsubq_s8(v307, v308);
  *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v128.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL));
  *(int32x2_t *)v307.i8 = vzip1_s32(*(int32x2_t *)v142.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v142, v142, 8uLL));
  v229.i64[0] = v299.u32[0];
  v229.i64[1] = v299.u32[1];
  int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v229));
  *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
  *(int32x2_t *)v311.i8 = vmovn_s64(v311);
  int16x8_t v312 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v311);
  v229.i64[0] = v307.u32[0];
  v229.i64[1] = v307.u32[1];
  int64x2_t v313 = (int64x2_t)vshlq_u64((uint64x2_t)v154, (uint64x2_t)vnegq_s64(v229));
  *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v154);
  *(int32x2_t *)v313.i8 = vmovn_s64(v313);
  int16x8_t v314 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v313);
  int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v312, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v127.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL)))));
  *(int16x4_t *)v312.i8 = vmovn_s32((int32x4_t)v312);
  *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
  int8x16_t v316 = (int8x16_t)vzip1q_s16(v312, v315);
  int16x8_t v317 = (int16x8_t)vshlq_u32((uint32x4_t)v314, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v141.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v141, v141, 8uLL)))));
  *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
  *(int16x4_t *)v317.i8 = vmovn_s32((int32x4_t)v317);
  int8x16_t v318 = (int8x16_t)vzip1q_s16(v314, v317);
  int8x16_t v319 = (int8x16_t)vshlq_u16((uint16x8_t)v316, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v126.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  int8x16_t v320 = (int8x16_t)vshlq_u16((uint16x8_t)v318, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v400.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v400, v400, 8uLL)))));
  *(int8x8_t *)v316.i8 = vmovn_s16((int16x8_t)v316);
  *(int8x8_t *)v319.i8 = vmovn_s16((int16x8_t)v319);
  *(int8x8_t *)v318.i8 = vmovn_s16((int16x8_t)v318);
  *(int8x8_t *)v320.i8 = vmovn_s16((int16x8_t)v320);
  int8x16_t v321 = vzip1q_s8(v316, v319);
  v319.i64[0] = 0x808080808080808;
  v319.i64[1] = 0x808080808080808;
  int8x16_t v322 = vzip1q_s8(v318, v320);
  v320.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v320.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v323 = vshlq_s8(vshlq_s8(v321, vsubq_s8(v319, v126)), vaddq_s8(v126, v320));
  int8x16_t v324 = vshlq_s8(vshlq_s8(v322, vsubq_s8(v319, v400)), vaddq_s8(v400, v320));
  int8x16_t v325 = vandq_s8(v381, v264);
  v326.i64[0] = 0x101010101010101;
  v326.i64[1] = 0x101010101010101;
  int8x16_t v327 = vsubq_s8(vaddq_s8(vandq_s8(v261, v381), v323), v325);
  int8x16_t v328 = vsubq_s8(v324, v325);
  if (vaddlvq_s8(vceqq_s8(v384, v326)))
  {
    int8x16_t v329 = vnegq_s8(vandq_s8(v399, v326));
    int8x16_t v330 = v328;
    v330.i32[3] = v327.i32[0];
    int8x16_t v331 = v327;
    v331.i32[0] = v328.i32[3];
    v406.val[0] = vbslq_s8(v329, v331, v327);
    v406.val[1] = vbslq_s8(v329, v330, v328);
    v332.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v332.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, (int8x16_t)xmmword_242EA7570), v329), v406.val[0]);
    v407.val[1] = vaddq_s8(v406.val[1], vandq_s8(vqtbl2q_s8(v406, v332), v329));
    int8x16_t v327 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA7580), v329), v407.val[0]);
    int8x16_t v328 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[1]);
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA7590), v329), v266);
    v407.val[1] = vaddq_s8(v267, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA75A0), v329));
    int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA75B0), v329), v407.val[0]);
    int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[1]);
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v296.i8, (int8x16_t)xmmword_242EA75C0), v329), v296);
    v407.val[1] = vaddq_s8(v297, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v296.i8, (int8x16_t)xmmword_242EA7570), v329));
    int8x16_t v296 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[0]);
    int8x16_t v297 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA75D0), v329), v407.val[1]);
    v406.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v309.i8, (int8x16_t)xmmword_242EA75E0), v329), v309);
    v406.val[1] = vaddq_s8(v310, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v309.i8, (int8x16_t)xmmword_242EA7570), v329));
    int8x16_t v309 = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, v332), v329), v406.val[0]);
    int8x16_t v310 = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, (int8x16_t)xmmword_242EA75F0), v329), v406.val[1]);
  }
  int8x16_t v333 = vaddq_s8(v398, v327);
  int8x16_t v334 = vaddq_s8(v328, v398);
  int8x16_t v335 = vaddq_s8(v266, v398);
  int8x16_t v336 = vaddq_s8(v267, v398);
  int8x16_t v337 = vaddq_s8(v296, v398);
  int8x16_t v338 = vaddq_s8(v297, v398);
  int8x16_t v339 = vaddq_s8(v309, v398);
  int8x16_t v340 = vaddq_s8(v310, v398);
  v341.i64[0] = 0x1010101010101010;
  v341.i64[1] = 0x1010101010101010;
  int8x16_t v342 = vtstq_s8(v399, v341);
  if ((v399.i8[1] & 0x10) != 0)
  {
    v342.i8[1] = v342.i8[2];
    v342.i8[2] = 0;
    int8x16_t v342 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v342.i8, 0);
    int8x16_t v343 = (int8x16_t)xmmword_242EA7610;
  }
  else
  {
    int8x16_t v343 = (int8x16_t)xmmword_242EA7600;
  }
  int64x2_t v344 = (int64x2_t)vaddq_s8(vandq_s8(v342, vqtbl1q_s8(v333, v343)), v333);
  int64x2_t v345 = (int64x2_t)vaddq_s8(vandq_s8(v342, vqtbl1q_s8(v334, v343)), v334);
  int64x2_t v346 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v335, v343), v342), v335);
  int64x2_t v347 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v336, v343), v342), v336);
  int64x2_t v348 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v337, v343), v342), v337);
  int64x2_t v349 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v338, v343), v342), v338);
  int64x2_t v350 = (int64x2_t *)((char *)a1 + a2);
  *(int64x2_t *)a1 = vzip1q_s64(v344, v345);
  a1[1] = (float32x4_t)vzip1q_s64(v348, v349);
  int64x2_t v351 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t v352 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v339, v343), v342), v339);
  *int64x2_t v350 = vzip2q_s64(v344, v345);
  v350[1] = vzip2q_s64(v348, v349);
  int64x2_t v353 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v340, v343), v342), v340);
  *int64x2_t v351 = vzip1q_s64(v346, v347);
  v351[1] = vzip1q_s64(v352, v353);
  unint64_t v354 = (int64x2_t *)((char *)v351 + a2);
  *unint64_t v354 = vzip2q_s64(v346, v347);
  v354[1] = vzip2q_s64(v352, v353);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  uint64_t v13 = result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(a3, a4, result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v16, v13 + 32, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  unint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v21, v13 + v20, a2, v14, v24, a7);
    v11 += result;
    uint64_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *unint64_t v21 = 0;
    uint64_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v25, v13 + v20 + 32, a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *uint64_t v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v26, v13 + 8 * a2, a2, v14, v29, a7);
    v11 += result;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v30, v13 + 8 * a2 + 32, a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v30 = 0;
LABEL_49:
  int16x8_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v31, v13 + 12 * a2, a2, v14, v34, a7);
    v11 += result;
    int16x8_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *int16x8_t v31 = 0;
    int16x8_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      *int16x8_t v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v35, v13 + 12 * a2 + 32, a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressMacroblock(float32x4_t *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1, 64, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 2, 64, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 16, 64, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 18, 64, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 32, 64, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 34, 64, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 48, 64, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 50, 64, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = *(int64x2_t *)(a3 + 16);
  unint64_t v7 = (int64x2_t *)(a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)(a3 + a4);
  int64x2_t v10 = *(int64x2_t *)(a3 + a4 + 16);
  int8x16_t v11 = (int8x16_t)vzip1q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v12 = (int8x16_t)vzip2q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v13 = (int8x16_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  unsigned int v14 = (int64x2_t *)((char *)v7 + a4);
  int8x16_t v17 = (int8x16_t)vzip2q_s64(v8, v10);
  int64x2_t v18 = v14[1];
  int8x16_t v19 = (int8x16_t)vzip2q_s64(v15, *v14);
  int8x16_t v20 = (int8x16_t)vzip1q_s64(v16, v18);
  int8x16_t v21 = (int8x16_t)vzip2q_s64(v16, v18);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v11.i8, 0);
  int8x16_t v23 = vsubq_s8(v11, v22);
  int8x16_t v454 = v23;
  int8x16_t v456 = vsubq_s8(v12, v22);
  int8x16_t v453 = (int8x16_t)vzip1q_s64(v15, *v14);
  int8x16_t v24 = vsubq_s8(v453, v22);
  int8x16_t v458 = v24;
  int8x16_t v459 = vsubq_s8(v19, v22);
  int8x16_t v25 = vsubq_s8(v13, v22);
  int8x16_t v460 = v25;
  int8x16_t v461 = vsubq_s8(v17, v22);
  int8x16_t v26 = vsubq_s8(v20, v22);
  int8x16_t v462 = v26;
  int8x16_t v463 = vsubq_s8(v21, v22);
  int8x16_t v27 = vqtbl1q_s8(vmaxq_s8(v23, v456), (int8x16_t)xmmword_242EA7560);
  int8x16_t v28 = vqtbl1q_s8(vminq_s8(v23, v456), (int8x16_t)xmmword_242EA7560);
  int8x16_t v29 = vpmaxq_s8(v27, v27);
  int8x16_t v30 = vpminq_s8(v28, v28);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  v33.i64[0] = 0x8080808080808080;
  v33.i64[1] = 0x8080808080808080;
  int8x16_t v34 = vmaxq_s8(v31, v33);
  v35.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v35.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v36 = vminq_s8(v32, v35);
  int8x16_t v37 = vzip1q_s8(v31, v32);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v37)), vceqzq_s8(v37));
  int8x16_t v40 = vpmaxq_s8(v39, v39);
  int8x16_t v41 = vqtbl1q_s8(vmaxq_s8(v24, v459), (int8x16_t)xmmword_242EA7560);
  int8x16_t v42 = vqtbl1q_s8(vminq_s8(v24, v459), (int8x16_t)xmmword_242EA7560);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vpmaxq_s8(v43, v43);
  int8x16_t v46 = vpminq_s8(v44, v44);
  int8x16_t v47 = vmaxq_s8(v34, v45);
  int8x16_t v48 = vminq_s8(v36, v46);
  int8x16_t v49 = vzip1q_s8(v45, v46);
  int8x16_t v50 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v49)), vceqzq_s8(v49));
  int8x16_t v51 = vpmaxq_s8(v50, v50);
  int8x16_t v52 = vqtbl1q_s8(vmaxq_s8(v25, v461), (int8x16_t)xmmword_242EA7560);
  int8x16_t v53 = vqtbl1q_s8(vminq_s8(v25, v461), (int8x16_t)xmmword_242EA7560);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vpmaxq_s8(v54, v54);
  int8x16_t v57 = vpminq_s8(v55, v55);
  int8x16_t v58 = vmaxq_s8(v47, v56);
  int8x16_t v59 = vminq_s8(v48, v57);
  int8x16_t v60 = vzip1q_s8(v56, v57);
  int8x16_t v61 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v60)), vceqzq_s8(v60));
  int8x16_t v62 = vpmaxq_s8(v61, v61);
  int8x16_t v63 = vqtbl1q_s8(vmaxq_s8(v26, v463), (int8x16_t)xmmword_242EA7560);
  int8x16_t v64 = vqtbl1q_s8(vminq_s8(v26, v463), (int8x16_t)xmmword_242EA7560);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vpmaxq_s8(v65, v65);
  int8x16_t v68 = vpminq_s8(v66, v66);
  int8x16_t v69 = vmaxq_s8(v58, v67);
  int8x16_t v70 = vminq_s8(v59, v68);
  int8x16_t v71 = vzip1q_s8(v67, v68);
  int8x16_t v72 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v71)), vceqzq_s8(v71));
  v67.i64[0] = -1;
  v67.i64[1] = -1;
  int8x16_t v73 = vpmaxq_s8(v72, v72);
  int8x16_t v74 = vmaxq_s8(vmaxq_s8(v40, v51), vmaxq_s8(v62, v73));
  int8x16_t v75 = vclzq_s8(vsubq_s8(v69, v70));
  v76.i64[0] = 0x707070707070707;
  v76.i64[1] = 0x707070707070707;
  int8x16_t v77 = vsubq_s8(v76, v75);
  int8x16_t v78 = vsubq_s8(v38, v75);
  int8x16_t v79 = vsubq_s8(vshlq_s8(v67, v77), v70);
  int8x16_t v80 = vcgtq_s8(v74, v78);
  int8x16_t v470 = vbslq_s8(v80, v78, v74);
  int8x16_t v471 = v70;
  int8x16_t v472 = v69;
  int8x16_t v473 = vandq_s8(v79, v80);
  v81.i64[0] = 0x303030303030303;
  v81.i64[1] = 0x303030303030303;
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v40), v81), (int8x16_t)0);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v51), v81), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v62), v81), (int8x16_t)0);
  int8x16_t v85 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v73), v81), (int8x16_t)0);
  int8x16_t v466 = vsubq_s8(v470, v82);
  int8x16_t v467 = vsubq_s8(v470, v83);
  int8x16_t v468 = vsubq_s8(v470, v84);
  int8x16_t v469 = vsubq_s8(v470, v85);
  v86.i64[0] = 0x404040404040404;
  v86.i64[1] = 0x404040404040404;
  int8x16_t v87 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v85, v84), vnegq_s8(vaddq_s8(v82, v83)))), vorrq_s8(vandq_s8(v80, v38), vandq_s8(vceqzq_s8(v470), v81)));
  int8x16_t v464 = v22;
  int8x16_t v465 = v87;
  if (vmaxvq_s8(v470))
  {
    int8x16_t v449 = v19;
    int8x16_t v450 = v17;
    int8x16_t v451 = v20;
    int8x16_t v452 = v13;
    int8x16_t v445 = v21;
    BOOL v89 = a5 < 4 || a6 < 2;
    int8x16_t v90 = vsubq_s8(v23, vqtbl1q_s8(v23, (int8x16_t)xmmword_242EA7600));
    int8x16_t v91 = vsubq_s8(v456, vqtbl1q_s8(v456, (int8x16_t)xmmword_242EA7600));
    int8x16_t v92 = vsubq_s8(v25, vqtbl1q_s8(v25, (int8x16_t)xmmword_242EA7600));
    int8x16_t v93 = vsubq_s8(v461, vqtbl1q_s8(v461, (int8x16_t)xmmword_242EA7600));
    int8x16_t v94 = vsubq_s8(v26, vqtbl1q_s8(v26, (int8x16_t)xmmword_242EA7600));
    int8x16_t v95 = vsubq_s8(v463, vqtbl1q_s8(v463, (int8x16_t)xmmword_242EA7600));
    int8x16_t v96 = vqtbl1q_s8(vmaxq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v97 = vqtbl1q_s8(vminq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    int8x16_t v100 = vpmaxq_s8(v98, v98);
    int8x16_t v101 = vpminq_s8(v99, v99);
    int8x16_t v102 = vmaxq_s8(v100, v33);
    int8x16_t v103 = vminq_s8(v101, v35);
    int8x16_t v104 = vzip1q_s8(v100, v101);
    int8x16_t v105 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v104)), vceqzq_s8(v104));
    int8x16_t v106 = vpmaxq_s8(v105, v105);
    int8x16_t v447 = vsubq_s8(v459, vqtbl1q_s8(v459, (int8x16_t)xmmword_242EA7600));
    int8x16_t v448 = vsubq_s8(v24, vqtbl1q_s8(v24, (int8x16_t)xmmword_242EA7600));
    int8x16_t v107 = vqtbl1q_s8(vmaxq_s8(v448, v447), (int8x16_t)xmmword_242EA7560);
    int8x16_t v108 = vqtbl1q_s8(vminq_s8(v448, v447), (int8x16_t)xmmword_242EA7560);
    int8x16_t v109 = vpmaxq_s8(v107, v107);
    int8x16_t v110 = vpminq_s8(v108, v108);
    int8x16_t v111 = vpmaxq_s8(v109, v109);
    int8x16_t v112 = vpminq_s8(v110, v110);
    int8x16_t v113 = vmaxq_s8(v102, v111);
    int8x16_t v114 = vminq_s8(v103, v112);
    int8x16_t v115 = vzip1q_s8(v111, v112);
    int8x16_t v116 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v115)), vceqzq_s8(v115));
    int8x16_t v117 = vpmaxq_s8(v116, v116);
    int8x16_t v118 = vqtbl1q_s8(vmaxq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v119 = vqtbl1q_s8(vminq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vmaxq_s8(v113, v122);
    int8x16_t v125 = vminq_s8(v114, v123);
    int8x16_t v126 = vzip1q_s8(v122, v123);
    int8x16_t v127 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v126)), vceqzq_s8(v126));
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v129 = vqtbl1q_s8(vmaxq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v130 = vqtbl1q_s8(vminq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v131 = vpmaxq_s8(v129, v129);
    int8x16_t v132 = vpminq_s8(v130, v130);
    int8x16_t v133 = vpmaxq_s8(v131, v131);
    int8x16_t v134 = vpminq_s8(v132, v132);
    int8x16_t v135 = vmaxq_s8(v124, v133);
    int8x16_t v136 = vminq_s8(v125, v134);
    int8x16_t v137 = vzip1q_s8(v133, v134);
    int8x16_t v138 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v137)), vceqzq_s8(v137));
    int8x16_t v139 = vpmaxq_s8(v138, v138);
    int8x16_t v140 = vmaxq_s8(vmaxq_s8(v106, v117), vmaxq_s8(v128, v139));
    int8x16_t v446 = v135;
    int8x16_t v141 = vclzq_s8(vsubq_s8(v135, v136));
    int8x16_t v142 = vsubq_s8(v38, v141);
    int8x16_t v143 = vcgtq_s8(v140, v142);
    int8x16_t v144 = vbslq_s8(v143, v142, v140);
    v140.i64[0] = 0x1010101010101010;
    v140.i64[1] = 0x1010101010101010;
    v142.i64[0] = 0x1818181818181818;
    v142.i64[1] = 0x1818181818181818;
    int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v144), v81), vbslq_s8(v143, v142, v140));
    int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v106), v81), (int8x16_t)0);
    int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v117), v81), (int8x16_t)0);
    int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v128), v81), (int8x16_t)0);
    int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v139), v81), (int8x16_t)0);
    int8x16_t v150 = vsubq_s8(v144, v146);
    int8x16_t v151 = vsubq_s8(v144, v147);
    int8x16_t v152 = vsubq_s8(v144, v148);
    int8x16_t v153 = vsubq_s8(v144, v149);
    int8x16_t v154 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8(v146, v147)))), v145);
    uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
    v145.i64[0] = 0x8000800080008;
    v145.i64[1] = 0x8000800080008;
    v156.i64[0] = 0x2000200020002;
    v156.i64[1] = 0x2000200020002;
    int16x8_t v157 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v144.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v145)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v156), v145)), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL));
    uint16x8_t v158 = vmovl_u8(*(uint8x8_t *)v87.i8);
    int8x16_t v159 = v470;
    int16x8_t v160 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v470.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8))));
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v156), v145);
    int8x16_t v162 = v466;
    int8x16_t v163 = v467;
    int8x16_t v165 = v468;
    int8x16_t v164 = v469;
    int8x16_t v166 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v160, (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v87.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), v161), *(int8x8_t *)v466.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v468.i8, *(int8x8_t *)v467.i8), *(int8x8_t *)v469.i8), 3uLL)), v157)), 0);
    if (vaddlvq_s8(v166))
    {
      v167.i64[0] = 0x707070707070707;
      v167.i64[1] = 0x707070707070707;
      int8x16_t v168 = vsubq_s8(v167, v141);
      v167.i64[0] = -1;
      v167.i64[1] = -1;
      int8x16_t v454 = vbslq_s8(v166, v90, v454);
      int8x16_t v456 = vbslq_s8(v166, v91, v456);
      int8x16_t v458 = vbslq_s8(v166, v448, v458);
      int8x16_t v459 = vbslq_s8(v166, v447, v459);
      int8x16_t v460 = vbslq_s8(v166, v92, v460);
      int8x16_t v461 = vbslq_s8(v166, v93, v461);
      int8x16_t v462 = vbslq_s8(v166, v94, v462);
      int8x16_t v463 = vbslq_s8(v166, v95, v463);
      int8x16_t v162 = vbslq_s8(v166, v150, v466);
      int8x16_t v163 = vbslq_s8(v166, v151, v467);
      int8x16_t v466 = v162;
      int8x16_t v467 = v163;
      int8x16_t v165 = vbslq_s8(v166, v152, v468);
      int8x16_t v164 = vbslq_s8(v166, v153, v469);
      int8x16_t v468 = v165;
      int8x16_t v469 = v164;
      int8x16_t v472 = vbslq_s8(v166, v446, v472);
      int8x16_t v473 = vbslq_s8(v166, vandq_s8(vsubq_s8(vshlq_s8(v167, v168), v136), v143), v473);
      int8x16_t v159 = vbslq_s8(v166, v144, v470);
      int8x16_t v470 = v159;
      int8x16_t v471 = vbslq_s8(v166, v136, v471);
      int8x16_t v87 = vbslq_s8(v166, v154, v87);
      int8x16_t v464 = vbslq_s8(v166, vsubq_s8(v22, vqtbl1q_s8(v22, (int8x16_t)xmmword_242EA7600)), v464);
      int8x16_t v465 = v87;
    }
    int8x16_t v169 = v452;
    int8x16_t v170 = v451;
    if (!v89)
    {
      int8x16_t v181 = vsubq_s8(v11, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v171 = vsubq_s8(v12, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7620));
      v474.val[0] = v453;
      v474.val[1] = v449;
      v474.val[1].i32[3] = v12.i32[3];
      int8x16_t v172 = vqtbl2q_s8(v474, (int8x16_t)xmmword_242EA7630);
      int8x16_t v173 = vsubq_s8(v453, vqtbl2q_s8(v474, (int8x16_t)xmmword_242EA7590));
      int8x16_t v174 = vsubq_s8(v449, v172);
      int8x16_t v175 = v450;
      v175.i32[3] = v12.i32[3];
      int8x16_t v176 = vsubq_s8(v452, vqtbl2q_s8(*(int8x16x2_t *)v169.i8, (int8x16_t)xmmword_242EA7640));
      int8x16_t v177 = vsubq_s8(v450, vqtbl2q_s8(*(int8x16x2_t *)v169.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v178 = v445;
      v178.i32[3] = v12.i32[3];
      int8x16_t v179 = vsubq_s8(v451, vqtbl2q_s8(*(int8x16x2_t *)v170.i8, (int8x16_t)xmmword_242EA7650));
      int8x16_t v180 = v171;
      v180.i32[3] = v181.i32[0];
      v181.i32[0] = v171.i32[3];
      int8x16_t v182 = vsubq_s8(v445, vqtbl2q_s8(*(int8x16x2_t *)v170.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v183 = vqtbl1q_s8(vmaxq_s8(v181, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v184 = vqtbl1q_s8(vminq_s8(v181, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v185 = vpmaxq_s8(v183, v183);
      int8x16_t v186 = vpminq_s8(v184, v184);
      int8x16_t v187 = vpmaxq_s8(v185, v185);
      int8x16_t v188 = vpminq_s8(v186, v186);
      v474.val[1].i64[0] = 0x8080808080808080;
      v474.val[1].i64[1] = 0x8080808080808080;
      v189.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v189.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v190 = vminq_s8(v188, v189);
      int8x16_t v191 = vzip1q_s8(v187, v188);
      v192.i64[0] = 0x808080808080808;
      v192.i64[1] = 0x808080808080808;
      int8x16_t v193 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v191)), vceqzq_s8(v191));
      int8x16_t v194 = vpmaxq_s8(v193, v193);
      int8x16_t v195 = vqtbl1q_s8(vmaxq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v196 = vqtbl1q_s8(vminq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v197 = vpmaxq_s8(v195, v195);
      int8x16_t v198 = vpminq_s8(v196, v196);
      int8x16_t v199 = vpmaxq_s8(v197, v197);
      int8x16_t v200 = vpminq_s8(v198, v198);
      v474.val[1] = vmaxq_s8(vmaxq_s8(v187, v474.val[1]), v199);
      int8x16_t v201 = vminq_s8(v190, v200);
      int8x16_t v202 = vzip1q_s8(v199, v200);
      int8x16_t v203 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v202)), vceqzq_s8(v202));
      int8x16_t v204 = vpmaxq_s8(v203, v203);
      int8x16_t v205 = vqtbl1q_s8(vmaxq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v206 = vqtbl1q_s8(vminq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v207 = vpmaxq_s8(v205, v205);
      int8x16_t v208 = vpminq_s8(v206, v206);
      int8x16_t v209 = vpmaxq_s8(v207, v207);
      int8x16_t v210 = vpminq_s8(v208, v208);
      v474.val[1] = vmaxq_s8(v474.val[1], v209);
      int8x16_t v211 = vminq_s8(v201, v210);
      int8x16_t v212 = vzip1q_s8(v209, v210);
      int8x16_t v213 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v212)), vceqzq_s8(v212));
      int8x16_t v214 = vpmaxq_s8(v213, v213);
      int8x16_t v215 = vqtbl1q_s8(vmaxq_s8(v179, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v216 = vqtbl1q_s8(vminq_s8(v179, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v217 = vpmaxq_s8(v215, v215);
      int8x16_t v218 = vpminq_s8(v216, v216);
      int8x16_t v219 = vpmaxq_s8(v217, v217);
      int8x16_t v220 = vpminq_s8(v218, v218);
      int8x16_t v221 = vmaxq_s8(v474.val[1], v219);
      int8x16_t v222 = vminq_s8(v211, v220);
      v474.val[1] = vzip1q_s8(v219, v220);
      v474.val[1] = vbicq_s8(vsubq_s8(v192, vclsq_s8(v474.val[1])), vceqzq_s8(v474.val[1]));
      int8x16_t v223 = vpmaxq_s8(v474.val[1], v474.val[1]);
      v474.val[1] = vmaxq_s8(vmaxq_s8(v194, v204), vmaxq_s8(v214, v223));
      int8x16_t v224 = vclzq_s8(vsubq_s8(v221, v222));
      int8x16_t v225 = vsubq_s8(v192, v224);
      int8x16_t v226 = vcgtq_s8(v474.val[1], v225);
      int8x16_t v227 = vbslq_s8(v226, v225, v474.val[1]);
      v225.i64[0] = 0x909090909090909;
      v225.i64[1] = 0x909090909090909;
      v220.i64[0] = 0x202020202020202;
      v220.i64[1] = 0x202020202020202;
      int8x16_t v228 = vorrq_s8(vandq_s8(vceqzq_s8(v227), v220), vsubq_s8(vandq_s8(v226, v225), vmvnq_s8(v226)));
      v219.i64[0] = 0x303030303030303;
      v219.i64[1] = 0x303030303030303;
      int8x16_t v229 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v194), v219), (int8x16_t)0);
      int8x16_t v230 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v204), v219), (int8x16_t)0);
      int8x16_t v231 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v214), v219), (int8x16_t)0);
      int8x16_t v232 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v223), v219), (int8x16_t)0);
      int8x16_t v233 = vsubq_s8(v227, v229);
      int8x16_t v234 = vsubq_s8(v227, v230);
      int8x16_t v235 = vsubq_s8(v227, v231);
      int8x16_t v236 = vsubq_s8(v227, v232);
      int8x16_t v87 = vceqq_s8(vaddq_s8(v232, v231), vnegq_s8(vaddq_s8(v229, v230)));
      v229.i64[0] = 0x404040404040404;
      v229.i64[1] = 0x404040404040404;
      int8x16_t v237 = vorrq_s8(vbicq_s8(v229, v87), v228);
      v230.i64[0] = 0x3000300030003;
      v230.i64[1] = 0x3000300030003;
      v87.i64[0] = v465.i64[0];
      int8x16_t v162 = v466;
      int8x16_t v238 = (int8x16_t)vmovl_s8(*(int8x8_t *)v465.i8);
      v239.i64[0] = 0x8000800080008;
      v239.i64[1] = 0x8000800080008;
      int8x16_t v164 = v469;
      int8x16_t v159 = v470;
      int16x8_t v240 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v470.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v238, v239)));
      int16x8_t v241 = (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v465.i8, 1uLL), v239);
      int16x8_t v242 = (int16x8_t)vandq_s8(v238, v230);
      v238.i64[0] = 0x2000200020002;
      v238.i64[1] = 0x2000200020002;
      int16x8_t v243 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v242, (int16x8_t)v238), v239);
      int8x16_t v163 = v467;
      int8x16_t v165 = v468;
      int8x16_t v244 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v240, v241), v243), *(int8x8_t *)v466.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v468.i8, *(int8x8_t *)v467.i8), *(int8x8_t *)v469.i8), 3uLL)), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v227.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v237.i8))), (uint8x8_t)vand_s8(
                                                                                            vadd_s8(*(int8x8_t *)v237.i8, *(int8x8_t *)v237.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v233.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v235.i8, *(int8x8_t *)v234.i8), *(int8x8_t *)v236.i8), 3uLL)))), 0);
      if (vaddlvq_s8(v244))
      {
        v245.i64[0] = 0x707070707070707;
        v245.i64[1] = 0x707070707070707;
        int8x16_t v246 = vsubq_s8(v245, v224);
        v245.i64[0] = -1;
        v245.i64[1] = -1;
        int8x16_t v454 = vbslq_s8(v244, v181, v454);
        int8x16_t v456 = vbslq_s8(v244, v180, v456);
        int8x16_t v458 = vbslq_s8(v244, v173, v458);
        int8x16_t v459 = vbslq_s8(v244, v174, v459);
        int8x16_t v460 = vbslq_s8(v244, v176, v460);
        int8x16_t v461 = vbslq_s8(v244, v177, v461);
        int8x16_t v462 = vbslq_s8(v244, v179, v462);
        int8x16_t v463 = vbslq_s8(v244, v182, v463);
        int8x16_t v162 = vbslq_s8(v244, v233, v466);
        int8x16_t v163 = vbslq_s8(v244, v234, v467);
        int8x16_t v466 = v162;
        int8x16_t v467 = v163;
        int8x16_t v165 = vbslq_s8(v244, v235, v468);
        int8x16_t v164 = vbslq_s8(v244, v236, v469);
        int8x16_t v468 = v165;
        int8x16_t v469 = v164;
        int8x16_t v472 = vbslq_s8(v244, v221, v472);
        int8x16_t v473 = vbslq_s8(v244, vandq_s8(vsubq_s8(vshlq_s8(v245, v246), v222), v226), v473);
        int8x16_t v159 = vbslq_s8(v244, v227, v470);
        int8x16_t v470 = v159;
        int8x16_t v471 = vbslq_s8(v244, v222, v471);
        int8x16_t v87 = vbslq_s8(v244, v237, v465);
        int8x16_t v464 = vbslq_s8(v244, vextq_s8(v12, v12, 0xCuLL), v464);
        int8x16_t v465 = v87;
      }
    }
    int8x16_t v247 = vandq_s8(v473, vceqq_s8(v159, v162));
    int8x16_t v455 = vaddq_s8(v247, v454);
    int8x16_t v457 = vaddq_s8(v456, v247);
    int8x16_t v248 = vandq_s8(v473, vceqq_s8(v159, v163));
    int8x16_t v458 = vaddq_s8(v458, v248);
    int8x16_t v459 = vaddq_s8(v459, v248);
    int8x16_t v249 = vandq_s8(v473, vceqq_s8(v159, v165));
    int8x16_t v460 = vaddq_s8(v460, v249);
    int8x16_t v461 = vaddq_s8(v461, v249);
    int8x16_t v250 = vandq_s8(v473, vceqq_s8(v159, v164));
    int8x16_t v462 = vaddq_s8(v462, v250);
    int8x16_t v463 = vaddq_s8(v463, v250);
    int8x16_t v251 = (int8x16_t)vmovl_s8(*(int8x8_t *)v87.i8);
    v252.i64[0] = 0x8000800080008;
    v252.i64[1] = 0x8000800080008;
    int16x8_t v253 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v159.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v251, v252)));
    v254.i64[0] = 0x3000300030003;
    v254.i64[1] = 0x3000300030003;
    int16x8_t v255 = (int16x8_t)vandq_s8(v251, v254);
    v254.i64[0] = 0x2000200020002;
    v254.i64[1] = 0x2000200020002;
    int16x8_t v256 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v253, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v87.i8, 1uLL), v252)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v255, (int16x8_t)v254), v252)), *(int8x8_t *)v162.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v165.i8, *(int8x8_t *)v163.i8), *(int8x8_t *)v164.i8), 3uLL));
    int16x8_t v257 = vpaddq_s16(v256, v256);
    if ((unint64_t)(vpaddq_s16(v257, v257).i16[0] - 577) < 0xFFFFFFFFFFFFFD78)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 80;
    }
    else
    {
      int8x16_t v258 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v259 = 8 * (a1 & 7);
      if (v259) {
        uint64_t v260 = *v258 & ~(-1 << v259);
      }
      else {
        uint64_t v260 = 0;
      }
      *a2 = 0;
      __int32 v262 = v464.i32[0];
      int16x4_t v263 = (int16x4_t)vzip1_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v464.i8);
      int8x8_t v264 = (int8x8_t)vadd_s16(v263, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v265 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v263 & 0xFF00FF00FF00FFLL)));
      v266.i64[0] = v265.u32[0];
      v266.i64[1] = v265.u32[1];
      int8x16_t v267 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v266, 0x38uLL), 0x38uLL);
      v266.i64[0] = v265.u32[2];
      v266.i64[1] = v265.u32[3];
      int8x16_t v268 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v266, 0x38uLL), 0x38uLL);
      uint32x4_t v269 = vmovl_u16((uint16x4_t)vand_s8(v264, (int8x8_t)0x7000700070007));
      v266.i64[0] = v269.u32[2];
      v266.i64[1] = v269.u32[3];
      v270.i64[0] = 255;
      v270.i64[1] = 255;
      uint64x2_t v271 = (uint64x2_t)vandq_s8((int8x16_t)v266, v270);
      v266.i64[0] = v269.u32[0];
      v266.i64[1] = v269.u32[1];
      uint64_t v272 = v87.i8[0] & 0x1F;
      int8x16_t v273 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v266, v270), (uint64x2_t)xmmword_242EA7660), v267), vbicq_s8((int8x16_t)vshlq_u64(v271, (uint64x2_t)xmmword_242EA7670), v268));
      *(int8x8_t *)v273.i8 = vorr_s8(*(int8x8_t *)v273.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v273, v273, 8uLL));
      v266.i64[0] = v87.u8[1];
      v266.i64[1] = v87.u8[2];
      v273.i64[1] = (unint64_t)(v87.i8[3] & 0x1F) << 15;
      int8x16_t v274 = vorrq_s8(v273, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v266, v270), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v275 = vorrq_s8(v274, (int8x16_t)vdupq_laneq_s64((int64x2_t)v274, 1)).u64[0] | v272;
      unint64_t v276 = (v275 << v259) | v260;
      if (v259 >= 0x20)
      {
        *int8x16_t v258 = v276;
        unint64_t v276 = v275 >> (-8 * (a1 & 7u));
      }
      uint64_t v277 = (unsigned __int16)v262;
      v278.i64[0] = BYTE2(v262);
      v278.i64[1] = HIBYTE(v262);
      uint64x2_t v279 = vshlq_u64((uint64x2_t)vandq_s8(v278, v270), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v280 = v277 | v279.i64[0] | v279.i64[1];
      unint64_t v281 = (v259 + 32) & 0x38;
      unint64_t v282 = v276 | (v280 << v281);
      if (v281 >= 0x20)
      {
        *(void *)((char *)v258 + (((v259 + 32) >> 3) & 8)) = v282;
        unint64_t v282 = v280 >> -(char)v281;
      }
      int8x16_t v283 = vsubq_s8(v470, v466);
      int8x16_t v284 = vsubq_s8(v470, v467);
      int8x16_t v285 = vsubq_s8(v470, v468);
      int8x16_t v286 = vsubq_s8(v470, v469);
      int16x8_t v287 = (int16x8_t)vtrn1q_s8(v283, v284);
      int16x8_t v288 = (int16x8_t)vtrn2q_s8(v283, v284);
      int8x16_t v289 = vtrn1q_s8(v285, v286);
      int16x8_t v290 = (int16x8_t)vtrn2q_s8(v285, v286);
      int8x16_t v291 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v287, (int16x8_t)v289), (int32x4_t)vzip1q_s16(v288, v290)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v287, (int16x8_t)v289), (int32x4_t)vtrn2q_s16(v288, v290)));
      v289.i64[0] = 0x202020202020202;
      v289.i64[1] = 0x202020202020202;
      int8x16_t v292 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v465.i8), (int16x4_t)0x4000400040004)), v289);
      v289.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v289.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      uint8x16_t v293 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v285, (uint8x16_t)vorrq_s8(v292, v289)), v291);
      int16x8_t v294 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v292.i8);
      int16x8_t v295 = (int16x8_t)vmovl_high_u8((uint8x16_t)v292);
      uint16x8_t v296 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v293.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v294)), (int16x8_t)vshlq_u16(vmovl_high_u8(v293), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v295)));
      uint16x8_t v297 = (uint16x8_t)vpaddq_s16(v294, v295);
      int32x4_t v298 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v297.i8);
      int32x4_t v299 = (int32x4_t)vmovl_high_u16(v297);
      int32x4_t v300 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v296.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v298)), (int32x4_t)vshlq_u32(vmovl_high_u16(v296), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v299)));
      int32x4_t v301 = vpaddq_s32(v298, v299);
      v302.i64[0] = v300.u32[0];
      v302.i64[1] = v300.u32[1];
      uint64x2_t v303 = (uint64x2_t)v302;
      v302.i64[0] = v300.u32[2];
      v302.i64[1] = v300.u32[3];
      uint64x2_t v304 = (uint64x2_t)v302;
      v302.i64[0] = v301.u32[0];
      v302.i64[1] = v301.u32[1];
      int64x2_t v305 = v302;
      v302.i64[0] = v301.u32[2];
      v302.i64[1] = v301.u32[3];
      int64x2_t v306 = vpaddq_s64((int64x2_t)vshlq_u64(v303, (uint64x2_t)vzip1q_s64((int64x2_t)0, v305)), (int64x2_t)vshlq_u64(v304, (uint64x2_t)vzip1q_s64((int64x2_t)0, v302)));
      int64x2_t v307 = vpaddq_s64(v305, v302);
      unint64_t v308 = (v306.i64[0] << v259) | v282;
      if (v307.i64[0] + v259 >= 0x40)
      {
        v258[1] = v308;
        unint64_t v308 = (unint64_t)v306.i64[0] >> (-8 * (a1 & 7u));
        if (!v259) {
          unint64_t v308 = 0;
        }
      }
      unint64_t v309 = v307.i64[0] + (v259 | 0x40);
      unint64_t v310 = v308 | (v306.i64[1] << v309);
      if ((v309 & 0x3F) + v307.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v310;
        unint64_t v310 = (unint64_t)v306.i64[1] >> -(v309 & 0x3F);
        if ((v309 & 0x3F) == 0) {
          unint64_t v310 = 0;
        }
      }
      unint64_t v311 = v309 + v307.i64[1];
      v312.i64[0] = 0x808080808080808;
      v312.i64[1] = 0x808080808080808;
      v313.i64[0] = -1;
      v313.i64[1] = -1;
      int8x16_t v314 = vandq_s8(vextq_s8(vtstq_s8(v465, v312), (int8x16_t)0, 0xCuLL), v470);
      v315.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v315.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v316 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v313, (uint8x16_t)vaddq_s8(v314, v315)), v473);
      int16x8_t v317 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v314.i8);
      uint16x8_t v318 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v316.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v317)), (int16x8_t)vmovl_high_u8(v316));
      uint16x8_t v319 = (uint16x8_t)vpaddq_s16(v317, (int16x8_t)vmovl_high_u8((uint8x16_t)v314));
      int32x4_t v320 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v319.i8);
      int32x4_t v321 = (int32x4_t)vmovl_high_u16(v319);
      int32x4_t v322 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v318.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v320)), (int32x4_t)vshlq_u32(vmovl_high_u16(v318), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v321)));
      int32x4_t v323 = vpaddq_s32(v320, v321);
      v324.i64[0] = v322.u32[0];
      v324.i64[1] = v322.u32[1];
      uint64x2_t v325 = (uint64x2_t)v324;
      v324.i64[0] = v322.u32[2];
      v324.i64[1] = v322.u32[3];
      uint64x2_t v326 = (uint64x2_t)v324;
      v324.i64[0] = v323.u32[0];
      v324.i64[1] = v323.u32[1];
      int64x2_t v327 = v324;
      v324.i64[0] = v323.u32[2];
      v324.i64[1] = v323.u32[3];
      int64x2_t v328 = vpaddq_s64((int64x2_t)vshlq_u64(v325, (uint64x2_t)vzip1q_s64((int64x2_t)0, v327)), (int64x2_t)vshlq_u64(v326, (uint64x2_t)vzip1q_s64((int64x2_t)0, v324)));
      int64x2_t v329 = vpaddq_s64(v327, v324);
      unint64_t v330 = (v328.i64[0] << v311) | v310;
      if (v329.i64[0] + (v311 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v311 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330;
        unint64_t v330 = (unint64_t)v328.i64[0] >> -(v311 & 0x3F);
        if ((v311 & 0x3F) == 0) {
          unint64_t v330 = 0;
        }
      }
      unint64_t v331 = v329.i64[0] + v311;
      unint64_t v332 = v330 | (v328.i64[1] << v331);
      if ((v331 & 0x3F) + v329.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v331 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v332;
        unint64_t v332 = (unint64_t)v328.i64[1] >> -(v331 & 0x3F);
        if ((v331 & 0x3F) == 0) {
          unint64_t v332 = 0;
        }
      }
      unint64_t v333 = v331 + v329.i64[1];
      int8x16_t v334 = vextq_s8((int8x16_t)0, v466, 0xCuLL);
      v335.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v335.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v336.i64[0] = -1;
      v336.i64[1] = -1;
      uint8x16_t v337 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v336, (uint8x16_t)vaddq_s8(v334, v335)), v455);
      int16x8_t v338 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v334.i8);
      int16x8_t v339 = (int16x8_t)vmovl_high_u8((uint8x16_t)v334);
      uint16x8_t v340 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v337.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v338)), (int16x8_t)vshlq_u16(vmovl_high_u8(v337), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v339)));
      uint16x8_t v341 = (uint16x8_t)vpaddq_s16(v338, v339);
      int32x4_t v342 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v341.i8);
      int32x4_t v343 = (int32x4_t)vmovl_high_u16(v341);
      int32x4_t v344 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v340.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)), (int32x4_t)vshlq_u32(vmovl_high_u16(v340), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v343)));
      int32x4_t v345 = vpaddq_s32(v342, v343);
      v346.i64[0] = v344.u32[0];
      v346.i64[1] = v344.u32[1];
      uint64x2_t v347 = (uint64x2_t)v346;
      v346.i64[0] = v344.u32[2];
      v346.i64[1] = v344.u32[3];
      uint64x2_t v348 = (uint64x2_t)v346;
      v346.i64[0] = v345.u32[0];
      v346.i64[1] = v345.u32[1];
      int64x2_t v349 = v346;
      v346.i64[0] = v345.u32[2];
      v346.i64[1] = v345.u32[3];
      int64x2_t v350 = vpaddq_s64((int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)), (int64x2_t)vshlq_u64(v348, (uint64x2_t)vzip1q_s64((int64x2_t)0, v346)));
      int64x2_t v351 = vpaddq_s64(v349, v346);
      unint64_t v352 = (v350.i64[0] << v333) | v332;
      if (v351.i64[0] + (v333 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v333 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        unint64_t v352 = (unint64_t)v350.i64[0] >> -(v333 & 0x3F);
        if ((v333 & 0x3F) == 0) {
          unint64_t v352 = 0;
        }
      }
      unint64_t v353 = v351.i64[0] + v333;
      unint64_t v354 = v352 | (v350.i64[1] << v353);
      if ((v353 & 0x3F) + v351.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v354;
        unint64_t v354 = (unint64_t)v350.i64[1] >> -(v353 & 0x3F);
        if ((v353 & 0x3F) == 0) {
          unint64_t v354 = 0;
        }
      }
      unint64_t v355 = v353 + v351.i64[1];
      v356.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v356.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v357.i64[0] = -1;
      v357.i64[1] = -1;
      uint8x16_t v358 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v357, (uint8x16_t)vaddq_s8(v466, v356)), v457);
      int16x8_t v359 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v466.i8);
      int16x8_t v360 = (int16x8_t)vmovl_high_u8((uint8x16_t)v466);
      uint16x8_t v361 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v358.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v359)), (int16x8_t)vshlq_u16(vmovl_high_u8(v358), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v360)));
      uint16x8_t v362 = (uint16x8_t)vpaddq_s16(v359, v360);
      int32x4_t v363 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v362.i8);
      int32x4_t v364 = (int32x4_t)vmovl_high_u16(v362);
      int32x4_t v365 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v361.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v363)), (int32x4_t)vshlq_u32(vmovl_high_u16(v361), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)));
      int32x4_t v366 = vpaddq_s32(v363, v364);
      v367.i64[0] = v365.u32[0];
      v367.i64[1] = v365.u32[1];
      uint64x2_t v368 = (uint64x2_t)v367;
      v367.i64[0] = v365.u32[2];
      v367.i64[1] = v365.u32[3];
      uint64x2_t v369 = (uint64x2_t)v367;
      v367.i64[0] = v366.u32[0];
      v367.i64[1] = v366.u32[1];
      int64x2_t v370 = v367;
      v367.i64[0] = v366.u32[2];
      v367.i64[1] = v366.u32[3];
      int64x2_t v371 = vpaddq_s64((int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)), (int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v367)));
      int64x2_t v372 = vpaddq_s64(v370, v367);
      unint64_t v373 = (v371.i64[0] << v355) | v354;
      if (v372.i64[0] + (v355 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v355 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v373;
        if ((v355 & 0x3F) != 0) {
          unint64_t v373 = (unint64_t)v371.i64[0] >> -(v355 & 0x3F);
        }
        else {
          unint64_t v373 = 0;
        }
      }
      uint64_t v374 = v372.i64[1];
      unint64_t v375 = v372.i64[0] + v355;
      uint64_t v376 = (v372.i64[0] + v355) & 0x3F;
      unint64_t v377 = v373 | (v371.i64[1] << v375);
      if ((unint64_t)(v376 + v372.i64[1]) >= 0x40)
      {
        *(void *)((char *)v258 + ((v375 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
        unint64_t v377 = (unint64_t)v371.i64[1] >> -(char)v376;
        if (!v376) {
          unint64_t v377 = 0;
        }
      }
      uint64_t v378 = 0;
      v379.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v379.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v380.i64[0] = -1;
      v380.i64[1] = -1;
      unint64_t v381 = v375 + v374;
      char v382 = 1;
      do
      {
        char v383 = v382;
        uint8x16_t v384 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v380, (uint8x16_t)vaddq_s8(v467, v379)), *(&v458 + v378));
        int16x8_t v385 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v467.i8);
        int16x8_t v386 = (int16x8_t)vmovl_high_u8((uint8x16_t)v467);
        uint16x8_t v387 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v384.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v385)), (int16x8_t)vshlq_u16(vmovl_high_u8(v384), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v386)));
        uint16x8_t v388 = (uint16x8_t)vpaddq_s16(v385, v386);
        int32x4_t v389 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v388.i8);
        int32x4_t v390 = (int32x4_t)vmovl_high_u16(v388);
        int32x4_t v391 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v387.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v389)), (int32x4_t)vshlq_u32(vmovl_high_u16(v387), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)));
        int32x4_t v392 = vpaddq_s32(v389, v390);
        v393.i64[0] = v391.u32[0];
        v393.i64[1] = v391.u32[1];
        uint64x2_t v394 = (uint64x2_t)v393;
        v393.i64[0] = v391.u32[2];
        v393.i64[1] = v391.u32[3];
        uint64x2_t v395 = (uint64x2_t)v393;
        v393.i64[0] = v392.u32[0];
        v393.i64[1] = v392.u32[1];
        int64x2_t v396 = v393;
        v393.i64[0] = v392.u32[2];
        v393.i64[1] = v392.u32[3];
        int64x2_t v397 = vpaddq_s64((int64x2_t)vshlq_u64(v394, (uint64x2_t)vzip1q_s64((int64x2_t)0, v396)), (int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v393)));
        int64x2_t v398 = vpaddq_s64(v396, v393);
        unint64_t v399 = (v397.i64[0] << v381) | v377;
        if (v398.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v399;
          unint64_t v399 = (unint64_t)v397.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v399 = 0;
          }
        }
        unint64_t v400 = v398.i64[0] + v381;
        unint64_t v377 = v399 | (v397.i64[1] << v400);
        if ((v400 & 0x3F) + v398.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v400 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v397.i64[1] >> -(v400 & 0x3F);
          if ((v400 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v382 = 0;
        unint64_t v381 = v400 + v398.i64[1];
        uint64_t v378 = 1;
      }
      while ((v383 & 1) != 0);
      uint64_t v401 = 0;
      char v402 = 1;
      v403.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v403.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        char v405 = v402;
        uint8x16_t v406 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v404, (uint8x16_t)vaddq_s8(v468, v403)), *(&v460 + v401));
        int16x8_t v407 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v468.i8);
        int16x8_t v408 = (int16x8_t)vmovl_high_u8((uint8x16_t)v468);
        uint16x8_t v409 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v406.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v407)), (int16x8_t)vshlq_u16(vmovl_high_u8(v406), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v408)));
        uint16x8_t v410 = (uint16x8_t)vpaddq_s16(v407, v408);
        int32x4_t v411 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v410.i8);
        int32x4_t v412 = (int32x4_t)vmovl_high_u16(v410);
        int32x4_t v413 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v409.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v411)), (int32x4_t)vshlq_u32(vmovl_high_u16(v409), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v412)));
        int32x4_t v414 = vpaddq_s32(v411, v412);
        v415.i64[0] = v413.u32[0];
        v415.i64[1] = v413.u32[1];
        uint64x2_t v416 = (uint64x2_t)v415;
        v415.i64[0] = v413.u32[2];
        v415.i64[1] = v413.u32[3];
        uint64x2_t v417 = (uint64x2_t)v415;
        v415.i64[0] = v414.u32[0];
        v415.i64[1] = v414.u32[1];
        int64x2_t v418 = v415;
        v415.i64[0] = v414.u32[2];
        v415.i64[1] = v414.u32[3];
        int64x2_t v419 = vpaddq_s64((int64x2_t)vshlq_u64(v416, (uint64x2_t)vzip1q_s64((int64x2_t)0, v418)), (int64x2_t)vshlq_u64(v417, (uint64x2_t)vzip1q_s64((int64x2_t)0, v415)));
        int64x2_t v420 = vpaddq_s64(v418, v415);
        unint64_t v421 = (v419.i64[0] << v381) | v377;
        if (v420.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v421;
          unint64_t v421 = (unint64_t)v419.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v421 = 0;
          }
        }
        unint64_t v422 = v420.i64[0] + v381;
        unint64_t v377 = v421 | (v419.i64[1] << v422);
        if ((v422 & 0x3F) + v420.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v422 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v419.i64[1] >> -(v422 & 0x3F);
          if ((v422 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v402 = 0;
        unint64_t v381 = v422 + v420.i64[1];
        uint64_t v401 = 1;
      }
      while ((v405 & 1) != 0);
      uint64_t v423 = 0;
      char v424 = 1;
      v425.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v425.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v426.i64[0] = -1;
      v426.i64[1] = -1;
      do
      {
        char v427 = v424;
        uint8x16_t v428 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v426, (uint8x16_t)vaddq_s8(v469, v425)), *(&v462 + v423));
        int16x8_t v429 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v469.i8);
        int16x8_t v430 = (int16x8_t)vmovl_high_u8((uint8x16_t)v469);
        uint16x8_t v431 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v428.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v429)), (int16x8_t)vshlq_u16(vmovl_high_u8(v428), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v430)));
        uint16x8_t v432 = (uint16x8_t)vpaddq_s16(v429, v430);
        int32x4_t v433 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v432.i8);
        int32x4_t v434 = (int32x4_t)vmovl_high_u16(v432);
        int32x4_t v435 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v431.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v433)), (int32x4_t)vshlq_u32(vmovl_high_u16(v431), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v434)));
        int32x4_t v436 = vpaddq_s32(v433, v434);
        v437.i64[0] = v435.u32[0];
        v437.i64[1] = v435.u32[1];
        uint64x2_t v438 = (uint64x2_t)v437;
        v437.i64[0] = v435.u32[2];
        v437.i64[1] = v435.u32[3];
        uint64x2_t v439 = (uint64x2_t)v437;
        v437.i64[0] = v436.u32[0];
        v437.i64[1] = v436.u32[1];
        int64x2_t v440 = v437;
        v437.i64[0] = v436.u32[2];
        v437.i64[1] = v436.u32[3];
        int64x2_t v441 = vpaddq_s64((int64x2_t)vshlq_u64(v438, (uint64x2_t)vzip1q_s64((int64x2_t)0, v440)), (int64x2_t)vshlq_u64(v439, (uint64x2_t)vzip1q_s64((int64x2_t)0, v437)));
        int64x2_t v442 = vpaddq_s64(v440, v437);
        unint64_t v443 = (v441.i64[0] << v381) | v377;
        if (v442.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v443;
          unint64_t v443 = (unint64_t)v441.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v443 = 0;
          }
        }
        unint64_t v444 = v442.i64[0] + v381;
        unint64_t v377 = v443 | (v441.i64[1] << v444);
        if ((v444 & 0x3F) + v442.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v444 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v441.i64[1] >> -(v444 & 0x3F);
          if ((v444 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v424 = 0;
        unint64_t v381 = v444 + v442.i64[1];
        uint64_t v423 = 1;
      }
      while ((v427 & 1) != 0);
      if ((v381 & 0x3F) != 0) {
        *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
      }
      unint64_t result = (v381 - v259 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v106 = *MEMORY[0x263EF8340];
  long long v104 = 0u;
  long long v105 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  uint64_t v11 = a6;
  if (a5 > 1)
  {
    uint64_t v21 = a5 & 0xFE;
    if (a5 == v21)
    {
      uint64_t v22 = 0;
      int8x16_t v23 = (int *)(a3 + 4);
      int8x16_t v24 = &v99;
      do
      {
        int8x16_t v25 = v24;
        int8x16_t v26 = v23;
        uint64_t v27 = a5;
        do
        {
          int v28 = *v26;
          *((_DWORD *)v25 - 4) = *(v26 - 1);
          *(_DWORD *)int8x16_t v25 = v28;
          v25 += 2;
          v26 += 2;
          v27 -= 2;
        }
        while (v27);
        ++v22;
        int8x16_t v23 = (int *)((char *)v23 + a4);
        int8x16_t v24 = (long long *)((char *)v24 + 4);
      }
      while (v22 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (int *)(a3 + 4);
      int8x16_t v31 = &v99;
      int8x16_t v32 = (char *)&v98 + ((16 * a5) & 0xFE0);
      do
      {
        int8x16_t v33 = v31;
        int8x16_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          int v36 = *v34;
          *((_DWORD *)v33 - 4) = *(v34 - 1);
          *(_DWORD *)int8x16_t v33 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 2;
        }
        while (v35);
        int8x16_t v37 = (int *)(a3 + v29 * a4 + 4 * v21);
        int8x16_t v38 = v32;
        uint64_t v39 = a5 - v21;
        do
        {
          int v40 = *v37++;
          *int8x16_t v38 = v40;
          v38 += 4;
          --v39;
        }
        while (v39);
        ++v29;
        int8x16_t v30 = (int *)((char *)v30 + a4);
        int8x16_t v31 = (long long *)((char *)v31 + 4);
        v32 += 4;
      }
      while (v29 != v11);
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v12 = a6 & 0xFE;
    int8x16_t v13 = (int *)(a3 + 1);
    unsigned int v14 = (_DWORD *)&v98 + 1;
    uint64_t v15 = v12;
    do
    {
      int v16 = *(int *)((char *)v13 - 1);
      int v17 = *v13;
      int8x16_t v13 = (int *)((char *)v13 + 2);
      *(v14 - 1) = v16;
      *unsigned int v14 = v17;
      v14 += 2;
      v15 -= 2;
    }
    while (v15);
    if (v12 != a6)
    {
LABEL_7:
      uint64_t v18 = a6 - v12;
      int8x16_t v19 = (_DWORD *)&v98 + v12;
      int8x16_t v20 = (_DWORD *)(a3 + v12 * a4);
      do
      {
        *v19++ = *v20;
        int8x16_t v20 = (_DWORD *)((char *)v20 + a4);
        --v18;
      }
      while (v18);
    }
  }
  uint16x4_t v41 = (uint16x4_t)vmovl_u8((uint8x8_t)v98).u64[0];
  uint32x4_t v42 = vmovl_u16(v41);
  v41.i32[0] = v99;
  uint32x4_t v43 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v41));
  uint32x4_t v90 = v42;
  uint32x4_t v91 = v43;
  v43.i32[0] = DWORD1(v98);
  v43.i64[0] = vmovl_u8(*(uint8x8_t *)v43.i8).u64[0];
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)v43.i8);
  v43.i32[0] = DWORD1(v99);
  uint32x4_t v45 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v43.i8));
  uint32x4_t v92 = v44;
  uint32x4_t v93 = v45;
  v45.i32[0] = v100;
  v45.i64[0] = vmovl_u8(*(uint8x8_t *)v45.i8).u64[0];
  uint32x4_t v46 = vmovl_u16(*(uint16x4_t *)v45.i8);
  v45.i32[0] = v101;
  uint32x4_t v47 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v45.i8));
  uint32x4_t v94 = v46;
  uint32x4_t v95 = v47;
  v47.i32[0] = DWORD1(v100);
  v47.i64[0] = vmovl_u8(*(uint8x8_t *)v47.i8).u64[0];
  uint32x4_t v48 = vmovl_u16(*(uint16x4_t *)v47.i8);
  v47.i32[0] = DWORD1(v101);
  uint32x4_t v96 = v48;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v47.i8));
  if (a5 >= 4) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = a5;
  }
  if (a5 >= 4) {
    unsigned int v50 = a5 - 4;
  }
  else {
    unsigned int v50 = 0;
  }
  if (a6 >= 2) {
    unsigned int v51 = 2;
  }
  else {
    unsigned int v51 = a6;
  }
  if (a6 >= 2) {
    unsigned int v52 = a6 - 2;
  }
  else {
    unsigned int v52 = 0;
  }
  char v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v90, a7, v49, v51);
  v54.i32[0] = DWORD2(v98);
  uint16x4_t v55 = (uint16x4_t)vmovl_u8(v54).u64[0];
  uint32x4_t v56 = vmovl_u16(v55);
  v55.i32[0] = DWORD2(v99);
  uint32x4_t v57 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v55));
  uint32x4_t v90 = v56;
  uint32x4_t v91 = v57;
  v57.i32[0] = HIDWORD(v98);
  v57.i64[0] = vmovl_u8(*(uint8x8_t *)v57.i8).u64[0];
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)v57.i8);
  v57.i32[0] = HIDWORD(v99);
  uint32x4_t v59 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v57.i8));
  uint32x4_t v92 = v58;
  uint32x4_t v93 = v59;
  v59.i32[0] = DWORD2(v100);
  v59.i64[0] = vmovl_u8(*(uint8x8_t *)v59.i8).u64[0];
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)v59.i8);
  v59.i32[0] = DWORD2(v101);
  uint32x4_t v61 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v59.i8));
  uint32x4_t v94 = v60;
  uint32x4_t v95 = v61;
  v61.i32[0] = HIDWORD(v100);
  v61.i64[0] = vmovl_u8(*(uint8x8_t *)v61.i8).u64[0];
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)v61.i8);
  v61.i32[0] = HIDWORD(v101);
  uint32x4_t v96 = v62;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v61.i8));
  if (a6 >= 4) {
    unsigned int v63 = 2;
  }
  else {
    unsigned int v63 = v52;
  }
  int v64 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 20, (uint64_t)&v90, a7, v49, v63);
  v65.i32[0] = v102;
  uint16x4_t v66 = (uint16x4_t)vmovl_u8(v65).u64[0];
  uint32x4_t v67 = vmovl_u16(v66);
  v66.i32[0] = v103;
  uint32x4_t v68 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v66));
  uint32x4_t v90 = v67;
  uint32x4_t v91 = v68;
  v68.i32[0] = DWORD1(v102);
  v68.i64[0] = vmovl_u8(*(uint8x8_t *)v68.i8).u64[0];
  uint32x4_t v69 = vmovl_u16(*(uint16x4_t *)v68.i8);
  v68.i32[0] = DWORD1(v103);
  uint32x4_t v70 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v68.i8));
  uint32x4_t v92 = v69;
  uint32x4_t v93 = v70;
  v70.i32[0] = v104;
  v70.i64[0] = vmovl_u8(*(uint8x8_t *)v70.i8).u64[0];
  uint32x4_t v71 = vmovl_u16(*(uint16x4_t *)v70.i8);
  v70.i32[0] = v105;
  uint32x4_t v72 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v70.i8));
  uint32x4_t v94 = v71;
  uint32x4_t v95 = v72;
  v72.i32[0] = DWORD1(v104);
  v72.i64[0] = vmovl_u8(*(uint8x8_t *)v72.i8).u64[0];
  uint32x4_t v73 = vmovl_u16(*(uint16x4_t *)v72.i8);
  v72.i32[0] = DWORD1(v105);
  uint32x4_t v96 = v73;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v72.i8));
  if (a5 >= 8) {
    unsigned int v74 = 4;
  }
  else {
    unsigned int v74 = v50;
  }
  int v75 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 40, (uint64_t)&v90, a7, v74, v51);
  v76.i32[0] = DWORD2(v102);
  uint16x4_t v77 = (uint16x4_t)vmovl_u8(v76).u64[0];
  uint32x4_t v78 = vmovl_u16(v77);
  v77.i32[0] = DWORD2(v103);
  uint32x4_t v79 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v77));
  uint32x4_t v90 = v78;
  uint32x4_t v91 = v79;
  v79.i32[0] = HIDWORD(v102);
  v79.i64[0] = vmovl_u8(*(uint8x8_t *)v79.i8).u64[0];
  uint32x4_t v80 = vmovl_u16(*(uint16x4_t *)v79.i8);
  v79.i32[0] = HIDWORD(v103);
  uint32x4_t v81 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v79.i8));
  uint32x4_t v92 = v80;
  uint32x4_t v93 = v81;
  v81.i32[0] = DWORD2(v104);
  v81.i64[0] = vmovl_u8(*(uint8x8_t *)v81.i8).u64[0];
  uint32x4_t v82 = vmovl_u16(*(uint16x4_t *)v81.i8);
  v81.i32[0] = DWORD2(v105);
  uint32x4_t v83 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v81.i8));
  uint32x4_t v94 = v82;
  uint32x4_t v95 = v83;
  v83.i32[0] = HIDWORD(v104);
  v83.i64[0] = vmovl_u8(*(uint8x8_t *)v83.i8).u64[0];
  uint32x4_t v84 = vmovl_u16(*(uint16x4_t *)v83.i8);
  v83.i32[0] = HIDWORD(v105);
  uint32x4_t v96 = v84;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v83.i8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 60, (uint64_t)&v90, a7, v74, v63);
  if (v75) {
    char v86 = 4;
  }
  else {
    char v86 = 0;
  }
  if (v64) {
    char v87 = 2;
  }
  else {
    char v87 = 0;
  }
  if (result) {
    char v88 = -8;
  }
  else {
    char v88 = -16;
  }
  *a2 = v88 | v86 | v53 | v87;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v331 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v300 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v299 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v298 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v297 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v295 = v9;
  BOOL v296 = v14;
  BOOL v15 = a4 < 2 || a5 == 0;
  do
  {
    *(unsigned int *)((char *)&v327 + v8 * 4) = 8;
    v315[v8] = 0;
    *(_DWORD *)((char *)&v314[2] + v8 * 4) = 128;
    int8x16_t v23 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      int8x16_t v25 = &v317[v8];
      if ((*v23 ^ 0x80) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = *v23 ^ 0x80;
      }
      *int8x16_t v25 = v24;
      if ((v23[4] ^ 0x80) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v23[4] ^ 0x80;
      }
      v25[4] = v26;
      if ((v23[8] ^ 0x80) == 1) {
        unsigned int v27 = 0;
      }
      else {
        unsigned int v27 = v23[8] ^ 0x80;
      }
      v25[8] = v27;
      if ((v23[12] ^ 0x80) == 1) {
        unsigned int v28 = 0;
      }
      else {
        unsigned int v28 = v23[12] ^ 0x80;
      }
      v25[12] = v28;
      unsigned int v29 = v23[16] ^ 0x80;
      if (v29 == 1) {
        unsigned int v29 = 0;
      }
      v25[16] = v29;
      unsigned int v30 = v23[20] ^ 0x80;
      if (v30 == 1) {
        unsigned int v30 = 0;
      }
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x80;
      if (v31 == 1) {
        unsigned int v31 = 0;
      }
      v25[24] = v31;
      int v33 = v23[28] ^ 0x80;
      if (v33 == 1) {
        unsigned int v32 = 0;
      }
      else {
        unsigned int v32 = v33;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v24 = *v23 ^ 0x80;
      int8x16_t v25 = &v317[v8];
      *int8x16_t v25 = v24;
      unsigned int v26 = v23[4] ^ 0x80;
      v25[4] = v26;
      unsigned int v27 = v23[8] ^ 0x80;
      v25[8] = v27;
      unsigned int v28 = v23[12] ^ 0x80;
      v25[12] = v28;
      unsigned int v29 = v23[16] ^ 0x80;
      v25[16] = v29;
      unsigned int v30 = v23[20] ^ 0x80;
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x80;
      v25[24] = v31;
      unsigned int v32 = v23[28] ^ 0x80;
    }
    else
    {
      unsigned int v24 = *v23;
      int8x16_t v25 = &v317[v8];
      *int8x16_t v25 = *v23;
      unsigned int v26 = v23[4];
      v25[4] = v26;
      unsigned int v27 = v23[8];
      v25[8] = v27;
      unsigned int v28 = v23[12];
      v25[12] = v28;
      unsigned int v29 = v23[16];
      v25[16] = v29;
      unsigned int v30 = v23[20];
      v25[20] = v30;
      unsigned int v31 = v23[24];
      v25[24] = v31;
      unsigned int v32 = v23[28];
    }
    v25[28] = v32;
    int8x16_t v34 = &v322[v8 + 4];
    v322[v8 + 4] = v24;
    *(int *)((char *)&v323 + v8 * 4) = v24;
    v322[v8] = 0;
    unsigned int v35 = v24;
    if (v15)
    {
      if (v296) {
        goto LABEL_59;
      }
    }
    else
    {
      if (v26 < v24)
      {
        v322[v8] = 1;
        *(int *)((char *)&v323 + v8 * 4) = v26;
        unsigned int v35 = v26;
      }
      if (v24 >= v26) {
        int v36 = &v322[v8 + 4];
      }
      else {
        int v36 = &v317[v8 + 4];
      }
      unsigned int v24 = *v36;
      *int8x16_t v34 = *v36;
      if (v296)
      {
LABEL_59:
        if (v295) {
          goto LABEL_60;
        }
        goto LABEL_77;
      }
    }
    if (v27 < v35)
    {
      v322[v8] = 2;
      *(int *)((char *)&v323 + v8 * 4) = v27;
      unsigned int v35 = v27;
    }
    if (v24 >= v27) {
      int8x16_t v37 = &v322[v8 + 4];
    }
    else {
      int8x16_t v37 = &v317[v8 + 8];
    }
    unsigned int v24 = *v37;
    *int8x16_t v34 = *v37;
    if (v295)
    {
LABEL_60:
      if (v297) {
        goto LABEL_61;
      }
      goto LABEL_83;
    }
LABEL_77:
    if (v28 < v35)
    {
      v322[v8] = 3;
      *(int *)((char *)&v323 + v8 * 4) = v28;
      unsigned int v35 = v28;
    }
    if (v24 >= v28) {
      int8x16_t v38 = &v322[v8 + 4];
    }
    else {
      int8x16_t v38 = &v317[v8 + 12];
    }
    unsigned int v24 = *v38;
    *int8x16_t v34 = *v38;
    if (v297)
    {
LABEL_61:
      if (v299) {
        goto LABEL_62;
      }
      goto LABEL_89;
    }
LABEL_83:
    if (v29 < v35)
    {
      v322[v8] = 4;
      *(int *)((char *)&v323 + v8 * 4) = v29;
      unsigned int v35 = v29;
    }
    if (v24 >= v29) {
      uint64_t v39 = &v322[v8 + 4];
    }
    else {
      uint64_t v39 = &v317[v8 + 16];
    }
    unsigned int v24 = *v39;
    *int8x16_t v34 = *v39;
    if (v299)
    {
LABEL_62:
      if (v298) {
        goto LABEL_63;
      }
      goto LABEL_94;
    }
LABEL_89:
    if (v30 < v35)
    {
      v322[v8] = 5;
      *(int *)((char *)&v323 + v8 * 4) = v30;
      unsigned int v35 = v30;
    }
    int v40 = &v317[v8 + 20];
    if (v24 >= v30) {
      int v40 = &v322[v8 + 4];
    }
    unsigned int v24 = *v40;
    *int8x16_t v34 = *v40;
    if (v298)
    {
LABEL_63:
      if (v300) {
        goto LABEL_104;
      }
LABEL_99:
      if (v32 < v35)
      {
        v322[v8] = 7;
        *(int *)((char *)&v323 + v8 * 4) = v32;
        unsigned int v35 = v32;
      }
      uint32x4_t v42 = &v317[v8 + 28];
      if (v24 >= v32) {
        uint32x4_t v42 = &v322[v8 + 4];
      }
      unsigned int v24 = *v42;
      *int8x16_t v34 = *v42;
      goto LABEL_104;
    }
LABEL_94:
    if (v31 < v35)
    {
      v322[v8] = 6;
      *(int *)((char *)&v323 + v8 * 4) = v31;
      unsigned int v35 = v31;
    }
    uint16x4_t v41 = &v317[v8 + 24];
    if (v24 >= v31) {
      uint16x4_t v41 = &v322[v8 + 4];
    }
    unsigned int v24 = *v41;
    *int8x16_t v34 = *v41;
    if (!v300) {
      goto LABEL_99;
    }
LABEL_104:
    int v43 = __clz(v24 - v35);
    unsigned int v44 = 32 - v43;
    if (v43 > 32) {
      unsigned int v44 = -1;
    }
    if (v35) {
      BOOL v45 = v35 == 255;
    }
    else {
      BOOL v45 = 1;
    }
    int v46 = !v45;
    if (v44 < 2 && v24 == v35) {
      unsigned int v48 = v46;
    }
    else {
      unsigned int v48 = v44 + 1;
    }
    *(unsigned int *)((char *)&v318 + v8 * 4) = v48;
    if ((a3 | 2) != 3)
    {
      BOOL v49 = 0;
LABEL_124:
      if (v48 <= 5) {
        goto LABEL_125;
      }
      goto LABEL_21;
    }
    BOOL v49 = 0;
    if (v24 >= 0x80)
    {
      if (v35 <= 0x7F)
      {
        BOOL v49 = kDQuadParamTable[10 * v48 + 8] == 0;
        if (v48 <= 5) {
          goto LABEL_125;
        }
        goto LABEL_21;
      }
      goto LABEL_124;
    }
    if (v48 <= 5)
    {
LABEL_125:
      if (!v49) {
        goto LABEL_31;
      }
    }
LABEL_21:
    int v16 = kDQuadParamTable[10 * v48 + 4] - v49;
    unsigned int v17 = v16 + 1;
    if (v49) {
      int v18 = 0;
    }
    else {
      int v18 = -2;
    }
    int v19 = v35 & ~(-1 << (7 - v16));
    if (v17 >= 8) {
      int v19 = 0;
    }
    int v20 = v19 + v18;
    unsigned int v21 = __clz(v20 + v24 - v35);
    if (v20 >= 1 && v21 < v43) {
      *(unsigned int *)((char *)&v318 + v8 * 4) = v48 + 1;
    }
LABEL_31:
    ++v8;
  }
  while (v8 != 4);
  v314[0] = 0;
  v314[1] = 0;
  v313[0] = 0;
  v313[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v315, &v318, v314, v313);
  unint64_t v50 = 0;
  int v51 = 0;
  if (a4) {
    BOOL v52 = a5 == 0;
  }
  else {
    BOOL v52 = 1;
  }
  int v53 = v52;
  while (2)
  {
    uint64_t v55 = v315[v50 / 4];
    int v56 = *(unsigned int *)((char *)&v318 + v50);
    uint32x4_t v57 = &kDQuadParamTable[160 * v55 + 10 * v56];
    int v58 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
          + 4 * v55
          + 2);
    int v59 = v57[5];
    unsigned int v60 = v57[4] + v58;
    *(unsigned int *)((char *)&v309 + v50) = v60;
    int v61 = v59 + v58;
    *(unsigned int *)((char *)&v305 + v50) = v61;
    unint64_t v62 = *((void *)v57 + 1);
    int v63 = *(_DWORD *)((char *)v313 + v50) - *(_DWORD *)((char *)v314 + v50);
    if (v63 < 0)
    {
      if (kDQuadParamTable[160 * v55 + 7 + 10 * v56] < *(_DWORD *)((char *)v314 + v50)
                                                                    - *(_DWORD *)((char *)v313 + v50))
      {
        *(unsigned int *)((char *)&v305 + v50) = --v61;
        if (!kDQuadParamTable[160 * v55 + 8 + 10 * v56])
        {
          int v64 = -1;
LABEL_142:
          *(unsigned int *)((char *)&v309 + v50) = v64 + v60;
        }
      }
    }
    else if (v63)
    {
      v61 += v63;
      *(unsigned int *)((char *)&v305 + v50) = v61;
      int v64 = v63;
      goto LABEL_142;
    }
    if (v55 == 5)
    {
      int v65 = (v63 < 2) | v51;
      if (v56 == 1) {
        int v51 = v65;
      }
    }
    if (a3 == 4)
    {
      if (v55 == 3) {
        int v66 = 31744;
      }
      else {
        int v66 = 0;
      }
      if (v55 == 4) {
        int v67 = 2139095040;
      }
      else {
        int v67 = v66;
      }
      int v68 = 1 << (*(unsigned int *)((char *)&v327 + v50) - 1);
      if (v53)
      {
        if (v15) {
          goto LABEL_157;
        }
LABEL_171:
        unsigned int v72 = v317[v50 / 4 + 4];
        BOOL v74 = (v67 & ~v72) == 0 || v72 == v68;
        v51 |= v74;
        if (!v296) {
          goto LABEL_178;
        }
LABEL_158:
        if (v295) {
          goto LABEL_159;
        }
LABEL_185:
        unsigned int v78 = v317[v50 / 4 + 12];
        BOOL v80 = (v67 & ~v78) == 0 || v78 == v68;
        v51 |= v80;
        if (!v297) {
          goto LABEL_192;
        }
LABEL_160:
        if (v299) {
          goto LABEL_161;
        }
LABEL_199:
        unsigned int v84 = v317[v50 / 4 + 20];
        BOOL v86 = (v67 & ~v84) == 0 || v84 == v68;
        v51 |= v86;
        if (!v298) {
          goto LABEL_206;
        }
LABEL_162:
        if (!v300) {
          goto LABEL_213;
        }
      }
      else
      {
        unsigned int v69 = v317[v50 / 4];
        BOOL v71 = (v67 & ~v69) == 0 || v69 == v68;
        v51 |= v71;
        if (!v15) {
          goto LABEL_171;
        }
LABEL_157:
        if (v296) {
          goto LABEL_158;
        }
LABEL_178:
        unsigned int v75 = v317[v50 / 4 + 8];
        BOOL v77 = (v67 & ~v75) == 0 || v75 == v68;
        v51 |= v77;
        if (!v295) {
          goto LABEL_185;
        }
LABEL_159:
        if (v297) {
          goto LABEL_160;
        }
LABEL_192:
        unsigned int v81 = v317[v50 / 4 + 16];
        BOOL v83 = (v67 & ~v81) == 0 || v81 == v68;
        v51 |= v83;
        if (!v299) {
          goto LABEL_199;
        }
LABEL_161:
        if (v298) {
          goto LABEL_162;
        }
LABEL_206:
        unsigned int v87 = v317[v50 / 4 + 24];
        BOOL v89 = (v67 & ~v87) == 0 || v87 == v68;
        v51 |= v89;
        if (!v300)
        {
LABEL_213:
          unsigned int v90 = v317[v50 / 4 + 28];
          BOOL v92 = (v67 & ~v90) == 0 || v90 == v68;
          v51 |= v92;
        }
      }
    }
    if (v62 >> v61 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)15,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v50
                                       + 32))
      int v54 = 1;
    else {
      int v54 = v53;
    }
    v51 |= v54;
    v50 += 4;
    if (v50 != 16) {
      continue;
    }
    break;
  }
  uint64_t v93 = 0;
  uint64_t v303 = 0;
  uint64_t v304 = 0;
  memset(v302, 0, sizeof(v302));
  uint32x4_t v94 = v317;
  uint32x4_t v95 = v316;
  do
  {
    uint64_t v96 = 0;
    unsigned int v97 = 0;
    unsigned int v98 = *(&v327 + v93);
    if (v98 >= *(&v309 + v93)) {
      unsigned int v99 = *(&v309 + v93);
    }
    else {
      unsigned int v99 = *(&v327 + v93);
    }
    *(&v309 + v93) = v99;
    long long v100 = &kDQuadParamTable[160 * v315[v93] + 10 * *(&v318 + v93)];
    unsigned int v101 = *(&v305 + v93);
    if (v100[5]) {
      unsigned int v102 = v98;
    }
    else {
      unsigned int v102 = 0;
    }
    if (v102 < v101) {
      unsigned int v101 = v102;
    }
    int v103 = *(&v323 + v93) & (-1 << (v98 - v99));
    long long v104 = &v317[v93];
    int v105 = *v104 - v103;
    uint64_t v106 = &v316[2 * v93];
    if (v53) {
      int v105 = 0;
    }
    int v107 = v104[4] - v103;
    if (v15) {
      int v107 = 0;
    }
    *uint64_t v106 = v105;
    v106[1] = v107;
    int v108 = v104[8] - v103;
    if (v296) {
      int v108 = 0;
    }
    int v109 = v104[12] - v103;
    if (v295) {
      int v109 = 0;
    }
    v106[2] = v108;
    v106[3] = v109;
    int v110 = v104[16] - v103;
    if (v297) {
      int v110 = 0;
    }
    int v111 = v104[20] - v103;
    if (v299) {
      int v111 = 0;
    }
    v106[4] = v110;
    v106[5] = v111;
    uint64_t v112 = -1 << v98;
    *(&v305 + v93) = v101;
    unint64_t v113 = *((void *)v100 + 1);
    *((_DWORD *)&v303 + v93) = v103;
    unint64_t v114 = v113 >> v101;
    int v115 = v104[24] - v103;
    if (v298) {
      int v115 = 0;
    }
    int v116 = v104[28] - v103;
    if (v300) {
      int v116 = 0;
    }
    v106[6] = v115;
    v106[7] = v116;
    if (v114 <= 1) {
      unint64_t v117 = 1;
    }
    else {
      unint64_t v117 = v114;
    }
    uint64_t v118 = 4 * v322[v93];
    int8x16_t v119 = &byte_242EA911D;
    do
    {
      if (v118 != v96)
      {
        if (v101) {
          unint64_t v120 = *(unsigned int *)((char *)v95 + v96) / v117;
        }
        else {
          LODWORD(v120) = 0;
        }
        int8x16_t v121 = (int *)v302 + 7 * v93 + v97;
        *int8x16_t v121 = v120;
        if (v114 >= 2)
        {
          unint64_t v122 = *(unsigned int *)((char *)v95 + v96);
          if (v122)
          {
            if (v122 / v117 * v117 == v122 && ((v122 / v117) & 1) != 0)
            {
              if (v103 || v120 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v124 = v94[v96], v125 = *((unsigned int *)&v314[2] + v93), v124 != v125)
                  && ((a3 | 2) != 3 || v117 + v125 != v124))
                {
                  LODWORD(v120) = v120 - 1;
                  *int8x16_t v121 = v120;
                }
              }
              else
              {
                LODWORD(v120) = 1;
              }
            }
          }
        }
        if ((unint64_t)v120 >> v101 || v94[v96] == ~v112) {
          *int8x16_t v121 = ~(-1 << v101);
        }
        if (*v119 >= a5 || *(v119 - 1) >= a4) {
          *int8x16_t v121 = 0;
        }
        ++v97;
      }
      v96 += 4;
      v119 += 2;
    }
    while (v96 != 32);
    ++v93;
    v95 += 2;
    ++v94;
  }
  while (v93 != 4);
  int8x16_t v126 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v127 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  if (v51)
  {
    uint64_t v128 = 0;
    uint64_t v129 = 0;
    unsigned int v130 = v327;
    unsigned int v131 = v328;
    uint64_t v132 = v327 - 3;
    uint64_t v133 = v328 - 3;
    unsigned int v135 = v329;
    unsigned int v134 = v330;
    uint64_t v136 = v329 - 3;
    uint64_t v137 = v330 - 3;
    uint64_t v138 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v139 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v128;
      BOOL v140 = v139[1] >= a5 || *v139 >= a4;
      char v141 = v140;
      if (v140)
      {
        unint64_t v142 = 0;
        if (v132 > 0x100) {
          goto LABEL_298;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)v317[4 * v128] >> 3;
        if (v132 > 0x100) {
          goto LABEL_298;
        }
      }
      if (v130 != 3 && (unint64_t)(v138 - v127 + (v129 << 6) + v132) <= 0xA0)
      {
        uint64_t v143 = 0;
        unint64_t v144 = v130 - 3;
        do
        {
          unint64_t v145 = 64 - v138;
          if (64 - v138 >= v144) {
            unint64_t v145 = v144;
          }
          v126[v129] |= ((v142 >> v143) & ~(-1 << v145)) << v138;
          v143 += v145;
          unint64_t v146 = v145 + v138;
          v129 += v146 >> 6;
          uint64_t v138 = v146 & 0x3F;
          v144 -= v145;
        }
        while (v144);
      }
LABEL_298:
      if (v141)
      {
        unint64_t v147 = 0;
        if (v133 > 0x100) {
          goto LABEL_308;
        }
      }
      else
      {
        unint64_t v147 = (unint64_t)v317[4 * v128 + 1] >> 3;
        if (v133 > 0x100) {
          goto LABEL_308;
        }
      }
      if (v131 != 3 && (unint64_t)(v138 - v127 + (v129 << 6) + v133) <= 0xA0)
      {
        uint64_t v148 = 0;
        unint64_t v149 = v131 - 3;
        do
        {
          unint64_t v150 = 64 - v138;
          if (64 - v138 >= v149) {
            unint64_t v150 = v149;
          }
          v126[v129] |= ((v147 >> v148) & ~(-1 << v150)) << v138;
          v148 += v150;
          unint64_t v151 = v150 + v138;
          v129 += v151 >> 6;
          uint64_t v138 = v151 & 0x3F;
          v149 -= v150;
        }
        while (v149);
      }
LABEL_308:
      if (v141)
      {
        unint64_t v152 = 0;
        if (v136 > 0x100) {
          goto LABEL_318;
        }
      }
      else
      {
        unint64_t v152 = (unint64_t)v317[4 * v128 + 2] >> 3;
        if (v136 > 0x100) {
          goto LABEL_318;
        }
      }
      if (v135 != 3 && (unint64_t)(v138 - v127 + (v129 << 6) + v136) <= 0xA0)
      {
        uint64_t v153 = 0;
        unint64_t v154 = v135 - 3;
        do
        {
          unint64_t v155 = 64 - v138;
          if (64 - v138 >= v154) {
            unint64_t v155 = v154;
          }
          v126[v129] |= ((v152 >> v153) & ~(-1 << v155)) << v138;
          v153 += v155;
          unint64_t v156 = v155 + v138;
          v129 += v156 >> 6;
          uint64_t v138 = v156 & 0x3F;
          v154 -= v155;
        }
        while (v154);
      }
LABEL_318:
      if (v141)
      {
        unint64_t v157 = 0;
        if (v137 <= 0x100) {
          goto LABEL_322;
        }
      }
      else
      {
        unint64_t v157 = (unint64_t)v317[4 * v128 + 3] >> 3;
        if (v137 <= 0x100)
        {
LABEL_322:
          if (v134 != 3 && (unint64_t)(v138 - v127 + (v129 << 6) + v137) <= 0xA0)
          {
            uint64_t v158 = 0;
            unint64_t v159 = v134 - 3;
            do
            {
              unint64_t v160 = 64 - v138;
              if (64 - v138 >= v159) {
                unint64_t v160 = v159;
              }
              v126[v129] |= ((v157 >> v158) & ~(-1 << v160)) << v138;
              v158 += v160;
              unint64_t v161 = v160 + v138;
              v129 += v161 >> 6;
              uint64_t v138 = v161 & 0x3F;
              v159 -= v160;
            }
            while (v159);
          }
        }
      }
      if (++v128 == 8) {
        return v51 & 1;
      }
    }
  }
  unsigned int v162 = v318;
  char v163 = v323 | v318;
  if (v323 | v318)
  {
    char v163 = v318 - 2;
    if (v318 > 2)
    {
      unsigned int v166 = 0;
      unsigned int v165 = 0;
      char v164 = 1;
    }
    else
    {
      char v163 = 0;
      char v164 = 0;
      unsigned int v165 = v318 + 1;
      unsigned int v166 = 2;
    }
  }
  else
  {
    unsigned int v165 = 0;
    char v164 = 0;
    unsigned int v166 = 2;
  }
  unint64_t v167 = ((unint64_t)(v163 & 7) << v127) | *v126;
  *int8x16_t v126 = v167;
  uint64_t v168 = v127 | 3;
  unsigned int v169 = v319;
  char v170 = v324 | v319;
  if (v324 | v319)
  {
    if (v319 < 3)
    {
      char v170 = 0;
      char v171 = 0;
      unsigned int v172 = v319 + 1;
      goto LABEL_338;
    }
    unsigned int v173 = 0;
    unsigned int v172 = 0;
    char v170 = v319 - 2;
    char v171 = 1;
  }
  else
  {
    unsigned int v172 = 0;
    char v171 = 0;
LABEL_338:
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v168 - v127) <= 0x9D)
  {
    *int8x16_t v126 = ((unint64_t)(v170 & 7) << v168) | v167;
    uint64_t v168 = v127 | 6;
  }
  unsigned int v174 = v320;
  if (v325 | v320)
  {
    if (v320 < 3)
    {
      unsigned int v175 = 0;
      char v176 = 0;
      unsigned int v301 = v320 + 1;
      goto LABEL_346;
    }
    unsigned int v177 = 0;
    unsigned int v301 = 0;
    unsigned int v175 = v320 - 2;
    char v176 = 1;
  }
  else
  {
    unsigned int v175 = 0;
    unsigned int v301 = 0;
    char v176 = 0;
LABEL_346:
    unsigned int v177 = 2;
  }
  if ((unint64_t)(v168 - v127 - 158) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    uint64_t v178 = 0;
    uint64_t v179 = 0;
    unint64_t v180 = 3;
    do
    {
      unint64_t v181 = 64 - v168;
      if (64 - v168 >= v180) {
        unint64_t v181 = v180;
      }
      v126[v178] |= (((unint64_t)v175 >> v179) & ~(-1 << v181)) << v168;
      v179 += v181;
      unint64_t v182 = v181 + v168;
      v178 += v182 >> 6;
      uint64_t v168 = v182 & 0x3F;
      v180 -= v181;
    }
    while (v180);
  }
  else
  {
    uint64_t v178 = 0;
  }
  unsigned int v183 = v321;
  int v184 = v326 | v321;
  LODWORD(v185) = v321 - 2;
  if (v321 >= 3)
  {
    unsigned int v186 = 0;
  }
  else
  {
    LODWORD(v185) = 0;
    unsigned int v186 = 2;
  }
  if (v321 < 3) {
    unsigned int v187 = v321 + 1;
  }
  else {
    unsigned int v187 = 0;
  }
  BOOL v188 = v184 == 0;
  if (v184) {
    unint64_t v185 = v185;
  }
  else {
    unint64_t v185 = 0;
  }
  if (v184) {
    uint64_t v189 = v186;
  }
  else {
    uint64_t v189 = 2;
  }
  if (v188) {
    unint64_t v190 = 0;
  }
  else {
    unint64_t v190 = v187;
  }
  BOOL v191 = !v188 && v321 >= 3;
  if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xA0)
  {
    uint64_t v192 = 0;
    unint64_t v193 = 3;
    do
    {
      unint64_t v194 = 64 - v168;
      if (64 - v168 >= v193) {
        unint64_t v194 = v193;
      }
      v126[v178] |= ((v185 >> v192) & ~(-1 << v194)) << v168;
      v192 += v194;
      unint64_t v195 = v194 + v168;
      v178 += v195 >> 6;
      uint64_t v168 = v195 & 0x3F;
      v193 -= v194;
    }
    while (v193);
  }
  if (v164)
  {
    int v196 = 12;
    if (v171) {
      goto LABEL_392;
    }
LABEL_386:
    unint64_t v201 = v173;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v173 <= 0xA0)
    {
      uint64_t v202 = 0;
      do
      {
        unint64_t v203 = 64 - v168;
        if (64 - v168 >= v201) {
          unint64_t v203 = v201;
        }
        v126[v178] |= (((unint64_t)v172 >> v202) & ~(-1 << v203)) << v168;
        v202 += v203;
        unint64_t v204 = v203 + v168;
        v178 += v204 >> 6;
        uint64_t v168 = v204 & 0x3F;
        v201 -= v203;
      }
      while (v201);
    }
    v196 += v173;
  }
  else
  {
    unint64_t v197 = v166;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v166 <= 0xA0)
    {
      uint64_t v198 = 0;
      do
      {
        unint64_t v199 = 64 - v168;
        if (64 - v168 >= v197) {
          unint64_t v199 = v197;
        }
        v126[v178] |= (((unint64_t)v165 >> v198) & ~(-1 << v199)) << v168;
        v198 += v199;
        unint64_t v200 = v199 + v168;
        v178 += v200 >> 6;
        uint64_t v168 = v200 & 0x3F;
        v197 -= v199;
      }
      while (v197);
    }
    int v196 = v166 | 0xC;
    if ((v171 & 1) == 0) {
      goto LABEL_386;
    }
  }
LABEL_392:
  if (v176)
  {
    if (v191) {
      goto LABEL_394;
    }
LABEL_402:
    if ((unint64_t)(v168 - v127 + (v178 << 6) + v189) <= 0xA0)
    {
      uint64_t v210 = 0;
      unint64_t v211 = v189;
      do
      {
        unint64_t v212 = 64 - v168;
        if (64 - v168 >= v211) {
          unint64_t v212 = v211;
        }
        v126[v178] |= ((v190 >> v210) & ~(-1 << v212)) << v168;
        v210 += v212;
        unint64_t v213 = v212 + v168;
        v178 += v213 >> 6;
        uint64_t v168 = v213 & 0x3F;
        v211 -= v212;
      }
      while (v211);
    }
    v196 += v189;
    unsigned int v205 = v327;
    if (!v162) {
      goto LABEL_408;
    }
LABEL_412:
    unsigned int v215 = v309;
    if (v309 <= 0x100 && v309 && v168 - v127 + (v178 << 6) + (unint64_t)v309 <= 0xA0)
    {
      uint64_t v216 = 0;
      unint64_t v217 = v303 >> (v205 - v309);
      unint64_t v218 = v309;
      do
      {
        unint64_t v219 = 64 - v168;
        if (64 - v168 >= v218) {
          unint64_t v219 = v218;
        }
        v126[v178] |= ((v217 >> v216) & ~(-1 << v219)) << v168;
        v216 += v219;
        unint64_t v220 = v219 + v168;
        v178 += v220 >> 6;
        uint64_t v168 = v220 & 0x3F;
        v218 -= v219;
      }
      while (v218);
    }
    v196 += v215;
    unsigned int v214 = v328;
    if (v169) {
      goto LABEL_420;
    }
LABEL_521:
    if (v214 == 2 || v214 >= 0x10) {
      goto LABEL_420;
    }
  }
  else
  {
    unint64_t v206 = v177;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v177 <= 0xA0)
    {
      uint64_t v207 = 0;
      do
      {
        unint64_t v208 = 64 - v168;
        if (64 - v168 >= v206) {
          unint64_t v208 = v206;
        }
        v126[v178] |= (((unint64_t)v301 >> v207) & ~(-1 << v208)) << v168;
        v207 += v208;
        unint64_t v209 = v208 + v168;
        v178 += v209 >> 6;
        uint64_t v168 = v209 & 0x3F;
        v206 -= v208;
      }
      while (v206);
    }
    v196 += v177;
    if (!v191) {
      goto LABEL_402;
    }
LABEL_394:
    unsigned int v205 = v327;
    if (v162) {
      goto LABEL_412;
    }
LABEL_408:
    if (v205 == 2 || v205 >= 0x10) {
      goto LABEL_412;
    }
    unsigned int v214 = v328;
    if (!v169) {
      goto LABEL_521;
    }
LABEL_420:
    unsigned int v221 = v310;
    if (v310 <= 0x100 && v310 && v168 - v127 + (v178 << 6) + (unint64_t)v310 <= 0xA0)
    {
      uint64_t v222 = 0;
      unint64_t v223 = (HIDWORD(v303) >> (v214 - v310));
      unint64_t v224 = v310;
      do
      {
        unint64_t v225 = 64 - v168;
        if (64 - v168 >= v224) {
          unint64_t v225 = v224;
        }
        v126[v178] |= ((v223 >> v222) & ~(-1 << v225)) << v168;
        v222 += v225;
        unint64_t v226 = v225 + v168;
        v178 += v226 >> 6;
        uint64_t v168 = v226 & 0x3F;
        v224 -= v225;
      }
      while (v224);
    }
    v196 += v221;
  }
  if (v174 || v329 == 2 || v329 >= 0x10)
  {
    unsigned int v227 = v311;
    if (v311 <= 0x100 && v311 && v168 - v127 + (v178 << 6) + (unint64_t)v311 <= 0xA0)
    {
      uint64_t v228 = 0;
      unint64_t v229 = v304 >> (v329 - v311);
      unint64_t v230 = v311;
      do
      {
        unint64_t v231 = 64 - v168;
        if (64 - v168 >= v230) {
          unint64_t v231 = v230;
        }
        v126[v178] |= ((v229 >> v228) & ~(-1 << v231)) << v168;
        v228 += v231;
        unint64_t v232 = v231 + v168;
        v178 += v232 >> 6;
        uint64_t v168 = v232 & 0x3F;
        v230 -= v231;
      }
      while (v230);
    }
    v196 += v227;
  }
  if (v183 || v330 == 2 || v330 >= 0x10)
  {
    unsigned int v233 = v312;
    if (v312 <= 0x100 && v312 && v168 - v127 + (v178 << 6) + (unint64_t)v312 <= 0xA0)
    {
      uint64_t v234 = 0;
      unint64_t v235 = (HIDWORD(v304) >> (v330 - v312));
      unint64_t v236 = v312;
      do
      {
        unint64_t v237 = 64 - v168;
        if (64 - v168 >= v236) {
          unint64_t v237 = v236;
        }
        v126[v178] |= ((v235 >> v234) & ~(-1 << v237)) << v168;
        v234 += v237;
        unint64_t v238 = v237 + v168;
        v178 += v238 >> 6;
        uint64_t v168 = v238 & 0x3F;
        v236 -= v237;
      }
      while (v236);
    }
    v196 += v233;
  }
  unint64_t v239 = v305;
  if (v305)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xA0)
    {
      uint64_t v240 = 0;
      unint64_t v241 = v322[0];
      unint64_t v242 = 3;
      do
      {
        unint64_t v243 = 64 - v168;
        if (64 - v168 >= v242) {
          unint64_t v243 = v242;
        }
        v126[v178] |= ((v241 >> v240) & ~(-1 << v243)) << v168;
        v240 += v243;
        unint64_t v244 = v243 + v168;
        v178 += v244 >> 6;
        uint64_t v168 = v244 & 0x3F;
        v242 -= v243;
      }
      while (v242);
    }
    v196 += 3;
  }
  unint64_t v245 = v306;
  if (v306)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xA0)
    {
      uint64_t v246 = 0;
      unint64_t v247 = v322[1];
      unint64_t v248 = 3;
      do
      {
        unint64_t v249 = 64 - v168;
        if (64 - v168 >= v248) {
          unint64_t v249 = v248;
        }
        v126[v178] |= ((v247 >> v246) & ~(-1 << v249)) << v168;
        v246 += v249;
        unint64_t v250 = v249 + v168;
        v178 += v250 >> 6;
        uint64_t v168 = v250 & 0x3F;
        v248 -= v249;
      }
      while (v248);
    }
    v196 += 3;
  }
  unint64_t v251 = v307;
  if (v307)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xA0)
    {
      uint64_t v252 = 0;
      unint64_t v253 = v322[2];
      unint64_t v254 = 3;
      do
      {
        unint64_t v255 = 64 - v168;
        if (64 - v168 >= v254) {
          unint64_t v255 = v254;
        }
        v126[v178] |= ((v253 >> v252) & ~(-1 << v255)) << v168;
        v252 += v255;
        unint64_t v256 = v255 + v168;
        v178 += v256 >> 6;
        uint64_t v168 = v256 & 0x3F;
        v254 -= v255;
      }
      while (v254);
    }
    v196 += 3;
  }
  unint64_t v257 = v308;
  if (v308)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xA0)
    {
      uint64_t v258 = 0;
      unint64_t v259 = v322[3];
      unint64_t v260 = 3;
      do
      {
        unint64_t v261 = 64 - v168;
        if (64 - v168 >= v260) {
          unint64_t v261 = v260;
        }
        v126[v178] |= ((v259 >> v258) & ~(-1 << v261)) << v168;
        v258 += v261;
        unint64_t v262 = v261 + v168;
        v178 += v262 >> 6;
        uint64_t v168 = v262 & 0x3F;
        v260 -= v261;
      }
      while (v260);
    }
    v196 += 3;
  }
  unsigned int v263 = 160 - v196;
  unsigned int v264 = (160 - v196) / 7u;
  unint64_t v265 = v263 % 7;
  if ((v265 - 257) >= 0xFFFFFF00 && v168 - v127 + (v178 << 6) + v265 <= 0xA0)
  {
    do
    {
      unint64_t v266 = 64 - v168;
      if (64 - v168 >= v265) {
        unint64_t v266 = v265;
      }
      unint64_t v267 = v266 + v168;
      v178 += v267 >> 6;
      uint64_t v168 = v267 & 0x3F;
      v265 -= v266;
    }
    while (v265);
  }
  uint64_t v268 = 0;
  while (2)
  {
    if (v239 && v239 <= 0x100 && v168 - v127 + (v178 << 6) + v239 <= 0xA0)
    {
      uint64_t v269 = 0;
      unint64_t v270 = *((unsigned int *)v302 + v268);
      unint64_t v271 = v239;
      do
      {
        unint64_t v272 = 64 - v168;
        if (64 - v168 >= v271) {
          unint64_t v272 = v271;
        }
        v126[v178] |= ((v270 >> v269) & ~(-1 << v272)) << v168;
        v269 += v272;
        unint64_t v273 = v272 + v168;
        v178 += v273 >> 6;
        uint64_t v168 = v273 & 0x3F;
        v271 -= v272;
      }
      while (v271);
    }
    if (!v245)
    {
      int v279 = v239;
      if (!v251) {
        goto LABEL_505;
      }
      goto LABEL_498;
    }
    if (v245 <= 0x100 && v168 - v127 + (v178 << 6) + v245 <= 0xA0)
    {
      uint64_t v274 = 0;
      unint64_t v275 = *((unsigned int *)&v302[1] + v268 + 3);
      unint64_t v276 = v245;
      do
      {
        unint64_t v277 = 64 - v168;
        if (64 - v168 >= v276) {
          unint64_t v277 = v276;
        }
        v126[v178] |= ((v275 >> v274) & ~(-1 << v277)) << v168;
        v274 += v277;
        unint64_t v278 = v277 + v168;
        v178 += v278 >> 6;
        uint64_t v168 = v278 & 0x3F;
        v276 -= v277;
      }
      while (v276);
    }
    int v279 = v245 + v239;
    if (v251)
    {
LABEL_498:
      if (v251 <= 0x100 && v168 - v127 + (v178 << 6) + v251 <= 0xA0)
      {
        uint64_t v280 = 0;
        unint64_t v281 = *((unsigned int *)&v302[3] + v268 + 2);
        unint64_t v282 = v251;
        do
        {
          unint64_t v283 = 64 - v168;
          if (64 - v168 >= v282) {
            unint64_t v283 = v282;
          }
          v126[v178] |= ((v281 >> v280) & ~(-1 << v283)) << v168;
          v280 += v283;
          unint64_t v284 = v283 + v168;
          v178 += v284 >> 6;
          uint64_t v168 = v284 & 0x3F;
          v282 -= v283;
        }
        while (v282);
      }
      v279 += v251;
    }
LABEL_505:
    if (v257)
    {
      if (v257 <= 0x100 && v168 - v127 + (v178 << 6) + v257 <= 0xA0)
      {
        uint64_t v285 = 0;
        unint64_t v286 = *((unsigned int *)&v302[5] + v268 + 1);
        unint64_t v287 = v257;
        do
        {
          unint64_t v288 = 64 - v168;
          if (64 - v168 >= v287) {
            unint64_t v288 = v287;
          }
          v126[v178] |= ((v286 >> v285) & ~(-1 << v288)) << v168;
          v285 += v288;
          unint64_t v289 = v288 + v168;
          v178 += v289 >> 6;
          uint64_t v168 = v289 & 0x3F;
          v287 -= v288;
        }
        while (v287);
      }
      v279 += v257;
    }
    unint64_t v290 = v264 - v279;
    if (v290 && v290 <= 0x100 && v168 - v127 + (v178 << 6) + v290 <= 0xA0)
    {
      do
      {
        unint64_t v291 = 64 - v168;
        if (64 - v168 >= v290) {
          unint64_t v291 = v290;
        }
        unint64_t v292 = v291 + v168;
        v178 += v292 >> 6;
        uint64_t v168 = v292 & 0x3F;
        v290 -= v291;
      }
      while (v290);
    }
    if (++v268 != 7) {
      continue;
    }
    return v51 & 1;
  }
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(unint64_t result, uint64_t a2, int a3)
{
  unint64_t v3 = result & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = 8 * (result & 7);
  unsigned int v5 = a3 & 0xFFFFFFFD;
  int v6 = ((a3 & 0xFFFFFFFD) == 1) << 7;
  if (a3 == 4)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 8 * (result & 7);
    while ((unint64_t)(v9 - v4 + (v8 << 6) - 156) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v11 = 0;
      uint64_t v12 = 0;
      unint64_t v13 = 5;
      do
      {
        unint64_t v14 = 64 - v9;
        if (64 - v9 >= v13) {
          unint64_t v14 = v13;
        }
        v11 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v14)) << v12;
        v12 += v14;
        unint64_t v15 = v14 + v9;
        v8 += v15 >> 6;
        uint64_t v9 = v15 & 0x3F;
        v13 -= v14;
      }
      while (v13);
      uint64_t result = 16 * v7;
      *(_DWORD *)(a2 + 16 * v7) = (8 * (v11 & 0x1F)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 156) < 0xFFFFFFFFFFFFFF5FLL) {
        goto LABEL_4;
      }
      char v16 = 0;
      uint64_t v17 = 0;
      unint64_t v18 = 5;
      do
      {
        unint64_t v19 = 64 - v9;
        if (64 - v9 >= v18) {
          unint64_t v19 = v18;
        }
        v16 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v19)) << v17;
        v17 += v19;
        unint64_t v20 = v19 + v9;
        v8 += v20 >> 6;
        uint64_t v9 = v20 & 0x3F;
        v18 -= v19;
      }
      while (v18);
      uint64_t result = a2 + 16 * v7;
      *(_DWORD *)(result + 4) = (8 * (v16 & 0x1F)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 156) >= 0xFFFFFFFFFFFFFF5FLL)
      {
        char v21 = 0;
        uint64_t v22 = 0;
        unint64_t v23 = 5;
        do
        {
          unint64_t v24 = 64 - v9;
          if (64 - v9 >= v23) {
            unint64_t v24 = v23;
          }
          v21 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v24)) << v22;
          v22 += v24;
          unint64_t v25 = v24 + v9;
          v8 += v25 >> 6;
          uint64_t v9 = v25 & 0x3F;
          v23 -= v24;
        }
        while (v23);
        uint64_t result = a2 + 16 * v7;
        *(_DWORD *)(result + 8) = (8 * (v21 & 0x1F)) ^ v6;
        if ((unint64_t)(v9 - v4 + (v8 << 6) - 156) >= 0xFFFFFFFFFFFFFF5FLL)
        {
          char v10 = 0;
          uint64_t v26 = 0;
          uint64_t result = 5;
          do
          {
            unint64_t v27 = 64 - v9;
            if (64 - v9 >= result) {
              unint64_t v27 = result;
            }
            v10 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v27)) << v26;
            v26 += v27;
            unint64_t v28 = v27 + v9;
            v8 += v28 >> 6;
            uint64_t v9 = v28 & 0x3F;
            result -= v27;
          }
          while (result);
        }
        else
        {
          char v10 = 0;
        }
        goto LABEL_6;
      }
LABEL_5:
      char v10 = 0;
      *(_DWORD *)(a2 + 16 * v7 + 8) = v6;
LABEL_6:
      *(_DWORD *)(a2 + 16 * v7++ + 12) = (8 * (v10 & 0x1F)) ^ v6;
      if (v7 == 8) {
        return result;
      }
    }
    *(_DWORD *)(a2 + 16 * v7) = v6;
LABEL_4:
    *(_DWORD *)(a2 + 16 * v7 + 4) = v6;
    goto LABEL_5;
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t result = 8 * (result & 7);
  do
  {
    if (result - v4 + (v30 << 6) - 156 >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 5;
      do
      {
        unint64_t v34 = 64 - result;
        if (64 - result >= v33) {
          unint64_t v34 = v33;
        }
        v31 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v34)) << v32;
        v32 += v34;
        unint64_t v35 = v34 + result;
        v30 += v35 >> 6;
        uint64_t result = v35 & 0x3F;
        v33 -= v34;
      }
      while (v33);
    }
    else
    {
      char v31 = 0;
    }
    int v36 = 8 * (v31 & 0x1F);
    BOOL v37 = v36 == 128 && v5 == 1;
    if (!v37 && v36)
    {
      if (v36 == 248) {
        int v36 = 255;
      }
      else {
        v36 |= 4 - (v31 & 1);
      }
    }
    *(_DWORD *)(a2 + 16 * v29) = v36 ^ v6;
    if (result - v4 + (v30 << 6) - 156 >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v38 = 0;
      uint64_t v39 = 0;
      unint64_t v40 = 5;
      do
      {
        unint64_t v41 = 64 - result;
        if (64 - result >= v40) {
          unint64_t v41 = v40;
        }
        v38 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v41)) << v39;
        v39 += v41;
        unint64_t v42 = v41 + result;
        v30 += v42 >> 6;
        uint64_t result = v42 & 0x3F;
        v40 -= v41;
      }
      while (v40);
    }
    else
    {
      char v38 = 0;
    }
    int v43 = 8 * (v38 & 0x1F);
    if ((v43 != 128 || v5 != 1) && v43 != 0)
    {
      int v46 = (4 - (v38 & 1)) | v43;
      if (v43 == 248) {
        int v43 = 255;
      }
      else {
        int v43 = v46;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 4) = v43 ^ v6;
    if (result - v4 + (v30 << 6) - 156 >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 5;
      do
      {
        unint64_t v50 = 64 - result;
        if (64 - result >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v50)) << v48;
        v48 += v50;
        unint64_t v51 = v50 + result;
        v30 += v51 >> 6;
        uint64_t result = v51 & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    else
    {
      char v47 = 0;
    }
    int v52 = 8 * (v47 & 0x1F);
    if ((v52 != 128 || v5 != 1) && v52 != 0)
    {
      int v55 = (4 - (v47 & 1)) | v52;
      if (v52 == 248) {
        int v52 = 255;
      }
      else {
        int v52 = v55;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 8) = v52 ^ v6;
    if (result - v4 + (v30 << 6) - 156 >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v56 = 0;
      uint64_t v57 = 0;
      unint64_t v58 = 5;
      do
      {
        unint64_t v59 = 64 - result;
        if (64 - result >= v58) {
          unint64_t v59 = v58;
        }
        v56 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v59)) << v57;
        v57 += v59;
        unint64_t v60 = v59 + result;
        v30 += v60 >> 6;
        uint64_t result = v60 & 0x3F;
        v58 -= v59;
      }
      while (v58);
    }
    else
    {
      char v56 = 0;
    }
    int v61 = 8 * (v56 & 0x1F);
    if ((v61 != 128 || v5 != 1) && v61 != 0)
    {
      int v64 = (4 - (v56 & 1)) | v61;
      if (v61 == 248) {
        int v61 = 255;
      }
      else {
        int v61 = v64;
      }
    }
    *(_DWORD *)(a2 + 16 * v29++ + 12) = v61 ^ v6;
  }
  while (v29 != 8);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v283 = *MEMORY[0x263EF8340];
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = 8 * (a1 & 7);
  unint64_t v6 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (v6 >> v5) & 7;
  uint64_t v8 = v5 | 3;
  uint64_t v9 = (v6 >> (v5 | 3u)) & 7;
  if ((v5 | 3uLL) - v5 <= 0x9D) {
    uint64_t v10 = ((8 * (a1 & 7)) | 6) - v5;
  }
  else {
    uint64_t v10 = v8 - v5;
  }
  if ((unint64_t)(v8 - v5) <= 0x9D) {
    uint64_t v11 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v11 = (8 * (a1 & 7)) | 3;
  }
  if ((unint64_t)(v8 - v5) <= 0x9D) {
    int v12 = v9;
  }
  else {
    int v12 = 0;
  }
  int v262 = v12;
  if ((unint64_t)(v10 - 158) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    uint64_t v15 = 0;
    int v13 = 0;
    uint64_t v17 = 0;
    unint64_t v18 = 3;
    do
    {
      unint64_t v19 = 64 - v11;
      if (64 - v11 >= v18) {
        unint64_t v19 = v18;
      }
      v13 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v19)) << v17);
      v17 += v19;
      v15 += (v19 + v11) >> 6;
      uint64_t v11 = (v19 + v11) & 0x3F;
      v18 -= v19;
    }
    while (v18);
    uint64_t v14 = v15 << 6;
    uint64_t v10 = v11 - v5;
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xA0)
    {
      int v16 = 0;
      uint64_t v20 = 0;
      unint64_t v21 = 3;
      do
      {
        unint64_t v22 = 64 - v11;
        if (64 - v11 >= v21) {
          unint64_t v22 = v21;
        }
        v16 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v22)) << v20);
        v20 += v22;
        v15 += (v22 + v11) >> 6;
        uint64_t v11 = (v22 + v11) & 0x3F;
        v21 -= v22;
      }
      while (v21);
      uint64_t v14 = v15 << 6;
      uint64_t v10 = v11 - v5;
    }
    else
    {
      int v16 = 0;
    }
  }
  else
  {
    int v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    int v16 = 0;
  }
  memset_pattern16(&__b, &unk_242EA8880, 0x10uLL);
  char v23 = 0;
  unint64_t v24 = 2 * (v7 == 0);
  int v265 = 2 * (v7 == 0);
  if (v7)
  {
    int v26 = v262;
    int v260 = 0;
    unsigned int v28 = v7 + 2;
  }
  else
  {
    if (v10 + v14 + v24 > 0xA0)
    {
      int v26 = v262;
    }
    else
    {
      char v23 = 0;
      uint64_t v25 = 0;
      int v26 = v262;
      do
      {
        unint64_t v27 = 64 - v11;
        if (64 - v11 >= v24) {
          unint64_t v27 = v24;
        }
        v23 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v27)) << v25;
        v25 += v27;
        v15 += (v27 + v11) >> 6;
        uint64_t v11 = (v27 + v11) & 0x3F;
        v24 -= v27;
      }
      while (v24);
    }
    unsigned int v29 = v23 & 3;
    if (v29 == 3)
    {
      int v260 = 0;
      unsigned int v28 = 2;
    }
    else
    {
      uint64_t v30 = 4 * v29;
      int v260 = *(_DWORD *)((char *)&unk_242EA9110 + v30);
      unsigned int v28 = *(_DWORD *)((char *)&unk_242EAA17C + v30);
    }
  }
  char v31 = 0;
  v282[0] = v28;
  v281[0] = 0;
  unint64_t v32 = 2 * (v26 == 0);
  int v264 = 2 * (v26 == 0);
  if (!v26 && v11 - v5 + (v15 << 6) + v32 <= 0xA0)
  {
    char v31 = 0;
    uint64_t v33 = 0;
    do
    {
      unint64_t v34 = 64 - v11;
      if (64 - v11 >= v32) {
        unint64_t v34 = v32;
      }
      v31 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v34)) << v33;
      v33 += v34;
      v15 += (v34 + v11) >> 6;
      uint64_t v11 = (v34 + v11) & 0x3F;
      v32 -= v34;
    }
    while (v32);
  }
  if (v26)
  {
    int v259 = 0;
    unsigned int v35 = v26 + 2;
  }
  else
  {
    unsigned int v36 = v31 & 3;
    if (v36 == 3)
    {
      int v259 = 0;
      unsigned int v35 = 2;
    }
    else
    {
      uint64_t v37 = 4 * v36;
      int v259 = *(_DWORD *)((char *)&unk_242EA9110 + v37);
      unsigned int v35 = *(_DWORD *)((char *)&unk_242EAA17C + v37);
    }
  }
  char v38 = 0;
  v282[1] = v35;
  v281[1] = 0;
  unint64_t v39 = 2 * (v13 == 0);
  int v263 = 2 * (v13 == 0);
  if (!v13 && v11 - v5 + (v15 << 6) + v39 <= 0xA0)
  {
    char v38 = 0;
    uint64_t v40 = 0;
    do
    {
      unint64_t v41 = 64 - v11;
      if (64 - v11 >= v39) {
        unint64_t v41 = v39;
      }
      v38 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v41)) << v40;
      v40 += v41;
      v15 += (v41 + v11) >> 6;
      uint64_t v11 = (v41 + v11) & 0x3F;
      v39 -= v41;
    }
    while (v39);
  }
  if ((v13 & 7) != 0)
  {
    int v258 = 0;
    int v42 = (v13 & 7) + 2;
  }
  else
  {
    unsigned int v43 = v38 & 3;
    if (v43 == 3)
    {
      int v258 = 0;
      int v42 = 2;
    }
    else
    {
      uint64_t v44 = 4 * v43;
      int v258 = *(_DWORD *)((char *)&unk_242EA9110 + v44);
      int v42 = *(_DWORD *)((char *)&unk_242EAA17C + v44);
    }
  }
  char v45 = 0;
  v282[2] = v42;
  v281[2] = 0;
  uint64_t v46 = 2 * (v16 == 0);
  if (!v16 && (unint64_t)(v11 - v5 + (v15 << 6) + v46) <= 0xA0)
  {
    char v45 = 0;
    uint64_t v47 = 0;
    unint64_t v48 = 2 * (v16 == 0);
    do
    {
      unint64_t v49 = 64 - v11;
      if (64 - v11 >= v48) {
        unint64_t v49 = v48;
      }
      v45 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v49)) << v47;
      v47 += v49;
      v15 += (v49 + v11) >> 6;
      uint64_t v11 = (v49 + v11) & 0x3F;
      v48 -= v49;
    }
    while (v48);
  }
  int v50 = v16 & 7;
  if ((v16 & 7) != 0)
  {
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    int v257 = 0;
    unsigned int v53 = v50 + 2;
  }
  else
  {
    unsigned int v54 = v45 & 3;
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    if (v54 == 3)
    {
      int v257 = 0;
      unsigned int v53 = 2;
    }
    else
    {
      uint64_t v55 = 4 * v54;
      int v257 = *(_DWORD *)((char *)&unk_242EA9110 + v55);
      unsigned int v53 = *(_DWORD *)((char *)&unk_242EAA17C + v55);
    }
  }
  unsigned int v56 = v53;
  v282[3] = v53;
  v281[3] = 0;
  uint64_t v275 = 0;
  uint64_t v276 = 0;
  uint64_t v273 = 0;
  uint64_t v274 = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v281, v282, &v275, &v273);
  unsigned int v57 = v52;
  unint64_t v58 = &kDQuadParamTable[10 * v52];
  unsigned int v59 = v58[5];
  unsigned int v60 = v58[4] + 1;
  unsigned int v61 = v59 + 1;
  int v62 = v273 - v275;
  if ((int)v273 - (int)v275 >= 0)
  {
    unsigned int v63 = v51;
    int v64 = v42;
    unsigned int v65 = v56;
    int v66 = v265;
    if (!v62) {
      goto LABEL_77;
    }
    v61 += v62;
    goto LABEL_71;
  }
  unsigned int v67 = v52;
  int v68 = kDQuadParamTable[10 * v52 + 7];
  unsigned int v63 = v51;
  int v64 = v42;
  if (v68 >= (int)v275 - (int)v273)
  {
    unsigned int v65 = v56;
  }
  else
  {
    unsigned int v65 = v56;
    if (!kDQuadParamTable[10 * v67 + 8])
    {
      int v62 = -1;
      unsigned int v61 = v59;
      int v66 = v265;
LABEL_71:
      v60 += v62;
      goto LABEL_77;
    }
    unsigned int v61 = v59;
  }
  int v66 = v265;
LABEL_77:
  int v69 = v66 | 0xC;
  if (__b >= v60) {
    unint64_t v70 = v60;
  }
  else {
    unint64_t v70 = __b;
  }
  v272[0] = v70;
  if (v59) {
    LODWORD(v71) = __b;
  }
  else {
    LODWORD(v71) = 0;
  }
  if (v71 >= v61) {
    unint64_t v71 = v61;
  }
  else {
    unint64_t v71 = v71;
  }
  v271[0] = v71;
  unsigned int v72 = &kDQuadParamTable[10 * v63];
  int v74 = v72[4];
  unsigned int v73 = v72[5];
  unsigned int v75 = v74 + 1;
  unsigned int v76 = v73 + 1;
  int v77 = HIDWORD(v273) - HIDWORD(v275);
  if (HIDWORD(v273) - HIDWORD(v275) >= 0)
  {
    if (!v77) {
      goto LABEL_93;
    }
    v76 += v77;
    goto LABEL_89;
  }
  if (kDQuadParamTable[10 * v63 + 7] < HIDWORD(v275) - HIDWORD(v273))
  {
    if (!kDQuadParamTable[10 * v63 + 8])
    {
      int v77 = -1;
      unsigned int v76 = v73;
LABEL_89:
      v75 += v77;
      goto LABEL_93;
    }
    unsigned int v76 = v73;
  }
LABEL_93:
  int v78 = v69 + v264;
  if (v278 >= v75) {
    unint64_t v79 = v75;
  }
  else {
    unint64_t v79 = v278;
  }
  v272[1] = v79;
  if (v73) {
    LODWORD(v80) = v278;
  }
  else {
    LODWORD(v80) = 0;
  }
  if (v80 >= v76) {
    unint64_t v80 = v76;
  }
  else {
    unint64_t v80 = v80;
  }
  v271[1] = v80;
  unsigned int v81 = &kDQuadParamTable[10 * v64];
  int v83 = v81[4];
  unsigned int v82 = v81[5];
  unsigned int v84 = v83 + 1;
  unsigned int v85 = v82 + 1;
  int v86 = v274 - v276;
  if ((int)v274 - (int)v276 >= 0)
  {
    if (!v86) {
      goto LABEL_109;
    }
    v85 += v86;
    goto LABEL_105;
  }
  if (kDQuadParamTable[10 * v64 + 7] < (int)v276 - (int)v274)
  {
    if (!kDQuadParamTable[10 * v64 + 8])
    {
      int v86 = -1;
      unsigned int v85 = v82;
LABEL_105:
      v84 += v86;
      goto LABEL_109;
    }
    unsigned int v85 = v82;
  }
LABEL_109:
  int v87 = v78 + v263;
  if (v279 >= v84) {
    unint64_t v88 = v84;
  }
  else {
    unint64_t v88 = v279;
  }
  v272[2] = v88;
  if (v82) {
    unsigned int v89 = v279;
  }
  else {
    unsigned int v89 = 0;
  }
  if (v89 >= v85) {
    unint64_t v90 = v85;
  }
  else {
    unint64_t v90 = v89;
  }
  v271[2] = v90;
  unint64_t v92 = (unint64_t)&kDQuadParamTable[10 * v65];
  unsigned int v91 = *(_DWORD *)(v92 + 20);
  LODWORD(v92) = *(_DWORD *)(v92 + 16) + 1;
  unsigned int v93 = v91 + 1;
  int v94 = HIDWORD(v274) - HIDWORD(v276);
  if (HIDWORD(v274) - HIDWORD(v276) >= 0)
  {
    if (!v94) {
      goto LABEL_125;
    }
    v93 += v94;
    goto LABEL_121;
  }
  if (kDQuadParamTable[10 * v65 + 7] < HIDWORD(v276) - HIDWORD(v274))
  {
    if (!kDQuadParamTable[10 * v65 + 8])
    {
      int v94 = -1;
      unsigned int v93 = v91;
LABEL_121:
      LODWORD(v92) = v94 + v92;
      goto LABEL_125;
    }
    unsigned int v93 = v91;
  }
LABEL_125:
  if (v280 >= v92) {
    unint64_t v92 = v92;
  }
  else {
    unint64_t v92 = v280;
  }
  v272[3] = v92;
  if (v91) {
    LODWORD(v95) = v280;
  }
  else {
    LODWORD(v95) = 0;
  }
  if (v95 >= v93) {
    unint64_t v95 = v93;
  }
  else {
    unint64_t v95 = v95;
  }
  v271[3] = v95;
  int v96 = v87 + v46;
  uint64_t v269 = 0;
  uint64_t v270 = 0;
  if (v57 || __b - 8 > 4)
  {
    if (v70 <= 0x20)
    {
      int v97 = 0;
      if (v70 && v11 - v5 + (v15 << 6) + v70 <= 0xA0)
      {
        int v97 = 0;
        uint64_t v98 = 0;
        unint64_t v99 = v70;
        do
        {
          unint64_t v100 = 64 - v11;
          if (64 - v11 >= v99) {
            unint64_t v100 = v99;
          }
          v97 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v100)) << v98;
          v98 += v100;
          unint64_t v101 = v100 + v11;
          v15 += v101 >> 6;
          uint64_t v11 = v101 & 0x3F;
          v99 -= v100;
        }
        while (v99);
      }
    }
    else
    {
      int v97 = 0;
    }
    LODWORD(v269) = v97 << (__b - v70);
    v96 += v70;
    if (v63)
    {
LABEL_150:
      if (v79 <= 0x20)
      {
        int v102 = 0;
        if (v79 && v11 - v5 + (v15 << 6) + v79 <= 0xA0)
        {
          int v102 = 0;
          uint64_t v103 = 0;
          unint64_t v104 = v79;
          do
          {
            unint64_t v105 = 64 - v11;
            if (64 - v11 >= v104) {
              unint64_t v105 = v104;
            }
            v102 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v105)) << v103;
            v103 += v105;
            v15 += (v105 + v11) >> 6;
            uint64_t v11 = (v105 + v11) & 0x3F;
            v104 -= v105;
          }
          while (v104);
        }
      }
      else
      {
        int v102 = 0;
      }
      HIDWORD(v269) = v102 << (v278 - v79);
      v96 += v79;
      if (v64) {
        goto LABEL_162;
      }
      goto LABEL_159;
    }
  }
  else
  {
    LODWORD(v269) = v260;
    if (v63) {
      goto LABEL_150;
    }
  }
  if (v278 - 8 >= 5) {
    goto LABEL_150;
  }
  HIDWORD(v269) = v259;
  if (v64) {
    goto LABEL_162;
  }
LABEL_159:
  if (v279 - 8 < 5)
  {
    LODWORD(v270) = v258;
    if (v65) {
      goto LABEL_174;
    }
    goto LABEL_171;
  }
LABEL_162:
  if (v88 <= 0x20)
  {
    int v106 = 0;
    if (v88 && v11 - v5 + (v15 << 6) + v88 <= 0xA0)
    {
      int v106 = 0;
      uint64_t v107 = 0;
      unint64_t v108 = v88;
      do
      {
        unint64_t v109 = 64 - v11;
        if (64 - v11 >= v108) {
          unint64_t v109 = v108;
        }
        v106 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v109)) << v107;
        v107 += v109;
        v15 += (v109 + v11) >> 6;
        uint64_t v11 = (v109 + v11) & 0x3F;
        v108 -= v109;
      }
      while (v108);
    }
  }
  else
  {
    int v106 = 0;
  }
  LODWORD(v270) = v106 << (v279 - v88);
  v96 += v88;
  if (v65)
  {
LABEL_174:
    if (v92 <= 0x20)
    {
      int v111 = 0;
      if (v92)
      {
        uint64_t v110 = a2;
        if (v11 - v5 + (v15 << 6) + v92 <= 0xA0)
        {
          int v111 = 0;
          uint64_t v112 = 0;
          unint64_t v113 = v92;
          do
          {
            unint64_t v114 = 64 - v11;
            if (64 - v11 >= v113) {
              unint64_t v114 = v113;
            }
            v111 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v114)) << v112;
            v112 += v114;
            v15 += (v114 + v11) >> 6;
            uint64_t v11 = (v114 + v11) & 0x3F;
            v113 -= v114;
          }
          while (v113);
        }
LABEL_184:
        HIDWORD(v270) = v111 << (v280 - v92);
        v96 += v92;
        uint64_t v267 = 0;
        uint64_t v268 = 0;
        if (v71) {
          goto LABEL_185;
        }
        goto LABEL_192;
      }
    }
    else
    {
      int v111 = 0;
    }
    uint64_t v110 = a2;
    goto LABEL_184;
  }
LABEL_171:
  if (v280 - 8 >= 5) {
    goto LABEL_174;
  }
  HIDWORD(v270) = v257;
  uint64_t v110 = a2;
  uint64_t v267 = 0;
  uint64_t v268 = 0;
  if (v71)
  {
LABEL_185:
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xA0)
    {
      int v115 = 0;
      uint64_t v116 = 0;
      unint64_t v117 = 3;
      do
      {
        unint64_t v118 = 64 - v11;
        if (64 - v11 >= v117) {
          unint64_t v118 = v117;
        }
        v115 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v118)) << v116;
        v116 += v118;
        v15 += (v118 + v11) >> 6;
        uint64_t v11 = (v118 + v11) & 0x3F;
        v117 -= v118;
      }
      while (v117);
    }
    else
    {
      int v115 = 0;
    }
    LODWORD(v267) = v115;
    v96 += 3;
  }
LABEL_192:
  if (v80)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xA0)
    {
      int v119 = 0;
      uint64_t v120 = 0;
      unint64_t v121 = 3;
      do
      {
        unint64_t v122 = 64 - v11;
        if (64 - v11 >= v121) {
          unint64_t v122 = v121;
        }
        v119 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v122)) << v120;
        v120 += v122;
        v15 += (v122 + v11) >> 6;
        uint64_t v11 = (v122 + v11) & 0x3F;
        v121 -= v122;
      }
      while (v121);
    }
    else
    {
      int v119 = 0;
    }
    HIDWORD(v267) = v119;
    v96 += 3;
  }
  if (v90)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xA0)
    {
      int v123 = 0;
      uint64_t v124 = 0;
      unint64_t v125 = 3;
      do
      {
        unint64_t v126 = 64 - v11;
        if (64 - v11 >= v125) {
          unint64_t v126 = v125;
        }
        v123 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v126)) << v124;
        v124 += v126;
        v15 += (v126 + v11) >> 6;
        uint64_t v11 = (v126 + v11) & 0x3F;
        v125 -= v126;
      }
      while (v125);
    }
    else
    {
      int v123 = 0;
    }
    LODWORD(v268) = v123;
    v96 += 3;
  }
  if (v95)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xA0)
    {
      int v127 = 0;
      uint64_t v128 = 0;
      unint64_t v129 = 3;
      do
      {
        unint64_t v130 = 64 - v11;
        if (64 - v11 >= v129) {
          unint64_t v130 = v129;
        }
        v127 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v130)) << v128;
        v128 += v130;
        v15 += (v130 + v11) >> 6;
        uint64_t v11 = (v130 + v11) & 0x3F;
        v129 -= v130;
      }
      while (v129);
    }
    else
    {
      int v127 = 0;
    }
    HIDWORD(v268) = v127;
    v96 += 3;
  }
  uint64_t v131 = 0;
  unsigned int v132 = a3 & 0xFFFFFFFD;
  unsigned int v133 = 160 - v96;
  unsigned int v134 = (160 - v96) / 7u;
  unint64_t v135 = (v11 | (v15 << 6)) + v133 % 7;
  memset(v266, 0, sizeof(v266));
  do
  {
    unint64_t v138 = v135 >> 6;
    unint64_t v139 = v135 & 0x3F;
    if (v71)
    {
      if (v71 <= 0x20 && v139 - v5 + (v135 & 0xFFFFFFFFFFFFFFC0) + v71 <= 0xA0)
      {
        int v140 = 0;
        uint64_t v141 = 0;
        unint64_t v142 = v71;
        do
        {
          unint64_t v143 = 64 - v139;
          if (64 - v139 >= v142) {
            unint64_t v143 = v142;
          }
          v140 |= (unint64_t)((*(void *)(v4 + 8 * v138) >> v139) & ~(-1 << v143)) << v141;
          v141 += v143;
          unint64_t v144 = v143 + v139;
          v138 += v144 >> 6;
          unint64_t v139 = v144 & 0x3F;
          v142 -= v143;
        }
        while (v142);
      }
      else
      {
        int v140 = 0;
      }
      *((_DWORD *)v266 + v131) = v140;
    }
    if (!v80)
    {
      int v137 = v71;
      if (!v90) {
        goto LABEL_248;
      }
LABEL_240:
      if (v90 <= 0x20 && v139 - v5 + (v138 << 6) + v90 <= 0xA0)
      {
        int v150 = 0;
        uint64_t v151 = 0;
        unint64_t v152 = v90;
        do
        {
          unint64_t v153 = 64 - v139;
          if (64 - v139 >= v152) {
            unint64_t v153 = v152;
          }
          v150 |= (unint64_t)((*(void *)(v4 + 8 * v138) >> v139) & ~(-1 << v153)) << v151;
          v151 += v153;
          unint64_t v154 = v153 + v139;
          v138 += v154 >> 6;
          unint64_t v139 = v154 & 0x3F;
          v152 -= v153;
        }
        while (v152);
      }
      else
      {
        int v150 = 0;
      }
      *((_DWORD *)&v266[3] + v131 + 2) = v150;
      v137 += v90;
      goto LABEL_248;
    }
    if (v80 <= 0x20 && v139 - v5 + (v138 << 6) + v80 <= 0xA0)
    {
      int v145 = 0;
      uint64_t v146 = 0;
      unint64_t v147 = v80;
      do
      {
        unint64_t v148 = 64 - v139;
        if (64 - v139 >= v147) {
          unint64_t v148 = v147;
        }
        v145 |= (unint64_t)((*(void *)(v4 + 8 * v138) >> v139) & ~(-1 << v148)) << v146;
        v146 += v148;
        unint64_t v149 = v148 + v139;
        v138 += v149 >> 6;
        unint64_t v139 = v149 & 0x3F;
        v147 -= v148;
      }
      while (v147);
    }
    else
    {
      int v145 = 0;
    }
    *((_DWORD *)&v266[1] + v131 + 3) = v145;
    int v137 = v80 + v71;
    if (v90) {
      goto LABEL_240;
    }
LABEL_248:
    if (v95)
    {
      if (v95 > 0x20 || v139 - v5 + (v138 << 6) + v95 > 0xA0)
      {
        int v136 = 0;
      }
      else
      {
        int v136 = 0;
        uint64_t v155 = 0;
        unint64_t v156 = v95;
        do
        {
          unint64_t v157 = 64 - v139;
          if (64 - v139 >= v156) {
            unint64_t v157 = v156;
          }
          v136 |= (unint64_t)((*(void *)(v4 + 8 * v138) >> v139) & ~(-1 << v157)) << v155;
          v155 += v157;
          unint64_t v158 = v157 + v139;
          v138 += v158 >> 6;
          unint64_t v139 = v158 & 0x3F;
          v156 -= v157;
        }
        while (v156);
      }
      *((_DWORD *)&v266[5] + v131 + 1) = v136;
      v137 += v95;
    }
    unint64_t v135 = (v139 | (v138 << 6)) + v134 - v137;
    ++v131;
  }
  while (v131 != 7);
  unint64_t v159 = 0;
  uint64_t v160 = 0;
  uint64_t v161 = v110 + 112;
  do
  {
    unint64_t v166 = *(void *)&kDQuadParamTable[160 * v281[v159 / 4] + 2 + 10 * v282[v159 / 4]];
    int v167 = v271[v159 / 4];
    unint64_t v168 = v166 >> v167;
    if (v166 >> v167 <= 1) {
      unint64_t v168 = 1;
    }
    int v169 = *(unsigned int *)((char *)&__b + v159);
    unint64_t v170 = v168 >> 1;
    unint64_t v171 = (unint64_t)(1 << (v169 - v272[v159 / 4])) >> 1;
    if (v168 >> 1 < v171) {
      unint64_t v171 = v168 >> 1;
    }
    unint64_t v172 = (1 << (v169 - 1));
    unint64_t v173 = *(unsigned int *)((char *)&v269 + v159);
    unint64_t v174 = v172 - v173;
    unint64_t v175 = 1 << v169;
    int v176 = (1 << v169) - 1;
    if (v173) {
      unint64_t v177 = v171;
    }
    else {
      unint64_t v177 = 0;
    }
    BOOL v178 = v173 == v172;
    BOOL v179 = v169 == 16;
    if (v169 == 16) {
      unint64_t result = 31744;
    }
    else {
      unint64_t result = 2139095040;
    }
    if (v169 == 16) {
      unint64_t v181 = 64512;
    }
    else {
      unint64_t v181 = 4286578688;
    }
    unint64_t v182 = 2143289344;
    if (v179) {
      unint64_t v182 = 32256;
    }
    unint64_t v183 = 4290772992;
    if (v179) {
      unint64_t v183 = 65024;
    }
    unint64_t v184 = (v181 - 1);
    if (v167)
    {
      unint64_t v185 = v166 + v173;
      uint64_t v186 = ~(-1 << v167);
      int v187 = *(_DWORD *)((char *)&v267 + v159);
      unint64_t v188 = v174 / v168;
      if (!v187)
      {
        uint64_t v197 = 0;
        unint64_t v191 = v177;
        BOOL v190 = v173 == v172;
        goto LABEL_319;
      }
      uint64_t v189 = *(unsigned int *)((char *)v266 + v160);
      BOOL v190 = v188 == v189;
      if (v173 | v189)
      {
        if (v185 >= v175 && v189 == v186)
        {
          uint64_t v197 = 1;
          unint64_t v191 = v175 - 1;
          goto LABEL_319;
        }
        unint64_t v191 = v170 + v168 * v189;
      }
      else
      {
        unint64_t v191 = 0;
      }
      uint64_t v197 = 1;
LABEL_319:
      unint64_t v198 = v191 + v173;
      unint64_t v199 = v198;
      if (a3 == 4)
      {
        BOOL v200 = v198 < result || v198 >= v182;
        unint64_t v199 = (result - 1);
        if (v200)
        {
          BOOL v201 = v198 < v182 || v198 >= v172;
          unint64_t v199 = v172;
          if (v201)
          {
            if (v198 < v183 && v198 >= v181) {
              unint64_t v199 = (v181 - 1);
            }
            else {
              unint64_t v199 = v198;
            }
          }
        }
      }
      if (v199 >= v175) {
        int v203 = v176;
      }
      else {
        int v203 = v199;
      }
      if (v190) {
        int v204 = 0;
      }
      else {
        int v204 = v203 ^ v172;
      }
      if (v132 != 1) {
        int v204 = v203;
      }
      *(_DWORD *)(v161 + v159 - 112) = v204;
      if (v187 == 1)
      {
        unint64_t v205 = v177;
        BOOL v206 = v173 == v172;
      }
      else
      {
        uint64_t v207 = *(unsigned int *)(((unint64_t)v266 | (4 * v197)) + v160);
        BOOL v206 = v188 == v207;
        if (v173 | v207)
        {
          if (v185 < v175 || (unint64_t v205 = v175 - 1, v207 != v186)) {
            unint64_t v205 = v170 + v168 * v207;
          }
        }
        else
        {
          unint64_t v205 = 0;
        }
        ++v197;
      }
      unint64_t v208 = v205 + v173;
      unint64_t v209 = v208;
      if (a3 == 4)
      {
        BOOL v210 = v208 < result || v208 >= v182;
        unint64_t v209 = (result - 1);
        if (v210)
        {
          if (v208 < v182 || (unint64_t v209 = v172, v208 >= v172))
          {
            if (v208 < v183 && v208 >= v181) {
              unint64_t v209 = (v181 - 1);
            }
            else {
              unint64_t v209 = v208;
            }
          }
        }
      }
      if (v209 >= v175) {
        int v212 = v176;
      }
      else {
        int v212 = v209;
      }
      if (v206) {
        int v213 = 0;
      }
      else {
        int v213 = v212 ^ v172;
      }
      if (v132 != 1) {
        int v213 = v212;
      }
      *(_DWORD *)(v161 + v159 - 96) = v213;
      if (v187 == 2)
      {
        unint64_t v214 = v177;
        BOOL v215 = v173 == v172;
      }
      else
      {
        uint64_t v216 = *(unsigned int *)(((unint64_t)v266 | (4 * v197)) + v160);
        BOOL v215 = v188 == v216;
        if (v173 | v216)
        {
          if (v185 < v175 || (unint64_t v214 = v175 - 1, v216 != v186)) {
            unint64_t v214 = v170 + v168 * v216;
          }
        }
        else
        {
          unint64_t v214 = 0;
        }
        ++v197;
      }
      unint64_t v217 = v214 + v173;
      unint64_t v218 = v217;
      if (a3 == 4)
      {
        if (v217 < result || (unint64_t v218 = (result - 1), v217 >= v182))
        {
          if (v217 < v182 || (unint64_t v218 = v172, v217 >= v172))
          {
            if (v217 < v183 && v217 >= v181) {
              unint64_t v218 = (v181 - 1);
            }
            else {
              unint64_t v218 = v217;
            }
          }
        }
      }
      if (v218 >= v175) {
        int v220 = v176;
      }
      else {
        int v220 = v218;
      }
      if (v215) {
        int v221 = 0;
      }
      else {
        int v221 = v220 ^ v172;
      }
      if (v132 != 1) {
        int v221 = v220;
      }
      *(_DWORD *)(v161 + v159 - 80) = v221;
      if (v187 == 3)
      {
        unint64_t v222 = v177;
        BOOL v223 = v173 == v172;
      }
      else
      {
        uint64_t v224 = *(unsigned int *)((char *)v266 + 4 * v197 + v160);
        BOOL v223 = v188 == v224;
        if (v173 | v224)
        {
          if (v185 < v175 || (unint64_t v222 = v175 - 1, v224 != v186)) {
            unint64_t v222 = v170 + v168 * v224;
          }
        }
        else
        {
          unint64_t v222 = 0;
        }
        ++v197;
      }
      unint64_t v225 = v222 + v173;
      unint64_t v226 = v225;
      if (a3 == 4)
      {
        if (v225 < result || (unint64_t v226 = (result - 1), v225 >= v182))
        {
          if (v225 < v182 || (unint64_t v226 = v172, v225 >= v172))
          {
            if (v225 < v183 && v225 >= v181) {
              unint64_t v226 = (v181 - 1);
            }
            else {
              unint64_t v226 = v225;
            }
          }
        }
      }
      if (v226 >= v175) {
        int v228 = v176;
      }
      else {
        int v228 = v226;
      }
      if (v223) {
        int v229 = 0;
      }
      else {
        int v229 = v228 ^ v172;
      }
      if (v132 != 1) {
        int v229 = v228;
      }
      *(_DWORD *)(v161 + v159 - 64) = v229;
      if (v187 == 4)
      {
        unint64_t v230 = v177;
        BOOL v231 = v173 == v172;
      }
      else
      {
        uint64_t v232 = *(unsigned int *)((char *)v266 + 4 * v197 + v160);
        BOOL v231 = v188 == v232;
        if (v173 | v232)
        {
          if (v185 < v175 || (unint64_t v230 = v175 - 1, v232 != v186)) {
            unint64_t v230 = v170 + v168 * v232;
          }
        }
        else
        {
          unint64_t v230 = 0;
        }
        ++v197;
      }
      unint64_t v233 = v230 + v173;
      unint64_t v234 = v233;
      if (a3 == 4)
      {
        if (v233 < result || (unint64_t v234 = (result - 1), v233 >= v182))
        {
          if (v233 < v182 || (unint64_t v234 = v172, v233 >= v172))
          {
            if (v233 < v183 && v233 >= v181) {
              unint64_t v234 = (v181 - 1);
            }
            else {
              unint64_t v234 = v233;
            }
          }
        }
      }
      if (v234 >= v175) {
        int v236 = v176;
      }
      else {
        int v236 = v234;
      }
      if (v231) {
        int v237 = 0;
      }
      else {
        int v237 = v236 ^ v172;
      }
      if (v132 != 1) {
        int v237 = v236;
      }
      *(_DWORD *)(v161 + v159 - 48) = v237;
      if (v187 == 5)
      {
        unint64_t v238 = v177;
        BOOL v239 = v173 == v172;
      }
      else
      {
        uint64_t v240 = *(unsigned int *)((char *)v266 + 4 * v197 + v160);
        BOOL v239 = v188 == v240;
        if (v173 | v240)
        {
          if (v185 < v175 || (unint64_t v238 = v175 - 1, v240 != v186)) {
            unint64_t v238 = v170 + v168 * v240;
          }
        }
        else
        {
          unint64_t v238 = 0;
        }
        ++v197;
      }
      unint64_t v241 = v238 + v173;
      unint64_t v242 = v241;
      if (a3 == 4)
      {
        if (v241 < result || (unint64_t v242 = (result - 1), v241 >= v182))
        {
          if (v241 < v182 || (unint64_t v242 = v172, v241 >= v172))
          {
            if (v241 < v183 && v241 >= v181) {
              unint64_t v242 = (v181 - 1);
            }
            else {
              unint64_t v242 = v241;
            }
          }
        }
      }
      if (v242 >= v175) {
        int v244 = v176;
      }
      else {
        int v244 = v242;
      }
      if (v239) {
        int v245 = 0;
      }
      else {
        int v245 = v244 ^ v172;
      }
      if (v132 != 1) {
        int v245 = v244;
      }
      *(_DWORD *)(v161 + v159 - 32) = v245;
      if (v187 == 6)
      {
        unint64_t v246 = v177;
        BOOL v247 = v173 == v172;
      }
      else
      {
        uint64_t v248 = *(unsigned int *)((char *)v266 + 4 * v197 + v160);
        BOOL v247 = v188 == v248;
        if (v173 | v248)
        {
          if (v185 < v175 || (unint64_t v246 = v175 - 1, v248 != v186)) {
            unint64_t v246 = v170 + v168 * v248;
          }
        }
        else
        {
          unint64_t v246 = 0;
        }
        ++v197;
      }
      unint64_t v249 = v246 + v173;
      unint64_t v250 = v249;
      if (a3 == 4)
      {
        if (v249 < result || (unint64_t v250 = (result - 1), v249 >= v182))
        {
          if (v249 < v182 || (unint64_t v250 = v172, v249 >= v172))
          {
            if (v249 < v183 && v249 >= v181) {
              unint64_t v250 = (v181 - 1);
            }
            else {
              unint64_t v250 = v249;
            }
          }
        }
      }
      if (v250 >= v175) {
        int v252 = v176;
      }
      else {
        int v252 = v250;
      }
      if (v247) {
        int v253 = 0;
      }
      else {
        int v253 = v252 ^ v172;
      }
      if (v132 != 1) {
        int v253 = v252;
      }
      *(_DWORD *)(v161 + v159 - 16) = v253;
      if (v187 != 7)
      {
        uint64_t v254 = *(unsigned int *)((char *)v266 + 4 * v197 + v160);
        BOOL v178 = v188 == v254;
        if (v173 | v254)
        {
          if (v185 >= v175 && v254 == v186) {
            unint64_t v177 = v175 - 1;
          }
          else {
            unint64_t v177 = v170 + v168 * v254;
          }
        }
        else
        {
          unint64_t v177 = 0;
        }
      }
      unint64_t v255 = v177 + v173;
      unint64_t v163 = v177 + v173;
      if (a3 == 4)
      {
        if (v255 < result || (unint64_t v163 = (result - 1), v255 >= v182))
        {
          if (v255 < v182 || (unint64_t v163 = v172, v255 >= v172))
          {
            if (v255 < v183 && v255 >= v181) {
              unint64_t v163 = (v181 - 1);
            }
            else {
              unint64_t v163 = v177 + v173;
            }
          }
        }
      }
      if (v163 >= v175) {
        int v164 = v176;
      }
      else {
        int v164 = v163;
      }
      int v165 = v164 ^ v172;
      if (v178) {
        int v165 = 0;
      }
      if (v132 == 1) {
        int v164 = v165;
      }
      goto LABEL_270;
    }
    BOOL v193 = v182 <= v173 && v173 < v172;
    BOOL v195 = v173 >= v181 && v183 > v173;
    if (a3 == 4)
    {
      if (v173 < result || v182 <= v173)
      {
        if (v193)
        {
          if (v175 <= v172) {
            LODWORD(v196) = v176;
          }
          else {
            LODWORD(v196) = v172;
          }
        }
        else
        {
          if (v195) {
            unint64_t v196 = v184;
          }
          else {
            unint64_t v196 = *(unsigned int *)((char *)&v269 + v159);
          }
          if (v196 >= v175) {
            LODWORD(v196) = v176;
          }
        }
      }
      else if (v175 <= (result - 1))
      {
        LODWORD(v196) = v176;
      }
      else
      {
        LODWORD(v196) = result - 1;
      }
    }
    else if (v175 <= v173)
    {
      LODWORD(v196) = v176;
    }
    else
    {
      LODWORD(v196) = *(_DWORD *)((char *)&v269 + v159);
    }
    if (v168 <= v174) {
      int v164 = v196 ^ v172;
    }
    else {
      int v164 = 0;
    }
    if (v132 != 1) {
      int v164 = v196;
    }
    uint64_t v256 = v161 + v159;
    *(_DWORD *)(v256 - 112) = v164;
    *(_DWORD *)(v256 - 96) = v164;
    *(_DWORD *)(v256 - 80) = v164;
    *(_DWORD *)(v256 - 64) = v164;
    *(_DWORD *)(v256 - 48) = v164;
    *(_DWORD *)(v256 - 32) = v164;
    *(_DWORD *)(v256 - 16) = v164;
LABEL_270:
    *(_DWORD *)(v161 + v159) = v164;
    v160 += 28;
    v159 += 4;
  }
  while (v160 != 112);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(float32x4_t *a1, uint64_t a2, unint64_t a3, unsigned int a4, int a5)
{
  uint64_t v405 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v19 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    uint64_t v20 = (_OWORD *)((char *)a1->f32 + a2);
    *uint64_t v20 = 0u;
    v20[1] = 0u;
    unint64_t v21 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *unint64_t v21 = 0u;
    v21[1] = 0u;
    unint64_t v22 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
LABEL_161:
    *unint64_t v22 = v19;
    v22[1] = v19;
    return result;
  }
  char v15 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v390, a5);
    }
    int32x4_t v378 = v391;
    int32x4_t v380 = v390;
    int32x4_t v374 = v393;
    int32x4_t v376 = v392;
    int32x4_t v372 = v395;
    int32x4_t v373 = v394;
    unint64_t v27 = a3 + 20;
    int32x4_t v370 = v397;
    int32x4_t v371 = v396;
    if ((v15 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v27, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v27, (uint64_t)&v390, a5);
    }
    int32x4_t v368 = v391;
    int32x4_t v369 = v390;
    int32x4_t v366 = v393;
    int32x4_t v367 = v392;
    int32x4_t v364 = v395;
    int32x4_t v365 = v394;
    unint64_t v28 = a3 + 40;
    int32x4_t v363 = v396;
    int32x4_t v382 = v397;
    if ((v15 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v28, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v28, (uint64_t)&v390, a5);
    }
    int32x4_t v361 = v391;
    int32x4_t v362 = v390;
    int32x4_t v359 = v393;
    int32x4_t v360 = v392;
    int32x4_t v357 = v395;
    int32x4_t v358 = v394;
    unint64_t v29 = a3 + 60;
    int32x4_t v355 = v397;
    int32x4_t v356 = v396;
    if ((v15 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v390, a5);
    }
    *(int16x4_t *)v38.i8 = vmovn_s32(v355);
    *(int16x4_t *)v42.i8 = vmovn_s32(v356);
    *(int16x4_t *)v47.i8 = vmovn_s32(v357);
    *(int16x4_t *)v49.i8 = vmovn_s32(v358);
    *(int16x4_t *)v44.i8 = vmovn_s32(v359);
    *(int16x4_t *)v45.i8 = vmovn_s32(v360);
    *(int16x4_t *)v5.i8 = vmovn_s32(v361);
    *(int16x4_t *)v6.i8 = vmovn_s32(v362);
    v50.i64[1] = v382.i64[1];
    *(int16x4_t *)v50.i8 = vmovn_s32(v382);
    int16x8_t v383 = v50;
    *(int16x4_t *)v30.i8 = vmovn_s32(v363);
    *(int16x4_t *)v34.i8 = vmovn_s32(v364);
    *(int16x4_t *)v35.i8 = vmovn_s32(v365);
    *(int16x4_t *)v31.i8 = vmovn_s32(v366);
    *(int16x4_t *)v33.i8 = vmovn_s32(v367);
    *(int16x4_t *)v41.i8 = vmovn_s32(v368);
    *(int16x4_t *)v43.i8 = vmovn_s32(v369);
    *(int16x4_t *)v46.i8 = vmovn_s32(v370);
    *(int16x4_t *)v48.i8 = vmovn_s32(v371);
    *(int16x4_t *)v7.i8 = vmovn_s32(v372);
    *(int16x4_t *)v8.i8 = vmovn_s32(v373);
    *(int16x4_t *)v9.i8 = vmovn_s32(v374);
    *(int16x4_t *)v10.i8 = vmovn_s32(v376);
    *(int16x4_t *)v11.i8 = vmovn_s32(v378);
    *(int16x4_t *)v12.i8 = vmovn_s32(v380);
    *(int16x4_t *)v39.i8 = vmovn_s32(v390);
    *(int16x4_t *)v37.i8 = vmovn_s32(v391);
    v51.i64[1] = v393.i64[1];
    *(int16x4_t *)v32.i8 = vmovn_s32(v392);
    *(int16x4_t *)v51.i8 = vmovn_s32(v393);
    v52.i64[1] = v395.i64[1];
    *(int16x4_t *)v40.i8 = vmovn_s32(v394);
    *(int16x4_t *)v36.i8 = vmovn_s32(v395);
    v53.i64[1] = v396.i64[1];
    *(int16x4_t *)v52.i8 = vmovn_s32(v396);
    *(int16x4_t *)v53.i8 = vmovn_s32(v397);
    v50.i32[0] = vmovn_s16(v12).u32[0];
    v50.i32[1] = vmovn_s16(v11).u32[0];
    v50.i32[2] = vmovn_s16(v8).u32[0];
    v50.i32[3] = vmovn_s16(v7).u32[0];
    v54.i32[0] = vmovn_s16(v6).u32[0];
    v54.i32[1] = vmovn_s16(v5).u32[0];
    v54.i32[2] = vmovn_s16(v49).u32[0];
    v54.i32[3] = vmovn_s16(v47).u32[0];
    *a1 = (float32x4_t)v50;
    a1[1] = v54;
    v50.i32[0] = vmovn_s16(v10).u32[0];
    v50.i32[1] = vmovn_s16(v9).u32[0];
    v50.i32[2] = vmovn_s16(v48).u32[0];
    v50.i32[3] = vmovn_s16(v46).u32[0];
    uint64_t v55 = (int16x8_t *)((char *)a1 + a2);
    v56.i32[0] = vmovn_s16(v45).u32[0];
    v56.i32[1] = vmovn_s16(v44).u32[0];
    v56.i32[2] = vmovn_s16(v42).u32[0];
    v56.i32[3] = vmovn_s16(v38).u32[0];
    *uint64_t v55 = v50;
    v55[1] = v56;
    v50.i32[0] = vmovn_s16(v43).u32[0];
    v50.i32[1] = vmovn_s16(v41).u32[0];
    v50.i32[2] = vmovn_s16(v35).u32[0];
    v50.i32[3] = vmovn_s16(v34).u32[0];
    v57.i32[0] = vmovn_s16(v39).u32[0];
    v57.i32[1] = vmovn_s16(v37).u32[0];
    v57.i32[2] = vmovn_s16(v40).u32[0];
    unint64_t v58 = (int16x8_t *)((char *)a1 + a2 + a2);
    v57.i32[3] = vmovn_s16(v36).u32[0];
    LODWORD(v59) = vmovn_s16(v33).u32[0];
    DWORD1(v59) = vmovn_s16(v31).u32[0];
    DWORD2(v59) = vmovn_s16(v30).u32[0];
    *unint64_t v58 = v50;
    v58[1] = v57;
    HIDWORD(v59) = vmovn_s16(v383).u32[0];
    v50.i32[0] = vmovn_s16(v32).u32[0];
    v50.i32[1] = vmovn_s16(v51).u32[0];
    v50.i32[2] = vmovn_s16(v52).u32[0];
    v50.i32[3] = vmovn_s16(v53).u32[0];
    unsigned int v60 = &v58->i8[a2];
    *(_OWORD *)unsigned int v60 = v59;
    *((int16x8_t *)v60 + 1) = v50;
    return 80;
  }
  if (a4 == 127)
  {
    int64x2_t v61 = *(int64x2_t *)a3;
    int64x2_t v62 = *(int64x2_t *)(a3 + 16);
    int64x2_t v63 = *(int64x2_t *)(a3 + 32);
    int64x2_t v64 = *(int64x2_t *)(a3 + 48);
    int64x2_t v65 = *(int64x2_t *)(a3 + 64);
    int64x2_t v66 = *(int64x2_t *)(a3 + 80);
    int64x2_t v67 = *(int64x2_t *)(a3 + 96);
    int64x2_t v68 = *(int64x2_t *)(a3 + 112);
    int v69 = (int64x2_t *)((char *)a1 + a2);
    *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v62);
    a1[1] = (float32x4_t)vzip1q_s64(v65, v66);
    unint64_t v70 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int v69 = vzip2q_s64(v61, v62);
    v69[1] = vzip2q_s64(v65, v66);
    *unint64_t v70 = vzip1q_s64(v63, v64);
    v70[1] = vzip1q_s64(v67, v68);
    unint64_t v71 = (int64x2_t *)((char *)v70 + a2);
    *unint64_t v71 = vzip2q_s64(v63, v64);
    v71[1] = vzip2q_s64(v67, v68);
    return 128;
  }
  if (a4 == 3)
  {
    float32x4_t v23 = vld1q_dup_f32((const float *)a3);
    *a1 = v23;
    a1[1] = v23;
    unint64_t v24 = (float32x4_t *)((char *)a1 + a2);
    *unint64_t v24 = v23;
    v24[1] = v23;
    uint64_t v25 = (float32x4_t *)((char *)a1 + 2 * a2);
    *uint64_t v25 = v23;
    v25[1] = v23;
    int v26 = (float32x4_t *)((char *)a1 + 2 * a2 + a2);
    *int v26 = v23;
    v26[1] = v23;
    return 4;
  }
  unsigned __int8 v388 = 0;
  unint64_t v385 = 8 * (a3 & 7);
  unint64_t v386 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v387 = v385 | 0x280;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v399, (uint64_t)v404, (float *)v398.i32, &v385, a4);
  v73.i64[0] = 0x303030303030303;
  v73.i64[1] = 0x303030303030303;
  int8x16_t v74 = vandq_s8(v399, v73);
  int8x16_t v75 = vbicq_s8(v404[0], vceqq_s8(v74, v73));
  v404[0] = v75;
  int8x16_t v400 = v75;
  int8x16_t v401 = v75;
  int8x16_t v402 = v75;
  int8x16_t v403 = v75;
  v76.i64[0] = 0x202020202020202;
  v76.i64[1] = 0x202020202020202;
  int8x16_t v77 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v399.i8), (int16x4_t)0x4000400040004)), v76);
  unint64_t v78 = v385;
  if (vmaxvq_s8(v77) < 1)
  {
    v91.i64[0] = -1;
    v91.i64[1] = -1;
    int8x16_t v377 = v91;
    int8x16_t v379 = v91;
    int8x16_t v375 = v91;
    int8x16_t v381 = v91;
  }
  else
  {
    int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v77, v77));
    int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
    unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
    v82.i64[0] = v81;
    v82.i64[1] = HIDWORD(v81);
    int64x2_t v83 = v82;
    unint64_t v84 = vaddvq_s64(v82);
    unint64_t v85 = v84;
    unint64_t v86 = v385 + v84;
    if (v387) {
      BOOL v87 = v387 >= v86;
    }
    else {
      BOOL v87 = 1;
    }
    int v88 = !v87;
    if (v84 <= 0x80 && v88 == 0)
    {
      v72.i64[0] = 63;
      unint64_t v92 = (int64x2_t *)(v386 + 8 * (v385 >> 6));
      int64x2_t v93 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v385, v72).i64[0], 0), vzip1q_s64((int64x2_t)0, v83));
      int8x16_t v90 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v93)));
      if ((v385 & 0x3F) + v85 >= 0x81) {
        int8x16_t v90 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v93))), v90);
      }
      unint64_t v78 = v86;
    }
    else
    {
      unsigned __int8 v388 = 1;
      int8x16_t v90 = 0uLL;
    }
    int32x2_t v94 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v95.i64[0] = v94.u32[0];
    v95.i64[1] = v94.u32[1];
    int64x2_t v96 = (int64x2_t)vshlq_u64((uint64x2_t)v90, (uint64x2_t)vnegq_s64(v95));
    *(int32x2_t *)v90.i8 = vmovn_s64((int64x2_t)v90);
    *(int32x2_t *)v96.i8 = vmovn_s64(v96);
    int16x8_t v97 = (int16x8_t)vzip1q_s32((int32x4_t)v90, (int32x4_t)v96);
    int16x8_t v98 = (int16x8_t)vshlq_u32((uint32x4_t)v97, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v97.i8 = vmovn_s32((int32x4_t)v97);
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    int8x16_t v99 = (int8x16_t)vzip1q_s16(v97, v98);
    int8x16_t v100 = (int8x16_t)vshlq_u16((uint16x8_t)v99, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v77.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL)))));
    *(int8x8_t *)v99.i8 = vmovn_s16((int16x8_t)v99);
    *(int8x8_t *)v100.i8 = vmovn_s16((int16x8_t)v100);
    int8x16_t v101 = vzip1q_s8(v99, v100);
    v100.i64[0] = 0x101010101010101;
    v100.i64[1] = 0x101010101010101;
    int8x16_t v102 = vshlq_s8(v100, v77);
    v100.i64[0] = -1;
    v100.i64[1] = -1;
    int32x4_t v103 = (int32x4_t)vqtbl1q_s8(vandq_s8(v101, vaddq_s8(v102, v100)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v104 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v103.i8, 0);
    int8x16_t v105 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v103.i8, 1);
    int8x16_t v106 = (int8x16_t)vdupq_laneq_s32(v103, 2);
    int8x16_t v107 = (int8x16_t)vdupq_laneq_s32(v103, 3);
    int8x16_t v400 = vsubq_s8(v400, v104);
    int8x16_t v401 = vsubq_s8(v401, v105);
    int8x16_t v402 = vsubq_s8(v402, v106);
    int8x16_t v403 = vsubq_s8(v403, v107);
    int8x16_t v381 = vceqzq_s8(v104);
    int8x16_t v375 = vceqzq_s8(v105);
    int8x16_t v377 = vceqzq_s8(v106);
    int8x16_t v379 = vceqzq_s8(v107);
  }
  v108.i64[0] = 0x808080808080808;
  v108.i64[1] = 0x808080808080808;
  int8x16_t v109 = 0uLL;
  int8x16_t v110 = vandq_s8(vextq_s8(vtstq_s8(v399, v108), (int8x16_t)0, 0xCuLL), v75);
  int8x16_t v111 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v110, v110));
  int8x16_t v112 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v111, (int16x8_t)v111));
  unint64_t v113 = vpaddq_s32((int32x4_t)v112, (int32x4_t)v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v387) {
    BOOL v117 = v387 >= v78 + v116;
  }
  else {
    BOOL v117 = 1;
  }
  int v118 = !v117;
  if (v116 <= 0x80 && v118 == 0)
  {
    int64x2_t v120 = vaddq_s64(vdupq_n_s64(v78 & 0x3F), vzip1q_s64((int64x2_t)0, v115));
    unint64_t v121 = (int64x2_t *)(v386 + 8 * (v78 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v121, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v121->i64[0], 0), (uint64x2_t)vnegq_s64(v120)));
    if ((v78 & 0x3F) + v116 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v121[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v121[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v120))), v109);
    }
    v78 += v116;
  }
  else
  {
    unsigned __int8 v388 = 1;
  }
  int v122 = v399.i8[0] & 3;
  if (v122 == 2)
  {
    unint64_t v123 = v78 + 4;
    if (v387)
    {
      if (v387 >= v123)
      {
        unint64_t v124 = v78 + 8;
        v78 += 4;
      }
      else
      {
        unsigned __int8 v388 = 1;
        unint64_t v124 = v78 + 4;
      }
      if (v387 < v124)
      {
        unsigned __int8 v388 = 1;
        goto LABEL_61;
      }
      unint64_t v123 = v78;
    }
    unint64_t v78 = v123 + 4;
  }
LABEL_61:
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v400, 0xCuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v126, v126));
  int8x16_t v128 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v127, (int16x8_t)v127));
  unint64_t v129 = vpaddq_s32((int32x4_t)v128, (int32x4_t)v128).u64[0];
  v130.i64[0] = v129;
  v130.i64[1] = HIDWORD(v129);
  int64x2_t v131 = v130;
  unint64_t v132 = vaddvq_s64(v130);
  unint64_t v133 = v78 + v132;
  if (v387) {
    BOOL v134 = v387 >= v133;
  }
  else {
    BOOL v134 = 1;
  }
  int v135 = !v134;
  int8x16_t v384 = v74;
  if (v132 > 0x80 || v135)
  {
    int v140 = 1;
    unint64_t v138 = v386;
  }
  else
  {
    unint64_t v136 = v78 & 0x3F;
    int64x2_t v137 = vaddq_s64(vdupq_n_s64(v136), vzip1q_s64((int64x2_t)0, v131));
    unint64_t v138 = v386;
    unint64_t v139 = (int64x2_t *)(v386 + 8 * (v78 >> 6));
    int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v139, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139->i64[0], 0), (uint64x2_t)vnegq_s64(v137)));
    if (v136 + v132 >= 0x81) {
      int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v139[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v137))), v125);
    }
    int v140 = v388;
    unint64_t v78 = v133;
  }
  int8x16_t v141 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v400, v400));
  int8x16_t v142 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v141, (int16x8_t)v141));
  unint64_t v143 = vpaddq_s32((int32x4_t)v142, (int32x4_t)v142).u64[0];
  v144.i64[0] = v143;
  v144.i64[1] = HIDWORD(v143);
  int64x2_t v145 = v144;
  unint64_t v146 = vaddvq_s64(v144);
  unint64_t v147 = v78 + v146;
  if (v387) {
    BOOL v148 = v387 >= v147;
  }
  else {
    BOOL v148 = 1;
  }
  char v149 = !v148;
  int8x16_t v150 = 0uLL;
  if (v146 > 0x80 || (v149 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v147 = v78;
    int8x16_t v154 = 0uLL;
  }
  else
  {
    unint64_t v151 = v78 & 0x3F;
    int64x2_t v152 = vaddq_s64(vdupq_n_s64(v151), vzip1q_s64((int64x2_t)0, v145));
    unint64_t v153 = (int64x2_t *)(v138 + 8 * (v78 >> 6));
    int8x16_t v154 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v153, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153->i64[0], 0), (uint64x2_t)vnegq_s64(v152)));
    if (v151 + v146 >= 0x81) {
      int8x16_t v154 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v153[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v152))), v154);
    }
  }
  int8x16_t v155 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v401, v401));
  int8x16_t v156 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v155, (int16x8_t)v155));
  unint64_t v157 = vpaddq_s32((int32x4_t)v156, (int32x4_t)v156).u64[0];
  v158.i64[0] = v157;
  v158.i64[1] = HIDWORD(v157);
  int64x2_t v159 = v158;
  unint64_t v160 = vaddvq_s64(v158);
  unint64_t v161 = v160;
  unint64_t v162 = v147 + v160;
  if (v387) {
    BOOL v163 = v387 >= v162;
  }
  else {
    BOOL v163 = 1;
  }
  char v164 = !v163;
  if (v160 > 0x80 || (v164 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v162 = v147;
  }
  else
  {
    unint64_t v165 = v147 & 0x3F;
    int64x2_t v166 = vaddq_s64(vdupq_n_s64(v165), vzip1q_s64((int64x2_t)0, v159));
    int v167 = (int64x2_t *)(v138 + 8 * (v147 >> 6));
    int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v167, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v166)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v167->i64[0], 0), (uint64x2_t)vnegq_s64(v166)));
    if (v165 + v161 >= 0x81) {
      int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v167[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v166)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v167[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v166))), v150);
    }
  }
  unint64_t v168 = v162 + v161;
  if (v387) {
    BOOL v169 = v387 >= v168;
  }
  else {
    BOOL v169 = 1;
  }
  char v170 = !v169;
  int8x16_t v171 = 0uLL;
  if (v161 > 0x80 || (v170 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v168 = v162;
    int8x16_t v175 = 0uLL;
  }
  else
  {
    unint64_t v172 = v162 & 0x3F;
    int64x2_t v173 = vaddq_s64(vdupq_n_s64(v172), vzip1q_s64((int64x2_t)0, v159));
    unint64_t v174 = (int64x2_t *)(v138 + 8 * (v162 >> 6));
    int8x16_t v175 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v174, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v174->i64[0], 0), (uint64x2_t)vnegq_s64(v173)));
    if (v172 + v161 >= 0x81) {
      int8x16_t v175 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v174[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v174[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v173))), v175);
    }
  }
  int8x16_t v176 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v402, v402));
  int8x16_t v177 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v176, (int16x8_t)v176));
  unint64_t v178 = vpaddq_s32((int32x4_t)v177, (int32x4_t)v177).u64[0];
  v179.i64[0] = v178;
  v179.i64[1] = HIDWORD(v178);
  int64x2_t v180 = v179;
  unint64_t v181 = vaddvq_s64(v179);
  unint64_t v182 = v181;
  unint64_t v183 = v168 + v181;
  if (v387) {
    BOOL v184 = v387 >= v183;
  }
  else {
    BOOL v184 = 1;
  }
  char v185 = !v184;
  if (v181 > 0x80 || (v185 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v183 = v168;
  }
  else
  {
    unint64_t v186 = v168 & 0x3F;
    int64x2_t v187 = vaddq_s64(vdupq_n_s64(v186), vzip1q_s64((int64x2_t)0, v180));
    unint64_t v188 = (int64x2_t *)(v138 + 8 * (v168 >> 6));
    int8x16_t v171 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v188, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v187)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v188->i64[0], 0), (uint64x2_t)vnegq_s64(v187)));
    if (v186 + v182 >= 0x81) {
      int8x16_t v171 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v188[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v187)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v188[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v187))), v171);
    }
  }
  unint64_t v189 = v183 + v182;
  if (v387) {
    BOOL v190 = v387 >= v189;
  }
  else {
    BOOL v190 = 1;
  }
  char v191 = !v190;
  int8x16_t v192 = 0uLL;
  if (v182 > 0x80 || (v191 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v189 = v183;
    int8x16_t v196 = 0uLL;
  }
  else
  {
    unint64_t v193 = v183 & 0x3F;
    int64x2_t v194 = vaddq_s64(vdupq_n_s64(v193), vzip1q_s64((int64x2_t)0, v180));
    BOOL v195 = (int64x2_t *)(v138 + 8 * (v183 >> 6));
    int8x16_t v196 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v195, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v194)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195->i64[0], 0), (uint64x2_t)vnegq_s64(v194)));
    if (v193 + v182 >= 0x81) {
      int8x16_t v196 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v194)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v195[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v194))), v196);
    }
  }
  int8x16_t v197 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v403, v403));
  int8x16_t v198 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v197, (int16x8_t)v197));
  unint64_t v199 = vpaddq_s32((int32x4_t)v198, (int32x4_t)v198).u64[0];
  v200.i64[0] = v199;
  v200.i64[1] = HIDWORD(v199);
  int64x2_t v201 = v200;
  unint64_t v202 = vaddvq_s64(v200);
  unint64_t v203 = v202;
  unint64_t v204 = v189 + v202;
  if (v387) {
    BOOL v205 = v387 >= v204;
  }
  else {
    BOOL v205 = 1;
  }
  char v206 = !v205;
  if (v202 > 0x80 || (v206 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v204 = v189;
  }
  else
  {
    unint64_t v207 = v189 & 0x3F;
    int64x2_t v208 = vaddq_s64(vdupq_n_s64(v207), vzip1q_s64((int64x2_t)0, v201));
    unint64_t v209 = (int64x2_t *)(v138 + 8 * (v189 >> 6));
    int8x16_t v192 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v209, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209->i64[0], 0), (uint64x2_t)vnegq_s64(v208)));
    if (v207 + v203 >= 0x81) {
      int8x16_t v192 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v209[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v208))), v192);
    }
  }
  unint64_t v210 = v204 + v203;
  if (v387) {
    BOOL v211 = v387 >= v210;
  }
  else {
    BOOL v211 = 1;
  }
  char v212 = !v211;
  int8x16_t v213 = 0uLL;
  if (v203 > 0x80 || (v212 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v210 = v204;
  }
  else
  {
    int64x2_t v214 = vaddq_s64(vdupq_n_s64(v204 & 0x3F), vzip1q_s64((int64x2_t)0, v201));
    BOOL v215 = (int64x2_t *)(v138 + 8 * (v204 >> 6));
    int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v215, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215->i64[0], 0), (uint64x2_t)vnegq_s64(v214)));
    if ((v204 & 0x3F) + v203 >= 0x81) {
      int8x16_t v213 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v215[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v214))), v213);
    }
  }
  if (v140 || v387 + 8 * result - v210 - 640 >= 9 || v122 == 2)
  {
    uint64_t v216 = (8 * (&v389 + 4)) & 0x20;
    uint64_t v217 = v389 | (255 << v216);
    uint64_t v389 = v217;
    unint64_t v218 = (32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 8;
    unint64_t v219 = (((32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 0x10) - v216) | 8;
    if (v218 - v216 > 0x18) {
      unint64_t v219 = v218 - v216 + 8;
    }
    if (v219 <= 0x20)
    {
      if (v218 - v216 <= 0x18) {
        unint64_t v218 = (32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 0x10;
      }
      uint64_t v220 = v217 | (255 << v218);
      uint64_t v389 = v220;
      uint64_t v221 = ((_BYTE)v218 + 8) & 0x38;
      if ((unint64_t)(v221 - v216 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v389 = v220 | (255 << v221);
      }
    }
    uint64_t result = 0;
    unint64_t v222 = (_OWORD *)((char *)a1->f32 + a2);
    long long v19 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    BOOL v223 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *unint64_t v222 = 0u;
    v222[1] = 0u;
    unint64_t v22 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
    *BOOL v223 = 0u;
    v223[1] = 0u;
    goto LABEL_161;
  }
  int32x2_t v224 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v112, v112, 8uLL));
  int32x2_t v225 = vzip1_s32(*(int32x2_t *)v156.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v156, v156, 8uLL));
  uint16x4_t v226 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x4_t v227 = (int32x4_t)vextq_s8(v155, v155, 8uLL);
  uint16x4_t v228 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v155.i8, *(int16x4_t *)v227.i8);
  v229.i64[0] = v224.u32[0];
  v229.i64[1] = v224.u32[1];
  int64x2_t v230 = v229;
  v229.i64[0] = v225.u32[0];
  v229.i64[1] = v225.u32[1];
  uint64x2_t v231 = (uint64x2_t)vnegq_s64(v229);
  int64x2_t v232 = (int64x2_t)vshlq_u64((uint64x2_t)v109, (uint64x2_t)vnegq_s64(v230));
  *(int32x2_t *)v227.i8 = vmovn_s64((int64x2_t)v109);
  *(int32x2_t *)v232.i8 = vmovn_s64(v232);
  int16x8_t v233 = (int16x8_t)vzip1q_s32(v227, (int32x4_t)v232);
  int64x2_t v234 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v231);
  *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v150);
  *(int32x2_t *)v234.i8 = vmovn_s64(v234);
  int32x4_t v235 = vzip1q_s32((int32x4_t)v109, (int32x4_t)v234);
  int64x2_t v236 = (int64x2_t)vshlq_u64((uint64x2_t)v175, v231);
  *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v175);
  *(int32x2_t *)v236.i8 = vmovn_s64(v236);
  int16x8_t v237 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v236);
  int32x4_t v238 = (int32x4_t)vmovl_u16(v226);
  int16x8_t v239 = (int16x8_t)vmovl_u16(v228);
  uint32x4_t v240 = (uint32x4_t)vnegq_s32((int32x4_t)v239);
  int16x8_t v241 = (int16x8_t)vshlq_u32((uint32x4_t)v233, (uint32x4_t)vnegq_s32(v238));
  *(int16x4_t *)v233.i8 = vmovn_s32((int32x4_t)v233);
  *(int16x4_t *)v241.i8 = vmovn_s32((int32x4_t)v241);
  int8x16_t v242 = (int8x16_t)vzip1q_s16(v233, v241);
  int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v235, v240);
  *(int16x4_t *)v239.i8 = vmovn_s32(v235);
  *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
  int8x16_t v244 = (int8x16_t)vzip1q_s16(v239, v243);
  int16x8_t v245 = (int16x8_t)vshlq_u32((uint32x4_t)v237, v240);
  *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v237);
  *(int16x4_t *)v245.i8 = vmovn_s32((int32x4_t)v245);
  int8x16_t v246 = (int8x16_t)vzip1q_s16(v237, v245);
  uint16x8_t v247 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v401.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v401, v401, 8uLL))));
  int8x16_t v248 = (int8x16_t)vshlq_u16((uint16x8_t)v242, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v110.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  *(int8x8_t *)v242.i8 = vmovn_s16((int16x8_t)v242);
  *(int8x8_t *)v248.i8 = vmovn_s16((int16x8_t)v248);
  int8x16_t v249 = vzip1q_s8(v242, v248);
  int8x16_t v250 = (int8x16_t)vshlq_u16((uint16x8_t)v244, v247);
  int8x16_t v251 = (int8x16_t)vshlq_u16((uint16x8_t)v246, v247);
  *(int8x8_t *)v244.i8 = vmovn_s16((int16x8_t)v244);
  *(int8x8_t *)v250.i8 = vmovn_s16((int16x8_t)v250);
  *(int8x8_t *)v246.i8 = vmovn_s16((int16x8_t)v246);
  *(int8x8_t *)v251.i8 = vmovn_s16((int16x8_t)v251);
  int8x16_t v252 = vzip1q_s8(v244, v250);
  v250.i64[0] = 0x808080808080808;
  v250.i64[1] = 0x808080808080808;
  int8x16_t v253 = vzip1q_s8(v246, v251);
  v251.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v251.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v254 = vsubq_s8(v250, v110);
  int8x16_t v255 = vaddq_s8(v110, v251);
  v251.i64[0] = 0x808080808080808;
  v251.i64[1] = 0x808080808080808;
  int8x16_t v256 = vshlq_s8(v249, v254);
  v254.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v254.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v257 = vsubq_s8(v251, v401);
  int8x16_t v258 = vaddq_s8(v401, v254);
  int8x16_t v259 = vshlq_s8(v252, v257);
  int8x16_t v260 = vshlq_s8(v253, v257);
  int8x16_t v261 = vshlq_s8(v256, v255);
  int8x16_t v262 = vshlq_s8(v259, v258);
  int8x16_t v263 = vshlq_s8(v260, v258);
  int8x16_t v264 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v261.i8, 0);
  int8x16_t v265 = vandq_s8(v375, v264);
  int8x16_t v266 = vsubq_s8(v262, v265);
  int8x16_t v267 = vsubq_s8(v263, v265);
  *(int32x2_t *)v262.i8 = vzip1_s32(*(int32x2_t *)v177.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v177, v177, 8uLL));
  *(int32x2_t *)v263.i8 = vzip1_s32(*(int32x2_t *)v198.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v198, v198, 8uLL));
  v229.i64[0] = v262.u32[0];
  v229.i64[1] = v262.u32[1];
  uint64x2_t v268 = (uint64x2_t)vnegq_s64(v229);
  *(int16x4_t *)v265.i8 = vuzp1_s16(*(int16x4_t *)v176.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v176, v176, 8uLL));
  int64x2_t v269 = (int64x2_t)vshlq_u64((uint64x2_t)v171, v268);
  *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v171);
  *(int32x2_t *)v269.i8 = vmovn_s64(v269);
  int16x8_t v270 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v269);
  v229.i64[0] = v263.u32[0];
  v229.i64[1] = v263.u32[1];
  uint64x2_t v271 = (uint64x2_t)vnegq_s64(v229);
  int64x2_t v272 = (int64x2_t)vshlq_u64((uint64x2_t)v196, v268);
  *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v196);
  *(int32x2_t *)v272.i8 = vmovn_s64(v272);
  int16x8_t v273 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v272);
  int64x2_t v274 = (int64x2_t)vshlq_u64((uint64x2_t)v192, v271);
  *(int32x2_t *)v176.i8 = vmovn_s64((int64x2_t)v192);
  *(int32x2_t *)v274.i8 = vmovn_s64(v274);
  uint32x4_t v275 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v265.i8));
  int16x8_t v276 = (int16x8_t)vzip1q_s32((int32x4_t)v176, (int32x4_t)v274);
  int16x8_t v277 = (int16x8_t)vshlq_u32((uint32x4_t)v270, v275);
  *(int16x4_t *)v270.i8 = vmovn_s32((int32x4_t)v270);
  *(int16x4_t *)v277.i8 = vmovn_s32((int32x4_t)v277);
  int8x16_t v278 = (int8x16_t)vzip1q_s16(v270, v277);
  uint32x4_t v279 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v197.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v197, v197, 8uLL))));
  int16x8_t v280 = (int16x8_t)vshlq_u32((uint32x4_t)v273, v275);
  *(int16x4_t *)v273.i8 = vmovn_s32((int32x4_t)v273);
  *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
  int8x16_t v281 = (int8x16_t)vzip1q_s16(v273, v280);
  int16x8_t v282 = (int16x8_t)vshlq_u32((uint32x4_t)v276, v279);
  *(int16x4_t *)v276.i8 = vmovn_s32((int32x4_t)v276);
  *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
  uint16x8_t v283 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v402.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v402, v402, 8uLL))));
  int8x16_t v284 = (int8x16_t)vzip1q_s16(v276, v282);
  int8x16_t v285 = (int8x16_t)vshlq_u16((uint16x8_t)v278, v283);
  int8x16_t v286 = (int8x16_t)vshlq_u16((uint16x8_t)v281, v283);
  *(int8x8_t *)v278.i8 = vmovn_s16((int16x8_t)v278);
  *(int8x8_t *)v285.i8 = vmovn_s16((int16x8_t)v285);
  *(int8x8_t *)v281.i8 = vmovn_s16((int16x8_t)v281);
  *(int8x8_t *)v286.i8 = vmovn_s16((int16x8_t)v286);
  int8x16_t v287 = vzip1q_s8(v278, v285);
  v285.i64[0] = 0x808080808080808;
  v285.i64[1] = 0x808080808080808;
  int8x16_t v288 = vzip1q_s8(v281, v286);
  v286.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v286.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v289 = vsubq_s8(v285, v402);
  int8x16_t v290 = vaddq_s8(v402, v286);
  int8x16_t v291 = vshlq_s8(v287, v289);
  int8x16_t v292 = vshlq_s8(v288, v289);
  uint16x8_t v293 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v403.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v403, v403, 8uLL))));
  int8x16_t v294 = vshlq_s8(v292, v290);
  int8x16_t v295 = vandq_s8(v377, v264);
  int8x16_t v296 = vsubq_s8(vshlq_s8(v291, v290), v295);
  int8x16_t v297 = vsubq_s8(v294, v295);
  int8x16_t v298 = (int8x16_t)vshlq_u16((uint16x8_t)v284, v293);
  *(int8x8_t *)v284.i8 = vmovn_s16((int16x8_t)v284);
  *(int8x8_t *)v298.i8 = vmovn_s16((int16x8_t)v298);
  v295.i64[0] = 0x808080808080808;
  v295.i64[1] = 0x808080808080808;
  int8x16_t v299 = vzip1q_s8(v284, v298);
  v284.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v284.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v300 = vsubq_s8(v295, v403);
  int8x16_t v301 = vaddq_s8(v403, v284);
  int64x2_t v302 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v271);
  *(int32x2_t *)v213.i8 = vmovn_s64((int64x2_t)v213);
  *(int32x2_t *)v302.i8 = vmovn_s64(v302);
  int16x8_t v303 = (int16x8_t)vzip1q_s32((int32x4_t)v213, (int32x4_t)v302);
  int16x8_t v304 = (int16x8_t)vshlq_u32((uint32x4_t)v303, v279);
  *(int16x4_t *)v303.i8 = vmovn_s32((int32x4_t)v303);
  *(int16x4_t *)v304.i8 = vmovn_s32((int32x4_t)v304);
  int8x16_t v305 = (int8x16_t)vzip1q_s16(v303, v304);
  int8x16_t v306 = (int8x16_t)vshlq_u16((uint16x8_t)v305, v293);
  *(int8x8_t *)v305.i8 = vmovn_s16((int16x8_t)v305);
  *(int8x8_t *)v306.i8 = vmovn_s16((int16x8_t)v306);
  int8x16_t v307 = vshlq_s8(vshlq_s8(vzip1q_s8(v305, v306), v300), v301);
  int8x16_t v308 = vandq_s8(v379, v264);
  int8x16_t v309 = vsubq_s8(vshlq_s8(vshlq_s8(v299, v300), v301), v308);
  int8x16_t v310 = vsubq_s8(v307, v308);
  *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v128.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL));
  *(int32x2_t *)v307.i8 = vzip1_s32(*(int32x2_t *)v142.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v142, v142, 8uLL));
  v229.i64[0] = v299.u32[0];
  v229.i64[1] = v299.u32[1];
  int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v229));
  *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
  *(int32x2_t *)v311.i8 = vmovn_s64(v311);
  int16x8_t v312 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v311);
  v229.i64[0] = v307.u32[0];
  v229.i64[1] = v307.u32[1];
  int64x2_t v313 = (int64x2_t)vshlq_u64((uint64x2_t)v154, (uint64x2_t)vnegq_s64(v229));
  *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v154);
  *(int32x2_t *)v313.i8 = vmovn_s64(v313);
  int16x8_t v314 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v313);
  int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v312, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v127.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL)))));
  *(int16x4_t *)v312.i8 = vmovn_s32((int32x4_t)v312);
  *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
  int8x16_t v316 = (int8x16_t)vzip1q_s16(v312, v315);
  int16x8_t v317 = (int16x8_t)vshlq_u32((uint32x4_t)v314, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v141.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v141, v141, 8uLL)))));
  *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
  *(int16x4_t *)v317.i8 = vmovn_s32((int32x4_t)v317);
  int8x16_t v318 = (int8x16_t)vzip1q_s16(v314, v317);
  int8x16_t v319 = (int8x16_t)vshlq_u16((uint16x8_t)v316, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v126.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  int8x16_t v320 = (int8x16_t)vshlq_u16((uint16x8_t)v318, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v400.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v400, v400, 8uLL)))));
  *(int8x8_t *)v316.i8 = vmovn_s16((int16x8_t)v316);
  *(int8x8_t *)v319.i8 = vmovn_s16((int16x8_t)v319);
  *(int8x8_t *)v318.i8 = vmovn_s16((int16x8_t)v318);
  *(int8x8_t *)v320.i8 = vmovn_s16((int16x8_t)v320);
  int8x16_t v321 = vzip1q_s8(v316, v319);
  v319.i64[0] = 0x808080808080808;
  v319.i64[1] = 0x808080808080808;
  int8x16_t v322 = vzip1q_s8(v318, v320);
  v320.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v320.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v323 = vshlq_s8(vshlq_s8(v321, vsubq_s8(v319, v126)), vaddq_s8(v126, v320));
  int8x16_t v324 = vshlq_s8(vshlq_s8(v322, vsubq_s8(v319, v400)), vaddq_s8(v400, v320));
  int8x16_t v325 = vandq_s8(v381, v264);
  v326.i64[0] = 0x101010101010101;
  v326.i64[1] = 0x101010101010101;
  int8x16_t v327 = vsubq_s8(vaddq_s8(vandq_s8(v261, v381), v323), v325);
  int8x16_t v328 = vsubq_s8(v324, v325);
  if (vaddlvq_s8(vceqq_s8(v384, v326)))
  {
    int8x16_t v329 = vnegq_s8(vandq_s8(v399, v326));
    int8x16_t v330 = v328;
    v330.i32[3] = v327.i32[0];
    int8x16_t v331 = v327;
    v331.i32[0] = v328.i32[3];
    v406.val[0] = vbslq_s8(v329, v331, v327);
    v406.val[1] = vbslq_s8(v329, v330, v328);
    v332.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v332.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, (int8x16_t)xmmword_242EA7570), v329), v406.val[0]);
    v407.val[1] = vaddq_s8(v406.val[1], vandq_s8(vqtbl2q_s8(v406, v332), v329));
    int8x16_t v327 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA7580), v329), v407.val[0]);
    int8x16_t v328 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[1]);
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA7590), v329), v266);
    v407.val[1] = vaddq_s8(v267, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA75A0), v329));
    int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA75B0), v329), v407.val[0]);
    int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[1]);
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v296.i8, (int8x16_t)xmmword_242EA75C0), v329), v296);
    v407.val[1] = vaddq_s8(v297, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v296.i8, (int8x16_t)xmmword_242EA7570), v329));
    int8x16_t v296 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[0]);
    int8x16_t v297 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA75D0), v329), v407.val[1]);
    v406.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v309.i8, (int8x16_t)xmmword_242EA75E0), v329), v309);
    v406.val[1] = vaddq_s8(v310, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v309.i8, (int8x16_t)xmmword_242EA7570), v329));
    int8x16_t v309 = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, v332), v329), v406.val[0]);
    int8x16_t v310 = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, (int8x16_t)xmmword_242EA75F0), v329), v406.val[1]);
  }
  int8x16_t v333 = vaddq_s8(v398, v327);
  int8x16_t v334 = vaddq_s8(v328, v398);
  int8x16_t v335 = vaddq_s8(v266, v398);
  int8x16_t v336 = vaddq_s8(v267, v398);
  int8x16_t v337 = vaddq_s8(v296, v398);
  int8x16_t v338 = vaddq_s8(v297, v398);
  int8x16_t v339 = vaddq_s8(v309, v398);
  int8x16_t v340 = vaddq_s8(v310, v398);
  v341.i64[0] = 0x1010101010101010;
  v341.i64[1] = 0x1010101010101010;
  int8x16_t v342 = vtstq_s8(v399, v341);
  if ((v399.i8[1] & 0x10) != 0)
  {
    v342.i8[1] = v342.i8[2];
    v342.i8[2] = 0;
    int8x16_t v342 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v342.i8, 0);
    int8x16_t v343 = (int8x16_t)xmmword_242EA7610;
  }
  else
  {
    int8x16_t v343 = (int8x16_t)xmmword_242EA7600;
  }
  int64x2_t v344 = (int64x2_t)vaddq_s8(vandq_s8(v342, vqtbl1q_s8(v333, v343)), v333);
  int64x2_t v345 = (int64x2_t)vaddq_s8(vandq_s8(v342, vqtbl1q_s8(v334, v343)), v334);
  int64x2_t v346 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v335, v343), v342), v335);
  int64x2_t v347 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v336, v343), v342), v336);
  int64x2_t v348 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v337, v343), v342), v337);
  int64x2_t v349 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v338, v343), v342), v338);
  int64x2_t v350 = (int64x2_t *)((char *)a1 + a2);
  *(int64x2_t *)a1 = vzip1q_s64(v344, v345);
  a1[1] = (float32x4_t)vzip1q_s64(v348, v349);
  int64x2_t v351 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t v352 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v339, v343), v342), v339);
  *int64x2_t v350 = vzip2q_s64(v344, v345);
  v350[1] = vzip2q_s64(v348, v349);
  int64x2_t v353 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v340, v343), v342), v340);
  *int64x2_t v351 = vzip1q_s64(v346, v347);
  v351[1] = vzip1q_s64(v352, v353);
  unint64_t v354 = (int64x2_t *)((char *)v351 + a2);
  *unint64_t v354 = vzip2q_s64(v346, v347);
  v354[1] = vzip2q_s64(v352, v353);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressMacroblock(uint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(a3, a4, result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v16, v13 + 32, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  unint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v21, v13 + v20, a2, v14, v24, a7);
    v11 += result;
    uint64_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *unint64_t v21 = 0;
    uint64_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v25, v13 + v20 + 32, a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *uint64_t v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v26, v13 + 8 * a2, a2, v14, v29, a7);
    v11 += result;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v30, v13 + 8 * a2 + 32, a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v30 = 0;
LABEL_49:
  int16x8_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v31, v13 + 12 * a2, a2, v14, v34, a7);
    v11 += result;
    int16x8_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *int16x8_t v31 = 0;
    int16x8_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      *int16x8_t v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v35, v13 + 12 * a2 + 32, a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressMacroblock(float32x4_t *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1, 64, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 2, 64, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 16, 64, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 18, 64, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 32, 64, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 34, 64, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 48, 64, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 50, 64, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = *(int64x2_t *)(a3 + 16);
  unint64_t v7 = (int64x2_t *)(a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)(a3 + a4);
  int64x2_t v10 = *(int64x2_t *)(a3 + a4 + 16);
  int8x16_t v11 = (int8x16_t)vzip1q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v12 = (int8x16_t)vzip2q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v13 = (int8x16_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  unsigned int v14 = (int64x2_t *)((char *)v7 + a4);
  int8x16_t v17 = (int8x16_t)vzip2q_s64(v8, v10);
  int64x2_t v18 = v14[1];
  int8x16_t v19 = (int8x16_t)vzip2q_s64(v15, *v14);
  int8x16_t v20 = (int8x16_t)vzip1q_s64(v16, v18);
  int8x16_t v21 = (int8x16_t)vzip2q_s64(v16, v18);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v11.i8, 0);
  int8x16_t v23 = vsubq_s8(v11, v22);
  int8x16_t v454 = v23;
  int8x16_t v456 = vsubq_s8(v12, v22);
  int8x16_t v453 = (int8x16_t)vzip1q_s64(v15, *v14);
  int8x16_t v24 = vsubq_s8(v453, v22);
  int8x16_t v458 = v24;
  int8x16_t v459 = vsubq_s8(v19, v22);
  int8x16_t v25 = vsubq_s8(v13, v22);
  int8x16_t v460 = v25;
  int8x16_t v461 = vsubq_s8(v17, v22);
  int8x16_t v26 = vsubq_s8(v20, v22);
  int8x16_t v462 = v26;
  int8x16_t v463 = vsubq_s8(v21, v22);
  int8x16_t v27 = vqtbl1q_s8(vmaxq_s8(v23, v456), (int8x16_t)xmmword_242EA7560);
  int8x16_t v28 = vqtbl1q_s8(vminq_s8(v23, v456), (int8x16_t)xmmword_242EA7560);
  int8x16_t v29 = vpmaxq_s8(v27, v27);
  int8x16_t v30 = vpminq_s8(v28, v28);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  v33.i64[0] = 0x8080808080808080;
  v33.i64[1] = 0x8080808080808080;
  int8x16_t v34 = vmaxq_s8(v31, v33);
  v35.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v35.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v36 = vminq_s8(v32, v35);
  int8x16_t v37 = vzip1q_s8(v31, v32);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v37)), vceqzq_s8(v37));
  int8x16_t v40 = vpmaxq_s8(v39, v39);
  int8x16_t v41 = vqtbl1q_s8(vmaxq_s8(v24, v459), (int8x16_t)xmmword_242EA7560);
  int8x16_t v42 = vqtbl1q_s8(vminq_s8(v24, v459), (int8x16_t)xmmword_242EA7560);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vpmaxq_s8(v43, v43);
  int8x16_t v46 = vpminq_s8(v44, v44);
  int8x16_t v47 = vmaxq_s8(v34, v45);
  int8x16_t v48 = vminq_s8(v36, v46);
  int8x16_t v49 = vzip1q_s8(v45, v46);
  int8x16_t v50 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v49)), vceqzq_s8(v49));
  int8x16_t v51 = vpmaxq_s8(v50, v50);
  int8x16_t v52 = vqtbl1q_s8(vmaxq_s8(v25, v461), (int8x16_t)xmmword_242EA7560);
  int8x16_t v53 = vqtbl1q_s8(vminq_s8(v25, v461), (int8x16_t)xmmword_242EA7560);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vpmaxq_s8(v54, v54);
  int8x16_t v57 = vpminq_s8(v55, v55);
  int8x16_t v58 = vmaxq_s8(v47, v56);
  int8x16_t v59 = vminq_s8(v48, v57);
  int8x16_t v60 = vzip1q_s8(v56, v57);
  int8x16_t v61 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v60)), vceqzq_s8(v60));
  int8x16_t v62 = vpmaxq_s8(v61, v61);
  int8x16_t v63 = vqtbl1q_s8(vmaxq_s8(v26, v463), (int8x16_t)xmmword_242EA7560);
  int8x16_t v64 = vqtbl1q_s8(vminq_s8(v26, v463), (int8x16_t)xmmword_242EA7560);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vpmaxq_s8(v65, v65);
  int8x16_t v68 = vpminq_s8(v66, v66);
  int8x16_t v69 = vmaxq_s8(v58, v67);
  int8x16_t v70 = vminq_s8(v59, v68);
  int8x16_t v71 = vzip1q_s8(v67, v68);
  int8x16_t v72 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v71)), vceqzq_s8(v71));
  v67.i64[0] = -1;
  v67.i64[1] = -1;
  int8x16_t v73 = vpmaxq_s8(v72, v72);
  int8x16_t v74 = vmaxq_s8(vmaxq_s8(v40, v51), vmaxq_s8(v62, v73));
  int8x16_t v75 = vclzq_s8(vsubq_s8(v69, v70));
  v76.i64[0] = 0x707070707070707;
  v76.i64[1] = 0x707070707070707;
  int8x16_t v77 = vsubq_s8(v76, v75);
  int8x16_t v78 = vsubq_s8(v38, v75);
  int8x16_t v79 = vsubq_s8(vshlq_s8(v67, v77), v70);
  int8x16_t v80 = vcgtq_s8(v74, v78);
  int8x16_t v470 = vbslq_s8(v80, v78, v74);
  int8x16_t v471 = v70;
  int8x16_t v472 = v69;
  int8x16_t v473 = vandq_s8(v79, v80);
  v81.i64[0] = 0x303030303030303;
  v81.i64[1] = 0x303030303030303;
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v40), v81), (int8x16_t)0);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v51), v81), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v62), v81), (int8x16_t)0);
  int8x16_t v85 = vmaxq_s8(vminq_s8(vsubq_s8(v470, v73), v81), (int8x16_t)0);
  int8x16_t v466 = vsubq_s8(v470, v82);
  int8x16_t v467 = vsubq_s8(v470, v83);
  int8x16_t v468 = vsubq_s8(v470, v84);
  int8x16_t v469 = vsubq_s8(v470, v85);
  v86.i64[0] = 0x404040404040404;
  v86.i64[1] = 0x404040404040404;
  int8x16_t v87 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v85, v84), vnegq_s8(vaddq_s8(v82, v83)))), vorrq_s8(vandq_s8(v80, v38), vandq_s8(vceqzq_s8(v470), v81)));
  int8x16_t v464 = v22;
  int8x16_t v465 = v87;
  if (vmaxvq_s8(v470))
  {
    int8x16_t v449 = v19;
    int8x16_t v450 = v17;
    int8x16_t v451 = v20;
    int8x16_t v452 = v13;
    int8x16_t v445 = v21;
    BOOL v89 = a5 < 4 || a6 < 2;
    int8x16_t v90 = vsubq_s8(v23, vqtbl1q_s8(v23, (int8x16_t)xmmword_242EA7600));
    int8x16_t v91 = vsubq_s8(v456, vqtbl1q_s8(v456, (int8x16_t)xmmword_242EA7600));
    int8x16_t v92 = vsubq_s8(v25, vqtbl1q_s8(v25, (int8x16_t)xmmword_242EA7600));
    int8x16_t v93 = vsubq_s8(v461, vqtbl1q_s8(v461, (int8x16_t)xmmword_242EA7600));
    int8x16_t v94 = vsubq_s8(v26, vqtbl1q_s8(v26, (int8x16_t)xmmword_242EA7600));
    int8x16_t v95 = vsubq_s8(v463, vqtbl1q_s8(v463, (int8x16_t)xmmword_242EA7600));
    int8x16_t v96 = vqtbl1q_s8(vmaxq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v97 = vqtbl1q_s8(vminq_s8(v90, v91), (int8x16_t)xmmword_242EA7560);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    int8x16_t v100 = vpmaxq_s8(v98, v98);
    int8x16_t v101 = vpminq_s8(v99, v99);
    int8x16_t v102 = vmaxq_s8(v100, v33);
    int8x16_t v103 = vminq_s8(v101, v35);
    int8x16_t v104 = vzip1q_s8(v100, v101);
    int8x16_t v105 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v104)), vceqzq_s8(v104));
    int8x16_t v106 = vpmaxq_s8(v105, v105);
    int8x16_t v447 = vsubq_s8(v459, vqtbl1q_s8(v459, (int8x16_t)xmmword_242EA7600));
    int8x16_t v448 = vsubq_s8(v24, vqtbl1q_s8(v24, (int8x16_t)xmmword_242EA7600));
    int8x16_t v107 = vqtbl1q_s8(vmaxq_s8(v448, v447), (int8x16_t)xmmword_242EA7560);
    int8x16_t v108 = vqtbl1q_s8(vminq_s8(v448, v447), (int8x16_t)xmmword_242EA7560);
    int8x16_t v109 = vpmaxq_s8(v107, v107);
    int8x16_t v110 = vpminq_s8(v108, v108);
    int8x16_t v111 = vpmaxq_s8(v109, v109);
    int8x16_t v112 = vpminq_s8(v110, v110);
    int8x16_t v113 = vmaxq_s8(v102, v111);
    int8x16_t v114 = vminq_s8(v103, v112);
    int8x16_t v115 = vzip1q_s8(v111, v112);
    int8x16_t v116 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v115)), vceqzq_s8(v115));
    int8x16_t v117 = vpmaxq_s8(v116, v116);
    int8x16_t v118 = vqtbl1q_s8(vmaxq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v119 = vqtbl1q_s8(vminq_s8(v92, v93), (int8x16_t)xmmword_242EA7560);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vmaxq_s8(v113, v122);
    int8x16_t v125 = vminq_s8(v114, v123);
    int8x16_t v126 = vzip1q_s8(v122, v123);
    int8x16_t v127 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v126)), vceqzq_s8(v126));
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v129 = vqtbl1q_s8(vmaxq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v130 = vqtbl1q_s8(vminq_s8(v94, v95), (int8x16_t)xmmword_242EA7560);
    int8x16_t v131 = vpmaxq_s8(v129, v129);
    int8x16_t v132 = vpminq_s8(v130, v130);
    int8x16_t v133 = vpmaxq_s8(v131, v131);
    int8x16_t v134 = vpminq_s8(v132, v132);
    int8x16_t v135 = vmaxq_s8(v124, v133);
    int8x16_t v136 = vminq_s8(v125, v134);
    int8x16_t v137 = vzip1q_s8(v133, v134);
    int8x16_t v138 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v137)), vceqzq_s8(v137));
    int8x16_t v139 = vpmaxq_s8(v138, v138);
    int8x16_t v140 = vmaxq_s8(vmaxq_s8(v106, v117), vmaxq_s8(v128, v139));
    int8x16_t v446 = v135;
    int8x16_t v141 = vclzq_s8(vsubq_s8(v135, v136));
    int8x16_t v142 = vsubq_s8(v38, v141);
    int8x16_t v143 = vcgtq_s8(v140, v142);
    int8x16_t v144 = vbslq_s8(v143, v142, v140);
    v140.i64[0] = 0x1010101010101010;
    v140.i64[1] = 0x1010101010101010;
    v142.i64[0] = 0x1818181818181818;
    v142.i64[1] = 0x1818181818181818;
    int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v144), v81), vbslq_s8(v143, v142, v140));
    int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v106), v81), (int8x16_t)0);
    int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v117), v81), (int8x16_t)0);
    int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v128), v81), (int8x16_t)0);
    int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v144, v139), v81), (int8x16_t)0);
    int8x16_t v150 = vsubq_s8(v144, v146);
    int8x16_t v151 = vsubq_s8(v144, v147);
    int8x16_t v152 = vsubq_s8(v144, v148);
    int8x16_t v153 = vsubq_s8(v144, v149);
    int8x16_t v154 = vorrq_s8(vbicq_s8(v86, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8(v146, v147)))), v145);
    uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
    v145.i64[0] = 0x8000800080008;
    v145.i64[1] = 0x8000800080008;
    v156.i64[0] = 0x2000200020002;
    v156.i64[1] = 0x2000200020002;
    int16x8_t v157 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v144.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8)))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v145)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v156), v145)), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL));
    uint16x8_t v158 = vmovl_u8(*(uint8x8_t *)v87.i8);
    int8x16_t v159 = v470;
    int16x8_t v160 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v470.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFF8FFF8FFF8FFF8, 0xFFF8FFF8FFF8FFF8))));
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v156), v145);
    int8x16_t v162 = v466;
    int8x16_t v163 = v467;
    int8x16_t v165 = v468;
    int8x16_t v164 = v469;
    int8x16_t v166 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v160, (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v87.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), v161), *(int8x8_t *)v466.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v468.i8, *(int8x8_t *)v467.i8), *(int8x8_t *)v469.i8), 3uLL)), v157)), 0);
    if (vaddlvq_s8(v166))
    {
      v167.i64[0] = 0x707070707070707;
      v167.i64[1] = 0x707070707070707;
      int8x16_t v168 = vsubq_s8(v167, v141);
      v167.i64[0] = -1;
      v167.i64[1] = -1;
      int8x16_t v454 = vbslq_s8(v166, v90, v454);
      int8x16_t v456 = vbslq_s8(v166, v91, v456);
      int8x16_t v458 = vbslq_s8(v166, v448, v458);
      int8x16_t v459 = vbslq_s8(v166, v447, v459);
      int8x16_t v460 = vbslq_s8(v166, v92, v460);
      int8x16_t v461 = vbslq_s8(v166, v93, v461);
      int8x16_t v462 = vbslq_s8(v166, v94, v462);
      int8x16_t v463 = vbslq_s8(v166, v95, v463);
      int8x16_t v162 = vbslq_s8(v166, v150, v466);
      int8x16_t v163 = vbslq_s8(v166, v151, v467);
      int8x16_t v466 = v162;
      int8x16_t v467 = v163;
      int8x16_t v165 = vbslq_s8(v166, v152, v468);
      int8x16_t v164 = vbslq_s8(v166, v153, v469);
      int8x16_t v468 = v165;
      int8x16_t v469 = v164;
      int8x16_t v472 = vbslq_s8(v166, v446, v472);
      int8x16_t v473 = vbslq_s8(v166, vandq_s8(vsubq_s8(vshlq_s8(v167, v168), v136), v143), v473);
      int8x16_t v159 = vbslq_s8(v166, v144, v470);
      int8x16_t v470 = v159;
      int8x16_t v471 = vbslq_s8(v166, v136, v471);
      int8x16_t v87 = vbslq_s8(v166, v154, v87);
      int8x16_t v464 = vbslq_s8(v166, vsubq_s8(v22, vqtbl1q_s8(v22, (int8x16_t)xmmword_242EA7600)), v464);
      int8x16_t v465 = v87;
    }
    int8x16_t v169 = v452;
    int8x16_t v170 = v451;
    if (!v89)
    {
      int8x16_t v181 = vsubq_s8(v11, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v171 = vsubq_s8(v12, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7620));
      v474.val[0] = v453;
      v474.val[1] = v449;
      v474.val[1].i32[3] = v12.i32[3];
      int8x16_t v172 = vqtbl2q_s8(v474, (int8x16_t)xmmword_242EA7630);
      int8x16_t v173 = vsubq_s8(v453, vqtbl2q_s8(v474, (int8x16_t)xmmword_242EA7590));
      int8x16_t v174 = vsubq_s8(v449, v172);
      int8x16_t v175 = v450;
      v175.i32[3] = v12.i32[3];
      int8x16_t v176 = vsubq_s8(v452, vqtbl2q_s8(*(int8x16x2_t *)v169.i8, (int8x16_t)xmmword_242EA7640));
      int8x16_t v177 = vsubq_s8(v450, vqtbl2q_s8(*(int8x16x2_t *)v169.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v178 = v445;
      v178.i32[3] = v12.i32[3];
      int8x16_t v179 = vsubq_s8(v451, vqtbl2q_s8(*(int8x16x2_t *)v170.i8, (int8x16_t)xmmword_242EA7650));
      int8x16_t v180 = v171;
      v180.i32[3] = v181.i32[0];
      v181.i32[0] = v171.i32[3];
      int8x16_t v182 = vsubq_s8(v445, vqtbl2q_s8(*(int8x16x2_t *)v170.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v183 = vqtbl1q_s8(vmaxq_s8(v181, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v184 = vqtbl1q_s8(vminq_s8(v181, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v185 = vpmaxq_s8(v183, v183);
      int8x16_t v186 = vpminq_s8(v184, v184);
      int8x16_t v187 = vpmaxq_s8(v185, v185);
      int8x16_t v188 = vpminq_s8(v186, v186);
      v474.val[1].i64[0] = 0x8080808080808080;
      v474.val[1].i64[1] = 0x8080808080808080;
      v189.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v189.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v190 = vminq_s8(v188, v189);
      int8x16_t v191 = vzip1q_s8(v187, v188);
      v192.i64[0] = 0x808080808080808;
      v192.i64[1] = 0x808080808080808;
      int8x16_t v193 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v191)), vceqzq_s8(v191));
      int8x16_t v194 = vpmaxq_s8(v193, v193);
      int8x16_t v195 = vqtbl1q_s8(vmaxq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v196 = vqtbl1q_s8(vminq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v197 = vpmaxq_s8(v195, v195);
      int8x16_t v198 = vpminq_s8(v196, v196);
      int8x16_t v199 = vpmaxq_s8(v197, v197);
      int8x16_t v200 = vpminq_s8(v198, v198);
      v474.val[1] = vmaxq_s8(vmaxq_s8(v187, v474.val[1]), v199);
      int8x16_t v201 = vminq_s8(v190, v200);
      int8x16_t v202 = vzip1q_s8(v199, v200);
      int8x16_t v203 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v202)), vceqzq_s8(v202));
      int8x16_t v204 = vpmaxq_s8(v203, v203);
      int8x16_t v205 = vqtbl1q_s8(vmaxq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v206 = vqtbl1q_s8(vminq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v207 = vpmaxq_s8(v205, v205);
      int8x16_t v208 = vpminq_s8(v206, v206);
      int8x16_t v209 = vpmaxq_s8(v207, v207);
      int8x16_t v210 = vpminq_s8(v208, v208);
      v474.val[1] = vmaxq_s8(v474.val[1], v209);
      int8x16_t v211 = vminq_s8(v201, v210);
      int8x16_t v212 = vzip1q_s8(v209, v210);
      int8x16_t v213 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v212)), vceqzq_s8(v212));
      int8x16_t v214 = vpmaxq_s8(v213, v213);
      int8x16_t v215 = vqtbl1q_s8(vmaxq_s8(v179, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v216 = vqtbl1q_s8(vminq_s8(v179, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v217 = vpmaxq_s8(v215, v215);
      int8x16_t v218 = vpminq_s8(v216, v216);
      int8x16_t v219 = vpmaxq_s8(v217, v217);
      int8x16_t v220 = vpminq_s8(v218, v218);
      int8x16_t v221 = vmaxq_s8(v474.val[1], v219);
      int8x16_t v222 = vminq_s8(v211, v220);
      v474.val[1] = vzip1q_s8(v219, v220);
      v474.val[1] = vbicq_s8(vsubq_s8(v192, vclsq_s8(v474.val[1])), vceqzq_s8(v474.val[1]));
      int8x16_t v223 = vpmaxq_s8(v474.val[1], v474.val[1]);
      v474.val[1] = vmaxq_s8(vmaxq_s8(v194, v204), vmaxq_s8(v214, v223));
      int8x16_t v224 = vclzq_s8(vsubq_s8(v221, v222));
      int8x16_t v225 = vsubq_s8(v192, v224);
      int8x16_t v226 = vcgtq_s8(v474.val[1], v225);
      int8x16_t v227 = vbslq_s8(v226, v225, v474.val[1]);
      v225.i64[0] = 0x909090909090909;
      v225.i64[1] = 0x909090909090909;
      v220.i64[0] = 0x202020202020202;
      v220.i64[1] = 0x202020202020202;
      int8x16_t v228 = vorrq_s8(vandq_s8(vceqzq_s8(v227), v220), vsubq_s8(vandq_s8(v226, v225), vmvnq_s8(v226)));
      v219.i64[0] = 0x303030303030303;
      v219.i64[1] = 0x303030303030303;
      int8x16_t v229 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v194), v219), (int8x16_t)0);
      int8x16_t v230 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v204), v219), (int8x16_t)0);
      int8x16_t v231 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v214), v219), (int8x16_t)0);
      int8x16_t v232 = vmaxq_s8(vminq_s8(vsubq_s8(v227, v223), v219), (int8x16_t)0);
      int8x16_t v233 = vsubq_s8(v227, v229);
      int8x16_t v234 = vsubq_s8(v227, v230);
      int8x16_t v235 = vsubq_s8(v227, v231);
      int8x16_t v236 = vsubq_s8(v227, v232);
      int8x16_t v87 = vceqq_s8(vaddq_s8(v232, v231), vnegq_s8(vaddq_s8(v229, v230)));
      v229.i64[0] = 0x404040404040404;
      v229.i64[1] = 0x404040404040404;
      int8x16_t v237 = vorrq_s8(vbicq_s8(v229, v87), v228);
      v230.i64[0] = 0x3000300030003;
      v230.i64[1] = 0x3000300030003;
      v87.i64[0] = v465.i64[0];
      int8x16_t v162 = v466;
      int8x16_t v238 = (int8x16_t)vmovl_s8(*(int8x8_t *)v465.i8);
      v239.i64[0] = 0x8000800080008;
      v239.i64[1] = 0x8000800080008;
      int8x16_t v164 = v469;
      int8x16_t v159 = v470;
      int16x8_t v240 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v470.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v238, v239)));
      int16x8_t v241 = (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v465.i8, 1uLL), v239);
      int16x8_t v242 = (int16x8_t)vandq_s8(v238, v230);
      v238.i64[0] = 0x2000200020002;
      v238.i64[1] = 0x2000200020002;
      int16x8_t v243 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v242, (int16x8_t)v238), v239);
      int8x16_t v163 = v467;
      int8x16_t v165 = v468;
      int8x16_t v244 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v240, v241), v243), *(int8x8_t *)v466.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v468.i8, *(int8x8_t *)v467.i8), *(int8x8_t *)v469.i8), 3uLL)), vaddq_s16(vmlal_s8((int16x8_t)vaddw_u8((uint16x8_t)vmovl_s8(vbic_s8(*(int8x8_t *)v227.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v237.i8))), (uint8x8_t)vand_s8(
                                                                                            vadd_s8(*(int8x8_t *)v237.i8, *(int8x8_t *)v237.i8), (int8x8_t)0x808080808080808)), *(int8x8_t *)v233.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v235.i8, *(int8x8_t *)v234.i8), *(int8x8_t *)v236.i8), 3uLL)))), 0);
      if (vaddlvq_s8(v244))
      {
        v245.i64[0] = 0x707070707070707;
        v245.i64[1] = 0x707070707070707;
        int8x16_t v246 = vsubq_s8(v245, v224);
        v245.i64[0] = -1;
        v245.i64[1] = -1;
        int8x16_t v454 = vbslq_s8(v244, v181, v454);
        int8x16_t v456 = vbslq_s8(v244, v180, v456);
        int8x16_t v458 = vbslq_s8(v244, v173, v458);
        int8x16_t v459 = vbslq_s8(v244, v174, v459);
        int8x16_t v460 = vbslq_s8(v244, v176, v460);
        int8x16_t v461 = vbslq_s8(v244, v177, v461);
        int8x16_t v462 = vbslq_s8(v244, v179, v462);
        int8x16_t v463 = vbslq_s8(v244, v182, v463);
        int8x16_t v162 = vbslq_s8(v244, v233, v466);
        int8x16_t v163 = vbslq_s8(v244, v234, v467);
        int8x16_t v466 = v162;
        int8x16_t v467 = v163;
        int8x16_t v165 = vbslq_s8(v244, v235, v468);
        int8x16_t v164 = vbslq_s8(v244, v236, v469);
        int8x16_t v468 = v165;
        int8x16_t v469 = v164;
        int8x16_t v472 = vbslq_s8(v244, v221, v472);
        int8x16_t v473 = vbslq_s8(v244, vandq_s8(vsubq_s8(vshlq_s8(v245, v246), v222), v226), v473);
        int8x16_t v159 = vbslq_s8(v244, v227, v470);
        int8x16_t v470 = v159;
        int8x16_t v471 = vbslq_s8(v244, v222, v471);
        int8x16_t v87 = vbslq_s8(v244, v237, v465);
        int8x16_t v464 = vbslq_s8(v244, vextq_s8(v12, v12, 0xCuLL), v464);
        int8x16_t v465 = v87;
      }
    }
    int8x16_t v247 = vandq_s8(v473, vceqq_s8(v159, v162));
    int8x16_t v455 = vaddq_s8(v247, v454);
    int8x16_t v457 = vaddq_s8(v456, v247);
    int8x16_t v248 = vandq_s8(v473, vceqq_s8(v159, v163));
    int8x16_t v458 = vaddq_s8(v458, v248);
    int8x16_t v459 = vaddq_s8(v459, v248);
    int8x16_t v249 = vandq_s8(v473, vceqq_s8(v159, v165));
    int8x16_t v460 = vaddq_s8(v460, v249);
    int8x16_t v461 = vaddq_s8(v461, v249);
    int8x16_t v250 = vandq_s8(v473, vceqq_s8(v159, v164));
    int8x16_t v462 = vaddq_s8(v462, v250);
    int8x16_t v463 = vaddq_s8(v463, v250);
    int8x16_t v251 = (int8x16_t)vmovl_s8(*(int8x8_t *)v87.i8);
    v252.i64[0] = 0x8000800080008;
    v252.i64[1] = 0x8000800080008;
    int16x8_t v253 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v159.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v251, v252)));
    v254.i64[0] = 0x3000300030003;
    v254.i64[1] = 0x3000300030003;
    int16x8_t v255 = (int16x8_t)vandq_s8(v251, v254);
    v254.i64[0] = 0x2000200020002;
    v254.i64[1] = 0x2000200020002;
    int16x8_t v256 = vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v253, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v87.i8, 1uLL), v252)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v255, (int16x8_t)v254), v252)), *(int8x8_t *)v162.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v165.i8, *(int8x8_t *)v163.i8), *(int8x8_t *)v164.i8), 3uLL));
    int16x8_t v257 = vpaddq_s16(v256, v256);
    if ((unint64_t)(vpaddq_s16(v257, v257).i16[0] - 449) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      int8x16_t v258 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v259 = 8 * (a1 & 7);
      if (v259) {
        uint64_t v260 = *v258 & ~(-1 << v259);
      }
      else {
        uint64_t v260 = 0;
      }
      *a2 = 0;
      __int32 v262 = v464.i32[0];
      int16x4_t v263 = (int16x4_t)vzip1_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v464.i8);
      int8x8_t v264 = (int8x8_t)vadd_s16(v263, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v265 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v263 & 0xFF00FF00FF00FFLL)));
      v266.i64[0] = v265.u32[0];
      v266.i64[1] = v265.u32[1];
      int8x16_t v267 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v266, 0x38uLL), 0x38uLL);
      v266.i64[0] = v265.u32[2];
      v266.i64[1] = v265.u32[3];
      int8x16_t v268 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v266, 0x38uLL), 0x38uLL);
      uint32x4_t v269 = vmovl_u16((uint16x4_t)vand_s8(v264, (int8x8_t)0x7000700070007));
      v266.i64[0] = v269.u32[2];
      v266.i64[1] = v269.u32[3];
      v270.i64[0] = 255;
      v270.i64[1] = 255;
      uint64x2_t v271 = (uint64x2_t)vandq_s8((int8x16_t)v266, v270);
      v266.i64[0] = v269.u32[0];
      v266.i64[1] = v269.u32[1];
      uint64_t v272 = v87.i8[0] & 0x1F;
      int8x16_t v273 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v266, v270), (uint64x2_t)xmmword_242EA7660), v267), vbicq_s8((int8x16_t)vshlq_u64(v271, (uint64x2_t)xmmword_242EA7670), v268));
      *(int8x8_t *)v273.i8 = vorr_s8(*(int8x8_t *)v273.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v273, v273, 8uLL));
      v266.i64[0] = v87.u8[1];
      v266.i64[1] = v87.u8[2];
      v273.i64[1] = (unint64_t)(v87.i8[3] & 0x1F) << 15;
      int8x16_t v274 = vorrq_s8(v273, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v266, v270), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v275 = vorrq_s8(v274, (int8x16_t)vdupq_laneq_s64((int64x2_t)v274, 1)).u64[0] | v272;
      unint64_t v276 = (v275 << v259) | v260;
      if (v259 >= 0x20)
      {
        *int8x16_t v258 = v276;
        unint64_t v276 = v275 >> (-8 * (a1 & 7u));
      }
      uint64_t v277 = (unsigned __int16)v262;
      v278.i64[0] = BYTE2(v262);
      v278.i64[1] = HIBYTE(v262);
      uint64x2_t v279 = vshlq_u64((uint64x2_t)vandq_s8(v278, v270), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v280 = v277 | v279.i64[0] | v279.i64[1];
      unint64_t v281 = (v259 + 32) & 0x38;
      unint64_t v282 = v276 | (v280 << v281);
      if (v281 >= 0x20)
      {
        *(void *)((char *)v258 + (((v259 + 32) >> 3) & 8)) = v282;
        unint64_t v282 = v280 >> -(char)v281;
      }
      int8x16_t v283 = vsubq_s8(v470, v466);
      int8x16_t v284 = vsubq_s8(v470, v467);
      int8x16_t v285 = vsubq_s8(v470, v468);
      int8x16_t v286 = vsubq_s8(v470, v469);
      int16x8_t v287 = (int16x8_t)vtrn1q_s8(v283, v284);
      int16x8_t v288 = (int16x8_t)vtrn2q_s8(v283, v284);
      int8x16_t v289 = vtrn1q_s8(v285, v286);
      int16x8_t v290 = (int16x8_t)vtrn2q_s8(v285, v286);
      int8x16_t v291 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v287, (int16x8_t)v289), (int32x4_t)vzip1q_s16(v288, v290)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v287, (int16x8_t)v289), (int32x4_t)vtrn2q_s16(v288, v290)));
      v289.i64[0] = 0x202020202020202;
      v289.i64[1] = 0x202020202020202;
      int8x16_t v292 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v465.i8), (int16x4_t)0x4000400040004)), v289);
      v289.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v289.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      uint8x16_t v293 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v285, (uint8x16_t)vorrq_s8(v292, v289)), v291);
      int16x8_t v294 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v292.i8);
      int16x8_t v295 = (int16x8_t)vmovl_high_u8((uint8x16_t)v292);
      uint16x8_t v296 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v293.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v294)), (int16x8_t)vshlq_u16(vmovl_high_u8(v293), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v295)));
      uint16x8_t v297 = (uint16x8_t)vpaddq_s16(v294, v295);
      int32x4_t v298 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v297.i8);
      int32x4_t v299 = (int32x4_t)vmovl_high_u16(v297);
      int32x4_t v300 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v296.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v298)), (int32x4_t)vshlq_u32(vmovl_high_u16(v296), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v299)));
      int32x4_t v301 = vpaddq_s32(v298, v299);
      v302.i64[0] = v300.u32[0];
      v302.i64[1] = v300.u32[1];
      uint64x2_t v303 = (uint64x2_t)v302;
      v302.i64[0] = v300.u32[2];
      v302.i64[1] = v300.u32[3];
      uint64x2_t v304 = (uint64x2_t)v302;
      v302.i64[0] = v301.u32[0];
      v302.i64[1] = v301.u32[1];
      int64x2_t v305 = v302;
      v302.i64[0] = v301.u32[2];
      v302.i64[1] = v301.u32[3];
      int64x2_t v306 = vpaddq_s64((int64x2_t)vshlq_u64(v303, (uint64x2_t)vzip1q_s64((int64x2_t)0, v305)), (int64x2_t)vshlq_u64(v304, (uint64x2_t)vzip1q_s64((int64x2_t)0, v302)));
      int64x2_t v307 = vpaddq_s64(v305, v302);
      unint64_t v308 = (v306.i64[0] << v259) | v282;
      if (v307.i64[0] + v259 >= 0x40)
      {
        v258[1] = v308;
        unint64_t v308 = (unint64_t)v306.i64[0] >> (-8 * (a1 & 7u));
        if (!v259) {
          unint64_t v308 = 0;
        }
      }
      unint64_t v309 = v307.i64[0] + (v259 | 0x40);
      unint64_t v310 = v308 | (v306.i64[1] << v309);
      if ((v309 & 0x3F) + v307.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v310;
        unint64_t v310 = (unint64_t)v306.i64[1] >> -(v309 & 0x3F);
        if ((v309 & 0x3F) == 0) {
          unint64_t v310 = 0;
        }
      }
      unint64_t v311 = v309 + v307.i64[1];
      v312.i64[0] = 0x808080808080808;
      v312.i64[1] = 0x808080808080808;
      v313.i64[0] = -1;
      v313.i64[1] = -1;
      int8x16_t v314 = vandq_s8(vextq_s8(vtstq_s8(v465, v312), (int8x16_t)0, 0xCuLL), v470);
      v315.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v315.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v316 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v313, (uint8x16_t)vaddq_s8(v314, v315)), v473);
      int16x8_t v317 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v314.i8);
      uint16x8_t v318 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v316.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v317)), (int16x8_t)vmovl_high_u8(v316));
      uint16x8_t v319 = (uint16x8_t)vpaddq_s16(v317, (int16x8_t)vmovl_high_u8((uint8x16_t)v314));
      int32x4_t v320 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v319.i8);
      int32x4_t v321 = (int32x4_t)vmovl_high_u16(v319);
      int32x4_t v322 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v318.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v320)), (int32x4_t)vshlq_u32(vmovl_high_u16(v318), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v321)));
      int32x4_t v323 = vpaddq_s32(v320, v321);
      v324.i64[0] = v322.u32[0];
      v324.i64[1] = v322.u32[1];
      uint64x2_t v325 = (uint64x2_t)v324;
      v324.i64[0] = v322.u32[2];
      v324.i64[1] = v322.u32[3];
      uint64x2_t v326 = (uint64x2_t)v324;
      v324.i64[0] = v323.u32[0];
      v324.i64[1] = v323.u32[1];
      int64x2_t v327 = v324;
      v324.i64[0] = v323.u32[2];
      v324.i64[1] = v323.u32[3];
      int64x2_t v328 = vpaddq_s64((int64x2_t)vshlq_u64(v325, (uint64x2_t)vzip1q_s64((int64x2_t)0, v327)), (int64x2_t)vshlq_u64(v326, (uint64x2_t)vzip1q_s64((int64x2_t)0, v324)));
      int64x2_t v329 = vpaddq_s64(v327, v324);
      unint64_t v330 = (v328.i64[0] << v311) | v310;
      if (v329.i64[0] + (v311 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v311 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330;
        unint64_t v330 = (unint64_t)v328.i64[0] >> -(v311 & 0x3F);
        if ((v311 & 0x3F) == 0) {
          unint64_t v330 = 0;
        }
      }
      unint64_t v331 = v329.i64[0] + v311;
      unint64_t v332 = v330 | (v328.i64[1] << v331);
      if ((v331 & 0x3F) + v329.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v331 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v332;
        unint64_t v332 = (unint64_t)v328.i64[1] >> -(v331 & 0x3F);
        if ((v331 & 0x3F) == 0) {
          unint64_t v332 = 0;
        }
      }
      unint64_t v333 = v331 + v329.i64[1];
      int8x16_t v334 = vextq_s8((int8x16_t)0, v466, 0xCuLL);
      v335.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v335.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v336.i64[0] = -1;
      v336.i64[1] = -1;
      uint8x16_t v337 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v336, (uint8x16_t)vaddq_s8(v334, v335)), v455);
      int16x8_t v338 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v334.i8);
      int16x8_t v339 = (int16x8_t)vmovl_high_u8((uint8x16_t)v334);
      uint16x8_t v340 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v337.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v338)), (int16x8_t)vshlq_u16(vmovl_high_u8(v337), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v339)));
      uint16x8_t v341 = (uint16x8_t)vpaddq_s16(v338, v339);
      int32x4_t v342 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v341.i8);
      int32x4_t v343 = (int32x4_t)vmovl_high_u16(v341);
      int32x4_t v344 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v340.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)), (int32x4_t)vshlq_u32(vmovl_high_u16(v340), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v343)));
      int32x4_t v345 = vpaddq_s32(v342, v343);
      v346.i64[0] = v344.u32[0];
      v346.i64[1] = v344.u32[1];
      uint64x2_t v347 = (uint64x2_t)v346;
      v346.i64[0] = v344.u32[2];
      v346.i64[1] = v344.u32[3];
      uint64x2_t v348 = (uint64x2_t)v346;
      v346.i64[0] = v345.u32[0];
      v346.i64[1] = v345.u32[1];
      int64x2_t v349 = v346;
      v346.i64[0] = v345.u32[2];
      v346.i64[1] = v345.u32[3];
      int64x2_t v350 = vpaddq_s64((int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)), (int64x2_t)vshlq_u64(v348, (uint64x2_t)vzip1q_s64((int64x2_t)0, v346)));
      int64x2_t v351 = vpaddq_s64(v349, v346);
      unint64_t v352 = (v350.i64[0] << v333) | v332;
      if (v351.i64[0] + (v333 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v333 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        unint64_t v352 = (unint64_t)v350.i64[0] >> -(v333 & 0x3F);
        if ((v333 & 0x3F) == 0) {
          unint64_t v352 = 0;
        }
      }
      unint64_t v353 = v351.i64[0] + v333;
      unint64_t v354 = v352 | (v350.i64[1] << v353);
      if ((v353 & 0x3F) + v351.i64[1] >= 0x40)
      {
        *(void *)((char *)v258 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v354;
        unint64_t v354 = (unint64_t)v350.i64[1] >> -(v353 & 0x3F);
        if ((v353 & 0x3F) == 0) {
          unint64_t v354 = 0;
        }
      }
      unint64_t v355 = v353 + v351.i64[1];
      v356.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v356.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v357.i64[0] = -1;
      v357.i64[1] = -1;
      uint8x16_t v358 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v357, (uint8x16_t)vaddq_s8(v466, v356)), v457);
      int16x8_t v359 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v466.i8);
      int16x8_t v360 = (int16x8_t)vmovl_high_u8((uint8x16_t)v466);
      uint16x8_t v361 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v358.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v359)), (int16x8_t)vshlq_u16(vmovl_high_u8(v358), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v360)));
      uint16x8_t v362 = (uint16x8_t)vpaddq_s16(v359, v360);
      int32x4_t v363 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v362.i8);
      int32x4_t v364 = (int32x4_t)vmovl_high_u16(v362);
      int32x4_t v365 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v361.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v363)), (int32x4_t)vshlq_u32(vmovl_high_u16(v361), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)));
      int32x4_t v366 = vpaddq_s32(v363, v364);
      v367.i64[0] = v365.u32[0];
      v367.i64[1] = v365.u32[1];
      uint64x2_t v368 = (uint64x2_t)v367;
      v367.i64[0] = v365.u32[2];
      v367.i64[1] = v365.u32[3];
      uint64x2_t v369 = (uint64x2_t)v367;
      v367.i64[0] = v366.u32[0];
      v367.i64[1] = v366.u32[1];
      int64x2_t v370 = v367;
      v367.i64[0] = v366.u32[2];
      v367.i64[1] = v366.u32[3];
      int64x2_t v371 = vpaddq_s64((int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)), (int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v367)));
      int64x2_t v372 = vpaddq_s64(v370, v367);
      unint64_t v373 = (v371.i64[0] << v355) | v354;
      if (v372.i64[0] + (v355 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v258 + ((v355 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v373;
        if ((v355 & 0x3F) != 0) {
          unint64_t v373 = (unint64_t)v371.i64[0] >> -(v355 & 0x3F);
        }
        else {
          unint64_t v373 = 0;
        }
      }
      uint64_t v374 = v372.i64[1];
      unint64_t v375 = v372.i64[0] + v355;
      uint64_t v376 = (v372.i64[0] + v355) & 0x3F;
      unint64_t v377 = v373 | (v371.i64[1] << v375);
      if ((unint64_t)(v376 + v372.i64[1]) >= 0x40)
      {
        *(void *)((char *)v258 + ((v375 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
        unint64_t v377 = (unint64_t)v371.i64[1] >> -(char)v376;
        if (!v376) {
          unint64_t v377 = 0;
        }
      }
      uint64_t v378 = 0;
      v379.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v379.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v380.i64[0] = -1;
      v380.i64[1] = -1;
      unint64_t v381 = v375 + v374;
      char v382 = 1;
      do
      {
        char v383 = v382;
        uint8x16_t v384 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v380, (uint8x16_t)vaddq_s8(v467, v379)), *(&v458 + v378));
        int16x8_t v385 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v467.i8);
        int16x8_t v386 = (int16x8_t)vmovl_high_u8((uint8x16_t)v467);
        uint16x8_t v387 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v384.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v385)), (int16x8_t)vshlq_u16(vmovl_high_u8(v384), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v386)));
        uint16x8_t v388 = (uint16x8_t)vpaddq_s16(v385, v386);
        int32x4_t v389 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v388.i8);
        int32x4_t v390 = (int32x4_t)vmovl_high_u16(v388);
        int32x4_t v391 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v387.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v389)), (int32x4_t)vshlq_u32(vmovl_high_u16(v387), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)));
        int32x4_t v392 = vpaddq_s32(v389, v390);
        v393.i64[0] = v391.u32[0];
        v393.i64[1] = v391.u32[1];
        uint64x2_t v394 = (uint64x2_t)v393;
        v393.i64[0] = v391.u32[2];
        v393.i64[1] = v391.u32[3];
        uint64x2_t v395 = (uint64x2_t)v393;
        v393.i64[0] = v392.u32[0];
        v393.i64[1] = v392.u32[1];
        int64x2_t v396 = v393;
        v393.i64[0] = v392.u32[2];
        v393.i64[1] = v392.u32[3];
        int64x2_t v397 = vpaddq_s64((int64x2_t)vshlq_u64(v394, (uint64x2_t)vzip1q_s64((int64x2_t)0, v396)), (int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v393)));
        int64x2_t v398 = vpaddq_s64(v396, v393);
        unint64_t v399 = (v397.i64[0] << v381) | v377;
        if (v398.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v399;
          unint64_t v399 = (unint64_t)v397.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v399 = 0;
          }
        }
        unint64_t v400 = v398.i64[0] + v381;
        unint64_t v377 = v399 | (v397.i64[1] << v400);
        if ((v400 & 0x3F) + v398.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v400 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v397.i64[1] >> -(v400 & 0x3F);
          if ((v400 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v382 = 0;
        unint64_t v381 = v400 + v398.i64[1];
        uint64_t v378 = 1;
      }
      while ((v383 & 1) != 0);
      uint64_t v401 = 0;
      char v402 = 1;
      v403.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v403.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        char v405 = v402;
        uint8x16_t v406 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v404, (uint8x16_t)vaddq_s8(v468, v403)), *(&v460 + v401));
        int16x8_t v407 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v468.i8);
        int16x8_t v408 = (int16x8_t)vmovl_high_u8((uint8x16_t)v468);
        uint16x8_t v409 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v406.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v407)), (int16x8_t)vshlq_u16(vmovl_high_u8(v406), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v408)));
        uint16x8_t v410 = (uint16x8_t)vpaddq_s16(v407, v408);
        int32x4_t v411 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v410.i8);
        int32x4_t v412 = (int32x4_t)vmovl_high_u16(v410);
        int32x4_t v413 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v409.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v411)), (int32x4_t)vshlq_u32(vmovl_high_u16(v409), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v412)));
        int32x4_t v414 = vpaddq_s32(v411, v412);
        v415.i64[0] = v413.u32[0];
        v415.i64[1] = v413.u32[1];
        uint64x2_t v416 = (uint64x2_t)v415;
        v415.i64[0] = v413.u32[2];
        v415.i64[1] = v413.u32[3];
        uint64x2_t v417 = (uint64x2_t)v415;
        v415.i64[0] = v414.u32[0];
        v415.i64[1] = v414.u32[1];
        int64x2_t v418 = v415;
        v415.i64[0] = v414.u32[2];
        v415.i64[1] = v414.u32[3];
        int64x2_t v419 = vpaddq_s64((int64x2_t)vshlq_u64(v416, (uint64x2_t)vzip1q_s64((int64x2_t)0, v418)), (int64x2_t)vshlq_u64(v417, (uint64x2_t)vzip1q_s64((int64x2_t)0, v415)));
        int64x2_t v420 = vpaddq_s64(v418, v415);
        unint64_t v421 = (v419.i64[0] << v381) | v377;
        if (v420.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v421;
          unint64_t v421 = (unint64_t)v419.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v421 = 0;
          }
        }
        unint64_t v422 = v420.i64[0] + v381;
        unint64_t v377 = v421 | (v419.i64[1] << v422);
        if ((v422 & 0x3F) + v420.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v422 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v419.i64[1] >> -(v422 & 0x3F);
          if ((v422 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v402 = 0;
        unint64_t v381 = v422 + v420.i64[1];
        uint64_t v401 = 1;
      }
      while ((v405 & 1) != 0);
      uint64_t v423 = 0;
      char v424 = 1;
      v425.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v425.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v426.i64[0] = -1;
      v426.i64[1] = -1;
      do
      {
        char v427 = v424;
        uint8x16_t v428 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v426, (uint8x16_t)vaddq_s8(v469, v425)), *(&v462 + v423));
        int16x8_t v429 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v469.i8);
        int16x8_t v430 = (int16x8_t)vmovl_high_u8((uint8x16_t)v469);
        uint16x8_t v431 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v428.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v429)), (int16x8_t)vshlq_u16(vmovl_high_u8(v428), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v430)));
        uint16x8_t v432 = (uint16x8_t)vpaddq_s16(v429, v430);
        int32x4_t v433 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v432.i8);
        int32x4_t v434 = (int32x4_t)vmovl_high_u16(v432);
        int32x4_t v435 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v431.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v433)), (int32x4_t)vshlq_u32(vmovl_high_u16(v431), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v434)));
        int32x4_t v436 = vpaddq_s32(v433, v434);
        v437.i64[0] = v435.u32[0];
        v437.i64[1] = v435.u32[1];
        uint64x2_t v438 = (uint64x2_t)v437;
        v437.i64[0] = v435.u32[2];
        v437.i64[1] = v435.u32[3];
        uint64x2_t v439 = (uint64x2_t)v437;
        v437.i64[0] = v436.u32[0];
        v437.i64[1] = v436.u32[1];
        int64x2_t v440 = v437;
        v437.i64[0] = v436.u32[2];
        v437.i64[1] = v436.u32[3];
        int64x2_t v441 = vpaddq_s64((int64x2_t)vshlq_u64(v438, (uint64x2_t)vzip1q_s64((int64x2_t)0, v440)), (int64x2_t)vshlq_u64(v439, (uint64x2_t)vzip1q_s64((int64x2_t)0, v437)));
        int64x2_t v442 = vpaddq_s64(v440, v437);
        unint64_t v443 = (v441.i64[0] << v381) | v377;
        if (v442.i64[0] + (v381 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v443;
          unint64_t v443 = (unint64_t)v441.i64[0] >> -(v381 & 0x3F);
          if ((v381 & 0x3F) == 0) {
            unint64_t v443 = 0;
          }
        }
        unint64_t v444 = v442.i64[0] + v381;
        unint64_t v377 = v443 | (v441.i64[1] << v444);
        if ((v444 & 0x3F) + v442.i64[1] >= 0x40)
        {
          *(void *)((char *)v258 + ((v444 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v441.i64[1] >> -(v444 & 0x3F);
          if ((v444 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        char v424 = 0;
        unint64_t v381 = v444 + v442.i64[1];
        uint64_t v423 = 1;
      }
      while ((v427 & 1) != 0);
      if ((v381 & 0x3F) != 0) {
        *(void *)((char *)v258 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
      }
      unint64_t result = (v381 - v259 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(float32x4_t *a1, uint64_t a2, unint64_t a3, unsigned int a4, int a5)
{
  uint64_t v405 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v19 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    int8x16_t v20 = (_OWORD *)((char *)a1->f32 + a2);
    *int8x16_t v20 = 0u;
    v20[1] = 0u;
    int8x16_t v21 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *int8x16_t v21 = 0u;
    v21[1] = 0u;
    int8x16_t v22 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
LABEL_161:
    *int8x16_t v22 = v19;
    v22[1] = v19;
    return result;
  }
  char v15 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v390, a5);
    }
    int32x4_t v378 = v391;
    int32x4_t v380 = v390;
    int32x4_t v374 = v393;
    int32x4_t v376 = v392;
    int32x4_t v372 = v395;
    int32x4_t v373 = v394;
    unint64_t v27 = a3 + 16;
    int32x4_t v370 = v397;
    int32x4_t v371 = v396;
    if ((v15 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v27, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v27, (uint64_t)&v390, a5);
    }
    int32x4_t v368 = v391;
    int32x4_t v369 = v390;
    int32x4_t v366 = v393;
    int32x4_t v367 = v392;
    int32x4_t v364 = v395;
    int32x4_t v365 = v394;
    unint64_t v28 = a3 + 32;
    int32x4_t v363 = v396;
    int32x4_t v382 = v397;
    if ((v15 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v28, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v28, (uint64_t)&v390, a5);
    }
    int32x4_t v361 = v391;
    int32x4_t v362 = v390;
    int32x4_t v359 = v393;
    int32x4_t v360 = v392;
    int32x4_t v357 = v395;
    int32x4_t v358 = v394;
    unint64_t v29 = a3 + 48;
    int32x4_t v355 = v397;
    int32x4_t v356 = v396;
    if ((v15 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v390, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v390, a5);
    }
    *(int16x4_t *)v38.i8 = vmovn_s32(v355);
    *(int16x4_t *)v42.i8 = vmovn_s32(v356);
    *(int16x4_t *)v47.i8 = vmovn_s32(v357);
    *(int16x4_t *)v49.i8 = vmovn_s32(v358);
    *(int16x4_t *)v44.i8 = vmovn_s32(v359);
    *(int16x4_t *)v45.i8 = vmovn_s32(v360);
    *(int16x4_t *)v5.i8 = vmovn_s32(v361);
    *(int16x4_t *)v6.i8 = vmovn_s32(v362);
    v50.i64[1] = v382.i64[1];
    *(int16x4_t *)v50.i8 = vmovn_s32(v382);
    int16x8_t v383 = v50;
    *(int16x4_t *)v30.i8 = vmovn_s32(v363);
    *(int16x4_t *)v34.i8 = vmovn_s32(v364);
    *(int16x4_t *)v35.i8 = vmovn_s32(v365);
    *(int16x4_t *)v31.i8 = vmovn_s32(v366);
    *(int16x4_t *)v33.i8 = vmovn_s32(v367);
    *(int16x4_t *)v41.i8 = vmovn_s32(v368);
    *(int16x4_t *)v43.i8 = vmovn_s32(v369);
    *(int16x4_t *)v46.i8 = vmovn_s32(v370);
    *(int16x4_t *)v48.i8 = vmovn_s32(v371);
    *(int16x4_t *)v7.i8 = vmovn_s32(v372);
    *(int16x4_t *)v8.i8 = vmovn_s32(v373);
    *(int16x4_t *)v9.i8 = vmovn_s32(v374);
    *(int16x4_t *)v10.i8 = vmovn_s32(v376);
    *(int16x4_t *)v11.i8 = vmovn_s32(v378);
    *(int16x4_t *)v12.i8 = vmovn_s32(v380);
    *(int16x4_t *)v39.i8 = vmovn_s32(v390);
    *(int16x4_t *)v37.i8 = vmovn_s32(v391);
    v51.i64[1] = v393.i64[1];
    *(int16x4_t *)v32.i8 = vmovn_s32(v392);
    *(int16x4_t *)v51.i8 = vmovn_s32(v393);
    v52.i64[1] = v395.i64[1];
    *(int16x4_t *)v40.i8 = vmovn_s32(v394);
    *(int16x4_t *)v36.i8 = vmovn_s32(v395);
    v53.i64[1] = v396.i64[1];
    *(int16x4_t *)v52.i8 = vmovn_s32(v396);
    *(int16x4_t *)v53.i8 = vmovn_s32(v397);
    v50.i32[0] = vmovn_s16(v12).u32[0];
    v50.i32[1] = vmovn_s16(v11).u32[0];
    v50.i32[2] = vmovn_s16(v8).u32[0];
    v50.i32[3] = vmovn_s16(v7).u32[0];
    v54.i32[0] = vmovn_s16(v6).u32[0];
    v54.i32[1] = vmovn_s16(v5).u32[0];
    v54.i32[2] = vmovn_s16(v49).u32[0];
    v54.i32[3] = vmovn_s16(v47).u32[0];
    *a1 = (float32x4_t)v50;
    a1[1] = v54;
    v50.i32[0] = vmovn_s16(v10).u32[0];
    v50.i32[1] = vmovn_s16(v9).u32[0];
    v50.i32[2] = vmovn_s16(v48).u32[0];
    v50.i32[3] = vmovn_s16(v46).u32[0];
    int8x16_t v55 = (int16x8_t *)((char *)a1 + a2);
    v56.i32[0] = vmovn_s16(v45).u32[0];
    v56.i32[1] = vmovn_s16(v44).u32[0];
    v56.i32[2] = vmovn_s16(v42).u32[0];
    v56.i32[3] = vmovn_s16(v38).u32[0];
    *int8x16_t v55 = v50;
    v55[1] = v56;
    v50.i32[0] = vmovn_s16(v43).u32[0];
    v50.i32[1] = vmovn_s16(v41).u32[0];
    v50.i32[2] = vmovn_s16(v35).u32[0];
    v50.i32[3] = vmovn_s16(v34).u32[0];
    v57.i32[0] = vmovn_s16(v39).u32[0];
    v57.i32[1] = vmovn_s16(v37).u32[0];
    v57.i32[2] = vmovn_s16(v40).u32[0];
    int8x16_t v58 = (int16x8_t *)((char *)a1 + a2 + a2);
    v57.i32[3] = vmovn_s16(v36).u32[0];
    LODWORD(v59) = vmovn_s16(v33).u32[0];
    DWORD1(v59) = vmovn_s16(v31).u32[0];
    DWORD2(v59) = vmovn_s16(v30).u32[0];
    *int8x16_t v58 = v50;
    v58[1] = v57;
    HIDWORD(v59) = vmovn_s16(v383).u32[0];
    v50.i32[0] = vmovn_s16(v32).u32[0];
    v50.i32[1] = vmovn_s16(v51).u32[0];
    v50.i32[2] = vmovn_s16(v52).u32[0];
    v50.i32[3] = vmovn_s16(v53).u32[0];
    int8x16_t v60 = &v58->i8[a2];
    *(_OWORD *)int8x16_t v60 = v59;
    *((int16x8_t *)v60 + 1) = v50;
    return 64;
  }
  if (a4 == 127)
  {
    int64x2_t v61 = *(int64x2_t *)a3;
    int64x2_t v62 = *(int64x2_t *)(a3 + 16);
    int64x2_t v63 = *(int64x2_t *)(a3 + 32);
    int64x2_t v64 = *(int64x2_t *)(a3 + 48);
    int64x2_t v65 = *(int64x2_t *)(a3 + 64);
    int64x2_t v66 = *(int64x2_t *)(a3 + 80);
    int64x2_t v67 = *(int64x2_t *)(a3 + 96);
    int64x2_t v68 = *(int64x2_t *)(a3 + 112);
    int8x16_t v69 = (int64x2_t *)((char *)a1 + a2);
    *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v62);
    a1[1] = (float32x4_t)vzip1q_s64(v65, v66);
    int8x16_t v70 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int8x16_t v69 = vzip2q_s64(v61, v62);
    v69[1] = vzip2q_s64(v65, v66);
    *int8x16_t v70 = vzip1q_s64(v63, v64);
    v70[1] = vzip1q_s64(v67, v68);
    int8x16_t v71 = (int64x2_t *)((char *)v70 + a2);
    *int8x16_t v71 = vzip2q_s64(v63, v64);
    v71[1] = vzip2q_s64(v67, v68);
    return 128;
  }
  if (a4 == 3)
  {
    float32x4_t v23 = vld1q_dup_f32((const float *)a3);
    *a1 = v23;
    a1[1] = v23;
    int8x16_t v24 = (float32x4_t *)((char *)a1 + a2);
    *int8x16_t v24 = v23;
    v24[1] = v23;
    int8x16_t v25 = (float32x4_t *)((char *)a1 + 2 * a2);
    *int8x16_t v25 = v23;
    v25[1] = v23;
    int8x16_t v26 = (float32x4_t *)((char *)a1 + 2 * a2 + a2);
    *int8x16_t v26 = v23;
    v26[1] = v23;
    return 4;
  }
  unsigned __int8 v388 = 0;
  unint64_t v385 = 8 * (a3 & 7);
  unint64_t v386 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v387 = v385 | 0x200;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v399, (uint64_t)v404, (float *)v398.i32, &v385, a4);
  v73.i64[0] = 0x303030303030303;
  v73.i64[1] = 0x303030303030303;
  int8x16_t v74 = vandq_s8(v399, v73);
  int8x16_t v75 = vbicq_s8(v404[0], vceqq_s8(v74, v73));
  v404[0] = v75;
  int8x16_t v400 = v75;
  int8x16_t v401 = v75;
  int8x16_t v402 = v75;
  int8x16_t v403 = v75;
  v76.i64[0] = 0x202020202020202;
  v76.i64[1] = 0x202020202020202;
  int8x16_t v77 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v399.i8), (int16x4_t)0x4000400040004)), v76);
  unint64_t v78 = v385;
  if (vmaxvq_s8(v77) < 1)
  {
    v91.i64[0] = -1;
    v91.i64[1] = -1;
    int8x16_t v377 = v91;
    int8x16_t v379 = v91;
    int8x16_t v375 = v91;
    int8x16_t v381 = v91;
  }
  else
  {
    int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v77, v77));
    int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
    unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
    v82.i64[0] = v81;
    v82.i64[1] = HIDWORD(v81);
    int64x2_t v83 = v82;
    unint64_t v84 = vaddvq_s64(v82);
    unint64_t v85 = v84;
    unint64_t v86 = v385 + v84;
    if (v387) {
      BOOL v87 = v387 >= v86;
    }
    else {
      BOOL v87 = 1;
    }
    int v88 = !v87;
    if (v84 <= 0x80 && v88 == 0)
    {
      v72.i64[0] = 63;
      int8x16_t v92 = (int64x2_t *)(v386 + 8 * (v385 >> 6));
      int64x2_t v93 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v385, v72).i64[0], 0), vzip1q_s64((int64x2_t)0, v83));
      int8x16_t v90 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v93)));
      if ((v385 & 0x3F) + v85 >= 0x81) {
        int8x16_t v90 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v93)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v93))), v90);
      }
      unint64_t v78 = v86;
    }
    else
    {
      unsigned __int8 v388 = 1;
      int8x16_t v90 = 0uLL;
    }
    int32x2_t v94 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v95.i64[0] = v94.u32[0];
    v95.i64[1] = v94.u32[1];
    int64x2_t v96 = (int64x2_t)vshlq_u64((uint64x2_t)v90, (uint64x2_t)vnegq_s64(v95));
    *(int32x2_t *)v90.i8 = vmovn_s64((int64x2_t)v90);
    *(int32x2_t *)v96.i8 = vmovn_s64(v96);
    int16x8_t v97 = (int16x8_t)vzip1q_s32((int32x4_t)v90, (int32x4_t)v96);
    int16x8_t v98 = (int16x8_t)vshlq_u32((uint32x4_t)v97, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v97.i8 = vmovn_s32((int32x4_t)v97);
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    int8x16_t v99 = (int8x16_t)vzip1q_s16(v97, v98);
    int8x16_t v100 = (int8x16_t)vshlq_u16((uint16x8_t)v99, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v77.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL)))));
    *(int8x8_t *)v99.i8 = vmovn_s16((int16x8_t)v99);
    *(int8x8_t *)v100.i8 = vmovn_s16((int16x8_t)v100);
    int8x16_t v101 = vzip1q_s8(v99, v100);
    v100.i64[0] = 0x101010101010101;
    v100.i64[1] = 0x101010101010101;
    int8x16_t v102 = vshlq_s8(v100, v77);
    v100.i64[0] = -1;
    v100.i64[1] = -1;
    int32x4_t v103 = (int32x4_t)vqtbl1q_s8(vandq_s8(v101, vaddq_s8(v102, v100)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v104 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v103.i8, 0);
    int8x16_t v105 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v103.i8, 1);
    int8x16_t v106 = (int8x16_t)vdupq_laneq_s32(v103, 2);
    int8x16_t v107 = (int8x16_t)vdupq_laneq_s32(v103, 3);
    int8x16_t v400 = vsubq_s8(v400, v104);
    int8x16_t v401 = vsubq_s8(v401, v105);
    int8x16_t v402 = vsubq_s8(v402, v106);
    int8x16_t v403 = vsubq_s8(v403, v107);
    int8x16_t v381 = vceqzq_s8(v104);
    int8x16_t v375 = vceqzq_s8(v105);
    int8x16_t v377 = vceqzq_s8(v106);
    int8x16_t v379 = vceqzq_s8(v107);
  }
  v108.i64[0] = 0x808080808080808;
  v108.i64[1] = 0x808080808080808;
  int8x16_t v109 = 0uLL;
  int8x16_t v110 = vandq_s8(vextq_s8(vtstq_s8(v399, v108), (int8x16_t)0, 0xCuLL), v75);
  int8x16_t v111 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v110, v110));
  int8x16_t v112 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v111, (int16x8_t)v111));
  unint64_t v113 = vpaddq_s32((int32x4_t)v112, (int32x4_t)v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v387) {
    BOOL v117 = v387 >= v78 + v116;
  }
  else {
    BOOL v117 = 1;
  }
  int v118 = !v117;
  if (v116 <= 0x80 && v118 == 0)
  {
    int64x2_t v120 = vaddq_s64(vdupq_n_s64(v78 & 0x3F), vzip1q_s64((int64x2_t)0, v115));
    int8x16_t v121 = (int64x2_t *)(v386 + 8 * (v78 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v121, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v121->i64[0], 0), (uint64x2_t)vnegq_s64(v120)));
    if ((v78 & 0x3F) + v116 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v121[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v120)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v121[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v120))), v109);
    }
    v78 += v116;
  }
  else
  {
    unsigned __int8 v388 = 1;
  }
  int v122 = v399.i8[0] & 3;
  if (v122 == 2)
  {
    unint64_t v123 = v78 + 4;
    if (v387)
    {
      if (v387 >= v123)
      {
        unint64_t v124 = v78 + 8;
        v78 += 4;
      }
      else
      {
        unsigned __int8 v388 = 1;
        unint64_t v124 = v78 + 4;
      }
      if (v387 < v124)
      {
        unsigned __int8 v388 = 1;
        goto LABEL_61;
      }
      unint64_t v123 = v78;
    }
    unint64_t v78 = v123 + 4;
  }
LABEL_61:
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v400, 0xCuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v126, v126));
  int8x16_t v128 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v127, (int16x8_t)v127));
  unint64_t v129 = vpaddq_s32((int32x4_t)v128, (int32x4_t)v128).u64[0];
  v130.i64[0] = v129;
  v130.i64[1] = HIDWORD(v129);
  int64x2_t v131 = v130;
  unint64_t v132 = vaddvq_s64(v130);
  unint64_t v133 = v78 + v132;
  if (v387) {
    BOOL v134 = v387 >= v133;
  }
  else {
    BOOL v134 = 1;
  }
  int v135 = !v134;
  int8x16_t v384 = v74;
  if (v132 > 0x80 || v135)
  {
    int v140 = 1;
    unint64_t v138 = v386;
  }
  else
  {
    unint64_t v136 = v78 & 0x3F;
    int64x2_t v137 = vaddq_s64(vdupq_n_s64(v136), vzip1q_s64((int64x2_t)0, v131));
    unint64_t v138 = v386;
    int8x16_t v139 = (int64x2_t *)(v386 + 8 * (v78 >> 6));
    int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v139, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139->i64[0], 0), (uint64x2_t)vnegq_s64(v137)));
    if (v136 + v132 >= 0x81) {
      int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v139[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v137)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v139[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v137))), v125);
    }
    int v140 = v388;
    unint64_t v78 = v133;
  }
  int8x16_t v141 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v400, v400));
  int8x16_t v142 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v141, (int16x8_t)v141));
  unint64_t v143 = vpaddq_s32((int32x4_t)v142, (int32x4_t)v142).u64[0];
  v144.i64[0] = v143;
  v144.i64[1] = HIDWORD(v143);
  int64x2_t v145 = v144;
  unint64_t v146 = vaddvq_s64(v144);
  unint64_t v147 = v78 + v146;
  if (v387) {
    BOOL v148 = v387 >= v147;
  }
  else {
    BOOL v148 = 1;
  }
  char v149 = !v148;
  int8x16_t v150 = 0uLL;
  if (v146 > 0x80 || (v149 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v147 = v78;
    int8x16_t v154 = 0uLL;
  }
  else
  {
    unint64_t v151 = v78 & 0x3F;
    int64x2_t v152 = vaddq_s64(vdupq_n_s64(v151), vzip1q_s64((int64x2_t)0, v145));
    int8x16_t v153 = (int64x2_t *)(v138 + 8 * (v78 >> 6));
    int8x16_t v154 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v153, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153->i64[0], 0), (uint64x2_t)vnegq_s64(v152)));
    if (v151 + v146 >= 0x81) {
      int8x16_t v154 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v153[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v152)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v153[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v152))), v154);
    }
  }
  int8x16_t v155 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v401, v401));
  int8x16_t v156 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v155, (int16x8_t)v155));
  unint64_t v157 = vpaddq_s32((int32x4_t)v156, (int32x4_t)v156).u64[0];
  v158.i64[0] = v157;
  v158.i64[1] = HIDWORD(v157);
  int64x2_t v159 = v158;
  unint64_t v160 = vaddvq_s64(v158);
  unint64_t v161 = v160;
  unint64_t v162 = v147 + v160;
  if (v387) {
    BOOL v163 = v387 >= v162;
  }
  else {
    BOOL v163 = 1;
  }
  char v164 = !v163;
  if (v160 > 0x80 || (v164 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v162 = v147;
  }
  else
  {
    unint64_t v165 = v147 & 0x3F;
    int64x2_t v166 = vaddq_s64(vdupq_n_s64(v165), vzip1q_s64((int64x2_t)0, v159));
    int8x16_t v167 = (int64x2_t *)(v138 + 8 * (v147 >> 6));
    int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v167, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v166)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v167->i64[0], 0), (uint64x2_t)vnegq_s64(v166)));
    if (v165 + v161 >= 0x81) {
      int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v167[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v166)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v167[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v166))), v150);
    }
  }
  unint64_t v168 = v162 + v161;
  if (v387) {
    BOOL v169 = v387 >= v168;
  }
  else {
    BOOL v169 = 1;
  }
  char v170 = !v169;
  int8x16_t v171 = 0uLL;
  if (v161 > 0x80 || (v170 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v168 = v162;
    int8x16_t v175 = 0uLL;
  }
  else
  {
    unint64_t v172 = v162 & 0x3F;
    int64x2_t v173 = vaddq_s64(vdupq_n_s64(v172), vzip1q_s64((int64x2_t)0, v159));
    int8x16_t v174 = (int64x2_t *)(v138 + 8 * (v162 >> 6));
    int8x16_t v175 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v174, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v174->i64[0], 0), (uint64x2_t)vnegq_s64(v173)));
    if (v172 + v161 >= 0x81) {
      int8x16_t v175 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v174[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v173)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v174[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v173))), v175);
    }
  }
  int8x16_t v176 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v402, v402));
  int8x16_t v177 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v176, (int16x8_t)v176));
  unint64_t v178 = vpaddq_s32((int32x4_t)v177, (int32x4_t)v177).u64[0];
  v179.i64[0] = v178;
  v179.i64[1] = HIDWORD(v178);
  int64x2_t v180 = v179;
  unint64_t v181 = vaddvq_s64(v179);
  unint64_t v182 = v181;
  unint64_t v183 = v168 + v181;
  if (v387) {
    BOOL v184 = v387 >= v183;
  }
  else {
    BOOL v184 = 1;
  }
  char v185 = !v184;
  if (v181 > 0x80 || (v185 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v183 = v168;
  }
  else
  {
    unint64_t v186 = v168 & 0x3F;
    int64x2_t v187 = vaddq_s64(vdupq_n_s64(v186), vzip1q_s64((int64x2_t)0, v180));
    int8x16_t v188 = (int64x2_t *)(v138 + 8 * (v168 >> 6));
    int8x16_t v171 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v188, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v187)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v188->i64[0], 0), (uint64x2_t)vnegq_s64(v187)));
    if (v186 + v182 >= 0x81) {
      int8x16_t v171 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v188[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v187)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v188[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v187))), v171);
    }
  }
  unint64_t v189 = v183 + v182;
  if (v387) {
    BOOL v190 = v387 >= v189;
  }
  else {
    BOOL v190 = 1;
  }
  char v191 = !v190;
  int8x16_t v192 = 0uLL;
  if (v182 > 0x80 || (v191 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v189 = v183;
    int8x16_t v196 = 0uLL;
  }
  else
  {
    unint64_t v193 = v183 & 0x3F;
    int64x2_t v194 = vaddq_s64(vdupq_n_s64(v193), vzip1q_s64((int64x2_t)0, v180));
    int8x16_t v195 = (int64x2_t *)(v138 + 8 * (v183 >> 6));
    int8x16_t v196 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v195, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v194)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195->i64[0], 0), (uint64x2_t)vnegq_s64(v194)));
    if (v193 + v182 >= 0x81) {
      int8x16_t v196 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v195[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v194)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v195[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v194))), v196);
    }
  }
  int8x16_t v197 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v403, v403));
  int8x16_t v198 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v197, (int16x8_t)v197));
  unint64_t v199 = vpaddq_s32((int32x4_t)v198, (int32x4_t)v198).u64[0];
  v200.i64[0] = v199;
  v200.i64[1] = HIDWORD(v199);
  int64x2_t v201 = v200;
  unint64_t v202 = vaddvq_s64(v200);
  unint64_t v203 = v202;
  unint64_t v204 = v189 + v202;
  if (v387) {
    BOOL v205 = v387 >= v204;
  }
  else {
    BOOL v205 = 1;
  }
  char v206 = !v205;
  if (v202 > 0x80 || (v206 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v204 = v189;
  }
  else
  {
    unint64_t v207 = v189 & 0x3F;
    int64x2_t v208 = vaddq_s64(vdupq_n_s64(v207), vzip1q_s64((int64x2_t)0, v201));
    int8x16_t v209 = (int64x2_t *)(v138 + 8 * (v189 >> 6));
    int8x16_t v192 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v209, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209->i64[0], 0), (uint64x2_t)vnegq_s64(v208)));
    if (v207 + v203 >= 0x81) {
      int8x16_t v192 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v209[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v209[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v208))), v192);
    }
  }
  unint64_t v210 = v204 + v203;
  if (v387) {
    BOOL v211 = v387 >= v210;
  }
  else {
    BOOL v211 = 1;
  }
  char v212 = !v211;
  int8x16_t v213 = 0uLL;
  if (v203 > 0x80 || (v212 & 1) != 0)
  {
    int v140 = 1;
    unint64_t v210 = v204;
  }
  else
  {
    int64x2_t v214 = vaddq_s64(vdupq_n_s64(v204 & 0x3F), vzip1q_s64((int64x2_t)0, v201));
    int8x16_t v215 = (int64x2_t *)(v138 + 8 * (v204 >> 6));
    int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v215, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215->i64[0], 0), (uint64x2_t)vnegq_s64(v214)));
    if ((v204 & 0x3F) + v203 >= 0x81) {
      int8x16_t v213 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v215[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v214)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v215[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v214))), v213);
    }
  }
  if (v140 || v387 + 8 * result - v210 - 512 >= 9 || v122 == 2)
  {
    uint64_t v216 = (8 * (&v389 + 4)) & 0x20;
    uint64_t v217 = v389 | (255 << v216);
    uint64_t v389 = v217;
    unint64_t v218 = (32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 8;
    unint64_t v219 = (((32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 0x10) - v216) | 8;
    if (v218 - v216 > 0x18) {
      unint64_t v219 = v218 - v216 + 8;
    }
    if (v219 <= 0x20)
    {
      if (v218 - v216 <= 0x18) {
        unint64_t v218 = (32 * ((((unint64_t)&v389 + 4) >> 2) & 1)) | 0x10;
      }
      uint64_t v220 = v217 | (255 << v218);
      uint64_t v389 = v220;
      uint64_t v221 = ((_BYTE)v218 + 8) & 0x38;
      if ((unint64_t)(v221 - v216 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v389 = v220 | (255 << v221);
      }
    }
    uint64_t result = 0;
    int8x16_t v222 = (_OWORD *)((char *)a1->f32 + a2);
    long long v19 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    int8x16_t v223 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *int8x16_t v222 = 0u;
    v222[1] = 0u;
    int8x16_t v22 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
    *int8x16_t v223 = 0u;
    v223[1] = 0u;
    goto LABEL_161;
  }
  int32x2_t v224 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v112, v112, 8uLL));
  int32x2_t v225 = vzip1_s32(*(int32x2_t *)v156.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v156, v156, 8uLL));
  uint16x4_t v226 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x4_t v227 = (int32x4_t)vextq_s8(v155, v155, 8uLL);
  uint16x4_t v228 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v155.i8, *(int16x4_t *)v227.i8);
  v229.i64[0] = v224.u32[0];
  v229.i64[1] = v224.u32[1];
  int64x2_t v230 = v229;
  v229.i64[0] = v225.u32[0];
  v229.i64[1] = v225.u32[1];
  uint64x2_t v231 = (uint64x2_t)vnegq_s64(v229);
  int64x2_t v232 = (int64x2_t)vshlq_u64((uint64x2_t)v109, (uint64x2_t)vnegq_s64(v230));
  *(int32x2_t *)v227.i8 = vmovn_s64((int64x2_t)v109);
  *(int32x2_t *)v232.i8 = vmovn_s64(v232);
  int16x8_t v233 = (int16x8_t)vzip1q_s32(v227, (int32x4_t)v232);
  int64x2_t v234 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v231);
  *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v150);
  *(int32x2_t *)v234.i8 = vmovn_s64(v234);
  int32x4_t v235 = vzip1q_s32((int32x4_t)v109, (int32x4_t)v234);
  int64x2_t v236 = (int64x2_t)vshlq_u64((uint64x2_t)v175, v231);
  *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v175);
  *(int32x2_t *)v236.i8 = vmovn_s64(v236);
  int16x8_t v237 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v236);
  int32x4_t v238 = (int32x4_t)vmovl_u16(v226);
  int16x8_t v239 = (int16x8_t)vmovl_u16(v228);
  uint32x4_t v240 = (uint32x4_t)vnegq_s32((int32x4_t)v239);
  int16x8_t v241 = (int16x8_t)vshlq_u32((uint32x4_t)v233, (uint32x4_t)vnegq_s32(v238));
  *(int16x4_t *)v233.i8 = vmovn_s32((int32x4_t)v233);
  *(int16x4_t *)v241.i8 = vmovn_s32((int32x4_t)v241);
  int8x16_t v242 = (int8x16_t)vzip1q_s16(v233, v241);
  int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v235, v240);
  *(int16x4_t *)v239.i8 = vmovn_s32(v235);
  *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
  int8x16_t v244 = (int8x16_t)vzip1q_s16(v239, v243);
  int16x8_t v245 = (int16x8_t)vshlq_u32((uint32x4_t)v237, v240);
  *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v237);
  *(int16x4_t *)v245.i8 = vmovn_s32((int32x4_t)v245);
  int8x16_t v246 = (int8x16_t)vzip1q_s16(v237, v245);
  uint16x8_t v247 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v401.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v401, v401, 8uLL))));
  int8x16_t v248 = (int8x16_t)vshlq_u16((uint16x8_t)v242, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v110.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  *(int8x8_t *)v242.i8 = vmovn_s16((int16x8_t)v242);
  *(int8x8_t *)v248.i8 = vmovn_s16((int16x8_t)v248);
  int8x16_t v249 = vzip1q_s8(v242, v248);
  int8x16_t v250 = (int8x16_t)vshlq_u16((uint16x8_t)v244, v247);
  int8x16_t v251 = (int8x16_t)vshlq_u16((uint16x8_t)v246, v247);
  *(int8x8_t *)v244.i8 = vmovn_s16((int16x8_t)v244);
  *(int8x8_t *)v250.i8 = vmovn_s16((int16x8_t)v250);
  *(int8x8_t *)v246.i8 = vmovn_s16((int16x8_t)v246);
  *(int8x8_t *)v251.i8 = vmovn_s16((int16x8_t)v251);
  int8x16_t v252 = vzip1q_s8(v244, v250);
  v250.i64[0] = 0x808080808080808;
  v250.i64[1] = 0x808080808080808;
  int8x16_t v253 = vzip1q_s8(v246, v251);
  v251.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v251.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v254 = vsubq_s8(v250, v110);
  int8x16_t v255 = vaddq_s8(v110, v251);
  v251.i64[0] = 0x808080808080808;
  v251.i64[1] = 0x808080808080808;
  int8x16_t v256 = vshlq_s8(v249, v254);
  v254.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v254.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v257 = vsubq_s8(v251, v401);
  int8x16_t v258 = vaddq_s8(v401, v254);
  int8x16_t v259 = vshlq_s8(v252, v257);
  int8x16_t v260 = vshlq_s8(v253, v257);
  int8x16_t v261 = vshlq_s8(v256, v255);
  int8x16_t v262 = vshlq_s8(v259, v258);
  int8x16_t v263 = vshlq_s8(v260, v258);
  int8x16_t v264 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v261.i8, 0);
  int8x16_t v265 = vandq_s8(v375, v264);
  int8x16_t v266 = vsubq_s8(v262, v265);
  int8x16_t v267 = vsubq_s8(v263, v265);
  *(int32x2_t *)v262.i8 = vzip1_s32(*(int32x2_t *)v177.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v177, v177, 8uLL));
  *(int32x2_t *)v263.i8 = vzip1_s32(*(int32x2_t *)v198.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v198, v198, 8uLL));
  v229.i64[0] = v262.u32[0];
  v229.i64[1] = v262.u32[1];
  uint64x2_t v268 = (uint64x2_t)vnegq_s64(v229);
  *(int16x4_t *)v265.i8 = vuzp1_s16(*(int16x4_t *)v176.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v176, v176, 8uLL));
  int64x2_t v269 = (int64x2_t)vshlq_u64((uint64x2_t)v171, v268);
  *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v171);
  *(int32x2_t *)v269.i8 = vmovn_s64(v269);
  int16x8_t v270 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v269);
  v229.i64[0] = v263.u32[0];
  v229.i64[1] = v263.u32[1];
  uint64x2_t v271 = (uint64x2_t)vnegq_s64(v229);
  int64x2_t v272 = (int64x2_t)vshlq_u64((uint64x2_t)v196, v268);
  *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v196);
  *(int32x2_t *)v272.i8 = vmovn_s64(v272);
  int16x8_t v273 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v272);
  int64x2_t v274 = (int64x2_t)vshlq_u64((uint64x2_t)v192, v271);
  *(int32x2_t *)v176.i8 = vmovn_s64((int64x2_t)v192);
  *(int32x2_t *)v274.i8 = vmovn_s64(v274);
  uint32x4_t v275 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v265.i8));
  int16x8_t v276 = (int16x8_t)vzip1q_s32((int32x4_t)v176, (int32x4_t)v274);
  int16x8_t v277 = (int16x8_t)vshlq_u32((uint32x4_t)v270, v275);
  *(int16x4_t *)v270.i8 = vmovn_s32((int32x4_t)v270);
  *(int16x4_t *)v277.i8 = vmovn_s32((int32x4_t)v277);
  int8x16_t v278 = (int8x16_t)vzip1q_s16(v270, v277);
  uint32x4_t v279 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v197.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v197, v197, 8uLL))));
  int16x8_t v280 = (int16x8_t)vshlq_u32((uint32x4_t)v273, v275);
  *(int16x4_t *)v273.i8 = vmovn_s32((int32x4_t)v273);
  *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
  int8x16_t v281 = (int8x16_t)vzip1q_s16(v273, v280);
  int16x8_t v282 = (int16x8_t)vshlq_u32((uint32x4_t)v276, v279);
  *(int16x4_t *)v276.i8 = vmovn_s32((int32x4_t)v276);
  *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
  uint16x8_t v283 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v402.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v402, v402, 8uLL))));
  int8x16_t v284 = (int8x16_t)vzip1q_s16(v276, v282);
  int8x16_t v285 = (int8x16_t)vshlq_u16((uint16x8_t)v278, v283);
  int8x16_t v286 = (int8x16_t)vshlq_u16((uint16x8_t)v281, v283);
  *(int8x8_t *)v278.i8 = vmovn_s16((int16x8_t)v278);
  *(int8x8_t *)v285.i8 = vmovn_s16((int16x8_t)v285);
  *(int8x8_t *)v281.i8 = vmovn_s16((int16x8_t)v281);
  *(int8x8_t *)v286.i8 = vmovn_s16((int16x8_t)v286);
  int8x16_t v287 = vzip1q_s8(v278, v285);
  v285.i64[0] = 0x808080808080808;
  v285.i64[1] = 0x808080808080808;
  int8x16_t v288 = vzip1q_s8(v281, v286);
  v286.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v286.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v289 = vsubq_s8(v285, v402);
  int8x16_t v290 = vaddq_s8(v402, v286);
  int8x16_t v291 = vshlq_s8(v287, v289);
  int8x16_t v292 = vshlq_s8(v288, v289);
  uint16x8_t v293 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v403.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v403, v403, 8uLL))));
  int8x16_t v294 = vshlq_s8(v292, v290);
  int8x16_t v295 = vandq_s8(v377, v264);
  int8x16_t v296 = vsubq_s8(vshlq_s8(v291, v290), v295);
  int8x16_t v297 = vsubq_s8(v294, v295);
  int8x16_t v298 = (int8x16_t)vshlq_u16((uint16x8_t)v284, v293);
  *(int8x8_t *)v284.i8 = vmovn_s16((int16x8_t)v284);
  *(int8x8_t *)v298.i8 = vmovn_s16((int16x8_t)v298);
  v295.i64[0] = 0x808080808080808;
  v295.i64[1] = 0x808080808080808;
  int8x16_t v299 = vzip1q_s8(v284, v298);
  v284.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v284.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v300 = vsubq_s8(v295, v403);
  int8x16_t v301 = vaddq_s8(v403, v284);
  int64x2_t v302 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v271);
  *(int32x2_t *)v213.i8 = vmovn_s64((int64x2_t)v213);
  *(int32x2_t *)v302.i8 = vmovn_s64(v302);
  int16x8_t v303 = (int16x8_t)vzip1q_s32((int32x4_t)v213, (int32x4_t)v302);
  int16x8_t v304 = (int16x8_t)vshlq_u32((uint32x4_t)v303, v279);
  *(int16x4_t *)v303.i8 = vmovn_s32((int32x4_t)v303);
  *(int16x4_t *)v304.i8 = vmovn_s32((int32x4_t)v304);
  int8x16_t v305 = (int8x16_t)vzip1q_s16(v303, v304);
  int8x16_t v306 = (int8x16_t)vshlq_u16((uint16x8_t)v305, v293);
  *(int8x8_t *)v305.i8 = vmovn_s16((int16x8_t)v305);
  *(int8x8_t *)v306.i8 = vmovn_s16((int16x8_t)v306);
  int8x16_t v307 = vshlq_s8(vshlq_s8(vzip1q_s8(v305, v306), v300), v301);
  int8x16_t v308 = vandq_s8(v379, v264);
  int8x16_t v309 = vsubq_s8(vshlq_s8(vshlq_s8(v299, v300), v301), v308);
  int8x16_t v310 = vsubq_s8(v307, v308);
  *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v128.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v128, v128, 8uLL));
  *(int32x2_t *)v307.i8 = vzip1_s32(*(int32x2_t *)v142.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v142, v142, 8uLL));
  v229.i64[0] = v299.u32[0];
  v229.i64[1] = v299.u32[1];
  int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v229));
  *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
  *(int32x2_t *)v311.i8 = vmovn_s64(v311);
  int16x8_t v312 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v311);
  v229.i64[0] = v307.u32[0];
  v229.i64[1] = v307.u32[1];
  int64x2_t v313 = (int64x2_t)vshlq_u64((uint64x2_t)v154, (uint64x2_t)vnegq_s64(v229));
  *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v154);
  *(int32x2_t *)v313.i8 = vmovn_s64(v313);
  int16x8_t v314 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v313);
  int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v312, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v127.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL)))));
  *(int16x4_t *)v312.i8 = vmovn_s32((int32x4_t)v312);
  *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
  int8x16_t v316 = (int8x16_t)vzip1q_s16(v312, v315);
  int16x8_t v317 = (int16x8_t)vshlq_u32((uint32x4_t)v314, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v141.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v141, v141, 8uLL)))));
  *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
  *(int16x4_t *)v317.i8 = vmovn_s32((int32x4_t)v317);
  int8x16_t v318 = (int8x16_t)vzip1q_s16(v314, v317);
  int8x16_t v319 = (int8x16_t)vshlq_u16((uint16x8_t)v316, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v126.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  int8x16_t v320 = (int8x16_t)vshlq_u16((uint16x8_t)v318, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v400.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v400, v400, 8uLL)))));
  *(int8x8_t *)v316.i8 = vmovn_s16((int16x8_t)v316);
  *(int8x8_t *)v319.i8 = vmovn_s16((int16x8_t)v319);
  *(int8x8_t *)v318.i8 = vmovn_s16((int16x8_t)v318);
  *(int8x8_t *)v320.i8 = vmovn_s16((int16x8_t)v320);
  int8x16_t v321 = vzip1q_s8(v316, v319);
  v319.i64[0] = 0x808080808080808;
  v319.i64[1] = 0x808080808080808;
  int8x16_t v322 = vzip1q_s8(v318, v320);
  v320.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v320.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v323 = vshlq_s8(vshlq_s8(v321, vsubq_s8(v319, v126)), vaddq_s8(v126, v320));
  int8x16_t v324 = vshlq_s8(vshlq_s8(v322, vsubq_s8(v319, v400)), vaddq_s8(v400, v320));
  int8x16_t v325 = vandq_s8(v381, v264);
  v326.i64[0] = 0x101010101010101;
  v326.i64[1] = 0x101010101010101;
  int8x16_t v327 = vsubq_s8(vaddq_s8(vandq_s8(v261, v381), v323), v325);
  int8x16_t v328 = vsubq_s8(v324, v325);
  if (vaddlvq_s8(vceqq_s8(v384, v326)))
  {
    int8x16_t v329 = vnegq_s8(vandq_s8(v399, v326));
    int8x16_t v330 = v328;
    v330.i32[3] = v327.i32[0];
    int8x16_t v331 = v327;
    v331.i32[0] = v328.i32[3];
    v406.val[0] = vbslq_s8(v329, v331, v327);
    v406.val[1] = vbslq_s8(v329, v330, v328);
    v332.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v332.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, (int8x16_t)xmmword_242EA7570), v329), v406.val[0]);
    v407.val[1] = vaddq_s8(v406.val[1], vandq_s8(vqtbl2q_s8(v406, v332), v329));
    int8x16_t v327 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA7580), v329), v407.val[0]);
    int8x16_t v328 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[1]);
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA7590), v329), v266);
    v407.val[1] = vaddq_s8(v267, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v266.i8, (int8x16_t)xmmword_242EA75A0), v329));
    int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA75B0), v329), v407.val[0]);
    int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[1]);
    v407.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v296.i8, (int8x16_t)xmmword_242EA75C0), v329), v296);
    v407.val[1] = vaddq_s8(v297, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v296.i8, (int8x16_t)xmmword_242EA7570), v329));
    int8x16_t v296 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, v332), v329), v407.val[0]);
    int8x16_t v297 = vaddq_s8(vandq_s8(vqtbl2q_s8(v407, (int8x16_t)xmmword_242EA75D0), v329), v407.val[1]);
    v406.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v309.i8, (int8x16_t)xmmword_242EA75E0), v329), v309);
    v406.val[1] = vaddq_s8(v310, vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v309.i8, (int8x16_t)xmmword_242EA7570), v329));
    int8x16_t v309 = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, v332), v329), v406.val[0]);
    int8x16_t v310 = vaddq_s8(vandq_s8(vqtbl2q_s8(v406, (int8x16_t)xmmword_242EA75F0), v329), v406.val[1]);
  }
  int8x16_t v333 = vaddq_s8(v398, v327);
  int8x16_t v334 = vaddq_s8(v328, v398);
  int8x16_t v335 = vaddq_s8(v266, v398);
  int8x16_t v336 = vaddq_s8(v267, v398);
  int8x16_t v337 = vaddq_s8(v296, v398);
  int8x16_t v338 = vaddq_s8(v297, v398);
  int8x16_t v339 = vaddq_s8(v309, v398);
  int8x16_t v340 = vaddq_s8(v310, v398);
  v341.i64[0] = 0x1010101010101010;
  v341.i64[1] = 0x1010101010101010;
  int8x16_t v342 = vtstq_s8(v399, v341);
  if ((v399.i8[1] & 0x10) != 0)
  {
    v342.i8[1] = v342.i8[2];
    v342.i8[2] = 0;
    int8x16_t v342 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v342.i8, 0);
    int8x16_t v343 = (int8x16_t)xmmword_242EA7610;
  }
  else
  {
    int8x16_t v343 = (int8x16_t)xmmword_242EA7600;
  }
  int64x2_t v344 = (int64x2_t)vaddq_s8(vandq_s8(v342, vqtbl1q_s8(v333, v343)), v333);
  int64x2_t v345 = (int64x2_t)vaddq_s8(vandq_s8(v342, vqtbl1q_s8(v334, v343)), v334);
  int64x2_t v346 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v335, v343), v342), v335);
  int64x2_t v347 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v336, v343), v342), v336);
  int64x2_t v348 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v337, v343), v342), v337);
  int64x2_t v349 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v338, v343), v342), v338);
  int64x2_t v350 = (int64x2_t *)((char *)a1 + a2);
  *(int64x2_t *)a1 = vzip1q_s64(v344, v345);
  a1[1] = (float32x4_t)vzip1q_s64(v348, v349);
  int64x2_t v351 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t v352 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v339, v343), v342), v339);
  *int64x2_t v350 = vzip2q_s64(v344, v345);
  v350[1] = vzip2q_s64(v348, v349);
  int64x2_t v353 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v340, v343), v342), v340);
  *int64x2_t v351 = vzip1q_s64(v346, v347);
  v351[1] = vzip1q_s64(v352, v353);
  unint64_t v354 = (int64x2_t *)((char *)v351 + a2);
  *unint64_t v354 = vzip2q_s64(v346, v347);
  v354[1] = vzip2q_s64(v352, v353);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  uint64_t v13 = result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(a3, a4, result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int64x2_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v16, v13 + 32, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int64x2_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  int8x16_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v21, v13 + v20, a2, v14, v24, a7);
    v11 += result;
    int8x16_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *int8x16_t v21 = 0;
    int8x16_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v25, v13 + v20 + 32, a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *int8x16_t v25 = 0;
LABEL_35:
  int8x16_t v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v26, v13 + 8 * a2, a2, v14, v29, a7);
    v11 += result;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int8x16_t v26 = 0;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v30, v13 + 8 * a2 + 32, a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v30 = 0;
LABEL_49:
  int16x8_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v31, v13 + 12 * a2, a2, v14, v34, a7);
    v11 += result;
    int16x8_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *int16x8_t v31 = 0;
    int16x8_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      *int16x8_t v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v35, v13 + 12 * a2 + 32, a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressMacroblock(float32x4_t *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1, 64, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 2, 64, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 16, 64, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 18, 64, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 32, 64, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 34, 64, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 48, 64, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 50, 64, v13, v14, a4);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressMacroblock(int64x2_t *a1, int64x2_t *a2, unsigned __int8 *a3)
{
  int16x8_t v5 = (int64x2_t *)((char *)a2
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1, 64, a2, *a3));
  int16x8_t v6 = (int64x2_t *)((char *)v5
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 2, 64, v5, a3[1]));
  unint64_t v7 = (int64x2_t *)((char *)v6
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 16, 64, v6, a3[2]));
  unint64_t v8 = (int64x2_t *)((char *)v7
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 18, 64, v7, a3[3]));
  unint64_t v9 = (int64x2_t *)((char *)v8
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 32, 64, v8, a3[4]));
  unint64_t v10 = (int64x2_t *)((char *)v9
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 34, 64, v9, a3[5]));
  unint64_t v11 = (int64x2_t *)((char *)v10
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 48, 64, v10, a3[6]));
  unsigned int v12 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 50, 64, v11, v12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, char *a4, int a5, int a6)
{
  unint64_t v9 = a3;
  unint64_t v11 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v12, v13);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  unsigned int v14 = a4 + 1;
  if (a5 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 8;
  if (v16 >= 8) {
    int v17 = 8;
  }
  else {
    int v17 = v16;
  }
  if (v17 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 2, a2, v17, v13);
    v9 += result;
  }
  else
  {
    *unsigned int v14 = 0;
  }
  uint64_t v18 = 4 * a2;
  int v19 = a4 + 2;
  if (a6 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v12 && v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, (int64x2_t *)((char *)v11 + v18), a2, v12, v22);
    v9 += result;
    unsigned int v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  else
  {
    *int v19 = 0;
    unsigned int v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  if (v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int64x2_t *)((char *)v11 + v18 + 32), a2, v17, v22);
    v9 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned int v23 = 0;
LABEL_35:
  int v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int64x2_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    v9 += result;
    unsigned int v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v24 = 0;
    unsigned int v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  if (v27)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int64x2_t *)((char *)v11 + 8 * a2 + 32), a2, v17, v27);
    v9 += result;
    goto LABEL_49;
  }
LABEL_48:
  *unsigned int v28 = 0;
LABEL_49:
  int v29 = a4 + 6;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v29, (int64x2_t *)((char *)v11 + 12 * a2), a2, v12, v32);
    v9 += result;
    unsigned int v33 = a4 + 7;
    if (!v17) {
      goto LABEL_64;
    }
  }
  else
  {
    *int v29 = 0;
    unsigned int v33 = a4 + 7;
    if (!v17)
    {
LABEL_64:
      *unsigned int v33 = 0;
      return result;
    }
  }
  if (!v32) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int64x2_t *)((char *)v11 + 12 * a2 + 32), a2, v17, v32);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(uint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  unint64_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  uint32x4_t v11 = (uint32x4_t)vzip1q_s64(*a3, v9);
  uint32x4_t v12 = (uint32x4_t)vzip2q_s64(*a3, v9);
  uint32x4_t v13 = (uint32x4_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  unsigned int v14 = (int64x2_t *)((char *)v7 + a4);
  uint32x4_t v17 = (uint32x4_t)vzip2q_s64(v8, v10);
  int64x2_t v18 = v14[1];
  uint32x4_t v19 = (uint32x4_t)vzip1q_s64(v15, *v14);
  uint32x4_t v20 = (uint32x4_t)vzip2q_s64(v15, *v14);
  uint32x4_t v21 = (uint32x4_t)vzip1q_s64(v16, v18);
  uint32x4_t v22 = (uint32x4_t)vzip2q_s64(v16, v18);
  v23.i64[0] = v11.u32[0];
  v23.i64[1] = v11.u32[1];
  int8x16_t v24 = v23;
  v23.i64[0] = v11.u32[2];
  v23.i64[1] = v11.u32[3];
  int8x16_t v25 = vbslq_s8((int8x16_t)xmmword_242EA7930, v24, (int8x16_t)0);
  int8x16_t v26 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v12.u32[0];
  v23.i64[1] = v12.u32[1];
  int8x16_t v27 = v23;
  v23.i64[0] = v12.u32[2];
  v23.i64[1] = v12.u32[3];
  int16x8_t v28 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 6uLL), v25)));
  int16x8_t v29 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v11, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v11, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v11, 6uLL), v26)));
  int16x8_t v30 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v27, (int8x16_t)0))));
  int16x8_t v31 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v12, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v12, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v12, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v19.u32[0];
  v23.i64[1] = v19.u32[1];
  int8x16_t v32 = v23;
  v23.i64[0] = v19.u32[2];
  v23.i64[1] = v19.u32[3];
  int8x16_t v33 = vbslq_s8((int8x16_t)xmmword_242EA7930, v32, (int8x16_t)0);
  int8x16_t v34 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v20.u32[0];
  v23.i64[1] = v20.u32[1];
  int8x16_t v35 = v23;
  v23.i64[0] = v20.u32[2];
  v23.i64[1] = v20.u32[3];
  int16x8_t v36 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 6uLL), v33)));
  int16x8_t v37 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v19, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v19, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v19, 6uLL), v34)));
  int16x8_t v38 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v35, (int8x16_t)0))));
  int16x8_t v39 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v20, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v20, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v20, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v13.u32[0];
  v23.i64[1] = v13.u32[1];
  int8x16_t v40 = v23;
  v23.i64[0] = v13.u32[2];
  v23.i64[1] = v13.u32[3];
  int8x16_t v41 = vbslq_s8((int8x16_t)xmmword_242EA7930, v40, (int8x16_t)0);
  int8x16_t v42 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v17.u32[0];
  v23.i64[1] = v17.u32[1];
  int8x16_t v43 = v23;
  v23.i64[0] = v17.u32[2];
  v23.i64[1] = v17.u32[3];
  int16x8_t v44 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 6uLL), v41)));
  int16x8_t v45 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v13, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v13, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v13, 6uLL), v42)));
  int16x8_t v46 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v43, (int8x16_t)0))));
  int16x8_t v47 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v17, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v17, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v17, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v21.u32[0];
  v23.i64[1] = v21.u32[1];
  int8x16_t v48 = v23;
  v23.i64[0] = v21.u32[2];
  v23.i64[1] = v21.u32[3];
  int8x16_t v49 = vbslq_s8((int8x16_t)xmmword_242EA7930, v48, (int8x16_t)0);
  int8x16_t v50 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v22.u32[0];
  v23.i64[1] = v22.u32[1];
  int8x16_t v51 = v23;
  v23.i64[0] = v22.u32[2];
  v23.i64[1] = v22.u32[3];
  int16x8_t v52 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 6uLL), v49)));
  int16x8_t v53 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v21, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v21, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v21, 6uLL), v50)));
  int16x8_t v54 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v51, (int8x16_t)0))));
  int16x8_t v55 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v22, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v22, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v22, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  int16x8_t v56 = (int16x8_t)vdupq_lane_s64(v28.i64[0], 0);
  int16x8_t v484 = v39;
  int16x8_t v57 = vsubq_s16(v39, v56);
  int8x16_t v486 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v28, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v487 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v29, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v488 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v30, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v489 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v31, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v490 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v36, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v491 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v37, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v58 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v486, (int16x8_t)v487), (int16x8_t)v488), (int16x8_t)v489), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v59 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v486, (int16x8_t)v487), (int16x8_t)v488), (int16x8_t)v489), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v60 = vpmaxq_s16(v58, v58);
  int16x8_t v61 = vpminq_s16(v59, v59);
  int16x8_t v62 = vzip1q_s16(v60, v61);
  v63.i64[0] = 0x10001000100010;
  v63.i64[1] = 0x10001000100010;
  int16x8_t v64 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int8x16_t v492 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v38, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v493 = (int8x16_t)vshlq_s16(vshlq_s16(v57, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  v65.i64[0] = 0x8000800080008000;
  v65.i64[1] = 0x8000800080008000;
  v57.i64[0] = 0x8000800080008000;
  v57.i64[1] = 0x8000800080008000;
  int16x8_t v66 = vminq_s16(v61, v57);
  int16x8_t v67 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v490, (int16x8_t)v491), (int16x8_t)v492), (int16x8_t)v493), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v68 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v490, (int16x8_t)v491), (int16x8_t)v492), (int16x8_t)v493), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int16x8_t v71 = vmaxq_s16(vmaxq_s16(v60, v65), v69);
  int16x8_t v72 = vminq_s16(v66, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  int8x16_t v494 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v44, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v495 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v45, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v75 = vshlq_s16(vshlq_s16(vsubq_s16(v46, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v76 = vminq_s16(vminq_s16((int16x8_t)v494, (int16x8_t)v495), v75);
  int8x16_t v496 = (int8x16_t)v75;
  int8x16_t v497 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v47, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v77 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v494, (int16x8_t)v495), v75), (int16x8_t)v497), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v78 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v76, (int16x8_t)v497), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v79 = vpmaxq_s16(v77, v77);
  int16x8_t v80 = vpminq_s16(v78, v78);
  int16x8_t v81 = vmaxq_s16(v71, v79);
  int16x8_t v82 = vminq_s16(v72, v80);
  int16x8_t v83 = vzip1q_s16(v79, v80);
  int16x8_t v84 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v83)), (int8x16_t)vceqzq_s16(v83));
  int8x16_t v498 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v52, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v499 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v53, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v502 = (int8x16_t)v56;
  int8x16_t v500 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v54, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v501 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v55, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v85 = vpmaxq_s16(v64, v64);
  int16x8_t v86 = vpmaxq_s16(v74, v74);
  int8x16_t v87 = (int8x16_t)vpmaxq_s16(v84, v84);
  int16x8_t v88 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v498, (int16x8_t)v499), (int16x8_t)v500), (int16x8_t)v501), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v89 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v498, (int16x8_t)v499), (int16x8_t)v500), (int16x8_t)v501), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v90 = vpmaxq_s16(v88, v88);
  int16x8_t v91 = vpminq_s16(v89, v89);
  int16x8_t v92 = vmaxq_s16(v81, v90);
  int16x8_t v93 = vminq_s16(v82, v91);
  int16x8_t v94 = vzip1q_s16(v90, v91);
  int16x8_t v95 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v94)), (int8x16_t)vceqzq_s16(v94));
  int16x8_t v96 = vpmaxq_s16(v95, v95);
  int8x16_t v97 = (int8x16_t)vmaxq_s16(vmaxq_s16(v85, v86), vmaxq_s16((int16x8_t)v87, v96));
  int16x8_t v98 = vclzq_s16(vsubq_s16(v92, v93));
  v99.i64[0] = 0xF000F000F000FLL;
  v99.i64[1] = 0xF000F000F000FLL;
  v100.i64[0] = -1;
  v100.i64[1] = -1;
  int8x16_t v509 = (int8x16_t)v93;
  int8x16_t v510 = (int8x16_t)v92;
  int8x16_t v101 = (int8x16_t)vsubq_s16(vshlq_s16(v100, vsubq_s16(v99, v98)), v93);
  int8x16_t v102 = (int8x16_t)vsubq_s16(v63, v98);
  int8x16_t v103 = (int8x16_t)vcgtq_s16((int16x8_t)v97, (int16x8_t)v102);
  int16x8_t v104 = (int16x8_t)vbslq_s8(v103, v102, v97);
  int8x16_t v511 = vandq_s8(v101, v103);
  v101.i64[0] = 0x8000800080008;
  v101.i64[1] = 0x8000800080008;
  int8x16_t v105 = vorrq_s8((int8x16_t)0, vandq_s8(v103, v101));
  v97.i64[0] = 0x3000300030003;
  v97.i64[1] = 0x3000300030003;
  int16x8_t v106 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v86), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v107 = vmaxq_s16(vminq_s16(vsubq_s16(v104, (int16x8_t)v87), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v505 = vsubq_s16(v104, v106);
  int16x8_t v506 = vsubq_s16(v104, v107);
  int16x8_t v108 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v96), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v507 = vsubq_s16(v104, v108);
  int8x16_t v508 = (int8x16_t)v104;
  int16x8_t v109 = vaddq_s16(v108, v107);
  int16x8_t v110 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v85), (int16x8_t)v97), (int16x8_t)0);
  v87.i64[0] = 0x4000400040004;
  v87.i64[1] = 0x4000400040004;
  int8x16_t v111 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v104), v97), v105), vbicq_s8(v87, (int8x16_t)vceqq_s16(v109, vnegq_s16(vaddq_s16(v110, v106)))));
  int8x16_t v503 = v111;
  int16x8_t v504 = vsubq_s16(v104, v110);
  if (vmaxvq_s16(v104))
  {
    int16x8_t v450 = v55;
    int16x8_t v451 = v47;
    v472.val[0] = (int8x16_t)v28;
    v472.val[1] = (int8x16_t)v29;
    v472.val[2] = (int8x16_t)v30;
    v472.val[3] = (int8x16_t)v31;
    int8x16_t v479 = v105;
    int8x16_t v481 = v111;
    int16x8_t v112 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v490, (int16x8_t)vqtbl1q_s8(v490, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v113 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v491, (int16x8_t)vqtbl1q_s8(v491, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v114 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v492, (int16x8_t)vqtbl1q_s8(v492, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v115 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v493, (int16x8_t)vqtbl1q_s8(v493, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v457 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v486, (int16x8_t)vqtbl1q_s8(v486, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v458 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v487, (int16x8_t)vqtbl1q_s8(v487, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v459 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v489, (int16x8_t)vqtbl1q_s8(v489, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v460 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v488, (int16x8_t)vqtbl1q_s8(v488, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v116 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v457, (int16x8_t)v458), (int16x8_t)v460), (int16x8_t)v459), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v117 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v457, (int16x8_t)v458), (int16x8_t)v460), (int16x8_t)v459), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v118 = vpmaxq_s16(v116, v116);
    int16x8_t v119 = vpminq_s16(v117, v117);
    v120.i64[0] = 0x8000800080008000;
    v120.i64[1] = 0x8000800080008000;
    int16x8_t v121 = vmaxq_s16(v118, v120);
    v120.i64[0] = 0x8000800080008000;
    v120.i64[1] = 0x8000800080008000;
    int16x8_t v122 = vminq_s16(v119, v120);
    int16x8_t v123 = vzip1q_s16(v118, v119);
    v124.i64[0] = 0x10001000100010;
    v124.i64[1] = 0x10001000100010;
    int16x8_t v125 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v124, vclsq_s16(v123)), (int8x16_t)vceqzq_s16(v123));
    int16x8_t v126 = vpmaxq_s16(v125, v125);
    int8x16_t v127 = (int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v112, v113), v114), v115);
    int8x16_t v465 = (int8x16_t)v114;
    int8x16_t v466 = (int8x16_t)v112;
    int8x16_t v463 = (int8x16_t)v115;
    int8x16_t v464 = (int8x16_t)v113;
    int16x8_t v128 = vminq_s16(v112, v113);
    int8x16_t v129 = v481;
    int16x8_t v130 = (int16x8_t)vqtbl1q_s8(v127, (int8x16_t)xmmword_242EA77B0);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(v128, v114), v115), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v132 = vpmaxq_s16(v130, v130);
    int16x8_t v133 = vpminq_s16(v131, v131);
    int16x8_t v134 = vmaxq_s16(v121, v132);
    int16x8_t v135 = vminq_s16(v122, v133);
    int16x8_t v136 = vzip1q_s16(v132, v133);
    v112.i64[0] = 0x10001000100010;
    v112.i64[1] = 0x10001000100010;
    int16x8_t v137 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v112, vclsq_s16(v136)), (int8x16_t)vceqzq_s16(v136));
    int16x8_t v138 = vpmaxq_s16(v137, v137);
    int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v496, (int16x8_t)vqtbl1q_s8(v496, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v494, (int16x8_t)vqtbl1q_s8(v494, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v497, (int16x8_t)vqtbl1q_s8(v497, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v468 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v495, (int16x8_t)vqtbl1q_s8(v495, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v139 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v470, (int16x8_t)v468), (int16x8_t)v469), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v140 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v470, (int16x8_t)v468), (int16x8_t)v469), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v141 = vpmaxq_s16(v139, v139);
    int16x8_t v142 = vpminq_s16(v140, v140);
    int16x8_t v143 = vmaxq_s16(v134, v141);
    int16x8_t v144 = vminq_s16(v135, v142);
    int16x8_t v145 = vzip1q_s16(v141, v142);
    int16x8_t v146 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v112, vclsq_s16(v145)), (int8x16_t)vceqzq_s16(v145));
    int16x8_t v147 = vpmaxq_s16(v146, v146);
    int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v500, (int16x8_t)vqtbl1q_s8(v500, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v477 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v498, (int16x8_t)vqtbl1q_s8(v498, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v499, (int16x8_t)vqtbl1q_s8(v499, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v501, (int16x8_t)vqtbl1q_s8(v501, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v148 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v477, (int16x8_t)v473), (int16x8_t)v475), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v149 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v477, (int16x8_t)v473), (int16x8_t)v475), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v150 = vpmaxq_s16(v148, v148);
    int8x16_t v151 = (int8x16_t)vpminq_s16(v149, v149);
    int16x8_t v152 = vmaxq_s16(v143, v150);
    int8x16_t v153 = (int8x16_t)vminq_s16(v144, (int16x8_t)v151);
    int16x8_t v154 = vzip1q_s16(v150, (int16x8_t)v151);
    v151.i64[0] = 0x10001000100010;
    v151.i64[1] = 0x10001000100010;
    int16x8_t v155 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v151, vclsq_s16(v154)), (int8x16_t)vceqzq_s16(v154));
    int16x8_t v156 = vpmaxq_s16(v155, v155);
    int8x16_t v157 = (int8x16_t)vmaxq_s16(vmaxq_s16(v126, v138), vmaxq_s16(v147, v156));
    int8x16_t v461 = v153;
    int8x16_t v462 = (int8x16_t)v152;
    int16x8_t v452 = vclzq_s16(vsubq_s16(v152, (int16x8_t)v153));
    int8x16_t v158 = (int8x16_t)vsubq_s16((int16x8_t)v151, v452);
    v153.i64[0] = 0x10001000100010;
    v153.i64[1] = 0x10001000100010;
    int8x16_t v159 = (int8x16_t)vcgtq_s16((int16x8_t)v157, (int16x8_t)v158);
    int8x16_t v160 = vbslq_s8(v159, v158, v157);
    v158.i64[0] = 0x3000300030003;
    v158.i64[1] = 0x3000300030003;
    int16x8_t v161 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v126), (int16x8_t)v158), (int16x8_t)0);
    int16x8_t v162 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v138), (int16x8_t)v158), (int16x8_t)0);
    int16x8_t v163 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v147), (int16x8_t)v158), (int16x8_t)0);
    v164.i64[0] = 0x3000300030003;
    v164.i64[1] = 0x3000300030003;
    int16x8_t v165 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v156), (int16x8_t)v158), (int16x8_t)0);
    v151.i64[0] = 0x4000400040004;
    v151.i64[1] = 0x4000400040004;
    int8x16_t v166 = vbicq_s8(v151, (int8x16_t)vceqq_s16(vaddq_s16(v165, v163), vnegq_s16(vaddq_s16(v161, v162))));
    v151.i64[0] = 0x18001800180018;
    v151.i64[1] = 0x18001800180018;
    int8x16_t v167 = vbslq_s8(v159, v151, v153);
    int8x16_t v454 = (int8x16_t)vsubq_s16((int16x8_t)v160, v162);
    int8x16_t v455 = (int8x16_t)vsubq_s16((int16x8_t)v160, v163);
    int8x16_t v456 = (int8x16_t)vsubq_s16((int16x8_t)v160, v165);
    v163.i64[0] = 0x7000700070007;
    v163.i64[1] = 0x7000700070007;
    int8x16_t v453 = (int8x16_t)vsubq_s16((int16x8_t)v160, v161);
    v151.i64[0] = 0x8000800080008;
    v151.i64[1] = 0x8000800080008;
    int16x8_t v168 = (int16x8_t)vandq_s8(v479, v151);
    int16x8_t v169 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v151);
    v152.i64[0] = 0x2000200020002;
    v152.i64[1] = 0x2000200020002;
    int16x8_t v170 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v481, v164), v152), v153);
    int16x8_t v172 = v507;
    int8x16_t v171 = v508;
    int16x8_t v174 = v504;
    int16x8_t v173 = v505;
    int16x8_t v175 = v506;
    int8x16_t v176 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v508, (int8x16_t)vceqzq_s16(v168)), v169), v170), v504, v163), vshlq_n_s16(vaddq_s16(vaddq_s16(v506, v505), v507), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v160, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v167 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v166, (int16x8_t)v166)), (int16x8_t)v453, v163), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v455, (int16x8_t)v454), (int16x8_t)v456), 3uLL))).i64[0],
                        0);
    int v177 = (unsigned __int16)vaddvq_s16((int16x8_t)v176);
    BOOL v179 = a5 < 4 || a6 < 2;
    if (v177)
    {
      v180.i64[0] = 0x3000300030003;
      v180.i64[1] = 0x3000300030003;
      int8x16_t v181 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v160), v180), v167), v166);
      v182.i64[0] = 0xF000F000F000FLL;
      v182.i64[1] = 0xF000F000F000FLL;
      int8x16_t v486 = vbslq_s8(v176, v457, v486);
      int8x16_t v487 = vbslq_s8(v176, v458, v487);
      v180.i64[0] = -1;
      v180.i64[1] = -1;
      int8x16_t v488 = vbslq_s8(v176, v460, v488);
      int8x16_t v489 = vbslq_s8(v176, v459, v489);
      int8x16_t v490 = vbslq_s8(v176, v466, v490);
      int8x16_t v491 = vbslq_s8(v176, v464, v491);
      int8x16_t v492 = vbslq_s8(v176, v465, v492);
      int8x16_t v493 = vbslq_s8(v176, v463, v493);
      int8x16_t v494 = vbslq_s8(v176, v470, v494);
      int8x16_t v495 = vbslq_s8(v176, v468, v495);
      int8x16_t v496 = vbslq_s8(v176, v469, v496);
      int8x16_t v497 = vbslq_s8(v176, v467, v497);
      int8x16_t v498 = vbslq_s8(v176, v477, v498);
      int8x16_t v499 = vbslq_s8(v176, v473, v499);
      int8x16_t v500 = vbslq_s8(v176, v475, v500);
      int8x16_t v501 = vbslq_s8(v176, v471, v501);
      int16x8_t v174 = (int16x8_t)vbslq_s8(v176, v453, (int8x16_t)v504);
      int16x8_t v173 = (int16x8_t)vbslq_s8(v176, v454, (int8x16_t)v505);
      int16x8_t v504 = v174;
      int16x8_t v505 = v173;
      int16x8_t v175 = (int16x8_t)vbslq_s8(v176, v455, (int8x16_t)v506);
      int16x8_t v172 = (int16x8_t)vbslq_s8(v176, v456, (int8x16_t)v507);
      int16x8_t v506 = v175;
      int16x8_t v507 = v172;
      int8x16_t v510 = vbslq_s8(v176, v462, v510);
      int8x16_t v511 = vbslq_s8(v176, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v180, vsubq_s16(v182, v452)), (int16x8_t)v461), v159), v511);
      int8x16_t v171 = vbslq_s8(v176, v160, v508);
      int8x16_t v508 = v171;
      int8x16_t v509 = vbslq_s8(v176, v461, v509);
      int8x16_t v129 = vbslq_s8(v176, v181, v503);
      int8x16_t v502 = vbslq_s8(v176, (int8x16_t)vsubq_s16((int16x8_t)v502, (int16x8_t)vqtbl1q_s8(v502, (int8x16_t)xmmword_242EA7910)), v502);
      int8x16_t v503 = v129;
    }
    if (!v179)
    {
      int16x8_t v183 = (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v184 = vsubq_s16((int16x8_t)v472.val[0], (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA7710));
      int16x8_t v185 = vsubq_s16((int16x8_t)v472.val[2], v183);
      int16x8_t v186 = vsubq_s16((int16x8_t)v472.val[3], v183);
      uint64_t v187 = v484.i64[0];
      uint64_t v188 = v472.val[3].i64[1];
      int16x8_t v189 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7760);
      int16x8_t v190 = vsubq_s16(v36, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v191 = vsubq_s16(v37, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v192 = vsubq_s16(v38, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA77C0));
      uint64_t v193 = v451.i64[0];
      uint64_t v194 = v472.val[3].i64[1];
      int16x8_t v195 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v196 = vsubq_s16(v44, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v197 = vsubq_s16(v45, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v198 = vsubq_s16(v46, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA7710));
      uint64_t v199 = v450.i64[0];
      uint64_t v200 = v472.val[3].i64[1];
      int16x8_t v201 = vsubq_s16(v52, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v202 = vsubq_s16(v53, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7780));
      int16x8_t v203 = vsubq_s16(v54, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7710));
      v204.i64[1] = v184.i64[1];
      v204.i64[0] = v186.i64[1];
      int16x8_t v205 = vsubq_s16(v450, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7720));
      v186.i64[1] = v184.i64[0];
      int16x8_t v206 = vshlq_s16(v190, (int16x8_t)xmmword_242EA7970);
      int16x8_t v207 = vshlq_s16(v191, (int16x8_t)xmmword_242EA7970);
      int16x8_t v208 = vshlq_s16(v197, (int16x8_t)xmmword_242EA7970);
      int16x8_t v209 = vshlq_s16(vshlq_s16(v204, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v210 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v472.val[1], (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA7720)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int16x8_t v211 = vshlq_s16(vshlq_s16(v185, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v212 = (int8x16_t)vshlq_s16(vshlq_s16(v186, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int16x8_t v213 = vshlq_s16(v206, (int16x8_t)xmmword_242EA7980);
      int8x16_t v214 = (int8x16_t)vshlq_s16(v207, (int16x8_t)xmmword_242EA7980);
      int8x16_t v215 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v484, v189), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v216 = (int8x16_t)vshlq_s16(vshlq_s16(v196, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v217 = (int8x16_t)vshlq_s16(v208, (int16x8_t)xmmword_242EA7980);
      int8x16_t v218 = (int8x16_t)vshlq_s16(vshlq_s16(v198, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v219 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v451, v195), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v220 = (int8x16_t)vshlq_s16(vshlq_s16(v201, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v221 = (int8x16_t)vshlq_s16(vshlq_s16(v202, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v222 = (int8x16_t)vshlq_s16(vshlq_s16(v203, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v223 = (int8x16_t)vshlq_s16(vshlq_s16(v205, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v485 = (int8x16_t)v209;
      int8x16_t v482 = (int8x16_t)v211;
      int16x8_t v224 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v209, (int16x8_t)v210), v211), (int16x8_t)v212), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v225 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v209, (int16x8_t)v210), v211), (int16x8_t)v212), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v226 = vpmaxq_s16(v224, v224);
      int16x8_t v227 = vpminq_s16(v225, v225);
      v205.i64[0] = 0x8000800080008000;
      v205.i64[1] = 0x8000800080008000;
      int16x8_t v228 = vmaxq_s16(v226, v205);
      v211.i64[0] = 0x8000800080008000;
      v211.i64[1] = 0x8000800080008000;
      int16x8_t v229 = vminq_s16(v227, v211);
      int16x8_t v230 = vzip1q_s16(v226, v227);
      v231.i64[0] = 0x10001000100010;
      v231.i64[1] = 0x10001000100010;
      int16x8_t v232 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v230)), (int8x16_t)vceqzq_s16(v230));
      int16x8_t v233 = vpmaxq_s16(v232, v232);
      int8x16_t v478 = (int8x16_t)vshlq_s16(vshlq_s16(v192, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v480 = (int8x16_t)v213;
      int16x8_t v234 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v213, (int16x8_t)v214), (int16x8_t)v478), (int16x8_t)v215), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v213, (int16x8_t)v214), (int16x8_t)v478), (int16x8_t)v215), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = vpmaxq_s16(v234, v234);
      int16x8_t v237 = vpminq_s16(v235, v235);
      int16x8_t v238 = vmaxq_s16(v228, v236);
      int16x8_t v239 = vminq_s16(v229, v237);
      int16x8_t v240 = vzip1q_s16(v236, v237);
      int16x8_t v241 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v240)), (int8x16_t)vceqzq_s16(v240));
      int16x8_t v242 = vpmaxq_s16(v241, v241);
      int16x8_t v243 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v216, (int16x8_t)v217), (int16x8_t)v218), (int16x8_t)v219), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v244 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v216, (int16x8_t)v217), (int16x8_t)v218), (int16x8_t)v219), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v245 = vpmaxq_s16(v243, v243);
      int16x8_t v246 = vpminq_s16(v244, v244);
      int16x8_t v247 = vmaxq_s16(v238, v245);
      int16x8_t v248 = vminq_s16(v239, v246);
      int16x8_t v249 = vzip1q_s16(v245, v246);
      int16x8_t v250 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v249)), (int8x16_t)vceqzq_s16(v249));
      int16x8_t v251 = vpmaxq_s16(v250, v250);
      int16x8_t v252 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v220, (int16x8_t)v221), (int16x8_t)v222), (int16x8_t)v223), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v253 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v220, (int16x8_t)v221), (int16x8_t)v222), (int16x8_t)v223), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v254 = vpmaxq_s16(v252, v252);
      int16x8_t v255 = vpminq_s16(v253, v253);
      int16x8_t v256 = vmaxq_s16(v247, v254);
      int8x16_t v257 = (int8x16_t)vminq_s16(v248, v255);
      int16x8_t v258 = vzip1q_s16(v254, v255);
      int16x8_t v259 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v258)), (int8x16_t)vceqzq_s16(v258));
      int16x8_t v260 = vpmaxq_s16(v259, v259);
      int8x16_t v261 = (int8x16_t)vmaxq_s16(vmaxq_s16(v233, v242), vmaxq_s16(v251, v260));
      int8x16_t v483 = (int8x16_t)v256;
      int16x8_t v262 = vclzq_s16(vsubq_s16(v256, (int16x8_t)v257));
      int8x16_t v263 = (int8x16_t)vsubq_s16(v231, v262);
      int8x16_t v264 = (int8x16_t)vcgtq_s16((int16x8_t)v261, (int16x8_t)v263);
      int8x16_t v265 = vbslq_s8(v264, v263, v261);
      v261.i64[0] = 0x3000300030003;
      v261.i64[1] = 0x3000300030003;
      int16x8_t v266 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v233), (int16x8_t)v261), (int16x8_t)0);
      int8x16_t v267 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v242), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v268 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v251), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v269 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v260), (int16x8_t)v261), (int16x8_t)0);
      int8x16_t v270 = (int8x16_t)vsubq_s16((int16x8_t)v265, v266);
      int16x8_t v271 = vsubq_s16((int16x8_t)v265, (int16x8_t)v267);
      int8x16_t v272 = (int8x16_t)vsubq_s16((int16x8_t)v265, v268);
      int16x8_t v273 = vsubq_s16((int16x8_t)v265, v269);
      int8x16_t v274 = (int8x16_t)vceqq_s16(vaddq_s16(v269, v268), vnegq_s16(vaddq_s16(v266, (int16x8_t)v267)));
      v267.i64[0] = 0x4000400040004;
      v267.i64[1] = 0x4000400040004;
      int8x16_t v275 = vbicq_s8(v267, v274);
      v269.i64[0] = 0x7000700070007;
      v269.i64[1] = 0x7000700070007;
      int8x16_t v474 = (int8x16_t)v273;
      int8x16_t v476 = (int8x16_t)v271;
      int16x8_t v276 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v263, v264), vaddq_s16((int16x8_t)v275, (int16x8_t)v275)), (int16x8_t)v270, v269), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v272, v271), v273), 3uLL));
      int8x16_t v129 = v503;
      int8x16_t v277 = (int8x16_t)v504;
      v278.i64[0] = 0x2000200020002;
      v278.i64[1] = 0x2000200020002;
      int16x8_t v279 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v503, v261), (int16x8_t)v278), (int8x16_t)v231);
      v261.i64[0] = 0x8000800080008;
      v261.i64[1] = 0x8000800080008;
      int16x8_t v172 = v507;
      int8x16_t v171 = v508;
      int16x8_t v173 = v505;
      int16x8_t v175 = v506;
      int8x16_t v280 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v508, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v503, v261))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v261)), v279), v504, v269), vshlq_n_s16(vaddq_s16(vaddq_s16(v506, v505), v507), 3uLL)), v276).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v280))
      {
        v281.i64[0] = 0x9000900090009;
        v281.i64[1] = 0x9000900090009;
        int8x16_t v282 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v265), v278), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v264, v281), (int16x8_t)vmvnq_s8(v264)));
        v281.i64[0] = -1;
        v281.i64[1] = -1;
        v283.i64[0] = 0xF000F000F000FLL;
        v283.i64[1] = 0xF000F000F000FLL;
        int8x16_t v277 = vbslq_s8(v280, v270, (int8x16_t)v504);
        int16x8_t v173 = (int16x8_t)vbslq_s8(v280, v476, (int8x16_t)v505);
        int16x8_t v175 = (int16x8_t)vbslq_s8(v280, v272, (int8x16_t)v506);
        int16x8_t v172 = (int16x8_t)vbslq_s8(v280, v474, (int8x16_t)v507);
        int8x16_t v171 = vbslq_s8(v280, v265, v508);
        int8x16_t v129 = vbslq_s8(v280, vorrq_s8(v282, v275), v503);
        int8x16_t v501 = vbslq_s8(v280, v223, v501);
        int8x16_t v502 = vbslq_s8(v280, vextq_s8(v472.val[3], v472.val[3], 8uLL), v502);
        int8x16_t v486 = vbslq_s8(v280, v485, v486);
        int8x16_t v487 = vbslq_s8(v280, v210, v487);
        int8x16_t v488 = vbslq_s8(v280, v482, v488);
        int8x16_t v489 = vbslq_s8(v280, v212, v489);
        int8x16_t v490 = vbslq_s8(v280, v480, v490);
        int8x16_t v491 = vbslq_s8(v280, v214, v491);
        int8x16_t v492 = vbslq_s8(v280, v478, v492);
        int8x16_t v493 = vbslq_s8(v280, v215, v493);
        int8x16_t v494 = vbslq_s8(v280, v216, v494);
        int8x16_t v495 = vbslq_s8(v280, v217, v495);
        int8x16_t v496 = vbslq_s8(v280, v218, v496);
        int8x16_t v497 = vbslq_s8(v280, v219, v497);
        int8x16_t v498 = vbslq_s8(v280, v220, v498);
        int8x16_t v499 = vbslq_s8(v280, v221, v499);
        int8x16_t v500 = vbslq_s8(v280, v222, v500);
        int8x16_t v509 = vbslq_s8(v280, v257, v509);
        int8x16_t v510 = vbslq_s8(v280, v483, v510);
        int8x16_t v511 = vbslq_s8(v280, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v281, vsubq_s16(v283, v262)), (int16x8_t)v257), v264), v511);
        int16x8_t v504 = (int16x8_t)v277;
        int16x8_t v505 = v173;
        int16x8_t v506 = v175;
        int16x8_t v507 = v172;
        int8x16_t v508 = v171;
        int8x16_t v503 = v129;
      }
      int16x8_t v174 = (int16x8_t)v277;
    }
    int16x8_t v284 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v174));
    int8x16_t v486 = (int8x16_t)vaddq_s16(v284, (int16x8_t)v486);
    int8x16_t v487 = (int8x16_t)vaddq_s16((int16x8_t)v487, v284);
    int8x16_t v488 = (int8x16_t)vaddq_s16((int16x8_t)v488, v284);
    int8x16_t v489 = (int8x16_t)vaddq_s16((int16x8_t)v489, v284);
    int16x8_t v285 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v173));
    int8x16_t v490 = (int8x16_t)vaddq_s16((int16x8_t)v490, v285);
    int8x16_t v491 = (int8x16_t)vaddq_s16((int16x8_t)v491, v285);
    int8x16_t v492 = (int8x16_t)vaddq_s16((int16x8_t)v492, v285);
    int8x16_t v493 = (int8x16_t)vaddq_s16((int16x8_t)v493, v285);
    int16x8_t v286 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v175));
    int8x16_t v494 = (int8x16_t)vaddq_s16((int16x8_t)v494, v286);
    int8x16_t v495 = (int8x16_t)vaddq_s16((int16x8_t)v495, v286);
    int8x16_t v496 = (int8x16_t)vaddq_s16((int16x8_t)v496, v286);
    int8x16_t v497 = (int8x16_t)vaddq_s16((int16x8_t)v497, v286);
    int8x16_t v287 = vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v172));
    int8x16_t v498 = (int8x16_t)vaddq_s16((int16x8_t)v498, (int16x8_t)v287);
    int8x16_t v499 = (int8x16_t)vaddq_s16((int16x8_t)v499, (int16x8_t)v287);
    int8x16_t v500 = (int8x16_t)vaddq_s16((int16x8_t)v500, (int16x8_t)v287);
    int8x16_t v501 = (int8x16_t)vaddq_s16((int16x8_t)v501, (int16x8_t)v287);
    v287.i64[0] = 0x8000800080008;
    v287.i64[1] = 0x8000800080008;
    v288.i64[0] = 0x3000300030003;
    v288.i64[1] = 0x3000300030003;
    v289.i64[0] = 0x2000200020002;
    v289.i64[1] = 0x2000200020002;
    int8x16_t v290 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v129, v288), v289);
    v289.i64[0] = 0x10001000100010;
    v289.i64[1] = 0x10001000100010;
    int16x8_t v291 = (int16x8_t)vandq_s8(v290, (int8x16_t)v289);
    v289.i64[0] = 0x7000700070007;
    v289.i64[1] = 0x7000700070007;
    int16x8_t v292 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v171, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v129, v287))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v287)), v291), v174, v289), vshlq_n_s16(vaddq_s16(v175, vaddq_s16(v173, v172)), 3uLL));
    int16x8_t v293 = vpaddq_s16(v292, v292);
    if ((unint64_t)(vpaddq_s16(v293, v293).i16[0] - 833) < 0xFFFFFFFFFFFFFC78)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (int8x16_t *)a3, a4, a5, a6, a7);
      return 112;
    }
    else
    {
      int8x16_t v294 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v295 = 8 * (a1 & 7);
      if (v295) {
        uint64_t v296 = *v294 & ~(-1 << v295);
      }
      else {
        uint64_t v296 = 0;
      }
      *a2 = 0;
      uint64_t v298 = v502.i64[0];
      unint64_t v299 = (unint64_t)((v171.i8[0] - 1) & 0xF) << 19;
      if (!v171.i16[0]) {
        unint64_t v299 = 0;
      }
      v300.i32[0] = v171.u16[3];
      v300.i32[1] = v171.u16[2];
      v301.i32[0] = v129.u16[1];
      v301.i32[1] = v129.u16[2];
      int8x8_t v302 = vand_s8((int8x8_t)vshl_u32(v301, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v303 = v302.i32[1];
      __int32 v304 = v302.i32[0] | v129.i8[0] & 0x1F;
      unint64_t v305 = (unint64_t)((v171.i8[2] - 1) & 0xF) << 23;
      if (!v171.i16[1]) {
        unint64_t v305 = 0;
      }
      int32x2_t v306 = vceqz_s32((int32x2_t)vand_s8((int8x8_t)v300, (int8x8_t)0xFFFF0000FFFFLL));
      v307.i64[0] = v306.i32[0];
      v307.i64[1] = v306.i32[1];
      int8x16_t v308 = (int8x16_t)v307;
      v307.i64[0] = vbic_s8((int8x8_t)0x100000001, (int8x8_t)v300).u32[0];
      v307.i64[1] = vand_s8((int8x8_t)vadd_s32(v300, (int32x2_t)0xF0000000FLL), (int8x8_t)0xF0000000FLL).u32[1];
      int8x16_t v309 = vbicq_s8((int8x16_t)vshlq_u64(v307, (uint64x2_t)xmmword_242EA7990), v308);
      unint64_t v310 = vorrq_s8(v309, (int8x16_t)vdupq_laneq_s64((int64x2_t)v309, 1)).u64[0] | v299 | v305 | v304 | v303 | ((unint64_t)(v129.i8[6] & 0xF) << 15);
      unint64_t v311 = (v310 << v295) | v296;
      if (v295 >= 0x20)
      {
        *int8x16_t v294 = v311;
        unint64_t v311 = v310 >> (-8 * (a1 & 7u));
      }
      unint64_t v312 = v298 & 0x3FF | ((unint64_t)(WORD1(v298) & 0x3FF) << 10);
      v313.i32[0] = WORD2(v298);
      v313.i32[1] = HIWORD(v298);
      int8x8_t v314 = vand_s8(v313, (int8x8_t)0x3000003FFLL);
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      uint64x2_t v316 = vshlq_u64(v315, (uint64x2_t)xmmword_242EA79A0);
      unint64_t v317 = v312 | v316.i64[0] | v316.i64[1];
      unint64_t v318 = (v295 + 32) & 0x38;
      unint64_t v319 = v311 | (v317 << v318);
      if (v318 >= 0x20)
      {
        *(void *)((char *)v294 + (((v295 + 32) >> 3) & 8)) = v319;
        unint64_t v319 = v317 >> -(char)v318;
      }
      int8x16_t v320 = (int8x16_t)vsubq_s16((int16x8_t)v508, v504);
      int8x16_t v321 = (int8x16_t)vsubq_s16((int16x8_t)v508, v505);
      int8x16_t v322 = (int8x16_t)vsubq_s16((int16x8_t)v508, v506);
      int8x16_t v323 = (int8x16_t)vsubq_s16((int16x8_t)v508, v507);
      *(uint8x8_t *)v320.i8 = vqmovn_u16((uint16x8_t)v320);
      *(uint8x8_t *)v321.i8 = vqmovn_u16((uint16x8_t)v321);
      *(uint8x8_t *)v322.i8 = vqmovn_u16((uint16x8_t)v322);
      *(uint8x8_t *)v323.i8 = vqmovn_u16((uint16x8_t)v323);
      int16x8_t v324 = (int16x8_t)vtrn1q_s8(v320, v321);
      int16x8_t v325 = (int16x8_t)vtrn2q_s8(v320, v321);
      int8x16_t v326 = vtrn1q_s8(v322, v323);
      int16x8_t v327 = (int16x8_t)vtrn2q_s8(v322, v323);
      int8x16_t v328 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v324, (int16x8_t)v326), (int32x4_t)vzip1q_s16(v325, v327)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v324, (int16x8_t)v326), (int32x4_t)vtrn2q_s16(v325, v327)));
      v326.i64[0] = 0x202020202020202;
      v326.i64[1] = 0x202020202020202;
      int8x16_t v329 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v503.i8, (int16x4_t)0x4000400040004)), v326);
      v326.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v326.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v322.i64[0] = -1;
      v322.i64[1] = -1;
      uint8x16_t v330 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v322, (uint8x16_t)vorrq_s8(v329, v326)), v328);
      int16x8_t v331 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v329.i8);
      int16x8_t v332 = (int16x8_t)vmovl_high_u8((uint8x16_t)v329);
      uint16x8_t v333 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v330.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v331)), (int16x8_t)vshlq_u16(vmovl_high_u8(v330), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v332)));
      uint16x8_t v334 = (uint16x8_t)vpaddq_s16(v331, v332);
      int32x4_t v335 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v334.i8);
      int32x4_t v336 = (int32x4_t)vmovl_high_u16(v334);
      int32x4_t v337 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v333.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v335)), (int32x4_t)vshlq_u32(vmovl_high_u16(v333), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v336)));
      int32x4_t v338 = vpaddq_s32(v335, v336);
      v339.i64[0] = v337.u32[0];
      v339.i64[1] = v337.u32[1];
      uint64x2_t v340 = (uint64x2_t)v339;
      v339.i64[0] = v337.u32[2];
      v339.i64[1] = v337.u32[3];
      uint64x2_t v341 = (uint64x2_t)v339;
      v339.i64[0] = v338.u32[0];
      v339.i64[1] = v338.u32[1];
      int64x2_t v342 = v339;
      v339.i64[0] = v338.u32[2];
      v339.i64[1] = v338.u32[3];
      int64x2_t v343 = vpaddq_s64((int64x2_t)vshlq_u64(v340, (uint64x2_t)vzip1q_s64((int64x2_t)0, v342)), (int64x2_t)vshlq_u64(v341, (uint64x2_t)vzip1q_s64((int64x2_t)0, v339)));
      int64x2_t v344 = vpaddq_s64(v342, v339);
      unint64_t v345 = (v343.i64[0] << v295) | v319;
      if (v344.i64[0] + v295 >= 0x40)
      {
        v294[1] = v345;
        unint64_t v345 = (unint64_t)v343.i64[0] >> (-8 * (a1 & 7u));
        if (!v295) {
          unint64_t v345 = 0;
        }
      }
      unint64_t v346 = v344.i64[0] + (v295 | 0x40);
      unint64_t v347 = v345 | (v343.i64[1] << v346);
      if ((v346 & 0x3F) + v344.i64[1] >= 0x40)
      {
        *(void *)((char *)v294 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v343.i64[1] >> -(v346 & 0x3F);
        if ((v346 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346 + v344.i64[1];
      v349.i64[0] = 0x8000800080008;
      v349.i64[1] = 0x8000800080008;
      v350.i64[0] = -1;
      v350.i64[1] = -1;
      int16x8_t v351 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v503, v349), (int8x16_t)0, 8uLL), v508);
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v353 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v350, (uint16x8_t)vaddq_s16(v351, v352)), v511);
      int32x4_t v354 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v355 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)), (int32x4_t)vmovl_high_u16(v353));
      int32x4_t v356 = vpaddq_s32(v354, (int32x4_t)vmovl_high_u16((uint16x8_t)v351));
      v357.i64[0] = v355.u32[0];
      v357.i64[1] = v355.u32[1];
      uint64x2_t v358 = (uint64x2_t)v357;
      v357.i64[0] = v355.u32[2];
      v357.i64[1] = v355.u32[3];
      uint64x2_t v359 = (uint64x2_t)v357;
      v357.i64[0] = v356.u32[0];
      v357.i64[1] = v356.u32[1];
      int64x2_t v360 = v357;
      v357.i64[0] = v356.u32[2];
      v357.i64[1] = v356.u32[3];
      int64x2_t v361 = vpaddq_s64((int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v360)), (int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v357)));
      int64x2_t v362 = vpaddq_s64(v360, v357);
      unint64_t v363 = (v361.i64[0] << v348) | v347;
      if (v362.i64[0] + (v348 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v294 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v363;
        unint64_t v363 = (unint64_t)v361.i64[0] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v363 = 0;
        }
      }
      unint64_t v364 = v362.i64[0] + v348;
      unint64_t v365 = v363 | (v361.i64[1] << v364);
      if ((v364 & 0x3F) + v362.i64[1] >= 0x40)
      {
        *(void *)((char *)v294 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v361.i64[1] >> -(v364 & 0x3F);
        if ((v364 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364 + v362.i64[1];
      int16x8_t v367 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v504, 8uLL);
      v368.i64[0] = 0xF000F000F000FLL;
      v368.i64[1] = 0xF000F000F000FLL;
      v369.i64[0] = -1;
      v369.i64[1] = -1;
      uint16x8_t v370 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v369, (uint16x8_t)vaddq_s16(v367, v368)), v486);
      int32x4_t v371 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v367.i8);
      int32x4_t v372 = (int32x4_t)vmovl_high_u16((uint16x8_t)v367);
      int32x4_t v373 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v370.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v370), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v372)));
      int32x4_t v374 = vpaddq_s32(v371, v372);
      v375.i64[0] = v373.u32[0];
      v375.i64[1] = v373.u32[1];
      uint64x2_t v376 = (uint64x2_t)v375;
      v375.i64[0] = v373.u32[2];
      v375.i64[1] = v373.u32[3];
      uint64x2_t v377 = (uint64x2_t)v375;
      v375.i64[0] = v374.u32[0];
      v375.i64[1] = v374.u32[1];
      int64x2_t v378 = v375;
      v375.i64[0] = v374.u32[2];
      v375.i64[1] = v374.u32[3];
      int64x2_t v379 = vpaddq_s64((int64x2_t)vshlq_u64(v376, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)), (int64x2_t)vshlq_u64(v377, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)));
      int64x2_t v380 = vpaddq_s64(v378, v375);
      unint64_t v381 = (v379.i64[0] << v366) | v365;
      if (v380.i64[0] + (v366 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v294 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v381;
        if ((v366 & 0x3F) != 0) {
          unint64_t v381 = (unint64_t)v379.i64[0] >> -(v366 & 0x3F);
        }
        else {
          unint64_t v381 = 0;
        }
      }
      unint64_t v382 = v380.i64[0] + v366;
      uint64_t v383 = (v380.i64[0] + v366) & 0x3F;
      unint64_t v384 = v381 | (v379.i64[1] << v382);
      if ((unint64_t)(v383 + v380.i64[1]) >= 0x40)
      {
        *(void *)((char *)v294 + ((v382 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
        unint64_t v384 = (unint64_t)v379.i64[1] >> -(char)v383;
        if (!v383) {
          unint64_t v384 = 0;
        }
      }
      unint64_t v385 = v382 + v380.i64[1];
      v386.i64[0] = 0xF000F000F000FLL;
      v386.i64[1] = 0xF000F000F000FLL;
      v387.i64[0] = -1;
      v387.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v387, (uint16x8_t)vaddq_s16(v504, v386)), *(int8x16_t *)((char *)&v486 + i));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v504.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v504);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v385) | v384;
        if (v399.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v385;
        unint64_t v384 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v401 + v399.i64[1];
      }
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v505, v403)), *(int8x16_t *)((char *)&v490 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v505.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v505);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v385) | v384;
        if (v415.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v385;
        unint64_t v384 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      uint64_t v418 = 0;
      v419.i64[0] = 0xF000F000F000FLL;
      v419.i64[1] = 0xF000F000F000FLL;
      v420.i64[0] = -1;
      v420.i64[1] = -1;
      do
      {
        uint16x8_t v421 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v420, (uint16x8_t)vaddq_s16(v506, v419)), *(int8x16_t *)((char *)&v494 + v418));
        int32x4_t v422 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v506.i8);
        int32x4_t v423 = (int32x4_t)vmovl_high_u16((uint16x8_t)v506);
        int32x4_t v424 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v421.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v422)), (int32x4_t)vshlq_u32(vmovl_high_u16(v421), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v423)));
        int32x4_t v425 = vpaddq_s32(v422, v423);
        v426.i64[0] = v424.u32[0];
        v426.i64[1] = v424.u32[1];
        uint64x2_t v427 = (uint64x2_t)v426;
        v426.i64[0] = v424.u32[2];
        v426.i64[1] = v424.u32[3];
        uint64x2_t v428 = (uint64x2_t)v426;
        v426.i64[0] = v425.u32[0];
        v426.i64[1] = v425.u32[1];
        int64x2_t v429 = v426;
        v426.i64[0] = v425.u32[2];
        v426.i64[1] = v425.u32[3];
        int64x2_t v430 = vpaddq_s64((int64x2_t)vshlq_u64(v427, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)), (int64x2_t)vshlq_u64(v428, (uint64x2_t)vzip1q_s64((int64x2_t)0, v426)));
        int64x2_t v431 = vpaddq_s64(v429, v426);
        unint64_t v432 = (v430.i64[0] << v385) | v384;
        if (v431.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v432;
          unint64_t v432 = (unint64_t)v430.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v432 = 0;
          }
        }
        unint64_t v433 = v431.i64[0] + v385;
        unint64_t v384 = v432 | (v430.i64[1] << v433);
        if ((v433 & 0x3F) + v431.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v433 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v430.i64[1] >> -(v433 & 0x3F);
          if ((v433 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v433 + v431.i64[1];
        v418 += 16;
      }
      while (v418 != 64);
      uint64_t v434 = 0;
      v435.i64[0] = 0xF000F000F000FLL;
      v435.i64[1] = 0xF000F000F000FLL;
      v436.i64[0] = -1;
      v436.i64[1] = -1;
      do
      {
        uint16x8_t v437 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v436, (uint16x8_t)vaddq_s16(v507, v435)), *(int8x16_t *)((char *)&v498 + v434));
        int32x4_t v438 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v507.i8);
        int32x4_t v439 = (int32x4_t)vmovl_high_u16((uint16x8_t)v507);
        int32x4_t v440 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v437.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v438)), (int32x4_t)vshlq_u32(vmovl_high_u16(v437), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v439)));
        int32x4_t v441 = vpaddq_s32(v438, v439);
        v442.i64[0] = v440.u32[0];
        v442.i64[1] = v440.u32[1];
        uint64x2_t v443 = (uint64x2_t)v442;
        v442.i64[0] = v440.u32[2];
        v442.i64[1] = v440.u32[3];
        uint64x2_t v444 = (uint64x2_t)v442;
        v442.i64[0] = v441.u32[0];
        v442.i64[1] = v441.u32[1];
        int64x2_t v445 = v442;
        v442.i64[0] = v441.u32[2];
        v442.i64[1] = v441.u32[3];
        int64x2_t v446 = vpaddq_s64((int64x2_t)vshlq_u64(v443, (uint64x2_t)vzip1q_s64((int64x2_t)0, v445)), (int64x2_t)vshlq_u64(v444, (uint64x2_t)vzip1q_s64((int64x2_t)0, v442)));
        int64x2_t v447 = vpaddq_s64(v445, v442);
        unint64_t v448 = (v446.i64[0] << v385) | v384;
        if (v447.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v448;
          unint64_t v448 = (unint64_t)v446.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v448 = 0;
          }
        }
        unint64_t v449 = v447.i64[0] + v385;
        unint64_t v384 = v448 | (v446.i64[1] << v449);
        if ((v449 & 0x3F) + v447.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v449 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v446.i64[1] >> -(v449 & 0x3F);
          if ((v449 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v449 + v447.i64[1];
        v434 += 16;
      }
      while (v434 != 64);
      if ((v385 & 0x3F) != 0) {
        *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
      }
      unint64_t result = (v385 - v295 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = a3->i32[0];
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, int8x16_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v99 = *MEMORY[0x263EF8340];
  long long v97 = 0u;
  long long v98 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v93 = 0u;
  long long v94 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  long long v89 = 0u;
  long long v90 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  uint64_t v10 = a6;
  long long v67 = 0u;
  long long v68 = 0u;
  if (a5 >= 4)
  {
    uint64_t v16 = 0;
    uint32x4_t v17 = (int64x2_t *)&v75;
    unint64_t v18 = ((unint64_t)&v67 + ((a5 << 6) & 0x3F00)) | 8;
    v19.i64[0] = 0x300000003;
    v19.i64[1] = 0x300000003;
    do
    {
      uint32x4_t v20 = v17;
      uint32x4_t v21 = a3;
      uint64_t v22 = a5 & 0xFC;
      do
      {
        int8x16_t v23 = *v21++;
        int8x16_t v24 = vandq_s8(v23, v19);
        _Q3 = vandq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v23, 0xAuLL), v19);
        uint32x4_t v26 = vshrq_n_u32((uint32x4_t)v23, 0x14uLL);
        _Q1 = (int8x16_t)vshrq_n_u32((uint32x4_t)v23, 0x1EuLL);
        int8x16_t v28 = (int8x16_t)vshll_n_s32(*(int32x2_t *)_Q3.i8, 0x20uLL);
        __asm { SHLL2           V3.2D, V3.4S, #0x20 ; ' ' }
        v33.i64[0] = v24.u32[0];
        v33.i64[1] = v24.u32[1];
        int8x16_t v34 = v33;
        v33.i64[0] = v24.u32[2];
        v33.i64[1] = v24.u32[3];
        int64x2_t v35 = (int64x2_t)vorrq_s8(_Q3, v33);
        int64x2_t v36 = (int64x2_t)vorrq_s8(v28, v34);
        int8x16_t v37 = (int8x16_t)vshll_n_s32(*(int32x2_t *)_Q1.i8, 0x20uLL);
        __asm { SHLL2           V1.2D, V1.4S, #0x20 ; ' ' }
        v33.i64[0] = v26.i32[0] & 0xFFFFF3FF;
        v33.i64[1] = v26.i32[1] & 0xFFFFF3FF;
        int8x16_t v38 = v33;
        v33.i64[0] = v26.i32[2] & 0xFFFFF3FF;
        v33.i64[1] = v26.i32[3] & 0xFFFFF3FF;
        int64x2_t v39 = (int64x2_t)vorrq_s8(_Q1, v33);
        int64x2_t v40 = (int64x2_t)vorrq_s8(v37, v38);
        v20[-8] = vzip1q_s64(v36, v40);
        v20[-4] = vzip2q_s64(v36, v40);
        *uint32x4_t v20 = vzip1q_s64(v35, v39);
        v20[4] = vzip2q_s64(v35, v39);
        v20 += 16;
        v22 -= 4;
      }
      while (v22);
      if ((a5 & 0xFC) != (unint64_t)a5)
      {
        int8x16_t v41 = (void *)v18;
        uint64_t v42 = a5 & 0xFC;
        do
        {
          unint64_t v43 = a3->u32[v42];
          *(v41 - 1) = v43 & 0x3FF | ((unint64_t)((v43 >> 10) & 0x3FF) << 32);
          *int8x16_t v41 = (4 * v43) & 0x300000000 | (v43 >> 20) & 0x3FF;
          ++v42;
          v41 += 8;
        }
        while (a5 != v42);
      }
      ++v16;
      a3 = (int8x16_t *)((char *)a3 + a4);
      ++v17;
      v18 += 16;
    }
    while (v16 != a6);
  }
  else
  {
    uint32x4_t v11 = &a3->u32[2];
    uint32x4_t v12 = (uint64_t *)&v71 + 1;
    do
    {
      unint64_t v13 = *(v11 - 2);
      *(v12 - 9) = v13 & 0x3FF | ((unint64_t)((v13 >> 10) & 0x3FF) << 32);
      *(v12 - 8) = (4 * v13) & 0x300000000 | (v13 >> 20) & 0x3FF;
      if (a5 != 1)
      {
        unint64_t v14 = *(v11 - 1);
        *(v12 - 1) = v14 & 0x3FF | ((unint64_t)((v14 >> 10) & 0x3FF) << 32);
        *uint32x4_t v12 = (4 * v14) & 0x300000000 | (v14 >> 20) & 0x3FF;
        if (a5 != 2)
        {
          unint64_t v15 = *v11;
          v12[7] = v15 & 0x3FF | ((unint64_t)((v15 >> 10) & 0x3FF) << 32);
          v12[8] = (4 * v15) & 0x300000000 | (v15 >> 20) & 0x3FF;
        }
      }
      uint32x4_t v11 = (unsigned int *)((char *)v11 + a4);
      v12 += 2;
      --v10;
    }
    while (v10);
  }
  long long v59 = v67;
  long long v60 = v71;
  long long v61 = v68;
  long long v62 = v72;
  long long v63 = v75;
  long long v64 = v79;
  if (a5 >= 4) {
    unsigned int v44 = 4;
  }
  else {
    unsigned int v44 = a5;
  }
  if (a5 >= 4) {
    unsigned int v45 = a5 - 4;
  }
  else {
    unsigned int v45 = 0;
  }
  if (a6 >= 2) {
    unsigned int v46 = 2;
  }
  else {
    unsigned int v46 = a6;
  }
  long long v65 = v76;
  long long v66 = v80;
  if (a6 >= 2) {
    unsigned int v47 = a6 - 2;
  }
  else {
    unsigned int v47 = 0;
  }
  char v49 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v59, a7, v44, v46);
  long long v59 = v69;
  long long v60 = v73;
  long long v61 = v70;
  long long v62 = v74;
  long long v63 = v77;
  long long v64 = v81;
  long long v65 = v78;
  long long v66 = v82;
  if (a6 >= 4) {
    unsigned int v50 = 2;
  }
  else {
    unsigned int v50 = v47;
  }
  int v51 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 28, (uint64_t)&v59, a7, v44, v50);
  long long v59 = v83;
  long long v60 = v87;
  long long v61 = v84;
  long long v62 = v88;
  long long v63 = v91;
  long long v64 = v95;
  if (a5 >= 8) {
    unsigned int v52 = 4;
  }
  else {
    unsigned int v52 = v45;
  }
  long long v65 = v92;
  long long v66 = v96;
  int v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 56, (uint64_t)&v59, a7, v52, v46);
  long long v59 = v85;
  long long v60 = v89;
  long long v61 = v86;
  long long v62 = v90;
  long long v63 = v93;
  long long v64 = v97;
  long long v65 = v94;
  long long v66 = v98;
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 84, (uint64_t)&v59, a7, v52, v50);
  if (v53) {
    char v55 = 4;
  }
  else {
    char v55 = 0;
  }
  if (v51) {
    char v56 = 2;
  }
  else {
    char v56 = 0;
  }
  if (result) {
    char v57 = -8;
  }
  else {
    char v57 = -16;
  }
  *a2 = v57 | v55 | v49 | v56;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v324 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v295 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v294 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v293 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v292 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v290 = v9;
  BOOL v291 = v14;
  unint64_t v15 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::compBits;
  BOOL v16 = a4 < 2 || a5 == 0;
  do
  {
    uint64_t v17 = 0;
    unsigned int v19 = *v15++;
    unsigned int v18 = v19;
    *(unsigned int *)((char *)&v320 + v8 * 4) = v19;
    unsigned int v20 = v19 - 2;
    switch(v19)
    {
      case 2u:
        uint64_t v17 = 5;
        break;
      case 0xAu:
        uint64_t v17 = 1;
        break;
      case 0xCu:
        uint64_t v17 = 2;
        break;
      case 0x10u:
        uint64_t v17 = 3;
        break;
      case 0x20u:
        uint64_t v17 = 4;
        break;
      default:
        break;
    }
    v309[v8] = v17;
    unsigned int v21 = 1 << (v18 - 1);
    *(_DWORD *)((char *)&v308[2] + v8 * 4) = v21;
    uint64_t v22 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      unsigned int v23 = *v22 ^ v21;
      int8x16_t v24 = &v311[v8];
      if (v23 == 1) {
        unsigned int v23 = 0;
      }
      *int8x16_t v24 = v23;
      if ((v22[4] ^ v21) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v22[4] ^ v21;
      }
      v24[4] = v25;
      if ((v22[8] ^ v21) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v22[8] ^ v21;
      }
      v24[8] = v26;
      unsigned int v27 = v22[12] ^ v21;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v24[12] = v27;
      if ((v22[16] ^ v21) == 1) {
        unsigned int v28 = 0;
      }
      else {
        unsigned int v28 = v22[16] ^ v21;
      }
      v24[16] = v28;
      if ((v22[20] ^ v21) == 1) {
        unsigned int v29 = 0;
      }
      else {
        unsigned int v29 = v22[20] ^ v21;
      }
      v24[20] = v29;
      if ((v22[24] ^ v21) == 1) {
        unsigned int v30 = 0;
      }
      else {
        unsigned int v30 = v22[24] ^ v21;
      }
      v24[24] = v30;
      int v32 = v22[28] ^ v21;
      if (v32 == 1) {
        unsigned int v31 = 0;
      }
      else {
        unsigned int v31 = v32;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v23 = *v22 ^ v21;
      int8x16_t v24 = &v311[v8];
      *int8x16_t v24 = v23;
      unsigned int v25 = v22[4] ^ v21;
      v24[4] = v25;
      unsigned int v26 = v22[8] ^ v21;
      v24[8] = v26;
      unsigned int v27 = v22[12] ^ v21;
      v24[12] = v27;
      unsigned int v28 = v22[16] ^ v21;
      v24[16] = v28;
      unsigned int v29 = v22[20] ^ v21;
      v24[20] = v29;
      unsigned int v30 = v22[24] ^ v21;
      v24[24] = v30;
      unsigned int v31 = v22[28] ^ v21;
    }
    else
    {
      unsigned int v23 = *v22;
      int8x16_t v24 = &v311[v8];
      *int8x16_t v24 = *v22;
      unsigned int v25 = v22[4];
      v24[4] = v25;
      unsigned int v26 = v22[8];
      v24[8] = v26;
      unsigned int v27 = v22[12];
      v24[12] = v27;
      unsigned int v28 = v22[16];
      v24[16] = v28;
      unsigned int v29 = v22[20];
      v24[20] = v29;
      unsigned int v30 = v22[24];
      v24[24] = v30;
      unsigned int v31 = v22[28];
    }
    v24[28] = v31;
    int8x16_t v33 = &v316[v8 + 4];
    v316[v8 + 4] = v23;
    *(int *)((char *)&v317 + v8 * 4) = v23;
    v316[v8] = 0;
    unsigned int v34 = v23;
    if (v16)
    {
      if (v291) {
        goto LABEL_56;
      }
    }
    else
    {
      if (v25 < v23)
      {
        v316[v8] = 1;
        *(int *)((char *)&v317 + v8 * 4) = v25;
        unsigned int v34 = v25;
      }
      if (v23 >= v25) {
        int64x2_t v35 = &v316[v8 + 4];
      }
      else {
        int64x2_t v35 = &v311[v8 + 4];
      }
      unsigned int v23 = *v35;
      *int8x16_t v33 = v23;
      if (v291)
      {
LABEL_56:
        if (v290) {
          goto LABEL_57;
        }
        goto LABEL_74;
      }
    }
    if (v26 < v34)
    {
      v316[v8] = 2;
      *(int *)((char *)&v317 + v8 * 4) = v26;
      unsigned int v34 = v26;
    }
    if (v23 >= v26) {
      int64x2_t v36 = &v316[v8 + 4];
    }
    else {
      int64x2_t v36 = &v311[v8 + 8];
    }
    unsigned int v23 = *v36;
    *int8x16_t v33 = v23;
    if (v290)
    {
LABEL_57:
      if (v292) {
        goto LABEL_58;
      }
      goto LABEL_80;
    }
LABEL_74:
    if (v27 < v34)
    {
      v316[v8] = 3;
      *(int *)((char *)&v317 + v8 * 4) = v27;
      unsigned int v34 = v27;
    }
    if (v23 >= v27) {
      int8x16_t v37 = &v316[v8 + 4];
    }
    else {
      int8x16_t v37 = &v311[v8 + 12];
    }
    unsigned int v23 = *v37;
    *int8x16_t v33 = v23;
    if (v292)
    {
LABEL_58:
      if (v294) {
        goto LABEL_59;
      }
      goto LABEL_86;
    }
LABEL_80:
    if (v28 < v34)
    {
      v316[v8] = 4;
      *(int *)((char *)&v317 + v8 * 4) = v28;
      unsigned int v34 = v28;
    }
    if (v23 >= v28) {
      int8x16_t v38 = &v316[v8 + 4];
    }
    else {
      int8x16_t v38 = &v311[v8 + 16];
    }
    unsigned int v23 = *v38;
    *int8x16_t v33 = v23;
    if (v294)
    {
LABEL_59:
      if (v293) {
        goto LABEL_60;
      }
      goto LABEL_92;
    }
LABEL_86:
    if (v29 < v34)
    {
      v316[v8] = 5;
      *(int *)((char *)&v317 + v8 * 4) = v29;
      unsigned int v34 = v29;
    }
    if (v23 >= v29) {
      int64x2_t v39 = &v316[v8 + 4];
    }
    else {
      int64x2_t v39 = &v311[v8 + 20];
    }
    unsigned int v23 = *v39;
    *int8x16_t v33 = v23;
    if (v293)
    {
LABEL_60:
      if (v295) {
        goto LABEL_104;
      }
LABEL_98:
      if (v31 < v34)
      {
        v316[v8] = 7;
        *(int *)((char *)&v317 + v8 * 4) = v31;
        unsigned int v34 = v31;
      }
      if (v23 >= v31) {
        int8x16_t v41 = &v316[v8 + 4];
      }
      else {
        int8x16_t v41 = &v311[v8 + 28];
      }
      unsigned int v23 = *v41;
      *int8x16_t v33 = v23;
      goto LABEL_104;
    }
LABEL_92:
    if (v30 < v34)
    {
      v316[v8] = 6;
      *(int *)((char *)&v317 + v8 * 4) = v30;
      unsigned int v34 = v30;
    }
    if (v23 >= v30) {
      int64x2_t v40 = &v316[v8 + 4];
    }
    else {
      int64x2_t v40 = &v311[v8 + 24];
    }
    unsigned int v23 = *v40;
    *int8x16_t v33 = v23;
    if (!v295) {
      goto LABEL_98;
    }
LABEL_104:
    unsigned int v42 = v23 - v34;
    unsigned int v43 = __clz(v23 - v34);
    unsigned int v44 = 32 - v43;
    int v45 = 1;
    switch(v20)
    {
      case 0u:
        BOOL v46 = v43 == 31;
        goto LABEL_116;
      case 6u:
        break;
      case 8u:
        if (v43 - 29 < 3) {
          unsigned int v44 = 3;
        }
        goto LABEL_120;
      case 0xAu:
        if ((v43 & 0x3C) == 0x1C) {
          unsigned int v44 = 4;
        }
        int v45 = -2;
        break;
      case 0xEu:
        BOOL v46 = v23 == 0xFFFF && v43 == 31;
LABEL_116:
        if (v46) {
          unsigned int v44 = 2;
        }
        goto LABEL_120;
      case 0x1Eu:
        unsigned int v44 = (v44 & 1) + (v44 >> 1);
LABEL_120:
        int v45 = -1;
        break;
      default:
        int v45 = 0;
        break;
    }
    unsigned int v47 = (v44 + v45) & ~((int)(v44 + v45) >> 31);
    if (v23 == v34 && v18 - 8 <= 4 && v47 <= 2)
    {
      if (v34) {
        unsigned int v47 = v34 != ~(-1 << v18) || v18 > 0xB;
      }
      else {
        unsigned int v47 = 0;
      }
    }
    *(unsigned int *)((char *)&v312 + v8 * 4) = v47;
    if ((a3 | 2) == 3)
    {
      BOOL v48 = 0;
      if (v23 >= v21 && v34 < v21) {
        BOOL v48 = kDQuadParamTable[160 * v17 + 8 + 10 * v47] == 0;
      }
    }
    else
    {
      BOOL v48 = 0;
    }
    if (v47 >= kDquadTransition[v17] || v48)
    {
      unsigned int v49 = kDQuadParamTable[160 * v17 + 4 + 10 * v47]
          - v48
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v17
            + 1);
      if (v48) {
        int v50 = 0;
      }
      else {
        int v50 = -2;
      }
      BOOL v56 = v18 >= v49;
      unsigned int v52 = v18 - v49;
      BOOL v51 = v52 != 0 && v56;
      int v53 = v34 & ~(-1 << v52);
      if (!v51) {
        int v53 = 0;
      }
      int v54 = v53 + v50;
      BOOL v51 = v54 < 1;
      unsigned int v55 = __clz(v54 + v42);
      BOOL v56 = v51 || v55 >= v43;
      if (v56)
      {
        if (v18 != 32) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned int *)((char *)&v312 + v8 * 4) = ++v47;
        if (v18 != 32) {
          goto LABEL_21;
        }
      }
      if (kDquadMaxMode[v17] < v47) {
        unsigned int v47 = kDquadMaxMode[v17];
      }
      *(unsigned int *)((char *)&v312 + v8 * 4) = v47;
    }
LABEL_21:
    ++v8;
  }
  while (v8 != 4);
  v308[0] = 0;
  v308[1] = 0;
  v307[0] = 0;
  v307[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v309, &v312, v308, v307);
  unint64_t v57 = 0;
  int v58 = 0;
  if (a4) {
    BOOL v59 = a5 == 0;
  }
  else {
    BOOL v59 = 1;
  }
  int v60 = v59;
  while (2)
  {
    uint64_t v62 = v309[v57 / 4];
    int v63 = *(unsigned int *)((char *)&v312 + v57);
    long long v64 = &kDQuadParamTable[160 * v62 + 10 * v63];
    int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
          + 4 * v62
          + 1);
    int v66 = v64[5];
    unsigned int v67 = v64[4] + v65;
    *(unsigned int *)((char *)&v303 + v57) = v67;
    int v68 = v66 + v65;
    *(unsigned int *)((char *)&v299 + v57) = v68;
    unint64_t v69 = *((void *)v64 + 1);
    int v70 = *(_DWORD *)((char *)v307 + v57) - *(_DWORD *)((char *)v308 + v57);
    if (v70 < 0)
    {
      if (kDQuadParamTable[160 * v62 + 7 + 10 * v63] < *(_DWORD *)((char *)v308 + v57)
                                                                    - *(_DWORD *)((char *)v307 + v57))
      {
        *(unsigned int *)((char *)&v299 + v57) = --v68;
        if (!kDQuadParamTable[160 * v62 + 8 + 10 * v63])
        {
          int v71 = -1;
LABEL_165:
          *(unsigned int *)((char *)&v303 + v57) = v71 + v67;
        }
      }
    }
    else if (v70)
    {
      v68 += v70;
      *(unsigned int *)((char *)&v299 + v57) = v68;
      int v71 = v70;
      goto LABEL_165;
    }
    if (v62 == 5)
    {
      int v72 = (v70 < 2) | v58;
      if (v63 == 1) {
        int v58 = v72;
      }
    }
    if (a3 == 4)
    {
      if (v62 == 3) {
        int v73 = 31744;
      }
      else {
        int v73 = 0;
      }
      if (v62 == 4) {
        int v74 = 2139095040;
      }
      else {
        int v74 = v73;
      }
      int v75 = 1 << (*(unsigned int *)((char *)&v320 + v57) - 1);
      if (v60)
      {
        if (v16) {
          goto LABEL_180;
        }
LABEL_194:
        unsigned int v79 = v311[v57 / 4 + 4];
        BOOL v81 = (v74 & ~v79) == 0 || v79 == v75;
        v58 |= v81;
        if (!v291) {
          goto LABEL_201;
        }
LABEL_181:
        if (v290) {
          goto LABEL_182;
        }
LABEL_208:
        unsigned int v85 = v311[v57 / 4 + 12];
        BOOL v87 = (v74 & ~v85) == 0 || v85 == v75;
        v58 |= v87;
        if (!v292) {
          goto LABEL_215;
        }
LABEL_183:
        if (v294) {
          goto LABEL_184;
        }
LABEL_222:
        unsigned int v91 = v311[v57 / 4 + 20];
        BOOL v93 = (v74 & ~v91) == 0 || v91 == v75;
        v58 |= v93;
        if (!v293) {
          goto LABEL_229;
        }
LABEL_185:
        if (!v295) {
          goto LABEL_236;
        }
      }
      else
      {
        unsigned int v76 = v311[v57 / 4];
        BOOL v78 = (v74 & ~v76) == 0 || v76 == v75;
        v58 |= v78;
        if (!v16) {
          goto LABEL_194;
        }
LABEL_180:
        if (v291) {
          goto LABEL_181;
        }
LABEL_201:
        unsigned int v82 = v311[v57 / 4 + 8];
        BOOL v84 = (v74 & ~v82) == 0 || v82 == v75;
        v58 |= v84;
        if (!v290) {
          goto LABEL_208;
        }
LABEL_182:
        if (v292) {
          goto LABEL_183;
        }
LABEL_215:
        unsigned int v88 = v311[v57 / 4 + 16];
        BOOL v90 = (v74 & ~v88) == 0 || v88 == v75;
        v58 |= v90;
        if (!v294) {
          goto LABEL_222;
        }
LABEL_184:
        if (v293) {
          goto LABEL_185;
        }
LABEL_229:
        unsigned int v94 = v311[v57 / 4 + 24];
        BOOL v96 = (v74 & ~v94) == 0 || v94 == v75;
        v58 |= v96;
        if (!v295)
        {
LABEL_236:
          unsigned int v97 = v311[v57 / 4 + 28];
          BOOL v99 = (v74 & ~v97) == 0 || v97 == v75;
          v58 |= v99;
        }
      }
    }
    if (v69 >> v68 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v57
                                       + 16))
      int v61 = 1;
    else {
      int v61 = v60;
    }
    v58 |= v61;
    v57 += 4;
    if (v57 != 16) {
      continue;
    }
    break;
  }
  uint64_t v100 = 0;
  uint64_t v297 = 0;
  uint64_t v298 = 0;
  memset(v296, 0, sizeof(v296));
  int8x16_t v101 = v311;
  int8x16_t v102 = v310;
  do
  {
    uint64_t v103 = 0;
    unsigned int v104 = 0;
    unsigned int v105 = *(&v320 + v100);
    if (v105 >= *(&v303 + v100)) {
      unsigned int v106 = *(&v303 + v100);
    }
    else {
      unsigned int v106 = *(&v320 + v100);
    }
    *(&v303 + v100) = v106;
    int16x8_t v107 = &kDQuadParamTable[160 * v309[v100] + 10 * *(&v312 + v100)];
    unsigned int v108 = *(&v299 + v100);
    if (v107[5]) {
      unsigned int v109 = v105;
    }
    else {
      unsigned int v109 = 0;
    }
    if (v109 < v108) {
      unsigned int v108 = v109;
    }
    int v110 = *(&v317 + v100) & (-1 << (v105 - v106));
    int8x16_t v111 = &v311[v100];
    int v112 = *v111 - v110;
    int16x8_t v113 = &v310[2 * v100];
    if (v60) {
      int v112 = 0;
    }
    int v114 = v111[4] - v110;
    if (v16) {
      int v114 = 0;
    }
    *int16x8_t v113 = v112;
    v113[1] = v114;
    int v115 = v111[8] - v110;
    if (v291) {
      int v115 = 0;
    }
    int v116 = v111[12] - v110;
    if (v290) {
      int v116 = 0;
    }
    v113[2] = v115;
    v113[3] = v116;
    int v117 = v111[16] - v110;
    if (v292) {
      int v117 = 0;
    }
    int v118 = v111[20] - v110;
    if (v294) {
      int v118 = 0;
    }
    v113[4] = v117;
    v113[5] = v118;
    uint64_t v119 = -1 << v105;
    *(&v299 + v100) = v108;
    unint64_t v120 = *((void *)v107 + 1);
    *((_DWORD *)&v297 + v100) = v110;
    unint64_t v121 = v120 >> v108;
    int v122 = v111[24] - v110;
    if (v293) {
      int v122 = 0;
    }
    int v123 = v111[28] - v110;
    if (v295) {
      int v123 = 0;
    }
    v113[6] = v122;
    v113[7] = v123;
    if (v121 <= 1) {
      unint64_t v124 = 1;
    }
    else {
      unint64_t v124 = v121;
    }
    uint64_t v125 = 4 * v316[v100];
    int16x8_t v126 = &byte_242EA911D;
    do
    {
      if (v125 != v103)
      {
        if (v108) {
          unint64_t v127 = *(unsigned int *)((char *)v102 + v103) / v124;
        }
        else {
          LODWORD(v127) = 0;
        }
        int16x8_t v128 = (int *)v296 + 7 * v100 + v104;
        *int16x8_t v128 = v127;
        if (v121 >= 2)
        {
          unint64_t v129 = *(unsigned int *)((char *)v102 + v103);
          if (v129)
          {
            if (v129 / v124 * v124 == v129 && ((v129 / v124) & 1) != 0)
            {
              if (v110 || v127 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v131 = v101[v103], v132 = *((unsigned int *)&v308[2] + v100), v131 != v132)
                  && ((a3 | 2) != 3 || v124 + v132 != v131))
                {
                  LODWORD(v127) = v127 - 1;
                  *int16x8_t v128 = v127;
                }
              }
              else
              {
                LODWORD(v127) = 1;
              }
            }
          }
        }
        if ((unint64_t)v127 >> v108 || v101[v103] == ~v119) {
          *int16x8_t v128 = ~(-1 << v108);
        }
        if (*v126 >= a5 || *(v126 - 1) >= a4) {
          *int16x8_t v128 = 0;
        }
        ++v104;
      }
      v103 += 4;
      v126 += 2;
    }
    while (v103 != 32);
    ++v100;
    v102 += 2;
    ++v101;
  }
  while (v100 != 4);
  int16x8_t v133 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v134 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
  if (v58)
  {
    uint64_t v135 = 0;
    uint64_t v136 = 0;
    unsigned int v137 = v320;
    unsigned int v138 = v321;
    uint64_t v139 = v320 - 1;
    uint64_t v140 = v321 - 1;
    unsigned int v141 = v322;
    unint64_t v142 = v323;
    uint64_t v143 = v322 - 2;
    uint64_t v144 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v145 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v135;
      BOOL v146 = v145[1] >= a5 || *v145 >= a4;
      char v147 = v146;
      if (v146)
      {
        unint64_t v148 = 0;
        if (v139 > 0x100) {
          goto LABEL_321;
        }
      }
      else
      {
        unint64_t v148 = (unint64_t)v311[4 * v135] >> 1;
        if (v139 > 0x100) {
          goto LABEL_321;
        }
      }
      if (v137 != 1 && (unint64_t)(v144 - v134 + (v136 << 6) + v139) <= 0xE0)
      {
        uint64_t v149 = 0;
        unint64_t v150 = v137 - 1;
        do
        {
          unint64_t v151 = 64 - v144;
          if (64 - v144 >= v150) {
            unint64_t v151 = v150;
          }
          v133[v136] |= ((v148 >> v149) & ~(-1 << v151)) << v144;
          v149 += v151;
          unint64_t v152 = v151 + v144;
          v136 += v152 >> 6;
          uint64_t v144 = v152 & 0x3F;
          v150 -= v151;
        }
        while (v150);
      }
LABEL_321:
      if (v147)
      {
        unint64_t v153 = 0;
        if (v140 > 0x100) {
          goto LABEL_331;
        }
      }
      else
      {
        unint64_t v153 = (unint64_t)v311[4 * v135 + 1] >> 1;
        if (v140 > 0x100) {
          goto LABEL_331;
        }
      }
      if (v138 != 1 && (unint64_t)(v144 - v134 + (v136 << 6) + v140) <= 0xE0)
      {
        uint64_t v154 = 0;
        unint64_t v155 = v138 - 1;
        do
        {
          unint64_t v156 = 64 - v144;
          if (64 - v144 >= v155) {
            unint64_t v156 = v155;
          }
          v133[v136] |= ((v153 >> v154) & ~(-1 << v156)) << v144;
          v154 += v156;
          unint64_t v157 = v156 + v144;
          v136 += v157 >> 6;
          uint64_t v144 = v157 & 0x3F;
          v155 -= v156;
        }
        while (v155);
      }
LABEL_331:
      if (v147)
      {
        unint64_t v158 = 0;
        if (v143 > 0x100) {
          goto LABEL_341;
        }
      }
      else
      {
        unint64_t v158 = (unint64_t)v311[4 * v135 + 2] >> 2;
        if (v143 > 0x100) {
          goto LABEL_341;
        }
      }
      if (v141 != 2 && (unint64_t)(v144 - v134 + (v136 << 6) + v143) <= 0xE0)
      {
        uint64_t v159 = 0;
        unint64_t v160 = v141 - 2;
        do
        {
          unint64_t v161 = 64 - v144;
          if (64 - v144 >= v160) {
            unint64_t v161 = v160;
          }
          v133[v136] |= ((v158 >> v159) & ~(-1 << v161)) << v144;
          v159 += v161;
          unint64_t v162 = v161 + v144;
          v136 += v162 >> 6;
          uint64_t v144 = v162 & 0x3F;
          v160 -= v161;
        }
        while (v160);
      }
LABEL_341:
      if (v147)
      {
        unint64_t v163 = 0;
        if (v142 <= 0x100) {
          goto LABEL_345;
        }
      }
      else
      {
        unint64_t v163 = v311[4 * v135 + 3];
        if (v142 <= 0x100)
        {
LABEL_345:
          if (v142 && v144 - v134 + (v136 << 6) + v142 <= 0xE0)
          {
            uint64_t v164 = 0;
            unint64_t v165 = v142;
            do
            {
              unint64_t v166 = 64 - v144;
              if (64 - v144 >= v165) {
                unint64_t v166 = v165;
              }
              v133[v136] |= ((v163 >> v164) & ~(-1 << v166)) << v144;
              v164 += v166;
              unint64_t v167 = v166 + v144;
              v136 += v167 >> 6;
              uint64_t v144 = v167 & 0x3F;
              v165 -= v166;
            }
            while (v165);
          }
        }
      }
      if (++v135 == 8) {
        return v58 & 1;
      }
    }
  }
  unsigned int v168 = v312;
  char v169 = v317 | v312;
  if (v317 | v312)
  {
    char v169 = v312 - 2;
    if (v312 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v312 + 1;
      goto LABEL_356;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_356:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  *v133 |= (unint64_t)(v169 & 7) << v134;
  uint64_t v174 = v134 | 3;
  unsigned int v175 = v313;
  char v176 = v318 | v313;
  if (v318 | v313)
  {
    char v176 = v313 - 2;
    if (v313 <= 2)
    {
      char v176 = 0;
      char v177 = 0;
      unsigned int v178 = v313 + 1;
      goto LABEL_362;
    }
    unsigned int v180 = 0;
    unsigned int v178 = 0;
    int v179 = 0;
    char v177 = 1;
  }
  else
  {
    char v177 = 0;
    unsigned int v178 = 0;
LABEL_362:
    int v179 = 1;
    unsigned int v180 = 2;
  }
  if ((unint64_t)(v174 - v134 - 222) >= 0xFFFFFFFFFFFFFF1FLL)
  {
    *v133 |= (unint64_t)(v176 & 7) << v174;
    uint64_t v174 = v134 | 6;
  }
  unsigned int v181 = v314;
  if (v319 | v314)
  {
    unsigned int v182 = v314 - 2;
    if (v314 <= 2)
    {
      unsigned int v182 = 0;
      char v183 = 0;
      unsigned int v184 = v314 + 1;
      goto LABEL_370;
    }
    unsigned int v186 = 0;
    unsigned int v184 = 0;
    int v185 = 0;
    char v183 = 1;
  }
  else
  {
    unsigned int v182 = 0;
    char v183 = 0;
    unsigned int v184 = 0;
LABEL_370:
    int v185 = 1;
    unsigned int v186 = 2;
  }
  if ((unint64_t)(v174 - v134 - 222) >= 0xFFFFFFFFFFFFFF1FLL)
  {
    uint64_t v187 = 0;
    uint64_t v188 = 0;
    unint64_t v189 = 3;
    do
    {
      unint64_t v190 = 64 - v174;
      if (64 - v174 >= v189) {
        unint64_t v190 = v189;
      }
      v133[v187] |= (((unint64_t)v182 >> v188) & ~(-1 << v190)) << v174;
      v188 += v190;
      unint64_t v191 = v190 + v174;
      v187 += v191 >> 6;
      uint64_t v174 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  else
  {
    uint64_t v187 = 0;
  }
  int v192 = v315;
  if ((unint64_t)(v174 - v134 + (v187 << 6) - 224) >= 0xFFFFFFFFFFFFFF1FLL)
  {
    v133[v187] |= (unint64_t)(v315 & 1) << v174;
    unint64_t v193 = v174 + 1;
    v187 += v193 >> 6;
    uint64_t v174 = v193 & 0x3F;
  }
  if (v172)
  {
    unint64_t v194 = v173;
    if (v174 - v134 + (v187 << 6) + (unint64_t)v173 > 0xE0) {
      char v170 = 1;
    }
    if ((v170 & 1) == 0)
    {
      uint64_t v195 = 0;
      do
      {
        unint64_t v196 = 64 - v174;
        if (64 - v174 >= v194) {
          unint64_t v196 = v194;
        }
        v133[v187] |= (((unint64_t)v171 >> v195) & ~(-1 << v196)) << v174;
        v195 += v196;
        unint64_t v197 = v196 + v174;
        v187 += v197 >> 6;
        uint64_t v174 = v197 & 0x3F;
        v194 -= v196;
      }
      while (v194);
    }
    int v198 = v173 + 10;
    if (!v179)
    {
LABEL_389:
      if (v185) {
        goto LABEL_390;
      }
LABEL_409:
      unsigned int v204 = v320;
      if (v168) {
        goto LABEL_410;
      }
LABEL_419:
      if (v204 == 2 || v204 >= 0x10) {
        goto LABEL_410;
      }
      unsigned int v215 = v321;
      if (v175) {
        goto LABEL_422;
      }
LABEL_523:
      if (v215 == 2 || v215 >= 0x10) {
        goto LABEL_422;
      }
      goto LABEL_430;
    }
  }
  else
  {
    int v198 = 10;
    if (!v179) {
      goto LABEL_389;
    }
  }
  unint64_t v205 = v180;
  if (v174 - v134 + (v187 << 6) + (unint64_t)v180 > 0xE0) {
    char v177 = 1;
  }
  if ((v177 & 1) == 0)
  {
    uint64_t v206 = 0;
    do
    {
      unint64_t v207 = 64 - v174;
      if (64 - v174 >= v205) {
        unint64_t v207 = v205;
      }
      v133[v187] |= (((unint64_t)v178 >> v206) & ~(-1 << v207)) << v174;
      v206 += v207;
      unint64_t v208 = v207 + v174;
      v187 += v208 >> 6;
      uint64_t v174 = v208 & 0x3F;
      v205 -= v207;
    }
    while (v205);
  }
  v198 += v180;
  if (!v185) {
    goto LABEL_409;
  }
LABEL_390:
  unint64_t v199 = v186;
  if (v174 - v134 + (v187 << 6) + (unint64_t)v186 > 0xE0) {
    char v200 = 1;
  }
  else {
    char v200 = v183;
  }
  if ((v200 & 1) == 0)
  {
    uint64_t v201 = 0;
    do
    {
      unint64_t v202 = 64 - v174;
      if (64 - v174 >= v199) {
        unint64_t v202 = v199;
      }
      v133[v187] |= (((unint64_t)v184 >> v201) & ~(-1 << v202)) << v174;
      v201 += v202;
      unint64_t v203 = v202 + v174;
      v187 += v203 >> 6;
      uint64_t v174 = v203 & 0x3F;
      v199 -= v202;
    }
    while (v199);
  }
  v198 += v186;
  unsigned int v204 = v320;
  if (!v168) {
    goto LABEL_419;
  }
LABEL_410:
  unsigned int v209 = v303;
  if (v303 <= 0x100 && v303 && v174 - v134 + (v187 << 6) + (unint64_t)v303 <= 0xE0)
  {
    uint64_t v210 = 0;
    unint64_t v211 = v297 >> (v204 - v303);
    unint64_t v212 = v303;
    do
    {
      unint64_t v213 = 64 - v174;
      if (64 - v174 >= v212) {
        unint64_t v213 = v212;
      }
      v133[v187] |= ((v211 >> v210) & ~(-1 << v213)) << v174;
      v210 += v213;
      unint64_t v214 = v213 + v174;
      v187 += v214 >> 6;
      uint64_t v174 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  v198 += v209;
  unsigned int v215 = v321;
  if (!v175) {
    goto LABEL_523;
  }
LABEL_422:
  unsigned int v216 = v304;
  if (v304 <= 0x100 && v304 && v174 - v134 + (v187 << 6) + (unint64_t)v304 <= 0xE0)
  {
    uint64_t v217 = 0;
    unint64_t v218 = (HIDWORD(v297) >> (v215 - v304));
    unint64_t v219 = v304;
    do
    {
      unint64_t v220 = 64 - v174;
      if (64 - v174 >= v219) {
        unint64_t v220 = v219;
      }
      v133[v187] |= ((v218 >> v217) & ~(-1 << v220)) << v174;
      v217 += v220;
      unint64_t v221 = v220 + v174;
      v187 += v221 >> 6;
      uint64_t v174 = v221 & 0x3F;
      v219 -= v220;
    }
    while (v219);
  }
  v198 += v216;
LABEL_430:
  if (v181 || v322 == 2 || v322 >= 0x10)
  {
    unsigned int v222 = v305;
    if (v305 <= 0x100 && v305 && v174 - v134 + (v187 << 6) + (unint64_t)v305 <= 0xE0)
    {
      uint64_t v223 = 0;
      unint64_t v224 = v298 >> (v322 - v305);
      unint64_t v225 = v305;
      do
      {
        unint64_t v226 = 64 - v174;
        if (64 - v174 >= v225) {
          unint64_t v226 = v225;
        }
        v133[v187] |= ((v224 >> v223) & ~(-1 << v226)) << v174;
        v223 += v226;
        unint64_t v227 = v226 + v174;
        v187 += v227 >> 6;
        uint64_t v174 = v227 & 0x3F;
        v225 -= v226;
      }
      while (v225);
    }
    v198 += v222;
  }
  if (v192 || v323 == 2 || v323 >= 0x10)
  {
    unsigned int v228 = v306;
    if (v306 <= 0x100 && v306 && v174 - v134 + (v187 << 6) + (unint64_t)v306 <= 0xE0)
    {
      uint64_t v229 = 0;
      unint64_t v230 = (HIDWORD(v298) >> (v323 - v306));
      unint64_t v231 = v306;
      do
      {
        unint64_t v232 = 64 - v174;
        if (64 - v174 >= v231) {
          unint64_t v232 = v231;
        }
        v133[v187] |= ((v230 >> v229) & ~(-1 << v232)) << v174;
        v229 += v232;
        unint64_t v233 = v232 + v174;
        v187 += v233 >> 6;
        uint64_t v174 = v233 & 0x3F;
        v231 -= v232;
      }
      while (v231);
    }
    v198 += v228;
  }
  unint64_t v234 = v299;
  if (v299)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xE0)
    {
      uint64_t v235 = 0;
      unint64_t v236 = v316[0];
      unint64_t v237 = 3;
      do
      {
        unint64_t v238 = 64 - v174;
        if (64 - v174 >= v237) {
          unint64_t v238 = v237;
        }
        v133[v187] |= ((v236 >> v235) & ~(-1 << v238)) << v174;
        v235 += v238;
        unint64_t v239 = v238 + v174;
        v187 += v239 >> 6;
        uint64_t v174 = v239 & 0x3F;
        v237 -= v238;
      }
      while (v237);
    }
    v198 += 3;
  }
  unint64_t v240 = v300;
  if (v300)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xE0)
    {
      uint64_t v241 = 0;
      unint64_t v242 = v316[1];
      unint64_t v243 = 3;
      do
      {
        unint64_t v244 = 64 - v174;
        if (64 - v174 >= v243) {
          unint64_t v244 = v243;
        }
        v133[v187] |= ((v242 >> v241) & ~(-1 << v244)) << v174;
        v241 += v244;
        unint64_t v245 = v244 + v174;
        v187 += v245 >> 6;
        uint64_t v174 = v245 & 0x3F;
        v243 -= v244;
      }
      while (v243);
    }
    v198 += 3;
  }
  unint64_t v246 = v301;
  if (v301)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xE0)
    {
      uint64_t v247 = 0;
      unint64_t v248 = v316[2];
      unint64_t v249 = 3;
      do
      {
        unint64_t v250 = 64 - v174;
        if (64 - v174 >= v249) {
          unint64_t v250 = v249;
        }
        v133[v187] |= ((v248 >> v247) & ~(-1 << v250)) << v174;
        v247 += v250;
        unint64_t v251 = v250 + v174;
        v187 += v251 >> 6;
        uint64_t v174 = v251 & 0x3F;
        v249 -= v250;
      }
      while (v249);
    }
    v198 += 3;
  }
  unint64_t v252 = v302;
  if (v302)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xE0)
    {
      uint64_t v253 = 0;
      unint64_t v254 = v316[3];
      unint64_t v255 = 3;
      do
      {
        unint64_t v256 = 64 - v174;
        if (64 - v174 >= v255) {
          unint64_t v256 = v255;
        }
        v133[v187] |= ((v254 >> v253) & ~(-1 << v256)) << v174;
        v253 += v256;
        unint64_t v257 = v256 + v174;
        v187 += v257 >> 6;
        uint64_t v174 = v257 & 0x3F;
        v255 -= v256;
      }
      while (v255);
    }
    v198 += 3;
  }
  unsigned int v258 = 224 - v198;
  unsigned int v259 = (224 - v198) / 7u;
  unint64_t v260 = v258 % 7;
  if ((v260 - 257) >= 0xFFFFFF00 && v174 - v134 + (v187 << 6) + v260 <= 0xE0)
  {
    do
    {
      unint64_t v261 = 64 - v174;
      if (64 - v174 >= v260) {
        unint64_t v261 = v260;
      }
      unint64_t v262 = v261 + v174;
      v187 += v262 >> 6;
      uint64_t v174 = v262 & 0x3F;
      v260 -= v261;
    }
    while (v260);
  }
  uint64_t v263 = 0;
  while (2)
  {
    if (v234 && v234 <= 0x100 && v174 - v134 + (v187 << 6) + v234 <= 0xE0)
    {
      uint64_t v264 = 0;
      unint64_t v265 = *((unsigned int *)v296 + v263);
      unint64_t v266 = v234;
      do
      {
        unint64_t v267 = 64 - v174;
        if (64 - v174 >= v266) {
          unint64_t v267 = v266;
        }
        v133[v187] |= ((v265 >> v264) & ~(-1 << v267)) << v174;
        v264 += v267;
        unint64_t v268 = v267 + v174;
        v187 += v268 >> 6;
        uint64_t v174 = v268 & 0x3F;
        v266 -= v267;
      }
      while (v266);
    }
    if (!v240)
    {
      int v274 = v234;
      if (!v246) {
        goto LABEL_507;
      }
      goto LABEL_500;
    }
    if (v240 <= 0x100 && v174 - v134 + (v187 << 6) + v240 <= 0xE0)
    {
      uint64_t v269 = 0;
      unint64_t v270 = *((unsigned int *)&v296[1] + v263 + 3);
      unint64_t v271 = v240;
      do
      {
        unint64_t v272 = 64 - v174;
        if (64 - v174 >= v271) {
          unint64_t v272 = v271;
        }
        v133[v187] |= ((v270 >> v269) & ~(-1 << v272)) << v174;
        v269 += v272;
        unint64_t v273 = v272 + v174;
        v187 += v273 >> 6;
        uint64_t v174 = v273 & 0x3F;
        v271 -= v272;
      }
      while (v271);
    }
    int v274 = v240 + v234;
    if (v246)
    {
LABEL_500:
      if (v246 <= 0x100 && v174 - v134 + (v187 << 6) + v246 <= 0xE0)
      {
        uint64_t v275 = 0;
        unint64_t v276 = *((unsigned int *)&v296[3] + v263 + 2);
        unint64_t v277 = v246;
        do
        {
          unint64_t v278 = 64 - v174;
          if (64 - v174 >= v277) {
            unint64_t v278 = v277;
          }
          v133[v187] |= ((v276 >> v275) & ~(-1 << v278)) << v174;
          v275 += v278;
          unint64_t v279 = v278 + v174;
          v187 += v279 >> 6;
          uint64_t v174 = v279 & 0x3F;
          v277 -= v278;
        }
        while (v277);
      }
      v274 += v246;
    }
LABEL_507:
    if (v252)
    {
      if (v252 <= 0x100 && v174 - v134 + (v187 << 6) + v252 <= 0xE0)
      {
        uint64_t v280 = 0;
        unint64_t v281 = *((unsigned int *)&v296[5] + v263 + 1);
        unint64_t v282 = v252;
        do
        {
          unint64_t v283 = 64 - v174;
          if (64 - v174 >= v282) {
            unint64_t v283 = v282;
          }
          v133[v187] |= ((v281 >> v280) & ~(-1 << v283)) << v174;
          v280 += v283;
          unint64_t v284 = v283 + v174;
          v187 += v284 >> 6;
          uint64_t v174 = v284 & 0x3F;
          v282 -= v283;
        }
        while (v282);
      }
      v274 += v252;
    }
    unint64_t v285 = v259 - v274;
    if (v285 && v285 <= 0x100 && v174 - v134 + (v187 << 6) + v285 <= 0xE0)
    {
      do
      {
        unint64_t v286 = 64 - v174;
        if (64 - v174 >= v285) {
          unint64_t v286 = v285;
        }
        unint64_t v287 = v286 + v174;
        v187 += v287 >> 6;
        uint64_t v174 = v287 & 0x3F;
        v285 -= v286;
      }
      while (v285);
    }
    if (++v263 != 7) {
      continue;
    }
    return v58 & 1;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = (a3 & 0xFFFFFFFD) == 1;
  int v9 = 2 * v8;
  int v10 = v8 << 9;
  uint64_t result = -1;
  uint64_t v12 = v6;
  do
  {
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 216) >= 0xFFFFFFFFFFFFFF1FLL)
    {
      __int16 v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 9;
      do
      {
        unint64_t v17 = 64 - v12;
        if (64 - v12 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v17)) << v15;
        v15 += v17;
        unint64_t v18 = v17 + v12;
        v4 += v18 >> 6;
        uint64_t v12 = v18 & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      __int16 v14 = 0;
    }
    int v19 = 2 * (v14 & 0x1FF);
    if (a3 != 4)
    {
      BOOL v21 = v19 == 512 && v7 == 1;
      if (!v21 && v19)
      {
        if (v19 == 1022) {
          int v19 = 1023;
        }
        else {
          int v19 = (v14 & 1 | v19) ^ 1;
        }
      }
    }
    *(_DWORD *)(a2 + 16 * v3) = v19 ^ v10;
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 216) >= 0xFFFFFFFFFFFFFF1FLL)
    {
      __int16 v20 = 0;
      uint64_t v22 = 0;
      unint64_t v23 = 9;
      do
      {
        unint64_t v24 = 64 - v12;
        if (64 - v12 >= v23) {
          unint64_t v24 = v23;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v24)) << v22;
        v22 += v24;
        unint64_t v25 = v24 + v12;
        v4 += v25 >> 6;
        uint64_t v12 = v25 & 0x3F;
        v23 -= v24;
      }
      while (v23);
    }
    else
    {
      __int16 v20 = 0;
    }
    int v26 = 2 * (v20 & 0x1FF);
    int v27 = (v20 & 1 | v26) ^ 1;
    if (v26 == 1022) {
      int v27 = 1023;
    }
    if (v26 == 512 && v7 == 1 || v26 == 0) {
      int v27 = v26;
    }
    if (a3 == 4) {
      int v27 = v26;
    }
    int v30 = v27 ^ v10;
    uint64_t v31 = a2 + 16 * v3;
    *(_DWORD *)(v31 + 4) = v30;
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 217) >= 0xFFFFFFFFFFFFFF1FLL)
    {
      unsigned __int8 v32 = 0;
      uint64_t v33 = 0;
      unint64_t v34 = 8;
      do
      {
        unint64_t v35 = 64 - v12;
        if (64 - v12 >= v34) {
          unint64_t v35 = v34;
        }
        v32 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v35)) << v33;
        v33 += v35;
        unint64_t v36 = v35 + v12;
        v4 += v36 >> 6;
        uint64_t v12 = v36 & 0x3F;
        v34 -= v35;
      }
      while (v34);
    }
    else
    {
      unsigned __int8 v32 = 0;
    }
    int v37 = 4 * v32;
    int v38 = (2 - (v32 & 1)) | v37;
    if (v37 == 1020) {
      int v38 = 1023;
    }
    if (v37 == 512 && v7 == 1 || v37 == 0) {
      int v38 = v37;
    }
    if (a3 == 4) {
      int v38 = v37;
    }
    *(_DWORD *)(v31 + 8) = v38 ^ v10;
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 223) < 0xFFFFFFFFFFFFFF1FLL)
    {
      char v13 = 0;
    }
    else
    {
      char v13 = 0;
      uint64_t v41 = 0;
      unint64_t v42 = 2;
      do
      {
        unint64_t v43 = 64 - v12;
        if (64 - v12 >= v42) {
          unint64_t v43 = v42;
        }
        v13 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v43)) << v41;
        v41 += v43;
        unint64_t v44 = v43 + v12;
        v4 += v44 >> 6;
        uint64_t v12 = v44 & 0x3F;
        v42 -= v43;
      }
      while (v42);
    }
    *(_DWORD *)(a2 + 16 * v3++ + 12) = v13 & 3 ^ v9;
  }
  while (v3 != 8);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v259 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (v7 >> v6) & 7;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0xDD) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0xDD) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  uint64_t v12 = v10 - v6;
  if ((unint64_t)(v10 - v6 - 222) >= 0xFFFFFFFFFFFFFF1FLL)
  {
    uint64_t v13 = 0;
    char v14 = 0;
    uint64_t v15 = 0;
    unint64_t v16 = 3;
    do
    {
      unint64_t v17 = 64 - v10;
      if (64 - v10 >= v16) {
        unint64_t v17 = v16;
      }
      v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
      v15 += v17;
      v13 += (v17 + v10) >> 6;
      uint64_t v10 = (v17 + v10) & 0x3F;
      v16 -= v17;
    }
    while (v16);
    uint64_t v12 = v10 - v6;
  }
  else
  {
    uint64_t v13 = 0;
    char v14 = 0;
  }
  if ((unint64_t)(v12 + (v13 << 6) - 224) >= 0xFFFFFFFFFFFFFF1FLL)
  {
    unint64_t v18 = v10 + 1;
    uint64_t v19 = *(void *)(v5 + 8 * v13) >> v10;
    uint64_t v10 = (v10 + 1) & 0x3F;
    v13 += v18 >> 6;
    int v232 = v19 & 1;
  }
  else
  {
    int v232 = 0;
  }
  v248[0] = 10;
  uint64_t v231 = a2;
  if (v8)
  {
    char v20 = 0;
    int v21 = 10;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 223) >= 0xFFFFFFFFFFFFFF1FLL)
    {
      char v20 = 0;
      uint64_t v22 = 0;
      unint64_t v23 = 2;
      do
      {
        unint64_t v24 = 64 - v10;
        if (64 - v10 >= v23) {
          unint64_t v24 = v23;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v24)) << v22;
        v22 += v24;
        v13 += (v24 + v10) >> 6;
        uint64_t v10 = (v24 + v10) & 0x3F;
        v23 -= v24;
      }
      while (v23);
    }
    else
    {
      char v20 = 0;
    }
    int v21 = 12;
  }
  int v233 = v21;
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)1>::getDquadModeData(0, v8, v20, &v249);
  unsigned int v252 = 1;
  v248[1] = 10;
  if (v11)
  {
    int v25 = 0;
    char v26 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 223) >= 0xFFFFFFFFFFFFFF1FLL)
    {
      char v26 = 0;
      uint64_t v27 = 0;
      unint64_t v28 = 2;
      do
      {
        unint64_t v29 = 64 - v10;
        if (64 - v10 >= v28) {
          unint64_t v29 = v28;
        }
        v26 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v29)) << v27;
        v27 += v29;
        v13 += (v29 + v10) >> 6;
        uint64_t v10 = (v29 + v10) & 0x3F;
        v28 -= v29;
      }
      while (v28);
    }
    else
    {
      char v26 = 0;
    }
    int v25 = 2;
  }
  int v256 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)1>::getDquadModeData(1, v11, v26, &v250);
  unsigned int v253 = 1;
  v248[2] = 10;
  if (v14)
  {
    int v30 = 0;
    char v31 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 223) >= 0xFFFFFFFFFFFFFF1FLL)
    {
      char v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 2;
      do
      {
        unint64_t v34 = 64 - v10;
        if (64 - v10 >= v33) {
          unint64_t v34 = v33;
        }
        v31 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v34)) << v32;
        v32 += v34;
        v13 += (v34 + v10) >> 6;
        uint64_t v10 = (v34 + v10) & 0x3F;
        v33 -= v34;
      }
      while (v33);
    }
    else
    {
      char v31 = 0;
    }
    int v30 = 2;
  }
  int v35 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)1>::getDquadModeData(2, v14, v31, v251);
  v248[3] = 2;
  v251[1] = 0;
  int v257 = v35;
  int v258 = v232;
  uint64_t v254 = 0x500000001;
  uint64_t v246 = 0;
  uint64_t v247 = 0;
  uint64_t v244 = 0;
  uint64_t v245 = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(&v252, &DquadModeData, &v246, &v244);
  int v36 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v252
        + 1);
  unsigned int v37 = DquadModeData;
  int v38 = &kDQuadParamTable[160 * v252 + 10 * DquadModeData];
  int v40 = v38[4];
  int v39 = v38[5];
  unsigned int v41 = v40 + v36;
  unsigned int v42 = v39 + v36;
  int v43 = v244 - v246;
  if ((int)v244 - (int)v246 >= 0)
  {
    if (!v43) {
      goto LABEL_50;
    }
    v42 += v43;
    goto LABEL_47;
  }
  if (kDQuadParamTable[160 * v252 + 7 + 10 * DquadModeData] < (int)v246 - (int)v244)
  {
    --v42;
    if (!kDQuadParamTable[160 * v252 + 8 + 10 * DquadModeData])
    {
      int v43 = -1;
LABEL_47:
      v41 += v43;
    }
  }
LABEL_50:
  if (v41 >= 0xA) {
    unsigned int v41 = 10;
  }
  LODWORD(v242) = v41;
  if (v39) {
    unsigned int v44 = 10;
  }
  else {
    unsigned int v44 = 0;
  }
  if (v44 < v42) {
    unsigned int v42 = v44;
  }
  LODWORD(v240) = v42;
  int v45 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v253
        + 1);
  int v46 = v256;
  unsigned int v47 = &kDQuadParamTable[160 * v253 + 10 * v256];
  int v49 = v47[4];
  int v48 = v47[5];
  unsigned int v50 = v49 + v45;
  unsigned int v51 = v48 + v45;
  int v52 = HIDWORD(v244) - HIDWORD(v246);
  if (HIDWORD(v244) - HIDWORD(v246) >= 0)
  {
    if (!v52) {
      goto LABEL_63;
    }
    v51 += v52;
    goto LABEL_60;
  }
  if (kDQuadParamTable[160 * v253 + 7 + 10 * v256] < HIDWORD(v246) - HIDWORD(v244))
  {
    --v51;
    if (!kDQuadParamTable[160 * v253 + 8 + 10 * v256])
    {
      int v52 = -1;
LABEL_60:
      v50 += v52;
    }
  }
LABEL_63:
  if (v50 >= 0xA) {
    unsigned int v50 = 10;
  }
  HIDWORD(v242) = v50;
  if (v48) {
    unsigned int v53 = 10;
  }
  else {
    unsigned int v53 = 0;
  }
  if (v53 < v51) {
    unsigned int v51 = v53;
  }
  HIDWORD(v240) = v51;
  int v54 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v254
        + 1);
  int v55 = v257;
  BOOL v56 = &kDQuadParamTable[160 * v254 + 10 * v257];
  int v57 = v56[5];
  unsigned int v58 = v56[4] + v54;
  unsigned int v59 = v57 + v54;
  int v60 = v245 - v247;
  if ((int)v245 - (int)v247 >= 0)
  {
    if (!v60) {
      goto LABEL_76;
    }
    v59 += v60;
    goto LABEL_73;
  }
  if (kDQuadParamTable[160 * v254 + 7 + 10 * v257] < (int)v247 - (int)v245)
  {
    --v59;
    if (!kDQuadParamTable[160 * v254 + 8 + 10 * v257])
    {
      int v60 = -1;
LABEL_73:
      v58 += v60;
    }
  }
LABEL_76:
  if (v58 >= 0xA) {
    unsigned int v58 = 10;
  }
  LODWORD(v243) = v58;
  if (v57) {
    unsigned int v61 = 10;
  }
  else {
    unsigned int v61 = 0;
  }
  if (v61 < v59) {
    unsigned int v59 = v61;
  }
  LODWORD(v241) = v59;
  int v62 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * HIDWORD(v254)
        + 1);
  int v63 = &kDQuadParamTable[160 * HIDWORD(v254) + 10 * v258];
  int v64 = v63[5];
  unsigned int v65 = v63[4] + v62;
  unsigned int v66 = v64 + v62;
  int v67 = HIDWORD(v245) - HIDWORD(v247);
  if (HIDWORD(v245) - HIDWORD(v247) >= 0)
  {
    if (HIDWORD(v245) == HIDWORD(v247)) {
      goto LABEL_89;
    }
    v66 += v67;
    int v68 = HIDWORD(v245) - HIDWORD(v247);
    goto LABEL_86;
  }
  if (kDQuadParamTable[160 * HIDWORD(v254) + 7 + 10 * v258] < HIDWORD(v247) - HIDWORD(v245))
  {
    --v66;
    if (!kDQuadParamTable[160 * HIDWORD(v254) + 8 + 10 * v258])
    {
      int v68 = -1;
LABEL_86:
      v65 += v68;
    }
  }
LABEL_89:
  int v69 = v233 + v25;
  if (v65 >= 2) {
    unsigned int v65 = 2;
  }
  HIDWORD(v243) = v65;
  unsigned int v70 = 2 * (v64 != 0);
  if (v70 < v66) {
    unsigned int v66 = v70;
  }
  HIDWORD(v241) = v66;
  if (v258 == 1 && v67 <= 1)
  {
    fprintf((FILE *)*MEMORY[0x263EF8348], "lossy decompress dquad warning: invalid 2-bit region (mode[3]=%d end_level[3]=%d start_level[3]=%d\n", 1, HIDWORD(v245), HIDWORD(v247));
    unsigned int v66 = 0;
    unsigned int v59 = 0;
    unsigned int v51 = 0;
    unsigned int v42 = 0;
    unsigned int v65 = 0;
    unsigned int v58 = 0;
    unsigned int v50 = 0;
    unsigned int v41 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
  }
  int v71 = v69 + v30;
  int v238 = 0;
  uint64_t v237 = 0;
  if (!v37)
  {
    LODWORD(v237) = v249;
    uint64_t v75 = v231;
    if (v46) {
      goto LABEL_110;
    }
LABEL_105:
    HIDWORD(v237) = v250;
    if (v55) {
      goto LABEL_117;
    }
    goto LABEL_106;
  }
  int v72 = 0;
  if (v41 && (unint64_t v73 = v41, v10 - v6 + (v13 << 6) + (unint64_t)v41 <= 0xE0))
  {
    int v72 = 0;
    uint64_t v74 = 0;
    uint64_t v75 = v231;
    do
    {
      unint64_t v76 = 64 - v10;
      if (64 - v10 >= v73) {
        unint64_t v76 = v73;
      }
      v72 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v76)) << v74;
      v74 += v76;
      v13 += (v76 + v10) >> 6;
      uint64_t v10 = (v76 + v10) & 0x3F;
      v73 -= v76;
    }
    while (v73);
  }
  else
  {
    uint64_t v75 = v231;
  }
  LODWORD(v237) = v72 << (10 - v41);
  v71 += v41;
  if (!v46) {
    goto LABEL_105;
  }
LABEL_110:
  int v78 = 0;
  if (v50)
  {
    unint64_t v79 = v50;
    if (v10 - v6 + (v13 << 6) + (unint64_t)v50 <= 0xE0)
    {
      int v78 = 0;
      uint64_t v80 = 0;
      do
      {
        unint64_t v81 = 64 - v10;
        if (64 - v10 >= v79) {
          unint64_t v81 = v79;
        }
        v78 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v81)) << v80;
        v80 += v81;
        v13 += (v81 + v10) >> 6;
        uint64_t v10 = (v81 + v10) & 0x3F;
        v79 -= v81;
      }
      while (v79);
    }
  }
  HIDWORD(v237) = v78 << (10 - v50);
  v71 += v50;
  if (v55)
  {
LABEL_117:
    int v82 = 0;
    if (v58)
    {
      unint64_t v83 = v58;
      if (v10 - v6 + (v13 << 6) + (unint64_t)v58 <= 0xE0)
      {
        int v82 = 0;
        uint64_t v84 = 0;
        do
        {
          unint64_t v85 = 64 - v10;
          if (64 - v10 >= v83) {
            unint64_t v85 = v83;
          }
          v82 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v85)) << v84;
          v84 += v85;
          v13 += (v85 + v10) >> 6;
          uint64_t v10 = (v85 + v10) & 0x3F;
          v83 -= v85;
        }
        while (v83);
      }
    }
    int v238 = v82 << (10 - v58);
    v71 += v58;
    int v77 = 0;
    if (!v65) {
      goto LABEL_129;
    }
    goto LABEL_124;
  }
LABEL_106:
  int v238 = v251[0];
  int v77 = 0;
  if (v65)
  {
LABEL_124:
    unint64_t v86 = v65;
    if (v10 - v6 + (v13 << 6) + (unint64_t)v65 <= 0xE0)
    {
      int v77 = 0;
      uint64_t v87 = 0;
      do
      {
        unint64_t v88 = 64 - v10;
        if (64 - v10 >= v86) {
          unint64_t v88 = v86;
        }
        v77 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v88)) << v87;
        v87 += v88;
        v13 += (v88 + v10) >> 6;
        uint64_t v10 = (v88 + v10) & 0x3F;
        v86 -= v88;
      }
      while (v86);
    }
  }
LABEL_129:
  int v239 = v77 << (2 - v65);
  unsigned int v89 = v65 + v71;
  uint64_t v235 = 0;
  uint64_t v236 = 0;
  if (v42)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xE0)
    {
      int v90 = 0;
      uint64_t v91 = 0;
      unint64_t v92 = 3;
      do
      {
        unint64_t v93 = 64 - v10;
        if (64 - v10 >= v92) {
          unint64_t v93 = v92;
        }
        v90 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v93)) << v91;
        v91 += v93;
        v13 += (v93 + v10) >> 6;
        uint64_t v10 = (v93 + v10) & 0x3F;
        v92 -= v93;
      }
      while (v92);
    }
    else
    {
      int v90 = 0;
    }
    LODWORD(v235) = v90;
    v89 += 3;
  }
  if (v51)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xE0)
    {
      int v94 = 0;
      uint64_t v95 = 0;
      unint64_t v96 = 3;
      do
      {
        unint64_t v97 = 64 - v10;
        if (64 - v10 >= v96) {
          unint64_t v97 = v96;
        }
        v94 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v97)) << v95;
        v95 += v97;
        v13 += (v97 + v10) >> 6;
        uint64_t v10 = (v97 + v10) & 0x3F;
        v96 -= v97;
      }
      while (v96);
    }
    else
    {
      int v94 = 0;
    }
    HIDWORD(v235) = v94;
    v89 += 3;
  }
  if (v59)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xE0)
    {
      int v98 = 0;
      uint64_t v99 = 0;
      unint64_t v100 = 3;
      do
      {
        unint64_t v101 = 64 - v10;
        if (64 - v10 >= v100) {
          unint64_t v101 = v100;
        }
        v98 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v101)) << v99;
        v99 += v101;
        v13 += (v101 + v10) >> 6;
        uint64_t v10 = (v101 + v10) & 0x3F;
        v100 -= v101;
      }
      while (v100);
    }
    else
    {
      int v98 = 0;
    }
    LODWORD(v236) = v98;
    v89 += 3;
  }
  if (v66)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xE0)
    {
      int v102 = 0;
      uint64_t v103 = 0;
      unint64_t v104 = 3;
      do
      {
        unint64_t v105 = 64 - v10;
        if (64 - v10 >= v104) {
          unint64_t v105 = v104;
        }
        v102 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v105)) << v103;
        v103 += v105;
        v13 += (v105 + v10) >> 6;
        uint64_t v10 = (v105 + v10) & 0x3F;
        v104 -= v105;
      }
      while (v104);
    }
    else
    {
      int v102 = 0;
    }
    HIDWORD(v236) = v102;
    v89 += 3;
  }
  uint64_t v106 = 0;
  unsigned int v107 = 224 - v89;
  unsigned int v108 = (224 - v89) / 7;
  unsigned int v109 = a3 & 0xFFFFFFFD;
  unint64_t v110 = (v10 | (v13 << 6)) + v107 % 7;
  memset(v234, 0, sizeof(v234));
  do
  {
    unint64_t v113 = v110 >> 6;
    unint64_t v114 = v110 & 0x3F;
    if (v42)
    {
      if (v114 - v6 + (v110 & 0xFFFFFFFFFFFFFFC0) + v42 <= 0xE0)
      {
        int v115 = 0;
        uint64_t v116 = 0;
        unint64_t v117 = v42;
        do
        {
          unint64_t v118 = 64 - v114;
          if (64 - v114 >= v117) {
            unint64_t v118 = v117;
          }
          v115 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v118)) << v116;
          v116 += v118;
          unint64_t v119 = v118 + v114;
          v113 += v119 >> 6;
          unint64_t v114 = v119 & 0x3F;
          v117 -= v118;
        }
        while (v117);
      }
      else
      {
        int v115 = 0;
      }
      *((_DWORD *)v234 + v106) = v115;
    }
    if (!v51)
    {
      unsigned int v112 = v42;
      if (!v59) {
        goto LABEL_190;
      }
LABEL_183:
      if (v114 - v6 + (v113 << 6) + v59 <= 0xE0)
      {
        int v125 = 0;
        uint64_t v126 = 0;
        unint64_t v127 = v59;
        do
        {
          unint64_t v128 = 64 - v114;
          if (64 - v114 >= v127) {
            unint64_t v128 = v127;
          }
          v125 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v128)) << v126;
          v126 += v128;
          unint64_t v129 = v128 + v114;
          v113 += v129 >> 6;
          unint64_t v114 = v129 & 0x3F;
          v127 -= v128;
        }
        while (v127);
      }
      else
      {
        int v125 = 0;
      }
      *((_DWORD *)&v234[3] + v106 + 2) = v125;
      v112 += v59;
      goto LABEL_190;
    }
    if (v114 - v6 + (v113 << 6) + v51 <= 0xE0)
    {
      int v120 = 0;
      uint64_t v121 = 0;
      unint64_t v122 = v51;
      do
      {
        unint64_t v123 = 64 - v114;
        if (64 - v114 >= v122) {
          unint64_t v123 = v122;
        }
        v120 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v123)) << v121;
        v121 += v123;
        unint64_t v124 = v123 + v114;
        v113 += v124 >> 6;
        unint64_t v114 = v124 & 0x3F;
        v122 -= v123;
      }
      while (v122);
    }
    else
    {
      int v120 = 0;
    }
    *((_DWORD *)&v234[1] + v106 + 3) = v120;
    unsigned int v112 = v51 + v42;
    if (v59) {
      goto LABEL_183;
    }
LABEL_190:
    if (v66)
    {
      if (v114 - v6 + (v113 << 6) + v66 > 0xE0)
      {
        int v111 = 0;
      }
      else
      {
        int v111 = 0;
        uint64_t v130 = 0;
        unint64_t v131 = v66;
        do
        {
          unint64_t v132 = 64 - v114;
          if (64 - v114 >= v131) {
            unint64_t v132 = v131;
          }
          v111 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v132)) << v130;
          v130 += v132;
          unint64_t v133 = v132 + v114;
          v113 += v133 >> 6;
          unint64_t v114 = v133 & 0x3F;
          v131 -= v132;
        }
        while (v131);
      }
      *((_DWORD *)&v234[5] + v106 + 1) = v111;
      v112 += v66;
    }
    unint64_t v110 = (v114 | (v113 << 6)) + v108 - v112;
    ++v106;
  }
  while (v106 != 7);
  unint64_t v134 = 0;
  uint64_t v135 = 0;
  uint64_t v136 = v75 + 112;
  do
  {
    unint64_t v141 = *(void *)&kDQuadParamTable[160 * *(unsigned int *)((char *)&v252 + v134)
                                      + 2
                                      + 10 * *(unsigned int *)((char *)&DquadModeData + v134)];
    int v142 = *(_DWORD *)((char *)&v240 + v134);
    if (v141 >> v142 <= 1) {
      unint64_t v143 = 1;
    }
    else {
      unint64_t v143 = v141 >> v142;
    }
    int v144 = v248[v134 / 4];
    unint64_t result = v143 >> 1;
    unint64_t v145 = (unint64_t)(1 << (v144 - *(_DWORD *)((char *)&v242 + v134))) >> 1;
    if (v143 >> 1 < v145) {
      unint64_t v145 = v143 >> 1;
    }
    unint64_t v146 = (1 << (v144 - 1));
    unint64_t v147 = *(unsigned int *)((char *)&v237 + v134);
    unint64_t v148 = v146 - v147;
    unint64_t v149 = 1 << v144;
    int v150 = (1 << v144) - 1;
    if (v147) {
      unint64_t v151 = v145;
    }
    else {
      unint64_t v151 = 0;
    }
    BOOL v152 = v147 == v146;
    BOOL v153 = v144 == 16;
    if (v144 == 16) {
      unint64_t v154 = 31744;
    }
    else {
      unint64_t v154 = 2139095040;
    }
    if (v144 == 16) {
      unint64_t v155 = 64512;
    }
    else {
      unint64_t v155 = 4286578688;
    }
    unint64_t v156 = 2143289344;
    if (v153) {
      unint64_t v156 = 32256;
    }
    unint64_t v157 = 4290772992;
    if (v153) {
      unint64_t v157 = 65024;
    }
    unint64_t v158 = (v155 - 1);
    if (v142)
    {
      unint64_t v159 = v141 + v147;
      uint64_t v160 = ~(-1 << v142);
      int v161 = *(_DWORD *)((char *)&v235 + v134);
      unint64_t v162 = v148 / v143;
      if (!v161)
      {
        uint64_t v170 = 0;
        unint64_t v165 = v151;
        BOOL v164 = v147 == v146;
        goto LABEL_261;
      }
      uint64_t v163 = *(unsigned int *)((char *)v234 + v135);
      BOOL v164 = v162 == v163;
      if (v147 | v163)
      {
        if (v159 >= v149 && v163 == v160)
        {
          uint64_t v170 = 1;
          unint64_t v165 = v149 - 1;
          goto LABEL_261;
        }
        unint64_t v165 = result + v143 * v163;
      }
      else
      {
        unint64_t v165 = 0;
      }
      uint64_t v170 = 1;
LABEL_261:
      unint64_t v171 = v165 + v147;
      unint64_t v172 = v171;
      if (a3 == 4)
      {
        BOOL v173 = v171 < v154 || v171 >= v156;
        unint64_t v172 = (v154 - 1);
        if (v173)
        {
          BOOL v174 = v171 < v156 || v171 >= v146;
          unint64_t v172 = v146;
          if (v174)
          {
            if (v171 < v157 && v171 >= v155) {
              unint64_t v172 = (v155 - 1);
            }
            else {
              unint64_t v172 = v171;
            }
          }
        }
      }
      if (v172 >= v149) {
        int v176 = v150;
      }
      else {
        int v176 = v172;
      }
      if (v164) {
        int v177 = 0;
      }
      else {
        int v177 = v176 ^ v146;
      }
      if (v109 != 1) {
        int v177 = v176;
      }
      *(_DWORD *)(v136 + v134 - 112) = v177;
      if (v161 == 1)
      {
        unint64_t v178 = v151;
        BOOL v179 = v147 == v146;
      }
      else
      {
        uint64_t v180 = *(unsigned int *)(((unint64_t)v234 | (4 * v170)) + v135);
        BOOL v179 = v162 == v180;
        if (v147 | v180)
        {
          if (v159 < v149 || (unint64_t v178 = v149 - 1, v180 != v160)) {
            unint64_t v178 = result + v143 * v180;
          }
        }
        else
        {
          unint64_t v178 = 0;
        }
        ++v170;
      }
      unint64_t v181 = v178 + v147;
      unint64_t v182 = v181;
      if (a3 == 4)
      {
        BOOL v183 = v181 < v154 || v181 >= v156;
        unint64_t v182 = (v154 - 1);
        if (v183)
        {
          if (v181 < v156 || (unint64_t v182 = v146, v181 >= v146))
          {
            if (v181 < v157 && v181 >= v155) {
              unint64_t v182 = (v155 - 1);
            }
            else {
              unint64_t v182 = v181;
            }
          }
        }
      }
      if (v182 >= v149) {
        int v185 = v150;
      }
      else {
        int v185 = v182;
      }
      if (v179) {
        int v186 = 0;
      }
      else {
        int v186 = v185 ^ v146;
      }
      if (v109 != 1) {
        int v186 = v185;
      }
      *(_DWORD *)(v136 + v134 - 96) = v186;
      if (v161 == 2)
      {
        unint64_t v187 = v151;
        BOOL v188 = v147 == v146;
      }
      else
      {
        uint64_t v189 = *(unsigned int *)(((unint64_t)v234 | (4 * v170)) + v135);
        BOOL v188 = v162 == v189;
        if (v147 | v189)
        {
          if (v159 < v149 || (unint64_t v187 = v149 - 1, v189 != v160)) {
            unint64_t v187 = result + v143 * v189;
          }
        }
        else
        {
          unint64_t v187 = 0;
        }
        ++v170;
      }
      unint64_t v190 = v187 + v147;
      unint64_t v191 = v190;
      if (a3 == 4)
      {
        if (v190 < v154 || (unint64_t v191 = (v154 - 1), v190 >= v156))
        {
          if (v190 < v156 || (unint64_t v191 = v146, v190 >= v146))
          {
            if (v190 < v157 && v190 >= v155) {
              unint64_t v191 = (v155 - 1);
            }
            else {
              unint64_t v191 = v190;
            }
          }
        }
      }
      if (v191 >= v149) {
        int v193 = v150;
      }
      else {
        int v193 = v191;
      }
      if (v188) {
        int v194 = 0;
      }
      else {
        int v194 = v193 ^ v146;
      }
      if (v109 != 1) {
        int v194 = v193;
      }
      *(_DWORD *)(v136 + v134 - 80) = v194;
      if (v161 == 3)
      {
        unint64_t v195 = v151;
        BOOL v196 = v147 == v146;
      }
      else
      {
        uint64_t v197 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v196 = v162 == v197;
        if (v147 | v197)
        {
          if (v159 < v149 || (unint64_t v195 = v149 - 1, v197 != v160)) {
            unint64_t v195 = result + v143 * v197;
          }
        }
        else
        {
          unint64_t v195 = 0;
        }
        ++v170;
      }
      unint64_t v198 = v195 + v147;
      unint64_t v199 = v198;
      if (a3 == 4)
      {
        if (v198 < v154 || (unint64_t v199 = (v154 - 1), v198 >= v156))
        {
          if (v198 < v156 || (unint64_t v199 = v146, v198 >= v146))
          {
            if (v198 < v157 && v198 >= v155) {
              unint64_t v199 = (v155 - 1);
            }
            else {
              unint64_t v199 = v198;
            }
          }
        }
      }
      if (v199 >= v149) {
        int v201 = v150;
      }
      else {
        int v201 = v199;
      }
      if (v196) {
        int v202 = 0;
      }
      else {
        int v202 = v201 ^ v146;
      }
      if (v109 != 1) {
        int v202 = v201;
      }
      *(_DWORD *)(v136 + v134 - 64) = v202;
      if (v161 == 4)
      {
        unint64_t v203 = v151;
        BOOL v204 = v147 == v146;
      }
      else
      {
        uint64_t v205 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v204 = v162 == v205;
        if (v147 | v205)
        {
          if (v159 < v149 || (unint64_t v203 = v149 - 1, v205 != v160)) {
            unint64_t v203 = result + v143 * v205;
          }
        }
        else
        {
          unint64_t v203 = 0;
        }
        ++v170;
      }
      unint64_t v206 = v203 + v147;
      unint64_t v207 = v206;
      if (a3 == 4)
      {
        if (v206 < v154 || (unint64_t v207 = (v154 - 1), v206 >= v156))
        {
          if (v206 < v156 || (unint64_t v207 = v146, v206 >= v146))
          {
            if (v206 < v157 && v206 >= v155) {
              unint64_t v207 = (v155 - 1);
            }
            else {
              unint64_t v207 = v206;
            }
          }
        }
      }
      if (v207 >= v149) {
        int v209 = v150;
      }
      else {
        int v209 = v207;
      }
      if (v204) {
        int v210 = 0;
      }
      else {
        int v210 = v209 ^ v146;
      }
      if (v109 != 1) {
        int v210 = v209;
      }
      *(_DWORD *)(v136 + v134 - 48) = v210;
      if (v161 == 5)
      {
        unint64_t v211 = v151;
        BOOL v212 = v147 == v146;
      }
      else
      {
        uint64_t v213 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v212 = v162 == v213;
        if (v147 | v213)
        {
          if (v159 < v149 || (unint64_t v211 = v149 - 1, v213 != v160)) {
            unint64_t v211 = result + v143 * v213;
          }
        }
        else
        {
          unint64_t v211 = 0;
        }
        ++v170;
      }
      unint64_t v214 = v211 + v147;
      unint64_t v215 = v214;
      if (a3 == 4)
      {
        if (v214 < v154 || (unint64_t v215 = (v154 - 1), v214 >= v156))
        {
          if (v214 < v156 || (unint64_t v215 = v146, v214 >= v146))
          {
            if (v214 < v157 && v214 >= v155) {
              unint64_t v215 = (v155 - 1);
            }
            else {
              unint64_t v215 = v214;
            }
          }
        }
      }
      if (v215 >= v149) {
        int v217 = v150;
      }
      else {
        int v217 = v215;
      }
      if (v212) {
        int v218 = 0;
      }
      else {
        int v218 = v217 ^ v146;
      }
      if (v109 != 1) {
        int v218 = v217;
      }
      *(_DWORD *)(v136 + v134 - 32) = v218;
      if (v161 == 6)
      {
        unint64_t v219 = v151;
        BOOL v220 = v147 == v146;
      }
      else
      {
        uint64_t v221 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v220 = v162 == v221;
        if (v147 | v221)
        {
          if (v159 < v149 || (unint64_t v219 = v149 - 1, v221 != v160)) {
            unint64_t v219 = result + v143 * v221;
          }
        }
        else
        {
          unint64_t v219 = 0;
        }
        ++v170;
      }
      unint64_t v222 = v219 + v147;
      unint64_t v223 = v222;
      if (a3 == 4)
      {
        if (v222 < v154 || (unint64_t v223 = (v154 - 1), v222 >= v156))
        {
          if (v222 < v156 || (unint64_t v223 = v146, v222 >= v146))
          {
            if (v222 < v157 && v222 >= v155) {
              unint64_t v223 = (v155 - 1);
            }
            else {
              unint64_t v223 = v222;
            }
          }
        }
      }
      if (v223 >= v149) {
        int v225 = v150;
      }
      else {
        int v225 = v223;
      }
      if (v220) {
        int v226 = 0;
      }
      else {
        int v226 = v225 ^ v146;
      }
      if (v109 != 1) {
        int v226 = v225;
      }
      *(_DWORD *)(v136 + v134 - 16) = v226;
      if (v161 != 7)
      {
        uint64_t v227 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v152 = v162 == v227;
        if (v147 | v227)
        {
          if (v159 >= v149 && v227 == v160) {
            unint64_t v151 = v149 - 1;
          }
          else {
            unint64_t v151 = result + v143 * v227;
          }
        }
        else
        {
          unint64_t v151 = 0;
        }
      }
      unint64_t v228 = v151 + v147;
      unint64_t result = v151 + v147;
      if (a3 == 4)
      {
        if (v228 < v154 || (unint64_t result = (v154 - 1), v228 >= v156))
        {
          if (v228 < v156 || (unint64_t result = v146, v228 >= v146))
          {
            if (v228 < v157 && v228 >= v155) {
              unint64_t result = (v155 - 1);
            }
            else {
              unint64_t result = v151 + v147;
            }
          }
        }
      }
      if (result >= v149) {
        LODWORD(v139) = v150;
      }
      else {
        LODWORD(v139) = result;
      }
      int v140 = v139 ^ v146;
      if (v152) {
        int v140 = 0;
      }
      if (v109 == 1) {
        LODWORD(v139) = v140;
      }
      goto LABEL_211;
    }
    BOOL v167 = v156 <= v147 && v147 < v146;
    BOOL v169 = v147 >= v155 && v157 > v147;
    if (a3 == 4)
    {
      if (v147 < v154 || v156 <= v147)
      {
        if (v167)
        {
          if (v149 <= v146) {
            LODWORD(v139) = v150;
          }
          else {
            LODWORD(v139) = v146;
          }
        }
        else
        {
          if (v169) {
            unint64_t v139 = v158;
          }
          else {
            unint64_t v139 = *(unsigned int *)((char *)&v237 + v134);
          }
          if (v139 >= v149) {
            LODWORD(v139) = v150;
          }
        }
      }
      else if (v149 <= (v154 - 1))
      {
        LODWORD(v139) = v150;
      }
      else
      {
        LODWORD(v139) = v154 - 1;
      }
    }
    else if (v149 <= v147)
    {
      LODWORD(v139) = v150;
    }
    else
    {
      LODWORD(v139) = *(_DWORD *)((char *)&v237 + v134);
    }
    int v229 = v139 ^ v146;
    if (v143 > v148) {
      int v229 = 0;
    }
    if (v109 == 1) {
      LODWORD(v139) = v229;
    }
    uint64_t v230 = v136 + v134;
    *(_DWORD *)(v230 - 112) = v139;
    *(_DWORD *)(v230 - 96) = v139;
    *(_DWORD *)(v230 - 80) = v139;
    *(_DWORD *)(v230 - 64) = v139;
    *(_DWORD *)(v230 - 48) = v139;
    *(_DWORD *)(v230 - 32) = v139;
    *(_DWORD *)(v230 - 16) = v139;
LABEL_211:
    *(_DWORD *)(v136 + v134) = v139;
    v135 += 28;
    v134 += 4;
  }
  while (v135 != 112);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(float32x4_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  v468[0] = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v11 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    uint64_t v12 = (_OWORD *)((char *)a1->f32 + a2);
    *uint64_t v12 = 0u;
    v12[1] = 0u;
    uint64_t v13 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
LABEL_254:
    *char v14 = v11;
    v14[1] = v11;
    return result;
  }
  char v7 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v432, a5);
    }
    int16x8_t v440 = v432;
    int16x8_t v441 = v434;
    int8x16_t v444 = v433;
    int8x16_t v445 = v435;
    int16x8_t v448 = v436;
    int16x8_t v449 = v438;
    uint64_t v19 = a3 + 28;
    int16x8_t v452 = v437;
    int8x16_t v453 = (int8x16_t)v439;
    if ((v7 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v19, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v19, (uint64_t)&v432, a5);
    }
    int16x8_t v442 = v432;
    int16x8_t v443 = v434;
    int8x16_t v446 = v433;
    int8x16_t v447 = v435;
    int16x8_t v450 = v436;
    int16x8_t v451 = v438;
    uint64_t v20 = a3 + 56;
    int8x16_t v454 = (int8x16_t)v437;
    int8x16_t v455 = (int8x16_t)v439;
    if ((v7 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v432, a5);
    }
    int16x8_t v456 = v432;
    int8x16_t v457 = (int8x16_t)v434;
    int16x8_t v460 = (int16x8_t)v433;
    int16x8_t v461 = (int16x8_t)v435;
    int16x8_t v463 = v436;
    int8x16_t v464 = (int8x16_t)v438;
    uint64_t v21 = a3 + 84;
    *(int16x8_t *)int8x16_t v467 = v437;
    *(int16x8_t *)&v467[2] = v439;
    if ((v7 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v432, a5);
    }
    int16x8_t v458 = v432;
    int16x8_t v459 = v434;
    v462[0] = v433;
    v462[1] = v435;
    int16x8_t v465 = v436;
    int16x8_t v466 = v438;
    uint64_t v22 = (unsigned __int32 *)&a1[1];
    unint64_t v23 = -64;
    *(int16x8_t *)&v467[4] = v437;
    *(int16x8_t *)&v467[6] = v439;
    do
    {
      unsigned int v24 = v448.i32[v23 / 4] & 0x3FF | ((v448.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v448.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v448.i32[v23 / 4 + 3] << 30);
      *(v22 - 4) = v444.i32[v23 / 4] & 0x3FF | ((v444.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v444.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v444.i32[v23 / 4 + 3] << 30);
      *(v22 - 3) = v24;
      unsigned __int32 v25 = v456.i32[v23 / 4] & 0x3FF | ((v456.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v456.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v456.i32[v23 / 4 + 3] << 30);
      *(v22 - 2) = v452.i32[v23 / 4] & 0x3FF | ((v452.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v452.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v452.i32[v23 / 4 + 3] << 30);
      *(v22 - 1) = v25;
      unsigned int v26 = v463.i32[v23 / 4] & 0x3FF | ((v463.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v463.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v463.i32[v23 / 4 + 3] << 30);
      *uint64_t v22 = v460.i32[v23 / 4] & 0x3FF | ((v460.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v460.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v460.i32[v23 / 4 + 3] << 30);
      v22[1] = v26;
      unsigned int v27 = v467[v23 / 8 + 8] & 0x3FF | ((HIDWORD(v467[v23 / 8 + 8]) & 0x3FF) << 10) & 0xC00FFFFF | ((v468[v23 / 8] & 0x3FF) << 20) | (HIDWORD(v468[v23 / 8]) << 30);
      v22[2] = v467[v23 / 8] & 0x3FF | ((HIDWORD(v467[v23 / 8]) & 0x3FF) << 10) & 0xC00FFFFF | ((v467[v23 / 8 + 1] & 0x3FF) << 20) | (HIDWORD(v467[v23 / 8 + 1]) << 30);
      v22[3] = v27;
      uint64_t v22 = (unsigned __int32 *)((char *)v22 + a2);
      v23 += 16;
    }
    while (v23);
    return 112;
  }
  if (a4 == 127)
  {
    int64x2_t v28 = *(int64x2_t *)a3;
    int64x2_t v29 = *(int64x2_t *)(a3 + 16);
    int64x2_t v30 = *(int64x2_t *)(a3 + 32);
    int64x2_t v31 = *(int64x2_t *)(a3 + 48);
    int64x2_t v32 = *(int64x2_t *)(a3 + 64);
    int64x2_t v33 = *(int64x2_t *)(a3 + 80);
    int64x2_t v34 = *(int64x2_t *)(a3 + 96);
    int64x2_t v35 = *(int64x2_t *)(a3 + 112);
    int v36 = (int64x2_t *)((char *)a1 + a2);
    *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v29);
    a1[1] = (float32x4_t)vzip1q_s64(v32, v33);
    unsigned int v37 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int v36 = vzip2q_s64(v28, v29);
    v36[1] = vzip2q_s64(v32, v33);
    *unsigned int v37 = vzip1q_s64(v30, v31);
    v37[1] = vzip1q_s64(v34, v35);
    int v38 = (int64x2_t *)((char *)v37 + a2);
    *int v38 = vzip2q_s64(v30, v31);
    v38[1] = vzip2q_s64(v34, v35);
    return 128;
  }
  if (a4 == 3)
  {
    float32x4_t v15 = vld1q_dup_f32((const float *)a3);
    *a1 = v15;
    a1[1] = v15;
    unint64_t v16 = (float32x4_t *)((char *)a1 + a2);
    *unint64_t v16 = v15;
    v16[1] = v15;
    unint64_t v17 = (float32x4_t *)((char *)a1 + 2 * a2);
    *unint64_t v17 = v15;
    v17[1] = v15;
    unint64_t v18 = (float32x4_t *)((char *)a1 + 2 * a2 + a2);
    *unint64_t v18 = v15;
    v18[1] = v15;
    return 4;
  }
  v433.i8[8] = 0;
  v432.i64[0] = 8 * (a3 & 7);
  v432.i64[1] = a3 & 0xFFFFFFFFFFFFFFF8;
  v433.i64[0] = v432.i64[0] | 0x380;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)13,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v457, (uint64_t)v462, (uint64_t)&v456, (unint64_t *)&v432, a4);
  int8x16_t v40 = v457;
  v41.i64[0] = 0x3000300030003;
  v41.i64[1] = 0x3000300030003;
  int16x8_t v42 = (int16x8_t)vandq_s8(v457, v41);
  int8x16_t v43 = vbicq_s8(v462[0], (int8x16_t)vceqq_s16(v42, (int16x8_t)v41));
  v462[0] = v43;
  int16x8_t v458 = (int16x8_t)v43;
  int16x8_t v459 = (int16x8_t)v43;
  int16x8_t v460 = (int16x8_t)v43;
  int16x8_t v461 = (int16x8_t)v43;
  v44.i64[0] = 0x202020202020202;
  v44.i64[1] = 0x202020202020202;
  int8x16_t v45 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v457.i8, (int16x4_t)0x4000400040004)), v44);
  unint64_t v46 = v432.i64[0];
  if (vmaxvq_s8(v45) < 1)
  {
    v59.i64[0] = -1;
    v59.i64[1] = -1;
    v60.i64[0] = -1;
    v60.i64[1] = -1;
    v61.i64[0] = -1;
    v61.i64[1] = -1;
    v62.i64[0] = -1;
    v62.i64[1] = -1;
  }
  else
  {
    int8x16_t v47 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v45, v45));
    int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v47, (int16x8_t)v47));
    unint64_t v49 = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
    v50.i64[0] = v49;
    v50.i64[1] = HIDWORD(v49);
    int64x2_t v51 = v50;
    unint64_t v52 = vaddvq_s64(v50);
    unint64_t v53 = v52;
    unint64_t v54 = v432.i64[0] + v52;
    if (v433.i64[0]) {
      _CF = v433.i64[0] >= v54;
    }
    else {
      _CF = 1;
    }
    int v56 = !_CF;
    if (v52 <= 0x80 && v56 == 0)
    {
      v39.i64[0] = 63;
      int v63 = (int64x2_t *)(v432.i64[1] + 8 * ((unint64_t)v432.i64[0] >> 6));
      int64x2_t v64 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v432.u64[0], v39).i64[0], 0), vzip1q_s64((int64x2_t)0, v51));
      int8x16_t v58 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v63, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v64)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63->i64[0], 0), (uint64x2_t)vnegq_s64(v64)));
      if ((v432.i8[0] & 0x3F) + v53 >= 0x81) {
        int8x16_t v58 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v64)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v63[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v64))), v58);
      }
      v432.i64[0] = v54;
      unint64_t v46 = v54;
    }
    else
    {
      v433.i8[8] = 1;
      int8x16_t v58 = 0uLL;
    }
    int32x2_t v65 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
    v66.i64[0] = v65.u32[0];
    v66.i64[1] = v65.u32[1];
    int64x2_t v67 = (int64x2_t)vshlq_u64((uint64x2_t)v58, (uint64x2_t)vnegq_s64(v66));
    *(int32x2_t *)v58.i8 = vmovn_s64((int64x2_t)v58);
    *(int32x2_t *)v67.i8 = vmovn_s64(v67);
    int16x8_t v68 = (int16x8_t)vzip1q_s32((int32x4_t)v58, (int32x4_t)v67);
    int16x8_t v69 = (int16x8_t)vshlq_u32((uint32x4_t)v68, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v47.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    *(int16x4_t *)v68.i8 = vmovn_s32((int32x4_t)v68);
    *(int16x4_t *)v69.i8 = vmovn_s32((int32x4_t)v69);
    int8x16_t v70 = (int8x16_t)vzip1q_s16(v68, v69);
    int8x16_t v71 = (int8x16_t)vshlq_u16((uint16x8_t)v70, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v45.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL)))));
    *(int8x8_t *)v70.i8 = vmovn_s16((int16x8_t)v70);
    *(int8x8_t *)v71.i8 = vmovn_s16((int16x8_t)v71);
    int8x16_t v72 = vzip1q_s8(v70, v71);
    v71.i64[0] = 0x101010101010101;
    v71.i64[1] = 0x101010101010101;
    int8x16_t v73 = vshlq_s8(v71, v45);
    v71.i64[0] = -1;
    v71.i64[1] = -1;
    int32x4_t v74 = (int32x4_t)vqtbl1q_s8(vandq_s8(v72, vaddq_s8(v73, v71)), (int8x16_t)xmmword_242EA7560);
    *(int32x2_t *)v72.i8 = vdup_lane_s32(*(int32x2_t *)v74.i8, 0);
    *(int32x2_t *)v71.i8 = vdup_lane_s32(*(int32x2_t *)v74.i8, 1);
    int8x8_t v75 = (int8x8_t)vdupq_laneq_s32(v74, 2).u64[0];
    v74.i64[0] = vdupq_laneq_s32(v74, 3).u64[0];
    int16x8_t v458 = vsubw_s8(v458, *(int8x8_t *)v72.i8);
    int16x8_t v459 = vsubw_s8(v459, *(int8x8_t *)v71.i8);
    int16x8_t v460 = vsubw_s8(v460, v75);
    int16x8_t v461 = vsubw_s8(v461, *(int8x8_t *)v74.i8);
    int8x16_t v62 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v72.i8));
    int8x16_t v61 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v71.i8));
    int8x16_t v60 = (int8x16_t)vmovl_s8(vceqz_s8(v75));
    int8x16_t v59 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v74.i8));
  }
  v76.i64[0] = 0x8000800080008;
  v76.i64[1] = 0x8000800080008;
  int8x16_t v77 = 0uLL;
  int8x16_t v78 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v457, v76), (int8x16_t)0, 8uLL), v43);
  int8x16_t v79 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v78, (int16x8_t)v78));
  unint64_t v80 = vpaddq_s32((int32x4_t)v79, (int32x4_t)v79).u64[0];
  v81.i64[0] = v80;
  v81.i64[1] = HIDWORD(v80);
  int64x2_t v82 = v81;
  unint64_t v83 = vaddvq_s64(v81);
  if (v433.i64[0]) {
    BOOL v84 = v433.i64[0] >= v46 + v83;
  }
  else {
    BOOL v84 = 1;
  }
  int v85 = !v84;
  if (v83 <= 0x80 && v85 == 0)
  {
    int64x2_t v87 = vaddq_s64(vdupq_n_s64(v46 & 0x3F), vzip1q_s64((int64x2_t)0, v82));
    unint64_t v88 = (int64x2_t *)(v432.i64[1] + 8 * (v46 >> 6));
    int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v88, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v87)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v88->i64[0], 0), (uint64x2_t)vnegq_s64(v87)));
    if ((v46 & 0x3F) + v83 >= 0x81) {
      int8x16_t v77 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v88[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v87)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v88[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v87))), v77);
    }
    v46 += v83;
  }
  else
  {
    v433.i8[8] = 1;
  }
  int32x2_t v89 = vzip1_s32(*(int32x2_t *)v79.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL));
  v90.i64[0] = v89.u32[0];
  v90.i64[1] = v89.u32[1];
  int64x2_t v91 = (int64x2_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v90));
  *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
  *(int32x2_t *)v91.i8 = vmovn_s64(v91);
  int16x8_t v92 = (int16x8_t)vzip1q_s32((int32x4_t)v77, (int32x4_t)v91);
  int16x8_t v93 = (int16x8_t)vshlq_u32((uint32x4_t)v92, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v78.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int16x4_t *)v92.i8 = vmovn_s32((int32x4_t)v92);
  *(int16x4_t *)v93.i8 = vmovn_s32((int32x4_t)v93);
  int16x8_t v94 = vzip1q_s16(v92, v93);
  v93.i64[0] = 0xF000F000F000FLL;
  v93.i64[1] = 0xF000F000F000FLL;
  v95.i64[0] = 0x10001000100010;
  v95.i64[1] = 0x10001000100010;
  int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_s16(v94, vsubq_s16(v95, (int16x8_t)v78)), vaddq_s16((int16x8_t)v78, v93));
  int8x16_t v464 = v96;
  int v97 = v457.i8[0] & 3;
  if (v97 == 2)
  {
    unint64_t v98 = v46 + 8;
    if (v433.i64[0])
    {
      if (v433.i64[0] >= v98)
      {
        unint64_t v99 = v46 + 16;
        v46 += 8;
      }
      else
      {
        v433.i8[8] = 1;
        unint64_t v99 = v46 + 8;
      }
      if (v433.i64[0] < v99)
      {
        v433.i8[8] = 1;
        goto LABEL_63;
      }
      unint64_t v98 = v46;
    }
    unint64_t v46 = v98 + 8;
  }
LABEL_63:
  int8x16_t v100 = 0uLL;
  int8x16_t v101 = vextq_s8((int8x16_t)0, (int8x16_t)v458, 8uLL);
  int8x16_t v102 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v101, (int16x8_t)v101));
  unint64_t v103 = vpaddq_s32((int32x4_t)v102, (int32x4_t)v102).u64[0];
  v104.i64[0] = v103;
  v104.i64[1] = HIDWORD(v103);
  int64x2_t v105 = v104;
  unint64_t v106 = vaddvq_s64(v104);
  unint64_t v107 = v46 + v106;
  if (v433.i64[0]) {
    BOOL v108 = v433.i64[0] >= v107;
  }
  else {
    BOOL v108 = 1;
  }
  int v109 = !v108;
  if (v106 > 0x80 || v109)
  {
    int v114 = 1;
    uint64_t v112 = v432.i64[1];
  }
  else
  {
    unint64_t v110 = v46 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v105));
    uint64_t v112 = v432.i64[1];
    unint64_t v113 = (int64x2_t *)(v432.i64[1] + 8 * (v46 >> 6));
    int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v113, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v113->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v106 >= 0x81) {
      int8x16_t v100 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v113[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v113[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v100);
    }
    int v114 = v433.u8[8];
    unint64_t v46 = v107;
  }
  int32x2_t v115 = vzip1_s32(*(int32x2_t *)v102.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL));
  v116.i64[0] = v115.u32[0];
  v116.i64[1] = v115.u32[1];
  int64x2_t v117 = (int64x2_t)vshlq_u64((uint64x2_t)v100, (uint64x2_t)vnegq_s64(v116));
  *(int32x2_t *)v100.i8 = vmovn_s64((int64x2_t)v100);
  *(int32x2_t *)v117.i8 = vmovn_s64(v117);
  int16x8_t v118 = (int16x8_t)vzip1q_s32((int32x4_t)v100, (int32x4_t)v117);
  int16x8_t v119 = (int16x8_t)vshlq_u32((uint32x4_t)v118, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v101.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v101, v101, 8uLL)))));
  *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v118);
  *(int16x4_t *)v119.i8 = vmovn_s32((int32x4_t)v119);
  v120.i64[0] = 0xF000F000F000FLL;
  v120.i64[1] = 0xF000F000F000FLL;
  v121.i64[0] = 0x10001000100010;
  v121.i64[1] = 0x10001000100010;
  int16x8_t v122 = vshlq_s16(vshlq_s16(vzip1q_s16(v118, v119), vsubq_s16(v121, (int16x8_t)v101)), vaddq_s16((int16x8_t)v101, v120));
  int16x8_t v440 = v122;
  int8x16_t v123 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v458, v458));
  v118.i64[0] = vpaddq_s32((int32x4_t)v123, (int32x4_t)v123).u64[0];
  v116.i64[0] = v118.u32[0];
  v116.i64[1] = v118.u32[1];
  int64x2_t v124 = v116;
  unint64_t v125 = vaddvq_s64(v116);
  unint64_t v126 = v46 + v125;
  if (v433.i64[0]) {
    BOOL v127 = v433.i64[0] >= v126;
  }
  else {
    BOOL v127 = 1;
  }
  char v128 = !v127;
  int8x16_t v129 = 0uLL;
  if (v125 > 0x80 || (v128 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v126 = v46;
    int8x16_t v133 = 0uLL;
  }
  else
  {
    unint64_t v130 = v46 & 0x3F;
    int64x2_t v131 = vaddq_s64(vdupq_n_s64(v130), vzip1q_s64((int64x2_t)0, v124));
    unint64_t v132 = (int64x2_t *)(v112 + 8 * (v46 >> 6));
    int8x16_t v133 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
    if (v130 + v125 >= 0x81) {
      int8x16_t v133 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), v133);
    }
  }
  int32x2_t v134 = vzip1_s32(*(int32x2_t *)v123.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v123, v123, 8uLL));
  v135.i64[0] = v134.u32[0];
  v135.i64[1] = v134.u32[1];
  uint64x2_t v136 = (uint64x2_t)vnegq_s64(v135);
  int64x2_t v137 = (int64x2_t)vshlq_u64((uint64x2_t)v133, v136);
  *(int32x2_t *)v133.i8 = vmovn_s64((int64x2_t)v133);
  *(int32x2_t *)v137.i8 = vmovn_s64(v137);
  int16x8_t v138 = (int16x8_t)vzip1q_s32((int32x4_t)v133, (int32x4_t)v137);
  uint32x4_t v139 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v458.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v458, (int8x16_t)v458, 8uLL))));
  int16x8_t v140 = (int16x8_t)vshlq_u32((uint32x4_t)v138, v139);
  *(int16x4_t *)v138.i8 = vmovn_s32((int32x4_t)v138);
  *(int16x4_t *)v140.i8 = vmovn_s32((int32x4_t)v140);
  int16x8_t v141 = vaddq_s16(v458, v120);
  int16x8_t v142 = vsubq_s16(v121, v458);
  int16x8_t v143 = vshlq_s16(vshlq_s16(vzip1q_s16(v138, v140), v142), v141);
  int16x8_t v441 = v143;
  unint64_t v144 = v126 + v125;
  if (v433.i64[0]) {
    BOOL v145 = v433.i64[0] >= v144;
  }
  else {
    BOOL v145 = 1;
  }
  char v146 = !v145;
  if (v125 > 0x80 || (v146 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v144 = v126;
  }
  else
  {
    unint64_t v147 = v126 & 0x3F;
    int64x2_t v148 = vaddq_s64(vdupq_n_s64(v147), vzip1q_s64((int64x2_t)0, v124));
    unint64_t v149 = (int64x2_t *)(v112 + 8 * (v126 >> 6));
    int8x16_t v129 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
    if (v147 + v125 >= 0x81) {
      int8x16_t v129 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v129);
    }
  }
  int64x2_t v150 = (int64x2_t)vshlq_u64((uint64x2_t)v129, v136);
  *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
  *(int32x2_t *)v150.i8 = vmovn_s64(v150);
  int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v129, (int32x4_t)v150);
  int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v151, v139);
  *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v151);
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  int16x8_t v153 = vshlq_s16(vshlq_s16(vzip1q_s16(v151, v152), v142), v141);
  int16x8_t v442 = v153;
  unint64_t v154 = v144 + v125;
  if (v433.i64[0]) {
    BOOL v155 = v433.i64[0] >= v154;
  }
  else {
    BOOL v155 = 1;
  }
  char v156 = !v155;
  int8x16_t v157 = 0uLL;
  if (v125 > 0x80 || (v156 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v154 = v144;
    int8x16_t v161 = 0uLL;
  }
  else
  {
    unint64_t v158 = v144 & 0x3F;
    int64x2_t v159 = vaddq_s64(vdupq_n_s64(v158), vzip1q_s64((int64x2_t)0, v124));
    uint64_t v160 = (int64x2_t *)(v112 + 8 * (v144 >> 6));
    int8x16_t v161 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v160, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v159)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v160->i64[0], 0), (uint64x2_t)vnegq_s64(v159)));
    if (v158 + v125 >= 0x81) {
      int8x16_t v161 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v160[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v159)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v160[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v159))), v161);
    }
  }
  int64x2_t v162 = (int64x2_t)vshlq_u64((uint64x2_t)v161, v136);
  *(int32x2_t *)v161.i8 = vmovn_s64((int64x2_t)v161);
  *(int32x2_t *)v162.i8 = vmovn_s64(v162);
  int16x8_t v163 = (int16x8_t)vzip1q_s32((int32x4_t)v161, (int32x4_t)v162);
  int16x8_t v164 = (int16x8_t)vshlq_u32((uint32x4_t)v163, v139);
  *(int16x4_t *)v163.i8 = vmovn_s32((int32x4_t)v163);
  *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
  int16x8_t v165 = vshlq_s16(vshlq_s16(vzip1q_s16(v163, v164), v142), v141);
  int16x8_t v443 = v165;
  int8x16_t v166 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v459, v459));
  unint64_t v167 = vpaddq_s32((int32x4_t)v166, (int32x4_t)v166).u64[0];
  v168.i64[0] = v167;
  v168.i64[1] = HIDWORD(v167);
  int64x2_t v169 = v168;
  unint64_t v170 = vaddvq_s64(v168);
  unint64_t v171 = v170;
  unint64_t v172 = v154 + v170;
  if (v433.i64[0]) {
    BOOL v173 = v433.i64[0] >= v172;
  }
  else {
    BOOL v173 = 1;
  }
  char v174 = !v173;
  if (v170 > 0x80 || (v174 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v172 = v154;
  }
  else
  {
    unint64_t v175 = v154 & 0x3F;
    int64x2_t v176 = vaddq_s64(vdupq_n_s64(v175), vzip1q_s64((int64x2_t)0, v169));
    int v177 = (int64x2_t *)(v112 + 8 * (v154 >> 6));
    int8x16_t v157 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v177, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v176)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v177->i64[0], 0), (uint64x2_t)vnegq_s64(v176)));
    if (v175 + v171 >= 0x81) {
      int8x16_t v157 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v177[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v176)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v177[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v176))), v157);
    }
  }
  int32x4_t v178 = (int32x4_t)vextq_s8(v166, v166, 8uLL);
  int32x2_t v179 = vzip1_s32(*(int32x2_t *)v166.i8, *(int32x2_t *)v178.i8);
  v180.i64[0] = v179.u32[0];
  v180.i64[1] = v179.u32[1];
  uint64x2_t v181 = (uint64x2_t)vnegq_s64(v180);
  int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v157, v181);
  *(int32x2_t *)v178.i8 = vmovn_s64((int64x2_t)v157);
  *(int32x2_t *)v182.i8 = vmovn_s64(v182);
  int16x8_t v183 = (int16x8_t)vzip1q_s32(v178, (int32x4_t)v182);
  uint32x4_t v184 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v459.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v459, (int8x16_t)v459, 8uLL))));
  int16x8_t v185 = (int16x8_t)vshlq_u32((uint32x4_t)v183, v184);
  *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
  *(int16x4_t *)v185.i8 = vmovn_s32((int32x4_t)v185);
  int16x8_t v186 = vzip1q_s16(v183, v185);
  v185.i64[0] = 0xF000F000F000FLL;
  v185.i64[1] = 0xF000F000F000FLL;
  int16x8_t v187 = vaddq_s16(v459, v185);
  v185.i64[0] = 0x10001000100010;
  v185.i64[1] = 0x10001000100010;
  int16x8_t v188 = vsubq_s16(v185, v459);
  int16x8_t v189 = vshlq_s16(vshlq_s16(v186, v188), v187);
  int8x16_t v444 = (int8x16_t)v189;
  unint64_t v190 = v172 + v171;
  if (v433.i64[0]) {
    BOOL v191 = v433.i64[0] >= v190;
  }
  else {
    BOOL v191 = 1;
  }
  char v192 = !v191;
  int8x16_t v193 = 0uLL;
  if (v171 > 0x80 || (v192 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v190 = v172;
    int8x16_t v197 = 0uLL;
  }
  else
  {
    unint64_t v194 = v172 & 0x3F;
    int64x2_t v195 = vaddq_s64(vdupq_n_s64(v194), vzip1q_s64((int64x2_t)0, v169));
    BOOL v196 = (int64x2_t *)(v112 + 8 * (v172 >> 6));
    int8x16_t v197 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v196, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196->i64[0], 0), (uint64x2_t)vnegq_s64(v195)));
    if (v194 + v171 >= 0x81) {
      int8x16_t v197 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v196[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v195))), v197);
    }
  }
  int64x2_t v198 = (int64x2_t)vshlq_u64((uint64x2_t)v197, v181);
  *(int32x2_t *)v197.i8 = vmovn_s64((int64x2_t)v197);
  *(int32x2_t *)v198.i8 = vmovn_s64(v198);
  int16x8_t v199 = (int16x8_t)vzip1q_s32((int32x4_t)v197, (int32x4_t)v198);
  int16x8_t v200 = (int16x8_t)vshlq_u32((uint32x4_t)v199, v184);
  *(int16x4_t *)v199.i8 = vmovn_s32((int32x4_t)v199);
  *(int16x4_t *)v200.i8 = vmovn_s32((int32x4_t)v200);
  int16x8_t v201 = vshlq_s16(vshlq_s16(vzip1q_s16(v199, v200), v188), v187);
  int8x16_t v445 = (int8x16_t)v201;
  unint64_t v202 = v190 + v171;
  if (v433.i64[0]) {
    BOOL v203 = v433.i64[0] >= v202;
  }
  else {
    BOOL v203 = 1;
  }
  char v204 = !v203;
  if (v171 > 0x80 || (v204 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v202 = v190;
  }
  else
  {
    unint64_t v205 = v190 & 0x3F;
    int64x2_t v206 = vaddq_s64(vdupq_n_s64(v205), vzip1q_s64((int64x2_t)0, v169));
    unint64_t v207 = (int64x2_t *)(v112 + 8 * (v190 >> 6));
    int8x16_t v193 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v207, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v206)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v207->i64[0], 0), (uint64x2_t)vnegq_s64(v206)));
    if (v205 + v171 >= 0x81) {
      int8x16_t v193 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v207[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v206)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v207[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v206))), v193);
    }
  }
  int64x2_t v208 = (int64x2_t)vshlq_u64((uint64x2_t)v193, v181);
  *(int32x2_t *)v193.i8 = vmovn_s64((int64x2_t)v193);
  *(int32x2_t *)v208.i8 = vmovn_s64(v208);
  int16x8_t v209 = (int16x8_t)vzip1q_s32((int32x4_t)v193, (int32x4_t)v208);
  int16x8_t v210 = (int16x8_t)vshlq_u32((uint32x4_t)v209, v184);
  *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
  *(int16x4_t *)v210.i8 = vmovn_s32((int32x4_t)v210);
  int16x8_t v211 = vshlq_s16(vshlq_s16(vzip1q_s16(v209, v210), v188), v187);
  int8x16_t v446 = (int8x16_t)v211;
  unint64_t v212 = v202 + v171;
  if (v433.i64[0]) {
    BOOL v213 = v433.i64[0] >= v212;
  }
  else {
    BOOL v213 = 1;
  }
  char v214 = !v213;
  int8x16_t v215 = 0uLL;
  if (v171 > 0x80 || (v214 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v212 = v202;
    int8x16_t v219 = 0uLL;
  }
  else
  {
    unint64_t v216 = v202 & 0x3F;
    int64x2_t v217 = vaddq_s64(vdupq_n_s64(v216), vzip1q_s64((int64x2_t)0, v169));
    int v218 = (int64x2_t *)(v112 + 8 * (v202 >> 6));
    int8x16_t v219 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v218, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218->i64[0], 0), (uint64x2_t)vnegq_s64(v217)));
    if (v216 + v171 >= 0x81) {
      int8x16_t v219 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v218[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v217))), v219);
    }
  }
  int64x2_t v220 = (int64x2_t)vshlq_u64((uint64x2_t)v219, v181);
  *(int32x2_t *)v219.i8 = vmovn_s64((int64x2_t)v219);
  *(int32x2_t *)v220.i8 = vmovn_s64(v220);
  int16x8_t v221 = (int16x8_t)vzip1q_s32((int32x4_t)v219, (int32x4_t)v220);
  int16x8_t v222 = (int16x8_t)vshlq_u32((uint32x4_t)v221, v184);
  *(int16x4_t *)v221.i8 = vmovn_s32((int32x4_t)v221);
  *(int16x4_t *)v222.i8 = vmovn_s32((int32x4_t)v222);
  int16x8_t v223 = vshlq_s16(vshlq_s16(vzip1q_s16(v221, v222), v188), v187);
  int8x16_t v447 = (int8x16_t)v223;
  int8x16_t v224 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v460, v460));
  unint64_t v225 = vpaddq_s32((int32x4_t)v224, (int32x4_t)v224).u64[0];
  v226.i64[0] = v225;
  v226.i64[1] = HIDWORD(v225);
  int64x2_t v227 = v226;
  unint64_t v228 = vaddvq_s64(v226);
  unint64_t v229 = v228;
  unint64_t v230 = v212 + v228;
  if (v433.i64[0]) {
    BOOL v231 = v433.i64[0] >= v230;
  }
  else {
    BOOL v231 = 1;
  }
  char v232 = !v231;
  if (v228 > 0x80 || (v232 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v230 = v212;
  }
  else
  {
    unint64_t v233 = v212 & 0x3F;
    int64x2_t v234 = vaddq_s64(vdupq_n_s64(v233), vzip1q_s64((int64x2_t)0, v227));
    uint64_t v235 = (int64x2_t *)(v112 + 8 * (v212 >> 6));
    int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v235, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235->i64[0], 0), (uint64x2_t)vnegq_s64(v234)));
    if (v233 + v229 >= 0x81) {
      int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v235[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v234))), v215);
    }
  }
  int32x4_t v236 = (int32x4_t)vextq_s8(v224, v224, 8uLL);
  int32x2_t v237 = vzip1_s32(*(int32x2_t *)v224.i8, *(int32x2_t *)v236.i8);
  v238.i64[0] = v237.u32[0];
  v238.i64[1] = v237.u32[1];
  uint64x2_t v239 = (uint64x2_t)vnegq_s64(v238);
  int64x2_t v240 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v239);
  *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v215);
  *(int32x2_t *)v240.i8 = vmovn_s64(v240);
  int16x8_t v241 = (int16x8_t)vzip1q_s32(v236, (int32x4_t)v240);
  uint32x4_t v242 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v460.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v460, (int8x16_t)v460, 8uLL))));
  int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v241, v242);
  *(int16x4_t *)v241.i8 = vmovn_s32((int32x4_t)v241);
  *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
  int16x8_t v244 = vzip1q_s16(v241, v243);
  v243.i64[0] = 0xF000F000F000FLL;
  v243.i64[1] = 0xF000F000F000FLL;
  int16x8_t v245 = vaddq_s16(v460, v243);
  v243.i64[0] = 0x10001000100010;
  v243.i64[1] = 0x10001000100010;
  int16x8_t v246 = vsubq_s16(v243, v460);
  int16x8_t v247 = vshlq_s16(vshlq_s16(v244, v246), v245);
  int16x8_t v448 = v247;
  unint64_t v248 = v230 + v229;
  if (v433.i64[0]) {
    BOOL v249 = v433.i64[0] >= v248;
  }
  else {
    BOOL v249 = 1;
  }
  char v250 = !v249;
  int8x16_t v251 = 0uLL;
  if (v229 > 0x80 || (v250 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v248 = v230;
    int8x16_t v255 = 0uLL;
  }
  else
  {
    unint64_t v252 = v230 & 0x3F;
    int64x2_t v253 = vaddq_s64(vdupq_n_s64(v252), vzip1q_s64((int64x2_t)0, v227));
    uint64_t v254 = (int64x2_t *)(v112 + 8 * (v230 >> 6));
    int8x16_t v255 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v254, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v253)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v254->i64[0], 0), (uint64x2_t)vnegq_s64(v253)));
    if (v252 + v229 >= 0x81) {
      int8x16_t v255 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v254[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v253)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v254[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v253))), v255);
    }
  }
  int64x2_t v256 = (int64x2_t)vshlq_u64((uint64x2_t)v255, v239);
  *(int32x2_t *)v255.i8 = vmovn_s64((int64x2_t)v255);
  *(int32x2_t *)v256.i8 = vmovn_s64(v256);
  int16x8_t v257 = (int16x8_t)vzip1q_s32((int32x4_t)v255, (int32x4_t)v256);
  int16x8_t v258 = (int16x8_t)vshlq_u32((uint32x4_t)v257, v242);
  *(int16x4_t *)v257.i8 = vmovn_s32((int32x4_t)v257);
  *(int16x4_t *)v258.i8 = vmovn_s32((int32x4_t)v258);
  int16x8_t v259 = vshlq_s16(vshlq_s16(vzip1q_s16(v257, v258), v246), v245);
  int16x8_t v449 = v259;
  unint64_t v260 = v248 + v229;
  if (v433.i64[0]) {
    BOOL v261 = v433.i64[0] >= v260;
  }
  else {
    BOOL v261 = 1;
  }
  char v262 = !v261;
  if (v229 > 0x80 || (v262 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v260 = v248;
  }
  else
  {
    unint64_t v263 = v248 & 0x3F;
    int64x2_t v264 = vaddq_s64(vdupq_n_s64(v263), vzip1q_s64((int64x2_t)0, v227));
    unint64_t v265 = (int64x2_t *)(v112 + 8 * (v248 >> 6));
    int8x16_t v251 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v265, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v264)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v265->i64[0], 0), (uint64x2_t)vnegq_s64(v264)));
    if (v263 + v229 >= 0x81) {
      int8x16_t v251 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v265[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v264)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v265[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v264))), v251);
    }
  }
  int64x2_t v266 = (int64x2_t)vshlq_u64((uint64x2_t)v251, v239);
  *(int32x2_t *)v251.i8 = vmovn_s64((int64x2_t)v251);
  *(int32x2_t *)v266.i8 = vmovn_s64(v266);
  int16x8_t v267 = (int16x8_t)vzip1q_s32((int32x4_t)v251, (int32x4_t)v266);
  int16x8_t v268 = (int16x8_t)vshlq_u32((uint32x4_t)v267, v242);
  *(int16x4_t *)v267.i8 = vmovn_s32((int32x4_t)v267);
  *(int16x4_t *)v268.i8 = vmovn_s32((int32x4_t)v268);
  int16x8_t v269 = vshlq_s16(vshlq_s16(vzip1q_s16(v267, v268), v246), v245);
  int16x8_t v450 = v269;
  unint64_t v270 = v260 + v229;
  if (v433.i64[0]) {
    BOOL v271 = v433.i64[0] >= v270;
  }
  else {
    BOOL v271 = 1;
  }
  char v272 = !v271;
  int8x16_t v273 = 0uLL;
  if (v229 > 0x80 || (v272 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v270 = v260;
    int8x16_t v277 = 0uLL;
  }
  else
  {
    unint64_t v274 = v260 & 0x3F;
    int64x2_t v275 = vaddq_s64(vdupq_n_s64(v274), vzip1q_s64((int64x2_t)0, v227));
    unint64_t v276 = (int64x2_t *)(v112 + 8 * (v260 >> 6));
    int8x16_t v277 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v276, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v275)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v276->i64[0], 0), (uint64x2_t)vnegq_s64(v275)));
    if (v274 + v229 >= 0x81) {
      int8x16_t v277 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v276[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v275)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v276[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v275))), v277);
    }
  }
  int64x2_t v278 = (int64x2_t)vshlq_u64((uint64x2_t)v277, v239);
  *(int32x2_t *)v277.i8 = vmovn_s64((int64x2_t)v277);
  *(int32x2_t *)v278.i8 = vmovn_s64(v278);
  int16x8_t v279 = (int16x8_t)vzip1q_s32((int32x4_t)v277, (int32x4_t)v278);
  int16x8_t v280 = (int16x8_t)vshlq_u32((uint32x4_t)v279, v242);
  *(int16x4_t *)v279.i8 = vmovn_s32((int32x4_t)v279);
  *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
  int16x8_t v281 = vshlq_s16(vshlq_s16(vzip1q_s16(v279, v280), v246), v245);
  int16x8_t v451 = v281;
  int8x16_t v282 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v461, v461));
  unint64_t v283 = vpaddq_s32((int32x4_t)v282, (int32x4_t)v282).u64[0];
  v284.i64[0] = v283;
  v284.i64[1] = HIDWORD(v283);
  int64x2_t v285 = v284;
  unint64_t v286 = vaddvq_s64(v284);
  unint64_t v287 = v286;
  unint64_t v288 = v270 + v286;
  if (v433.i64[0]) {
    BOOL v289 = v433.i64[0] >= v288;
  }
  else {
    BOOL v289 = 1;
  }
  char v290 = !v289;
  if (v286 > 0x80 || (v290 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v288 = v270;
  }
  else
  {
    unint64_t v291 = v270 & 0x3F;
    int64x2_t v292 = vaddq_s64(vdupq_n_s64(v291), vzip1q_s64((int64x2_t)0, v285));
    BOOL v293 = (int64x2_t *)(v112 + 8 * (v270 >> 6));
    int8x16_t v273 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v293, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v292)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v293->i64[0], 0), (uint64x2_t)vnegq_s64(v292)));
    if (v291 + v287 >= 0x81) {
      int8x16_t v273 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v293[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v292)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v293[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v292))), v273);
    }
  }
  int32x2_t v294 = vzip1_s32(*(int32x2_t *)v282.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v282, v282, 8uLL));
  v295.i64[0] = v294.u32[0];
  v295.i64[1] = v294.u32[1];
  int32x4_t v296 = (int32x4_t)vnegq_s64(v295);
  int64x2_t v297 = (int64x2_t)vshlq_u64((uint64x2_t)v273, (uint64x2_t)v296);
  *(int32x2_t *)v273.i8 = vmovn_s64((int64x2_t)v273);
  *(int32x2_t *)v297.i8 = vmovn_s64(v297);
  int16x8_t v298 = (int16x8_t)vzip1q_s32((int32x4_t)v273, (int32x4_t)v297);
  uint32x4_t v299 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v461.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v461, (int8x16_t)v461, 8uLL))));
  int16x8_t v300 = (int16x8_t)vshlq_u32((uint32x4_t)v298, v299);
  *(int16x4_t *)v298.i8 = vmovn_s32((int32x4_t)v298);
  *(int16x4_t *)v300.i8 = vmovn_s32((int32x4_t)v300);
  int16x8_t v301 = vzip1q_s16(v298, v300);
  v298.i64[0] = 0xF000F000F000FLL;
  v298.i64[1] = 0xF000F000F000FLL;
  int16x8_t v302 = vaddq_s16(v461, v298);
  v300.i64[0] = 0x10001000100010;
  v300.i64[1] = 0x10001000100010;
  int16x8_t v303 = vsubq_s16(v300, v461);
  int16x8_t v304 = vshlq_s16(vshlq_s16(v301, v303), v302);
  int16x8_t v452 = v304;
  unint64_t v305 = v288 + v287;
  if (v433.i64[0]) {
    BOOL v306 = v433.i64[0] >= v305;
  }
  else {
    BOOL v306 = 1;
  }
  char v307 = !v306;
  int8x16_t v308 = 0uLL;
  if (v287 > 0x80 || (v307 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v305 = v288;
    int8x16_t v312 = 0uLL;
  }
  else
  {
    unint64_t v309 = v288 & 0x3F;
    int64x2_t v310 = vaddq_s64(vdupq_n_s64(v309), vzip1q_s64((int64x2_t)0, v285));
    unint64_t v311 = (int64x2_t *)(v112 + 8 * (v288 >> 6));
    int8x16_t v312 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v311, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v310)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v311->i64[0], 0), (uint64x2_t)vnegq_s64(v310)));
    if (v309 + v287 >= 0x81) {
      int8x16_t v312 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v311[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v310)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v311[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v310))), v312);
    }
  }
  int64x2_t v313 = (int64x2_t)vshlq_u64((uint64x2_t)v312, (uint64x2_t)v296);
  *(int32x2_t *)v312.i8 = vmovn_s64((int64x2_t)v312);
  *(int32x2_t *)v313.i8 = vmovn_s64(v313);
  int16x8_t v314 = (int16x8_t)vzip1q_s32((int32x4_t)v312, (int32x4_t)v313);
  int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v314, v299);
  *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
  *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
  int16x8_t v316 = vshlq_s16(vshlq_s16(vzip1q_s16(v314, v315), v303), v302);
  int8x16_t v453 = (int8x16_t)v316;
  unint64_t v317 = v305 + v287;
  if (v433.i64[0]) {
    BOOL v318 = v433.i64[0] >= v317;
  }
  else {
    BOOL v318 = 1;
  }
  char v319 = !v318;
  if (v287 > 0x80 || (v319 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v317 = v305;
  }
  else
  {
    unint64_t v320 = v305 & 0x3F;
    int64x2_t v321 = vaddq_s64(vdupq_n_s64(v320), vzip1q_s64((int64x2_t)0, v285));
    unsigned int v322 = (int64x2_t *)(v112 + 8 * (v305 >> 6));
    int8x16_t v308 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v322, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v321)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v322->i64[0], 0), (uint64x2_t)vnegq_s64(v321)));
    if (v320 + v287 >= 0x81) {
      int8x16_t v308 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v322[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v321)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v322[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v321))), v308);
    }
  }
  int64x2_t v323 = (int64x2_t)vshlq_u64((uint64x2_t)v308, (uint64x2_t)v296);
  *(int32x2_t *)v308.i8 = vmovn_s64((int64x2_t)v308);
  *(int32x2_t *)v323.i8 = vmovn_s64(v323);
  int16x8_t v324 = (int16x8_t)vzip1q_s32((int32x4_t)v308, (int32x4_t)v323);
  int16x8_t v325 = (int16x8_t)vshlq_u32((uint32x4_t)v324, v299);
  *(int16x4_t *)v324.i8 = vmovn_s32((int32x4_t)v324);
  *(int16x4_t *)v325.i8 = vmovn_s32((int32x4_t)v325);
  int16x8_t v326 = vshlq_s16(vshlq_s16(vzip1q_s16(v324, v325), v303), v302);
  int8x16_t v454 = (int8x16_t)v326;
  unint64_t v327 = v317 + v287;
  if (v433.i64[0]) {
    BOOL v328 = v433.i64[0] >= v327;
  }
  else {
    BOOL v328 = 1;
  }
  char v329 = !v328;
  int8x16_t v330 = 0uLL;
  if (v287 > 0x80 || (v329 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v327 = v317;
  }
  else
  {
    int64x2_t v331 = vaddq_s64(vdupq_n_s64(v317 & 0x3F), vzip1q_s64((int64x2_t)0, v285));
    int16x8_t v332 = (int64x2_t *)(v112 + 8 * (v317 >> 6));
    int8x16_t v330 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v332, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v331)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v332->i64[0], 0), (uint64x2_t)vnegq_s64(v331)));
    if ((v317 & 0x3F) + v287 >= 0x81) {
      int8x16_t v330 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v332[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v331)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v332[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v331))), v330);
    }
  }
  int64x2_t v333 = (int64x2_t)vshlq_u64((uint64x2_t)v330, (uint64x2_t)v296);
  *(int32x2_t *)v296.i8 = vmovn_s64((int64x2_t)v330);
  *(int32x2_t *)v333.i8 = vmovn_s64(v333);
  int16x8_t v334 = (int16x8_t)vzip1q_s32(v296, (int32x4_t)v333);
  int16x8_t v335 = (int16x8_t)vshlq_u32((uint32x4_t)v334, v299);
  *(int16x4_t *)v334.i8 = vmovn_s32((int32x4_t)v334);
  *(int16x4_t *)v335.i8 = vmovn_s32((int32x4_t)v335);
  int16x8_t v336 = vshlq_s16(vshlq_s16(vzip1q_s16(v334, v335), v303), v302);
  int8x16_t v455 = (int8x16_t)v336;
  if (v114 || v433.i64[0] + 8 * result - v327 - 896 >= 9 || v97 == 2)
  {
    uint64_t v337 = (8 * (&v431 + 4)) & 0x20;
    uint64_t v338 = v431 | (1023 << v337);
    HIDWORD(v431) = HIDWORD(v338);
    unint64_t v339 = (32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0xA;
    unint64_t v340 = v339 - v337 + 10;
    if (v339 - v337 > 0x16)
    {
      unint64_t v341 = v339 - v337;
    }
    else
    {
      unint64_t v340 = (((32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0x14) - v337) | 0xA;
      unint64_t v341 = ((32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0x14) - v337;
    }
    if (v339 - v337 <= 0x16) {
      unint64_t v342 = (32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0x14;
    }
    else {
      unint64_t v342 = (32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0xA;
    }
    if (v340 <= 0x20)
    {
      v338 |= 1023 << v342;
      HIDWORD(v431) = HIDWORD(v338);
      unint64_t v342 = ((_BYTE)v342 + 10) & 0x3E;
      unint64_t v341 = v342 - v337;
    }
    if (v341 - 31 >= 0xFFFFFFFFFFFFFFDFLL) {
      uint64_t v431 = v338 | (3 << v342);
    }
    uint64_t result = 0;
    int64x2_t v343 = (_OWORD *)((char *)a1->f32 + a2);
    long long v11 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    int64x2_t v344 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *int64x2_t v343 = 0u;
    v343[1] = 0u;
    char v14 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
    *int64x2_t v344 = 0u;
    v344[1] = 0u;
    goto LABEL_254;
  }
  int8x16_t v345 = (int8x16_t)vdupq_lane_s64(v96.i64[0], 0);
  int16x8_t v440 = vaddq_s16((int16x8_t)vandq_s8(v96, v62), v122);
  int16x8_t v346 = (int16x8_t)vandq_s8(v62, v345);
  int8x16_t v347 = (int8x16_t)vsubq_s16(v440, v346);
  int16x8_t v348 = vsubq_s16(v143, v346);
  int16x8_t v349 = vsubq_s16(v153, v346);
  int8x16_t v350 = (int8x16_t)vsubq_s16(v165, v346);
  int16x8_t v351 = (int16x8_t)vandq_s8(v61, v345);
  int16x8_t v352 = vsubq_s16(v189, v351);
  int16x8_t v353 = vsubq_s16(v201, v351);
  int16x8_t v354 = vsubq_s16(v211, v351);
  int16x8_t v355 = vsubq_s16(v223, v351);
  int16x8_t v356 = (int16x8_t)vandq_s8(v60, v345);
  int16x8_t v357 = vsubq_s16(v247, v356);
  int16x8_t v358 = vsubq_s16(v259, v356);
  int16x8_t v359 = vsubq_s16(v269, v356);
  int16x8_t v360 = vsubq_s16(v281, v356);
  int16x8_t v361 = (int16x8_t)vandq_s8(v59, v345);
  int16x8_t v362 = vsubq_s16(v304, v361);
  int16x8_t v363 = vsubq_s16(v316, v361);
  int16x8_t v452 = v362;
  int8x16_t v453 = (int8x16_t)v363;
  int16x8_t v364 = vsubq_s16(v326, v361);
  int16x8_t v365 = vsubq_s16(v336, v361);
  int8x16_t v454 = (int8x16_t)v364;
  int8x16_t v455 = (int8x16_t)v365;
  v366.i64[0] = 0x1000100010001;
  v366.i64[1] = 0x1000100010001;
  if (vaddvq_s16(vceqq_s16(v42, (int16x8_t)v366)))
  {
    int8x16_t v367 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v457, v366));
    v368.i64[1] = v347.i64[1];
    v368.i64[0] = v350.i64[1];
    v369.i64[0] = v350.i64[0];
    v369.i64[1] = v347.i64[0];
    int16x8_t v370 = (int16x8_t)vbslq_s8(v367, v368, v347);
    int16x8_t v371 = (int16x8_t)vbslq_s8(v367, v369, v350);
    v368.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v368.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int16x8_t v372 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v348 - 1), v368), v367);
    v470.val[0] = (int8x16_t)vaddq_s16(v370, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v348 - 1), (int8x16_t)xmmword_242EA7710), v367));
    v470.val[1] = (int8x16_t)vaddq_s16(v348, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v348 - 1), (int8x16_t)xmmword_242EA7720), v367));
    v470.val[2] = (int8x16_t)vaddq_s16(v349, v372);
    v470.val[3] = (int8x16_t)vaddq_s16(v371, v372);
    int16x8_t v373 = (int16x8_t)vandq_s8(vqtbl4q_s8(v470, v368), v367);
    int8x16_t v347 = (int8x16_t)vaddq_s16((int16x8_t)v470.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7730), v367));
    int16x8_t v348 = vaddq_s16((int16x8_t)v470.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7740), v367));
    int16x8_t v440 = (int16x8_t)v347;
    int16x8_t v441 = v348;
    int16x8_t v349 = vaddq_s16((int16x8_t)v470.val[2], v373);
    int8x16_t v350 = (int8x16_t)vaddq_s16((int16x8_t)v470.val[3], v373);
    int16x8_t v442 = v349;
    int16x8_t v443 = (int16x8_t)v350;
    v469.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, (int8x16_t)xmmword_242EA7710), v367), v352);
    v469.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, (int8x16_t)xmmword_242EA7750), v367), v353);
    v469.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, v368), v367), v354);
    v469.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, (int8x16_t)xmmword_242EA7760), v367), v355);
    int16x8_t v374 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA7730), v367);
    int16x8_t v375 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, v368), v367);
    int16x8_t v352 = vaddq_s16(v374, (int16x8_t)v469.val[0]);
    int16x8_t v353 = vaddq_s16((int16x8_t)v469.val[1], v374);
    int16x8_t v354 = vaddq_s16((int16x8_t)v469.val[2], v375);
    int16x8_t v355 = vaddq_s16((int16x8_t)v469.val[3], v375);
    v469.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA74D0), v367), v357);
    v469.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA75A0), v367), v358);
    v469.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA7710), v367), v359);
    v469.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA7720), v367), v360);
    int16x8_t v376 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, v368), v367);
    int16x8_t v357 = vaddq_s16((int16x8_t)v469.val[0], v376);
    int16x8_t v358 = vaddq_s16((int16x8_t)v469.val[1], v376);
    int16x8_t v359 = vaddq_s16((int16x8_t)v469.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA75D0), v367));
    int16x8_t v360 = vaddq_s16((int16x8_t)v469.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA7770), v367));
    int16x8_t v377 = v452;
    v470.val[0] = v453;
    v470.val[1] = v454;
    v470.val[2] = v455;
    v469.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA74D0), v367), v452);
    v469.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7780), v367), (int16x8_t)v453);
    v469.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7710), v367), (int16x8_t)v454);
    v469.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7720), v367), (int16x8_t)v455);
    int16x8_t v378 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, v368), v367);
    int16x8_t v379 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA7790), v367);
    int16x8_t v362 = vaddq_s16((int16x8_t)v469.val[0], v378);
    int16x8_t v363 = vaddq_s16((int16x8_t)v469.val[1], v378);
    int16x8_t v364 = vaddq_s16((int16x8_t)v469.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA75D0), v367));
    int8x16_t v40 = v457;
    int16x8_t v365 = vaddq_s16((int16x8_t)v469.val[3], v379);
  }
  int8x16_t v380 = (int8x16_t)vaddq_s16(v456, (int16x8_t)v347);
  int8x16_t v381 = (int8x16_t)vaddq_s16(v348, v456);
  int8x16_t v382 = (int8x16_t)vaddq_s16(v349, v456);
  int8x16_t v383 = (int8x16_t)vaddq_s16((int16x8_t)v350, v456);
  int8x16_t v384 = (int8x16_t)vaddq_s16(v352, v456);
  int8x16_t v385 = (int8x16_t)vaddq_s16(v353, v456);
  int8x16_t v386 = (int8x16_t)vaddq_s16(v354, v456);
  int8x16_t v387 = (int8x16_t)vaddq_s16(v355, v456);
  int8x16_t v388 = (int8x16_t)vaddq_s16(v357, v456);
  int8x16_t v389 = (int8x16_t)vaddq_s16(v358, v456);
  int8x16_t v390 = (int8x16_t)vaddq_s16(v359, v456);
  int8x16_t v391 = (int8x16_t)vaddq_s16(v360, v456);
  int8x16_t v392 = (int8x16_t)vaddq_s16(v362, v456);
  int8x16_t v393 = (int8x16_t)vaddq_s16(v363, v456);
  int8x16_t v394 = (int8x16_t)vaddq_s16(v364, v456);
  int8x16_t v395 = (int8x16_t)vaddq_s16(v365, v456);
  v396.i64[0] = 0x10001000100010;
  v396.i64[1] = 0x10001000100010;
  int8x16_t v397 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v40, v396));
  int64x2_t v398 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v380, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v380);
  int64x2_t v399 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v381, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v381);
  int64x2_t v400 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v382, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v382);
  int64x2_t v401 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v383, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v383);
  int64x2_t v402 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v384, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v384);
  int64x2_t v403 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v385, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v385);
  int64x2_t v404 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v386, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v386);
  int64x2_t v405 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v387, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v387);
  int64x2_t v406 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v388, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v388);
  int64x2_t v407 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v389, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v389);
  int64x2_t v408 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v390, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v390);
  int64x2_t v409 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v391, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v391);
  int16x8_t v410 = (int16x8_t)vbicq_s8(vqtbl1q_s8(v395, (int8x16_t)xmmword_242EA7910), v397);
  int64x2_t v411 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v392, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v392);
  int64x2_t v412 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v393, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v393);
  int64x2_t v413 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v394, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v394);
  int64x2_t v414 = (int64x2_t)vaddq_s16(v410, (int16x8_t)v395);
  __asm { FMOV            V6.4S, #1.875 }
  v393.i64[0] = 0xC0000000C0000000;
  v393.i64[1] = 0xC0000000C0000000;
  int64x2_t v418 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v398, 0x12uLL), v399, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v398, 0xCuLL), v399, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v398, 6uLL), v399, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v398, (int32x4_t)v399))));
  int64x2_t v419 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v400, 0x12uLL), v401, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v400, 0xCuLL), v401, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v400, 6uLL), v401, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v400, (int32x4_t)v401))));
  int64x2_t v420 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v402, 0x12uLL), v403, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v402, 0xCuLL), v403, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v402, 6uLL), v403, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v402, (int32x4_t)v403))));
  int64x2_t v421 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v404, 0x12uLL), v405, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v404, 0xCuLL), v405, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v404, 6uLL), v405, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v404, (int32x4_t)v405))));
  int64x2_t v422 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v406, 0x12uLL), v407, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v406, 0xCuLL), v407, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v406, 6uLL), v407, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v406, (int32x4_t)v407))));
  int64x2_t v423 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v408, 0x12uLL), v409, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v408, 0xCuLL), v409, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v408, 6uLL), v409, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v408, (int32x4_t)v409))));
  int64x2_t v424 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v411, 0x12uLL), v412, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v411, 0xCuLL), v412, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v411, 6uLL), v412, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v411, (int32x4_t)v412))));
  int32x4_t v425 = (int64x2_t *)((char *)a1 + a2);
  *(int64x2_t *)a1 = vzip1q_s64(v418, v419);
  a1[1] = (float32x4_t)vzip1q_s64(v422, v423);
  int64x2_t v426 = (int64x2_t *)((char *)a1 + 2 * a2);
  *int32x4_t v425 = vzip2q_s64(v418, v419);
  v425[1] = vzip2q_s64(v422, v423);
  int64x2_t v427 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v413, 0x12uLL), v414, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v413, 0xCuLL), v414, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v413, 6uLL), v414, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v413, (int32x4_t)v414))));
  *int64x2_t v426 = vzip1q_s64(v420, v421);
  v426[1] = vzip1q_s64(v424, v427);
  uint64x2_t v428 = (int64x2_t *)((char *)v426 + a2);
  *uint64x2_t v428 = vzip2q_s64(v420, v421);
  v428[1] = vzip2q_s64(v424, v427);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  unint64_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *unint64_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    unsigned __int32 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    unsigned __int32 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned __int32 v25 = 0;
LABEL_35:
  unsigned int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    int64x2_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *unsigned int v26 = 0;
    int64x2_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int64x2_t v30 = 0;
LABEL_49:
  int64x2_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    int64x2_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *int64x2_t v31 = 0;
    int64x2_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      *int64x2_t v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressMacroblock(float32x4_t *a1, uint64_t a2, unsigned __int8 *a3, int a4)
{
  uint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1, 64, a2, *a3, a4);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 2, 64, v7, a3[1], a4);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 16, 64, v8, a3[2], a4);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 18, 64, v9, a3[3], a4);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 32, 64, v10, a3[4], a4);
  uint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 34, 64, v11, a3[5], a4);
  uint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 48, 64, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 50, 64, v13, v14, a4);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)2>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(uint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  uint64_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  uint32x4_t v11 = (uint32x4_t)vzip1q_s64(*a3, v9);
  uint32x4_t v12 = (uint32x4_t)vzip2q_s64(*a3, v9);
  uint32x4_t v13 = (uint32x4_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  unsigned int v14 = (int64x2_t *)((char *)v7 + a4);
  uint32x4_t v17 = (uint32x4_t)vzip2q_s64(v8, v10);
  int64x2_t v18 = v14[1];
  uint32x4_t v19 = (uint32x4_t)vzip1q_s64(v15, *v14);
  uint32x4_t v20 = (uint32x4_t)vzip2q_s64(v15, *v14);
  uint32x4_t v21 = (uint32x4_t)vzip1q_s64(v16, v18);
  uint32x4_t v22 = (uint32x4_t)vzip2q_s64(v16, v18);
  v23.i64[0] = v11.u32[0];
  v23.i64[1] = v11.u32[1];
  int8x16_t v24 = v23;
  v23.i64[0] = v11.u32[2];
  v23.i64[1] = v11.u32[3];
  int8x16_t v25 = vbslq_s8((int8x16_t)xmmword_242EA7930, v24, (int8x16_t)0);
  int8x16_t v26 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v12.u32[0];
  v23.i64[1] = v12.u32[1];
  int8x16_t v27 = v23;
  v23.i64[0] = v12.u32[2];
  v23.i64[1] = v12.u32[3];
  int16x8_t v28 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 6uLL), v25)));
  int16x8_t v29 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v11, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v11, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v11, 6uLL), v26)));
  int16x8_t v30 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v27, (int8x16_t)0))));
  int16x8_t v31 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v12, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v12, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v12, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v19.u32[0];
  v23.i64[1] = v19.u32[1];
  int8x16_t v32 = v23;
  v23.i64[0] = v19.u32[2];
  v23.i64[1] = v19.u32[3];
  int8x16_t v33 = vbslq_s8((int8x16_t)xmmword_242EA7930, v32, (int8x16_t)0);
  int8x16_t v34 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v20.u32[0];
  v23.i64[1] = v20.u32[1];
  int8x16_t v35 = v23;
  v23.i64[0] = v20.u32[2];
  v23.i64[1] = v20.u32[3];
  int16x8_t v36 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 6uLL), v33)));
  int16x8_t v37 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v19, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v19, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v19, 6uLL), v34)));
  int16x8_t v38 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v35, (int8x16_t)0))));
  int16x8_t v39 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v20, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v20, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v20, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v13.u32[0];
  v23.i64[1] = v13.u32[1];
  int8x16_t v40 = v23;
  v23.i64[0] = v13.u32[2];
  v23.i64[1] = v13.u32[3];
  int8x16_t v41 = vbslq_s8((int8x16_t)xmmword_242EA7930, v40, (int8x16_t)0);
  int8x16_t v42 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v17.u32[0];
  v23.i64[1] = v17.u32[1];
  int8x16_t v43 = v23;
  v23.i64[0] = v17.u32[2];
  v23.i64[1] = v17.u32[3];
  int16x8_t v44 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 6uLL), v41)));
  int16x8_t v45 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v13, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v13, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v13, 6uLL), v42)));
  int16x8_t v46 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v43, (int8x16_t)0))));
  int16x8_t v47 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v17, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v17, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v17, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v21.u32[0];
  v23.i64[1] = v21.u32[1];
  int8x16_t v48 = v23;
  v23.i64[0] = v21.u32[2];
  v23.i64[1] = v21.u32[3];
  int8x16_t v49 = vbslq_s8((int8x16_t)xmmword_242EA7930, v48, (int8x16_t)0);
  int8x16_t v50 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v22.u32[0];
  v23.i64[1] = v22.u32[1];
  int8x16_t v51 = v23;
  v23.i64[0] = v22.u32[2];
  v23.i64[1] = v22.u32[3];
  int16x8_t v52 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 6uLL), v49)));
  int16x8_t v53 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v21, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v21, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v21, 6uLL), v50)));
  int16x8_t v54 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v51, (int8x16_t)0))));
  int16x8_t v55 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v22, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v22, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v22, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  int16x8_t v56 = (int16x8_t)vdupq_lane_s64(v28.i64[0], 0);
  int16x8_t v484 = v39;
  int16x8_t v57 = vsubq_s16(v39, v56);
  int8x16_t v486 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v28, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v487 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v29, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v488 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v30, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v489 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v31, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v490 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v36, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v491 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v37, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v58 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v486, (int16x8_t)v487), (int16x8_t)v488), (int16x8_t)v489), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v59 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v486, (int16x8_t)v487), (int16x8_t)v488), (int16x8_t)v489), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v60 = vpmaxq_s16(v58, v58);
  int16x8_t v61 = vpminq_s16(v59, v59);
  int16x8_t v62 = vzip1q_s16(v60, v61);
  v63.i64[0] = 0x10001000100010;
  v63.i64[1] = 0x10001000100010;
  int16x8_t v64 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int8x16_t v492 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v38, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v493 = (int8x16_t)vshlq_s16(vshlq_s16(v57, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  v65.i64[0] = 0x8000800080008000;
  v65.i64[1] = 0x8000800080008000;
  v57.i64[0] = 0x8000800080008000;
  v57.i64[1] = 0x8000800080008000;
  int16x8_t v66 = vminq_s16(v61, v57);
  int16x8_t v67 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v490, (int16x8_t)v491), (int16x8_t)v492), (int16x8_t)v493), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v68 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v490, (int16x8_t)v491), (int16x8_t)v492), (int16x8_t)v493), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int16x8_t v71 = vmaxq_s16(vmaxq_s16(v60, v65), v69);
  int16x8_t v72 = vminq_s16(v66, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  int8x16_t v494 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v44, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v495 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v45, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v75 = vshlq_s16(vshlq_s16(vsubq_s16(v46, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v76 = vminq_s16(vminq_s16((int16x8_t)v494, (int16x8_t)v495), v75);
  int8x16_t v496 = (int8x16_t)v75;
  int8x16_t v497 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v47, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v77 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v494, (int16x8_t)v495), v75), (int16x8_t)v497), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v78 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v76, (int16x8_t)v497), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v79 = vpmaxq_s16(v77, v77);
  int16x8_t v80 = vpminq_s16(v78, v78);
  int16x8_t v81 = vmaxq_s16(v71, v79);
  int16x8_t v82 = vminq_s16(v72, v80);
  int16x8_t v83 = vzip1q_s16(v79, v80);
  int16x8_t v84 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v83)), (int8x16_t)vceqzq_s16(v83));
  int8x16_t v498 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v52, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v499 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v53, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v502 = (int8x16_t)v56;
  int8x16_t v500 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v54, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v501 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v55, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v85 = vpmaxq_s16(v64, v64);
  int16x8_t v86 = vpmaxq_s16(v74, v74);
  int8x16_t v87 = (int8x16_t)vpmaxq_s16(v84, v84);
  int16x8_t v88 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v498, (int16x8_t)v499), (int16x8_t)v500), (int16x8_t)v501), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v89 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v498, (int16x8_t)v499), (int16x8_t)v500), (int16x8_t)v501), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v90 = vpmaxq_s16(v88, v88);
  int16x8_t v91 = vpminq_s16(v89, v89);
  int16x8_t v92 = vmaxq_s16(v81, v90);
  int16x8_t v93 = vminq_s16(v82, v91);
  int16x8_t v94 = vzip1q_s16(v90, v91);
  int16x8_t v95 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v94)), (int8x16_t)vceqzq_s16(v94));
  int16x8_t v96 = vpmaxq_s16(v95, v95);
  int8x16_t v97 = (int8x16_t)vmaxq_s16(vmaxq_s16(v85, v86), vmaxq_s16((int16x8_t)v87, v96));
  int16x8_t v98 = vclzq_s16(vsubq_s16(v92, v93));
  v99.i64[0] = 0xF000F000F000FLL;
  v99.i64[1] = 0xF000F000F000FLL;
  v100.i64[0] = -1;
  v100.i64[1] = -1;
  int8x16_t v509 = (int8x16_t)v93;
  int8x16_t v510 = (int8x16_t)v92;
  int8x16_t v101 = (int8x16_t)vsubq_s16(vshlq_s16(v100, vsubq_s16(v99, v98)), v93);
  int8x16_t v102 = (int8x16_t)vsubq_s16(v63, v98);
  int8x16_t v103 = (int8x16_t)vcgtq_s16((int16x8_t)v97, (int16x8_t)v102);
  int16x8_t v104 = (int16x8_t)vbslq_s8(v103, v102, v97);
  int8x16_t v511 = vandq_s8(v101, v103);
  v101.i64[0] = 0x8000800080008;
  v101.i64[1] = 0x8000800080008;
  int8x16_t v105 = vorrq_s8((int8x16_t)0, vandq_s8(v103, v101));
  v97.i64[0] = 0x3000300030003;
  v97.i64[1] = 0x3000300030003;
  int16x8_t v106 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v86), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v107 = vmaxq_s16(vminq_s16(vsubq_s16(v104, (int16x8_t)v87), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v505 = vsubq_s16(v104, v106);
  int16x8_t v506 = vsubq_s16(v104, v107);
  int16x8_t v108 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v96), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v507 = vsubq_s16(v104, v108);
  int8x16_t v508 = (int8x16_t)v104;
  int16x8_t v109 = vaddq_s16(v108, v107);
  int16x8_t v110 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v85), (int16x8_t)v97), (int16x8_t)0);
  v87.i64[0] = 0x4000400040004;
  v87.i64[1] = 0x4000400040004;
  int8x16_t v111 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v104), v97), v105), vbicq_s8(v87, (int8x16_t)vceqq_s16(v109, vnegq_s16(vaddq_s16(v110, v106)))));
  int8x16_t v503 = v111;
  int16x8_t v504 = vsubq_s16(v104, v110);
  if (vmaxvq_s16(v104))
  {
    int16x8_t v450 = v55;
    int16x8_t v451 = v47;
    v472.val[0] = (int8x16_t)v28;
    v472.val[1] = (int8x16_t)v29;
    v472.val[2] = (int8x16_t)v30;
    v472.val[3] = (int8x16_t)v31;
    int8x16_t v479 = v105;
    int8x16_t v481 = v111;
    int16x8_t v112 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v490, (int16x8_t)vqtbl1q_s8(v490, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v113 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v491, (int16x8_t)vqtbl1q_s8(v491, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v114 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v492, (int16x8_t)vqtbl1q_s8(v492, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v115 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v493, (int16x8_t)vqtbl1q_s8(v493, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v457 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v486, (int16x8_t)vqtbl1q_s8(v486, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v458 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v487, (int16x8_t)vqtbl1q_s8(v487, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v459 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v489, (int16x8_t)vqtbl1q_s8(v489, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v460 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v488, (int16x8_t)vqtbl1q_s8(v488, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v116 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v457, (int16x8_t)v458), (int16x8_t)v460), (int16x8_t)v459), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v117 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v457, (int16x8_t)v458), (int16x8_t)v460), (int16x8_t)v459), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v118 = vpmaxq_s16(v116, v116);
    int16x8_t v119 = vpminq_s16(v117, v117);
    v120.i64[0] = 0x8000800080008000;
    v120.i64[1] = 0x8000800080008000;
    int16x8_t v121 = vmaxq_s16(v118, v120);
    v120.i64[0] = 0x8000800080008000;
    v120.i64[1] = 0x8000800080008000;
    int16x8_t v122 = vminq_s16(v119, v120);
    int16x8_t v123 = vzip1q_s16(v118, v119);
    v124.i64[0] = 0x10001000100010;
    v124.i64[1] = 0x10001000100010;
    int16x8_t v125 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v124, vclsq_s16(v123)), (int8x16_t)vceqzq_s16(v123));
    int16x8_t v126 = vpmaxq_s16(v125, v125);
    int8x16_t v127 = (int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v112, v113), v114), v115);
    int8x16_t v465 = (int8x16_t)v114;
    int8x16_t v466 = (int8x16_t)v112;
    int8x16_t v463 = (int8x16_t)v115;
    int8x16_t v464 = (int8x16_t)v113;
    int16x8_t v128 = vminq_s16(v112, v113);
    int8x16_t v129 = v481;
    int16x8_t v130 = (int16x8_t)vqtbl1q_s8(v127, (int8x16_t)xmmword_242EA77B0);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(v128, v114), v115), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v132 = vpmaxq_s16(v130, v130);
    int16x8_t v133 = vpminq_s16(v131, v131);
    int16x8_t v134 = vmaxq_s16(v121, v132);
    int16x8_t v135 = vminq_s16(v122, v133);
    int16x8_t v136 = vzip1q_s16(v132, v133);
    v112.i64[0] = 0x10001000100010;
    v112.i64[1] = 0x10001000100010;
    int16x8_t v137 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v112, vclsq_s16(v136)), (int8x16_t)vceqzq_s16(v136));
    int16x8_t v138 = vpmaxq_s16(v137, v137);
    int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v496, (int16x8_t)vqtbl1q_s8(v496, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v494, (int16x8_t)vqtbl1q_s8(v494, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v497, (int16x8_t)vqtbl1q_s8(v497, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v468 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v495, (int16x8_t)vqtbl1q_s8(v495, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v139 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v470, (int16x8_t)v468), (int16x8_t)v469), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v140 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v470, (int16x8_t)v468), (int16x8_t)v469), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v141 = vpmaxq_s16(v139, v139);
    int16x8_t v142 = vpminq_s16(v140, v140);
    int16x8_t v143 = vmaxq_s16(v134, v141);
    int16x8_t v144 = vminq_s16(v135, v142);
    int16x8_t v145 = vzip1q_s16(v141, v142);
    int16x8_t v146 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v112, vclsq_s16(v145)), (int8x16_t)vceqzq_s16(v145));
    int16x8_t v147 = vpmaxq_s16(v146, v146);
    int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v500, (int16x8_t)vqtbl1q_s8(v500, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v477 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v498, (int16x8_t)vqtbl1q_s8(v498, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v499, (int16x8_t)vqtbl1q_s8(v499, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v501, (int16x8_t)vqtbl1q_s8(v501, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v148 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v477, (int16x8_t)v473), (int16x8_t)v475), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v149 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v477, (int16x8_t)v473), (int16x8_t)v475), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v150 = vpmaxq_s16(v148, v148);
    int8x16_t v151 = (int8x16_t)vpminq_s16(v149, v149);
    int16x8_t v152 = vmaxq_s16(v143, v150);
    int8x16_t v153 = (int8x16_t)vminq_s16(v144, (int16x8_t)v151);
    int16x8_t v154 = vzip1q_s16(v150, (int16x8_t)v151);
    v151.i64[0] = 0x10001000100010;
    v151.i64[1] = 0x10001000100010;
    int16x8_t v155 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v151, vclsq_s16(v154)), (int8x16_t)vceqzq_s16(v154));
    int16x8_t v156 = vpmaxq_s16(v155, v155);
    int8x16_t v157 = (int8x16_t)vmaxq_s16(vmaxq_s16(v126, v138), vmaxq_s16(v147, v156));
    int8x16_t v461 = v153;
    int8x16_t v462 = (int8x16_t)v152;
    int16x8_t v452 = vclzq_s16(vsubq_s16(v152, (int16x8_t)v153));
    int8x16_t v158 = (int8x16_t)vsubq_s16((int16x8_t)v151, v452);
    v153.i64[0] = 0x10001000100010;
    v153.i64[1] = 0x10001000100010;
    int8x16_t v159 = (int8x16_t)vcgtq_s16((int16x8_t)v157, (int16x8_t)v158);
    int8x16_t v160 = vbslq_s8(v159, v158, v157);
    v158.i64[0] = 0x3000300030003;
    v158.i64[1] = 0x3000300030003;
    int16x8_t v161 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v126), (int16x8_t)v158), (int16x8_t)0);
    int16x8_t v162 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v138), (int16x8_t)v158), (int16x8_t)0);
    int16x8_t v163 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v147), (int16x8_t)v158), (int16x8_t)0);
    v164.i64[0] = 0x3000300030003;
    v164.i64[1] = 0x3000300030003;
    int16x8_t v165 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v156), (int16x8_t)v158), (int16x8_t)0);
    v151.i64[0] = 0x4000400040004;
    v151.i64[1] = 0x4000400040004;
    int8x16_t v166 = vbicq_s8(v151, (int8x16_t)vceqq_s16(vaddq_s16(v165, v163), vnegq_s16(vaddq_s16(v161, v162))));
    v151.i64[0] = 0x18001800180018;
    v151.i64[1] = 0x18001800180018;
    int8x16_t v167 = vbslq_s8(v159, v151, v153);
    int8x16_t v454 = (int8x16_t)vsubq_s16((int16x8_t)v160, v162);
    int8x16_t v455 = (int8x16_t)vsubq_s16((int16x8_t)v160, v163);
    int8x16_t v456 = (int8x16_t)vsubq_s16((int16x8_t)v160, v165);
    v163.i64[0] = 0x7000700070007;
    v163.i64[1] = 0x7000700070007;
    int8x16_t v453 = (int8x16_t)vsubq_s16((int16x8_t)v160, v161);
    v151.i64[0] = 0x8000800080008;
    v151.i64[1] = 0x8000800080008;
    int16x8_t v168 = (int16x8_t)vandq_s8(v479, v151);
    int16x8_t v169 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v151);
    v152.i64[0] = 0x2000200020002;
    v152.i64[1] = 0x2000200020002;
    int16x8_t v170 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v481, v164), v152), v153);
    int16x8_t v172 = v507;
    int8x16_t v171 = v508;
    int16x8_t v174 = v504;
    int16x8_t v173 = v505;
    int16x8_t v175 = v506;
    int8x16_t v176 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v508, (int8x16_t)vceqzq_s16(v168)), v169), v170), v504, v163), vshlq_n_s16(vaddq_s16(vaddq_s16(v506, v505), v507), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v160, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v167 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v166, (int16x8_t)v166)), (int16x8_t)v453, v163), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v455, (int16x8_t)v454), (int16x8_t)v456), 3uLL))).i64[0],
                        0);
    int v177 = (unsigned __int16)vaddvq_s16((int16x8_t)v176);
    BOOL v179 = a5 < 4 || a6 < 2;
    if (v177)
    {
      v180.i64[0] = 0x3000300030003;
      v180.i64[1] = 0x3000300030003;
      int8x16_t v181 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v160), v180), v167), v166);
      v182.i64[0] = 0xF000F000F000FLL;
      v182.i64[1] = 0xF000F000F000FLL;
      int8x16_t v486 = vbslq_s8(v176, v457, v486);
      int8x16_t v487 = vbslq_s8(v176, v458, v487);
      v180.i64[0] = -1;
      v180.i64[1] = -1;
      int8x16_t v488 = vbslq_s8(v176, v460, v488);
      int8x16_t v489 = vbslq_s8(v176, v459, v489);
      int8x16_t v490 = vbslq_s8(v176, v466, v490);
      int8x16_t v491 = vbslq_s8(v176, v464, v491);
      int8x16_t v492 = vbslq_s8(v176, v465, v492);
      int8x16_t v493 = vbslq_s8(v176, v463, v493);
      int8x16_t v494 = vbslq_s8(v176, v470, v494);
      int8x16_t v495 = vbslq_s8(v176, v468, v495);
      int8x16_t v496 = vbslq_s8(v176, v469, v496);
      int8x16_t v497 = vbslq_s8(v176, v467, v497);
      int8x16_t v498 = vbslq_s8(v176, v477, v498);
      int8x16_t v499 = vbslq_s8(v176, v473, v499);
      int8x16_t v500 = vbslq_s8(v176, v475, v500);
      int8x16_t v501 = vbslq_s8(v176, v471, v501);
      int16x8_t v174 = (int16x8_t)vbslq_s8(v176, v453, (int8x16_t)v504);
      int16x8_t v173 = (int16x8_t)vbslq_s8(v176, v454, (int8x16_t)v505);
      int16x8_t v504 = v174;
      int16x8_t v505 = v173;
      int16x8_t v175 = (int16x8_t)vbslq_s8(v176, v455, (int8x16_t)v506);
      int16x8_t v172 = (int16x8_t)vbslq_s8(v176, v456, (int8x16_t)v507);
      int16x8_t v506 = v175;
      int16x8_t v507 = v172;
      int8x16_t v510 = vbslq_s8(v176, v462, v510);
      int8x16_t v511 = vbslq_s8(v176, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v180, vsubq_s16(v182, v452)), (int16x8_t)v461), v159), v511);
      int8x16_t v171 = vbslq_s8(v176, v160, v508);
      int8x16_t v508 = v171;
      int8x16_t v509 = vbslq_s8(v176, v461, v509);
      int8x16_t v129 = vbslq_s8(v176, v181, v503);
      int8x16_t v502 = vbslq_s8(v176, (int8x16_t)vsubq_s16((int16x8_t)v502, (int16x8_t)vqtbl1q_s8(v502, (int8x16_t)xmmword_242EA7910)), v502);
      int8x16_t v503 = v129;
    }
    if (!v179)
    {
      int16x8_t v183 = (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v184 = vsubq_s16((int16x8_t)v472.val[0], (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA7710));
      int16x8_t v185 = vsubq_s16((int16x8_t)v472.val[2], v183);
      int16x8_t v186 = vsubq_s16((int16x8_t)v472.val[3], v183);
      uint64_t v187 = v484.i64[0];
      uint64_t v188 = v472.val[3].i64[1];
      int16x8_t v189 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7760);
      int16x8_t v190 = vsubq_s16(v36, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v191 = vsubq_s16(v37, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v192 = vsubq_s16(v38, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA77C0));
      uint64_t v193 = v451.i64[0];
      uint64_t v194 = v472.val[3].i64[1];
      int16x8_t v195 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v196 = vsubq_s16(v44, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v197 = vsubq_s16(v45, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v198 = vsubq_s16(v46, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA7710));
      uint64_t v199 = v450.i64[0];
      uint64_t v200 = v472.val[3].i64[1];
      int16x8_t v201 = vsubq_s16(v52, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v202 = vsubq_s16(v53, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7780));
      int16x8_t v203 = vsubq_s16(v54, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7710));
      v204.i64[1] = v184.i64[1];
      v204.i64[0] = v186.i64[1];
      int16x8_t v205 = vsubq_s16(v450, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7720));
      v186.i64[1] = v184.i64[0];
      int16x8_t v206 = vshlq_s16(v190, (int16x8_t)xmmword_242EA7970);
      int16x8_t v207 = vshlq_s16(v191, (int16x8_t)xmmword_242EA7970);
      int16x8_t v208 = vshlq_s16(v197, (int16x8_t)xmmword_242EA7970);
      int16x8_t v209 = vshlq_s16(vshlq_s16(v204, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v210 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v472.val[1], (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA7720)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int16x8_t v211 = vshlq_s16(vshlq_s16(v185, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v212 = (int8x16_t)vshlq_s16(vshlq_s16(v186, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int16x8_t v213 = vshlq_s16(v206, (int16x8_t)xmmword_242EA7980);
      int8x16_t v214 = (int8x16_t)vshlq_s16(v207, (int16x8_t)xmmword_242EA7980);
      int8x16_t v215 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v484, v189), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v216 = (int8x16_t)vshlq_s16(vshlq_s16(v196, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v217 = (int8x16_t)vshlq_s16(v208, (int16x8_t)xmmword_242EA7980);
      int8x16_t v218 = (int8x16_t)vshlq_s16(vshlq_s16(v198, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v219 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v451, v195), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v220 = (int8x16_t)vshlq_s16(vshlq_s16(v201, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v221 = (int8x16_t)vshlq_s16(vshlq_s16(v202, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v222 = (int8x16_t)vshlq_s16(vshlq_s16(v203, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v223 = (int8x16_t)vshlq_s16(vshlq_s16(v205, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v485 = (int8x16_t)v209;
      int8x16_t v482 = (int8x16_t)v211;
      int16x8_t v224 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v209, (int16x8_t)v210), v211), (int16x8_t)v212), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v225 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v209, (int16x8_t)v210), v211), (int16x8_t)v212), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v226 = vpmaxq_s16(v224, v224);
      int16x8_t v227 = vpminq_s16(v225, v225);
      v205.i64[0] = 0x8000800080008000;
      v205.i64[1] = 0x8000800080008000;
      int16x8_t v228 = vmaxq_s16(v226, v205);
      v211.i64[0] = 0x8000800080008000;
      v211.i64[1] = 0x8000800080008000;
      int16x8_t v229 = vminq_s16(v227, v211);
      int16x8_t v230 = vzip1q_s16(v226, v227);
      v231.i64[0] = 0x10001000100010;
      v231.i64[1] = 0x10001000100010;
      int16x8_t v232 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v230)), (int8x16_t)vceqzq_s16(v230));
      int16x8_t v233 = vpmaxq_s16(v232, v232);
      int8x16_t v478 = (int8x16_t)vshlq_s16(vshlq_s16(v192, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v480 = (int8x16_t)v213;
      int16x8_t v234 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v213, (int16x8_t)v214), (int16x8_t)v478), (int16x8_t)v215), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v213, (int16x8_t)v214), (int16x8_t)v478), (int16x8_t)v215), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = vpmaxq_s16(v234, v234);
      int16x8_t v237 = vpminq_s16(v235, v235);
      int16x8_t v238 = vmaxq_s16(v228, v236);
      int16x8_t v239 = vminq_s16(v229, v237);
      int16x8_t v240 = vzip1q_s16(v236, v237);
      int16x8_t v241 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v240)), (int8x16_t)vceqzq_s16(v240));
      int16x8_t v242 = vpmaxq_s16(v241, v241);
      int16x8_t v243 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v216, (int16x8_t)v217), (int16x8_t)v218), (int16x8_t)v219), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v244 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v216, (int16x8_t)v217), (int16x8_t)v218), (int16x8_t)v219), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v245 = vpmaxq_s16(v243, v243);
      int16x8_t v246 = vpminq_s16(v244, v244);
      int16x8_t v247 = vmaxq_s16(v238, v245);
      int16x8_t v248 = vminq_s16(v239, v246);
      int16x8_t v249 = vzip1q_s16(v245, v246);
      int16x8_t v250 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v249)), (int8x16_t)vceqzq_s16(v249));
      int16x8_t v251 = vpmaxq_s16(v250, v250);
      int16x8_t v252 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v220, (int16x8_t)v221), (int16x8_t)v222), (int16x8_t)v223), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v253 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v220, (int16x8_t)v221), (int16x8_t)v222), (int16x8_t)v223), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v254 = vpmaxq_s16(v252, v252);
      int16x8_t v255 = vpminq_s16(v253, v253);
      int16x8_t v256 = vmaxq_s16(v247, v254);
      int8x16_t v257 = (int8x16_t)vminq_s16(v248, v255);
      int16x8_t v258 = vzip1q_s16(v254, v255);
      int16x8_t v259 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v258)), (int8x16_t)vceqzq_s16(v258));
      int16x8_t v260 = vpmaxq_s16(v259, v259);
      int8x16_t v261 = (int8x16_t)vmaxq_s16(vmaxq_s16(v233, v242), vmaxq_s16(v251, v260));
      int8x16_t v483 = (int8x16_t)v256;
      int16x8_t v262 = vclzq_s16(vsubq_s16(v256, (int16x8_t)v257));
      int8x16_t v263 = (int8x16_t)vsubq_s16(v231, v262);
      int8x16_t v264 = (int8x16_t)vcgtq_s16((int16x8_t)v261, (int16x8_t)v263);
      int8x16_t v265 = vbslq_s8(v264, v263, v261);
      v261.i64[0] = 0x3000300030003;
      v261.i64[1] = 0x3000300030003;
      int16x8_t v266 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v233), (int16x8_t)v261), (int16x8_t)0);
      int8x16_t v267 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v242), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v268 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v251), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v269 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v260), (int16x8_t)v261), (int16x8_t)0);
      int8x16_t v270 = (int8x16_t)vsubq_s16((int16x8_t)v265, v266);
      int16x8_t v271 = vsubq_s16((int16x8_t)v265, (int16x8_t)v267);
      int8x16_t v272 = (int8x16_t)vsubq_s16((int16x8_t)v265, v268);
      int16x8_t v273 = vsubq_s16((int16x8_t)v265, v269);
      int8x16_t v274 = (int8x16_t)vceqq_s16(vaddq_s16(v269, v268), vnegq_s16(vaddq_s16(v266, (int16x8_t)v267)));
      v267.i64[0] = 0x4000400040004;
      v267.i64[1] = 0x4000400040004;
      int8x16_t v275 = vbicq_s8(v267, v274);
      v269.i64[0] = 0x7000700070007;
      v269.i64[1] = 0x7000700070007;
      int8x16_t v474 = (int8x16_t)v273;
      int8x16_t v476 = (int8x16_t)v271;
      int16x8_t v276 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v263, v264), vaddq_s16((int16x8_t)v275, (int16x8_t)v275)), (int16x8_t)v270, v269), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v272, v271), v273), 3uLL));
      int8x16_t v129 = v503;
      int8x16_t v277 = (int8x16_t)v504;
      v278.i64[0] = 0x2000200020002;
      v278.i64[1] = 0x2000200020002;
      int16x8_t v279 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v503, v261), (int16x8_t)v278), (int8x16_t)v231);
      v261.i64[0] = 0x8000800080008;
      v261.i64[1] = 0x8000800080008;
      int16x8_t v172 = v507;
      int8x16_t v171 = v508;
      int16x8_t v173 = v505;
      int16x8_t v175 = v506;
      int8x16_t v280 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v508, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v503, v261))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v261)), v279), v504, v269), vshlq_n_s16(vaddq_s16(vaddq_s16(v506, v505), v507), 3uLL)), v276).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v280))
      {
        v281.i64[0] = 0x9000900090009;
        v281.i64[1] = 0x9000900090009;
        int8x16_t v282 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v265), v278), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v264, v281), (int16x8_t)vmvnq_s8(v264)));
        v281.i64[0] = -1;
        v281.i64[1] = -1;
        v283.i64[0] = 0xF000F000F000FLL;
        v283.i64[1] = 0xF000F000F000FLL;
        int8x16_t v277 = vbslq_s8(v280, v270, (int8x16_t)v504);
        int16x8_t v173 = (int16x8_t)vbslq_s8(v280, v476, (int8x16_t)v505);
        int16x8_t v175 = (int16x8_t)vbslq_s8(v280, v272, (int8x16_t)v506);
        int16x8_t v172 = (int16x8_t)vbslq_s8(v280, v474, (int8x16_t)v507);
        int8x16_t v171 = vbslq_s8(v280, v265, v508);
        int8x16_t v129 = vbslq_s8(v280, vorrq_s8(v282, v275), v503);
        int8x16_t v501 = vbslq_s8(v280, v223, v501);
        int8x16_t v502 = vbslq_s8(v280, vextq_s8(v472.val[3], v472.val[3], 8uLL), v502);
        int8x16_t v486 = vbslq_s8(v280, v485, v486);
        int8x16_t v487 = vbslq_s8(v280, v210, v487);
        int8x16_t v488 = vbslq_s8(v280, v482, v488);
        int8x16_t v489 = vbslq_s8(v280, v212, v489);
        int8x16_t v490 = vbslq_s8(v280, v480, v490);
        int8x16_t v491 = vbslq_s8(v280, v214, v491);
        int8x16_t v492 = vbslq_s8(v280, v478, v492);
        int8x16_t v493 = vbslq_s8(v280, v215, v493);
        int8x16_t v494 = vbslq_s8(v280, v216, v494);
        int8x16_t v495 = vbslq_s8(v280, v217, v495);
        int8x16_t v496 = vbslq_s8(v280, v218, v496);
        int8x16_t v497 = vbslq_s8(v280, v219, v497);
        int8x16_t v498 = vbslq_s8(v280, v220, v498);
        int8x16_t v499 = vbslq_s8(v280, v221, v499);
        int8x16_t v500 = vbslq_s8(v280, v222, v500);
        int8x16_t v509 = vbslq_s8(v280, v257, v509);
        int8x16_t v510 = vbslq_s8(v280, v483, v510);
        int8x16_t v511 = vbslq_s8(v280, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v281, vsubq_s16(v283, v262)), (int16x8_t)v257), v264), v511);
        int16x8_t v504 = (int16x8_t)v277;
        int16x8_t v505 = v173;
        int16x8_t v506 = v175;
        int16x8_t v507 = v172;
        int8x16_t v508 = v171;
        int8x16_t v503 = v129;
      }
      int16x8_t v174 = (int16x8_t)v277;
    }
    int16x8_t v284 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v174));
    int8x16_t v486 = (int8x16_t)vaddq_s16(v284, (int16x8_t)v486);
    int8x16_t v487 = (int8x16_t)vaddq_s16((int16x8_t)v487, v284);
    int8x16_t v488 = (int8x16_t)vaddq_s16((int16x8_t)v488, v284);
    int8x16_t v489 = (int8x16_t)vaddq_s16((int16x8_t)v489, v284);
    int16x8_t v285 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v173));
    int8x16_t v490 = (int8x16_t)vaddq_s16((int16x8_t)v490, v285);
    int8x16_t v491 = (int8x16_t)vaddq_s16((int16x8_t)v491, v285);
    int8x16_t v492 = (int8x16_t)vaddq_s16((int16x8_t)v492, v285);
    int8x16_t v493 = (int8x16_t)vaddq_s16((int16x8_t)v493, v285);
    int16x8_t v286 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v175));
    int8x16_t v494 = (int8x16_t)vaddq_s16((int16x8_t)v494, v286);
    int8x16_t v495 = (int8x16_t)vaddq_s16((int16x8_t)v495, v286);
    int8x16_t v496 = (int8x16_t)vaddq_s16((int16x8_t)v496, v286);
    int8x16_t v497 = (int8x16_t)vaddq_s16((int16x8_t)v497, v286);
    int8x16_t v287 = vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v172));
    int8x16_t v498 = (int8x16_t)vaddq_s16((int16x8_t)v498, (int16x8_t)v287);
    int8x16_t v499 = (int8x16_t)vaddq_s16((int16x8_t)v499, (int16x8_t)v287);
    int8x16_t v500 = (int8x16_t)vaddq_s16((int16x8_t)v500, (int16x8_t)v287);
    int8x16_t v501 = (int8x16_t)vaddq_s16((int16x8_t)v501, (int16x8_t)v287);
    v287.i64[0] = 0x8000800080008;
    v287.i64[1] = 0x8000800080008;
    v288.i64[0] = 0x3000300030003;
    v288.i64[1] = 0x3000300030003;
    v289.i64[0] = 0x2000200020002;
    v289.i64[1] = 0x2000200020002;
    int8x16_t v290 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v129, v288), v289);
    v289.i64[0] = 0x10001000100010;
    v289.i64[1] = 0x10001000100010;
    int16x8_t v291 = (int16x8_t)vandq_s8(v290, (int8x16_t)v289);
    v289.i64[0] = 0x7000700070007;
    v289.i64[1] = 0x7000700070007;
    int16x8_t v292 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v171, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v129, v287))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v287)), v291), v174, v289), vshlq_n_s16(vaddq_s16(v175, vaddq_s16(v173, v172)), 3uLL));
    int16x8_t v293 = vpaddq_s16(v292, v292);
    if ((unint64_t)(vpaddq_s16(v293, v293).i16[0] - 577) < 0xFFFFFFFFFFFFFD78)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (int8x16_t *)a3, a4, a5, a6, a7);
      return 80;
    }
    else
    {
      int32x2_t v294 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v295 = 8 * (a1 & 7);
      if (v295) {
        uint64_t v296 = *v294 & ~(-1 << v295);
      }
      else {
        uint64_t v296 = 0;
      }
      *a2 = 0;
      uint64_t v298 = v502.i64[0];
      unint64_t v299 = (unint64_t)((v171.i8[0] - 1) & 0xF) << 19;
      if (!v171.i16[0]) {
        unint64_t v299 = 0;
      }
      v300.i32[0] = v171.u16[3];
      v300.i32[1] = v171.u16[2];
      v301.i32[0] = v129.u16[1];
      v301.i32[1] = v129.u16[2];
      int8x8_t v302 = vand_s8((int8x8_t)vshl_u32(v301, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v303 = v302.i32[1];
      __int32 v304 = v302.i32[0] | v129.i8[0] & 0x1F;
      unint64_t v305 = (unint64_t)((v171.i8[2] - 1) & 0xF) << 23;
      if (!v171.i16[1]) {
        unint64_t v305 = 0;
      }
      int32x2_t v306 = vceqz_s32((int32x2_t)vand_s8((int8x8_t)v300, (int8x8_t)0xFFFF0000FFFFLL));
      v307.i64[0] = v306.i32[0];
      v307.i64[1] = v306.i32[1];
      int8x16_t v308 = (int8x16_t)v307;
      v307.i64[0] = vbic_s8((int8x8_t)0x100000001, (int8x8_t)v300).u32[0];
      v307.i64[1] = vand_s8((int8x8_t)vadd_s32(v300, (int32x2_t)0xF0000000FLL), (int8x8_t)0xF0000000FLL).u32[1];
      int8x16_t v309 = vbicq_s8((int8x16_t)vshlq_u64(v307, (uint64x2_t)xmmword_242EA7990), v308);
      unint64_t v310 = vorrq_s8(v309, (int8x16_t)vdupq_laneq_s64((int64x2_t)v309, 1)).u64[0] | v299 | v305 | v304 | v303 | ((unint64_t)(v129.i8[6] & 0xF) << 15);
      unint64_t v311 = (v310 << v295) | v296;
      if (v295 >= 0x20)
      {
        *int32x2_t v294 = v311;
        unint64_t v311 = v310 >> (-8 * (a1 & 7u));
      }
      unint64_t v312 = v298 & 0x3FF | ((unint64_t)(WORD1(v298) & 0x3FF) << 10);
      v313.i32[0] = WORD2(v298);
      v313.i32[1] = HIWORD(v298);
      int8x8_t v314 = vand_s8(v313, (int8x8_t)0x3000003FFLL);
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      uint64x2_t v316 = vshlq_u64(v315, (uint64x2_t)xmmword_242EA79A0);
      unint64_t v317 = v312 | v316.i64[0] | v316.i64[1];
      unint64_t v318 = (v295 + 32) & 0x38;
      unint64_t v319 = v311 | (v317 << v318);
      if (v318 >= 0x20)
      {
        *(void *)((char *)v294 + (((v295 + 32) >> 3) & 8)) = v319;
        unint64_t v319 = v317 >> -(char)v318;
      }
      int8x16_t v320 = (int8x16_t)vsubq_s16((int16x8_t)v508, v504);
      int8x16_t v321 = (int8x16_t)vsubq_s16((int16x8_t)v508, v505);
      int8x16_t v322 = (int8x16_t)vsubq_s16((int16x8_t)v508, v506);
      int8x16_t v323 = (int8x16_t)vsubq_s16((int16x8_t)v508, v507);
      *(uint8x8_t *)v320.i8 = vqmovn_u16((uint16x8_t)v320);
      *(uint8x8_t *)v321.i8 = vqmovn_u16((uint16x8_t)v321);
      *(uint8x8_t *)v322.i8 = vqmovn_u16((uint16x8_t)v322);
      *(uint8x8_t *)v323.i8 = vqmovn_u16((uint16x8_t)v323);
      int16x8_t v324 = (int16x8_t)vtrn1q_s8(v320, v321);
      int16x8_t v325 = (int16x8_t)vtrn2q_s8(v320, v321);
      int8x16_t v326 = vtrn1q_s8(v322, v323);
      int16x8_t v327 = (int16x8_t)vtrn2q_s8(v322, v323);
      int8x16_t v328 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v324, (int16x8_t)v326), (int32x4_t)vzip1q_s16(v325, v327)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v324, (int16x8_t)v326), (int32x4_t)vtrn2q_s16(v325, v327)));
      v326.i64[0] = 0x202020202020202;
      v326.i64[1] = 0x202020202020202;
      int8x16_t v329 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v503.i8, (int16x4_t)0x4000400040004)), v326);
      v326.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v326.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v322.i64[0] = -1;
      v322.i64[1] = -1;
      uint8x16_t v330 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v322, (uint8x16_t)vorrq_s8(v329, v326)), v328);
      int16x8_t v331 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v329.i8);
      int16x8_t v332 = (int16x8_t)vmovl_high_u8((uint8x16_t)v329);
      uint16x8_t v333 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v330.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v331)), (int16x8_t)vshlq_u16(vmovl_high_u8(v330), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v332)));
      uint16x8_t v334 = (uint16x8_t)vpaddq_s16(v331, v332);
      int32x4_t v335 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v334.i8);
      int32x4_t v336 = (int32x4_t)vmovl_high_u16(v334);
      int32x4_t v337 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v333.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v335)), (int32x4_t)vshlq_u32(vmovl_high_u16(v333), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v336)));
      int32x4_t v338 = vpaddq_s32(v335, v336);
      v339.i64[0] = v337.u32[0];
      v339.i64[1] = v337.u32[1];
      uint64x2_t v340 = (uint64x2_t)v339;
      v339.i64[0] = v337.u32[2];
      v339.i64[1] = v337.u32[3];
      uint64x2_t v341 = (uint64x2_t)v339;
      v339.i64[0] = v338.u32[0];
      v339.i64[1] = v338.u32[1];
      int64x2_t v342 = v339;
      v339.i64[0] = v338.u32[2];
      v339.i64[1] = v338.u32[3];
      int64x2_t v343 = vpaddq_s64((int64x2_t)vshlq_u64(v340, (uint64x2_t)vzip1q_s64((int64x2_t)0, v342)), (int64x2_t)vshlq_u64(v341, (uint64x2_t)vzip1q_s64((int64x2_t)0, v339)));
      int64x2_t v344 = vpaddq_s64(v342, v339);
      unint64_t v345 = (v343.i64[0] << v295) | v319;
      if (v344.i64[0] + v295 >= 0x40)
      {
        v294[1] = v345;
        unint64_t v345 = (unint64_t)v343.i64[0] >> (-8 * (a1 & 7u));
        if (!v295) {
          unint64_t v345 = 0;
        }
      }
      unint64_t v346 = v344.i64[0] + (v295 | 0x40);
      unint64_t v347 = v345 | (v343.i64[1] << v346);
      if ((v346 & 0x3F) + v344.i64[1] >= 0x40)
      {
        *(void *)((char *)v294 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v343.i64[1] >> -(v346 & 0x3F);
        if ((v346 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346 + v344.i64[1];
      v349.i64[0] = 0x8000800080008;
      v349.i64[1] = 0x8000800080008;
      v350.i64[0] = -1;
      v350.i64[1] = -1;
      int16x8_t v351 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v503, v349), (int8x16_t)0, 8uLL), v508);
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v353 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v350, (uint16x8_t)vaddq_s16(v351, v352)), v511);
      int32x4_t v354 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v355 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)), (int32x4_t)vmovl_high_u16(v353));
      int32x4_t v356 = vpaddq_s32(v354, (int32x4_t)vmovl_high_u16((uint16x8_t)v351));
      v357.i64[0] = v355.u32[0];
      v357.i64[1] = v355.u32[1];
      uint64x2_t v358 = (uint64x2_t)v357;
      v357.i64[0] = v355.u32[2];
      v357.i64[1] = v355.u32[3];
      uint64x2_t v359 = (uint64x2_t)v357;
      v357.i64[0] = v356.u32[0];
      v357.i64[1] = v356.u32[1];
      int64x2_t v360 = v357;
      v357.i64[0] = v356.u32[2];
      v357.i64[1] = v356.u32[3];
      int64x2_t v361 = vpaddq_s64((int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v360)), (int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v357)));
      int64x2_t v362 = vpaddq_s64(v360, v357);
      unint64_t v363 = (v361.i64[0] << v348) | v347;
      if (v362.i64[0] + (v348 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v294 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v363;
        unint64_t v363 = (unint64_t)v361.i64[0] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v363 = 0;
        }
      }
      unint64_t v364 = v362.i64[0] + v348;
      unint64_t v365 = v363 | (v361.i64[1] << v364);
      if ((v364 & 0x3F) + v362.i64[1] >= 0x40)
      {
        *(void *)((char *)v294 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v361.i64[1] >> -(v364 & 0x3F);
        if ((v364 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364 + v362.i64[1];
      int16x8_t v367 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v504, 8uLL);
      v368.i64[0] = 0xF000F000F000FLL;
      v368.i64[1] = 0xF000F000F000FLL;
      v369.i64[0] = -1;
      v369.i64[1] = -1;
      uint16x8_t v370 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v369, (uint16x8_t)vaddq_s16(v367, v368)), v486);
      int32x4_t v371 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v367.i8);
      int32x4_t v372 = (int32x4_t)vmovl_high_u16((uint16x8_t)v367);
      int32x4_t v373 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v370.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v370), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v372)));
      int32x4_t v374 = vpaddq_s32(v371, v372);
      v375.i64[0] = v373.u32[0];
      v375.i64[1] = v373.u32[1];
      uint64x2_t v376 = (uint64x2_t)v375;
      v375.i64[0] = v373.u32[2];
      v375.i64[1] = v373.u32[3];
      uint64x2_t v377 = (uint64x2_t)v375;
      v375.i64[0] = v374.u32[0];
      v375.i64[1] = v374.u32[1];
      int64x2_t v378 = v375;
      v375.i64[0] = v374.u32[2];
      v375.i64[1] = v374.u32[3];
      int64x2_t v379 = vpaddq_s64((int64x2_t)vshlq_u64(v376, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)), (int64x2_t)vshlq_u64(v377, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)));
      int64x2_t v380 = vpaddq_s64(v378, v375);
      unint64_t v381 = (v379.i64[0] << v366) | v365;
      if (v380.i64[0] + (v366 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v294 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v381;
        if ((v366 & 0x3F) != 0) {
          unint64_t v381 = (unint64_t)v379.i64[0] >> -(v366 & 0x3F);
        }
        else {
          unint64_t v381 = 0;
        }
      }
      unint64_t v382 = v380.i64[0] + v366;
      uint64_t v383 = (v380.i64[0] + v366) & 0x3F;
      unint64_t v384 = v381 | (v379.i64[1] << v382);
      if ((unint64_t)(v383 + v380.i64[1]) >= 0x40)
      {
        *(void *)((char *)v294 + ((v382 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
        unint64_t v384 = (unint64_t)v379.i64[1] >> -(char)v383;
        if (!v383) {
          unint64_t v384 = 0;
        }
      }
      unint64_t v385 = v382 + v380.i64[1];
      v386.i64[0] = 0xF000F000F000FLL;
      v386.i64[1] = 0xF000F000F000FLL;
      v387.i64[0] = -1;
      v387.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v387, (uint16x8_t)vaddq_s16(v504, v386)), *(int8x16_t *)((char *)&v486 + i));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v504.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v504);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v385) | v384;
        if (v399.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v385;
        unint64_t v384 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v401 + v399.i64[1];
      }
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v505, v403)), *(int8x16_t *)((char *)&v490 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v505.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v505);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v385) | v384;
        if (v415.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v385;
        unint64_t v384 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      uint64_t v418 = 0;
      v419.i64[0] = 0xF000F000F000FLL;
      v419.i64[1] = 0xF000F000F000FLL;
      v420.i64[0] = -1;
      v420.i64[1] = -1;
      do
      {
        uint16x8_t v421 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v420, (uint16x8_t)vaddq_s16(v506, v419)), *(int8x16_t *)((char *)&v494 + v418));
        int32x4_t v422 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v506.i8);
        int32x4_t v423 = (int32x4_t)vmovl_high_u16((uint16x8_t)v506);
        int32x4_t v424 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v421.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v422)), (int32x4_t)vshlq_u32(vmovl_high_u16(v421), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v423)));
        int32x4_t v425 = vpaddq_s32(v422, v423);
        v426.i64[0] = v424.u32[0];
        v426.i64[1] = v424.u32[1];
        uint64x2_t v427 = (uint64x2_t)v426;
        v426.i64[0] = v424.u32[2];
        v426.i64[1] = v424.u32[3];
        uint64x2_t v428 = (uint64x2_t)v426;
        v426.i64[0] = v425.u32[0];
        v426.i64[1] = v425.u32[1];
        int64x2_t v429 = v426;
        v426.i64[0] = v425.u32[2];
        v426.i64[1] = v425.u32[3];
        int64x2_t v430 = vpaddq_s64((int64x2_t)vshlq_u64(v427, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)), (int64x2_t)vshlq_u64(v428, (uint64x2_t)vzip1q_s64((int64x2_t)0, v426)));
        int64x2_t v431 = vpaddq_s64(v429, v426);
        unint64_t v432 = (v430.i64[0] << v385) | v384;
        if (v431.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v432;
          unint64_t v432 = (unint64_t)v430.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v432 = 0;
          }
        }
        unint64_t v433 = v431.i64[0] + v385;
        unint64_t v384 = v432 | (v430.i64[1] << v433);
        if ((v433 & 0x3F) + v431.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v433 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v430.i64[1] >> -(v433 & 0x3F);
          if ((v433 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v433 + v431.i64[1];
        v418 += 16;
      }
      while (v418 != 64);
      uint64_t v434 = 0;
      v435.i64[0] = 0xF000F000F000FLL;
      v435.i64[1] = 0xF000F000F000FLL;
      v436.i64[0] = -1;
      v436.i64[1] = -1;
      do
      {
        uint16x8_t v437 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v436, (uint16x8_t)vaddq_s16(v507, v435)), *(int8x16_t *)((char *)&v498 + v434));
        int32x4_t v438 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v507.i8);
        int32x4_t v439 = (int32x4_t)vmovl_high_u16((uint16x8_t)v507);
        int32x4_t v440 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v437.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v438)), (int32x4_t)vshlq_u32(vmovl_high_u16(v437), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v439)));
        int32x4_t v441 = vpaddq_s32(v438, v439);
        v442.i64[0] = v440.u32[0];
        v442.i64[1] = v440.u32[1];
        uint64x2_t v443 = (uint64x2_t)v442;
        v442.i64[0] = v440.u32[2];
        v442.i64[1] = v440.u32[3];
        uint64x2_t v444 = (uint64x2_t)v442;
        v442.i64[0] = v441.u32[0];
        v442.i64[1] = v441.u32[1];
        int64x2_t v445 = v442;
        v442.i64[0] = v441.u32[2];
        v442.i64[1] = v441.u32[3];
        int64x2_t v446 = vpaddq_s64((int64x2_t)vshlq_u64(v443, (uint64x2_t)vzip1q_s64((int64x2_t)0, v445)), (int64x2_t)vshlq_u64(v444, (uint64x2_t)vzip1q_s64((int64x2_t)0, v442)));
        int64x2_t v447 = vpaddq_s64(v445, v442);
        unint64_t v448 = (v446.i64[0] << v385) | v384;
        if (v447.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v448;
          unint64_t v448 = (unint64_t)v446.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v448 = 0;
          }
        }
        unint64_t v449 = v447.i64[0] + v385;
        unint64_t v384 = v448 | (v446.i64[1] << v449);
        if ((v449 & 0x3F) + v447.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v449 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v446.i64[1] >> -(v449 & 0x3F);
          if ((v449 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v449 + v447.i64[1];
        v434 += 16;
      }
      while (v434 != 64);
      if ((v385 & 0x3F) != 0) {
        *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
      }
      unint64_t result = (v385 - v295 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = a3->i32[0];
    *a2 = 3;
    return 4;
  }
  return result;
}