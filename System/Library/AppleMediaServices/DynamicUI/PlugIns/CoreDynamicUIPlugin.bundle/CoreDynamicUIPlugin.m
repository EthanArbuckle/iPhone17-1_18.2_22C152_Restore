uint64_t deviceIsRunningInternalBuild()
{
  return _os_variant_has_internal_content("com.apple.AppleMediaServicesUIDynamic");
}

uint64_t deviceIsRunningSeedBuild()
{
  return 0;
}

void sub_3000(id a1)
{
  v1 = +[NRPairedDeviceRegistry sharedInstance];
  id v5 = [v1 getActivePairedDevice];

  v2 = [v5 objectForKeyedSubscript:NRDevicePropertySystemVersion];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  v4 = (void *)qword_BEA58;
  qword_BEA58 = (uint64_t)v3;
}

__n128 sub_330C(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t _s9SelectionVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_3360(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_3380(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

uint64_t sub_33C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6F8C(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_33D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6F8C(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_33E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_8F4B0();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void sub_3450()
{
  sub_7140();
  uint64_t v2 = v1;
  v26 = v3;
  sub_5664(&qword_BAAC8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_8F4B0();
  sub_7084();
  uint64_t v8 = v7;
  ((void (*)(void))__chkstk_darwin)();
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  swift_allocObject();
  v11 = (int *)type metadata accessor for AcknowledgePrivacyAction();
  uint64_t v27 = v2;
  sub_52DC();
  v25[2] = v8;
  if (v0)
  {
    swift_errorRelease();
    sub_56F8((uint64_t)v5, 1, 1, v6);
    sub_8F4A0();
    sub_59E0((uint64_t)v5, &qword_BAAC8);
    v12 = *(uint64_t (**)(void))(v8 + 32);
  }
  else
  {
    sub_56F8((uint64_t)v5, 0, 1, v6);
    v12 = *(uint64_t (**)(void))(v8 + 32);
    ((void (*)(char *, char *, uint64_t))v12)(v10, v5, v6);
  }
  v25[1] = (char *)v26 + v11[5];
  uint64_t v13 = v12();
  __chkstk_darwin(v13);
  sub_7408();
  *(void *)(v14 - 16) = v15;
  *(void *)(v14 - 8) = v2;
  sub_7398();
  sub_4C30();
  v16 = v26;
  uint64_t v17 = sub_598C((uint64_t)&v29, (uint64_t)v26 + v11[7], &qword_BAAD0);
  __chkstk_darwin(v17);
  sub_7408();
  *(void *)(v18 - 16) = v19;
  *(void *)(v18 - 8) = v2;
  sub_7398();
  sub_4C30();
  sub_598C((uint64_t)&v28, (uint64_t)v16 + v11[6], &qword_BAAD0);
  uint64_t v20 = sub_3CEE4();
  uint64_t v22 = v21;
  sub_8F320();
  sub_7170();
  sub_7358();
  v23();
  swift_release();
  sub_8F3F0();
  sub_7170();
  sub_7358();
  v24();
  uint64_t *v16 = v20;
  v16[1] = v22;
  sub_7118();
}

uint64_t sub_3924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_8F320();
  __chkstk_darwin();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 16))(&v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F490();
  uint64_t v12 = sub_8F4B0();
  return sub_56F8(a3, 0, 1, v12);
}

void sub_3AD8()
{
}

void sub_3B0C()
{
}

void sub_3B40()
{
}

void sub_3B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_54A4(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_3B8C()
{
}

void sub_3BC4()
{
}

void sub_3BF8()
{
}

void sub_3C30()
{
}

void sub_3C68()
{
  sub_7140();
  uint64_t v19 = v1;
  uint64_t v20 = v2;
  uint64_t v17 = v4;
  uint64_t v18 = v3;
  uint64_t v5 = sub_5664(v3);
  __chkstk_darwin(v5 - 8);
  sub_7364();
  sub_7084();
  __chkstk_darwin(v6);
  sub_72BC();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v7 = sub_7458();
    v8(v7);
    uint64_t v9 = v20(0);
    if (sub_5754(v0, 1, v9) != 1)
    {
      uint64_t v15 = sub_71C8();
      v16(v15);
      sub_577C(v0, v17, v19);
      goto LABEL_6;
    }
    sub_59E0(v0, v18);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v10 = sub_70D0();
  sub_7430(v10, v11);
  sub_7108();
  sub_7130();
  v12();
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v13 = sub_71C8();
  v14(v13);
LABEL_6:
  sub_731C();
  sub_7118();
}

void sub_3E14()
{
  sub_7140();
  sub_725C(v1, v2);
  sub_7084();
  __chkstk_darwin(v3);
  sub_70A0();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v4 = sub_717C();
    v0(v4);
    if (v13[3] != 1)
    {
      uint64_t v10 = sub_70F0();
      v11(v10);
      sub_598C((uint64_t)v13, v12, &qword_BCEC0);
      goto LABEL_6;
    }
    sub_59E0((uint64_t)v13, (uint64_t *)&unk_BAB00);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v5 = sub_70D0();
  sub_718C(v5, v6);
  sub_7108();
  sub_7130();
  v7();
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v8 = sub_70F0();
  v9(v8);
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_3F64()
{
  void (*v1)(long long *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  long long v16;
  void *v17;
  void (*v18)(void);
  long long v19;
  long long v20;
  long long v21;
  uint64_t v22;
  void (*v23)(long long *__return_ptr, uint64_t);

  sub_7140();
  v23 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_8F320();
  sub_7084();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_70A0();
  if (sub_8F2F0()) {
    goto LABEL_5;
  }
  v23(&v19, v0);
  if (!*((void *)&v20 + 1))
  {
    sub_59E0((uint64_t)&v19, &qword_BCEC0);
LABEL_5:
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    sub_70D0();
    *uint64_t v17 = v7;
    v17[1] = v5;
    v17[2] = v3;
    sub_7108();
    sub_7130();
    v18();
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);
    goto LABEL_6;
  }
  uint64_t v14 = sub_70F0();
  v15(v14);
  v16 = v20;
  *(_OWORD *)uint64_t v9 = v19;
  *(_OWORD *)(v9 + 16) = v16;
  *(_OWORD *)(v9 + 32) = v21;
  *(void *)(v9 + 48) = v22;
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_40FC()
{
}

void sub_4114()
{
  sub_7140();
  sub_71F8(v1, v2, v3, v4, v5);
  uint64_t v17 = v6;
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v7);
  sub_70A0();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v8 = sub_717C();
    v0(v8);
    if (v18[3] != 1)
    {
      uint64_t v15 = sub_70F0();
      v16(v15);
      memcpy(v17, v18, 0x58uLL);
      goto LABEL_6;
    }
    sub_59E0((uint64_t)v18, &qword_BAB28);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v9 = sub_70D0();
  sub_718C(v9, v10);
  sub_7108();
  sub_7130();
  v12(v11);
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v13 = sub_70F0();
  v14(v13);
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_426C()
{
  sub_7140();
  uint64_t v1 = v0;
  uint64_t v13 = v2;
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v3);
  sub_70A0();
  if (sub_8F2F0()) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_717C();
  v1(v4);
  if (!v14[0])
  {
    sub_59E0((uint64_t)v14, &qword_BAB18);
LABEL_5:
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v7 = sub_70D0();
    sub_7348(v7, v8);
    sub_7108();
    sub_7130();
    v10(v9);
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v11 = sub_73F4();
    v12(v11);
    goto LABEL_6;
  }
  uint64_t v5 = sub_73F4();
  v6(v5);
  memcpy(v13, v14, 0x58uLL);
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_43DC()
{
  sub_7140();
  sub_71F8(v1, v2, v3, v4, v5);
  uint64_t v16 = v6;
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v7);
  sub_70A0();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v8 = sub_717C();
    v0(v8);
    if (v17[1] != 1)
    {
      uint64_t v14 = sub_70F0();
      v15(v14);
      sub_5930((uint64_t)v17, v16);
      goto LABEL_6;
    }
    sub_59E0((uint64_t)v17, &qword_BAB20);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v9 = sub_70D0();
  sub_718C(v9, v10);
  sub_7108();
  sub_7130();
  v11();
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v12 = sub_70F0();
  v13(v12);
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_4530()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void (*v5)(void);
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  char v11;
  void (*v12)(uint64_t *__return_ptr, uint64_t);

  sub_7140();
  uint64_t v12 = v1;
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v2);
  sub_70A0();
  if (sub_8F2F0() & 1) != 0 || (v12(&v10, v0), (v11))
  {
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v3 = sub_70D0();
    sub_718C(v3, v4);
    sub_7108();
    sub_7130();
    v5();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v6 = sub_7158();
    v7(v6);
  }
  else
  {
    uint64_t v8 = sub_7158();
    v9(v8);
  }
  sub_731C();
  sub_7118();
}

void sub_468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_5020(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_46A4()
{
  sub_7140();
  sub_722C(v1, v2);
  sub_7084();
  __chkstk_darwin(v3);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (uint64_t v4 = sub_717C(), v0(v4), v12 == 2))
  {
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v5 = sub_70D0();
    sub_7348(v5, v6);
    sub_7108();
    sub_7130();
    v7();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v8 = sub_71E0();
    v9(v8);
  }
  else
  {
    uint64_t v10 = sub_71E0();
    v11(v10);
    sub_73C8();
  }
  sub_731C();
  sub_7118();
}

void sub_47D4()
{
  sub_7140();
  sub_725C(v1, v2);
  sub_7084();
  __chkstk_darwin(v3);
  sub_70A0();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v4 = sub_717C();
    v0(v4);
    if (v13[48] != 254)
    {
      uint64_t v10 = sub_70F0();
      v11(v10);
      sub_598C((uint64_t)v13, v12, &qword_BAB38);
      goto LABEL_6;
    }
    sub_59E0((uint64_t)v13, &qword_BAB30);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v5 = sub_70D0();
  sub_718C(v5, v6);
  sub_7108();
  sub_7130();
  v7();
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v8 = sub_70F0();
  v9(v8);
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_4924()
{
}

void sub_494C()
{
}

void sub_4974()
{
  sub_7140();
  uint64_t v20 = v2;
  uint64_t v21 = v1;
  sub_71F8(v3, v4, v5, v6, v7);
  uint64_t v19 = v8;
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v9);
  sub_70A0();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v10 = sub_717C();
    v0(v10);
    if (v22[1] != 2)
    {
      uint64_t v17 = sub_70F0();
      v18(v17);
      sub_598C((uint64_t)v22, v19, v21);
      goto LABEL_6;
    }
    sub_59E0((uint64_t)v22, v20);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v11 = sub_70D0();
  sub_718C(v11, v12);
  sub_7108();
  sub_7130();
  v14(v13);
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v15 = sub_70F0();
  v16(v15);
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_4ACC()
{
  sub_7140();
  sub_722C(v1, v2);
  sub_7084();
  __chkstk_darwin(v3);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (uint64_t v4 = sub_717C(), v0(v4), v12 == 1))
  {
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v5 = sub_70D0();
    sub_7348(v5, v6);
    sub_7108();
    sub_7130();
    v7();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v8 = sub_71E0();
    v9(v8);
  }
  else
  {
    uint64_t v10 = sub_71E0();
    v11(v10);
    sub_73C8();
  }
  sub_731C();
  sub_7118();
}

void sub_4BFC()
{
}

void sub_4C30()
{
  sub_7140();
  uint64_t v13 = v0;
  uint64_t v14 = v1;
  uint64_t v15 = v2;
  uint64_t v4 = v3;
  sub_8F320();
  sub_7084();
  __chkstk_darwin();
  sub_70A0();
  if (sub_8F2F0()) {
    goto LABEL_5;
  }
  uint64_t v5 = sub_717C();
  v4(v5);
  if (!v16[3])
  {
    sub_59E0((uint64_t)v16, v13);
LABEL_5:
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v8 = sub_70D0();
    sub_7348(v8, v9);
    sub_7108();
    sub_7130();
    v10();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v11 = sub_7444();
    v12(v11);
    goto LABEL_6;
  }
  uint64_t v6 = sub_7444();
  v7(v6);
  v15(v16, v14);
LABEL_6:
  sub_7328();
  sub_7118();
}

void sub_4DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_7140();
  sub_719C(v12, v13, v14, v15);
  sub_7084();
  __chkstk_darwin(v16);
  sub_70A0();
  if (sub_8F2F0() & 1) != 0 || (uint64_t v17 = sub_7334(), v18(v17), (a12))
  {
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v19 = sub_70D0();
    sub_718C(v19, v20);
    sub_7108();
    sub_7130();
    v21();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v22 = sub_7158();
    v23(v22);
  }
  else
  {
    uint64_t v24 = sub_7158();
    v25(v24);
  }
  sub_731C();
  sub_7118();
}

void sub_4ED4()
{
  sub_7140();
  sub_728C(v0, v1, v2);
  sub_7084();
  __chkstk_darwin(v3);
  sub_72EC();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v4 = sub_73B0();
    v5(v4);
    if (v14[56] != 1)
    {
      uint64_t v11 = sub_7214();
      v12(v11);
      memcpy(v13, v14, 0x2A2uLL);
      goto LABEL_6;
    }
    sub_59E0((uint64_t)v14, &qword_BAB58);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v6 = sub_70D0();
  sub_741C(v6, v7);
  sub_7108();
  sub_7130();
  v8();
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v9 = sub_7214();
  v10(v9);
LABEL_6:
  sub_7118();
}

void sub_5020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_7140();
  sub_719C(v10, v11, v12, v13);
  sub_7084();
  __chkstk_darwin(v14);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (uint64_t v15 = sub_7334(), v16(v15), a10 == 1))
  {
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v17 = sub_70D0();
    sub_718C(v17, v18);
    sub_7108();
    sub_7130();
    v19();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v20 = sub_7158();
    v21(v20);
  }
  else
  {
    uint64_t v22 = sub_7158();
    v23(v22);
  }
  sub_731C();
  sub_7118();
}

void sub_5150()
{
  sub_7140();
  uint64_t v4 = sub_728C(v1, v2, v3);
  sub_7084();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_72EC();
  if (sub_8F2F0()) {
    goto LABEL_5;
  }
  uint64_t v8 = sub_73B0();
  v9(v8);
  if (!v16[2])
  {
    sub_59E0((uint64_t)v16, &qword_BAB68);
LABEL_5:
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v12 = sub_70D0();
    sub_741C(v12, v13);
    sub_7108();
    sub_7130();
    v14();
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v4);
    goto LABEL_6;
  }
  uint64_t v10 = sub_7214();
  v11(v10);
  memcpy(__dst, v16, 0x2F4uLL);
LABEL_6:
  sub_7118();
}

void sub_52A8()
{
}

void sub_52DC()
{
  sub_7140();
  uint64_t v17 = v1;
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  sub_5664(v2);
  __chkstk_darwin();
  sub_7364();
  sub_7084();
  __chkstk_darwin();
  sub_72BC();
  if ((sub_8F2F0() & 1) == 0)
  {
    uint64_t v4 = sub_7458();
    v5(v4);
    uint64_t v6 = v17(0);
    if (sub_5754(v0, 1, v6) != 1)
    {
      uint64_t v12 = sub_71C8();
      v13(v12);
      sub_7108();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v0, v6);
      goto LABEL_6;
    }
    sub_59E0(v0, v15);
  }
  sub_8F8E0();
  sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  uint64_t v7 = sub_70D0();
  sub_7430(v7, v8);
  sub_7108();
  sub_7130();
  v9();
  swift_bridgeObjectRetain();
  swift_willThrow();
  uint64_t v10 = sub_71C8();
  v11(v10);
LABEL_6:
  sub_731C();
  sub_7118();
}

void sub_54A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_7140();
  sub_719C(v10, v11, v12, v13);
  sub_7084();
  __chkstk_darwin(v14);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (uint64_t v15 = sub_7334(), v16(v15), !a10))
  {
    sub_8F8E0();
    sub_6B4C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v19 = sub_70D0();
    sub_718C(v19, v20);
    sub_7108();
    sub_7130();
    v21();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v22 = sub_7158();
    v23(v22);
  }
  else
  {
    uint64_t v17 = sub_7158();
    v18(v17);
  }
  sub_731C();
  sub_7118();
}

uint64_t sub_55D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 88))(a1, a3);
}

void sub_5648()
{
}

uint64_t sub_5664(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for AcknowledgePrivacyAction()
{
  uint64_t result = qword_BABE8;
  if (!qword_BABE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_56F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3924(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_56F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_5720(uint64_t a1)
{
  return sub_55D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_573C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_5754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_577C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_7170();
  uint64_t v4 = sub_73E0();
  v5(v4);
  return a2;
}

uint64_t sub_57D4()
{
  return sub_5C98(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_5804(uint64_t a1, id *a2)
{
  return sub_6E1C(a1, a2);
}

uint64_t sub_581C(uint64_t a1, id *a2)
{
  return sub_6E94(a1, a2) & 1;
}

NSString sub_5838@<X0>(void *a1@<X8>)
{
  NSString result = sub_6F14();
  *a1 = result;
  return result;
}

uint64_t sub_5864()
{
  sub_738C();
  uint64_t result = sub_588C();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_5890()
{
  return sub_6F4C(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_58C0()
{
  uint64_t v1 = sub_738C();
  uint64_t result = sub_183B4(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_58E8@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_8F9A0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_5930(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_598C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_7170();
  uint64_t v4 = sub_73E0();
  v5(v4);
  return a2;
}

uint64_t sub_59E0(uint64_t a1, uint64_t *a2)
{
  sub_5664(a2);
  sub_7170();
  sub_7358();
  v3();
  return a1;
}

uint64_t sub_5A34(uint64_t a1)
{
  uint64_t v2 = sub_6B4C(&qword_BAC88, type metadata accessor for Kind);
  uint64_t v3 = sub_6B4C(&qword_BAC90, type metadata accessor for Kind);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_5AF0(uint64_t a1)
{
  uint64_t v2 = sub_6B4C(&qword_BAC98, type metadata accessor for Context);
  uint64_t v3 = sub_6B4C(&qword_BACA0, type metadata accessor for Context);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_5BAC(uint64_t a1)
{
  uint64_t v2 = sub_6B4C(&qword_BACA8, type metadata accessor for Size);
  uint64_t v3 = sub_6B4C(&qword_BACB0, type metadata accessor for Size);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_5C68()
{
  return sub_5C98(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_5C98(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_8F9D0();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_5CD8()
{
  return sub_5CE0();
}

uint64_t sub_5CE0()
{
  sub_8F9D0();
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_5D34()
{
  return sub_5D3C();
}

Swift::Int sub_5D3C()
{
  sub_8F9D0();
  sub_8FFE0();
  sub_8FA00();
  Swift::Int v0 = sub_90000();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_5DB0()
{
  return sub_6F4C(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_5DE0()
{
  return sub_5CE0();
}

Swift::Int sub_5DFC()
{
  return sub_5D3C();
}

uint64_t sub_5E18()
{
  return sub_54A44();
}

uint64_t sub_5E24()
{
  return sub_5E48() & 1;
}

uint64_t sub_5E48()
{
  uint64_t v0 = sub_8F9D0();
  uint64_t v2 = v1;
  if (v0 == sub_8F9D0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_8FF40();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void type metadata accessor for Kind(uint64_t a1)
{
}

void type metadata accessor for Context(uint64_t a1)
{
}

void type metadata accessor for Size(uint64_t a1)
{
}

uint64_t *sub_5F0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_8F4B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
    if (v16)
    {
      uint64_t v17 = *((void *)v15 + 4);
      *((void *)v14 + 3) = v16;
      *((void *)v14 + 4) = v17;
      (**(void (***)(void))(v16 - 8))();
    }
    else
    {
      long long v19 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v19;
      *((void *)v14 + 4) = *((void *)v15 + 4);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 24);
    if (v23)
    {
      uint64_t v24 = *((void *)v22 + 4);
      *((void *)v21 + 3) = v23;
      *((void *)v21 + 4) = v24;
      (**(void (***)(void))(v23 - 8))();
    }
    else
    {
      long long v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((void *)v21 + 4) = *((void *)v22 + 4);
    }
  }
  return v4;
}

uint64_t sub_60B4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  if (*(void *)(v6 + 24)) {
    sub_616C(v6);
  }
  uint64_t result = a1 + a2[7];
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_616C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *sub_61BC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F4B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *((void *)v14 + 4);
    *((void *)v13 + 3) = v15;
    *((void *)v13 + 4) = v16;
    (**(void (***)(void))(v15 - 8))();
  }
  else
  {
    long long v17 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v17;
    *((void *)v13 + 4) = *((void *)v14 + 4);
  }
  uint64_t v18 = a3[7];
  long long v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)((char *)a2 + v18 + 24);
  if (v21)
  {
    uint64_t v22 = *((void *)v20 + 4);
    *((void *)v19 + 3) = v21;
    *((void *)v19 + 4) = v22;
    (**(void (***)(void))(v21 - 8))();
  }
  else
  {
    long long v23 = *((_OWORD *)v20 + 1);
    *(_OWORD *)long long v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v23;
    *((void *)v19 + 4) = *((void *)v20 + 4);
  }
  return a1;
}

void *sub_6314(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = *(void *)((char *)a2 + v10 + 24);
  if (*(void *)((char *)a1 + v10 + 24))
  {
    if (v13)
    {
      sub_64C8((uint64_t *)v11, v12);
      goto LABEL_8;
    }
    sub_616C(v11);
  }
  else if (v13)
  {
    *(void *)(v11 + 24) = v13;
    *(void *)(v11 + 32) = v12[4];
    (**(void (***)(uint64_t, char *))(v13 - 8))(v11, (char *)v12);
    goto LABEL_8;
  }
  long long v14 = *(_OWORD *)v12;
  long long v15 = *((_OWORD *)v12 + 1);
  *(void *)(v11 + 32) = v12[4];
  *(_OWORD *)uint64_t v11 = v14;
  *(_OWORD *)(v11 + 16) = v15;
LABEL_8:
  uint64_t v16 = a3[7];
  uint64_t v17 = (uint64_t)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *((void *)v18 + 3);
  if (!*(void *)((char *)a1 + v16 + 24))
  {
    if (v19)
    {
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = *((void *)v18 + 4);
      (**(void (***)(uint64_t, char *))(v19 - 8))(v17, v18);
      return a1;
    }
LABEL_14:
    long long v20 = *(_OWORD *)v18;
    long long v21 = *((_OWORD *)v18 + 1);
    *(void *)(v17 + 32) = *((void *)v18 + 4);
    *(_OWORD *)uint64_t v17 = v20;
    *(_OWORD *)(v17 + 16) = v21;
    return a1;
  }
  if (!v19)
  {
    sub_616C(v17);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v17, (uint64_t *)v18);
  return a1;
}

uint64_t *sub_64C8(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *sub_66F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  long long v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)long long v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((void *)v15 + 4) = *((void *)v16 + 4);
  return a1;
}

void *sub_67B8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (uint64_t)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (*(void *)((char *)a1 + v11 + 24)) {
    sub_616C(v12);
  }
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *((void *)v13 + 4);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  if (*(void *)((char *)a1 + v15 + 24)) {
    sub_616C((uint64_t)a1 + v15);
  }
  long long v17 = *(_OWORD *)((char *)a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)((char *)a2 + v15);
  *((_OWORD *)v16 + 1) = v17;
  *((void *)v16 + 4) = *(void *)((char *)a2 + v15 + 32);
  return a1;
}

uint64_t sub_68A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_68B8);
}

uint64_t sub_68B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_8F4B0();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_6940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6954);
}

uint64_t sub_6954(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_69D4()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithTake for ShelfPageError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_6A84(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_6AA4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_6AF4(uint64_t a1)
{
  uint64_t result = sub_6B4C((unint64_t *)&qword_BAC38, (void (*)(uint64_t))type metadata accessor for AcknowledgePrivacyAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_6B4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6B94()
{
  return sub_6B4C(&qword_BAC40, type metadata accessor for Size);
}

uint64_t sub_6BDC()
{
  return sub_6B4C(&qword_BAC48, type metadata accessor for Size);
}

uint64_t sub_6C24()
{
  return sub_6B4C(&qword_BAC50, type metadata accessor for Size);
}

uint64_t sub_6C6C()
{
  return sub_6B4C(&qword_BAC58, type metadata accessor for Context);
}

uint64_t sub_6CB4()
{
  return sub_6B4C(&qword_BAC60, type metadata accessor for Context);
}

uint64_t sub_6CFC()
{
  return sub_6B4C(&qword_BAC68, type metadata accessor for Context);
}

uint64_t sub_6D44()
{
  return sub_6B4C(&qword_BAC70, type metadata accessor for Kind);
}

uint64_t sub_6D8C()
{
  return sub_6B4C(&qword_BAC78, type metadata accessor for Kind);
}

uint64_t sub_6DD4()
{
  return sub_6B4C(&qword_BAC80, type metadata accessor for Kind);
}

uint64_t sub_6E1C(uint64_t a1, id *a2)
{
  uint64_t result = sub_8F9B0();
  *a2 = 0;
  return result;
}

uint64_t sub_6E94(uint64_t a1, id *a2)
{
  char v3 = sub_8F9C0();
  *a2 = 0;
  return v3 & 1;
}

NSString sub_6F14()
{
  sub_8F9D0();
  NSString v0 = sub_8F9A0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_6F4C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_8F9D0();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_6F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for AMSPurchaseType(uint64_t a1)
{
}

void sub_7008(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_70A0()
{
  return sub_8F330();
}

uint64_t sub_70D0()
{
  return swift_allocError();
}

uint64_t sub_70F0()
{
  return v0;
}

uint64_t sub_7158()
{
  return v0;
}

uint64_t sub_717C()
{
  return v0;
}

void *sub_718C(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = v4;
  return result;
}

uint64_t sub_719C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 88) = a4;
  return sub_8F320();
}

uint64_t sub_71C8()
{
  return v0;
}

uint64_t sub_71E0()
{
  return v0;
}

void sub_71F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 - 72) = a5;
}

uint64_t sub_7214()
{
  return v0;
}

uint64_t sub_722C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 72) = a1;
  *(void *)(v2 - 136) = a2;
  return sub_8F320();
}

uint64_t sub_725C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 72) = a1;
  *(void *)(v2 - 144) = a2;
  return sub_8F320();
}

uint64_t sub_728C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  v3[1] = a2;
  *(void *)(v4 - 72) = a1;
  *uint64_t v3 = a3;
  return sub_8F320();
}

uint64_t sub_72BC()
{
  return sub_8F330();
}

uint64_t sub_72EC()
{
  return sub_8F330();
}

uint64_t sub_7334()
{
  return v0;
}

void *sub_7348(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = v4;
  a2[1] = v2;
  a2[2] = v3;
  return result;
}

uint64_t sub_7364()
{
  return sub_8F320();
}

uint64_t sub_738C()
{
  return *(void *)v0;
}

uint64_t sub_73B0()
{
  return v0;
}

__n128 sub_73C8()
{
  __n128 result = *(__n128 *)(v0 - 128);
  long long v2 = *(_OWORD *)(v0 - 112);
  long long v3 = *(_OWORD *)(v0 - 96);
  uint64_t v4 = *(void *)(v0 - 136);
  *(__n128 *)uint64_t v4 = result;
  *(_OWORD *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 32) = v3;
  return result;
}

uint64_t sub_73E0()
{
  return v0;
}

uint64_t sub_73F4()
{
  return v0;
}

void *sub_741C(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = v4;
  return result;
}

void *sub_7430(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = v4;
  return result;
}

uint64_t sub_7444()
{
  return v0;
}

uint64_t sub_7458()
{
  return v0;
}

uint64_t sub_746C(uint64_t *a1)
{
  uint64_t v3 = sub_8F390();
  __chkstk_darwin(v3 - 8);
  sub_81CC();
  sub_8F550();
  uint64_t v4 = (void *)aBlock;
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  uint64_t v29 = (void *)type metadata accessor for AcknowledgePrivacyActionImplementation();
  uint64_t v25 = v1;
  uint64_t aBlock = v1;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_8F9D0();
    uint64_t v9 = v8;

    sub_8F380();
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    sub_8F370(v33);
    sub_83F8();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_83D8(MetatypeMetadata);
    sub_8250((uint64_t)v32);
    v34._countAndFlagsBits = 5972026;
    v34._object = (void *)0xE300000000000000;
    sub_8F370(v34);
    v32[3] = &type metadata for String;
    v32[0] = v7;
    v32[1] = v9;
    sub_8F360();
    sub_8250((uint64_t)v32);
    v11._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    sub_8F370(v35);
    sub_83F8();
    uint64_t v12 = swift_getMetatypeMetadata();
    sub_83D8(v12);
    sub_8250((uint64_t)v32);
    v11._countAndFlagsBits = 58;
  }
  v11._object = (void *)0xE100000000000000;
  sub_8F370(v11);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)&aBlock);
  uint64_t aBlock = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_8FDE0(41);
  swift_bridgeObjectRelease();
  uint64_t aBlock = 0xD000000000000027;
  unint64_t v27 = 0x800000000009AF20;
  uint64_t v14 = *a1;
  uint64_t v13 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v36._countAndFlagsBits = v14;
  v36._object = v13;
  sub_8FA10(v36);
  swift_bridgeObjectRelease();
  uint64_t v29 = &type metadata for String;
  sub_8F3B0();
  sub_8250((uint64_t)&aBlock);
  uint64_t aBlock = 0x3A746E756F636361;
  unint64_t v27 = 0xE900000000000020;
  v32[0] = v4;
  id v15 = v4;
  sub_5664(&qword_BAE48);
  v37._countAndFlagsBits = sub_8F9E0();
  sub_8FA10(v37);
  swift_bridgeObjectRelease();
  uint64_t v29 = &type metadata for String;
  sub_8F3B0();
  sub_8250((uint64_t)&aBlock);
  sub_43634();
  swift_bridgeObjectRelease();
  id v16 = objc_allocWithZone((Class)AMSAcknowledgePrivacyTask);
  id v17 = v15;
  swift_bridgeObjectRetain();
  id v18 = sub_82B0(v14, (uint64_t)v13, v4);
  id v19 = [v18 acknowledgePrivacy];

  sub_5664(&qword_BAE50);
  uint64_t v20 = sub_8F820();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v25;
  *(void *)(v21 + 24) = v20;
  v30 = sub_8354;
  uint64_t v31 = v21;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v27 = 1107296256;
  uint64_t v28 = sub_29210;
  uint64_t v29 = &unk_AEF28;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v19 addFinishBlock:v22];
  _Block_release(v22);
  uint64_t v29 = (void *)sub_8F610();
  v30 = (void (*)(char, uint64_t))&protocol witness table for SyncTaskScheduler;
  sub_8374(&aBlock);
  sub_8F600();
  uint64_t v23 = sub_8F790();

  swift_release();
  sub_616C((uint64_t)&aBlock);
  return v23;
}

void sub_794C(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_8F390();
  __chkstk_darwin(v5 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  Swift::String v34 = (void *)type metadata accessor for AcknowledgePrivacyActionImplementation();
  v41 = v34;
  unint64_t v39 = a3;
  swift_retain();
  id v6 = (id)AMSLogKey();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_8F9D0();
    uint64_t v10 = v9;

    sub_8F380();
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    sub_8F370(v42);
    sub_820C(&v39, (uint64_t)v41);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v36 = DynamicType;
    sub_8F360();
    sub_8250((uint64_t)&v36);
    v43._countAndFlagsBits = 5972026;
    v43._object = (void *)0xE300000000000000;
    sub_8F370(v43);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v36 = v8;
    uint64_t v37 = v10;
    sub_8F360();
    sub_8250((uint64_t)&v36);
    v12._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    sub_8F370(v44);
    sub_820C(&v39, (uint64_t)v41);
    uint64_t v13 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v36 = v13;
    sub_8F360();
    sub_8250((uint64_t)&v36);
    v12._countAndFlagsBits = 58;
  }
  v12._object = (void *)0xE100000000000000;
  sub_8F370(v12);
  sub_8F3A0();
  sub_616C((uint64_t)&v39);
  unint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  sub_8FDE0(26);
  swift_bridgeObjectRelease();
  unint64_t v39 = 0xD000000000000018;
  unint64_t v40 = 0x800000000009AF70;
  if (a1) {
    uint64_t v14 = 1702195828;
  }
  else {
    uint64_t v14 = 0x65736C6166;
  }
  if (a1) {
    id v15 = (void *)0xE400000000000000;
  }
  else {
    id v15 = (void *)0xE500000000000000;
  }
  type metadata accessor for Log();
  v45._countAndFlagsBits = v14;
  v45._object = v15;
  sub_8FA10(v45);
  swift_bridgeObjectRelease();
  v41 = &type metadata for String;
  sub_8F3B0();
  sub_8250((uint64_t)&v39);
  sub_43634();
  swift_bridgeObjectRelease();
  if (a2)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    v41 = v34;
    unint64_t v39 = a3;
    swift_retain();
    swift_errorRetain();
    id v16 = (id)AMSLogKey();
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = sub_8F9D0();
      uint64_t v20 = v19;

      sub_8F380();
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      sub_8F370(v46);
      sub_820C(&v39, (uint64_t)v41);
      uint64_t v21 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v36 = v21;
      sub_8F360();
      sub_8250((uint64_t)&v36);
      v47._countAndFlagsBits = 5972026;
      v47._object = (void *)0xE300000000000000;
      sub_8F370(v47);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v36 = v18;
      uint64_t v37 = v20;
      sub_8F360();
      sub_8250((uint64_t)&v36);
      v22._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      sub_8F370(v48);
      sub_820C(&v39, (uint64_t)v41);
      uint64_t v23 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v36 = v23;
      sub_8F360();
      sub_8250((uint64_t)&v36);
      v22._countAndFlagsBits = 58;
    }
    v22._object = (void *)0xE100000000000000;
    sub_8F370(v22);
    sub_8F3A0();
    sub_616C((uint64_t)&v39);
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    v49._countAndFlagsBits = 0x203A726F727245;
    v49._object = (void *)0xE700000000000000;
    sub_8FA10(v49);
    uint64_t v36 = a2;
    sub_5664(&qword_BBB50);
    sub_8FE60();
    v41 = &type metadata for String;
    sub_8F3B0();
    sub_8250((uint64_t)&v39);
    sub_4366C();
    swift_bridgeObjectRelease();
    sub_8F7D0();
    swift_errorRelease();
  }
  else if (a1)
  {
    LOBYTE(v39) = 1;
    sub_8F7F0();
  }
  else
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    v41 = v34;
    unint64_t v39 = a3;
    swift_retain();
    id v24 = (id)AMSLogKey();
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = sub_8F9D0();
      uint64_t v28 = v27;

      sub_8F380();
      v50._countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      sub_8F370(v50);
      sub_820C(&v39, (uint64_t)v41);
      uint64_t v29 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v36 = v29;
      sub_8F360();
      sub_8250((uint64_t)&v36);
      v51._countAndFlagsBits = 5972026;
      v51._object = (void *)0xE300000000000000;
      sub_8F370(v51);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v36 = v26;
      uint64_t v37 = v28;
      sub_8F360();
      sub_8250((uint64_t)&v36);
      v30._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v52._countAndFlagsBits = 0;
      v52._object = (void *)0xE000000000000000;
      sub_8F370(v52);
      sub_820C(&v39, (uint64_t)v41);
      uint64_t v31 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v36 = v31;
      sub_8F360();
      sub_8250((uint64_t)&v36);
      v30._countAndFlagsBits = 58;
    }
    v30._object = (void *)0xE100000000000000;
    sub_8F370(v30);
    sub_8F3A0();
    sub_616C((uint64_t)&v39);
    v41 = &type metadata for String;
    unint64_t v39 = 0xD000000000000019;
    unint64_t v40 = 0x800000000009AF90;
    sub_8F3B0();
    sub_8250((uint64_t)&v39);
    sub_4366C();
    swift_bridgeObjectRelease();
    NSString v32 = sub_8F9A0();
    id v33 = (id)AMSError();

    sub_8F7D0();
  }
}

char *sub_8108@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *result;
  *(void *)(a2 + 24) = &type metadata for Bool;
  *(unsigned char *)a2 = v2;
  return result;
}

uint64_t sub_8120()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for AcknowledgePrivacyActionImplementation()
{
  return self;
}

unint64_t sub_8158()
{
  unint64_t result = qword_BAC38;
  if (!qword_BAC38)
  {
    type metadata accessor for AcknowledgePrivacyAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAC38);
  }
  return result;
}

uint64_t sub_81A8(uint64_t *a1)
{
  return sub_746C(a1);
}

unint64_t sub_81CC()
{
  unint64_t result = qword_BAE40;
  if (!qword_BAE40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BAE40);
  }
  return result;
}

void *sub_820C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_8250(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BC780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_82B0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithPrivacyIdentifier:v5 account:a3];

  return v6;
}

uint64_t sub_8314()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_8354(char a1, uint64_t a2)
{
  sub_794C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_835C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_836C()
{
  return swift_release();
}

uint64_t *sub_8374(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_83D8(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return sub_8F360();
}

uint64_t sub_83F8()
{
  sub_820C((void *)(v0 - 160), *(void *)(v0 - 136));
  return swift_getDynamicType();
}

uint64_t sub_8430(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AE3B8;
  v6._object = a2;
  unint64_t v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_847C(char a1)
{
  if (!a1) {
    return 0x746C7561666564;
  }
  if (a1 == 1) {
    return 0x657263536C6C7566;
  }
  return 0xD000000000000011;
}

uint64_t sub_84DC(char *a1, char *a2)
{
  return sub_554DC(*a1, *a2);
}

Swift::Int sub_84E8()
{
  return sub_55900();
}

uint64_t sub_84F0(uint64_t a1)
{
  return sub_56140(a1, *v1);
}

Swift::Int sub_84F8()
{
  return sub_56530();
}

uint64_t sub_8500@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_8430(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_8530@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_847C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_855C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_8F4B0();
  Swift::String v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void sub_85CC()
{
  sub_7140();
  Swift::OpaquePointer v3 = v2;
  uint64_t v4 = sub_8F4B0();
  sub_7084();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_B800();
  uint64_t v8 = type metadata accessor for ActivityShelfPageAction();
  uint64_t v9 = (uint64_t)&v3[*(int *)(v8 + 28)];
  sub_8EA70();
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(void *)(v9 + 32) = 0;
  swift_allocObject();
  sub_B830();
  sub_3AD8();
  if (v0)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v10();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v11();
    sub_9630(v9);
  }
  else
  {
    uint64_t v12 = v6;
    uint64_t v13 = &v3[*(int *)(v8 + 24)];
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 32))(v13, v1, v4);
    sub_B830();
    uint64_t v14 = sub_3CFF0();
    *Swift::OpaquePointer v3 = v14 & 1;
    __chkstk_darwin(v14);
    sub_B830();
    sub_3B0C();
    sub_9698((uint64_t)&v28, v9);
    sub_B830();
    sub_8A00(v15, v16, v17, v18, v19, v20, v21, v22, v27, (int)v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13));
    char v24 = v23;
    swift_release();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v25();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v26();
    v3[1] = v24;
  }
  sub_7118();
}

void sub_89CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8A00(a1, a2, a3, (uint64_t)sub_974C, (uint64_t)&_s9SelectionV5StyleON, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_8A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_7140();
  uint64_t v15 = v14;
  uint64_t v16 = sub_B6E8();
  sub_7084();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (v15(), sub_B758(), a13 == 3))
  {
    sub_8F8E0();
    sub_B59C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v20 = sub_70D0();
    sub_B71C(v20, v21);
    sub_7170();
    sub_7130();
    v22();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v23 = sub_70F0();
    v24(v23);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v13, v16);
  }
  sub_7118();
}

void sub_8B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8BC0(a1, a2, a3, (uint64_t)sub_9798, (uint64_t)&type metadata for AlertAction.Style, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_8B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8BC0(a1, a2, a3, (uint64_t)sub_97E4, (uint64_t)&type metadata for Button.Style, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_8BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_7140();
  uint64_t v14 = v13;
  sub_B6E8();
  sub_7084();
  __chkstk_darwin(v15);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (v14(), sub_B758(), a13 == 2))
  {
    sub_8F8E0();
    sub_B59C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v16 = sub_70D0();
    sub_B71C(v16, v17);
    sub_7170();
    sub_7130();
    v18();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v19 = sub_7158();
    v20(v19);
  }
  else
  {
    uint64_t v21 = sub_7158();
    v22(v21);
  }
  sub_7118();
}

void sub_8D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8DC4(a1, a2, a3, (uint64_t)type metadata accessor for Kind, (uint64_t)&qword_BAC70, (uint64_t)type metadata accessor for Kind, (uint64_t)&unk_91C38, a8, vars0, vars8);
}

void sub_8D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8DC4(a1, a2, a3, (uint64_t)type metadata accessor for Context, (uint64_t)&qword_BAC58, (uint64_t)type metadata accessor for Context, (uint64_t)&unk_91C74, a8, vars0, vars8);
}

void sub_8DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_7140();
  uint64_t v23 = v10;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_B6E8();
  sub_7084();
  __chkstk_darwin(v15);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (v14(0), sub_B59C(v12, v23), sub_8F290(), !a10))
  {
    sub_8F8E0();
    sub_B59C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v18 = sub_70D0();
    sub_B71C(v18, v19);
    sub_7170();
    sub_7130();
    v20();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v21 = sub_B818();
    v22(v21);
  }
  else
  {
    uint64_t v16 = sub_B818();
    v17(v16);
  }
  sub_7118();
}

void sub_8F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8DC4(a1, a2, a3, (uint64_t)type metadata accessor for Size, (uint64_t)&qword_BAC40, (uint64_t)type metadata accessor for Size, (uint64_t)&unk_91CB0, a8, vars0, vars8);
}

void sub_8F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8BC0(a1, a2, a3, (uint64_t)sub_ABC8, (uint64_t)&unk_B23A8, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_8FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8BC0(a1, a2, a3, (uint64_t)sub_AC14, (uint64_t)&unk_B2438, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_8FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8A00(a1, a2, a3, (uint64_t)sub_A7A0, (uint64_t)&unk_B0B68, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_9028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_91E8(a1, a2, a3, (uint64_t)sub_A7EC, (uint64_t)&type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_905C()
{
  sub_B6E8();
  sub_7084();
  __chkstk_darwin(v0);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (sub_A754(), sub_8F290(), uint64_t v1 = v10, v10 == 4))
  {
    uint64_t v1 = sub_8F8E0();
    sub_B59C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v2 = sub_70D0();
    sub_B83C(v2, v3);
    sub_7170();
    sub_7130();
    v4();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v5 = sub_B7D8();
    v6(v5);
  }
  else
  {
    uint64_t v7 = sub_73F4();
    v8(v7);
  }
  return v1;
}

void sub_91B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_91E8(a1, a2, a3, (uint64_t)sub_AB7C, (uint64_t)&unk_B1590, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_91E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_7140();
  uint64_t v14 = v13;
  sub_B6E8();
  sub_7084();
  __chkstk_darwin(v15);
  sub_70A0();
  if (sub_8F2F0() & 1) != 0 || (v14(), sub_B758(), (a13))
  {
    sub_8F8E0();
    sub_B59C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v16 = sub_70D0();
    sub_B71C(v16, v17);
    sub_7170();
    sub_7130();
    v18();
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  uint64_t v19 = sub_70F0();
  v20(v19);
  sub_7118();
}

void sub_931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8A00(a1, a2, a3, (uint64_t)sub_A8D0, (uint64_t)&unk_B13B0, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_9350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_91E8(a1, a2, a3, (uint64_t)sub_A838, (uint64_t)&unk_B1320, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_9384()
{
  sub_B6E8();
  sub_7084();
  __chkstk_darwin(v0);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (sub_AA4C(), sub_8F290(), uint64_t v1 = v10, v10 == 5))
  {
    uint64_t v1 = sub_8F8E0();
    sub_B59C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    uint64_t v2 = sub_70D0();
    sub_B83C(v2, v3);
    sub_7170();
    sub_7130();
    v4();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v5 = sub_B7D8();
    v6(v5);
  }
  else
  {
    uint64_t v7 = sub_73F4();
    v8(v7);
  }
  return v1;
}

void sub_94DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8A00(a1, a2, a3, (uint64_t)sub_A9B4, (uint64_t)&unk_B1290, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_9510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8A00(a1, a2, a3, (uint64_t)sub_A91C, (uint64_t)&unk_B1200, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_9544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8BC0(a1, a2, a3, (uint64_t)sub_AB30, (uint64_t)&unk_B1440, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_9578()
{
}

uint64_t type metadata accessor for ActivityShelfPageAction()
{
  uint64_t result = qword_BAF70;
  if (!qword_BAF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_95D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_A5F0(a1, a2, (uint64_t (*)(void))&type metadata accessor for ActionMetrics, a3);
}

uint64_t sub_95F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_A5F0(a1, *(void *)(v2 + 16), (uint64_t (*)(void))&type metadata accessor for ActionMetrics, a2);
}

uint64_t sub_9630(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BAAD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_9690(uint64_t a1)
{
  return sub_55D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_9698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_9700()
{
  unint64_t result = qword_BAE58;
  if (!qword_BAE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE58);
  }
  return result;
}

unint64_t sub_974C()
{
  unint64_t result = qword_BAE60;
  if (!qword_BAE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE60);
  }
  return result;
}

unint64_t sub_9798()
{
  unint64_t result = qword_BAE68;
  if (!qword_BAE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE68);
  }
  return result;
}

unint64_t sub_97E4()
{
  unint64_t result = qword_BAE70;
  if (!qword_BAE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE70);
  }
  return result;
}

void sub_9830()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_B634(v4, v9);
  v6(v5);
  uint64_t v7 = sub_B660();
  v8(v7);
  sub_991C();
  sub_B7BC();
  if (v1)
  {
    swift_errorRelease();
    *uint64_t v0 = 0;
    v0[1] = 0;
    v0[2] = 0;
    v0[3] = 1;
    v0[5] = 0;
    v0[6] = 0;
    v0[4] = 0;
  }
  sub_B744();
}

unint64_t sub_991C()
{
  unint64_t result = qword_BAE78;
  if (!qword_BAE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE78);
  }
  return result;
}

void sub_9968()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_B634(v4, v10);
  v6(v5);
  uint64_t v7 = sub_B660();
  v8(v7);
  sub_B6D8();
  sub_44EC0(v9);
  if (v1)
  {
    swift_errorRelease();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)uint64_t v0 = 0u;
  }
  sub_B744();
}

void sub_9A44()
{
}

void sub_9A5C()
{
}

void sub_9A74()
{
  sub_B730();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_8F3F0();
  sub_7084();
  __chkstk_darwin(v4);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v5);
  uint64_t v7 = sub_B634(v6, v12);
  v8(v7);
  uint64_t v9 = sub_B660();
  v10(v9);
  uint64_t v11 = sub_B6D8();
  v1(v11);
  if (v3) {
    swift_errorRelease();
  }
  sub_B744();
}

void sub_9B6C()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v1);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v2);
  uint64_t v4 = sub_B634(v3, v11);
  v5(v4);
  uint64_t v6 = sub_B660();
  v7(v6);
  uint64_t v8 = sub_B6D8();
  sub_57AD0(v8, v9, v10);
  if (v0)
  {
    swift_errorRelease();
    sub_B778((__n128)xmmword_91D80);
  }
  sub_B744();
}

uint64_t sub_9C44(uint64_t a1, uint64_t a2)
{
  return sub_A39C(a1, a2, (void (*)(void))&type metadata accessor for Artwork, &qword_BAEA0, (void (*)(uint64_t))&type metadata accessor for Artwork);
}

void sub_9C8C()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_B634(v4, v12);
  v6(v5);
  uint64_t v7 = sub_B660();
  v8(v7);
  sub_A884();
  sub_B7BC();
  if (v1)
  {
    swift_errorRelease();
    long long v9 = xmmword_91D90;
    long long v10 = 0uLL;
    long long v11 = 0uLL;
  }
  else
  {
    long long v9 = v13;
    long long v10 = v14;
    long long v11 = v15;
  }
  *uint64_t v0 = v9;
  v0[1] = v10;
  v0[2] = v11;
  sub_B744();
}

void sub_9D88()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_B634(v4, v9);
  v6(v5);
  uint64_t v7 = sub_B660();
  v8(v7);
  sub_A968();
  sub_B7BC();
  if (v1)
  {
    swift_errorRelease();
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)uint64_t v0 = 0u;
    *(unsigned char *)(v0 + 48) = -2;
  }
  sub_B744();
}

uint64_t sub_9E74(uint64_t a1, uint64_t a2)
{
  return sub_9EB4(a1, a2, (void (*)(uint64_t))sub_AA00);
}

uint64_t sub_9E94(uint64_t a1, uint64_t a2)
{
  return sub_9EB4(a1, a2, (void (*)(uint64_t))sub_AA98);
}

uint64_t sub_9EB4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_8F3F0();
  sub_7084();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_B7F0();
  uint64_t v12 = v11 - v10;
  sub_8F320();
  sub_7084();
  __n128 v14 = __chkstk_darwin(v13);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, a2, v6);
  a3(v17);
  return sub_8FD10();
}

void sub_A014()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_B634(v4, v13);
  v6(v5);
  uint64_t v7 = sub_B660();
  v8(v7);
  sub_B6D8();
  sub_57DE8(v9);
  if (v1)
  {
    swift_errorRelease();
    long long v10 = xmmword_91D80;
    long long v11 = 0uLL;
    long long v12 = 0uLL;
  }
  else
  {
    long long v10 = v14;
    long long v11 = v15;
    long long v12 = v16;
  }
  *uint64_t v0 = v10;
  v0[1] = v11;
  v0[2] = v12;
  sub_B744();
}

uint64_t sub_A104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F3F0();
  sub_7084();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_B7F0();
  uint64_t v10 = v9 - v8;
  sub_8F320();
  sub_7084();
  __n128 v12 = __chkstk_darwin(v11);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v14 + 16))(&v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v4);
  sub_AAE4();
  sub_8FD10();
  if (v17[31]) {
    int v15 = 256;
  }
  else {
    int v15 = 0;
  }
  return v15 | v17[30];
}

void sub_A268()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_B634(v4, v10);
  v6(v5);
  uint64_t v7 = sub_B660();
  v8(v7);
  sub_B6D8();
  sub_57144(v9);
  if (v1)
  {
    swift_errorRelease();
    bzero(v0, 0x1C0uLL);
    v0[56] = 1;
    bzero(v0 + 57, 0xDAuLL);
  }
  sub_B744();
}

uint64_t sub_A354(uint64_t a1, uint64_t a2)
{
  return sub_A39C(a1, a2, (void (*)(void))&type metadata accessor for DynamicArtwork, &qword_BAEF0, (void (*)(uint64_t))&type metadata accessor for DynamicArtwork);
}

uint64_t sub_A39C(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v12 = sub_8F3F0();
  sub_7084();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_B794();
  sub_7084();
  __chkstk_darwin(v16);
  sub_B800();
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v6, a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v5, a2, v12);
  a3(0);
  sub_B59C(a4, a5);
  sub_8FD10();
  return v19;
}

void sub_A4F8()
{
  sub_B730();
  sub_B6A4();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B67C();
  sub_7084();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_B634(v4, v10);
  v6(v5);
  uint64_t v7 = sub_B660();
  v8(v7);
  sub_B6D8();
  sub_5B4A0(v9);
  if (v1)
  {
    swift_errorRelease();
    bzero(v0, 0x2F4uLL);
  }
  sub_B744();
}

uint64_t sub_A5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_A5F0(a1, a2, (uint64_t (*)(void))&type metadata accessor for PageMetrics, a3);
}

uint64_t sub_A5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_8F3F0();
  sub_7084();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v12 = sub_B794();
  sub_7084();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_B7F0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, a1, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, a2, v8);
  sub_8F590();
  return sub_56F8(a4, 0, 1, v19);
}

unint64_t sub_A754()
{
  unint64_t result = qword_BAE80;
  if (!qword_BAE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE80);
  }
  return result;
}

unint64_t sub_A7A0()
{
  unint64_t result = qword_BAE88;
  if (!qword_BAE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE88);
  }
  return result;
}

unint64_t sub_A7EC()
{
  unint64_t result = qword_BAE90;
  if (!qword_BAE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE90);
  }
  return result;
}

unint64_t sub_A838()
{
  unint64_t result = qword_BAE98;
  if (!qword_BAE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAE98);
  }
  return result;
}

unint64_t sub_A884()
{
  unint64_t result = qword_BAEA8;
  if (!qword_BAEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEA8);
  }
  return result;
}

unint64_t sub_A8D0()
{
  unint64_t result = qword_BAEB0;
  if (!qword_BAEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEB0);
  }
  return result;
}

unint64_t sub_A91C()
{
  unint64_t result = qword_BAEB8;
  if (!qword_BAEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEB8);
  }
  return result;
}

unint64_t sub_A968()
{
  unint64_t result = qword_BAEC0;
  if (!qword_BAEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEC0);
  }
  return result;
}

unint64_t sub_A9B4()
{
  unint64_t result = qword_BAEC8;
  if (!qword_BAEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEC8);
  }
  return result;
}

unint64_t sub_AA00()
{
  unint64_t result = qword_BAED0;
  if (!qword_BAED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAED0);
  }
  return result;
}

unint64_t sub_AA4C()
{
  unint64_t result = qword_BAED8;
  if (!qword_BAED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAED8);
  }
  return result;
}

unint64_t sub_AA98()
{
  unint64_t result = qword_BAEE0;
  if (!qword_BAEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEE0);
  }
  return result;
}

unint64_t sub_AAE4()
{
  unint64_t result = qword_BAEE8;
  if (!qword_BAEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEE8);
  }
  return result;
}

unint64_t sub_AB30()
{
  unint64_t result = qword_BAEF8;
  if (!qword_BAEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAEF8);
  }
  return result;
}

unint64_t sub_AB7C()
{
  unint64_t result = qword_BAF00;
  if (!qword_BAF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAF00);
  }
  return result;
}

unint64_t sub_ABC8()
{
  unint64_t result = qword_BAF08;
  if (!qword_BAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAF08);
  }
  return result;
}

unint64_t sub_AC14()
{
  unint64_t result = qword_BAF10;
  if (!qword_BAF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAF10);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ActivityShelfPageAction.Style(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityShelfPageAction.Style(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActivityShelfPageAction.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xADC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_ADE8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_ADF4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActivityShelfPageAction.Style()
{
  return &type metadata for ActivityShelfPageAction.Style;
}

uint64_t *sub_AE0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    unsigned int v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_8F4B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 24);
    if (v14)
    {
      uint64_t v15 = *((void *)v13 + 4);
      *((void *)v12 + 3) = v14;
      *((void *)v12 + 4) = v15;
      (**(void (***)(void))(v14 - 8))();
    }
    else
    {
      long long v17 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v17;
      *((void *)v12 + 4) = *((void *)v13 + 4);
    }
  }
  return v4;
}

uint64_t sub_AF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t result = a1 + *(int *)(a2 + 28);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

_WORD *sub_AFDC(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)((char *)a2 + v10 + 24);
  if (v13)
  {
    uint64_t v14 = *((void *)v12 + 4);
    *((void *)v11 + 3) = v13;
    *((void *)v11 + 4) = v14;
    (**(void (***)(void))(v13 - 8))();
  }
  else
  {
    long long v15 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v15;
    *((void *)v11 + 4) = *((void *)v12 + 4);
  }
  return a1;
}

unsigned char *sub_B0C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (uint64_t)&a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *((void *)v12 + 3);
  if (!*(void *)&a1[v10 + 24])
  {
    if (v13)
    {
      *(void *)(v11 + 24) = v13;
      *(void *)(v11 + 32) = *((void *)v12 + 4);
      (**(void (***)(uint64_t, unsigned char *))(v13 - 8))(v11, v12);
      return a1;
    }
LABEL_7:
    long long v14 = *(_OWORD *)v12;
    long long v15 = *((_OWORD *)v12 + 1);
    *(void *)(v11 + 32) = *((void *)v12 + 4);
    *(_OWORD *)uint64_t v11 = v14;
    *(_OWORD *)(v11 + 16) = v15;
    return a1;
  }
  if (!v13)
  {
    sub_616C(v11);
    goto LABEL_7;
  }
  sub_64C8((uint64_t *)v11, (uint64_t *)v12);
  return a1;
}

_WORD *sub_B1DC(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  return a1;
}

unsigned char *sub_B284(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = &a1[v10];
  if (*(void *)&a1[v10 + 24]) {
    sub_616C((uint64_t)&a1[v10]);
  }
  long long v12 = *(_OWORD *)&a2[v10 + 16];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)&a2[v10];
  *((_OWORD *)v11 + 1) = v12;
  *((void *)v11 + 4) = *(void *)&a2[v10 + 32];
  return a1;
}

uint64_t sub_B344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B358);
}

uint64_t sub_B358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return sub_5754(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 28) + 24);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_B3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B40C);
}

void sub_B40C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    sub_56F8(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 24) = a2;
  }
}

uint64_t sub_B49C()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_B544(uint64_t a1)
{
  uint64_t result = sub_B59C((unint64_t *)&qword_BAFB0, (void (*)(uint64_t))type metadata accessor for ActivityShelfPageAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_B59C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_B5E8()
{
  unint64_t result = qword_BAFB8;
  if (!qword_BAFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAFB8);
  }
  return result;
}

char *sub_B634@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_B660()
{
  return v0;
}

uint64_t sub_B67C()
{
  return sub_8F320();
}

uint64_t sub_B6A4()
{
  return sub_8F3F0();
}

uint64_t sub_B6D8()
{
  return v0;
}

uint64_t sub_B6E8()
{
  return sub_8F320();
}

void *sub_B71C(uint64_t a1, void *a2)
{
  unint64_t result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = *(void *)(v4 - 88);
  return result;
}

uint64_t sub_B758()
{
  return sub_8F290();
}

void sub_B778(__n128 a1)
{
  *(__n128 *)uint64_t v1 = a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
}

uint64_t sub_B794()
{
  return sub_8F320();
}

uint64_t sub_B7BC()
{
  return sub_8FD10();
}

uint64_t sub_B7D8()
{
  return v0;
}

uint64_t sub_B818()
{
  return v0;
}

void *sub_B83C(uint64_t a1, void *a2)
{
  unint64_t result = a2;
  *a2 = v4;
  a2[1] = v2;
  a2[2] = v3;
  return result;
}

uint64_t sub_B850()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_7B6F0();
    swift_unknownObjectRelease();
  }
  sub_5664(&qword_BB0A0);
  return sub_8F7C0();
}

uint64_t sub_B8BC()
{
  sub_B990(v0 + 16);

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for ActivityShelfPageActionImplementation()
{
  return self;
}

unint64_t sub_B91C()
{
  unint64_t result = qword_BAFB0;
  if (!qword_BAFB0)
  {
    type metadata accessor for ActivityShelfPageAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAFB0);
  }
  return result;
}

uint64_t sub_B96C()
{
  return sub_B850();
}

uint64_t sub_B990(uint64_t a1)
{
  return a1;
}

uint64_t sub_B9B8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AE420;
  v6._object = a2;
  unint64_t v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_BA04(char a1)
{
  if (!a1) {
    return 0x6C65636E6163;
  }
  if (a1 == 1) {
    return 0x746C7561666564;
  }
  return 0x7463757274736564;
}

uint64_t sub_BA60(char *a1, char *a2)
{
  return sub_556DC(*a1, *a2);
}

Swift::Int sub_BA6C()
{
  return sub_5590C();
}

uint64_t sub_BA74(uint64_t a1)
{
  return sub_56270(a1, *v1);
}

Swift::Int sub_BA7C()
{
  return sub_56440();
}

uint64_t sub_BA84@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_B9B8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_BAB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_BA04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_BAE0@<X0>(uint64_t a1@<X8>)
{
  sub_8EA70();
  swift_allocObject();
  sub_8EBF0();
  swift_allocObject();
  uint64_t v3 = sub_3CEE4();
  if (v1)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v5();
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v6();
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    __chkstk_darwin(v3);
    sub_C3C4(1969710451);
    sub_3B0C();
    sub_BEB0((uint64_t)&v20, a1 + 16);
    unint64_t v8 = sub_C3C4(1819898995);
    sub_89CC(v8, v9, v10, v11, v12, v13, v14, v15);
    *(unsigned char *)(a1 + 56) = v16;
    __chkstk_darwin(v16);
    sub_C3C4(1819568500);
    sub_3B40();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v17();
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v18();
    return sub_573C(&v19, a1 + 64);
  }
}

uint64_t sub_BE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 88))(a1, a3);
}

uint64_t sub_BE98@<X0>(uint64_t a1@<X8>)
{
  return sub_BAE0(a1);
}

uint64_t sub_BEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_BF18(uint64_t a1)
{
  return sub_BE20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unsigned char *_s9SelectionV5StyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBFECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SelectionV5StyleOMa()
{
  return &_s9SelectionV5StyleON;
}

uint64_t _s9SelectionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }

  return sub_616C(a1 + 64);
}

uint64_t _s9SelectionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = *(void *)(v5 + 32);
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
  return a1;
}

uint64_t _s9SelectionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_616C(a1 + 16);
    goto LABEL_7;
  }
  sub_64C8((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  sub_64C8((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  return a1;
}

void *_s9SelectionVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t _s9SelectionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  sub_616C(a1 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t _s9SelectionVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9SelectionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s9SelectionVMa()
{
  return &_s9SelectionVN;
}

unint64_t sub_C378()
{
  unint64_t result = qword_BB0A8;
  if (!qword_BB0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB0A8);
  }
  return result;
}

unint64_t sub_C3C4(uint64_t a1)
{
  return a1 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
}

uint64_t sub_C3D4(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_AE488;
  v7._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_C428(char a1)
{
  if (a1) {
    return 0x7472656C61;
  }
  else {
    return 0x68536E6F69746361;
  }
}

uint64_t sub_C464(char *a1, char *a2)
{
  return sub_557D8(*a1, *a2);
}

Swift::Int sub_C470()
{
  return sub_55918();
}

uint64_t sub_C478()
{
  return sub_562F0();
}

Swift::Int sub_C480()
{
  return sub_563CC();
}

uint64_t sub_C488@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_C3D4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_C4B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_C428(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_C4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_8F4B0();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_C554@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_B7F0();
  sub_8EBF0();
  swift_allocObject();
  uint64_t v7 = type metadata accessor for AlertAction();
  uint64_t v27 = a1;
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v8();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v9();
  }
  else
  {
    uint64_t v11 = *(uint64_t (**)(void))(v6 + 32);
    uint64_t v30 = a2 + *(int *)(v7 + 32);
    uint64_t v12 = v11();
    __chkstk_darwin(v12);
    sub_E1B4();
    sub_3B40();
    uint64_t v13 = sub_CC48((uint64_t)&v29, a2);
    __chkstk_darwin(v13);
    *(void *)&v26[-16] = a1;
    sub_3B74(0x6F697463656C6573, 0xEA0000000000736ELL, v7, (uint64_t)sub_D644, (uint64_t)&v26[-32], v14, v15, v16);
    *(void *)(a2 + 40) = v17;
    sub_8B58(0x656C797473, 0xE500000000000000, v7, v18, v19, v20, v21, v22);
    *(unsigned char *)(a2 + 48) = v23 & 1;
    __chkstk_darwin(v23);
    sub_E1B4();
    sub_3B40();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v24();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v25 + 8))(a1);
    return sub_CC48((uint64_t)&v28, a2 + 56);
  }
}

uint64_t sub_CA10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 16))(&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F490();
  uint64_t v13 = sub_8F4B0();
  return sub_56F8(a3, 0, 1, v13);
}

uint64_t sub_CBC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_C554(a1, a2);
}

uint64_t type metadata accessor for AlertAction()
{
  uint64_t result = qword_BB110;
  if (!qword_BB110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_CC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_CA10(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_CC2C(uint64_t a1)
{
  return sub_BE20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_CC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664((uint64_t *)&unk_BAAE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_CCB0(uint64_t a1, uint64_t a2)
{
  return sub_CCD0(a1, a2);
}

uint64_t sub_CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5664(&qword_BB0B0);
  __chkstk_darwin(v3 - 8);
  sub_B7F0();
  uint64_t v6 = v5 - v4;
  sub_8F2D0();
  uint64_t v7 = sub_8F8D0();
  uint64_t v8 = sub_5754(v6, 1, v7);
  if (v8 == 1)
  {
    sub_D68C(v6, &qword_BB0B0);
    return 0;
  }
  else
  {
    __chkstk_darwin(v8);
    *(&v11 - 2) = a2;
    uint64_t v9 = sub_8F8C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_CE18(uint64_t a1, uint64_t a2)
{
  return sub_CCD0(a1, a2);
}

uint64_t sub_CE38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5664(&qword_BB0B0);
  __chkstk_darwin(v3 - 8);
  sub_B7F0();
  uint64_t v6 = v5 - v4;
  sub_8F2D0();
  uint64_t v7 = sub_8F8D0();
  uint64_t v8 = sub_5754(v6, 1, v7);
  if (v8 == 1)
  {
    sub_D68C(v6, &qword_BB0B0);
    return 0;
  }
  else
  {
    __chkstk_darwin(v8);
    *(&v11 - 2) = a2;
    type metadata accessor for Shelf();
    uint64_t v9 = sub_8F8C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  return v9;
}

double sub_CF8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_8F3F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8F320();
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_BAE0(a3);
  if (v3)
  {
    swift_errorRelease();
    *(void *)(a3 + 96) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_D130@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_8F3F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8F320();
  __n128 v12 = __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))((char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_8EB20();
  if (v3)
  {
    swift_errorRelease();
    *(void *)(a3 + 80) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

double sub_D2D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v7 = sub_8F3F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8F320();
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))(v14, a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_57AD0((uint64_t)v14, (uint64_t)v10, (uint64_t)a3);
  if (v3)
  {
    swift_errorRelease();
    double result = 0.0;
    *a3 = xmmword_91D80;
    a3[1] = 0u;
    a3[2] = 0u;
    a3[3] = 0u;
    a3[4] = 0u;
    a3[5] = 0u;
    a3[6] = 0u;
    a3[7] = 0u;
    a3[8] = 0u;
  }
  return result;
}

uint64_t sub_D484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_8F3F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8F320();
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))(v14, a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_50CFC((uint64_t)v14, (uint64_t)v10, a3);
  if (v3)
  {
    swift_errorRelease();
    uint64_t v16 = 1;
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = type metadata accessor for Shelf();
  return sub_56F8((uint64_t)a3, v16, 1, v17);
}

uint64_t sub_D644@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_CCD0(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_D68C(uint64_t a1, uint64_t *a2)
{
  sub_5664(a2);
  sub_B6C4();
  sub_7358();
  v3();
  return a1;
}

double sub_D6D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_CF8C(a1, *(void *)(v2 + 16), a2);
}

double sub_D6F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_D130(a1, *(void *)(v2 + 16), a2);
}

double sub_D710@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_D2D4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_D72C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_D484(a1, *(void *)(v2 + 16), a2);
}

uint64_t getEnumTagSinglePayload for AlertAction.Style(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AlertAction.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD89CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_D8C4(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AlertAction.Style()
{
  return &type metadata for AlertAction.Style;
}

uint64_t sub_D8E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(void *)(a1 + 32) = a2[4];
    }
    *(void *)(v4 + 40) = a2[5];
    *(unsigned char *)(v4 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a2[10];
    swift_bridgeObjectRetain();
    if (v11)
    {
      uint64_t v12 = a2[11];
      *(void *)(v4 + 80) = v11;
      *(void *)(v4 + 88) = v12;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(v4 + 56, (uint64_t)(a2 + 7), v11);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(v4 + 72) = v13;
      *(void *)(v4 + 88) = a2[11];
    }
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_8F4B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_DA7C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_616C(a1);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80)) {
    sub_616C(a1 + 56);
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_8F4B0();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_DB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v10;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56, v9);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_DC60(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_64C8((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    sub_616C(a1);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  uint64_t v9 = *((void *)a2 + 10);
  if (!*(void *)(a1 + 80))
  {
    if (v9)
    {
      *(void *)(a1 + 80) = v9;
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, (uint64_t)a2 + 56);
      goto LABEL_15;
    }
LABEL_14:
    long long v10 = *(long long *)((char *)a2 + 56);
    long long v11 = *(long long *)((char *)a2 + 72);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(_OWORD *)(a1 + 56) = v10;
    *(_OWORD *)(a1 + 72) = v11;
    goto LABEL_15;
  }
  if (!v9)
  {
    sub_616C(a1 + 56);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)(a1 + 56), (uint64_t *)a2 + 7);
LABEL_15:
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t)a2 + v12;
  uint64_t v15 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t sub_DE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_DEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24)) {
    sub_616C(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (*(void *)(a1 + 80)) {
    sub_616C(a1 + 56);
  }
  long long v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_DF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DF8C);
}

uint64_t sub_DF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_8F4B0();
    uint64_t v10 = a1 + *(int *)(a3 + 32);
    return sub_5754(v10, a2, v9);
  }
}

uint64_t sub_E020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E034);
}

uint64_t sub_E034(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_E0B4()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_E164()
{
  unint64_t result = qword_BB158;
  if (!qword_BB158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB158);
  }
  return result;
}

void sub_E1C8()
{
}

Swift::Int sub_E1F0()
{
  return sub_90000();
}

uint64_t sub_E234()
{
  return 1;
}

Swift::Int sub_E244()
{
  return sub_90000();
}

uint64_t sub_E294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_5664(&qword_BB0A0);
  uint64_t v5 = sub_8F820();
  sub_8EC70();
  sub_8F560();
  uint64_t v6 = sub_8F770();
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v28[0] + 88))(v6);
  if (!v7
    || (uint64_t v8 = v7, v9 = [v7 topViewController], v8, !v9))
  {
    sub_EDA4();
    swift_allocError();
    uint64_t v12 = sub_8F7B0();
    swift_release();
    swift_release();
    return v12;
  }
  if (*(void *)(a1 + 40))
  {
    swift_retain();
    swift_retain();
    uint64_t v10 = swift_bridgeObjectRetain();
    unint64_t v11 = (unint64_t)sub_EA98(v10, v5, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v11 = (unint64_t)&_swiftEmptyArrayStorage;
  }
  sub_EED0(a1 + 56, (uint64_t)v28, (uint64_t *)&unk_BAAE0);
  uint64_t v13 = v29;
  if (v29)
  {
    uint64_t v14 = v30;
    sub_820C(v28, v29);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 64))(v13, v14);
    uint64_t v16 = v15;
    sub_616C((uint64_t)v28);
  }
  else
  {
    sub_EF88((uint64_t)v28, (uint64_t *)&unk_BAAE0);
    uint64_t v16 = 0;
  }
  sub_EED0(a1, (uint64_t)v28, (uint64_t *)&unk_BAAE0);
  uint64_t v17 = v29;
  if (v29)
  {
    uint64_t v18 = v30;
    sub_820C(v28, v29);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 64))(v17, v18);
    uint64_t v17 = v20;
    sub_616C((uint64_t)v28);
  }
  else
  {
    sub_EF88((uint64_t)v28, (uint64_t *)&unk_BAAE0);
    uint64_t v19 = 0;
  }
  uint64_t v21 = *(unsigned __int8 *)(a1 + 48);
  sub_F040(0, &qword_BB230);
  uint64_t result = (uint64_t)sub_EC5C(v13, v16, v19, v17, v21);
  uint64_t v23 = (void *)result;
  if (!(v11 >> 62))
  {
    uint64_t v24 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
    if (v24) {
      goto LABEL_15;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    [v9 presentViewController:v23 animated:1 completion:0];
    swift_release();

    return v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_8FEB0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_21;
  }
LABEL_15:
  if (v24 >= 1)
  {
    for (uint64_t i = 0; i != v24; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        id v26 = (id)sub_8FDF0();
      }
      else {
        id v26 = *(id *)(v11 + 8 * i + 32);
      }
      uint64_t v27 = v26;
      [v23 addAction:v26];
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_E608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_8EC80();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_8F650();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_EED0(a2 + 16, (uint64_t)&v18, &qword_BAAD0);
  if (*((void *)&v19 + 1))
  {
    sub_573C(&v18, (uint64_t)v21);
    sub_8ECA0();
    sub_8F560();
    sub_8F770();
    uint64_t v13 = v18;
    sub_8F770();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
    uint64_t v14 = sub_5664((uint64_t *)&unk_BCEB0);
    sub_56F8((uint64_t)v8, 0, 1, v14);
    long long v18 = 0u;
    long long v19 = 0u;
    LOBYTE(v20) = -1;
    (*(void (**)(_OWORD *, char *, uint64_t, long long *))(*(void *)v13 + 216))(v21, v8, a4, &v18);
    sub_EF88((uint64_t)&v18, &qword_BB600);
    sub_EFE4((uint64_t)v8);
    *((void *)&v19 + 1) = sub_8F610();
    uint64_t v20 = &protocol witness table for SyncTaskScheduler;
    sub_8374((uint64_t *)&v18);
    sub_8F600();
    uint64_t v15 = sub_8F790();
    swift_release();
    sub_616C((uint64_t)&v18);
    sub_F040(0, (unint64_t *)&qword_BBBB0);
    uint64_t v16 = (void *)sub_8FBD0();
    sub_F07C(v15, v16);

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return sub_616C((uint64_t)v21);
  }
  else
  {
    sub_EF88((uint64_t)&v18, &qword_BAAD0);
    memset(v21, 0, 32);
    sub_8F7F0();
    return sub_EF34((uint64_t)v21);
  }
}

double sub_E91C@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

id sub_E928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  NSString v8 = sub_8F9A0();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_EA30;
  v12[3] = &unk_AF1C8;
  uint64_t v9 = _Block_copy(v12);
  swift_release();
LABEL_6:
  id v10 = [(id)swift_getObjCClassFromMetadata() actionWithTitle:v8 style:a3 handler:v9];
  _Block_release(v9);

  return v10;
}

void sub_EA30(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void *sub_EA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    long long v18 = &_swiftEmptyArrayStorage;
    sub_8FE30();
    sub_F040(0, &qword_BB238);
    uint64_t v7 = (uint64_t *)(a1 + 128);
    do
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      sub_820C(v7 - 4, v9);
      uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64))(v9, v8);
      uint64_t v12 = v11;
      uint64_t v13 = qword_922E0[*((char *)v7 - 40)];
      sub_EDF0((uint64_t)(v7 - 12), (uint64_t)__src);
      uint64_t v14 = (void *)swift_allocObject();
      memcpy(v14 + 2, __src, 0x68uLL);
      v14[15] = a2;
      unsigned char v14[16] = a3;
      swift_retain();
      swift_retain();
      sub_E928(v10, v12, v13, (uint64_t)sub_EEAC, (uint64_t)v14);
      sub_8FE10();
      sub_8FE40();
      sub_8FE50();
      sub_8FE20();
      v7 += 13;
      --v5;
    }
    while (v5);
    uint64_t v15 = v18;
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v15 = &_swiftEmptyArrayStorage;
  }
  swift_release();
  return v15;
}

id sub_EC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v8 = 0;
    goto LABEL_6;
  }
  NSString v7 = sub_8F9A0();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v8 = sub_8F9A0();
  swift_bridgeObjectRelease();
LABEL_6:
  id v9 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v7 message:v8 preferredStyle:a5];

  return v9;
}

uint64_t type metadata accessor for AlertActionImplementation()
{
  return self;
}

unint64_t sub_ED3C()
{
  unint64_t result = qword_BB200;
  if (!qword_BB200)
  {
    type metadata accessor for AlertAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB200);
  }
  return result;
}

uint64_t sub_ED8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E294(a1, a2, a3);
}

unint64_t sub_EDA4()
{
  unint64_t result = qword_BB228;
  if (!qword_BB228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB228);
  }
  return result;
}

uint64_t sub_EDF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_EE4C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    sub_616C(v0 + 32);
  }
  sub_616C(v0 + 80);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_EEAC(uint64_t a1)
{
  return sub_E608(a1, v1 + 16, *(void *)(v1 + 120), *(void *)(v1 + 128));
}

uint64_t sub_EEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_EEC8()
{
  return swift_release();
}

uint64_t sub_EED0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5664(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_EF34(uint64_t a1)
{
  return a1;
}

uint64_t sub_EF88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_5664(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_EFE4(uint64_t a1)
{
  uint64_t v2 = sub_8EC80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_F040(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_F07C(uint64_t a1, void *a2)
{
  v5[3] = sub_F040(0, (unint64_t *)&qword_BBBB0);
  v5[4] = &protocol witness table for OS_dispatch_queue;
  v5[0] = a2;
  swift_retain_n();
  id v3 = a2;
  sub_8F7A0();
  swift_release_n();
  return sub_616C((uint64_t)v5);
}

uint64_t sub_F13C()
{
  return sub_8B1BC();
}

uint64_t sub_F144()
{
  return sub_8B204();
}

uint64_t getEnumTagSinglePayload for AlertActionImplementation.PresentationError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AlertActionImplementation.PresentationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xF23CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_F264()
{
  return 0;
}

ValueMetadata *type metadata accessor for AlertActionImplementation.PresentationError()
{
  return &type metadata for AlertActionImplementation.PresentationError;
}

unint64_t sub_F280()
{
  unint64_t result = qword_BB240;
  if (!qword_BB240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB240);
  }
  return result;
}

id sub_F2CC()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView;
  int v2 = *(void **)(v0
                + OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView);
LABEL_5:
    id v8 = v2;
    return v3;
  }
  uint64_t v4 = v0;
  id v5 = objc_allocWithZone((Class)_UIContentUnavailableView);
  id result = sub_3AB94(0.0, 0.0, 0.0, 0.0, 0, 0xE000000000000000, 0);
  if (result)
  {
    NSString v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = result;
    id v3 = result;

    int v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_F364(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView] = 0;
  id v3 = &v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController_alertTitle];
  *(void *)id v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for AlertViewController();
  return objc_msgSendSuper2(&v5, "initWithNibName:bundle:", 0, 0);
}

void sub_F3BC()
{
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView] = 0;

  sub_8FEA0();
  __break(1u);
}

id sub_F488()
{
  id v1 = [v0 parentViewController];
  if (v1)
  {
    int v2 = v1;
    self;
    if (!swift_dynamicCastObjCClass())
    {
      id v5 = [v2 navigationItem];

      return v5;
    }
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for AlertViewController();
  id v3 = objc_msgSendSuper2(&v6, "navigationItem");

  return v3;
}

void sub_F54C()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AlertViewController();
  objc_msgSendSuper2(&v3, "loadView");
  id v1 = [v0 view];
  id v2 = objc_msgSend(self, "ams_primaryBackground");
  [v1 setBackgroundColor:v2];
}

void sub_F62C()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for AlertViewController();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_F7A8();
}

void sub_F6AC()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for AlertViewController();
  objc_msgSendSuper2(&v11, "viewWillLayoutSubviews");
  id v1 = sub_F2CC();
  id v2 = [v0 view];
  [v2 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
}

void sub_F7A8()
{
  id v1 = [v0 navigationItem];
  objc_msgSend(v1, "ams_configureWithTransparentBackground");

  sub_F800();
}

void sub_F800()
{
  id v1 = sub_F2CC();
  [v1 setButtonAction:0];

  id v2 = sub_F2CC();
  [v2 setButtonTitle:0];

  id v3 = sub_F2CC();
  [v3 setMessage:0];

  id v4 = sub_F2CC();
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController_alertTitle];
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController_alertTitle + 8];
  swift_bridgeObjectRetain();
  sub_FA4C(v5, v6, v4);

  swift_bridgeObjectRelease();
  id v7 = [v0 view];
  id v8 = sub_F2CC();
  [v7 addSubview:v8];
}

void sub_F90C()
{
}

void sub_F94C()
{
}

id sub_F9A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlertViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AlertViewController()
{
  return self;
}

void sub_FA4C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8F9A0();
  [a3 setTitle:v4];
}

unint64_t sub_FAA8()
{
  unint64_t result = qword_BB280;
  if (!qword_BB280)
  {
    type metadata accessor for AppAlertFooter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB280);
  }
  return result;
}

uint64_t type metadata accessor for AppAlertFooter()
{
  uint64_t result = qword_BB2E0;
  if (!qword_BB2E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_FB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10210(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_FB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_EED0(v2 + *(int *)(a1 + 32), a2, &qword_BAAD0);
}

uint64_t sub_FB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_EED0(v2 + *(int *)(a1 + 28), a2, &qword_BDD70);
}

uint64_t sub_FBAC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Button();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  double v10 = (char *)&v25 - v9;
  objc_super v11 = (int *)type metadata accessor for AppAlertFooter();
  uint64_t v12 = a2 + v11[7];
  uint64_t v13 = sub_8F5F0();
  uint64_t v33 = v12;
  sub_56F8(v12, 1, 1, v13);
  uint64_t v14 = a2 + v11[8];
  *(void *)(v14 + 32) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  uint64_t v27 = a1;
  sub_3B8C();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v15();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v16();
    sub_D68C(v33, &qword_BDD70);
    return sub_D68C(v14, &qword_BAAD0);
  }
  else
  {
    uint64_t v26 = v13;
    uint64_t v17 = sub_10134((uint64_t)v10, a2);
    __chkstk_darwin(v17);
    *(&v25 - 2) = a1;
    sub_3B8C();
    sub_10134((uint64_t)v8, a2 + v11[5]);
    uint64_t v28 = sub_3CEE4();
    uint64_t v29 = v19;
    swift_bridgeObjectRetain();
    sub_8FDB0();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v20();
    swift_bridgeObjectRelease();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v21();
    uint64_t v22 = a2 + v11[6];
    long long v23 = v31;
    *(_OWORD *)uint64_t v22 = v30;
    *(_OWORD *)(v22 + 16) = v23;
    *(void *)(v22 + 32) = v32;
    uint64_t v24 = v33;
    sub_D68C(v33, &qword_BDD70);
    sub_56F8(v24, 1, 1, v26);
    uint64_t result = sub_D68C(v14, &qword_BAAD0);
    *(_OWORD *)uint64_t v14 = 0u;
    *(_OWORD *)(v14 + 16) = 0u;
    *(void *)(v14 + 32) = 0;
  }
  return result;
}

uint64_t sub_FFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  sub_7084();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  objc_super v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v12);
  (*(void (**)(unsigned char *, uint64_t))(v14 + 16))(&v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v6);
  sub_1BA88((uint64_t)v11, a3);
  uint64_t v15 = type metadata accessor for Button();
  return sub_56F8(a3, 0, 1, v15);
}

uint64_t sub_1011C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_FBAC(a1, a2);
}

uint64_t sub_10134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Button();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FFB8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_101B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Button();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10210(uint64_t a1, uint64_t a2)
{
  return a2;
}

char *sub_1026C(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v8 = a2 + 2;
    uint64_t v9 = a2[5];
    uint64_t v10 = v5;
    if (v9)
    {
      objc_super v11 = a2[6];
      *((void *)a1 + 5) = v9;
      *((void *)a1 + 6) = v11;
      (**((void (***)(uint64_t, char **, char *))v9 - 1))((uint64_t)(a1 + 16), v8, v9);
    }
    else
    {
      long long v12 = *((_OWORD *)v8 + 1);
      *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
      *((_OWORD *)a1 + 2) = v12;
      *((void *)a1 + 6) = v8[4];
    }
    long long v13 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 5) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 56), (uint64_t)(a2 + 7));
    long long v14 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 12));
    uint64_t v15 = type metadata accessor for Button();
    uint64_t v16 = *(int *)(v15 + 36);
    uint64_t v17 = &a1[v16];
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_8F5F0();
    if (sub_5754((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_5664(&qword_BDD70);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      sub_56F8((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v21 = *(int *)(v15 + 40);
    uint64_t v22 = &a1[v21];
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 24);
    if (v24)
    {
      uint64_t v25 = *(void *)(v23 + 32);
      *((void *)v22 + 3) = v24;
      *((void *)v22 + 4) = v25;
      (**(void (***)(void))(v24 - 8))();
    }
    else
    {
      long long v26 = *(_OWORD *)(v23 + 16);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v26;
      *((void *)v22 + 4) = *(void *)(v23 + 32);
    }
    uint64_t v27 = a3[5];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = (uint64_t)a2 + v27;
    long long v30 = *(char **)((char *)a2 + v27);
    *(void *)uint64_t v28 = v30;
    v28[8] = *(unsigned char *)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 40);
    id v32 = v30;
    if (v31)
    {
      uint64_t v33 = *(void *)(v29 + 48);
      *((void *)v28 + 5) = v31;
      *((void *)v28 + 6) = v33;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))((uint64_t)(v28 + 16), v29 + 16, v31);
    }
    else
    {
      long long v34 = *(_OWORD *)(v29 + 32);
      *((_OWORD *)v28 + 1) = *(_OWORD *)(v29 + 16);
      *((_OWORD *)v28 + 2) = v34;
      *((void *)v28 + 6) = *(void *)(v29 + 48);
    }
    long long v35 = *(_OWORD *)(v29 + 80);
    *((_OWORD *)v28 + 5) = v35;
    (**(void (***)(uint64_t, uint64_t))(v35 - 8))((uint64_t)(v28 + 56), v29 + 56);
    long long v36 = *(_OWORD *)(v29 + 120);
    *(_OWORD *)(v28 + 120) = v36;
    (**(void (***)(uint64_t, uint64_t))(v36 - 8))((uint64_t)(v28 + 96), v29 + 96);
    uint64_t v37 = *(int *)(v15 + 36);
    v38 = &v28[v37];
    unint64_t v39 = (const void *)(v29 + v37);
    if (sub_5754(v29 + v37, 1, v19))
    {
      uint64_t v40 = sub_5664(&qword_BDD70);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v38, v39, v19);
      sub_56F8((uint64_t)v38, 0, 1, v19);
    }
    uint64_t v41 = *(int *)(v15 + 40);
    Swift::String v42 = &v28[v41];
    uint64_t v43 = v29 + v41;
    uint64_t v44 = *(void *)(v29 + v41 + 24);
    if (v44)
    {
      uint64_t v45 = *(void *)(v43 + 32);
      *((void *)v42 + 3) = v44;
      *((void *)v42 + 4) = v45;
      (**(void (***)(void))(v44 - 8))();
    }
    else
    {
      long long v46 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)Swift::String v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v46;
      *((void *)v42 + 4) = *(void *)(v43 + 32);
    }
    uint64_t v47 = a3[6];
    long long v48 = *(_OWORD *)((char *)a2 + v47 + 24);
    *(_OWORD *)&a1[v47 + 24] = v48;
    (**(void (***)(void))(v48 - 8))();
    uint64_t v49 = a3[7];
    Swift::String v50 = &a1[v49];
    Swift::String v51 = (char *)a2 + v49;
    if (sub_5754((uint64_t)a2 + v49, 1, v19))
    {
      uint64_t v52 = sub_5664(&qword_BDD70);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v50, v51, v19);
      sub_56F8((uint64_t)v50, 0, 1, v19);
    }
    uint64_t v53 = a3[8];
    v54 = &a1[v53];
    uint64_t v55 = (uint64_t)a2 + v53;
    uint64_t v56 = *(uint64_t *)((char *)a2 + v53 + 24);
    if (v56)
    {
      uint64_t v57 = *(void *)(v55 + 32);
      *((void *)v54 + 3) = v56;
      *((void *)v54 + 4) = v57;
      (**(void (***)(void))(v56 - 8))();
    }
    else
    {
      long long v58 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v58;
      *((void *)v54 + 4) = *(void *)(v55 + 32);
    }
  }
  return a1;
}

uint64_t sub_10834(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }
  sub_616C(a1 + 56);
  sub_616C(a1 + 96);
  uint64_t v4 = type metadata accessor for Button();
  uint64_t v5 = a1 + *(int *)(v4 + 36);
  uint64_t v6 = sub_8F5F0();
  if (!sub_5754(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(v4 + 40);
  if (*(void *)(v7 + 24)) {
    sub_616C(v7);
  }
  uint64_t v8 = a1 + a2[5];

  if (*(void *)(v8 + 40)) {
    sub_616C(v8 + 16);
  }
  sub_616C(v8 + 56);
  sub_616C(v8 + 96);
  uint64_t v9 = v8 + *(int *)(v4 + 36);
  if (!sub_5754(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v9, v6);
  }
  uint64_t v10 = v8 + *(int *)(v4 + 40);
  if (*(void *)(v10 + 24)) {
    sub_616C(v10);
  }
  sub_616C(a1 + a2[6]);
  uint64_t v11 = a1 + a2[7];
  if (!sub_5754(v11, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v11, v6);
  }
  uint64_t result = a1 + a2[8];
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_10A24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = a1 + 16;
  uint64_t v8 = a2 + 16;
  uint64_t v9 = *(void *)(a2 + 40);
  id v10 = v6;
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(v7, v8, v9);
  }
  else
  {
    long long v12 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v12;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
  }
  long long v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 56, a2 + 56);
  long long v14 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 96, a2 + 96);
  uint64_t v15 = type metadata accessor for Button();
  uint64_t v16 = *(int *)(v15 + 36);
  uint64_t v17 = (void *)(a1 + v16);
  long long v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_8F5F0();
  if (sub_5754((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_5664(&qword_BDD70);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    sub_56F8((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v21 = *(int *)(v15 + 40);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(a2 + v21 + 24);
  if (v24)
  {
    uint64_t v25 = *(void *)(v23 + 32);
    *(void *)(v22 + 24) = v24;
    *(void *)(v22 + 32) = v25;
    (**(void (***)(void))(v24 - 8))();
  }
  else
  {
    long long v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(void *)(v22 + 32) = *(void *)(v23 + 32);
  }
  uint64_t v27 = a3[5];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  long long v30 = *(void **)(a2 + v27);
  *(void *)uint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v31 = *(void *)(v29 + 40);
  id v32 = v30;
  if (v31)
  {
    uint64_t v33 = *(void *)(v29 + 48);
    *(void *)(v28 + 40) = v31;
    *(void *)(v28 + 48) = v33;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))(v28 + 16, v29 + 16, v31);
  }
  else
  {
    long long v34 = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 16) = *(_OWORD *)(v29 + 16);
    *(_OWORD *)(v28 + 32) = v34;
    *(void *)(v28 + 48) = *(void *)(v29 + 48);
  }
  long long v35 = *(_OWORD *)(v29 + 80);
  *(_OWORD *)(v28 + 80) = v35;
  (**(void (***)(uint64_t, uint64_t))(v35 - 8))(v28 + 56, v29 + 56);
  long long v36 = *(_OWORD *)(v29 + 120);
  *(_OWORD *)(v28 + 120) = v36;
  (**(void (***)(uint64_t, uint64_t))(v36 - 8))(v28 + 96, v29 + 96);
  uint64_t v37 = *(int *)(v15 + 36);
  v38 = (void *)(v28 + v37);
  unint64_t v39 = (const void *)(v29 + v37);
  if (sub_5754(v29 + v37, 1, v19))
  {
    uint64_t v40 = sub_5664(&qword_BDD70);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v38, v39, v19);
    sub_56F8((uint64_t)v38, 0, 1, v19);
  }
  uint64_t v41 = *(int *)(v15 + 40);
  uint64_t v42 = v28 + v41;
  uint64_t v43 = v29 + v41;
  uint64_t v44 = *(void *)(v29 + v41 + 24);
  if (v44)
  {
    uint64_t v45 = *(void *)(v43 + 32);
    *(void *)(v42 + 24) = v44;
    *(void *)(v42 + 32) = v45;
    (**(void (***)(void))(v44 - 8))();
  }
  else
  {
    long long v46 = *(_OWORD *)(v43 + 16);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 16) = v46;
    *(void *)(v42 + 32) = *(void *)(v43 + 32);
  }
  uint64_t v47 = a3[6];
  long long v48 = *(_OWORD *)(a2 + v47 + 24);
  *(_OWORD *)(a1 + v47 + 24) = v48;
  (**(void (***)(void))(v48 - 8))();
  uint64_t v49 = a3[7];
  Swift::String v50 = (void *)(a1 + v49);
  Swift::String v51 = (const void *)(a2 + v49);
  if (sub_5754(a2 + v49, 1, v19))
  {
    uint64_t v52 = sub_5664(&qword_BDD70);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v50, v51, v19);
    sub_56F8((uint64_t)v50, 0, 1, v19);
  }
  uint64_t v53 = a3[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = *(void *)(a2 + v53 + 24);
  if (v56)
  {
    uint64_t v57 = *(void *)(v55 + 32);
    *(void *)(v54 + 24) = v56;
    *(void *)(v54 + 32) = v57;
    (**(void (***)(void))(v56 - 8))();
  }
  else
  {
    long long v58 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    *(_OWORD *)(v54 + 16) = v58;
    *(void *)(v54 + 32) = *(void *)(v55 + 32);
  }
  return a1;
}

uint64_t sub_10FA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v9)
    {
      sub_64C8((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    sub_616C(a1 + 16);
  }
  else if (v9)
  {
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v11 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
LABEL_8:
  sub_64C8((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  sub_64C8((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  uint64_t v12 = type metadata accessor for Button();
  uint64_t v13 = *(int *)(v12 + 36);
  long long v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_8F5F0();
  int v17 = sub_5754((uint64_t)v14, 1, v16);
  int v18 = sub_5754((uint64_t)v15, 1, v16);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      sub_56F8((uint64_t)v14, 0, 1, v16);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_13:
    uint64_t v20 = sub_5664(&qword_BDD70);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 24))(v14, v15, v16);
LABEL_14:
  uint64_t v21 = *(int *)(v12 + 40);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *(void *)(a2 + v21 + 24);
  if (*(void *)(a1 + v21 + 24))
  {
    if (v24)
    {
      sub_64C8((uint64_t *)v22, v23);
      goto LABEL_21;
    }
    sub_616C(v22);
  }
  else if (v24)
  {
    *(void *)(v22 + 24) = v24;
    *(void *)(v22 + 32) = v23[4];
    (**(void (***)(uint64_t, long long *))(v24 - 8))(v22, (long long *)v23);
    goto LABEL_21;
  }
  long long v25 = *(_OWORD *)v23;
  long long v26 = *((_OWORD *)v23 + 1);
  *(void *)(v22 + 32) = v23[4];
  *(_OWORD *)uint64_t v22 = v25;
  *(_OWORD *)(v22 + 16) = v26;
LABEL_21:
  uint64_t v27 = a3[5];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  long long v30 = *(void **)(a1 + v27);
  uint64_t v31 = *(void **)(a2 + v27);
  *(void *)uint64_t v28 = v31;
  id v32 = v31;

  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v33 = *(void *)(v29 + 40);
  if (*(void *)(v28 + 40))
  {
    if (v33)
    {
      sub_64C8((uint64_t *)(v28 + 16), (uint64_t *)(v29 + 16));
      goto LABEL_28;
    }
    sub_616C(v28 + 16);
  }
  else if (v33)
  {
    *(void *)(v28 + 40) = v33;
    *(void *)(v28 + 48) = *(void *)(v29 + 48);
    (**(void (***)(uint64_t, uint64_t))(v33 - 8))(v28 + 16, v29 + 16);
    goto LABEL_28;
  }
  long long v34 = *(_OWORD *)(v29 + 16);
  long long v35 = *(_OWORD *)(v29 + 32);
  *(void *)(v28 + 48) = *(void *)(v29 + 48);
  *(_OWORD *)(v28 + 16) = v34;
  *(_OWORD *)(v28 + 32) = v35;
LABEL_28:
  sub_64C8((uint64_t *)(v28 + 56), (uint64_t *)(v29 + 56));
  sub_64C8((uint64_t *)(v28 + 96), (uint64_t *)(v29 + 96));
  uint64_t v36 = *(int *)(v12 + 36);
  uint64_t v37 = (void *)(v28 + v36);
  v38 = (const void *)(v29 + v36);
  int v39 = sub_5754(v28 + v36, 1, v16);
  int v40 = sub_5754((uint64_t)v38, 1, v16);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v37, v38, v16);
      sub_56F8((uint64_t)v37, 0, 1, v16);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  uint64_t v41 = *(void *)(v16 - 8);
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v37, v16);
LABEL_33:
    uint64_t v42 = sub_5664(&qword_BDD70);
    memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v41 + 24))(v37, v38, v16);
LABEL_34:
  uint64_t v43 = *(int *)(v12 + 40);
  uint64_t v44 = v28 + v43;
  uint64_t v45 = (uint64_t *)(v29 + v43);
  uint64_t v46 = *(void *)(v29 + v43 + 24);
  if (*(void *)(v28 + v43 + 24))
  {
    if (v46)
    {
      sub_64C8((uint64_t *)v44, v45);
      goto LABEL_41;
    }
    sub_616C(v44);
  }
  else if (v46)
  {
    *(void *)(v44 + 24) = v46;
    *(void *)(v44 + 32) = v45[4];
    (**(void (***)(uint64_t, long long *))(v46 - 8))(v44, (long long *)v45);
    goto LABEL_41;
  }
  long long v47 = *(_OWORD *)v45;
  long long v48 = *((_OWORD *)v45 + 1);
  *(void *)(v44 + 32) = v45[4];
  *(_OWORD *)uint64_t v44 = v47;
  *(_OWORD *)(v44 + 16) = v48;
LABEL_41:
  sub_64C8((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  uint64_t v49 = a3[7];
  Swift::String v50 = (void *)(a1 + v49);
  Swift::String v51 = (const void *)(a2 + v49);
  int v52 = sub_5754(a1 + v49, 1, v16);
  int v53 = sub_5754((uint64_t)v51, 1, v16);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v50, v51, v16);
      sub_56F8((uint64_t)v50, 0, 1, v16);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  uint64_t v54 = *(void *)(v16 - 8);
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v54 + 8))(v50, v16);
LABEL_46:
    uint64_t v55 = sub_5664(&qword_BDD70);
    memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(void *, const void *, uint64_t))(v54 + 24))(v50, v51, v16);
LABEL_47:
  uint64_t v56 = a3[8];
  uint64_t v57 = a1 + v56;
  long long v58 = (long long *)(a2 + v56);
  uint64_t v59 = *((void *)v58 + 3);
  if (!*(void *)(a1 + v56 + 24))
  {
    if (v59)
    {
      *(void *)(v57 + 24) = v59;
      *(void *)(v57 + 32) = *((void *)v58 + 4);
      (**(void (***)(uint64_t, long long *))(v59 - 8))(v57, v58);
      return a1;
    }
LABEL_53:
    long long v60 = *v58;
    long long v61 = v58[1];
    *(void *)(v57 + 32) = *((void *)v58 + 4);
    *(_OWORD *)uint64_t v57 = v60;
    *(_OWORD *)(v57 + 16) = v61;
    return a1;
  }
  if (!v59)
  {
    sub_616C(v57);
    goto LABEL_53;
  }
  sub_64C8((uint64_t *)v57, (uint64_t *)v58);
  return a1;
}

uint64_t sub_11674(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = v8;
  uint64_t v9 = type metadata accessor for Button();
  uint64_t v10 = *(int *)(v9 + 36);
  long long v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_8F5F0();
  if (sub_5754((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_5664(&qword_BDD70);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    sub_56F8((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v15 = *(int *)(v9 + 40);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = a3[5];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(a2 + v19 + 8);
  *(void *)(v20 + 48) = *(void *)(a2 + v19 + 48);
  long long v22 = *(_OWORD *)(a2 + v19 + 32);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(a2 + v19 + 16);
  *(_OWORD *)(v20 + 32) = v22;
  long long v23 = *(_OWORD *)(a2 + v19 + 56);
  long long v24 = *(_OWORD *)(a2 + v19 + 72);
  *(void *)(v20 + 88) = *(void *)(a2 + v19 + 88);
  *(_OWORD *)(v20 + 72) = v24;
  *(_OWORD *)(v20 + 56) = v23;
  long long v25 = *(_OWORD *)(a2 + v19 + 96);
  long long v26 = *(_OWORD *)(a2 + v19 + 112);
  *(void *)(v20 + 128) = *(void *)(a2 + v19 + 128);
  *(_OWORD *)(v20 + 96) = v25;
  *(_OWORD *)(v20 + 112) = v26;
  uint64_t v27 = *(int *)(v9 + 36);
  uint64_t v28 = (void *)(v20 + v27);
  uint64_t v29 = (const void *)(v21 + v27);
  if (sub_5754(v21 + v27, 1, v13))
  {
    uint64_t v30 = sub_5664(&qword_BDD70);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v28, v29, v13);
    sub_56F8((uint64_t)v28, 0, 1, v13);
  }
  uint64_t v31 = *(int *)(v9 + 40);
  uint64_t v32 = v20 + v31;
  uint64_t v33 = v21 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  uint64_t v35 = a3[6];
  uint64_t v36 = a3[7];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)(v37 + 32) = *(void *)(v38 + 32);
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  int v40 = (void *)(a1 + v36);
  uint64_t v41 = (const void *)(a2 + v36);
  if (sub_5754(a2 + v36, 1, v13))
  {
    uint64_t v42 = sub_5664(&qword_BDD70);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v40, v41, v13);
    sub_56F8((uint64_t)v40, 0, 1, v13);
  }
  uint64_t v43 = a3[8];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  long long v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(void *)(v44 + 32) = *(void *)(v45 + 32);
  return a1;
}

uint64_t sub_119A8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_616C(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_616C(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = type metadata accessor for Button();
  uint64_t v10 = *(int *)(v9 + 36);
  long long v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_8F5F0();
  int v14 = sub_5754((uint64_t)v11, 1, v13);
  int v15 = sub_5754((uint64_t)v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      sub_56F8((uint64_t)v11, 0, 1, v13);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
LABEL_8:
    uint64_t v17 = sub_5664(&qword_BDD70);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_9:
  uint64_t v18 = *(int *)(v9 + 40);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  if (*(void *)(a1 + v18 + 24)) {
    sub_616C(v19);
  }
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  long long v25 = *(void **)(a1 + v22);
  *(void *)uint64_t v23 = *(void *)v24;

  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  if (*(void *)(v23 + 40)) {
    sub_616C(v23 + 16);
  }
  long long v26 = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)(v24 + 16);
  *(_OWORD *)(v23 + 32) = v26;
  *(void *)(v23 + 48) = *(void *)(v24 + 48);
  sub_616C(v23 + 56);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
  *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
  *(void *)(v23 + 88) = *(void *)(v24 + 88);
  sub_616C(v23 + 96);
  long long v27 = *(_OWORD *)(v24 + 112);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
  *(_OWORD *)(v23 + 112) = v27;
  *(void *)(v23 + 128) = *(void *)(v24 + 128);
  uint64_t v28 = *(int *)(v9 + 36);
  uint64_t v29 = (void *)(v23 + v28);
  uint64_t v30 = (const void *)(v24 + v28);
  int v31 = sub_5754(v23 + v28, 1, v13);
  int v32 = sub_5754((uint64_t)v30, 1, v13);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v29, v30, v13);
      sub_56F8((uint64_t)v29, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v33 = *(void *)(v13 - 8);
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v29, v13);
LABEL_18:
    uint64_t v34 = sub_5664(&qword_BDD70);
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(v33 + 40))(v29, v30, v13);
LABEL_19:
  uint64_t v35 = *(int *)(v9 + 40);
  uint64_t v36 = v23 + v35;
  uint64_t v37 = v24 + v35;
  if (*(void *)(v23 + v35 + 24)) {
    sub_616C(v36);
  }
  long long v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  uint64_t v39 = a3[6];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_616C(a1 + v39);
  long long v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(void *)(v40 + 32) = *(void *)(v41 + 32);
  uint64_t v43 = a3[7];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (const void *)(a2 + v43);
  int v46 = sub_5754(a1 + v43, 1, v13);
  int v47 = sub_5754((uint64_t)v45, 1, v13);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v44, v45, v13);
      sub_56F8((uint64_t)v44, 0, 1, v13);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  uint64_t v48 = *(void *)(v13 - 8);
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v44, v13);
LABEL_26:
    uint64_t v49 = sub_5664(&qword_BDD70);
    memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(void *, const void *, uint64_t))(v48 + 40))(v44, v45, v13);
LABEL_27:
  uint64_t v50 = a3[8];
  uint64_t v51 = a1 + v50;
  if (*(void *)(a1 + v50 + 24)) {
    sub_616C(a1 + v50);
  }
  long long v52 = *(_OWORD *)(a2 + v50 + 16);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)(a2 + v50);
  *(_OWORD *)(v51 + 16) = v52;
  *(void *)(v51 + 32) = *(void *)(a2 + v50 + 32);
  return a1;
}

uint64_t sub_11EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11F0C);
}

uint64_t sub_11F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Button();
  sub_B704();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return sub_5754(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_11FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11FD8);
}

void sub_11FD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Button();
  sub_B704();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return;
    }
    uint64_t v10 = sub_5664(&qword_BDD70);
    uint64_t v11 = a1 + *(int *)(a4 + 28);
  }

  sub_56F8(v11, a2, a2, v10);
}

void sub_1208C()
{
  type metadata accessor for Button();
  if (v0 <= 0x3F)
  {
    sub_12168();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_12168()
{
  if (!qword_BB2F0)
  {
    sub_8F5F0();
    unint64_t v0 = sub_8FD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BB2F0);
    }
  }
}

uint64_t sub_121C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Button();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v11 - v8;
  swift_getKeyPath();
  sub_5664(&qword_BB388);
  sub_8F430();
  swift_release();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  sub_12754((uint64_t)v9, (uint64_t)v7, a3);
  sub_101B4((uint64_t)v7);
  return sub_101B4((uint64_t)v9);
}

uint64_t sub_122F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for AppAlertFooterComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_12358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for AppAlertFooterComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_123C0()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_1243C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_124B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

unint64_t sub_12538()
{
  unint64_t result = qword_BB330;
  if (!qword_BB330)
  {
    type metadata accessor for AppAlertFooter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB330);
  }
  return result;
}

unint64_t sub_1258C()
{
  unint64_t result = qword_BB338;
  if (!qword_BB338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB338);
  }
  return result;
}

uint64_t sub_125D8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_objectGraph) = a1;
  return swift_release();
}

id sub_125F0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonView;
  uint64_t v10 = (objc_class *)type metadata accessor for DynamicButton();
  id v11 = objc_allocWithZone(v10);
  uint64_t v12 = v4;
  *(void *)&v4[v9] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonView;
  *(void *)&v12[v13] = [objc_allocWithZone(v10) init];
  uint64_t v14 = (uint64_t)&v12[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonModel];
  uint64_t v15 = type metadata accessor for Button();
  sub_56F8(v14, 1, 1, v15);
  sub_56F8((uint64_t)&v12[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonModel], 1, 1, v15);
  *(void *)&v12[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_objectGraph] = 0;

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for AppAlertFooterComponent();
  id v16 = objc_msgSendSuper2(&v18, "initWithFrame:", a1, a2, a3, a4);
  sub_13198();

  return v16;
}

void sub_12754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_5664(&qword_BAAF0);
  __chkstk_darwin(v7 - 8);
  sub_B7F0();
  uint64_t v10 = v9 - v8;
  sub_13684(a1, v9 - v8);
  type metadata accessor for Button();
  sub_138C0();
  uint64_t v11 = v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonModel;
  swift_beginAccess();
  sub_137F0(v10, v11);
  swift_endAccess();
  sub_13684(a2, v10);
  sub_138C0();
  uint64_t v12 = v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonModel;
  swift_beginAccess();
  sub_137F0(v10, v12);
  swift_endAccess();
  uint64_t v13 = swift_retain();
  sub_125D8(v13);
  sub_128AC(*(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonView), a1, a3);
  sub_128AC(*(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonView), a2, a3);
}

void sub_128AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_31374(a2 + 56, a3);
  sub_13740(a2 + 16, (uint64_t)&v8, (uint64_t *)&unk_BAAE0);
  if (v9)
  {
    sub_573C(&v8, (uint64_t)v10);
    sub_31368((uint64_t)v10, a3);
    sub_616C((uint64_t)v10);
  }
  else
  {
    sub_1379C((uint64_t)&v8, (uint64_t *)&unk_BAAE0);
    sub_31400();
  }
  id v6 = *(id *)a2;
  id v7 = *(id *)a2;
  sub_30254(v6);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_style) = *(unsigned char *)(a2 + 8);
  sub_302AC();
}

id sub_1297C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppAlertFooterComponent();
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_31400();
  sub_3140C();
  sub_31400();
  return sub_3140C();
}

id sub_12A4C()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for AppAlertFooterComponent();
  objc_msgSendSuper2(&v19, "layoutSubviews");
  id v1 = [v0 traitCollection];
  objc_super v2 = (char *)[v1 verticalSizeClass];

  if (v2 == (unsigned char *)&def_41A10 + 1)
  {
    id v3 = [v0 contentView];
    [v3 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v20.origin.x = v5;
    v20.origin.y = v7;
    v20.size.width = v9;
    v20.size.height = v11;
    CGFloat v12 = (CGRectGetWidth(v20) + -32.0 + -10.0) * 0.5;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonView], "setFrame:", 16.0, 0.0, v12, 50.0);
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonView], "setFrame:", v12 + 16.0 + 10.0, 0.0, v12, 50.0);
  }
  else
  {
    sub_3DF5C();
    double v15 = v14;
    objc_msgSend(objc_msgSend(v0, "contentView"), "bounds");
    sub_138A0();
    double v16 = fmin(sub_13880() - (v15 + v15), 400.0);
    objc_msgSend(objc_msgSend(v0, "contentView"), "bounds");
    sub_138A0();
    double v17 = (sub_13880() - v16) * 0.5;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonView], "setFrame:", v17, 0.0, v16, 50.0);
    objc_super v18 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonView];
    if (qword_BA990 != -1) {
      swift_once();
    }
    return objc_msgSend(v18, "setFrame:", v17, *(double *)&qword_BB390 + 50.0, v16, 50.0);
  }
}

uint64_t sub_12D08()
{
  return sub_12D68(&OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonModel);
}

uint64_t sub_12D5C()
{
  return sub_12D68(&OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonModel);
}

uint64_t sub_12D68(void *a1)
{
  uint64_t v4 = type metadata accessor for Button();
  sub_13858();
  __chkstk_darwin(v5);
  sub_B7F0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_5664(&qword_BAAF0);
  __chkstk_darwin(v9 - 8);
  sub_13868();
  uint64_t v10 = v1 + *a1;
  swift_beginAccess();
  sub_13740(v10, v2, &qword_BAAF0);
  if (sub_5754(v2, 1, v4))
  {
    sub_1379C(v2, &qword_BAAF0);
    memset(v12, 0, sizeof(v12));
    uint64_t v13 = 0;
  }
  else
  {
    sub_13684(v2, v8);
    sub_1379C(v2, &qword_BAAF0);
    sub_13740(v8 + *(int *)(v4 + 40), (uint64_t)v12, &qword_BAAD0);
    sub_136E8(v8, (void (*)(void))type metadata accessor for Button);
  }
  sub_12F28((uint64_t)v12);
  return sub_1379C((uint64_t)v12, &qword_BAAD0);
}

uint64_t sub_12F28(uint64_t a1)
{
  uint64_t v4 = sub_8EC80();
  __chkstk_darwin(v4 - 8);
  sub_B7F0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_8F650();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_13868();
  sub_13740(a1, (uint64_t)&v14, &qword_BAAD0);
  if (!*((void *)&v15 + 1)) {
    return sub_1379C((uint64_t)&v14, &qword_BAAD0);
  }
  sub_573C(&v14, (uint64_t)v17);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_objectGraph);
  if (v10)
  {
    sub_8ECA0();
    sub_8F560();
    swift_retain();
    sub_8F770();
    uint64_t v11 = v14;
    sub_8F770();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v2, v8);
    uint64_t v12 = sub_5664((uint64_t *)&unk_BCEB0);
    sub_56F8(v7, 0, 1, v12);
    long long v14 = 0u;
    long long v15 = 0u;
    char v16 = -1;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, long long *))(*(void *)v11 + 216))(v17, v7, v10, &v14);
    swift_release();
    swift_release();
    swift_release();
    sub_1379C((uint64_t)&v14, &qword_BB600);
    sub_136E8(v7, (void (*)(void))&type metadata accessor for ResultingActionDispatcher.MetricsBehavior);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
  }
  return sub_616C((uint64_t)v17);
}

id sub_13198()
{
  id v1 = [v0 contentView];
  id v2 = objc_msgSend(self, "ams_clear");
  [v1 setBackgroundColor:v2];

  id v3 = [v0 contentView];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_primaryButtonView];
  [v3 addSubview:v4];

  id v5 = [v0 contentView];
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23AppAlertFooterComponent_secondaryButtonView];
  [v5 addSubview:v6];

  [v4 addTarget:v0 action:"primaryButtonAction" forControlEvents:64];

  return [v6 addTarget:v0 action:"secondaryButtonAction" forControlEvents:64];
}

void sub_132D4()
{
}

id sub_13314()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppAlertFooterComponent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_133D8()
{
  return type metadata accessor for AppAlertFooterComponent();
}

uint64_t type metadata accessor for AppAlertFooterComponent()
{
  uint64_t result = qword_BB3E8;
  if (!qword_BB3E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_13428()
{
  sub_134D4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_134D4()
{
  if (!qword_BB3F8)
  {
    type metadata accessor for Button();
    unint64_t v0 = sub_8FD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BB3F8);
    }
  }
}

void sub_1352C()
{
  qword_BB390 = 0x4014000000000000;
}

id sub_1353C(void *a1)
{
  id v1 = [a1 traitCollection];
  objc_super v2 = (char *)[v1 verticalSizeClass];

  id v3 = self;
  id v4 = [v3 fractionalWidthDimension:1.0];
  if (v2 == (unsigned char *)&def_41A10 + 1)
  {
    double v5 = 50.0;
  }
  else
  {
    if (qword_BA990 != -1) {
      swift_once();
    }
    double v5 = *(double *)&qword_BB390 + 50.0 + 50.0;
  }
  id v6 = [v3 absoluteDimension:v5];
  id v7 = [self sizeWithWidthDimension:v4 heightDimension:v6];

  return v7;
}

id sub_1366C(void *a1)
{
  return sub_1353C(a1);
}

uint64_t sub_13684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Button();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_136E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_13858();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_13740(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_13858();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1379C(uint64_t a1, uint64_t *a2)
{
  sub_5664(a2);
  sub_13858();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_137F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAAF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_13880()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetWidth(*(CGRect *)&v5);
}

void sub_138A0()
{
}

uint64_t sub_138C0()
{
  return sub_56F8(v0, 0, 1, v1);
}

uint64_t sub_138E0()
{
  return sub_14620(&qword_BB400, (void (*)(uint64_t))type metadata accessor for ASCLockupWrapper);
}

uint64_t type metadata accessor for ASCLockupWrapper()
{
  uint64_t result = qword_BB470;
  if (!qword_BB470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_13970@<X0>(uint64_t a1@<X8>)
{
  return sub_10210(v1 + 104, a1);
}

uint64_t sub_1397C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14774(v2 + *(int *)(a1 + 56), a2, &qword_BAAD0);
}

uint64_t sub_139A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14774(v2 + *(int *)(a1 + 52), a2, &qword_BDD70);
}

void sub_139D4(uint64_t a1@<X1>, id *a2@<X8>)
{
  uint64_t v5 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v5 - 8);
  sub_B7F0();
  uint64_t v8 = v7 - v6;
  sub_8EA70();
  swift_allocObject();
  uint64_t v9 = type metadata accessor for ASCLockupWrapper();
  sub_3CEE4();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v10();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v11();
  }
  else
  {
    sub_14578();
    *a2 = sub_140D4();
    sub_1567C();
    sub_8D0C(v12, v13, v14, v15, v16, v17, v18, v19);
    a2[1] = v20;
    sub_1567C();
    sub_8D68(v21, v22, v23, v24, v25, v26, v27, v28);
    a2[2] = v29;
    sub_156A0();
    unint64_t v30 = sub_1568C();
    a2[3] = (id)sub_141DC(v30, v31, v32);
    sub_156A0();
    a2[4] = (id)sub_141DC(v33, v34, v9);
    sub_156A0();
    uint64_t v35 = sub_3CEE4();
    uint64_t v54 = v52;
    a2[5] = (id)v35;
    a2[6] = v36;
    __chkstk_darwin(v35);
    sub_156AC();
    sub_156A0();
    sub_1568C();
    sub_3B0C();
    sub_145C0((uint64_t)&v53, (uint64_t)(a2 + 7), &qword_BAAD0);
    sub_1567C();
    sub_8F30(v37, v38, v39, v40, v41, v42, v43, v44);
    a2[12] = v45;
    v52[0] = sub_3CEE4();
    v52[1] = v46;
    uint64_t v47 = sub_8FDB0();
    uint64_t v54 = v52;
    __chkstk_darwin(v47);
    v52[-2] = a1;
    sub_156A0();
    sub_1567C();
    sub_3BC4();
    uint64_t v48 = sub_8F5F0();
    sub_56F8(v8, 0, 1, v48);
    uint64_t v49 = sub_145C0(v8, (uint64_t)a2 + *(int *)(v9 + 52), &qword_BDD70);
    __chkstk_darwin(v49);
    sub_156AC();
    sub_3B0C();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v50();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v51 + 8))(a1);
    sub_145C0((uint64_t)v52, (uint64_t)a2 + *(int *)(v9 + 56), &qword_BAAD0);
  }
}

id sub_140D4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithStringValue:v1];

  return v2;
}

uint64_t sub_14148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_141DC(a1, a2, a3);
}

uint64_t sub_14174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_141DC(a1, a2, a3);
}

uint64_t sub_141A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_141DC(a1, a2, a3);
}

uint64_t sub_141DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_8F320();
  __chkstk_darwin(v5);
  sub_B7F0();
  sub_8F330();
  if ((sub_8F2F0() & 1) != 0 || (uint64_t v6 = sub_14668()) == 0)
  {
    uint64_t v7 = sub_8F8E0();
    sub_14620((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    swift_allocError();
    void *v10 = a1;
    v10[1] = a2;
    v10[2] = a3;
    sub_7170();
    (*(void (**)(void))(v11 + 104))();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v12 = sub_B7D8();
    v13(v12);
  }
  else
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_B7D8();
    v9(v8);
  }
  return v7;
}

uint64_t sub_143AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 16))(&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F5B0();
  uint64_t v13 = sub_8F5F0();
  return sub_56F8(a3, 0, 1, v13);
}

void sub_14560(uint64_t a1@<X1>, id *a2@<X8>)
{
}

unint64_t sub_14578()
{
  unint64_t result = qword_BB408;
  if (!qword_BB408)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BB408);
  }
  return result;
}

uint64_t sub_145B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_143AC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_145C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_7170();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_14620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_14668()
{
  uint64_t v0 = sub_5664(&qword_BB410);
  __chkstk_darwin(v0 - 8);
  sub_B7F0();
  uint64_t v3 = v2 - v1;
  sub_8F270();
  uint64_t v4 = sub_8F530();
  if (sub_5754(v3, 1, v4) == 1)
  {
    sub_D68C(v3, &qword_BB410);
    return 0;
  }
  else
  {
    uint64_t v5 = sub_8F520();
    sub_7170();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v4);
  }
  return v5;
}

uint64_t sub_14774(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_7170();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

char *sub_147D4(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    uint64_t v7 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v7;
    uint64_t v9 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v9;
    uint64_t v10 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v10;
    uint64_t v11 = a2 + 7;
    uint64_t v12 = a2[10];
    uint64_t v13 = v5;
    uint64_t v14 = v8;
    uint64_t v15 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v16 = a2[11];
      *((void *)a1 + 10) = v12;
      *((void *)a1 + 11) = v16;
      (**((void (***)(uint64_t, char **, char *))v12 - 1))((uint64_t)(a1 + 56), v11, v12);
    }
    else
    {
      long long v17 = *((_OWORD *)v11 + 1);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)v11;
      *(_OWORD *)(a1 + 72) = v17;
      *((void *)a1 + 11) = v11[4];
    }
    uint64_t v18 = a2[12];
    *((void *)a1 + 12) = v18;
    long long v19 = *((_OWORD *)a2 + 8);
    *((_OWORD *)a1 + 8) = v19;
    uint64_t v20 = v19;
    uint64_t v21 = **(void (***)(char *, char **, uint64_t))(v19 - 8);
    uint64_t v22 = v18;
    v21(a1 + 104, a2 + 13, v20);
    uint64_t v23 = *(int *)(a3 + 52);
    uint64_t v24 = &a1[v23];
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_8F5F0();
    if (sub_5754((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_5664(&qword_BDD70);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      sub_56F8((uint64_t)v24, 0, 1, v26);
    }
    uint64_t v28 = *(int *)(a3 + 56);
    uint64_t v29 = &a1[v28];
    uint64_t v30 = (uint64_t)a2 + v28;
    uint64_t v31 = *(uint64_t *)((char *)a2 + v28 + 24);
    if (v31)
    {
      uint64_t v32 = *(void *)(v30 + 32);
      *((void *)v29 + 3) = v31;
      *((void *)v29 + 4) = v32;
      (**(void (***)(void))(v31 - 8))();
    }
    else
    {
      long long v33 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v33;
      *((void *)v29 + 4) = *(void *)(v30 + 32);
    }
  }
  return a1;
}

uint64_t sub_14A68(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80)) {
    sub_616C(a1 + 56);
  }

  sub_616C(a1 + 104);
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 56);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_14B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v10 = a1 + 56;
  uint64_t v11 = a2 + 56;
  uint64_t v12 = *(void *)(a2 + 80);
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v16 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v12;
    *(void *)(a1 + 88) = v16;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(v10, v11, v12);
  }
  else
  {
    long long v17 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v17;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
  }
  uint64_t v18 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v18;
  long long v19 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 128) = v19;
  uint64_t v20 = v19;
  uint64_t v21 = **(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8);
  id v22 = v18;
  v21(a1 + 104, a2 + 104, v20);
  uint64_t v23 = *(int *)(a3 + 52);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_8F5F0();
  if (sub_5754((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = sub_5664(&qword_BDD70);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    sub_56F8((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v28 = *(int *)(a3 + 56);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(a2 + v28 + 24);
  if (v31)
  {
    uint64_t v32 = *(void *)(v30 + 32);
    *(void *)(v29 + 24) = v31;
    *(void *)(v29 + 32) = v32;
    (**(void (***)(void))(v31 - 8))();
  }
  else
  {
    long long v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(void *)(v29 + 32) = *(void *)(v30 + 32);
  }
  return a1;
}

uint64_t sub_14DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(void **)(a2 + 16);
  id v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v15)
    {
      sub_64C8((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
      goto LABEL_8;
    }
    sub_616C(a1 + 56);
  }
  else if (v15)
  {
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 56, a2 + 56);
    goto LABEL_8;
  }
  long long v16 = *(_OWORD *)(a2 + 56);
  long long v17 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 56) = v16;
  *(_OWORD *)(a1 + 72) = v17;
LABEL_8:
  uint64_t v18 = *(void **)(a1 + 96);
  long long v19 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v19;
  id v20 = v19;

  sub_64C8((uint64_t *)(a1 + 104), (uint64_t *)(a2 + 104));
  uint64_t v21 = *(int *)(a3 + 52);
  id v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_8F5F0();
  int v25 = sub_5754((uint64_t)v22, 1, v24);
  int v26 = sub_5754((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      sub_56F8((uint64_t)v22, 0, 1, v24);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v27 = *(void *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
LABEL_13:
    uint64_t v28 = sub_5664(&qword_BDD70);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v27 + 24))(v22, v23, v24);
LABEL_14:
  uint64_t v29 = *(int *)(a3 + 56);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (long long *)(a2 + v29);
  uint64_t v32 = *((void *)v31 + 3);
  if (!*(void *)(a1 + v29 + 24))
  {
    if (v32)
    {
      *(void *)(v30 + 24) = v32;
      *(void *)(v30 + 32) = *((void *)v31 + 4);
      (**(void (***)(uint64_t, long long *))(v32 - 8))(v30, v31);
      return a1;
    }
LABEL_20:
    long long v33 = *v31;
    long long v34 = v31[1];
    *(void *)(v30 + 32) = *((void *)v31 + 4);
    *(_OWORD *)uint64_t v30 = v33;
    *(_OWORD *)(v30 + 16) = v34;
    return a1;
  }
  if (!v32)
  {
    sub_616C(v30);
    goto LABEL_20;
  }
  sub_64C8((uint64_t *)v30, (uint64_t *)v31);
  return a1;
}

uint64_t sub_150D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 104);
  long long v8 = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v8;
  uint64_t v9 = *(int *)(a3 + 52);
  uint64_t v10 = (void *)(a1 + v9);
  id v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 104) = v7;
  uint64_t v12 = sub_8F5F0();
  if (sub_5754((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_5664(&qword_BDD70);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    sub_56F8((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = *(int *)(a3 + 56);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  return a1;
}

uint64_t sub_15224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  long long v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80)) {
    sub_616C(a1 + 56);
  }
  long long v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v10;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  id v11 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  sub_616C(a1 + 104);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v12 = *(int *)(a3 + 52);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_8F5F0();
  int v16 = sub_5754((uint64_t)v13, 1, v15);
  int v17 = sub_5754((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      sub_56F8((uint64_t)v13, 0, 1, v15);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_8:
    uint64_t v19 = sub_5664(&qword_BDD70);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_9:
  uint64_t v20 = *(int *)(a3 + 56);
  uint64_t v21 = a1 + v20;
  if (*(void *)(a1 + v20 + 24)) {
    sub_616C(a1 + v20);
  }
  long long v22 = *(_OWORD *)(a2 + v20 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)(a2 + v20);
  *(_OWORD *)(v21 + 16) = v22;
  *(void *)(v21 + 32) = *(void *)(a2 + v20 + 32);
  return a1;
}

uint64_t sub_15470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15484);
}

uint64_t sub_15484(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 52);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_15510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_15524);
}

void *sub_15524(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 52);
    return (void *)sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

void sub_155A8()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1568C()
{
  return 0xD000000000000011;
}

uint64_t sub_156C0()
{
  swift_getKeyPath();
  sub_5664(&qword_BB528);
  sub_8F430();
  swift_release();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  sub_15F90((void *)v1, v7, v6, v5, v4, v3[5], v3[0], v3[1]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  if (!v2) {
    return sub_9630((uint64_t)&v1);
  }
  sub_573C(&v1, (uint64_t)v3);
  sub_16A88((uint64_t)v3);
  return sub_616C((uint64_t)v3);
}

uint64_t sub_158E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ASCLockupWrapperComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_15950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ASCLockupWrapperComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_159B8()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_15A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_15AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_15B2C()
{
  return sub_15BBC(&qword_BB4D0, (void (*)(uint64_t))type metadata accessor for ASCLockupWrapper);
}

uint64_t sub_15B74()
{
  return sub_15BBC(&qword_BB4D8, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_15BBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_15C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_actionRunner);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_actionRunner);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_18234(v4);
}

uint64_t sub_15C24(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_additionalMetrics) = a1;
  return swift_bridgeObjectRelease();
}

id sub_15C3C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_defaultIdentifier];
  *(void *)uint64_t v9 = 0xD00000000000001CLL;
  *((void *)v9 + 1) = 0x800000000009B660;
  long long v10 = &v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_postInstallAction];
  *(_OWORD *)long long v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  id v11 = &v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_actionRunner];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_additionalMetrics] = 0;
  uint64_t v12 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView;
  id v13 = objc_allocWithZone((Class)ASCLockupView);
  uint64_t v14 = v4;
  *(void *)&v4[v12] = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v17.receiver = v14;
  v17.super_class = (Class)type metadata accessor for ASCLockupWrapperComponent();
  id v15 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  sub_16E64();

  return v15;
}

id sub_15DE4()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView), "sizeThatFits:");
}

void sub_15E50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCLockupWrapperComponent();
  objc_msgSendSuper2(&v2, "layoutSubviews");
  id v1 = *(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView];
  [v0 bounds];
  objc_msgSend(v1, "setFrame:");
}

id sub_15F0C()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView), "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

void sub_15F90(void *a1, void *a2, void *a3, uint64_t a4, objc_class *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v15 = sub_8F390();
  __chkstk_darwin(v15 - 8);
  sub_B7F0();
  if (a8)
  {
    uint64_t v59 = a8;
  }
  else
  {
    a7 = *(void *)&v9[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_defaultIdentifier];
    uint64_t v59 = *(void *)&v9[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_defaultIdentifier + 8];
    swift_bridgeObjectRetain();
  }
  uint64_t v58 = a7;
  if (a5) {
    Class isa = a5;
  }
  else {
    Class isa = (Class)ASCLockupViewSizeMediumOfferButton;
  }
  uint64_t v17 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView;
  uint64_t v18 = *(void **)&v9[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView];
  swift_bridgeObjectRetain();
  uint64_t v19 = a5;
  [v18 setLockupSize:isa];
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_15C24(v20);
  if (!a6)
  {
LABEL_13:
    sub_5664((uint64_t *)&unk_BB5E0);
    uint64_t v27 = sub_8F3E0();
    sub_183C4(v27);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    long long v61 = (void *)type metadata accessor for ASCLockupWrapperComponent();
    aBlock[0] = v9;
    uint64_t v28 = v9;
    id v29 = (id)AMSLogKey();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = sub_8F9D0();
      uint64_t v53 = v32;
      uint64_t v54 = v31;

      sub_184C8();
      sub_18448();
      sub_183DC(aBlock);
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_18480(MetatypeMetadata);
      sub_184F8();
      sub_1842C();
      v66 = &type metadata for String;
      uint64_t v64 = v54;
      uint64_t v65 = v53;
      sub_8F360();
      sub_184F8();
      v34._countAndFlagsBits = 93;
    }
    else
    {
      sub_184A0();
      sub_18448();
      sub_183DC(aBlock);
      uint64_t v44 = swift_getMetatypeMetadata();
      sub_18480(v44);
      sub_EF88((uint64_t)&v64, &qword_BC780);
      v34._countAndFlagsBits = 58;
    }
    v34._object = (void *)0xE100000000000000;
    sub_8F370(v34);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)aBlock);
    sub_8F340();
    sub_43634();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void **)&v9[v17];
    sub_F040(0, &qword_BB608);
    id v46 = v45;
    id v47 = sub_169E0(a1, a2, a3, v58, v59);
    [v46 setRequest:v47];

    goto LABEL_22;
  }
  uint64_t v21 = sub_8F9D0();
  uint64_t v23 = v22;
  if (v21 == sub_8F9D0() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v26 = sub_8FF40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      goto LABEL_13;
    }
  }
  Class v57 = isa;
  swift_bridgeObjectRelease();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v35 = sub_8F3E0();
  sub_183C4(v35);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  long long v61 = (void *)type metadata accessor for ASCLockupWrapperComponent();
  aBlock[0] = v9;
  uint64_t v36 = v9;
  id v37 = (id)AMSLogKey();
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = sub_8F9D0();
    uint64_t v41 = v40;

    sub_184C8();
    sub_18448();
    sub_183DC(aBlock);
    uint64_t v42 = swift_getMetatypeMetadata();
    sub_18480(v42);
    sub_184F8();
    sub_1842C();
    v66 = &type metadata for String;
    uint64_t v64 = v39;
    uint64_t v65 = v41;
    sub_8F360();
    sub_184F8();
    v43._countAndFlagsBits = 93;
  }
  else
  {
    sub_184A0();
    sub_18448();
    sub_820C(aBlock, (uint64_t)v61);
    uint64_t DynamicType = swift_getDynamicType();
    v66 = (void *)swift_getMetatypeMetadata();
    uint64_t v64 = DynamicType;
    sub_8F360();
    sub_EF88((uint64_t)&v64, &qword_BC780);
    v43._countAndFlagsBits = 58;
  }
  v43._object = (void *)0xE100000000000000;
  sub_8F370(v43);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)aBlock);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  id v49 = objc_allocWithZone((Class)ASCLockupViewGroup);
  id v47 = sub_181C0(0xD000000000000012, 0x800000000009B5C0);
  Class isa = sub_8F930().super.isa;
  uint64_t v50 = sub_184E0();
  *(void *)(v50 + 16) = v36;
  v62 = sub_183AC;
  uint64_t v63 = v50;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_16954;
  long long v61 = &unk_AF3E0;
  uint64_t v51 = _Block_copy(aBlock);
  long long v52 = v36;
  swift_release();
  [v47 _lockupFromMediaAPIResponse:isa withContext:a3 completionBlock:v51];

  _Block_release(v51);
LABEL_22:
}

void sub_165F0(void *a1, uint64_t a2, char *a3)
{
  uint64_t v6 = sub_8F390();
  __chkstk_darwin(v6 - 8);
  if (a2)
  {
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v25 = type metadata accessor for ASCLockupWrapperComponent();
    v24[0] = a3;
    uint64_t v7 = a3;
    swift_errorRetain();
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_8F9D0();
      uint64_t v12 = v11;

      sub_8F380();
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      sub_8F370(v27);
      sub_820C(v24, v25);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v22[0] = DynamicType;
      sub_8F360();
      sub_EF88((uint64_t)v22, &qword_BC780);
      v28._countAndFlagsBits = 5972026;
      v28._object = (void *)0xE300000000000000;
      sub_8F370(v28);
      uint64_t MetatypeMetadata = &type metadata for String;
      v22[0] = v10;
      v22[1] = v12;
      sub_8F360();
      sub_EF88((uint64_t)v22, &qword_BC780);
      v14._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      sub_8F370(v29);
      sub_820C(v24, v25);
      uint64_t v20 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v22[0] = v20;
      sub_8F360();
      sub_EF88((uint64_t)v22, &qword_BC780);
      v14._countAndFlagsBits = 58;
    }
    v14._object = (void *)0xE100000000000000;
    sub_8F370(v14);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v24);
    sub_8F340();
    sub_4366C();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else if (a1)
  {
    uint64_t v15 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView;
    int v16 = *(void **)&a3[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView];
    uint64_t v17 = self;
    id v21 = a1;
    id v18 = v16;
    id v19 = [v17 blueTheme];
    [v18 setOfferTheme:v19];

    [*(id *)&a3[v15] setLockup:v21];
  }
}

void sub_16954(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_169E0(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    NSString v8 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  id v9 = [(id)swift_getObjCClassFromMetadata() _requestWithID:a1 kind:a2 context:a3 clientID:v8];

  return v9;
}

uint64_t sub_16A88(uint64_t a1)
{
  sub_18294(a1, (uint64_t)v8);
  uint64_t v3 = v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_postInstallAction;
  swift_beginAccess();
  sub_9698((uint64_t)v8, v3);
  swift_endAccess();
  uint64_t v4 = sub_184E0();
  swift_weakInit();
  uint64_t v5 = sub_184E0();
  swift_unknownObjectWeakInit();
  sub_18294(a1, (uint64_t)v8);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  sub_573C(v8, v6 + 32);
  return sub_15C04((uint64_t)sub_183A0, v6);
}

uint64_t sub_16B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_8EC80();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_8F650();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      Swift::String v14 = (void *)Strong;
      uint64_t v15 = Strong + OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_postInstallAction;
      swift_beginAccess();
      sub_6F8C(v15, (uint64_t)&v19);

      if (*((void *)&v20 + 1))
      {
        sub_EF88((uint64_t)&v19, &qword_BAAD0);
        sub_8ECA0();
        sub_8F560();
        sub_8F770();
        uint64_t v16 = v19;
        sub_8F770();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v6, v10, v7);
        uint64_t v17 = sub_5664((uint64_t *)&unk_BCEB0);
        sub_56F8((uint64_t)v6, 0, 1, v17);
        long long v19 = 0u;
        long long v20 = 0u;
        LOBYTE(v21) = -1;
        (*(void (**)(uint64_t, unsigned char *, uint64_t, long long *))(*(void *)v16 + 216))(a3, v6, v12, &v19);
        swift_release();
        swift_release();
        swift_release();
        sub_EF88((uint64_t)&v19, &qword_BB600);
        sub_EFE4((uint64_t)v6);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    else
    {
      uint64_t v21 = 0;
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_release();
    return sub_EF88((uint64_t)&v19, &qword_BAAD0);
  }
  return result;
}

id sub_16E64()
{
  uint64_t v1 = self;
  uint64_t v2 = sub_184E0();
  *(void *)(v2 + 16) = v0;
  v10[4] = sub_18274;
  v10[5] = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_17574;
  v10[3] = &unk_AF318;
  uint64_t v3 = _Block_copy(v10);
  uint64_t v4 = v0;
  swift_release();
  [v1 createConnectionWithCompletionBlock:v3];
  _Block_release(v3);
  uint64_t v5 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView;
  [*(id *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_lockupView] setShowsPlaceholderContent:1];
  [*(id *)&v4[v5] setDelegate:v4];
  id v6 = [v4 contentView];
  id v7 = objc_msgSend(self, "ams_clear");
  [v6 setBackgroundColor:v7];

  id v8 = [v4 contentView];
  [v8 addSubview:*(void *)&v4[v5]];

  [v4 setIsAccessibilityElement:1];
  return [v4 setAccessibilityTraits:UIAccessibilityTraitButton];
}

uint64_t sub_17034(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_8F390();
  __chkstk_darwin(v4 - 8);
  if (a1)
  {
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
    uint64_t v30 = type metadata accessor for ASCLockupWrapperComponent();
    v29[0] = (uint64_t)a2;
    id v5 = a2;
    swift_errorRetain();
    id v6 = (id)AMSLogKey();
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = sub_8F9D0();
      uint64_t v10 = v9;

      sub_8F380();
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      sub_8F370(v31);
      sub_820C(v29, v30);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v26 = DynamicType;
      sub_8F360();
      sub_EF88((uint64_t)&v26, &qword_BC780);
      v32._countAndFlagsBits = 5972026;
      v32._object = (void *)0xE300000000000000;
      sub_8F370(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v26 = v8;
      uint64_t v27 = v10;
      sub_8F360();
      sub_EF88((uint64_t)&v26, &qword_BC780);
      v12._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      sub_8F370(v35);
      sub_820C(v29, v30);
      uint64_t v21 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v26 = v21;
      sub_8F360();
      sub_EF88((uint64_t)&v26, &qword_BC780);
      v12._countAndFlagsBits = 58;
    }
    v12._object = (void *)0xE100000000000000;
    sub_8F370(v12);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v29);
    sub_8F340();
    swift_getErrorValue();
    uint64_t v30 = v25;
    uint64_t v22 = sub_8374(v29);
    (*(void (**)(uint64_t *))(*(void *)(v25 - 8) + 16))(v22);
    sub_8F3B0();
    sub_EF88((uint64_t)v29, &qword_BC780);
    sub_4366C();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v30 = type metadata accessor for ASCLockupWrapperComponent();
    v29[0] = (uint64_t)a2;
    id v13 = a2;
    id v14 = (id)AMSLogKey();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = sub_8F9D0();
      uint64_t v18 = v17;

      sub_8F380();
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      sub_8F370(v33);
      sub_820C(v29, v30);
      uint64_t v19 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v26 = v19;
      sub_8F360();
      sub_EF88((uint64_t)&v26, &qword_BC780);
      v34._countAndFlagsBits = 5972026;
      v34._object = (void *)0xE300000000000000;
      sub_8F370(v34);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v26 = v16;
      uint64_t v27 = v18;
      sub_8F360();
      sub_EF88((uint64_t)&v26, &qword_BC780);
      v20._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      sub_8F370(v36);
      sub_820C(v29, v30);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v26 = v24;
      sub_8F360();
      sub_EF88((uint64_t)&v26, &qword_BC780);
      v20._countAndFlagsBits = 58;
    }
    v20._object = (void *)0xE100000000000000;
    sub_8F370(v20);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v29);
    sub_8F340();
    sub_43634();
    return swift_bridgeObjectRelease();
  }
}

void sub_17574(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_175E0()
{
}

id sub_17620()
{
  return sub_1762C((SEL *)&selRef_dealloc);
}

id sub_1762C(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ASCLockupWrapperComponent();
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t type metadata accessor for ASCLockupWrapperComponent()
{
  return self;
}

id sub_17718(void *a1)
{
  objc_msgSend(objc_msgSend(a1, "container"), "contentSize");
  swift_unknownObjectRelease();
  id v2 = [a1 container];
  swift_getObjectType();
  sub_3DFC8();
  swift_unknownObjectRelease();
  objc_msgSend(objc_msgSend(a1, "container"), "contentSize");
  swift_unknownObjectRelease();
  id v3 = [a1 traitCollection];
  ASCLockupViewSizeGetEstimatedSize();
  double v5 = v4;
  double v7 = v6;

  uint64_t v8 = self;
  id v9 = [v8 estimatedDimension:v5];
  id v10 = [v8 estimatedDimension:v7];
  id v11 = [self sizeWithWidthDimension:v9 heightDimension:v10];

  return v11;
}

id sub_178DC(void *a1)
{
  return sub_17718(a1);
}

uint64_t sub_178F4()
{
  uint64_t v1 = sub_8F390();
  __chkstk_darwin(v1 - 8);
  sub_B7F0();
  uint64_t v2 = sub_8F9D0();
  uint64_t v4 = v3;
  if (v2 == sub_8F9D0() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_8FF40();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v9 = sub_8F3E0();
  sub_183C4(v9);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v35 = type metadata accessor for ASCLockupWrapperComponent();
  v34[0] = v0;
  uint64_t v30 = v0;
  id v10 = (id)AMSLogKey();
  uint64_t v29 = v35;
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = sub_8F9D0();
    uint64_t v28 = v13;

    sub_184C8();
    sub_18464();
    sub_183DC(v34);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1840C(MetatypeMetadata);
    sub_EF88((uint64_t)&v31, &qword_BC780);
    sub_1842C();
    Swift::String v33 = &type metadata for String;
    uint64_t v31 = v12;
    uint64_t v32 = v28;
    sub_8F360();
    sub_EF88((uint64_t)&v31, &qword_BC780);
    v15._countAndFlagsBits = 93;
  }
  else
  {
    sub_184A0();
    sub_18464();
    sub_183DC(v34);
    uint64_t v16 = swift_getMetatypeMetadata();
    sub_1840C(v16);
    sub_EF88((uint64_t)&v31, &qword_BC780);
    v15._countAndFlagsBits = 58;
  }
  v15._object = (void *)0xE100000000000000;
  sub_8F370(v15);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v34);
  sub_8F340();
  sub_43634();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = *(void (**)(uint64_t))&v30[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_actionRunner];
  if (v17)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v35 = v29;
    v34[0] = v30;
    uint64_t v18 = v30;
    sub_18224((uint64_t)v17);
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      Swift::String v20 = v19;
      uint64_t v21 = sub_8F9D0();
      uint64_t v23 = v22;

      sub_184C8();
      sub_18464();
      sub_183DC(v34);
      uint64_t v24 = swift_getMetatypeMetadata();
      sub_1840C(v24);
      sub_EF88((uint64_t)&v31, &qword_BC780);
      sub_1842C();
      Swift::String v33 = &type metadata for String;
      uint64_t v31 = v21;
      uint64_t v32 = v23;
      sub_8F360();
      sub_EF88((uint64_t)&v31, &qword_BC780);
      v25._countAndFlagsBits = 93;
    }
    else
    {
      sub_184A0();
      sub_18464();
      sub_183DC(v34);
      uint64_t v26 = swift_getMetatypeMetadata();
      sub_1840C(v26);
      sub_EF88((uint64_t)&v31, &qword_BC780);
      v25._countAndFlagsBits = 58;
    }
    v25._object = (void *)0xE100000000000000;
    sub_8F370(v25);
    sub_8F3A0();
    sub_616C((uint64_t)v34);
    sub_8F340();
    sub_43634();
    uint64_t v27 = swift_bridgeObjectRelease();
    v17(v27);
    return sub_18234((uint64_t)v17);
  }
  return result;
}

id sub_17DAC()
{
  uint64_t v1 = sub_8F390();
  __chkstk_darwin(v1 - 8);
  sub_B7F0();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v2 = sub_8F3E0();
  sub_183C4(v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  *((void *)&v18 + 1) = type metadata accessor for ASCLockupWrapperComponent();
  *(void *)&long long v17 = v0;
  uint64_t v3 = v0;
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_8F9D0();
    uint64_t v8 = v7;

    sub_184C8();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    sub_8F370(v19);
    sub_820C(&v17, *((uint64_t *)&v18 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = DynamicType;
    sub_8F360();
    sub_EF88((uint64_t)v15, &qword_BC780);
    sub_1842C();
    uint64_t MetatypeMetadata = &type metadata for String;
    v15[0] = v6;
    v15[1] = v8;
    sub_8F360();
    sub_EF88((uint64_t)v15, &qword_BC780);
    v10._countAndFlagsBits = 93;
  }
  else
  {
    sub_184A0();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    sub_8F370(v20);
    sub_820C(&v17, *((uint64_t *)&v18 + 1));
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = v11;
    sub_8F360();
    sub_EF88((uint64_t)v15, &qword_BC780);
    v10._countAndFlagsBits = 58;
  }
  v10._object = (void *)0xE100000000000000;
  sub_8F370(v10);
  sub_8F3A0();
  sub_616C((uint64_t)&v17);
  sub_8F340();
  uint64_t v12 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_additionalMetrics;
  uint64_t v13 = *(void *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin25ASCLockupWrapperComponent_additionalMetrics];
  if (v13)
  {
    *((void *)&v18 + 1) = sub_5664(&qword_BB5F8);
    *(void *)&long long v17 = v13;
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  type metadata accessor for Log();
  swift_bridgeObjectRetain();
  sub_8F3B0();
  sub_EF88((uint64_t)&v17, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  if (!*(void *)&v3[v12]) {
    sub_8F950();
  }
  sub_F040(0, &qword_BB5F0);
  swift_bridgeObjectRetain();
  return sub_180C8();
}

id sub_180C8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = sub_8F930().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithFields:isa];

  return v2;
}

id sub_181C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithName:v3];

  return v4;
}

uint64_t sub_18224(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_18234(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_18244()
{
  uint64_t v1 = sub_184B8();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_18274(uint64_t a1)
{
  return sub_17034(a1, *(void **)(v1 + 16));
}

uint64_t sub_1827C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1828C()
{
  return swift_release();
}

uint64_t sub_18294(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_182F8()
{
  swift_weakDestroy();
  uint64_t v0 = sub_184B8();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_18328()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_184B8();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_18358()
{
  swift_release();
  swift_release();
  sub_616C(v0 + 32);

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_183A0()
{
  return sub_16B80(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

void sub_183AC(void *a1, uint64_t a2)
{
  sub_165F0(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_183C4(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_183DC(void *a1)
{
  sub_820C(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_1840C(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return sub_8F360();
}

void sub_1842C()
{
  v1._countAndFlagsBits = 5972026;
  v1._object = (void *)0xE300000000000000;
  sub_8F370(v1);
}

void sub_18448()
{
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  sub_8F370(v1);
}

void sub_18464()
{
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  sub_8F370(v1);
}

uint64_t sub_18480(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return sub_8F360();
}

uint64_t sub_184A0()
{
  return sub_8F380();
}

uint64_t sub_184B8()
{
  return v0;
}

uint64_t sub_184C8()
{
  return sub_8F380();
}

uint64_t sub_184E0()
{
  return swift_allocObject();
}

uint64_t sub_184F8()
{
  return sub_EF88(v1 - 112, v0);
}

uint64_t sub_18510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6F8C(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_18520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_8F4B0();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_18588@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_8EA70();
  swift_allocObject();
  uint64_t v9 = type metadata accessor for AuthenticateAction();
  uint64_t v18 = a1;
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v10();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v11();
  }
  else
  {
    uint64_t v13 = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a2, v8, v5);
    __chkstk_darwin(v13);
    sub_1921C();
    sub_191F4();
    uint64_t v14 = sub_BEB0((uint64_t)&v20, a2 + *(int *)(v9 + 20));
    __chkstk_darwin(v14);
    sub_1921C();
    sub_191F4();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v15();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v16 + 8))(a1);
    return sub_BEB0((uint64_t)&v19, a2 + *(int *)(v9 + 24));
  }
}

uint64_t sub_18904@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_18588(a1, a2);
}

uint64_t type metadata accessor for AuthenticateAction()
{
  uint64_t result = qword_BB668;
  if (!qword_BB668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_18964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_95D8(a1, *(void *)(v2 + 16), a2);
}

uint64_t *sub_1896C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    Swift::String v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)a1 + v15;
    long long v17 = (char *)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *((void *)v17 + 4);
      *((void *)v16 + 3) = v18;
      *((void *)v16 + 4) = v19;
      (**(void (***)(void))(v18 - 8))();
    }
    else
    {
      long long v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v20;
      *((void *)v16 + 4) = *((void *)v17 + 4);
    }
  }
  return a1;
}

uint64_t sub_18ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  if (*(void *)(v5 + 24)) {
    sub_616C(v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 24);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_18B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(void))(v10 - 8))();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }
  else
  {
    long long v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }
  return a1;
}

uint64_t sub_18C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      sub_64C8((uint64_t *)v8, v9);
      goto LABEL_8;
    }
    sub_616C(v8);
  }
  else if (v10)
  {
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v9[4];
    (**(void (***)(uint64_t, long long *))(v10 - 8))(v8, (long long *)v9);
    goto LABEL_8;
  }
  long long v11 = *(_OWORD *)v9;
  long long v12 = *((_OWORD *)v9 + 1);
  *(void *)(v8 + 32) = v9[4];
  *(_OWORD *)uint64_t v8 = v11;
  *(_OWORD *)(v8 + 16) = v12;
LABEL_8:
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (long long *)(a2 + v13);
  uint64_t v16 = *((void *)v15 + 3);
  if (!*(void *)(a1 + v13 + 24))
  {
    if (v16)
    {
      *(void *)(v14 + 24) = v16;
      *(void *)(v14 + 32) = *((void *)v15 + 4);
      (**(void (***)(uint64_t, long long *))(v16 - 8))(v14, v15);
      return a1;
    }
LABEL_14:
    long long v17 = *v15;
    long long v18 = v15[1];
    *(void *)(v14 + 32) = *((void *)v15 + 4);
    *(_OWORD *)uint64_t v14 = v17;
    *(_OWORD *)(v14 + 16) = v18;
    return a1;
  }
  if (!v16)
  {
    sub_616C(v14);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v14, (uint64_t *)v15);
  return a1;
}

uint64_t sub_18E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  return a1;
}

uint64_t sub_18EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    sub_616C(v8);
  }
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  if (*(void *)(a1 + v11 + 24)) {
    sub_616C(a1 + v11);
  }
  long long v13 = *(_OWORD *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(v12 + 16) = v13;
  *(void *)(v12 + 32) = *(void *)(a2 + v11 + 32);
  return a1;
}

uint64_t sub_18F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18FA8);
}

uint64_t sub_18FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_5754(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_19044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19058);
}

void sub_19058(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_56F8(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  }
}

uint64_t sub_190E4()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1917C(uint64_t a1)
{
  unint64_t result = sub_191A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_191A4()
{
  unint64_t result = qword_BB6A8;
  if (!qword_BB6A8)
  {
    type metadata accessor for AuthenticateAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB6A8);
  }
  return result;
}

void sub_191F4()
{
  sub_3B0C();
}

uint64_t sub_19230()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_8F390();
  __chkstk_darwin(v2 - 8);
  sub_5664(&qword_BB0A0);
  uint64_t v41 = sub_8F820();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v3 = sub_8F3E0();
  sub_183C4(v3);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v39 = type metadata accessor for AuthenticateActionImplementation();
  uint64_t v45 = (void *)v39;
  uint64_t aBlock = v0;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_8F9D0();
    uint64_t v8 = v7;

    sub_8F380();
    sub_18448();
    sub_1A9FC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_1AA34(MetatypeMetadata);
    sub_8250((uint64_t)&v48);
    sub_1842C();
    uint64_t v50 = &type metadata for String;
    uint64_t v48 = v6;
    uint64_t v49 = v8;
    sub_8F360();
    sub_8250((uint64_t)&v48);
    v10._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    sub_18448();
    sub_1A9FC();
    uint64_t v11 = swift_getMetatypeMetadata();
    sub_1AA34(v11);
    sub_8250((uint64_t)&v48);
    v10._countAndFlagsBits = 58;
  }
  v10._object = (void *)0xE100000000000000;
  sub_8F370(v10);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)&aBlock);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  sub_8EC10();
  sub_8F560();
  sub_8F770();
  uint64_t v12 = aBlock;
  sub_1AA54();
  uint64_t v40 = aBlock;
  sub_8EC70();
  uint64_t v13 = sub_1AA54();
  long long v14 = (void *)(*((uint64_t (**)(uint64_t))*aBlock + 11))(v13);
  if (v14
    && (uint64_t v15 = v14,
        id v16 = [v14 topViewController],
        v15,
        v16))
  {
    id v17 = [objc_allocWithZone((Class)AMSAuthenticateOptions) init];
    [v17 setCanMakeAccountActive:1];
    [v17 setEnableAccountCreation:1];
    sub_F040(0, &qword_BB778);
    id v38 = v17;
    id v18 = sub_19978(0, v17);
    sub_F040(0, &qword_BBB90);
    id v37 = v18;
    id v35 = v16;
    Swift::String v36 = (void *)sub_8B07C(v37);
    id v34 = [v36 performAuthentication];
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v45 = (void *)v39;
    uint64_t aBlock = v1;
    swift_retain();
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      long long v20 = v19;
      uint64_t v21 = sub_8F9D0();
      uint64_t v22 = v12;
      uint64_t v24 = v23;

      sub_8F380();
      sub_18448();
      sub_1A9FC();
      uint64_t v25 = swift_getMetatypeMetadata();
      sub_1AA34(v25);
      sub_8250((uint64_t)&v48);
      sub_1842C();
      uint64_t v50 = &type metadata for String;
      uint64_t v48 = v21;
      uint64_t v49 = v24;
      uint64_t v12 = v22;
      sub_8F360();
      sub_8250((uint64_t)&v48);
      v26._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      sub_18448();
      sub_1A9FC();
      uint64_t v28 = swift_getMetatypeMetadata();
      sub_1AA34(v28);
      sub_8250((uint64_t)&v48);
      v26._countAndFlagsBits = 58;
    }
    v26._object = (void *)0xE100000000000000;
    sub_8F370(v26);
    sub_8F3A0();
    sub_616C((uint64_t)&aBlock);
    sub_8F340();
    sub_43634();
    swift_bridgeObjectRelease();
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = v1;
    uint64_t v29[3] = v12;
    uint64_t v27 = v41;
    v29[4] = v40;
    v29[5] = v41;
    id v46 = sub_1A7A8;
    id v47 = v29;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1A34C;
    uint64_t v45 = &unk_AF450;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v34 addSuccessBlock:v30];
    _Block_release(v30);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v1;
    *(void *)(v31 + 24) = v41;
    id v46 = sub_1A7D0;
    id v47 = (void *)v31;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1A64C;
    uint64_t v45 = &unk_AF4A0;
    uint64_t v32 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v34 addErrorBlock:v32];
    _Block_release(v32);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1A70C();
    swift_allocError();
    uint64_t v27 = sub_8F7B0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return v27;
}

id sub_19978(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithAccount:a1 options:a2];

  return v4;
}

uint64_t sub_199D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_8F390();
  __chkstk_darwin(v7 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v8 = type metadata accessor for AuthenticateActionImplementation();
  uint64_t v35 = v8;
  v34[0] = a2;
  swift_retain();
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    Swift::String v10 = v9;
    uint64_t v11 = sub_8F9D0();
    uint64_t v13 = v12;

    sub_8F380();
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    sub_8F370(v40);
    sub_820C(v34, v35);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = DynamicType;
    sub_8F360();
    sub_8250((uint64_t)&v37);
    v41._countAndFlagsBits = 5972026;
    v41._object = (void *)0xE300000000000000;
    sub_8F370(v41);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v37 = v11;
    uint64_t v38 = v13;
    sub_8F360();
    sub_8250((uint64_t)&v37);
    v15._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    sub_8F370(v42);
    sub_820C(v34, v35);
    uint64_t v16 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = v16;
    sub_8F360();
    sub_8250((uint64_t)&v37);
    v15._countAndFlagsBits = 58;
  }
  v15._object = (void *)0xE100000000000000;
  sub_8F370(v15);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v34);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  (*(void (**)(id))(*(void *)a3 + 136))([a1 account]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v35 = v8;
  v34[0] = a2;
  swift_retain();
  id v17 = (id)AMSLogKey();
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = sub_8F9D0();
    uint64_t v21 = v20;

    sub_8F380();
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    sub_8F370(v43);
    sub_820C(v34, v35);
    uint64_t v22 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = v22;
    sub_8F360();
    sub_8250((uint64_t)&v37);
    v44._countAndFlagsBits = 5972026;
    v44._object = (void *)0xE300000000000000;
    sub_8F370(v44);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v37 = v19;
    uint64_t v38 = v21;
    sub_8F360();
    sub_8250((uint64_t)&v37);
    v23._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    sub_8F370(v45);
    sub_820C(v34, v35);
    uint64_t v24 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v37 = v24;
    sub_8F360();
    sub_8250((uint64_t)&v37);
    v23._countAndFlagsBits = 58;
  }
  v23._object = (void *)0xE100000000000000;
  sub_8F370(v23);
  sub_8F3A0();
  sub_616C((uint64_t)v34);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  id v25 = [a1 account];
  sub_8ECF0();

  Swift::String v26 = (void *)swift_allocObject();
  v26[2] = a1;
  v26[3] = a2;
  v26[4] = a5;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a2;
  *(void *)(v27 + 24) = a5;
  uint64_t v28 = sub_F040(0, (unint64_t *)&qword_BBBB0);
  swift_retain_n();
  swift_retain_n();
  id v29 = a1;
  uint64_t v30 = sub_8FBD0();
  uint64_t v35 = v28;
  Swift::String v36 = &protocol witness table for OS_dispatch_queue;
  v34[0] = v30;
  sub_8F7A0();
  swift_release();
  swift_release();
  swift_release();
  return sub_616C((uint64_t)v34);
}

uint64_t sub_19FA4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_8F390();
  __chkstk_darwin(v5 - 8);
  id v6 = [a2 account];
  id v7 = objc_msgSend(v6, "ams_DSID");

  if (v7)
  {
    id v8 = [v7 stringValue];

    id v7 = (id)sub_8F9D0();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0;
  }
  sub_5664(&qword_BB780);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_92840;
  strcpy((char *)(inited + 32), "account_dsid");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v10;
  sub_5664(&qword_BB788);
  uint64_t v12 = sub_8F950();
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v25 = type metadata accessor for AuthenticateActionImplementation();
  v24[0] = a3;
  swift_retain();
  id v13 = (id)AMSLogKey();
  if (v13)
  {
    long long v14 = v13;
    uint64_t v15 = sub_8F9D0();
    uint64_t v17 = v16;

    sub_8F380();
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    sub_8F370(v26);
    sub_820C(v24, v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    sub_8F360();
    sub_8250((uint64_t)v22);
    v27._countAndFlagsBits = 5972026;
    v27._object = (void *)0xE300000000000000;
    sub_8F370(v27);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v15;
    v22[1] = v17;
    sub_8F360();
    sub_8250((uint64_t)v22);
    v19._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    sub_8F370(v28);
    sub_820C(v24, v25);
    uint64_t v20 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v20;
    sub_8F360();
    sub_8250((uint64_t)v22);
    v19._countAndFlagsBits = 58;
  }
  v19._object = (void *)0xE100000000000000;
  sub_8F370(v19);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v24);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_5664(&qword_BB790);
  v24[0] = v12;
  sub_8F7F0();
  return sub_EF34((uint64_t)v24);
}

void sub_1A34C(uint64_t a1, void *a2)
{
}

uint64_t sub_1A354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_8F390();
  __chkstk_darwin(v3 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v4 = sub_8F3E0();
  sub_183C4(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  uint64_t v19 = type metadata accessor for AuthenticateActionImplementation();
  v18[0] = a2;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_8F9D0();
    uint64_t v9 = v8;

    sub_8F380();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    sub_8F370(v20);
    sub_820C(v18, v19);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = DynamicType;
    sub_8F360();
    sub_8250((uint64_t)v16);
    sub_1842C();
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v7;
    v16[1] = v9;
    sub_8F360();
    sub_8250((uint64_t)v16);
    v11._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    sub_8F370(v21);
    sub_820C(v18, v19);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v12;
    sub_8F360();
    sub_8250((uint64_t)v16);
    v11._countAndFlagsBits = 58;
  }
  v11._object = (void *)0xE100000000000000;
  sub_8F370(v11);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v18);
  sub_8F340();
  swift_getErrorValue();
  uint64_t v19 = v15;
  id v13 = sub_8374(v18);
  (*(void (**)(uint64_t *))(*(void *)(v15 - 8) + 16))(v13);
  sub_8F3B0();
  sub_8250((uint64_t)v18);
  sub_4366C();
  swift_bridgeObjectRelease();
  return sub_8F7D0();
}

void sub_1A64C(uint64_t a1, void *a2)
{
}

void sub_1A654(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t type metadata accessor for AuthenticateActionImplementation()
{
  return self;
}

uint64_t sub_1A6E8()
{
  return sub_19230();
}

unint64_t sub_1A70C()
{
  unint64_t result = qword_BB770;
  if (!qword_BB770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB770);
  }
  return result;
}

uint64_t sub_1A758()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1A7A8(void *a1)
{
  return sub_199D4(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A7C4()
{
  return swift_release();
}

uint64_t sub_1A7D0(uint64_t a1)
{
  return sub_1A354(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A804()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1A84C(uint64_t a1)
{
  return sub_19FA4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A85C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1A89C(uint64_t a1)
{
  return sub_1A354(a1, *(void *)(v1 + 16));
}

unsigned char *storeEnumTagSinglePayload for AuthenticateActionImplementation.PresentationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A96CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateActionImplementation.PresentationError()
{
  return &type metadata for AuthenticateActionImplementation.PresentationError;
}

unint64_t sub_1A9A8()
{
  unint64_t result = qword_BB798;
  if (!qword_BB798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB798);
  }
  return result;
}

uint64_t sub_1A9FC()
{
  sub_820C((void *)(v0 - 184), *(void *)(v0 - 160));
  return swift_getDynamicType();
}

uint64_t sub_1AA34(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return sub_8F360();
}

uint64_t sub_1AA54()
{
  return sub_8F770();
}

id sub_1AA74()
{
  sub_1AAC0();
  id result = sub_1AB00();
  qword_C6AC0 = (uint64_t)result;
  return result;
}

unint64_t sub_1AAC0()
{
  unint64_t result = qword_BB7A0;
  if (!qword_BB7A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BB7A0);
  }
  return result;
}

id sub_1AB00()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithPath:v1];

  return v2;
}

id sub_1AB74()
{
  sub_1AAC0();
  id result = sub_1AB00();
  qword_C6AC8 = (uint64_t)result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for Button.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AC8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Button.Style()
{
  return &type metadata for Button.Style;
}

char *sub_1ACC4(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v8 = a2 + 2;
    uint64_t v9 = a2[5];
    uint64_t v10 = v5;
    if (v9)
    {
      Swift::String v11 = a2[6];
      *((void *)a1 + 5) = v9;
      *((void *)a1 + 6) = v11;
      (**((void (***)(uint64_t, char **, char *))v9 - 1))((uint64_t)(a1 + 16), v8, v9);
    }
    else
    {
      long long v12 = *((_OWORD *)v8 + 1);
      *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
      *((_OWORD *)a1 + 2) = v12;
      *((void *)a1 + 6) = v8[4];
    }
    long long v13 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 5) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 56), (uint64_t)(a2 + 7));
    long long v14 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 12));
    uint64_t v15 = *(int *)(a3 + 36);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_8F5F0();
    if (sub_5754((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_5664(&qword_BDD70);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      sub_56F8((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v20 = *(int *)(a3 + 40);
    Swift::String v21 = &a1[v20];
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 24);
    if (v23)
    {
      uint64_t v24 = *(void *)(v22 + 32);
      *((void *)v21 + 3) = v23;
      *((void *)v21 + 4) = v24;
      (**(void (***)(void))(v23 - 8))();
    }
    else
    {
      long long v25 = *(_OWORD *)(v22 + 16);
      *(_OWORD *)Swift::String v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((void *)v21 + 4) = *(void *)(v22 + 32);
    }
  }
  return a1;
}

uint64_t sub_1AF44(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }
  sub_616C(a1 + 56);
  sub_616C(a1 + 96);
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 40);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_1B020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = a1 + 16;
  uint64_t v8 = a2 + 16;
  uint64_t v9 = *(void *)(a2 + 40);
  id v10 = v6;
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(v7, v8, v9);
  }
  else
  {
    long long v12 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v12;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
  }
  long long v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 56, a2 + 56);
  long long v14 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 96, a2 + 96);
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_8F5F0();
  if (sub_5754((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_5664(&qword_BDD70);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    sub_56F8((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v20 = *(int *)(a3 + 40);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a2 + v20 + 24);
  if (v23)
  {
    uint64_t v24 = *(void *)(v22 + 32);
    *(void *)(v21 + 24) = v23;
    *(void *)(v21 + 32) = v24;
    (**(void (***)(void))(v23 - 8))();
  }
  else
  {
    long long v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(void *)(v21 + 32) = *(void *)(v22 + 32);
  }
  return a1;
}

uint64_t sub_1B258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v9)
    {
      sub_64C8((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    sub_616C(a1 + 16);
  }
  else if (v9)
  {
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v11 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
LABEL_8:
  sub_64C8((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  sub_64C8((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  uint64_t v12 = *(int *)(a3 + 36);
  long long v13 = (void *)(a1 + v12);
  long long v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_8F5F0();
  int v16 = sub_5754((uint64_t)v13, 1, v15);
  int v17 = sub_5754((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      sub_56F8((uint64_t)v13, 0, 1, v15);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_13:
    uint64_t v19 = sub_5664(&qword_BDD70);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_14:
  uint64_t v20 = *(int *)(a3 + 40);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (long long *)(a2 + v20);
  uint64_t v23 = *((void *)v22 + 3);
  if (!*(void *)(a1 + v20 + 24))
  {
    if (v23)
    {
      *(void *)(v21 + 24) = v23;
      *(void *)(v21 + 32) = *((void *)v22 + 4);
      (**(void (***)(uint64_t, long long *))(v23 - 8))(v21, v22);
      return a1;
    }
LABEL_20:
    long long v24 = *v22;
    long long v25 = v22[1];
    *(void *)(v21 + 32) = *((void *)v22 + 4);
    *(_OWORD *)uint64_t v21 = v24;
    *(_OWORD *)(v21 + 16) = v25;
    return a1;
  }
  if (!v23)
  {
    sub_616C(v21);
    goto LABEL_20;
  }
  sub_64C8((uint64_t *)v21, (uint64_t *)v22);
  return a1;
}

uint64_t sub_1B500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = *(int *)(a3 + 36);
  long long v10 = (void *)(a1 + v9);
  long long v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = v8;
  uint64_t v12 = sub_8F5F0();
  if (sub_5754((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_5664(&qword_BDD70);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    sub_56F8((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = *(int *)(a3 + 40);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  return a1;
}

uint64_t sub_1B644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_616C(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_616C(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = *(int *)(a3 + 36);
  long long v10 = (void *)(a1 + v9);
  long long v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_8F5F0();
  int v13 = sub_5754((uint64_t)v10, 1, v12);
  int v14 = sub_5754((uint64_t)v11, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      sub_56F8((uint64_t)v10, 0, 1, v12);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
LABEL_8:
    uint64_t v16 = sub_5664(&qword_BDD70);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_9:
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = a1 + v17;
  if (*(void *)(a1 + v17 + 24)) {
    sub_616C(a1 + v17);
  }
  long long v19 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v18 + 16) = v19;
  *(void *)(v18 + 32) = *(void *)(a2 + v17 + 32);
  return a1;
}

uint64_t sub_1B850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1B864);
}

uint64_t sub_1B864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_1B8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1B904);
}

uint64_t sub_1B904(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 80) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Button()
{
  uint64_t result = qword_BB800;
  if (!qword_BB800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B9D0()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1BA88(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  uint64_t v8 = swift_allocObject();
  sub_8EBF0();
  swift_allocObject();
  uint64_t v9 = type metadata accessor for Button();
  uint64_t v33 = a1;
  sub_3B74(0x726F6C6F63, 0xE500000000000000, v9, (uint64_t)sub_1C45C, (uint64_t)v32, v10, v11, v12);
  if (v2)
  {
    swift_errorRelease();
    uint64_t v13 = 0;
  }
  *(void *)a2 = v13;
  uint64_t v14 = sub_3CEE4();
  uint64_t v37 = v8;
  v36[0] = v14;
  v36[1] = v15;
  v31[1] = a2 + 96;
  uint64_t v16 = sub_8FDB0();
  __chkstk_darwin(v16);
  v31[-2] = a1;
  sub_1C570();
  sub_3BC4();
  uint64_t v17 = sub_8F5F0();
  sub_56F8((uint64_t)v7, 0, 1, v17);
  uint64_t v18 = sub_1C4C0((uint64_t)v7, a2 + *(int *)(v9 + 36), &qword_BDD70);
  __chkstk_darwin(v18);
  v31[-2] = v37;
  v31[-1] = a1;
  sub_1C570();
  sub_3B0C();
  sub_1C4C0((uint64_t)v36, a2 + *(int *)(v9 + 40), &qword_BAAD0);
  sub_1C570();
  sub_8B8C(v19, v20, v21, v22, v23, v24, v25, v26);
  *(unsigned char *)(a2 + 8) = v27 & 1;
  __chkstk_darwin(v27);
  sub_1C590();
  sub_3B40();
  uint64_t v28 = sub_1C4C0((uint64_t)&v35, a2 + 16, (uint64_t *)&unk_BAAE0);
  __chkstk_darwin(v28);
  sub_1C590();
  sub_1C570();
  sub_3B40();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v29();
  swift_release();
  swift_release();
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v30();
  sub_573C(&v34, a2 + 56);
}

uint64_t sub_1BFF4(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_AE4D8;
  v7._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C048(char a1)
{
  if (a1) {
    return 1954047348;
  }
  else {
    return 0x656E6961746E6F63;
  }
}

uint64_t sub_1C07C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_55138(*a1, *a2);
}

uint64_t sub_1C088()
{
  return sub_591BC(*v0);
}

uint64_t sub_1C090(uint64_t a1)
{
  return sub_55F18(a1, *v1);
}

uint64_t sub_1C098(uint64_t a1)
{
  return sub_563C8(a1, *v1);
}

uint64_t sub_1C0A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1BFF4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1C0D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C048(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10210(v1 + 96, a1);
}

uint64_t sub_1C108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C518(v2 + *(int *)(a1 + 40), a2, &qword_BAAD0);
}

uint64_t sub_1C134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C518(v2 + *(int *)(a1 + 36), a2, &qword_BDD70);
}

unint64_t sub_1C164()
{
  unint64_t result = qword_BB850;
  if (!qword_BB850)
  {
    type metadata accessor for Button();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB850);
  }
  return result;
}

unint64_t sub_1C1B8()
{
  unint64_t result = qword_BB858;
  if (!qword_BB858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BB858);
  }
  return result;
}

uint64_t sub_1C204@<X0>(uint64_t *a1@<X8>)
{
  sub_8EA30();
  swift_allocObject();
  uint64_t v2 = sub_8EA20();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1C290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 16))(&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F5B0();
  uint64_t v13 = sub_8F5F0();
  return sub_56F8(a3, 0, 1, v13);
}

void sub_1C444(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_1C45C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C204(a1);
}

uint64_t sub_1C464(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C290(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C4C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_1C57C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1C518(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_1C57C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_1C5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_getKeyPath();
  sub_5664(&qword_BB8B0);
  sub_8F430();
  swift_release();
  if (v8)
  {
    sub_573C(&v7, (uint64_t)v9);
    sub_31368((uint64_t)v9, a3);
    sub_616C((uint64_t)v9);
  }
  else
  {
    sub_EF88((uint64_t)&v7, (uint64_t *)&unk_BAAE0);
    sub_31400();
  }
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  sub_31374((uint64_t)v9, a3);
  sub_616C((uint64_t)v9);
  swift_getKeyPath();
  sub_1CA8C();
  swift_release();
  BOOL v6 = v9[3] != 0;
  sub_EF88((uint64_t)v9, &qword_BAAD0);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled) = v6;
  sub_1CAAC();
  swift_getKeyPath();
  sub_1CA8C();
  swift_release();
  *(unsigned char *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_style) = v9[0];
  sub_1CB7C();
  swift_getKeyPath();
  sub_1CA8C();
  swift_release();
  sub_1CB24(v9[0]);
}

uint64_t sub_1C770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ButtonComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_1C7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ButtonComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_1C840()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_1C8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1C938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1C9B4()
{
  return sub_1CA44(&qword_BB860, (void (*)(uint64_t))type metadata accessor for Button);
}

uint64_t sub_1C9FC()
{
  return sub_1CA44(&qword_BB4D8, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_1CA44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA8C()
{
  return sub_8F430();
}

id sub_1CAAC()
{
  *(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView)
           + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled) = *(unsigned char *)(v0
                                                                                            + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled);
  return sub_31DF8();
}

id sub_1CAF8()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color)) {
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView), "setBackgroundColor:");
  }
  return result;
}

void sub_1CB24(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color) = a1;
  id v3 = a1;

  sub_1CAF8();
}

void sub_1CB7C()
{
  *(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView)
           + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_style) = *(unsigned char *)(v0
                                                                                        + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_style);
  sub_31E24();
}

id sub_1CBC4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for DynamicButtonView());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled] = 1;
  *(void *)&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color] = 0;
  v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_style] = 0;

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for ButtonComponent();
  id v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  sub_1D188();

  return v12;
}

uint64_t sub_1CD48()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView) accessibilityLabel];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_8F9D0();

  return v3;
}

uint64_t sub_1CE1C()
{
  return swift_bridgeObjectRelease();
}

id sub_1CE58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonComponent();
  return objc_msgSendSuper2(&v2, "isHighlighted");
}

id sub_1CEE0(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ButtonComponent();
  objc_msgSendSuper2(&v4, "setHighlighted:", a1 & 1);
  return sub_1CF28();
}

id sub_1CF28()
{
  unsigned int v1 = [v0 isHighlighted];
  if (v1) {
    LOBYTE(v1) = *((unsigned char *)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled);
  }

  return sub_89518(v1, 1);
}

id sub_1CF70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonComponent();
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_31400();
  return sub_3140C();
}

id sub_1D008()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for ButtonComponent();
  objc_msgSendSuper2(&v12, "layoutSubviews");
  unsigned int v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView];
  id v2 = [v0 contentView];
  [v2 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  return objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
}

id sub_1D104()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView), "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

id sub_1D188()
{
  id v1 = [v0 contentView];
  id v2 = objc_msgSend(self, "ams_clear");
  [v1 setBackgroundColor:v2];

  if (*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color]) {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView], "setTintColor:");
  }
  id v3 = [v0 contentView];
  [v3 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView]];

  [v0 setIsAccessibilityElement:1];
  UIAccessibilityTraits v4 = UIAccessibilityTraitButton;

  return [v0 setAccessibilityTraits:v4];
}

void sub_1D29C()
{
}

id sub_1D2DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonComponent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ButtonComponent()
{
  return self;
}

id sub_1D380(void *a1)
{
  objc_msgSend(objc_msgSend(a1, "container"), "contentSize");
  double v2 = v1;
  swift_unknownObjectRelease();
  id v3 = self;
  id v4 = objc_msgSend(v3, "absoluteDimension:", fmin(v2 + -32.0, 400.0));
  id v5 = [v3 estimatedDimension:50.0];
  id v6 = [self sizeWithWidthDimension:v4 heightDimension:v5];

  return v6;
}

id sub_1D47C(void *a1)
{
  return sub_1D380(a1);
}

uint64_t sub_1D494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6F8C(v2 + *(int *)(a1 + 32), a2);
}

uint64_t sub_1D4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6F8C(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_1D4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_8F4B0();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1D524@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_8EA70();
  swift_allocObject();
  double v7 = (int *)type metadata accessor for BuyAction();
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v8();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v9();
  }
  else
  {
    uint64_t v11 = *(void (**)(void))(v6 + 32);
    uint64_t v25 = (char *)a2 + v7[7];
    v11();
    unint64_t v12 = sub_1E4DC();
    *a2 = sub_14148(v12, v13, v14);
    unint64_t v15 = sub_1E4DC();
    a2[1] = sub_141A8(v15, v16, v17);
    a2[2] = sub_3CEE4();
    a2[3] = v18;
    uint64_t v19 = sub_3D0F8();
    *(uint64_t *)((char *)a2 + v7[10]) = v19;
    __chkstk_darwin(v19);
    sub_1921C();
    sub_1E4C4();
    sub_3B0C();
    uint64_t v20 = sub_BEB0((uint64_t)&v24, (uint64_t)a2 + v7[8]);
    __chkstk_darwin(v20);
    sub_1921C();
    sub_1E4C4();
    sub_3B0C();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v21();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v22 + 8))(a1);
    return sub_BEB0((uint64_t)&v23, (uint64_t)a2 + v7[9]);
  }
}

uint64_t sub_1DA00@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1D524(a1, a2);
}

uint64_t type metadata accessor for BuyAction()
{
  uint64_t result = qword_BB958;
  if (!qword_BB958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1DA60(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    double v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    double v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    uint64_t v9 = a3[7];
    uint64_t v26 = (char *)a1 + v9;
    double v10 = (char *)a2 + v9;
    uint64_t v11 = sub_8F4B0();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v26, v10, v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = (char *)v7 + v13;
    unint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
    if (v16)
    {
      uint64_t v17 = *((void *)v15 + 4);
      *((void *)v14 + 3) = v16;
      *((void *)v14 + 4) = v17;
      (**(void (***)(void))(v16 - 8))();
    }
    else
    {
      long long v18 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v18;
      *((void *)v14 + 4) = *((void *)v15 + 4);
    }
    uint64_t v19 = a3[9];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 24);
    if (v22)
    {
      uint64_t v23 = *((void *)v21 + 4);
      *((void *)v20 + 3) = v22;
      *((void *)v20 + 4) = v23;
      (**(void (***)(void))(v22 - 8))();
    }
    else
    {
      long long v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v24;
      *((void *)v20 + 4) = *((void *)v21 + 4);
    }
    *(uint64_t *)((char *)v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  }
  return v7;
}

uint64_t sub_1DC3C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[8];
  if (*(void *)(v6 + 24)) {
    sub_616C(v6);
  }
  uint64_t result = a1 + a2[9];
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

void *sub_1DD04(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[7];
  uint64_t v25 = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_8F4B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v25, v9, v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *((void *)v14 + 4);
    *((void *)v13 + 3) = v15;
    *((void *)v13 + 4) = v16;
    (**(void (***)(void))(v15 - 8))();
  }
  else
  {
    long long v17 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v17;
    *((void *)v13 + 4) = *((void *)v14 + 4);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)((char *)a2 + v18 + 24);
  if (v21)
  {
    uint64_t v22 = *((void *)v20 + 4);
    *((void *)v19 + 3) = v21;
    *((void *)v19 + 4) = v22;
    (**(void (***)(void))(v21 - 8))();
  }
  else
  {
    long long v23 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v23;
    *((void *)v19 + 4) = *((void *)v20 + 4);
  }
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *sub_1DE8C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = *(void *)((char *)a2 + v10 + 24);
  if (*(void *)((char *)a1 + v10 + 24))
  {
    if (v13)
    {
      sub_64C8((uint64_t *)v11, v12);
      goto LABEL_8;
    }
    sub_616C(v11);
  }
  else if (v13)
  {
    *(void *)(v11 + 24) = v13;
    *(void *)(v11 + 32) = v12[4];
    (**(void (***)(uint64_t, char *))(v13 - 8))(v11, (char *)v12);
    goto LABEL_8;
  }
  long long v14 = *(_OWORD *)v12;
  long long v15 = *((_OWORD *)v12 + 1);
  *(void *)(v11 + 32) = v12[4];
  *(_OWORD *)uint64_t v11 = v14;
  *(_OWORD *)(v11 + 16) = v15;
LABEL_8:
  uint64_t v16 = a3[9];
  uint64_t v17 = (uint64_t)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a2 + v16 + 24);
  if (!*(void *)((char *)a1 + v16 + 24))
  {
    if (v19)
    {
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = *((void *)v18 + 4);
      (**(void (***)(uint64_t, char *))(v19 - 8))(v17, v18);
      goto LABEL_15;
    }
LABEL_14:
    long long v20 = *(_OWORD *)v18;
    long long v21 = *((_OWORD *)v18 + 1);
    *(void *)(v17 + 32) = *((void *)v18 + 4);
    *(_OWORD *)uint64_t v17 = v20;
    *(_OWORD *)(v17 + 16) = v21;
    goto LABEL_15;
  }
  if (!v19)
  {
    sub_616C(v17);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v17, (uint64_t *)v18);
LABEL_15:
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_1E07C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = a3[9];
  uint64_t v13 = (char *)a1 + v11;
  long long v14 = (char *)a2 + v11;
  long long v15 = *(_OWORD *)v14;
  long long v16 = *((_OWORD *)v14 + 1);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *(_OWORD *)uint64_t v13 = v15;
  *((_OWORD *)v13 + 1) = v16;
  uint64_t v17 = (char *)a1 + v12;
  uint64_t v18 = (char *)a2 + v12;
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *sub_1E148(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (uint64_t)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (*(void *)((char *)a1 + v11 + 24)) {
    sub_616C(v12);
  }
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *((void *)v13 + 4);
  uint64_t v15 = a3[9];
  long long v16 = (char *)a1 + v15;
  if (*(void *)((char *)a1 + v15 + 24)) {
    sub_616C((uint64_t)a1 + v15);
  }
  long long v17 = *(_OWORD *)((char *)a2 + v15 + 16);
  *(_OWORD *)long long v16 = *(_OWORD *)((char *)a2 + v15);
  *((_OWORD *)v16 + 1) = v17;
  *((void *)v16 + 4) = *(void *)((char *)a2 + v15 + 32);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_1E260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E274);
}

uint64_t sub_1E274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_8F4B0();
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_1E2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E310);
}

uint64_t sub_1E310(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1E390()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1E44C(uint64_t a1)
{
  unint64_t result = sub_1E474();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1E474()
{
  unint64_t result = qword_BBAC0;
  if (!qword_BBAC0)
  {
    type metadata accessor for BuyAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBAC0);
  }
  return result;
}

unint64_t sub_1E4DC()
{
  return 0xD000000000000011;
}

BOOL static NetworkInterface.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void NetworkInterface.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int NetworkInterface.hashValue.getter(unsigned __int8 a1)
{
  return sub_90000();
}

BOOL sub_1E574(char *a1, char *a2)
{
  return static NetworkInterface.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1E580()
{
  return NetworkInterface.hashValue.getter(*v0);
}

void sub_1E588(uint64_t a1)
{
  NetworkInterface.hash(into:)(a1, *v1);
}

Swift::Int sub_1E590()
{
  Swift::UInt v1 = *v0;
  sub_8FFE0();
  sub_8FFF0(v1);
  return sub_90000();
}

uint64_t sub_1E5D4(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BBB40);
  __chkstk_darwin(v2 - 8);
  sub_22620();
  uint64_t v37 = v3;
  uint64_t v42 = sub_8F750();
  uint64_t v39 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  sub_22620();
  uint64_t v38 = v4;
  uint64_t v5 = sub_8F390();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_F040(0, (unint64_t *)&qword_BAE40);
  sub_8F550();
  uint64_t v7 = (void *)v43;
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v8 = sub_8F3E0();
  sub_183C4(v8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  *((void *)&v44 + 1) = type metadata accessor for BuyActionImplementation();
  *(void *)&long long v43 = v1;
  id v36 = v1;
  id v9 = (id)AMSLogKey();
  uint64_t v40 = (uint64_t)v7;
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_8F9D0();
    uint64_t v13 = v12;

    sub_8F380();
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    sub_8F370(v47);
    sub_225E8();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_22634(MetatypeMetadata);
    sub_EF88((uint64_t)v46, &qword_BC780);
    v48._countAndFlagsBits = 5972026;
    v48._object = (void *)0xE300000000000000;
    sub_8F370(v48);
    v46[3] = &type metadata for String;
    v46[0] = v11;
    v46[1] = v13;
    uint64_t v7 = (void *)v40;
    sub_8F360();
    sub_EF88((uint64_t)v46, &qword_BC780);
    v15._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    sub_8F370(v49);
    sub_225E8();
    uint64_t v16 = swift_getMetatypeMetadata();
    sub_22634(v16);
    sub_EF88((uint64_t)v46, &qword_BC780);
    v15._countAndFlagsBits = 58;
  }
  v15._object = (void *)0xE100000000000000;
  sub_8F370(v15);
  sub_8F3A0();
  sub_616C((uint64_t)&v43);
  sub_8F340();
  if (v7)
  {
    *((void *)&v44 + 1) = v6;
    *(void *)&long long v43 = v7;
    long long v17 = v7;
  }
  else
  {
    long long v17 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
  }
  type metadata accessor for Log();
  id v35 = v17;
  sub_8F3D0();
  sub_EF88((uint64_t)&v43, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_8F560();
  sub_8F770();
  sub_F040(0, &qword_BBBD0);
  sub_22494();
  long long v34 = (void *)v43;
  sub_8EBD0();
  sub_22494();
  uint64_t v18 = v43;
  sub_22494();
  uint64_t v19 = *((void *)&v43 + 1);
  sub_8EC70();
  sub_22494();
  uint64_t v20 = v43;
  if (!v19) {
    uint64_t v19 = sub_8F950();
  }
  if (*(void *)(a1 + 8)) {
    uint64_t v21 = *(void *)(a1 + 8);
  }
  else {
    uint64_t v21 = sub_8F950();
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = (objc_class *)sub_1EC7C(v21, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v37, v38, v42);
  sub_56F8(v37, 0, 1, v42);
  uint64_t v23 = (uint64_t)v36 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_bag;
  swift_beginAccess();
  sub_2206C(v37, v23);
  uint64_t v24 = swift_endAccess();
  uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v20 + 88))(v24);
  id v26 = [v25 topViewController];

  swift_unknownObjectWeakAssign();
  uint64_t v27 = *(objc_class **)a1;
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = *(void *)(a1 + 24);
  uint64_t v30 = *(void *)(a1 + *(int *)(type metadata accessor for BuyAction() + 40));
  sub_1EDB0(v40, v27, v38, (uint64_t)v34, v28, v29, v30, v22);
  swift_bridgeObjectRelease();
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  swift_retain();
  uint64_t v31 = (void *)sub_8FBD0();
  sub_220E4(v31, (uint64_t)sub_220D4, v18);

  swift_release();
  *((void *)&v44 + 1) = sub_8F610();
  Swift::String v45 = &protocol witness table for SyncTaskScheduler;
  sub_8374((uint64_t *)&v43);
  sub_8F600();
  uint64_t v32 = sub_8F790();

  swift_release();
  swift_release();
  swift_release();
  sub_616C((uint64_t)&v43);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v42);
  return v32;
}

uint64_t sub_1EC7C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_21C58(a1, (uint64_t)sub_3B0A0, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1ED08(void *a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)a3 + 200))(*a1);
}

double sub_1ED50@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_21E74(*a1);
  if (v3)
  {
    uint64_t v4 = v3;
    *(void *)(a2 + 24) = sub_5664(&qword_BBBD8);
    *(void *)a2 = v4;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1EDB0(uint64_t a1, Class isa, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, Class a8)
{
  uint64_t v9 = v8;
  sub_F040(0, &qword_BBB98);
  swift_bridgeObjectRetain();
  id v15 = sub_1F05C();
  id v16 = [objc_allocWithZone((Class)AMSPurchase) initWithPurchaseType:a7 buyParams:v15];
  [v16 setAccount:a1];
  if (isa) {
    Class isa = sub_8F930().super.isa;
  }
  [v16 setAdditionalHeaders:isa];

  [v16 setClientInfo:a4];
  [v16 setUserInitiated:1];
  if (a8)
  {
    sub_37308((uint64_t)a8);
    a8 = sub_8F930().super.isa;
    swift_bridgeObjectRelease();
  }
  [v16 setMetricsOverlay:a8];

  [v16 setRequiresAccount:1];
  sub_F040(0, &qword_BBBA0);
  id v17 = v16;
  uint64_t v18 = sub_8F720();
  id v19 = sub_1F0D0(v17, v18);
  [v19 setDelegate:v9];
  sub_5664(&qword_BBBA8);
  id v20 = [v19 performPurchase];
  sub_8F800();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v17;
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  id v22 = v17;
  uint64_t v23 = (void *)sub_8FBD0();
  uint64_t v24 = sub_21EE8((uint64_t)sub_21C50, v21, v23);

  swift_release();
  swift_release();
  return v24;
}

id sub_1F05C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithString:v1];

  return v2;
}

id sub_1F0D0(void *a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithPurchase:a1 bag:a2];

  swift_unknownObjectRelease();
  return v3;
}

id sub_1F130(uint64_t a1, void *a2)
{
  id v3 = (void *)sub_8E910();
  sub_5664(&qword_BBBB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_92840;
  sub_8FDB0();
  *(void *)(inited + 96) = sub_F040(0, (unint64_t *)&unk_BBBC0);
  *(void *)(inited + 72) = a2;
  id v5 = a2;
  sub_8F950();
  Class isa = sub_8F930().super.isa;
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, "ams_errorByAddingUserInfo:", isa);

  return v7;
}

id sub_1F268()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_bag;
  uint64_t v2 = sub_8F750();
  sub_56F8(v1, 1, 1, v2);
  swift_unknownObjectWeakInit();
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for BuyActionImplementation();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_1F308()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BuyActionImplementation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1F394()
{
  return type metadata accessor for BuyActionImplementation();
}

uint64_t type metadata accessor for BuyActionImplementation()
{
  uint64_t result = qword_BB9E8;
  if (!qword_BB9E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1F3E4()
{
  sub_1F47C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1F47C()
{
  if (!qword_BB9F8)
  {
    sub_8F750();
    unint64_t v0 = sub_8FD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BB9F8);
    }
  }
}

uint64_t sub_1F4D4(uint64_t a1)
{
  return sub_1E5D4(a1);
}

uint64_t sub_1F4F8()
{
  sub_224B4();
  v1[16] = v2;
  v1[17] = v0;
  sub_8FB00();
  v1[18] = sub_8FAF0();
  uint64_t v4 = sub_8FAE0();
  v1[19] = v4;
  v1[20] = v3;
  return _swift_task_switch(sub_1F58C, v4, v3);
}

uint64_t sub_1F58C()
{
  sub_225D0();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v2[21] = Strong;
  if (!Strong)
  {
    swift_release();
    sub_210C4();
    uint64_t v12 = sub_22508();
    sub_22520(v12, v13);
    sub_224C0();
    sub_22584();
    __asm { BRAA            X1, X16 }
  }
  sub_2259C();
  sub_F040(0, &qword_BBB90);
  id v6 = v3;
  id v7 = v0;
  uint64_t v8 = (void *)sub_8B07C(v6);
  v2[22] = v8;
  id v9 = [v8 performAuthentication];
  v2[23] = v9;
  v2[2] = v2;
  v2[7] = v4;
  v2[3] = sub_1F744;
  uint64_t v10 = swift_continuation_init();
  v2[10] = _NSConcreteStackBlock;
  v2[11] = 0x40000000;
  v2[12] = sub_1F8C0;
  v2[13] = &unk_AF7B0;
  v2[14] = v10;
  [v9 resultWithCompletion:v1];
  sub_22584();
  return _swift_continuation_await();
}

uint64_t sub_1F744()
{
  sub_224B4();
  sub_2245C();
  sub_22564();
  void *v2 = v1;
  void *v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 192) = v4;
  uint64_t v5 = v3[20];
  uint64_t v6 = v3[19];
  if (v4) {
    id v7 = sub_22450;
  }
  else {
    id v7 = sub_1F844;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1F844()
{
  sub_22540();
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v1 = *(void **)(v0 + 184);

  swift_release();
  uint64_t v3 = sub_224DC();
  return v4(v3);
}

uint64_t sub_1F8C4(uint64_t a1, uint64_t a2)
{
  sub_5664(&qword_BBB50);
  uint64_t v4 = sub_22508();
  *uint64_t v5 = a2;

  return _swift_continuation_throwingResumeWithError(a1, v4);
}

uint64_t sub_1F920(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return _swift_continuation_throwingResume();
}

uint64_t sub_1F960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_8FB00();
  v4[6] = sub_8FAF0();
  uint64_t v6 = sub_8FAE0();
  return _swift_task_switch(sub_1F9FC, v6, v5);
}

uint64_t sub_1F9FC()
{
  sub_22540();
  sub_225B4();
  *(void *)(v3 + 56) = _Block_copy(v1);
  id v5 = v4;
  id v6 = v2;
  id v7 = v0;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_22458;
  return sub_1F4F8();
}

uint64_t sub_1FAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BBB00);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8FB20();
  sub_56F8((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_BBB10;
  v9[5] = v8;
  sub_21570((uint64_t)v6, (uint64_t)&unk_BBB20, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1FBB8()
{
  sub_224B4();
  v1[16] = v2;
  v1[17] = v0;
  sub_8FB00();
  v1[18] = sub_8FAF0();
  uint64_t v4 = sub_8FAE0();
  v1[19] = v4;
  v1[20] = v3;
  return _swift_task_switch(sub_1FC4C, v4, v3);
}

uint64_t sub_1FC4C()
{
  sub_225D0();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v2[21] = Strong;
  if (!Strong)
  {
    swift_release();
    sub_210C4();
    uint64_t v12 = sub_22508();
    sub_22520(v12, v13);
    sub_224C0();
    sub_22584();
    __asm { BRAA            X1, X16 }
  }
  sub_2259C();
  sub_F040(0, &qword_BBB70);
  id v6 = v3;
  id v7 = v0;
  uint64_t v8 = (void *)sub_8B07C(v6);
  v2[22] = v8;
  id v9 = [v8 present];
  v2[23] = v9;
  v2[2] = v2;
  v2[7] = v4;
  v2[3] = sub_1FE04;
  uint64_t v10 = swift_continuation_init();
  v2[10] = _NSConcreteStackBlock;
  v2[11] = 0x40000000;
  v2[12] = sub_1F8C0;
  v2[13] = &unk_AF770;
  v2[14] = v10;
  [v9 resultWithCompletion:v1];
  sub_22584();
  return _swift_continuation_await();
}

uint64_t sub_1FE04()
{
  sub_224B4();
  sub_2245C();
  sub_22564();
  void *v2 = v1;
  void *v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 192) = v4;
  uint64_t v5 = v3[20];
  uint64_t v6 = v3[19];
  if (v4) {
    id v7 = sub_1FF80;
  }
  else {
    id v7 = sub_1FF04;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1FF04()
{
  sub_22540();
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v1 = *(void **)(v0 + 184);

  swift_release();
  uint64_t v3 = sub_224DC();
  return v4(v3);
}

uint64_t sub_1FF80()
{
  sub_2254C();
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = (void *)v0[21];
  uint64_t v2 = (void *)v0[22];
  swift_release();
  swift_willThrow();

  sub_224C0();
  return v4();
}

uint64_t sub_20004(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3) {
    return sub_1F8C4(v3, (uint64_t)a3);
  }
  if (a2) {
    return sub_1F920(v3, (uint64_t)a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_20074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_8FB00();
  v4[6] = sub_8FAF0();
  uint64_t v6 = sub_8FAE0();
  return _swift_task_switch(sub_20110, v6, v5);
}

uint64_t sub_20110()
{
  sub_22540();
  sub_225B4();
  *(void *)(v3 + 56) = _Block_copy(v1);
  id v5 = v4;
  id v6 = v2;
  id v7 = v0;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_201C8;
  return sub_1FBB8();
}

uint64_t sub_201C8()
{
  sub_225D0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = *v1;
  id v6 = *(void **)(*v1 + 40);
  id v7 = *(void **)(*v1 + 24);
  uint64_t v8 = *(void **)(*v1 + 16);
  uint64_t v9 = *v1;
  sub_224CC();
  void *v10 = v9;
  swift_task_dealloc();

  uint64_t v11 = *(void (***)(void, void, void))(v5 + 56);
  if (v2)
  {
    uint64_t v12 = (void *)sub_8E910();
    swift_errorRelease();
    ((void (**)(void, void, void *))v11)[2](v11, 0, v12);

    _Block_release(v11);
  }
  else
  {
    ((void (**)(void, void *, void))v11)[2](v11, v4, 0);
    _Block_release(v11);
  }
  uint64_t v13 = *(uint64_t (**)(void))(v9 + 8);
  return v13();
}

uint64_t sub_20394()
{
  sub_224B4();
  v1[20] = v2;
  v1[21] = v0;
  v1[19] = v3;
  sub_5664(&qword_BBB40);
  v1[22] = swift_task_alloc();
  uint64_t v4 = sub_8F750();
  v1[23] = v4;
  sub_183C4(v4);
  v1[24] = v5;
  v1[25] = swift_task_alloc();
  sub_8FB00();
  v1[26] = sub_8FAF0();
  uint64_t v7 = sub_8FAE0();
  v1[27] = v7;
  v1[28] = v6;
  return _swift_task_switch(sub_20494, v7, v6);
}

uint64_t sub_20494()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21] + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_bag;
  swift_beginAccess();
  sub_21A28(v3, v1);
  if (sub_5754(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[22];
    swift_release();
    sub_EF88(v4, &qword_BBB40);
    sub_210C4();
    sub_22508();
    *uint64_t v5 = 0;
    swift_willThrow();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    sub_224C0();
    return v21();
  }
  (*(void (**)(void, void, void))(v0[24] + 32))(v0[25], v0[22], v0[23]);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[29] = Strong;
  if (!Strong)
  {
    uint64_t v16 = v0[25];
    uint64_t v17 = v0[23];
    uint64_t v18 = v0[24];
    swift_release();
    sub_210C4();
    uint64_t v19 = sub_22508();
    sub_22520(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    goto LABEL_8;
  }
  uint64_t v7 = (void *)Strong;
  uint64_t v8 = (void *)v0[19];
  uint64_t v9 = (void *)v0[20];
  sub_F040(0, &qword_BBB48);
  id v10 = v9;
  uint64_t v11 = sub_8F720();
  id v12 = sub_20A18(v10, v11, v7);
  v0[30] = v12;
  id v13 = [v8 clientInfo];
  [v12 setClientInfo:v13];

  id v14 = [v12 presentEngagement];
  v0[31] = v14;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_207A0;
  uint64_t v15 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1F8C0;
  v0[13] = &unk_AF730;
  v0[14] = v15;
  [v14 resultWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_207A0()
{
  sub_224B4();
  sub_2245C();
  sub_22564();
  void *v2 = v1;
  void *v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 256) = v4;
  uint64_t v5 = v3[28];
  uint64_t v6 = v3[27];
  if (v4) {
    uint64_t v7 = sub_2095C;
  }
  else {
    uint64_t v7 = sub_208A0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_208A0()
{
  sub_225D0();
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = *(void **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = sub_224DC();
  return v7(v6);
}

uint64_t sub_2095C()
{
  sub_225D0();
  uint64_t v1 = (void *)v0[31];
  uint64_t v3 = (void *)v0[29];
  uint64_t v2 = (void *)v0[30];
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[23];
  uint64_t v6 = v0[24];
  swift_release();
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_224C0();
  return v7();
}

id sub_20A18(void *a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithRequest:a1 bag:a2 presentingViewController:a3];

  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_20AA4(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = _Block_copy(aBlock);
  sub_22574();
  id v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a3;
  v12[3] = a4;
  v12[4] = v11;
  v12[5] = a1;
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;

  return sub_1FAB4(a7, (uint64_t)v12);
}

uint64_t sub_20B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_8FB00();
  v4[6] = sub_8FAF0();
  uint64_t v6 = sub_8FAE0();
  return _swift_task_switch(sub_20BC4, v6, v5);
}

uint64_t sub_20BC4()
{
  sub_22540();
  sub_225B4();
  *(void *)(v3 + 56) = _Block_copy(v1);
  id v5 = v4;
  id v6 = v2;
  id v7 = v0;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_22458;
  return sub_20394();
}

void sub_20C80()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong view];
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [v2 window];
      if (v4)
      {
        id v5 = v4;
        id v6 = [v4 windowScene];
        if (v6)
        {
          id v7 = v6;
          id v8 = [v6 _sceneIdentifier];
          sub_8F9D0();
        }
        else
        {
          sub_210C4();
          sub_22508();
          sub_224F0(v12, 1);
        }
      }
      else
      {
        sub_210C4();
        sub_22508();
        sub_224F0(v11, 4);
      }
    }
    else
    {
      sub_210C4();
      sub_22508();
      sub_224F0(v10, 2);
    }
  }
  else
  {
    sub_210C4();
    sub_22508();
    sub_224F0(v9, 3);
  }
}

id sub_20EFC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = Strong;
    id v3 = [Strong view];
    if (v3)
    {
      id v4 = v3;
      id v5 = [v3 window];
      if (v5)
      {
        id v0 = v5;
      }
      else
      {
        sub_210C4();
        sub_22508();
        sub_224F0(v8, 4);
      }
    }
    else
    {
      sub_210C4();
      sub_22508();
      sub_224F0(v7, 2);
    }
  }
  else
  {
    sub_210C4();
    sub_22508();
    sub_224F0(v6, 3);
  }
  return v0;
}

unint64_t sub_210C4()
{
  unint64_t result = qword_BBAE8;
  if (!qword_BBAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBAE8);
  }
  return result;
}

uint64_t sub_21114()
{
  sub_2254C();
  sub_225DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_22558(v0);
  void *v1 = v2;
  v1[1] = sub_22454;
  uint64_t v3 = sub_22474();
  return v4(v3);
}

uint64_t sub_211B0()
{
  return sub_8F7F0();
}

uint64_t sub_211E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_8F7D0();

  return swift_errorRelease();
}

uint64_t sub_21238(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_22454;
  return v6();
}

uint64_t sub_21308()
{
  sub_2254C();
  sub_225DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_22558(v0);
  void *v1 = v2;
  v1[1] = sub_22454;
  uint64_t v3 = sub_22474();
  return v4(v3);
}

uint64_t sub_213A4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *id v5 = v4;
  v5[1] = sub_22454;
  return v7();
}

uint64_t sub_21474()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_22574();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_214AC()
{
  sub_2254C();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  id v5 = (int *)v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_22558(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_22454;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_BBB18 + dword_BBB18);
  return v9(v2, v3, v4, v5);
}

uint64_t sub_21570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8FB20();
  if (sub_5754(a1, 1, v6) == 1)
  {
    sub_EF88(a1, &qword_BBB00);
  }
  else
  {
    sub_8FB10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_8FAE0();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_216E0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_217BC;
  return v6(a1);
}

uint64_t sub_217BC()
{
  sub_224B4();
  sub_2245C();
  uint64_t v1 = *v0;
  sub_224CC();
  void *v2 = v1;
  swift_task_dealloc();
  sub_224C0();
  return v3();
}

uint64_t sub_21880()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_218B8()
{
  sub_22540();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_22558(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_21968;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_BBB28 + dword_BBB28);
  return v7(v2, v3);
}

uint64_t sub_21968()
{
  sub_224B4();
  sub_2245C();
  uint64_t v1 = *v0;
  sub_224CC();
  void *v2 = v1;
  swift_task_dealloc();
  sub_224C0();
  return v3();
}

uint64_t sub_21A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BBB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21A94()
{
  sub_2254C();
  sub_225DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_22558(v0);
  void *v1 = v2;
  v1[1] = sub_21968;
  uint64_t v3 = sub_22474();
  return v4(v3);
}

uint64_t sub_21B34()
{
  _Block_release(*(const void **)(v0 + 32));
  uint64_t v1 = sub_22574();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_21B7C()
{
  sub_2254C();
  sub_225DC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_22558(v0);
  void *v1 = v2;
  v1[1] = sub_22454;
  uint64_t v3 = sub_22474();
  return v4(v3);
}

uint64_t sub_21C18()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_21C50(uint64_t a1)
{
  return sub_1F130(a1, *(void **)(v1 + 16));
}

uint64_t sub_21C58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_3BE68(&v28);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_3BEA8(&v26);
  uint64_t v7 = *((void *)&v26 + 1);
  if (!*((void *)&v26 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_221F8();
    return swift_release();
  }
  while (1)
  {
    uint64_t v8 = v26;
    sub_22200(&v27, v25);
    uint64_t v9 = *a5;
    unint64_t v11 = sub_3ADF8(v8, v7);
    uint64_t v12 = *(void *)(v9 + 16);
    BOOL v13 = (v10 & 1) == 0;
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v14 = v10;
    if (*(void *)(v9 + 24) >= v12 + v13)
    {
      if (a4)
      {
        if (v10) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_5664(&qword_BBBE0);
        sub_8FE80();
        if (v14) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_3B2F4();
      unint64_t v15 = sub_3ADF8(v8, v7);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_17;
      }
      unint64_t v11 = v15;
      if (v14)
      {
LABEL_9:
        sub_22210((uint64_t)v25, (uint64_t)v24);
        sub_616C((uint64_t)v25);
        swift_bridgeObjectRelease();
        uint64_t v17 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v11);
        sub_616C((uint64_t)v17);
        sub_22200(v24, v17);
        goto LABEL_13;
      }
    }
    uint64_t v18 = (void *)*a5;
    *(void *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v19 = (uint64_t *)(v18[6] + 16 * v11);
    *uint64_t v19 = v8;
    v19[1] = v7;
    sub_22200(v25, (_OWORD *)(v18[7] + 32 * v11));
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_16;
    }
    v18[2] = v22;
LABEL_13:
    sub_3BEA8(&v26);
    uint64_t v7 = *((void *)&v26 + 1);
    a4 = 1;
    if (!*((void *)&v26 + 1)) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = sub_8FF60();
  __break(1u);
  return result;
}

uint64_t sub_21E74(void *a1)
{
  id v1 = [a1 responseDictionary];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_8F940();

  return v3;
}

uint64_t sub_21EE0()
{
  return sub_211B0();
}

uint64_t sub_21EE8(uint64_t a1, uint64_t a2, void *a3)
{
  v10[3] = sub_F040(0, (unint64_t *)&qword_BBBB0);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a3;
  id v6 = a3;
  uint64_t v7 = sub_8F820();
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  swift_retain();
  sub_8F7A0();
  swift_release();
  swift_release();
  sub_616C((uint64_t)v10);
  return v7;
}

uint64_t sub_22018()
{
  return sub_21EE0();
}

uint64_t sub_22020()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_22060(uint64_t a1)
{
  return sub_211E4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_2206C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BBB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_220D4(void *a1, uint64_t a2)
{
  return sub_1ED08(a1, a2, v2);
}

uint64_t sub_220DC(void *a1)
{
  return sub_8B0DC(*a1);
}

uint64_t sub_220E4(void *a1, uint64_t a2, uint64_t a3)
{
  v10[3] = sub_F040(0, (unint64_t *)&qword_BBBB0);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_retain_n();
  id v8 = a1;
  sub_8F7A0();
  swift_release();
  swift_release();
  return sub_616C((uint64_t)v10);
}

uint64_t sub_221E8(void *a1)
{
  return sub_220DC(a1);
}

uint64_t sub_221F0(uint64_t a1)
{
  return sub_8B17C(a1, *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 16));
}

uint64_t sub_221F8()
{
  return swift_release();
}

_OWORD *sub_22200(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_22210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t getEnumTagSinglePayload for BuyActionImplementation.PresentationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for BuyActionImplementation.PresentationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuyActionImplementation.PresentationError()
{
  return &type metadata for BuyActionImplementation.PresentationError;
}

unint64_t sub_223FC()
{
  unint64_t result = qword_BBBE8;
  if (!qword_BBBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBBE8);
  }
  return result;
}

uint64_t sub_22474()
{
  return v0;
}

uint64_t sub_22494()
{
  return sub_8F770();
}

uint64_t sub_224C0()
{
  return v0 + 8;
}

uint64_t sub_224DC()
{
  return v0;
}

uint64_t sub_224F0@<X0>(unsigned char *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_22508()
{
  return swift_allocError();
}

uint64_t sub_22520(uint64_t a1, unsigned char *a2)
{
  *a2 = 3;
  return swift_willThrow();
}

uint64_t sub_22558(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_22574()
{
  return v0;
}

uint64_t sub_225B4()
{
  return swift_release();
}

uint64_t sub_225E8()
{
  sub_820C((void *)(v0 - 176), *(void *)(v0 - 152));
  return swift_getDynamicType();
}

uint64_t sub_22634(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return sub_8F360();
}

uint64_t sub_22654@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8EBC0();
  __chkstk_darwin(v5 - 8);
  sub_B7F0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_8F4B0();
  sub_7084();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_B7F0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for CallbackAction();
  uint64_t v25 = a1;
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v17();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v18();
  }
  else
  {
    uint64_t v20 = *(int *)(v16 + 20);
    uint64_t v26 = a2;
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a2 + v20, v15, v9);
    __chkstk_darwin(v21);
    *((void *)&v24 - 2) = a1;
    sub_3BF8();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v22();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v23();
    return sub_22B9C(v8, v26);
  }
}

uint64_t sub_22950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_8F3F0();
  sub_7084();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_B7F0();
  uint64_t v16 = v15 - v14;
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v17);
  sub_B7F0();
  uint64_t v20 = v19 - v18;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v19 - v18, a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v16, a2, v10);
  a3(v20, v16);
  uint64_t v22 = a4(0);
  return sub_56F8(a5, 0, 1, v22);
}

uint64_t sub_22AB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_22654(a1, a2);
}

uint64_t type metadata accessor for CallbackAction()
{
  uint64_t result = qword_BBC48;
  if (!qword_BBC48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22950(a1, *(void *)(v2 + 16), (void (*)(uint64_t, uint64_t))&ActionMetrics.init(deserializing:using:), (uint64_t (*)(void))&type metadata accessor for ActionMetrics, a2);
}

uint64_t sub_22B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22950(a1, *(void *)(v2 + 16), (void (*)(uint64_t, uint64_t))&JSServiceRequest.init(deserializing:using:), (uint64_t (*)(void))&type metadata accessor for JSServiceRequest, a2);
}

uint64_t sub_22B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8EBC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_22C00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(sub_8EBC0() + 24);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_8E980();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_5754((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_5664((uint64_t *)&unk_BC7F0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_56F8((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_8F4B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_22DA8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(sub_8EBC0() + 24);
  uint64_t v5 = sub_8E980();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_8F4B0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_22E90(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(sub_8EBC0() + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8E980();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_5754((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_5664((uint64_t *)&unk_BC7F0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_56F8((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *sub_22FE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(sub_8EBC0() + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8E980();
  int v10 = sub_5754((uint64_t)v7, 1, v9);
  int v11 = sub_5754((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_5664((uint64_t *)&unk_BC7F0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  sub_56F8((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_231D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(sub_8EBC0() + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_8E980();
  if (sub_5754((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_5664((uint64_t *)&unk_BC7F0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    sub_56F8((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

void *sub_23318(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(sub_8EBC0() + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8E980();
  int v11 = sub_5754((uint64_t)v8, 1, v10);
  int v12 = sub_5754((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_5664((uint64_t *)&unk_BC7F0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_56F8((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_234F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23504);
}

uint64_t sub_23504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8EBC0();
  sub_B704();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_8F4B0();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return sub_5754(v9, a2, v8);
}

uint64_t sub_23580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23594);
}

uint64_t sub_23594(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_8EBC0();
  sub_B704();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_8F4B0();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return sub_56F8(v11, a2, a2, v10);
}

uint64_t sub_23618()
{
  uint64_t result = sub_8EBC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_8F4B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_236E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5664((uint64_t *)&unk_BC7F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_8EBC0();
  sub_13858();
  __chkstk_darwin(v10);
  int v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13) {
    uint64_t v14 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v14 = sub_8F950();
  }
  uint64_t v41 = v14;
  sub_13740(a2, (uint64_t)v40, &qword_BB600);
  uint64_t v30 = a2;
  uint64_t v29 = v9;
  if (v40[32] == 255)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_13740((uint64_t)v40, (uint64_t)&v34, &qword_BB600);
    if (!v36)
    {
      v33[0] = 0xD000000000000012;
      v33[1] = 0x800000000009BC10;
      swift_bridgeObjectRetain();
      sub_8FDB0();
      swift_getErrorValue();
      uint64_t v15 = sub_35C5C(v31);
      v33[3] = sub_5664(&qword_BBBD8);
      v33[0] = v15;
      sub_23DB0((uint64_t)v33, (uint64_t)v37);
      swift_errorRelease();
      goto LABEL_12;
    }
    if (v36 == 1)
    {
      sub_25228((uint64_t)&v34, (uint64_t)v33, &qword_BC780);
      v32[0] = 0xD000000000000013;
      v32[1] = 0x800000000009BC30;
      swift_bridgeObjectRetain();
      sub_8FDB0();
      sub_13740((uint64_t)v33, (uint64_t)v32, &qword_BC780);
      sub_23DB0((uint64_t)v32, (uint64_t)v37);
      sub_1379C((uint64_t)v33, &qword_BC780);
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    sub_251D4((uint64_t)&v34);
  }
  *(void *)&long long v34 = 0xD000000000000012;
  *((void *)&v34 + 1) = 0x800000000009BC10;
  sub_8FDB0();
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v16 = sub_24860(0, 0, (uint64_t)&v34);
  sub_1379C((uint64_t)&v34, &qword_BC780);
  *((void *)&v35 + 1) = sub_5664(&qword_BBBD8);
  *(void *)&long long v34 = v16;
  sub_23DB0((uint64_t)&v34, (uint64_t)v37);
LABEL_12:
  sub_1379C((uint64_t)v40, &qword_BB600);
  uint64_t v17 = sub_8F950();
  uint64_t v18 = v41;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v37[0] = v17;
  sub_24E88(v18, (uint64_t)sub_24E74, 0, isUniquelyReferenced_nonNull_native, v37);
  uint64_t v20 = v37[0];
  swift_bridgeObjectRelease();
  if (v13) {
    uint64_t v21 = v13;
  }
  else {
    uint64_t v21 = sub_8F950();
  }
  swift_bridgeObjectRetain();
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  v37[0] = v20;
  sub_24E88(v21, (uint64_t)sub_24E74, 0, v22, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_13740(a1 + *(int *)(v29 + 24), (uint64_t)v8, (uint64_t *)&unk_BC7F0);
  sub_8EBB0();
  sub_8F560();
  swift_bridgeObjectRetain();
  sub_8F770();
  sub_8ED00();
  sub_13740(v30, (uint64_t)v37, &qword_BB600);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a3;
  sub_25228((uint64_t)v37, v23 + 24, &qword_BB600);
  uint64_t v38 = sub_8F610();
  uint64_t v39 = &protocol witness table for SyncTaskScheduler;
  sub_8374(v37);
  swift_retain();
  sub_8F600();
  sub_5664(&qword_BB0A0);
  sub_25128();
  uint64_t v24 = sub_8F7E0();
  swift_release();
  sub_616C((uint64_t)v37);
  uint64_t v25 = sub_F040(0, (unint64_t *)&qword_BBBB0);
  swift_retain();
  uint64_t v26 = sub_8FBD0();
  uint64_t v38 = v25;
  uint64_t v39 = &protocol witness table for OS_dispatch_queue;
  v37[0] = v26;
  sub_8F7A0();
  swift_release();
  sub_616C((uint64_t)v37);
  swift_retain();
  uint64_t v27 = sub_8FBD0();
  uint64_t v38 = v25;
  uint64_t v39 = &protocol witness table for OS_dispatch_queue;
  v37[0] = v27;
  sub_8F7A0();
  swift_release();
  swift_release();
  swift_release();
  sub_616C((uint64_t)v37);
  sub_25284((uint64_t)v12, (void (*)(void))&type metadata accessor for JSServiceRequest);
  return v24;
}

uint64_t sub_23DB0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22200((_OWORD *)a1, v4);
    sub_36B18(v4, a2);
    return sub_1C464(a2);
  }
  else
  {
    sub_1379C(a1, &qword_BC780);
    sub_3B81C(a2, v4);
    sub_1C464(a2);
    return sub_1379C((uint64_t)v4, &qword_BC780);
  }
}

uint64_t sub_23E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v4 = sub_8EC80();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F650();
  uint64_t v21 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_8F3F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F560();
  sub_8F770();
  sub_8EA70();
  swift_initStackObject();
  sub_8EA60();
  sub_573C(&v22, (uint64_t)&v25);
  sub_8ECA0();
  sub_8F770();
  uint64_t v14 = v22;
  uint64_t v19 = v9;
  sub_8F770();
  uint64_t v15 = v21;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v6, v9, v7);
  uint64_t v16 = sub_5664((uint64_t *)&unk_BCEB0);
  sub_56F8((uint64_t)v6, 0, 1, v16);
  (*(void (**)(long long *, char *, uint64_t, uint64_t))(*(void *)v14 + 216))(&v25, v6, a2, v20);
  sub_25284((uint64_t)v6, (void (*)(void))&type metadata accessor for ResultingActionDispatcher.MetricsBehavior);
  *((void *)&v23 + 1) = sub_8F610();
  uint64_t v24 = &protocol witness table for SyncTaskScheduler;
  sub_8374((uint64_t *)&v22);
  sub_8F600();
  uint64_t v17 = sub_8F790();
  swift_release();
  swift_release();
  sub_616C((uint64_t)&v22);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v7);
  sub_616C((uint64_t)&v25);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v17;
}

uint64_t sub_241EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_8F390();
  __chkstk_darwin(v3 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v16 = type metadata accessor for CallbackActionImplementation();
  v15[0] = a2;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_8F9D0();
    uint64_t v8 = v7;

    sub_8F380();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    sub_8F370(v17);
    sub_820C(v15, v16);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v13[0] = DynamicType;
    sub_8F360();
    sub_1379C((uint64_t)v13, &qword_BC780);
    v18._countAndFlagsBits = 5972026;
    v18._object = (void *)0xE300000000000000;
    sub_8F370(v18);
    uint64_t MetatypeMetadata = &type metadata for String;
    v13[0] = v6;
    v13[1] = v8;
    sub_8F360();
    sub_1379C((uint64_t)v13, &qword_BC780);
    v10._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    sub_8F370(v19);
    sub_820C(v15, v16);
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v13[0] = v11;
    sub_8F360();
    sub_1379C((uint64_t)v13, &qword_BC780);
    v10._countAndFlagsBits = 58;
  }
  v10._object = (void *)0xE100000000000000;
  sub_8F370(v10);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v15);
  sub_8F340();
  sub_43634();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2448C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_8F390();
  __chkstk_darwin(v3 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v18 = type metadata accessor for CallbackActionImplementation();
  v17[0] = a2;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_8F9D0();
    uint64_t v8 = v7;

    sub_8F380();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    sub_8F370(v19);
    sub_820C(v17, v18);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = DynamicType;
    sub_8F360();
    sub_1379C((uint64_t)v15, &qword_BC780);
    v20._countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    sub_8F370(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v15[0] = v6;
    v15[1] = v8;
    sub_8F360();
    sub_1379C((uint64_t)v15, &qword_BC780);
    v10._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    sub_8F370(v21);
    sub_820C(v17, v18);
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = v11;
    sub_8F360();
    sub_1379C((uint64_t)v15, &qword_BC780);
    v10._countAndFlagsBits = 58;
  }
  v10._object = (void *)0xE100000000000000;
  sub_8F370(v10);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v17);
  sub_8F380();
  v22._object = (void *)0x800000000009BC50;
  v22._countAndFlagsBits = 0xD000000000000018;
  sub_8F370(v22);
  swift_getErrorValue();
  uint64_t v18 = v14;
  uint64_t v12 = sub_8374(v17);
  (*(void (**)(uint64_t *))(*(void *)(v14 - 8) + 16))(v12);
  sub_8F360();
  sub_1379C((uint64_t)v17, &qword_BC780);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  sub_8F370(v23);
  sub_8F3A0();
  sub_43634();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CallbackActionImplementation()
{
  return self;
}

unint64_t sub_247EC()
{
  unint64_t result = qword_BBD20;
  if (!qword_BBD20)
  {
    type metadata accessor for CallbackAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBD20);
  }
  return result;
}

uint64_t sub_2483C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236E0(a1, a2, a3);
}

uint64_t sub_24860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252DC();
  if (!sub_8FF20()) {
    swift_allocError();
  }
  uint64_t v5 = (void *)sub_8E910();
  swift_errorRelease();
  id v6 = [v5 code];
  id v7 = [v5 description];
  uint64_t v8 = sub_8F9D0();
  uint64_t v10 = v9;

  id v11 = [v5 domain];
  uint64_t v12 = sub_8F9D0();
  uint64_t v14 = v13;

  id v15 = [v5 userInfo];
  uint64_t v16 = sub_8F940();

  sub_37308(v16);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_24BE8((uint64_t)v6, 0, a1, a2, v8, v10, v12, v14, v18, a3);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_24A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_F040(0, &qword_BBD68);
  sub_25368();
  id v6 = v3;
  if (sub_8FF20())
  {
  }
  else
  {
    swift_allocError();
    *id v7 = v25;
  }
  uint64_t v8 = (void *)sub_8E910();
  swift_errorRelease();
  id v9 = [v8 code];
  id v10 = [v8 description];
  uint64_t v11 = sub_8F9D0();
  uint64_t v13 = v12;

  id v14 = [v8 domain];
  uint64_t v15 = sub_8F9D0();
  uint64_t v17 = v16;

  id v18 = [v8 userInfo];
  uint64_t v19 = sub_8F940();

  sub_37308(v19);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_24BE8((uint64_t)v9, 0, a1, a2, v11, v13, v15, v17, v21, a3);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_24BE8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_5664(&qword_BBBB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_92E90;
  sub_8FDB0();
  *(void *)(inited + 96) = sub_5664(&qword_BBD60);
  *(void *)(inited + 72) = a1;
  *(unsigned char *)(inited + 80) = a2 & 1;
  sub_8FDB0();
  uint64_t v18 = sub_5664(&qword_BB788);
  *(void *)(inited + 168) = v18;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  swift_bridgeObjectRetain();
  sub_254EC();
  *(void *)(inited + 240) = v18;
  *(void *)(inited + 216) = a5;
  *(void *)(inited + 224) = a6;
  swift_bridgeObjectRetain();
  sub_254EC();
  *(void *)(inited + 312) = v18;
  *(void *)(inited + 288) = a7;
  *(void *)(inited + 296) = a8;
  swift_bridgeObjectRetain();
  sub_254EC();
  uint64_t v19 = sub_5664(&qword_BC780);
  *(void *)(inited + 384) = v19;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = (void *)(v20 + 16);
  *(void *)(inited + 360) = v20;
  if (a9)
  {
    sub_36350(a9, v21);
  }
  else
  {
    *(_OWORD *)uint64_t v21 = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
  }
  sub_8FDB0();
  *(void *)(inited + 456) = v19;
  uint64_t v22 = swift_allocObject();
  *(void *)(inited + 432) = v22;
  sub_13740(a10, v22 + 16, &qword_BC780);
  return sub_8F950();
}

uint64_t sub_24E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3B05C(a2, a2 + 40, a1);
}

uint64_t sub_24E88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_3BE68(&v33);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_3C4BC((uint64_t)&v29);
  if (!*((void *)&v30 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_221F8();
    return swift_release();
  }
  while (1)
  {
    long long v26 = v29;
    long long v27 = v30;
    uint64_t v28 = v31;
    sub_22200(&v32, v25);
    uint64_t v7 = *a5;
    unint64_t v9 = sub_3ADB4((uint64_t)&v26);
    uint64_t v10 = *(void *)(v7 + 16);
    BOOL v11 = (v8 & 1) == 0;
    if (__OFADD__(v10, v11)) {
      break;
    }
    char v12 = v8;
    if (*(void *)(v7 + 24) >= v10 + v11)
    {
      if (a4)
      {
        if (v8) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_5664(&qword_BBD50);
        sub_8FE80();
        if (v12) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_3B57C();
      unint64_t v13 = sub_3ADB4((uint64_t)&v26);
      if ((v12 & 1) != (v14 & 1)) {
        goto LABEL_17;
      }
      unint64_t v9 = v13;
      if (v12)
      {
LABEL_9:
        sub_22210((uint64_t)v25, (uint64_t)v24);
        sub_616C((uint64_t)v25);
        sub_1C464((uint64_t)&v26);
        uint64_t v15 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v9);
        sub_616C((uint64_t)v15);
        sub_22200(v24, v15);
        goto LABEL_13;
      }
    }
    uint64_t v16 = (void *)*a5;
    *(void *)(*a5 + 8 * (v9 >> 6) + 64) |= 1 << v9;
    uint64_t v17 = v16[6] + 40 * v9;
    long long v18 = v26;
    long long v19 = v27;
    *(void *)(v17 + 32) = v28;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    sub_22200(v25, (_OWORD *)(v16[7] + 32 * v9));
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_16;
    }
    v16[2] = v22;
LABEL_13:
    sub_3C4BC((uint64_t)&v29);
    a4 = 1;
    if (!*((void *)&v30 + 1)) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = sub_8FF60();
  __break(1u);
  return result;
}

uint64_t sub_250B8()
{
  swift_release();
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    if (*(void *)(v0 + 48)) {
      sub_616C(v0 + 24);
    }
  }
  else if (!*(unsigned char *)(v0 + 56))
  {
    swift_errorRelease();
  }

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_2511C(uint64_t a1)
{
  return sub_23E38(a1, *(void *)(v1 + 16), v1 + 24);
}

unint64_t sub_25128()
{
  unint64_t result = qword_BBD48;
  if (!qword_BBD48)
  {
    sub_2517C(&qword_BB0A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBD48);
  }
  return result;
}

uint64_t sub_2517C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_251C4(uint64_t a1)
{
  return sub_241EC(a1, v1);
}

uint64_t sub_251CC(uint64_t a1)
{
  return sub_2448C(a1, v1);
}

uint64_t sub_251D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_25228(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_13858();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_25284(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_13858();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_252DC()
{
  unint64_t result = qword_BBD58;
  if (!qword_BBD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBD58);
  }
  return result;
}

uint64_t sub_25328()
{
  if (*(void *)(v0 + 40)) {
    sub_616C(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_25368()
{
  unint64_t result = qword_BBD70;
  if (!qword_BBD70)
  {
    sub_F040(255, &qword_BBD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBD70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CallbackActionImplementation.PerformError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25464);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CallbackActionImplementation.PerformError()
{
  return &type metadata for CallbackActionImplementation.PerformError;
}

unint64_t sub_254A0()
{
  unint64_t result = qword_BBD78;
  if (!qword_BBD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBD78);
  }
  return result;
}

uint64_t sub_254EC()
{
  return sub_8FDB0();
}

unint64_t sub_25510()
{
  unint64_t result = qword_BBD80;
  if (!qword_BBD80)
  {
    type metadata accessor for Checkbox();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBD80);
  }
  return result;
}

uint64_t type metadata accessor for Checkbox()
{
  uint64_t result = qword_BBDE0;
  if (!qword_BBDE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10210(v1 + 128, a1);
}

uint64_t sub_255B4@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  swift_allocObject();
  sub_8EBF0();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = type metadata accessor for Checkbox();
  uint64_t v10 = sub_3CEE4();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v12();
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v13();
  }
  else
  {
    v28[0] = v10;
    v28[1] = v11;
    long long v29 = a2;
    v25[4] = a2 + 128;
    uint64_t v15 = sub_8FDB0();
    __chkstk_darwin(v15);
    v25[-2] = a1;
    sub_26BDC();
    sub_3BC4();
    uint64_t v16 = sub_8F5F0();
    sub_56F8((uint64_t)v7, 0, 1, v16);
    uint64_t v17 = v29;
    sub_1C4C0((uint64_t)v7, (uint64_t)&v29[*(int *)(v9 + 36)], &qword_BDD70);
    sub_26BDC();
    uint64_t v18 = sub_3CFF0();
    *uint64_t v17 = v18 & 1;
    __chkstk_darwin(v18);
    sub_156AC();
    sub_3B0C();
    _OWORD v25[2] = v29 + 8;
    uint64_t v19 = sub_1C4C0((uint64_t)v28, (uint64_t)(v29 + 8), &qword_BAAD0);
    __chkstk_darwin(v19);
    sub_156AC();
    sub_26BDC();
    sub_3B0C();
    uint64_t v20 = v29;
    v25[1] = v29 + 48;
    uint64_t v21 = sub_1C4C0((uint64_t)&v27, (uint64_t)(v29 + 48), &qword_BAAD0);
    void v25[3] = v25;
    uint64_t v22 = &v20[*(int *)(v9 + 40)];
    *((void *)v22 + 4) = 0;
    *(_OWORD *)uint64_t v22 = 0u;
    *((_OWORD *)v22 + 1) = 0u;
    __chkstk_darwin(v21);
    v25[-2] = v8;
    v25[-1] = a1;
    sub_26BDC();
    sub_3B40();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v23();
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v24();
    return sub_573C(&v26, (uint64_t)(v20 + 88));
  }
}

uint64_t sub_25B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 16))(&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F5B0();
  uint64_t v13 = sub_8F5F0();
  return sub_56F8(a3, 0, 1, v13);
}

uint64_t sub_25D30@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_255B4(a1, a2);
}

uint64_t sub_25D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B7C(a1, *(void *)(v2 + 16), a2);
}

unsigned char *sub_25D50(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)unsigned int v4 = *a2;
    unsigned int v4 = (unsigned char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a1 + 8;
    uint64_t v8 = a2 + 1;
    uint64_t v9 = a2[4];
    if (v9)
    {
      uint64_t v10 = a2[5];
      *((void *)v4 + 4) = v9;
      *((void *)v4 + 5) = v10;
      (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
    }
    else
    {
      long long v12 = *(_OWORD *)(a2 + 3);
      *uint64_t v7 = *v8;
      *(_OWORD *)(v4 + 24) = v12;
      *((void *)v4 + 5) = a2[5];
    }
    uint64_t v13 = v4 + 48;
    char v14 = a2 + 6;
    uint64_t v15 = a2[9];
    if (v15)
    {
      uint64_t v16 = a2[10];
      *((void *)v4 + 9) = v15;
      *((void *)v4 + 10) = v16;
      (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
    }
    else
    {
      long long v17 = *((_OWORD *)a2 + 4);
      *uint64_t v13 = *v14;
      *((_OWORD *)v4 + 4) = v17;
      *((void *)v4 + 10) = a2[10];
    }
    long long v18 = *((_OWORD *)a2 + 7);
    *((_OWORD *)v4 + 7) = v18;
    (**(void (***)(uint64_t, uint64_t))(v18 - 8))((uint64_t)(v4 + 88), (uint64_t)(a2 + 11));
    long long v19 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(v4 + 152) = v19;
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))((uint64_t)(v4 + 128), (uint64_t)(a2 + 16));
    uint64_t v20 = *(int *)(a3 + 36);
    uint64_t v21 = &v4[v20];
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_8F5F0();
    if (sub_5754((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_5664(&qword_BDD70);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      sub_56F8((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v25 = *(int *)(a3 + 40);
    long long v26 = &v4[v25];
    uint64_t v27 = (uint64_t)a2 + v25;
    uint64_t v28 = *(uint64_t *)((char *)a2 + v25 + 24);
    if (v28)
    {
      uint64_t v29 = *(void *)(v27 + 32);
      *((void *)v26 + 3) = v28;
      *((void *)v26 + 4) = v29;
      (**(void (***)(void))(v28 - 8))();
    }
    else
    {
      long long v30 = *(_OWORD *)(v27 + 16);
      *(_OWORD *)long long v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v30;
      *((void *)v26 + 4) = *(void *)(v27 + 32);
    }
  }
  return v4;
}

uint64_t sub_26014(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32)) {
    sub_616C(a1 + 8);
  }
  if (*(void *)(a1 + 72)) {
    sub_616C(a1 + 48);
  }
  sub_616C(a1 + 88);
  sub_616C(a1 + 128);
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 40);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_260F8(uint64_t a1, char *a2, uint64_t a3)
{
  char v7 = *a2;
  uint64_t v6 = a2 + 8;
  *(unsigned char *)a1 = v7;
  uint64_t v8 = a1 + 8;
  uint64_t v9 = *((void *)a2 + 4);
  if (v9)
  {
    uint64_t v10 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v8, (uint64_t)v6);
  }
  else
  {
    long long v11 = *((_OWORD *)v6 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v6;
    *(_OWORD *)(v8 + 16) = v11;
    *(void *)(v8 + 32) = *((void *)v6 + 4);
  }
  long long v12 = (_OWORD *)(a1 + 48);
  uint64_t v13 = a2 + 48;
  uint64_t v14 = *((void *)a2 + 9);
  if (v14)
  {
    uint64_t v15 = *((void *)a2 + 10);
    *(void *)(a1 + 72) = v14;
    *(void *)(a1 + 80) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    long long v16 = *((_OWORD *)a2 + 4);
    *long long v12 = *v13;
    *(_OWORD *)(a1 + 64) = v16;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
  }
  long long v17 = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 112) = v17;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 88, (uint64_t)(a2 + 88));
  long long v18 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v18;
  (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 128, (uint64_t)(a2 + 128));
  uint64_t v19 = *(int *)(a3 + 36);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_8F5F0();
  if (sub_5754((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_5664(&qword_BDD70);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    sub_56F8((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = *(int *)(a3 + 40);
  uint64_t v25 = a1 + v24;
  long long v26 = &a2[v24];
  uint64_t v27 = *(void *)&a2[v24 + 24];
  if (v27)
  {
    uint64_t v28 = *((void *)v26 + 4);
    *(void *)(v25 + 24) = v27;
    *(void *)(v25 + 32) = v28;
    (**(void (***)(void))(v27 - 8))();
  }
  else
  {
    long long v29 = *((_OWORD *)v26 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(void *)(v25 + 32) = *((void *)v26 + 4);
  }
  return a1;
}

uint64_t sub_26364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = a1 + 8;
  char v7 = (long long *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v8)
    {
      sub_64C8((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
      goto LABEL_8;
    }
    sub_616C(a1 + 8);
  }
  else if (v8)
  {
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 8, a2 + 8);
    goto LABEL_8;
  }
  long long v9 = *v7;
  long long v10 = v7[1];
  *(void *)(v6 + 32) = *((void *)v7 + 4);
  *(_OWORD *)uint64_t v6 = v9;
  *(_OWORD *)(v6 + 16) = v10;
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v11)
    {
      sub_64C8((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_15;
    }
    sub_616C(a1 + 48);
  }
  else if (v11)
  {
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 48, a2 + 48);
    goto LABEL_15;
  }
  long long v12 = *(_OWORD *)(a2 + 48);
  long long v13 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v13;
LABEL_15:
  sub_64C8((uint64_t *)(a1 + 88), (uint64_t *)(a2 + 88));
  sub_64C8((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = (void *)(a1 + v14);
  long long v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_8F5F0();
  int v18 = sub_5754((uint64_t)v15, 1, v17);
  int v19 = sub_5754((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      sub_56F8((uint64_t)v15, 0, 1, v17);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  uint64_t v20 = *(void *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
LABEL_20:
    uint64_t v21 = sub_5664(&qword_BDD70);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 24))(v15, v16, v17);
LABEL_21:
  uint64_t v22 = *(int *)(a3 + 40);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (long long *)(a2 + v22);
  uint64_t v25 = *((void *)v24 + 3);
  if (!*(void *)(a1 + v22 + 24))
  {
    if (v25)
    {
      *(void *)(v23 + 24) = v25;
      *(void *)(v23 + 32) = *((void *)v24 + 4);
      (**(void (***)(uint64_t, long long *))(v25 - 8))(v23, v24);
      return a1;
    }
LABEL_27:
    long long v26 = *v24;
    long long v27 = v24[1];
    *(void *)(v23 + 32) = *((void *)v24 + 4);
    *(_OWORD *)uint64_t v23 = v26;
    *(_OWORD *)(v23 + 16) = v27;
    return a1;
  }
  if (!v25)
  {
    sub_616C(v23);
    goto LABEL_27;
  }
  sub_64C8((uint64_t *)v23, (uint64_t *)v24);
  return a1;
}

uint64_t sub_2667C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v9 = *(int *)(a3 + 36);
  long long v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 144) = v8;
  uint64_t v12 = sub_8F5F0();
  if (sub_5754((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_5664(&qword_BDD70);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    sub_56F8((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = *(int *)(a3 + 40);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  return a1;
}

uint64_t sub_267D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = a1 + 8;
  uint64_t v7 = a2 + 8;
  if (*(void *)(a1 + 32)) {
    sub_616C(a1 + 8);
  }
  long long v8 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(_OWORD *)(v6 + 16) = v8;
  *(void *)(v6 + 32) = *(void *)(v7 + 32);
  if (*(void *)(a1 + 72)) {
    sub_616C(a1 + 48);
  }
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_616C(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_616C(a1 + 128);
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_8F5F0();
  int v15 = sub_5754((uint64_t)v12, 1, v14);
  int v16 = sub_5754((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      sub_56F8((uint64_t)v12, 0, 1, v14);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
LABEL_10:
    uint64_t v18 = sub_5664(&qword_BDD70);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_11:
  uint64_t v19 = *(int *)(a3 + 40);
  uint64_t v20 = a1 + v19;
  if (*(void *)(a1 + v19 + 24)) {
    sub_616C(a1 + v19);
  }
  long long v21 = *(_OWORD *)(a2 + v19 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(a2 + v19);
  *(_OWORD *)(v20 + 16) = v21;
  *(void *)(v20 + 32) = *(void *)(a2 + v19 + 32);
  return a1;
}

uint64_t sub_269F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_26A08);
}

uint64_t sub_26A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 112);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_26A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_26AA8);
}

uint64_t sub_26AA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 112) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

void sub_26B2C()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_26BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_label);
  swift_getKeyPath();
  sub_5664(&qword_BBE80);
  sub_8F430();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))&stru_158.sectname[swift_isaMask & *v6])(v11, a3);
  sub_616C((uint64_t)v11);
  swift_getKeyPath();
  sub_27060();
  swift_release();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_isToggled) = v11[0];
  sub_27288();
  uint64_t v7 = swift_retain();
  sub_27270(v7);
  swift_getKeyPath();
  sub_27060();
  swift_release();
  uint64_t v8 = v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkedSegue;
  swift_beginAccess();
  sub_9698((uint64_t)v11, v8);
  swift_endAccess();
  swift_getKeyPath();
  sub_27060();
  swift_release();
  uint64_t v9 = v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_uncheckedSegue;
  swift_beginAccess();
  sub_9698((uint64_t)v11, v9);
  return swift_endAccess();
}

uint64_t sub_26DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for CheckboxComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_26E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for CheckboxComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_26E98()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_26F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_26F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

unint64_t sub_27010()
{
  unint64_t result = qword_BBE30;
  if (!qword_BBE30)
  {
    type metadata accessor for Checkbox();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBE30);
  }
  return result;
}

uint64_t sub_27060()
{
  return sub_8F430();
}

id sub_2707C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_label;
  sub_8EA50();
  long long v10 = self;
  uint64_t v11 = v4;
  id v12 = objc_msgSend(v10, "ams_primaryText");
  uint64_t v13 = sub_8ED30();
  _OWORD v21[3] = v13;
  v21[4] = (uint64_t)&protocol witness table for FontSource;
  *sub_8374(v21) = (uint64_t)UIFontTextStyleBody;
  (*(void (**)(void))(*(void *)(v13 - 8) + 104))();
  uint64_t v14 = UIFontTextStyleBody;
  *(void *)&v4[v9] = sub_8EA40();
  *(void *)&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_objectGraph] = 0;
  int v15 = &v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkedSegue];
  *(_OWORD *)int v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((void *)v15 + 4) = 0;
  int v16 = &v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_uncheckedSegue];
  *((void *)v16 + 4) = 0;
  *(_OWORD *)int v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_isToggled] = 0;
  uint64_t v17 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkboxImageView;
  *(void *)&v11[v17] = [objc_allocWithZone((Class)AMSUICommonImageView) init];

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for CheckboxComponent();
  id v18 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  sub_274D0();

  return v18;
}

uint64_t sub_27270(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_objectGraph) = a1;
  return swift_release();
}

void sub_27288()
{
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_isToggled) != 1)
  {
    sub_280C8();
    id v3 = [v0 contentView];
    [v3 setAccessibilityTraits:UIAccessibilityTraitButton];
    goto LABEL_10;
  }
  sub_27F04();
  id v1 = [v0 contentView];
  UIAccessibilityTraits v2 = UIAccessibilityTraitButton;
  if (UIAccessibilityTraitButton)
  {
    if ((UIAccessibilityTraitSelected & ~UIAccessibilityTraitButton) == 0) {
      goto LABEL_9;
    }
  }
  else if (!UIAccessibilityTraitSelected)
  {
    UIAccessibilityTraits v2 = 0;
    goto LABEL_9;
  }
  UIAccessibilityTraits v2 = UIAccessibilityTraitSelected | UIAccessibilityTraitButton;
LABEL_9:
  id v3 = v1;
  [v1 setAccessibilityTraits:v2];
LABEL_10:
}

uint64_t sub_27368()
{
  id v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for CheckboxComponent();
  id v2 = objc_msgSendSuper2(&v9, "prepareForReuse");
  (*(void (**)(id))&stru_158.segname[(swift_isaMask & **(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_label])
                                              - 8])(v2);
  sub_27270(0);
  uint64_t v8 = 0;
  long long v6 = 0u;
  long long v7 = 0u;
  uint64_t v3 = (uint64_t)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkedSegue];
  swift_beginAccess();
  sub_9698((uint64_t)&v6, v3);
  swift_endAccess();
  uint64_t v8 = 0;
  long long v6 = 0u;
  long long v7 = 0u;
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_uncheckedSegue];
  swift_beginAccess();
  sub_9698((uint64_t)&v6, v4);
  return swift_endAccess();
}

void sub_274D0()
{
  id v1 = v0;
  id v2 = [objc_allocWithZone((Class)AMSUICommonView) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkboxImageView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = *(char **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_label];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v1 contentView];
  [v5 addSubview:v2];

  [v2 addSubview:v3];
  [v2 addSubview:v4];
  LODWORD(v6) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v6];
  LODWORD(v7) = 1148846080;
  [v4 setContentHuggingPriority:0 forAxis:v7];
  LODWORD(v8) = 1148846080;
  [*(id *)&v4[direct field offset for DynamicLabel.label] setContentHuggingPriority:0 forAxis:v8];
  id v57 = self;
  sub_5664(&qword_BBEE8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_93150;
  id v10 = [v2 topAnchor];
  id v11 = [v1 contentView];
  id v12 = [v11 topAnchor];

  id v14 = sub_28488(v13, "constraintEqualToAnchor:");
  *(void *)(v9 + 32) = v14;
  id v15 = [v2 bottomAnchor];
  id v16 = [v1 contentView];
  id v17 = [v16 bottomAnchor];

  id v19 = sub_28488(v18, "constraintEqualToAnchor:");
  *(void *)(v9 + 40) = v19;
  id v20 = [v2 centerXAnchor];
  id v21 = [v1 contentView];
  id v22 = [v21 centerXAnchor];

  id v24 = sub_28488(v23, "constraintEqualToAnchor:");
  *(void *)(v9 + 48) = v24;
  id v25 = [v2 leadingAnchor];
  id v26 = [v1 contentView];
  id v27 = [v26 leadingAnchor];

  id v29 = sub_28488(v28, "constraintGreaterThanOrEqualToAnchor:");
  *(void *)(v9 + 56) = v29;
  id v30 = [v2 trailingAnchor];
  id v31 = [v1 contentView];
  id v32 = [v31 trailingAnchor];

  id v34 = sub_28488(v33, "constraintLessThanOrEqualToAnchor:");
  *(void *)(v9 + 64) = v34;
  id v35 = [v3 leadingAnchor];
  id v36 = [v2 leadingAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v9 + 72) = v37;
  id v38 = [v3 centerYAnchor];
  id v39 = [v2 centerYAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v9 + 80) = v40;
  id v41 = [v3 widthAnchor];
  id v42 = [v41 constraintEqualToConstant:24.0];

  *(void *)(v9 + 88) = v42;
  id v43 = [v3 heightAnchor];
  id v44 = [v43 constraintEqualToConstant:24.0];

  *(void *)(v9 + 96) = v44;
  id v45 = [v4 leadingAnchor];
  id v46 = [v3 trailingAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:8.0];

  *(void *)(v9 + 104) = v47;
  id v48 = [v4 trailingAnchor];
  id v49 = sub_284A0((uint64_t)[v2 trailingAnchor]);

  *(void *)(v9 + 112) = v49;
  id v50 = [v4 topAnchor];
  id v51 = sub_284A0((uint64_t)[v2 topAnchor]);

  *(void *)(v9 + 120) = v51;
  id v52 = [v4 bottomAnchor];
  id v53 = [v2 bottomAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  *(void *)(v9 + 128) = v54;
  sub_8FA80();
  sub_F040(0, (unint64_t *)&qword_BBEF0);
  Class isa = sub_8FA60().super.isa;
  swift_bridgeObjectRelease();
  [v57 activateConstraints:isa];

  v59[3] = type metadata accessor for CheckboxComponent();
  v59[0] = v1;
  objc_allocWithZone((Class)UITapGestureRecognizer);
  id v56 = v1;
  id v58 = sub_28344(v59, (uint64_t)"handleTap");
  [v56 addGestureRecognizer:v58];
}

uint64_t sub_27BFC()
{
  uint64_t v1 = sub_8EC80();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8F650();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_isToggled;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_isToggled) = (*(unsigned char *)(v0
                                                                                                  + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_isToggled) & 1) == 0;
  sub_27288();
  if (*(unsigned char *)(v0 + v8) == 1) {
    uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkedSegue;
  }
  else {
    uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_uncheckedSegue;
  }
  uint64_t v10 = v0 + v9;
  swift_beginAccess();
  sub_6F8C(v10, (uint64_t)&v16);
  if (!*((void *)&v17 + 1)) {
    return sub_EF88((uint64_t)&v16, &qword_BAAD0);
  }
  sub_573C(&v16, (uint64_t)v19);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_objectGraph);
  if (v11)
  {
    sub_8ECA0();
    sub_8F560();
    swift_retain();
    sub_8F770();
    uint64_t v12 = v16;
    sub_8F770();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
    uint64_t v13 = sub_5664((uint64_t *)&unk_BCEB0);
    sub_56F8((uint64_t)v3, 0, 1, v13);
    long long v16 = 0u;
    long long v17 = 0u;
    char v18 = -1;
    (*(void (**)(unsigned char *, char *, uint64_t, long long *))(*(void *)v12 + 216))(v19, v3, v11, &v16);
    swift_release();
    swift_release();
    swift_release();
    sub_EF88((uint64_t)&v16, &qword_BB600);
    sub_EFE4((uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_616C((uint64_t)v19);
}

void sub_27F04()
{
  uint64_t v1 = v0;
  id v2 = [self configurationWithPointSize:4 weight:2 scale:24.0];
  sub_F040(0, &qword_BBEE0);
  id v3 = v2;
  id v4 = sub_28058(0xD000000000000015, 0x800000000009BD30, v2);
  uint64_t v5 = v4;
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkboxImageView];
  if (v4)
  {
    id v7 = v4;
    id v8 = [v1 tintColor];
    if (!v8)
    {
      __break(1u);
      return;
    }
    uint64_t v9 = v8;
    id v10 = [v7 imageWithTintColor:v8 renderingMode:1];
  }
  else
  {
    id v10 = 0;
  }
  [v6 setImage:v10];
}

id sub_28058(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() systemImageNamed:v4 withConfiguration:a3];

  return v5;
}

void sub_280C8()
{
  uint64_t v1 = v0;
  id v2 = [self configurationWithPointSize:4 weight:2 scale:24.0];
  sub_F040(0, &qword_BBEE0);
  id v3 = v2;
  id v4 = sub_28058(0x656C63726963, 0xE600000000000000, v2);
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17CheckboxComponent_checkboxImageView);
  if (v4)
  {
    uint64_t v6 = self;
    id v7 = v4;
    id v8 = objc_msgSend(v6, "ams_secondaryText");
    id v9 = [v7 imageWithTintColor:v8 renderingMode:1];
  }
  else
  {
    id v9 = 0;
  }
  [v5 setImage:v9];
}

void sub_2821C()
{
}

id sub_2825C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CheckboxComponent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CheckboxComponent()
{
  return self;
}

id sub_28344(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    uint64_t v6 = sub_820C(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    __chkstk_darwin(v6);
    id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_8FF30();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    sub_616C((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = [v2 initWithTarget:v10 action:a2];
  swift_unknownObjectRelease();
  return v11;
}

id sub_28488(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

id sub_284A0(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v1 + 896);
  return objc_msgSend(v2, v4, a1);
}

uint64_t sub_284C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_8EA70();
  swift_allocObject();
  id v9 = (int *)type metadata accessor for CheckDownloadQueueAction();
  uint64_t v18 = a1;
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v10();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v11();
  }
  else
  {
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a2, v8, v5);
    uint64_t v13 = sub_3D0F8();
    *(void *)(a2 + v9[5]) = v13;
    __chkstk_darwin(v13);
    sub_1921C();
    sub_191F4();
    uint64_t v14 = sub_BEB0((uint64_t)&v20, a2 + v9[6]);
    __chkstk_darwin(v14);
    sub_1921C();
    sub_191F4();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v15();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v16 + 8))(a1);
    return sub_BEB0((uint64_t)&v19, a2 + v9[7]);
  }
}

uint64_t sub_288EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_284C0(a1, a2);
}

uint64_t type metadata accessor for CheckDownloadQueueAction()
{
  uint64_t result = qword_BBF50;
  if (!qword_BBF50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_2894C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)id v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    long long v17 = (char *)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *((void *)v17 + 4);
      *((void *)v16 + 3) = v18;
      *((void *)v16 + 4) = v19;
      (**(void (***)(void))(v18 - 8))();
    }
    else
    {
      long long v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v20;
      *((void *)v16 + 4) = *((void *)v17 + 4);
    }
  }
  return a1;
}

uint64_t sub_28AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v5 + 24)) {
    sub_616C(v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 28);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_28B60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(void))(v10 - 8))();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }
  else
  {
    long long v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }
  return a1;
}

uint64_t sub_28C88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      sub_64C8((uint64_t *)v8, v9);
      goto LABEL_8;
    }
    sub_616C(v8);
  }
  else if (v10)
  {
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v9[4];
    (**(void (***)(uint64_t, long long *))(v10 - 8))(v8, (long long *)v9);
    goto LABEL_8;
  }
  long long v11 = *(_OWORD *)v9;
  long long v12 = *((_OWORD *)v9 + 1);
  *(void *)(v8 + 32) = v9[4];
  *(_OWORD *)uint64_t v8 = v11;
  *(_OWORD *)(v8 + 16) = v12;
LABEL_8:
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (long long *)(a2 + v13);
  uint64_t v16 = *((void *)v15 + 3);
  if (!*(void *)(a1 + v13 + 24))
  {
    if (v16)
    {
      *(void *)(v14 + 24) = v16;
      *(void *)(v14 + 32) = *((void *)v15 + 4);
      (**(void (***)(uint64_t, long long *))(v16 - 8))(v14, v15);
      return a1;
    }
LABEL_14:
    long long v17 = *v15;
    long long v18 = v15[1];
    *(void *)(v14 + 32) = *((void *)v15 + 4);
    *(_OWORD *)uint64_t v14 = v17;
    *(_OWORD *)(v14 + 16) = v18;
    return a1;
  }
  if (!v16)
  {
    sub_616C(v14);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v14, (uint64_t *)v15);
  return a1;
}

uint64_t sub_28E1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  return a1;
}

uint64_t sub_28ECC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    sub_616C(a1 + v7);
  }
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  if (*(void *)(a1 + v11 + 24)) {
    sub_616C(a1 + v11);
  }
  long long v13 = *(_OWORD *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(v12 + 16) = v13;
  *(void *)(v12 + 32) = *(void *)(a2 + v11 + 32);
  return a1;
}

uint64_t sub_28FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_28FB8);
}

uint64_t sub_28FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_5754(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_29054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_29068);
}

void sub_29068(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_56F8(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  }
}

uint64_t sub_290F4()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_29198(uint64_t a1)
{
  unint64_t result = sub_291C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_291C0()
{
  unint64_t result = qword_BBF90;
  if (!qword_BBF90)
  {
    type metadata accessor for CheckDownloadQueueAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBF90);
  }
  return result;
}

void sub_29210(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_29288()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_8F390();
  __chkstk_darwin(v2 - 8);
  sub_5664(&qword_BB0A0);
  uint64_t v28 = sub_8F820();
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v3 = type metadata accessor for CheckDownloadQueueActionImplementation();
  id v30 = (void *)v3;
  aBlock[0] = v0;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_8F9D0();
    uint64_t v8 = v7;

    sub_8F380();
    sub_18448();
    sub_83F8();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_18480(MetatypeMetadata);
    sub_8250((uint64_t)&v33);
    v36._countAndFlagsBits = 5972026;
    v36._object = (void *)0xE300000000000000;
    sub_8F370(v36);
    id v35 = &type metadata for String;
    uint64_t v33 = v6;
    uint64_t v34 = v8;
    sub_8F360();
    sub_8250((uint64_t)&v33);
    v10._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    sub_18448();
    sub_83F8();
    uint64_t v11 = swift_getMetatypeMetadata();
    sub_18480(v11);
    sub_8250((uint64_t)&v33);
    v10._countAndFlagsBits = 58;
  }
  v10._object = (void *)0xE100000000000000;
  sub_8F370(v10);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)aBlock);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  id v12 = [objc_allocWithZone((Class)ASDCheckQueueRequestOptions) initWithReason:1];
  id v13 = [objc_allocWithZone((Class)ASDCheckQueueRequest) initWithOptions:v12];
  if (v13)
  {
    long long v14 = v13;
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v28;
    *(void *)(v15 + 16) = v1;
    *(void *)(v15 + 24) = v28;
    id v31 = sub_29F6C;
    uint64_t v32 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_29210;
    id v30 = &unk_AFA58;
    long long v17 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v14 sendRequestCompletionBlock:v17];
    _Block_release(v17);

    id v12 = v14;
  }
  else
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    id v30 = (void *)v3;
    aBlock[0] = v1;
    swift_retain();
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = sub_8F9D0();
      uint64_t v22 = v21;

      sub_8F380();
      sub_18448();
      sub_83F8();
      uint64_t v23 = swift_getMetatypeMetadata();
      sub_18480(v23);
      sub_8250((uint64_t)&v33);
      v37._countAndFlagsBits = 5972026;
      v37._object = (void *)0xE300000000000000;
      sub_8F370(v37);
      id v35 = &type metadata for String;
      uint64_t v33 = v20;
      uint64_t v34 = v22;
      sub_8F360();
      sub_8250((uint64_t)&v33);
      v24._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      sub_18448();
      sub_83F8();
      uint64_t v25 = swift_getMetatypeMetadata();
      sub_18480(v25);
      sub_8250((uint64_t)&v33);
      v24._countAndFlagsBits = 58;
    }
    v24._object = (void *)0xE100000000000000;
    sub_8F370(v24);
    sub_8F3A0();
    sub_616C((uint64_t)aBlock);
    sub_8F340();
    sub_4366C();
    swift_bridgeObjectRelease();
    sub_29EE0();
    swift_allocError();
    unsigned char *v26 = 0;
    uint64_t v16 = sub_8F7B0();
    swift_release();
  }

  return v16;
}

uint64_t sub_29780(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8F390();
  __chkstk_darwin(v6 - 8);
  if (a2)
  {
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
    id v39 = (void *)type metadata accessor for CheckDownloadQueueActionImplementation();
    v38[0] = a3;
    swift_retain();
    swift_errorRetain();
    id v7 = (id)AMSLogKey();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = sub_8F9D0();
      uint64_t v11 = v10;

      sub_8F380();
      v40._countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      sub_8F370(v40);
      sub_820C(v38, (uint64_t)v39);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v35 = DynamicType;
      sub_8F360();
      sub_8250((uint64_t)&v35);
      v41._countAndFlagsBits = 5972026;
      v41._object = (void *)0xE300000000000000;
      sub_8F370(v41);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v35 = v9;
      uint64_t v36 = v11;
      sub_8F360();
      sub_8250((uint64_t)&v35);
      v13._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v44._countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      sub_8F370(v44);
      sub_820C(v38, (uint64_t)v39);
      uint64_t v21 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v35 = v21;
      sub_8F360();
      sub_8250((uint64_t)&v35);
      v13._countAndFlagsBits = 58;
    }
    v13._object = (void *)0xE100000000000000;
    sub_8F370(v13);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v38);
    sub_8F340();
    swift_getErrorValue();
    uint64_t v22 = sub_8FF90();
    id v39 = &type metadata for String;
    v38[0] = v22;
    v38[1] = v23;
    sub_8F3B0();
    sub_8250((uint64_t)v38);
    sub_4366C();
    swift_bridgeObjectRelease();
LABEL_15:
    sub_8F7D0();
    return swift_errorRelease();
  }
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  if ((a1 & 1) == 0)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    id v39 = (void *)type metadata accessor for CheckDownloadQueueActionImplementation();
    v38[0] = a3;
    swift_retain();
    id v24 = (id)AMSLogKey();
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = sub_8F9D0();
      uint64_t v28 = v27;

      sub_8F380();
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      sub_8F370(v45);
      sub_820C(v38, (uint64_t)v39);
      uint64_t v29 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v35 = v29;
      sub_8F360();
      sub_8250((uint64_t)&v35);
      v46._countAndFlagsBits = 5972026;
      v46._object = (void *)0xE300000000000000;
      sub_8F370(v46);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v35 = v26;
      uint64_t v36 = v28;
      sub_8F360();
      sub_8250((uint64_t)&v35);
      v30._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      sub_8F370(v48);
      sub_820C(v38, (uint64_t)v39);
      uint64_t v33 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v35 = v33;
      sub_8F360();
      sub_8250((uint64_t)&v35);
      v30._countAndFlagsBits = 58;
    }
    v30._object = (void *)0xE100000000000000;
    sub_8F370(v30);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v38);
    sub_8F340();
    sub_4366C();
    swift_bridgeObjectRelease();
    sub_29EE0();
    swift_allocError();
    *uint64_t v34 = 1;
    goto LABEL_15;
  }
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  id v39 = (void *)type metadata accessor for CheckDownloadQueueActionImplementation();
  v38[0] = a3;
  swift_retain();
  id v14 = (id)AMSLogKey();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_8F9D0();
    uint64_t v18 = v17;

    sub_8F380();
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    sub_8F370(v42);
    sub_820C(v38, (uint64_t)v39);
    uint64_t v19 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v35 = v19;
    sub_8F360();
    sub_8250((uint64_t)&v35);
    v43._countAndFlagsBits = 5972026;
    v43._object = (void *)0xE300000000000000;
    sub_8F370(v43);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v35 = v16;
    uint64_t v36 = v18;
    sub_8F360();
    sub_8250((uint64_t)&v35);
    v20._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    sub_8F370(v47);
    sub_820C(v38, (uint64_t)v39);
    uint64_t v31 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v35 = v31;
    sub_8F360();
    sub_8250((uint64_t)&v35);
    v20._countAndFlagsBits = 58;
  }
  v20._object = (void *)0xE100000000000000;
  sub_8F370(v20);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v38);
  sub_8F340();
  id v39 = &type metadata for Bool;
  LOBYTE(v38[0]) = 1;
  sub_8F3B0();
  sub_8250((uint64_t)v38);
  sub_43634();
  swift_bridgeObjectRelease();
  id v39 = &type metadata for Bool;
  LOBYTE(v38[0]) = 1;
  sub_8F7F0();
  return sub_EF34((uint64_t)v38);
}

uint64_t type metadata accessor for CheckDownloadQueueActionImplementation()
{
  return self;
}

uint64_t sub_29EBC()
{
  return sub_29288();
}

unint64_t sub_29EE0()
{
  unint64_t result = qword_BC058;
  if (!qword_BC058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC058);
  }
  return result;
}

uint64_t sub_29F2C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_29F6C(char a1, uint64_t a2)
{
  return sub_29780(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_29F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_29F84()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for CheckDownloadQueueActionImplementation.ActionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2A058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CheckDownloadQueueActionImplementation.ActionError()
{
  return &type metadata for CheckDownloadQueueActionImplementation.ActionError;
}

unint64_t sub_2A094()
{
  unint64_t result = qword_BC060;
  if (!qword_BC060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC060);
  }
  return result;
}

uint64_t sub_2A0E0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_18294(a3, v5 + 16);
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  uint64_t v11 = self;
  swift_retain();
  id v12 = [v11 defaultCenter];
  sub_820C(a2, a2[3]);
  swift_retain();
  id v13 = a1;
  [v12 addObserver:v5 selector:"networkStateDidChange:" name:v13 object:sub_8FF30()];
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  sub_616C(a3);
  sub_616C((uint64_t)a2);
  return v5;
}

uint64_t sub_2A208()
{
  sub_2A234();
  sub_616C(v0 + 16);
  swift_release();
  return v0;
}

void sub_2A234()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];
}

uint64_t sub_2A298()
{
  sub_2A208();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t sub_2A2CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_8F390();
  __chkstk_darwin(v2 - 8);
  sub_8E8B0();
  if (v16)
  {
    sub_5664(&qword_BC118);
    if (swift_dynamicCast())
    {
      if (*((void *)&v18 + 1))
      {
        sub_573C(&v17, (uint64_t)v20);
        sub_820C(v0 + 2, v0[5]);
        uint64_t v4 = v0[7];
        uint64_t v3 = v0[8];
        sub_18294((uint64_t)v20, (uint64_t)&v17);
        uint64_t v5 = swift_allocObject();
        *(void *)(v5 + 16) = v4;
        *(void *)(v5 + 24) = v3;
        sub_573C(&v17, v5 + 32);
        swift_retain();
        sub_8F4F0();
        swift_release();
        return sub_616C((uint64_t)v20);
      }
    }
    else
    {
      uint64_t v19 = 0;
      long long v17 = 0u;
      long long v18 = 0u;
    }
  }
  else
  {
    sub_EF88((uint64_t)v15, &qword_BC780);
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v19 = 0;
  }
  sub_EF88((uint64_t)&v17, &qword_BC110);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v21 = v1;
  v20[0] = v0;
  swift_retain();
  id v7 = (id)AMSLogKey();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_8F9D0();
    uint64_t v11 = v10;

    sub_8F380();
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    sub_8F370(v22);
    sub_820C(v20, v21);
    uint64_t DynamicType = swift_getDynamicType();
    *((void *)&v18 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v17 = DynamicType;
    sub_8F360();
    sub_EF88((uint64_t)&v17, &qword_BC780);
    v23._countAndFlagsBits = 5972026;
    v23._object = (void *)0xE300000000000000;
    sub_8F370(v23);
    *((void *)&v18 + 1) = &type metadata for String;
    *(void *)&long long v17 = v9;
    *((void *)&v17 + 1) = v11;
    sub_8F360();
    sub_EF88((uint64_t)&v17, &qword_BC780);
    v13._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    sub_8F370(v24);
    sub_820C(v20, v21);
    uint64_t v14 = swift_getDynamicType();
    *((void *)&v18 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v17 = v14;
    sub_8F360();
    sub_EF88((uint64_t)&v17, &qword_BC780);
    v13._countAndFlagsBits = 58;
  }
  v13._object = (void *)0xE100000000000000;
  sub_8F370(v13);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v20);
  sub_8F340();
  sub_4366C();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CommonNetworkObservation()
{
  return self;
}

void sub_2A7D4()
{
}

uint64_t sub_2A7F8()
{
  swift_release();
  sub_616C(v0 + 32);

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_2A838()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + 32);
}

uint64_t sub_2A868@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for CopyAction();
  uint64_t v19 = a1;
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v10();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v11();
  }
  else
  {
    (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 32))((char *)a2 + *(int *)(v9 + 20), v8, v5);
    uint64_t v13 = sub_3CEE4();
    uint64_t v15 = v14;
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v16();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    uint64_t result = v17();
    *a2 = v13;
    a2[1] = v15;
  }
  return result;
}

uint64_t sub_2AB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 16))(&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F490();
  uint64_t v13 = sub_8F4B0();
  return sub_56F8(a3, 0, 1, v13);
}

uint64_t sub_2ACC0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_2A868(a1, a2);
}

uint64_t type metadata accessor for CopyAction()
{
  uint64_t result = qword_BC178;
  if (!qword_BC178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2AD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2AB0C(a1, *(void *)(v2 + 16), a2);
}

uint64_t *sub_2AD28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_8F4B0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_2AE10(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_2AE88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_8F4B0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_2AF20(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_2AFBC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_2B038(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2B0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2B0D8);
}

uint64_t sub_2B0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_8F4B0();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_2B160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2B174);
}

uint64_t sub_2B174(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_2B1F4()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2B28C(uint64_t *a1)
{
  id v2 = [self generalPasteboard];
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  sub_2B3B8(v4, v3, v2);

  swift_bridgeObjectRelease();
  sub_5664(&qword_BB0A0);
  return sub_8F7C0();
}

uint64_t type metadata accessor for CopyActionImplementation()
{
  return self;
}

unint64_t sub_2B350()
{
  unint64_t result = qword_BC250;
  if (!qword_BC250)
  {
    type metadata accessor for CopyAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC250);
  }
  return result;
}

uint64_t sub_2B3A0(uint64_t *a1)
{
  return sub_2B28C(a1);
}

void sub_2B3B8(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8F9A0();
  [a3 setString:v4];
}

id sub_2B410()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDynamicUIPlugin();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_2B468()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDynamicUIPlugin();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CoreDynamicUIPlugin()
{
  return self;
}

void *sub_2B4C0()
{
  unint64_t result = sub_2B4E0();
  qword_C6AD0 = (uint64_t)result;
  return result;
}

void *sub_2B4E0()
{
  type metadata accessor for AuthenticateAction();
  sub_2EE80((unint64_t *)&qword_BB6A8, (void (*)(uint64_t))type metadata accessor for AuthenticateAction);
  sub_2EE80(&qword_BC2A0, (void (*)(uint64_t))type metadata accessor for AuthenticateAction);
  sub_8EB50();
  swift_allocObject();
  sub_8EB40();
  type metadata accessor for BuyAction();
  sub_2EE80((unint64_t *)&qword_BBAC0, (void (*)(uint64_t))type metadata accessor for BuyAction);
  sub_2EE80(&qword_BC2A8, (void (*)(uint64_t))type metadata accessor for BuyAction);
  swift_allocObject();
  sub_8EB40();
  type metadata accessor for CallbackAction();
  sub_2EE80((unint64_t *)&qword_BBD20, (void (*)(uint64_t))type metadata accessor for CallbackAction);
  sub_2EE80(&qword_BC2B0, (void (*)(uint64_t))type metadata accessor for CallbackAction);
  swift_allocObject();
  sub_8EB40();
  type metadata accessor for CheckDownloadQueueAction();
  sub_2EE80((unint64_t *)&qword_BBF90, (void (*)(uint64_t))type metadata accessor for CheckDownloadQueueAction);
  sub_2EE80(&qword_BC2B8, (void (*)(uint64_t))type metadata accessor for CheckDownloadQueueAction);
  swift_allocObject();
  sub_8EB40();
  type metadata accessor for LinkAction();
  sub_2EE80((unint64_t *)&qword_BC2C0, (void (*)(uint64_t))type metadata accessor for LinkAction);
  sub_2EE80(&qword_BC2C8, (void (*)(uint64_t))type metadata accessor for LinkAction);
  swift_allocObject();
  sub_8EB40();
  type metadata accessor for ResolutionAction();
  sub_2EE80((unint64_t *)&qword_BC2D0, (void (*)(uint64_t))type metadata accessor for ResolutionAction);
  sub_2EE80(&qword_BC2D8, (void (*)(uint64_t))type metadata accessor for ResolutionAction);
  swift_allocObject();
  sub_8EB40();
  if ((unint64_t)&_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = sub_8FEB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v0 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  }
  if (__OFADD__(v0, 6))
  {
    __break(1u);
  }
  else
  {
    sub_2EBE0(v0 + 6);
    sub_8FA80();
    swift_retain();
    sub_8FA50();
    if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
      goto LABEL_5;
    }
  }
  sub_8FA90();
LABEL_5:
  sub_8FAA0();
  sub_8FA80();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for AlertAction();
  sub_2EE80((unint64_t *)&qword_BB200, (void (*)(uint64_t))type metadata accessor for AlertAction);
  sub_2EE80(&qword_BC2E0, (void (*)(uint64_t))type metadata accessor for AlertAction);
  swift_allocObject();
  sub_8EB40();
  type metadata accessor for AcknowledgePrivacyAction();
  sub_2EE80((unint64_t *)&qword_BAC38, (void (*)(uint64_t))type metadata accessor for AcknowledgePrivacyAction);
  sub_2EE80(&qword_BC2E8, (void (*)(uint64_t))type metadata accessor for AcknowledgePrivacyAction);
  swift_allocObject();
  sub_8EB40();
  type metadata accessor for CopyAction();
  sub_2EE80((unint64_t *)&qword_BC250, (void (*)(uint64_t))type metadata accessor for CopyAction);
  sub_2EE80(&qword_BC2F0, (void (*)(uint64_t))type metadata accessor for CopyAction);
  swift_allocObject();
  sub_8EB40();
  if ((unint64_t)&_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_8FEB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  }
  if (__OFADD__(v1, 3))
  {
    __break(1u);
  }
  else
  {
    sub_2EBE0(v1 + 3);
    sub_8FA80();
    swift_retain();
    sub_8FA50();
    if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
      goto LABEL_19;
    }
  }
  sub_8FA90();
LABEL_19:
  sub_8FAA0();
  sub_8FA80();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for PrivacySplashAction();
  sub_2EE80((unint64_t *)&qword_BC2F8, (void (*)(uint64_t))type metadata accessor for PrivacySplashAction);
  sub_2EE80(&qword_BC300, (void (*)(uint64_t))type metadata accessor for PrivacySplashAction);
  swift_allocObject();
  sub_8EB40();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_8FA90();
  }
  sub_8FAA0();
  sub_8FA80();
  swift_release();
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_2C1C4()
{
  return sub_2C348((void (*)(void))type metadata accessor for AuthenticateActionImplementation, &qword_BC350);
}

uint64_t sub_2C1E4()
{
  return sub_8ECD0();
}

uint64_t sub_2C248()
{
  return sub_2C348((void (*)(void))type metadata accessor for CallbackActionImplementation, &qword_BC340);
}

uint64_t sub_2C268()
{
  return sub_2C348((void (*)(void))type metadata accessor for CheckDownloadQueueActionImplementation, &qword_BC338);
}

uint64_t sub_2C288()
{
  return sub_2C348((void (*)(void))type metadata accessor for LinkActionImplementation, &qword_BC330);
}

uint64_t sub_2C2A8()
{
  return sub_2C348((void (*)(void))type metadata accessor for ResolutionActionImplementation, &qword_BC328);
}

uint64_t sub_2C2C8()
{
  return sub_2C348((void (*)(void))type metadata accessor for AlertActionImplementation, &qword_BC320);
}

uint64_t sub_2C2E8()
{
  return sub_2C348((void (*)(void))type metadata accessor for AcknowledgePrivacyActionImplementation, &qword_BC318);
}

uint64_t sub_2C308()
{
  return sub_2C348((void (*)(void))type metadata accessor for CopyActionImplementation, &qword_BC310);
}

uint64_t sub_2C328()
{
  return sub_2C348((void (*)(void))type metadata accessor for PrivacySplashActionImplementation, &qword_BC308);
}

uint64_t sub_2C348(void (*a1)(void), uint64_t *a2)
{
  return sub_8ECD0();
}

uint64_t sub_2C3B0()
{
  return sub_2E42C(&qword_BA9A8);
}

char *sub_2C3E8()
{
  unint64_t result = sub_2C408();
  qword_C6AD8 = (uint64_t)result;
  return result;
}

char *sub_2C408()
{
  type metadata accessor for Button();
  sub_2EE80(&qword_BB860, (void (*)(uint64_t))type metadata accessor for Button);
  sub_2EE80(&qword_BC358, (void (*)(uint64_t))type metadata accessor for Button);
  type metadata accessor for ButtonComponent();
  sub_8EC00();
  type metadata accessor for Text();
  sub_2EE80(&qword_BC360, (void (*)(uint64_t))type metadata accessor for Text);
  sub_2EE80(&qword_BC368, (void (*)(uint64_t))type metadata accessor for Text);
  type metadata accessor for TextComponent();
  sub_8EC00();
  type metadata accessor for SpacerModel(0);
  sub_2EE80(&qword_BC370, (void (*)(uint64_t))type metadata accessor for SpacerModel);
  sub_2EE80(&qword_BC378, (void (*)(uint64_t))type metadata accessor for SpacerModel);
  type metadata accessor for SpacerComponent(0);
  sub_8EC00();
  uint64_t v0 = sub_2E610(0, 3, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v1 = *((void *)v0 + 2);
  unint64_t v2 = *((void *)v0 + 3);
  unint64_t v3 = v1 + 1;
  swift_bridgeObjectRetain();
  if (v1 >= v2 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v2 > 1), v1 + 1, 1, v0);
  }
  *((void *)v0 + 2) = v3;
  NSString v4 = &v0[56 * v1];
  long long v5 = v62[0];
  long long v6 = v62[1];
  long long v7 = v62[2];
  *((void *)v4 + 10) = v63;
  *((_OWORD *)v4 + 3) = v6;
  *((_OWORD *)v4 + 4) = v7;
  *((_OWORD *)v4 + 2) = v5;
  unint64_t v8 = *((void *)v0 + 3);
  int64_t v9 = v1 + 2;
  swift_bridgeObjectRetain();
  if (v3 >= v8 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v8 > 1), v9, 1, v0);
  }
  *((void *)v0 + 2) = v9;
  uint64_t v10 = &v0[56 * v3];
  long long v11 = v64[0];
  long long v12 = v64[1];
  long long v13 = v64[2];
  *((void *)v10 + 10) = v65;
  *((_OWORD *)v10 + 3) = v12;
  *((_OWORD *)v10 + 4) = v13;
  *((_OWORD *)v10 + 2) = v11;
  unint64_t v14 = *((void *)v0 + 2);
  unint64_t v15 = *((void *)v0 + 3);
  swift_bridgeObjectRetain();
  if (v14 >= v15 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v15 > 1), v14 + 1, 1, v0);
  }
  *((void *)v0 + 2) = v14 + 1;
  uint64_t v16 = &v0[56 * v14];
  long long v17 = v66[0];
  long long v18 = v66[1];
  long long v19 = v66[2];
  *((void *)v16 + 10) = v67;
  *((_OWORD *)v16 + 3) = v18;
  *((_OWORD *)v16 + 4) = v19;
  *((_OWORD *)v16 + 2) = v17;
  sub_2ECA0((uint64_t)v64);
  sub_2ECA0((uint64_t)v66);
  sub_2ECA0((uint64_t)v62);
  type metadata accessor for SegmentedControl();
  sub_2EE80(&qword_BC380, (void (*)(uint64_t))type metadata accessor for SegmentedControl);
  sub_2EE80(&qword_BC388, (void (*)(uint64_t))type metadata accessor for SegmentedControl);
  type metadata accessor for SegmentedControlComponent();
  sub_8EC00();
  unint64_t v20 = *((void *)v0 + 2);
  unint64_t v21 = *((void *)v0 + 3);
  swift_bridgeObjectRetain();
  if (v20 >= v21 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v21 > 1), v20 + 1, 1, v0);
  }
  *((void *)v0 + 2) = v20 + 1;
  Swift::String v22 = &v0[56 * v20];
  long long v23 = v68[0];
  long long v24 = v68[1];
  long long v25 = v68[2];
  *((void *)v22 + 10) = v69;
  *((_OWORD *)v22 + 3) = v24;
  *((_OWORD *)v22 + 4) = v25;
  *((_OWORD *)v22 + 2) = v23;
  sub_2ECA0((uint64_t)v68);
  type metadata accessor for ASCLockupWrapper();
  sub_2EE80(&qword_BB4D0, (void (*)(uint64_t))type metadata accessor for ASCLockupWrapper);
  sub_2EE80(&qword_BC390, (void (*)(uint64_t))type metadata accessor for ASCLockupWrapper);
  type metadata accessor for ASCLockupWrapperComponent();
  sub_8EC00();
  unint64_t v27 = *((void *)v0 + 2);
  unint64_t v26 = *((void *)v0 + 3);
  if (v27 >= v26 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v26 > 1), v27 + 1, 1, v0);
  }
  *((void *)v0 + 2) = v27 + 1;
  uint64_t v28 = &v0[56 * v27];
  long long v29 = v70;
  long long v30 = v71;
  long long v31 = v72;
  *((void *)v28 + 10) = v73;
  *((_OWORD *)v28 + 3) = v30;
  *((_OWORD *)v28 + 4) = v31;
  *((_OWORD *)v28 + 2) = v29;
  type metadata accessor for AppAlertFooter();
  sub_2EE80((unint64_t *)&qword_BB330, (void (*)(uint64_t))type metadata accessor for AppAlertFooter);
  sub_2EE80(&qword_BC398, (void (*)(uint64_t))type metadata accessor for AppAlertFooter);
  type metadata accessor for AppAlertFooterComponent();
  sub_8EC00();
  type metadata accessor for Switch();
  sub_2EE80(&qword_BC3A0, (void (*)(uint64_t))type metadata accessor for Switch);
  sub_2EE80(&qword_BC3A8, (void (*)(uint64_t))type metadata accessor for Switch);
  type metadata accessor for SwitchComponent();
  sub_8EC00();
  type metadata accessor for ListItem();
  sub_2EE80(&qword_BC3B0, (void (*)(uint64_t))type metadata accessor for ListItem);
  sub_2EE80(&qword_BC3B8, (void (*)(uint64_t))type metadata accessor for ListItem);
  type metadata accessor for ListItemComponent();
  sub_8EC00();
  type metadata accessor for Checkbox();
  sub_2EE80((unint64_t *)&qword_BBE30, (void (*)(uint64_t))type metadata accessor for Checkbox);
  sub_2EE80(&qword_BC3C0, (void (*)(uint64_t))type metadata accessor for Checkbox);
  type metadata accessor for CheckboxComponent();
  sub_8EC00();
  int64_t v32 = *((void *)v0 + 2);
  int64_t v33 = v32 + 4;
  if (__OFADD__(v32, 4))
  {
    __break(1u);
  }
  else if (v33 <= *((void *)v0 + 3) >> 1)
  {
    goto LABEL_13;
  }
  if (v32 <= v33) {
    int64_t v61 = v32 + 4;
  }
  else {
    int64_t v61 = v32;
  }
  uint64_t v0 = sub_2E610((unsigned char *)&def_41A10 + 1, v61, 1, v0);
LABEL_13:
  unint64_t v34 = *((void *)v0 + 2);
  unint64_t v35 = *((void *)v0 + 3);
  unint64_t v36 = v34 + 1;
  swift_bridgeObjectRetain();
  if (v34 >= v35 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v35 > 1), v34 + 1, 1, v0);
  }
  *((void *)v0 + 2) = v36;
  Swift::String v37 = &v0[56 * v34];
  long long v38 = v74[0];
  long long v39 = v74[1];
  long long v40 = v74[2];
  *((void *)v37 + 10) = v75;
  *((_OWORD *)v37 + 3) = v39;
  *((_OWORD *)v37 + 4) = v40;
  *((_OWORD *)v37 + 2) = v38;
  unint64_t v41 = *((void *)v0 + 3);
  int64_t v42 = v34 + 2;
  swift_bridgeObjectRetain();
  if (v36 >= v41 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v41 > 1), v42, 1, v0);
  }
  *((void *)v0 + 2) = v42;
  Swift::String v43 = &v0[56 * v36];
  long long v44 = v76[0];
  long long v45 = v76[1];
  long long v46 = v76[2];
  *((void *)v43 + 10) = v77;
  *((_OWORD *)v43 + 3) = v45;
  *((_OWORD *)v43 + 4) = v46;
  *((_OWORD *)v43 + 2) = v44;
  unint64_t v47 = *((void *)v0 + 2);
  unint64_t v48 = *((void *)v0 + 3);
  unint64_t v49 = v47 + 1;
  swift_bridgeObjectRetain();
  if (v47 >= v48 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v48 > 1), v47 + 1, 1, v0);
  }
  *((void *)v0 + 2) = v49;
  id v50 = &v0[56 * v47];
  long long v51 = v78[0];
  long long v52 = v78[1];
  long long v53 = v78[2];
  *((void *)v50 + 10) = v79;
  *((_OWORD *)v50 + 3) = v52;
  *((_OWORD *)v50 + 4) = v53;
  *((_OWORD *)v50 + 2) = v51;
  unint64_t v54 = *((void *)v0 + 3);
  int64_t v55 = v47 + 2;
  swift_bridgeObjectRetain();
  if (v49 >= v54 >> 1) {
    uint64_t v0 = sub_2E610((char *)(v54 > 1), v55, 1, v0);
  }
  *((void *)v0 + 2) = v55;
  id v56 = &v0[56 * v49];
  long long v57 = v80[0];
  long long v58 = v80[1];
  long long v59 = v80[2];
  *((void *)v56 + 10) = v81;
  *((_OWORD *)v56 + 3) = v58;
  *((_OWORD *)v56 + 4) = v59;
  *((_OWORD *)v56 + 2) = v57;
  sub_2ECA0((uint64_t)v76);
  sub_2ECA0((uint64_t)v78);
  sub_2ECA0((uint64_t)v80);
  sub_2ECA0((uint64_t)v74);
  return v0;
}

uint64_t sub_2CE7C()
{
  return sub_2E42C(&qword_BA9B0);
}

uint64_t sub_2CEB4()
{
  sub_5664(&qword_BBEE8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_93460;
  type metadata accessor for ActivityShelfPageAction();
  sub_2EE80((unint64_t *)&qword_BAFB0, (void (*)(uint64_t))type metadata accessor for ActivityShelfPageAction);
  sub_2EE80(&qword_BC3D0, (void (*)(uint64_t))type metadata accessor for ActivityShelfPageAction);
  sub_8EC40();
  swift_allocObject();
  *(void *)(v0 + 32) = sub_8EC30();
  type metadata accessor for ReplaceComponentShelfPageAction();
  sub_2EE80((unint64_t *)&qword_BC3D8, (void (*)(uint64_t))type metadata accessor for ReplaceComponentShelfPageAction);
  sub_2EE80(&qword_BC3E0, (void (*)(uint64_t))type metadata accessor for ReplaceComponentShelfPageAction);
  swift_allocObject();
  *(void *)(v0 + 40) = sub_8EC30();
  type metadata accessor for ReplaceNavigationBarItemShelfPageAction();
  sub_2EE80((unint64_t *)&qword_BC3E8, (void (*)(uint64_t))type metadata accessor for ReplaceNavigationBarItemShelfPageAction);
  sub_2EE80(&qword_BC3F0, (void (*)(uint64_t))type metadata accessor for ReplaceNavigationBarItemShelfPageAction);
  swift_allocObject();
  *(void *)(v0 + 48) = sub_8EC30();
  uint64_t result = sub_8FA80();
  qword_C6AE0 = v0;
  return result;
}

uint64_t sub_2D14C()
{
  return sub_2E42C(&qword_BA9B8);
}

uint64_t sub_2D184()
{
  uint64_t result = sub_2D1A4();
  qword_C6AE8 = result;
  return result;
}

uint64_t sub_2D1A4()
{
  sub_5664(&qword_BBEE8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_93470;
  sub_8EB10();
  swift_allocObject();
  *(void *)(v0 + 32) = sub_8EB00();
  swift_allocObject();
  *(void *)(v0 + 40) = sub_8EB00();
  swift_allocObject();
  *(void *)(v0 + 48) = sub_8EB00();
  swift_allocObject();
  *(void *)(v0 + 56) = sub_8EB00();
  sub_8FA80();
  swift_allocObject();
  sub_8EB00();
  swift_retain();
  sub_8FA50();
  if (*(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                + (v0 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_8FA90();
  sub_8FAA0();
  sub_8FA80();
  swift_release();
  return v0;
}

uint64_t sub_2D3F8(uint64_t a1)
{
  uint64_t v2 = sub_8F320();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_14174(0x736E6F6974706FLL, 0xE700000000000000, (uint64_t)&type metadata for DelegatePageDestination);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_8EBD0();
  sub_8F560();
  sub_8F770();
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 232))(v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_2D5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_8F320();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  sub_36C64((uint64_t)v10, (uint64_t)v7, (uint64_t *)v18);
  long long v16 = v18[1];
  long long v17 = v18[0];
  uint64_t v12 = v19;
  uint64_t v13 = v20;
  sub_2EEC8();
  swift_allocError();
  long long v14 = v16;
  *(_OWORD *)uint64_t v15 = v17;
  *(_OWORD *)(v15 + 16) = v14;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v13;
  objc_allocWithZone((Class)type metadata accessor for ErrorViewController());
  swift_retain();
  sub_37B28();
}

uint64_t sub_2D7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v3 = sub_8F3F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F320();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_5664(&qword_BC408);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for ShelfPageDestination();
  uint64_t v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  long long v17 = (char *)&v22 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v24, v3);
  sub_74260((uint64_t)v10, (uint64_t)v6, v13);
  sub_56F8((uint64_t)v13, 0, 1, v14);
  sub_2ED80();
  sub_2EDD4();
  type metadata accessor for ShelfPagePresenter(0);
  swift_allocObject();
  swift_retain();
  sub_78208();
  type metadata accessor for CoreDynamicUIPlugin();
  sub_2DAEC();
  id v18 = objc_allocWithZone((Class)type metadata accessor for ShelfPageViewController());
  sub_7EEA8();
  uint64_t v20 = v19;
  sub_2EE28((uint64_t)v17, (void (*)(void))type metadata accessor for ShelfPageDestination);
  return v20;
}

uint64_t sub_2DAEC()
{
  uint64_t v18 = sub_8F260();
  uint64_t v0 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8ECA0();
  swift_allocObject();
  uint64_t v3 = sub_8EC90();
  uint64_t v4 = type metadata accessor for ActivityShelfPageActionImplementation();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 24) = &off_B20C8;
  swift_unknownObjectWeakAssign();
  uint64_t v19 = v5;
  uint64_t v6 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)v3 + 184);
  uint64_t v7 = sub_2EE80(&qword_BC410, (void (*)(uint64_t))type metadata accessor for ActivityShelfPageActionImplementation);
  v6(&v19, v4, v7);
  swift_release();
  uint64_t v8 = type metadata accessor for ReplaceComponentShelfPageActionImplementation();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v9 + 24) = &off_B20B8;
  swift_unknownObjectWeakAssign();
  uint64_t v19 = v9;
  uint64_t v10 = sub_2EE80(&qword_BC418, (void (*)(uint64_t))type metadata accessor for ReplaceComponentShelfPageActionImplementation);
  v6(&v19, v8, v10);
  swift_release();
  uint64_t v11 = type metadata accessor for ReplaceNavigationBarButtonShelfPageActionImplementation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = &off_B20A8;
  swift_unknownObjectWeakAssign();
  uint64_t v19 = v12;
  uint64_t v13 = sub_2EE80(&qword_BC420, (void (*)(uint64_t))type metadata accessor for ReplaceNavigationBarButtonShelfPageActionImplementation);
  v6(&v19, v11, v13);
  swift_release();
  sub_8F560();
  sub_8F770();
  uint64_t v14 = *(void (**)(uint64_t))(*(void *)v3 + 120);
  uint64_t v15 = swift_retain();
  v14(v15);
  uint64_t v19 = v3;
  sub_8F250();
  uint64_t v16 = sub_8F540();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v18);
  return v16;
}

uint64_t sub_2DE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v3 = sub_8F3F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F320();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_5664(&qword_BC400);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WebPageDestination();
  uint64_t v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  long long v17 = (char *)&v22 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v24, v3);
  sub_8A5E0((uint64_t)v6, (uint64_t)v13);
  sub_56F8((uint64_t)v13, 0, 1, v14);
  sub_2ED80();
  sub_2EDD4();
  id v18 = objc_allocWithZone((Class)type metadata accessor for WebPageViewController());
  swift_retain();
  sub_8B228();
  uint64_t v20 = v19;
  sub_2EE28((uint64_t)v17, (void (*)(void))type metadata accessor for WebPageDestination);
  return v20;
}

id sub_2E15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v3 = sub_8F3F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F320();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Log();
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_92840;
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v17, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v18, v3);
  sub_44AB4((uint64_t)v19);
  memcpy(v20, v19, 0xB0uLL);
  sub_2ECD0((uint64_t)v20, (uint64_t)v19);
  id v11 = objc_allocWithZone((Class)type metadata accessor for OnboardingPageViewController());
  uint64_t v12 = v16;
  swift_retain();
  id v13 = sub_4517C((uint64_t)v19, v12);
  sub_2ED2C((uint64_t)v20);
  return v13;
}

uint64_t sub_2E42C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_2E478()
{
  return sub_2E42C(&qword_BA9C0);
}

char *sub_2E4B0(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[16 * a2] <= a3) {
    return (char *)sub_2EF14(a3, result);
  }
  return result;
}

char *sub_2E4D0(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[40 * a2] <= a3) {
    return (char *)sub_2EF14(a3, result);
  }
  return result;
}

char *sub_2E4F8(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[88 * a2] <= a3) {
    return (char *)sub_2EF14(a3, result);
  }
  return result;
}

void sub_2E520(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_2E538(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t))
{
  if (a3 < a1 || (uint64_t v8 = sub_2EF74(), a4(v8), sub_13858(), a1 + *(void *)(v9 + 72) * a2 <= a3))
  {
    uint64_t v11 = sub_2EF74();
    a4(v11);
    uint64_t v12 = sub_2EF60();
    _swift_arrayInitWithTakeFrontToBack(v12);
  }
  else if (a3 != a1)
  {
    uint64_t v10 = sub_2EF60();
    _swift_arrayInitWithTakeBackToFront(v10);
  }
}

char *sub_2E5F0(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[8 * a2] <= a3) {
    return (char *)sub_2EF14(a3, result);
  }
  return result;
}

char *sub_2E610(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_5664(&qword_BC3C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[56 * v8] <= v12) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_2E720(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    sub_2EF34();
    if (v8 != v9)
    {
      sub_2EF54();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_2EF24();
    }
  }
  sub_2EF44();
  if (v5)
  {
    sub_5664(&qword_BC430);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v4;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || &v13[16 * v4] <= v12) {
      memmove(v12, v13, 16 * v4);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_2E804(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_2E828(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    sub_2EF34();
    if (v8 != v9)
    {
      sub_2EF54();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_2EF24();
    }
  }
  sub_2EF44();
  if (v5)
  {
    sub_5664(&qword_BC448);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_2EF80(v11);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (a1)
  {
    if (v10 != a4 || &a4[5 * v4 + 4] <= v10 + 4) {
      memmove(v10 + 4, a4 + 4, 40 * v4);
    }
    a4[2] = 0;
  }
  else
  {
    sub_5664(&qword_BDDA0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_2E928(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    sub_2EF34();
    if (v8 != v9)
    {
      sub_2EF54();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_2EF24();
    }
  }
  sub_2EF44();
  if (v5)
  {
    sub_5664(&qword_BC440);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_2EF80(v11);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || &v13[144 * v4] <= v12) {
      memmove(v12, v13, 144 * v4);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_2EA10(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_2EA34(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t))
{
  if (a3)
  {
    sub_2EF34();
    if (v12 != v13)
    {
      sub_2EF54();
      if (v12)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_2EF24();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_5664(a5);
  uint64_t v16 = sub_2EF74();
  uint64_t v17 = *(void *)(a6(v16) - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (void *)swift_allocObject();
  size_t v21 = j__malloc_size(v20);
  if (!v18)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v21 - v19 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_23;
  }
  v20[2] = v14;
  void v20[3] = 2 * ((uint64_t)(v21 - v19) / v18);
LABEL_18:
  uint64_t v23 = sub_2EF74();
  uint64_t v24 = *(void *)(a6(v23) - 8);
  if (a1)
  {
    unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    sub_2E538(a4 + v25, v14, (unint64_t)v20 + v25, a7);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_2EBE0(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((char *)&dword_18 + (v3 & 0xFFFFFFFFFFFFFF8)) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_8FEB0();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_8FE00();
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_2ECA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2ECD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2ED2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2ED80()
{
  uint64_t v2 = sub_2EF94();
  v3(v2);
  sub_13858();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_2EDD4()
{
  uint64_t v2 = sub_2EF94();
  v3(v2);
  sub_13858();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_2EE28(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_13858();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2EE80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2EEC8()
{
  unint64_t result = qword_BC428;
  if (!qword_BC428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC428);
  }
  return result;
}

void *sub_2EF14@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_2EF60()
{
  return v0;
}

uint64_t sub_2EF74()
{
  return 0;
}

uint64_t sub_2EF80(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_2EF94()
{
  return 0;
}

uint64_t sub_2EFA8()
{
  if (v0[8]) {
    return 0;
  }
  else {
    return *(void *)v0;
  }
}

uint64_t sub_2EFBC()
{
  sub_5664(&qword_BC478);
  uint64_t inited = swift_initStackObject();
  uint64_t v2 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_934E0;
  *(void *)(inited + 32) = 1701080931;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v3 = *v0;
  if (*((unsigned char *)v0 + 8)) {
    uint64_t v3 = 0;
  }
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 80) = 0x7470697263736564;
  *(void *)(inited + 88) = 0xEB000000006E6F69;
  if (v0[3])
  {
    uint64_t v4 = v0[2];
    uint64_t v5 = &type metadata for String;
    uint64_t v6 = v0[3];
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 120) = v5;
  *(void *)(inited + 128) = 0x6E69616D6F64;
  *(void *)(inited + 136) = 0xE600000000000000;
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  *(void *)(inited + 168) = &type metadata for String;
  if (v7)
  {
    uint64_t v9 = v7;
  }
  else
  {
    uint64_t v8 = qword_BC458;
    uint64_t v9 = swift_bridgeObjectRetain();
  }
  v2[18] = v8;
  v2[19] = v9;
  v2[22] = 0x6F666E4972657375;
  v2[23] = 0xE800000000000000;
  uint64_t v10 = v0[6];
  if (v10)
  {
    uint64_t v11 = sub_5664(&qword_BBBD8);
  }
  else
  {
    uint64_t v11 = 0;
    v2[25] = 0;
    v2[26] = 0;
  }
  v2[24] = v10;
  v2[27] = v11;
  v2[28] = 0x65756C6176;
  v2[29] = 0xE500000000000000;
  sub_30058((uint64_t)(v0 + 7), (uint64_t)(v2 + 30));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_5664(&qword_BC780);
  sub_8F950();
  uint64_t v12 = sub_2F198();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2F198()
{
  uint64_t v0 = _swiftEmptyDictionarySingleton;
  unint64_t v36 = _swiftEmptyDictionarySingleton;
  sub_36C10(v37);
  uint64_t v1 = v37[0];
  int64_t v2 = v37[3];
  unint64_t v3 = v37[4];
  uint64_t v25 = v37[1];
  int64_t v26 = (unint64_t)(v37[2] + 64) >> 6;
  long long v38 = &v30;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  unint64_t v6 = v5 | (v2 << 6);
  while (1)
  {
    uint64_t v11 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_30058(*(void *)(v1 + 56) + 32 * v6, (uint64_t)v35);
    *(void *)&long long v34 = v13;
    *((void *)&v34 + 1) = v12;
    long long v32 = v34;
    v33[0] = v35[0];
    v33[1] = v35[1];
    sub_30058((uint64_t)v33, (uint64_t)&v27);
    if (!v28)
    {
      swift_bridgeObjectRetain();
      sub_300C0((uint64_t)&v32, &qword_BC480);
      uint64_t v15 = &v27;
      goto LABEL_34;
    }
    sub_22200(&v27, v31);
    long long v14 = v32;
    v29[2] = v32;
    sub_2F998((uint64_t)v33, (uint64_t)v38);
    sub_22200(v31, v29);
    if (v0[3] <= v0[2])
    {
      swift_bridgeObjectRetain();
      sub_3B2F4();
      uint64_t v0 = v36;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_8FFE0();
    sub_8FA00();
    uint64_t result = sub_90000();
    uint64_t v16 = v0 + 8;
    uint64_t v17 = -1 << *((unsigned char *)v0 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~v0[(v18 >> 6) + 8]) == 0) {
      break;
    }
    unint64_t v20 = __clz(__rbit64((-1 << v18) & ~v0[(v18 >> 6) + 8])) | v18 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)((char *)v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_OWORD *)(v0[6] + 16 * v20) = v14;
    sub_22200(v29, (_OWORD *)(v0[7] + 32 * v20));
    ++v0[2];
    uint64_t v15 = (long long *)v38;
LABEL_34:
    uint64_t result = sub_300C0((uint64_t)v15, &qword_BC780);
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_38;
    }
    if (v7 >= v26) {
      goto LABEL_36;
    }
    unint64_t v8 = *(void *)(v25 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v26) {
        goto LABEL_36;
      }
      unint64_t v8 = *(void *)(v25 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v26) {
          goto LABEL_36;
        }
        unint64_t v8 = *(void *)(v25 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v2 + 4;
          if (v2 + 4 >= v26) {
            goto LABEL_36;
          }
          unint64_t v8 = *(void *)(v25 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v2 + 5;
            if (v2 + 5 >= v26) {
              goto LABEL_36;
            }
            unint64_t v8 = *(void *)(v25 + 8 * v9);
            if (!v8)
            {
              int64_t v10 = v2 + 6;
              while (v10 < v26)
              {
                unint64_t v8 = *(void *)(v25 + 8 * v10++);
                if (v8)
                {
                  int64_t v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_36:
              sub_221F8();
              return (uint64_t)v0;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v3 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    int64_t v2 = v9;
  }
  char v21 = 0;
  unint64_t v22 = (unint64_t)(63 - v17) >> 6;
  while (++v19 != v22 || (v21 & 1) == 0)
  {
    BOOL v23 = v19 == v22;
    if (v19 == v22) {
      unint64_t v19 = 0;
    }
    v21 |= v23;
    uint64_t v24 = v16[v19];
    if (v24 != -1)
    {
      unint64_t v20 = __clz(__rbit64(~v24)) + (v19 << 6);
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2F51C()
{
  uint64_t v0 = qword_BC458;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2F55C(uint64_t a1)
{
  unint64_t v2 = sub_3000C();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_2F598(uint64_t a1)
{
  unint64_t v2 = sub_3000C();

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_2F5D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8F320();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_30120();
  uint64_t v7 = sub_3D0F8();
  if (v2)
  {
    swift_errorRelease();
    uint64_t v7 = 0;
  }
  *(void *)a2 = v7;
  *(unsigned char *)(a2 + 8) = v2 != 0;
  *(void *)(a2 + 16) = sub_3CEE4();
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = sub_3CEE4();
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = sub_14174(0x6F666E4972657375, 0xE800000000000000, (uint64_t)&type metadata for DecodedJSError);
  sub_30120();
  sub_8F330();
  if (sub_8F2F0()) {
    goto LABEL_7;
  }
  sub_8F310();
  if (!v18)
  {
    sub_300C0((uint64_t)&v17, &qword_BC780);
LABEL_7:
    uint64_t v12 = sub_8F8E0();
    sub_2F948();
    swift_allocError();
    *uint64_t v13 = 1701080931;
    v13[1] = 0xE400000000000000;
    v13[2] = &type metadata for DecodedJSError;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for JSONError.missingProperty(_:), v12);
    swift_willThrow();
    long long v14 = *(void (**)(void))(v6 + 8);
    sub_30110();
    v14();
    swift_errorRelease();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v15 + 8))(a1);
    sub_30110();
    v14();
    memset(v19, 0, sizeof(v19));
    return sub_2F998((uint64_t)v19, a2 + 56);
  }
  int64_t v10 = *(void (**)(void))(v6 + 8);
  sub_30110();
  v10();
  sub_22200(&v17, v19);
  sub_8F3F0();
  sub_B6C4();
  (*(void (**)(uint64_t))(v11 + 8))(a1);
  sub_30110();
  v10();
  return sub_2F998((uint64_t)v19, a2 + 56);
}

uint64_t sub_2F930@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2F5D4(a1, a2);
}

unint64_t sub_2F948()
{
  unint64_t result = qword_BAAD8;
  if (!qword_BAAD8)
  {
    sub_8F8E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BAAD8);
  }
  return result;
}

uint64_t sub_2F998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BC780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DecodedJSError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    return sub_616C(a1 + 56);
  }
  return result;
}

uint64_t initializeWithCopy for DecodedJSError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 80) = v6;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v6 - 8))(a1 + 56, v5, v6);
  }
  else
  {
    long long v7 = v5[1];
    *(_OWORD *)(a1 + 56) = *v5;
    *(_OWORD *)(a1 + 72) = v7;
  }
  return a1;
}

uint64_t assignWithCopy for DecodedJSError(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[10];
  if (!*(void *)(a1 + 80))
  {
    if (v5)
    {
      *(void *)(a1 + 80) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, (uint64_t)(a2 + 7));
      return a1;
    }
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = v6;
    return a1;
  }
  if (!v5)
  {
    sub_616C(a1 + 56);
    goto LABEL_7;
  }
  sub_2FC30((uint64_t *)(a1 + 56), a2 + 7);
  return a1;
}

uint64_t *sub_2FC30(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for DecodedJSError(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for DecodedJSError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80)) {
    sub_616C(a1 + 56);
  }
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for DecodedJSError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 88))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DecodedJSError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DecodedJSError()
{
  return &type metadata for DecodedJSError;
}

unint64_t sub_2FFC0()
{
  unint64_t result = qword_BC468;
  if (!qword_BC468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC468);
  }
  return result;
}

unint64_t sub_3000C()
{
  unint64_t result = qword_BC470;
  if (!qword_BC470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC470);
  }
  return result;
}

uint64_t sub_30058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BC780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_300C0(uint64_t a1, uint64_t *a2)
{
  sub_5664(a2);
  sub_B6C4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_30120()
{
  return 1701080931;
}

uint64_t sub_30134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_14174(0x736E6F6974706FLL, 0xE700000000000000, (uint64_t)&type metadata for DelegatePageDestination);
  sub_8F3F0();
  sub_B6C4();
  (*(void (**)(uint64_t))(v5 + 8))(a2);
  sub_8F320();
  sub_B6C4();
  (*(void (**)(uint64_t))(v6 + 8))(a1);
  return v4;
}

uint64_t sub_301EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_30134(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatePageDestination()
{
  return &type metadata for DelegatePageDestination;
}

id sub_30228()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_color)) {
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView), "setBackgroundColor:");
  }
  return result;
}

void sub_30254(void *a1)
{
  int v2 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_color);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_color) = a1;
  id v3 = a1;

  sub_30228();
}

void sub_302AC()
{
  *(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView)
           + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_style) = *(unsigned char *)(v0
                                                                                        + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_style);
  sub_31E24();
}

id sub_302F8()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView;
  id v2 = objc_allocWithZone((Class)type metadata accessor for DynamicButtonView());
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_color] = 0;
  v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_style] = 0;

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for DynamicButton();
  id v4 = objc_msgSendSuper2(&v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_309B8();

  return v4;
}

id sub_303D4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for DynamicButtonView());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_color] = 0;
  v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_style] = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for DynamicButton();
  id v6 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
    sub_309B8();
  }
  return v7;
}

id sub_304F4()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView) hasContent];
}

id sub_30554()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicButton();
  return objc_msgSendSuper2(&v2, "isHighlighted");
}

id sub_305DC(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DynamicButton();
  objc_msgSendSuper2(&v4, "setHighlighted:", a1 & 1);
  return sub_89518((char)[v1 isHighlighted], 1);
}

id sub_30638()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DynamicButton();
  objc_msgSendSuper2(&v3, "layoutSubviews");
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView];
  [v0 bounds];
  return objc_msgSend(v1, "setFrame:");
}

id sub_306E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView), "measurementsWithFitting:in:", a1);
}

uint64_t sub_30804()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView) accessibilityLabel];
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_8F9D0();

  return v3;
}

id sub_3091C()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView) intrinsicContentSize];
}

id sub_30934()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView), "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

id sub_309B8()
{
  id v1 = objc_msgSend(self, "ams_clear");
  [v0 setBackgroundColor:v1];

  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView]];
  [v0 setIsAccessibilityElement:1];
  UIAccessibilityTraits v2 = UIAccessibilityTraitButton;

  return [v0 setAccessibilityTraits:v2];
}

void sub_30A68()
{
}

id sub_30AA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DynamicButton()
{
  return self;
}

uint64_t sub_30B4C(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_AE528;
  v7._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

Swift::Int sub_30BA0()
{
  return sub_55924();
}

uint64_t sub_30BA8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_30B4C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

id sub_30BD8()
{
  uint64_t v17 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel;
  sub_8EA50();
  id v1 = self;
  objc_super v2 = v0;
  id v3 = objc_msgSend(v1, "ams_primaryText");
  uint64_t v4 = sub_8ED30();
  uint64_t v20 = v4;
  char v21 = &protocol witness table for FontSource;
  unsigned int v5 = sub_8374(v19);
  if (qword_BA9C8 != -1) {
    swift_once();
  }
  id v6 = (void *)qword_BC4C8;
  *unsigned int v5 = qword_BC4C8;
  Swift::String v7 = *(void (**)(void))(*(void *)(v4 - 8) + 104);
  sub_32954();
  v7();
  id v8 = v6;
  *(void *)&v0[v17] = sub_32968();
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel;
  id v10 = objc_msgSend(v1, "ams_primaryText");
  uint64_t v20 = v4;
  char v21 = &protocol witness table for FontSource;
  uint64_t v11 = sub_8374(v19);
  if (qword_BA9D0 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_BC4D0;
  uint64_t *v11 = qword_BC4D0;
  sub_32954();
  v7();
  id v13 = v12;
  *(void *)&v2[v9] = sub_329C4();
  v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled] = 1;
  v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_style] = 0;
  sub_32920(&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics]);
  *long long v14 = xmmword_93640;
  v14[1] = xmmword_93640;

  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for DynamicButtonView();
  id v15 = objc_msgSendSuper2(&v18, "init");
  sub_31D44();

  return v15;
}

id sub_30E40(double a1, double a2, double a3, double a4)
{
  uint64_t v25 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel;
  sub_8EA50();
  uint64_t v9 = self;
  id v10 = v4;
  id v11 = objc_msgSend(v9, "ams_primaryText");
  uint64_t v12 = sub_8ED30();
  uint64_t v28 = v12;
  long long v29 = &protocol witness table for FontSource;
  id v13 = sub_8374(v27);
  if (qword_BA9C8 != -1) {
    swift_once();
  }
  long long v14 = (void *)qword_BC4C8;
  *id v13 = qword_BC4C8;
  id v15 = *(void (**)(void))(*(void *)(v12 - 8) + 104);
  sub_32954();
  v15();
  id v16 = v14;
  *(void *)&v4[v25] = sub_32968();
  uint64_t v17 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel;
  id v18 = objc_msgSend(v9, "ams_primaryText");
  uint64_t v28 = v12;
  long long v29 = &protocol witness table for FontSource;
  unint64_t v19 = sub_8374(v27);
  if (qword_BA9D0 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_BC4D0;
  *unint64_t v19 = qword_BC4D0;
  sub_32954();
  v15();
  id v21 = v20;
  *(void *)&v10[v17] = sub_329C4();
  v10[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled] = 1;
  v10[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_style] = 0;
  sub_32920(&v10[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics]);
  *unint64_t v22 = xmmword_93640;
  v22[1] = xmmword_93640;

  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for DynamicButtonView();
  id v23 = objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
  sub_31D44();

  return v23;
}

id sub_310D8(void *a1)
{
  uint64_t v20 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel;
  sub_8EA50();
  objc_super v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(v2, "ams_primaryText");
  uint64_t v5 = sub_8ED30();
  uint64_t v24 = v5;
  uint64_t v25 = &protocol witness table for FontSource;
  id v6 = sub_8374(v23);
  if (qword_BA9C8 != -1) {
    swift_once();
  }
  Swift::String v7 = (void *)qword_BC4C8;
  *id v6 = qword_BC4C8;
  id v8 = *(void (**)(void))(*(void *)(v5 - 8) + 104);
  sub_32988();
  v8();
  id v9 = v7;
  *(void *)&v1[v20] = sub_32968();
  uint64_t v10 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel;
  id v11 = objc_msgSend(v2, "ams_primaryText");
  uint64_t v24 = v5;
  uint64_t v25 = &protocol witness table for FontSource;
  uint64_t v12 = sub_8374(v23);
  if (qword_BA9D0 != -1) {
    swift_once();
  }
  id v13 = (void *)qword_BC4D0;
  *uint64_t v12 = qword_BC4D0;
  sub_32988();
  v8();
  id v14 = v13;
  *(void *)&v3[v10] = sub_8EA40();
  v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled] = 1;
  v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_style] = 0;
  sub_32920(&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics]);
  *id v15 = xmmword_93640;
  v15[1] = xmmword_93640;

  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for DynamicButtonView();
  id v16 = objc_msgSendSuper2(&v22, "initWithCoder:", a1);
  id v17 = v16;
  if (v16)
  {
    id v18 = v16;
    sub_31D44();
  }
  return v17;
}

id sub_31368(uint64_t a1, uint64_t a2)
{
  return sub_31380(a1, a2, &OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
}

id sub_31374(uint64_t a1, uint64_t a2)
{
  return sub_31380(a1, a2, &OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel);
}

id sub_31380(uint64_t a1, uint64_t a2, void *a3)
{
  (*(void (**)(void))&stru_158.sectname[swift_isaMask & **(void **)&v3[*a3]])();

  return [v3 setNeedsLayout];
}

id sub_31400()
{
  return sub_31418(&OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
}

id sub_3140C()
{
  return sub_31418(&OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel);
}

id sub_31418(void *a1)
{
  (*(void (**)(void))&stru_158.segname[(swift_isaMask & **(void **)&v1[*a1]) - 8])();

  return [v1 setNeedsLayout];
}

id sub_314CC()
{
  if ([*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel) hasContent])return &def_41A10 + 1; {
  else
  }
    return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel) hasContent];
}

uint64_t sub_31520()
{
  id v1 = v0;
  uint64_t v2 = sub_8ED50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (objc_class *)type metadata accessor for DynamicButtonView();
  v17.receiver = v0;
  v17.super_class = v6;
  objc_msgSendSuper2(&v17, "layoutSubviews");
  sub_32464((uint64_t)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics], (uint64_t)v16);
  Swift::String v7 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel];
  uint64_t v8 = sub_8EA50();
  v16[32] = v8;
  unint64_t v9 = sub_324C0();
  v16[29] = v7;
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel];
  v16[37] = v8;
  v16[38] = v9;
  v16[33] = v9;
  v16[34] = v10;
  id v11 = v7;
  id v12 = v10;
  [v1 bounds];
  sub_33320((uint64_t)v5, v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_32728((uint64_t)v16);
}

double sub_316D8(double a1)
{
  sub_32464(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics, (uint64_t)v11);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
  uint64_t v4 = sub_8EA50();
  v11[32] = v4;
  unint64_t v5 = sub_324C0();
  v11[29] = v3;
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel);
  v11[37] = v4;
  v11[38] = v5;
  v11[33] = v5;
  v11[34] = v6;
  id v7 = v3;
  id v8 = v6;
  double v9 = sub_32510(a1, v1, v11);
  sub_32728((uint64_t)v11);
  return v9;
}

uint64_t sub_318A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(void))((char *)&stru_B8.size
                        + (swift_isaMask & **(void **)(v0
                                                       + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel)));
  sub_329E4();
  v2();
  uint64_t v3 = v34;
  if (v34)
  {
    uint64_t v4 = v35;
    sub_820C(v33, v34);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    uint64_t v7 = v6;
    sub_616C((uint64_t)v33);
    if (v7) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_32818((uint64_t)v33);
  }
  sub_329E4();
  v2();
  uint64_t v8 = v34;
  if (!v34)
  {
    sub_32818((uint64_t)v33);
    swift_bridgeObjectRelease();
    id v12 = (char *)&_swiftEmptyArrayStorage;
    goto LABEL_11;
  }
  uint64_t v9 = v35;
  sub_820C(v33, v34);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v8, v9);
  uint64_t v7 = v10;
  sub_616C((uint64_t)v33);
  swift_bridgeObjectRelease();
LABEL_7:
  sub_2E720(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
  id v12 = v11;
  unint64_t v14 = *((void *)v11 + 2);
  unint64_t v13 = *((void *)v11 + 3);
  if (v14 >= v13 >> 1)
  {
    sub_2E720(v13 > 1, v14 + 1, 1, v11);
    id v12 = v30;
  }
  *((void *)v12 + 2) = v14 + 1;
  id v15 = &v12[16 * v14];
  *((void *)v15 + 4) = v5;
  *((void *)v15 + 5) = v7;
LABEL_11:
  id v16 = *(void (**)(void))((char *)&stru_B8.size
                         + (swift_isaMask & **(void **)(v1
                                                        + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel)));
  sub_329F8();
  v16();
  uint64_t v17 = v34;
  if (v34)
  {
    uint64_t v18 = v35;
    sub_820C(v33, v34);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    uint64_t v21 = v20;
    sub_616C((uint64_t)v33);
    if (v21) {
      goto LABEL_17;
    }
  }
  else
  {
    sub_32818((uint64_t)v33);
  }
  sub_329F8();
  v16();
  uint64_t v22 = v34;
  if (!v34)
  {
    sub_32818((uint64_t)v33);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v23 = v35;
  sub_820C(v33, v34);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64))(v22, v23);
  uint64_t v21 = v24;
  sub_616C((uint64_t)v33);
  swift_bridgeObjectRelease();
LABEL_17:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_2E720(0, *((void *)v12 + 2) + 1, 1, v12);
    id v12 = v31;
  }
  unint64_t v26 = *((void *)v12 + 2);
  unint64_t v25 = *((void *)v12 + 3);
  if (v26 >= v25 >> 1)
  {
    sub_2E720(v25 > 1, v26 + 1, 1, v12);
    id v12 = v32;
  }
  *((void *)v12 + 2) = v26 + 1;
  long long v27 = &v12[16 * v26];
  *((void *)v27 + 4) = v19;
  *((void *)v27 + 5) = v21;
LABEL_23:
  v33[0] = v12;
  sub_5664(&qword_BC540);
  sub_32878();
  uint64_t v28 = sub_8F980();
  swift_bridgeObjectRelease();
  return v28;
}

void sub_31CC4()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DynamicButtonView();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  sub_31E24();
}

id sub_31D44()
{
  id v1 = objc_msgSend(self, "ams_clear");
  [v0 setBackgroundColor:v1];

  sub_89188(14.0);
  [v0 setUserInteractionEnabled:0];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel]];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel];

  return [v0 addSubview:v2];
}

id sub_31DF8()
{
  double v1 = 0.5;
  if (v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled]) {
    double v1 = 1.0;
  }
  return [v0 setAlpha:v1];
}

void sub_31E24()
{
  double v1 = v0;
  char v2 = *((unsigned char *)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_style);
  id v3 = [v0 tintColor];
  uint64_t v4 = v3;
  if (v2)
  {
    if (v3)
    {
      sub_3299C();
      (*(void (**)(void *))(v5 + 176))(v4);
      if ([v0 tintColor])
      {
        sub_3299C();
        (*(void (**)(void))(v6 + 176))();
        id v7 = objc_msgSend(self, "ams_clear");
LABEL_19:
        id v26 = v7;
        [v1 setBackgroundColor:v26];
        id v22 = v26;
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  if (!v3)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return;
  }
  unsigned int v8 = objc_msgSend(v3, "ams_isLight");

  uint64_t v9 = self;
  if (v8) {
    uint64_t v10 = &selRef_blackColor;
  }
  else {
    uint64_t v10 = &selRef_whiteColor;
  }
  id v11 = [v9 *v10];
  sub_329B0();
  (*(void (**)(void))(v12 + 176))();
  id v13 = [v0 tintColor];
  if (!v13) {
    goto LABEL_27;
  }
  unint64_t v14 = v13;
  unsigned int v15 = objc_msgSend(v13, "ams_isLight");

  id v16 = self;
  if (v15) {
    uint64_t v17 = &selRef_blackColor;
  }
  else {
    uint64_t v17 = &selRef_whiteColor;
  }
  id v18 = [v16 *v17];
  sub_329B0();
  (*(void (**)(void))(v19 + 176))();
  id v20 = [v0 backgroundColor];
  uint64_t v21 = self;
  id v22 = objc_msgSend(v21, "ams_clear");
  if (v20)
  {
    if (!v22)
    {
      id v22 = v20;
      goto LABEL_20;
    }
    id v25 = v22;
    sub_327D8();
    id v23 = v20;
    char v24 = sub_8FCA0();

    if ((v24 & 1) == 0) {
      return;
    }
    goto LABEL_18;
  }
  if (!v22)
  {
LABEL_18:
    id v7 = objc_msgSend(v21, "ams_appTint");
    goto LABEL_19;
  }
LABEL_20:
}

double sub_32128(double a1, double a2, float a3)
{
  if (a3 == 1000.0) {
    double v6 = a1;
  }
  else {
    double v6 = 1.79769313e308;
  }
  sub_32464(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics, (uint64_t)v16);
  id v7 = *(void **)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
  uint64_t v8 = sub_8EA50();
  v16[32] = v8;
  unint64_t v9 = sub_324C0();
  v16[29] = v7;
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel);
  v16[37] = v8;
  v16[38] = v9;
  v16[33] = v9;
  v16[34] = v10;
  id v11 = v7;
  id v12 = v10;
  double v13 = sub_32510(v6, v3, v16);
  if (a3 == 1000.0) {
    double v14 = a1;
  }
  else {
    double v14 = v13;
  }
  sub_32728((uint64_t)v16);
  return v14;
}

id sub_3222C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicButtonView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DynamicButtonView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DynamicButtonView.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x323ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicButtonView.Style()
{
  return &type metadata for DynamicButtonView.Style;
}

unint64_t sub_323E8()
{
  unint64_t result = qword_BC528;
  if (!qword_BC528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC528);
  }
  return result;
}

UIFontTextStyle sub_32434()
{
  qword_BC4C8 = (uint64_t)UIFontTextStyleCaption1;
  return UIFontTextStyleCaption1;
}

UIFontTextStyle sub_3244C()
{
  qword_BC4D0 = (uint64_t)UIFontTextStyleHeadline;
  return UIFontTextStyleHeadline;
}

uint64_t sub_32464(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_324C0()
{
  unint64_t result = qword_BC530;
  if (!qword_BC530)
  {
    sub_8EA50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC530);
  }
  return result;
}

double sub_32510(double a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_8EEF0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_8FC80();
  sub_820C(a3 + 29, a3[32]);
  char v9 = sub_8ED60();
  sub_3277C((uint64_t)a3, (uint64_t)v15);
  if ((v9 & 1) == 0)
  {
    sub_32728((uint64_t)v15);
    goto LABEL_5;
  }
  sub_820C(v16, v16[3]);
  char v10 = sub_8ED90();
  sub_32728((uint64_t)v15);
  if (v10)
  {
LABEL_5:
    id v11 = a3 + 9;
    uint64_t v12 = a3[12];
    goto LABEL_6;
  }
  id v11 = a3 + 14;
  uint64_t v12 = a3[17];
LABEL_6:
  sub_820C(v11, v12);
  sub_8EDA0();
  sub_33670((uint64_t)v8);
  sub_8EE50();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return a1;
}

uint64_t sub_32728(uint64_t a1)
{
  return a1;
}

uint64_t sub_3277C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_327D8()
{
  unint64_t result = qword_BC538;
  if (!qword_BC538)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BC538);
  }
  return result;
}

uint64_t sub_32818(uint64_t a1)
{
  uint64_t v2 = sub_5664((uint64_t *)&unk_BAAE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_32878()
{
  unint64_t result = qword_BC548;
  if (!qword_BC548)
  {
    sub_2517C(&qword_BC540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC548);
  }
  return result;
}

uint64_t sub_328CC(uint64_t a1)
{
  return a1;
}

void sub_32920(void *a1@<X8>)
{
  a1[7] = v1;
  a1[8] = v2;
  a1[4] = 0;
  a1[12] = v1;
  a1[13] = v2;
  a1[9] = 0x4049000000000000;
  a1[17] = v1;
  a1[18] = v2;
  a1[14] = 0x4049000000000000;
  a1[22] = v1;
  a1[23] = v2;
  a1[19] = 0x4000000000000000;
  a1[27] = v1;
  a1[28] = v2;
  a1[24] = 0;
}

uint64_t sub_32968()
{
  return sub_8EA40();
}

uint64_t sub_329C4()
{
  return sub_8EA40();
}

uint64_t destroy for DynamicButtonViewLayout(uint64_t a1)
{
  sub_616C(a1 + 32);
  sub_616C(a1 + 72);
  sub_616C(a1 + 112);
  sub_616C(a1 + 152);
  sub_616C(a1 + 192);
  sub_616C(a1 + 232);

  return sub_616C(a1 + 272);
}

uint64_t initializeWithCopy for DynamicButtonViewLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 72, a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 112, a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 152, a2 + 152);
  long long v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 192, a2 + 192);
  long long v10 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 256) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 232, a2 + 232);
  uint64_t v11 = *(void *)(a2 + 296);
  uint64_t v12 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = v11;
  *(void *)(a1 + 304) = v12;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 272, a2 + 272);
  return a1;
}

uint64_t *assignWithCopy for DynamicButtonViewLayout(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_64C8(a1 + 4, a2 + 4);
  sub_64C8(a1 + 9, a2 + 9);
  sub_64C8(a1 + 14, a2 + 14);
  sub_64C8(a1 + 19, a2 + 19);
  sub_64C8(a1 + 24, a2 + 24);
  sub_64C8(a1 + 29, a2 + 29);
  sub_64C8(a1 + 34, a2 + 34);
  return a1;
}

void *initializeWithTake for DynamicButtonViewLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for DynamicButtonViewLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  sub_616C(a1 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_616C(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_616C(a1 + 112);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  sub_616C(a1 + 152);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  sub_616C(a1 + 192);
  long long v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  sub_616C(a1 + 232);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  sub_616C(a1 + 272);
  long long v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicButtonViewLayout(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 312))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicButtonViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 312) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 312) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicButtonViewLayout()
{
  return &type metadata for DynamicButtonViewLayout;
}

uint64_t destroy for DynamicButtonViewLayout.Metrics(uint64_t a1)
{
  sub_616C(a1 + 32);
  sub_616C(a1 + 72);
  sub_616C(a1 + 112);
  sub_616C(a1 + 152);

  return sub_616C(a1 + 192);
}

_OWORD *initializeWithCopy for DynamicButtonViewLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  long long v6 = a2[6];
  a1[6] = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)a1 + 72, (uint64_t)a2 + 72);
  long long v7 = *(_OWORD *)((char *)a2 + 136);
  *(_OWORD *)((char *)a1 + 136) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 7), (uint64_t)(a2 + 7));
  long long v8 = a2[11];
  a1[11] = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)a1 + 152, (uint64_t)a2 + 152);
  long long v9 = *(_OWORD *)((char *)a2 + 216);
  *(_OWORD *)((char *)a1 + 216) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12));
  return a1;
}

uint64_t *assignWithCopy for DynamicButtonViewLayout.Metrics(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_64C8(a1 + 4, a2 + 4);
  sub_64C8(a1 + 9, a2 + 9);
  sub_64C8(a1 + 14, a2 + 14);
  sub_64C8(a1 + 19, a2 + 19);
  sub_64C8(a1 + 24, a2 + 24);
  return a1;
}

void *initializeWithTake for DynamicButtonViewLayout.Metrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE8uLL);
}

uint64_t assignWithTake for DynamicButtonViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  sub_616C(a1 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_616C(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_616C(a1 + 112);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  sub_616C(a1 + 152);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  sub_616C(a1 + 192);
  long long v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicButtonViewLayout.Metrics(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 232))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicButtonViewLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 232) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicButtonViewLayout.Metrics()
{
  return &type metadata for DynamicButtonViewLayout.Metrics;
}

uint64_t sub_33320@<X0>(uint64_t a1@<X8>, double a2@<D1>)
{
  long long v4 = v2;
  v35[1] = a1;
  uint64_t v6 = sub_8EF60();
  __chkstk_darwin(v6 - 8);
  sub_22620();
  v35[0] = v7;
  uint64_t v8 = sub_8EEF0();
  sub_7084();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  double v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_8ED50();
  sub_7084();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_34000();
  sub_8FC70();
  sub_33670((uint64_t)v13);
  sub_8EE60();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v3, v14);
  sub_820C(v4 + 34, v4[37]);
  sub_8ED80();
  double v19 = v18;
  id v20 = v2 + 29;
  sub_33FDC(v2 + 29);
  char v21 = sub_8ED60();
  sub_3277C((uint64_t)v4, (uint64_t)v36);
  if (v21)
  {
    sub_33FDC(v37);
    char v22 = sub_8ED90();
    sub_32728((uint64_t)v36);
    double v23 = 0.0;
    double v24 = 0.0;
    if ((v22 & 1) == 0)
    {
      sub_33FDC(v4 + 29);
      sub_8ED80();
      double v24 = v25;
      sub_820C(v4 + 19, v4[22]);
      sub_8EDA0();
      double v23 = v26;
    }
  }
  else
  {
    sub_32728((uint64_t)v36);
    double v23 = 0.0;
    double v24 = 0.0;
  }
  v38.origin.x = sub_34018();
  CGFloat v27 = (CGRectGetHeight(v38) - v19 - v24 - v23) * 0.5 + a2;
  sub_820C(v4 + 34, v4[37]);
  sub_8ED70();
  *(CGFloat *)(v28 + 8) = v27;
  uint64_t v29 = sub_3402C();
  v30(v29);
  sub_820C(v20, v4[32]);
  sub_8ED70();
  *(double *)(v31 + 8) = v23 + v19 + v27;
  uint64_t v32 = sub_3402C();
  v33(v32);
  sub_8EF50();
  sub_34018();
  return sub_8ED40();
}

uint64_t sub_33670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v52 = a1;
  uint64_t v49 = sub_8EEB0();
  sub_7084();
  uint64_t v55 = v4;
  __chkstk_darwin(v5);
  sub_22620();
  uint64_t v54 = v6;
  uint64_t v7 = sub_8EE40();
  sub_7084();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_8EEA0();
  uint64_t v51 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_34000();
  uint64_t v53 = v2;
  sub_5664(&qword_BC558);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_91D00;
  sub_8EE70();
  sub_8EE80();
  sub_8EE90();
  v59[0] = v14;
  sub_33CC0();
  sub_5664(&qword_BC568);
  sub_33D10();
  uint64_t v50 = v13;
  sub_8FD40();
  sub_5664(&qword_BC578);
  uint64_t v15 = *(void *)(sub_8EEE0() - 8);
  uint64_t v47 = *(void *)(v15 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v48 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_91D10;
  unint64_t v18 = v17 + v16;
  uint64_t v19 = v3[37];
  uint64_t v20 = v3[38];
  unint64_t v41 = v3;
  char v21 = sub_820C(v3 + 34, v19);
  uint64_t v60 = v19;
  uint64_t v61 = *(void *)(v20 + 8);
  char v22 = sub_8374(v59);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v22, v21, v19);
  uint64_t v58 = 0;
  long long v56 = 0u;
  long long v57 = 0u;
  unsigned int v46 = enum case for VerticalFlowLayout.VerticalPlacement.top(_:);
  uint64_t v23 = v9;
  long long v45 = *(void (**)(char *))(v9 + 104);
  uint64_t v24 = v7;
  uint64_t v40 = v7;
  v45(v12);
  unsigned int v44 = enum case for VerticalFlowLayout.HorizontalPlacement.center(_:);
  uint64_t v25 = v55;
  Swift::String v43 = *(void (**)(uint64_t))(v55 + 104);
  uint64_t v26 = v54;
  uint64_t v27 = v49;
  v43(v54);
  sub_8EED0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  uint64_t v55 = v25 + 8;
  uint64_t v29 = v26;
  uint64_t v30 = v27;
  v28(v29, v27);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v42 = v23 + 8;
  v31(v12, v24);
  sub_33D64((uint64_t)&v56);
  sub_616C((uint64_t)v59);
  v47 += v18;
  uint64_t v33 = v41[32];
  uint64_t v32 = v41[33];
  uint64_t v34 = sub_820C(v41 + 29, v33);
  uint64_t v60 = v33;
  uint64_t v61 = *(void *)(v32 + 8);
  uint64_t v35 = sub_8374(v59);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v35, v34, v33);
  uint64_t v58 = 0;
  long long v56 = 0u;
  long long v57 = 0u;
  uint64_t v36 = v40;
  ((void (*)(char *, void, uint64_t))v45)(v12, v46, v40);
  uint64_t v37 = v54;
  ((void (*)(uint64_t, void, uint64_t))v43)(v54, v44, v30);
  uint64_t v38 = v53;
  sub_8EED0();
  v28(v37, v30);
  v31(v12, v36);
  sub_33D64((uint64_t)&v56);
  sub_616C((uint64_t)v59);
  sub_8EEC0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v38, v50);
}

void sub_33BE0()
{
}

uint64_t sub_33C08@<X0>(uint64_t a1@<X8>)
{
  return sub_32464(v1, a1);
}

double sub_33C18(uint64_t a1, double a2)
{
  swift_getObjectType();

  return sub_33DC4(a2, a1, v2);
}

unint64_t sub_33C74()
{
  unint64_t result = qword_BC550;
  if (!qword_BC550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC550);
  }
  return result;
}

unint64_t sub_33CC0()
{
  unint64_t result = qword_BC560;
  if (!qword_BC560)
  {
    sub_8EEA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC560);
  }
  return result;
}

unint64_t sub_33D10()
{
  unint64_t result = qword_BC570;
  if (!qword_BC570)
  {
    sub_2517C(&qword_BC568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC570);
  }
  return result;
}

uint64_t sub_33D64(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BC580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_33DC4(double a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_8EEF0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_8FC80();
  sub_820C(a3 + 29, a3[32]);
  char v9 = sub_8ED60();
  sub_3277C((uint64_t)a3, (uint64_t)v15);
  if ((v9 & 1) == 0)
  {
    sub_32728((uint64_t)v15);
    goto LABEL_5;
  }
  sub_820C(v16, v16[3]);
  char v10 = sub_8ED90();
  sub_32728((uint64_t)v15);
  if (v10)
  {
LABEL_5:
    uint64_t v11 = a3 + 9;
    uint64_t v12 = a3[12];
    goto LABEL_6;
  }
  uint64_t v11 = a3 + 14;
  uint64_t v12 = a3[17];
LABEL_6:
  sub_820C(v11, v12);
  sub_8EDA0();
  sub_33670((uint64_t)v8);
  sub_8EE50();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return a1;
}

uint64_t sub_33FDC(void *a1)
{
  sub_820C(a1, v1);
  return v1;
}

double sub_34018()
{
  return v0;
}

uint64_t sub_3402C()
{
  return v0 + 16;
}

unint64_t DynamicViewControllerPresentationError.failureReason.getter(char a1)
{
  if (a1) {
    return 0xD000000000000019;
  }
  else {
    return 0xD000000000000011;
  }
}

BOOL static DynamicViewControllerPresentationError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void DynamicViewControllerPresentationError.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int DynamicViewControllerPresentationError.hashValue.getter(char a1)
{
  return sub_90000();
}

BOOL sub_340FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static DynamicViewControllerPresentationError.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_34108()
{
  return DynamicViewControllerPresentationError.hashValue.getter(*v0);
}

void sub_34110(uint64_t a1)
{
  DynamicViewControllerPresentationError.hash(into:)(a1, *v1);
}

unint64_t sub_3411C()
{
  unint64_t result = qword_BC588;
  if (!qword_BC588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC588);
  }
  return result;
}

unint64_t sub_3416C()
{
  unint64_t result = qword_BC590;
  if (!qword_BC590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC590);
  }
  return result;
}

unint64_t sub_341BC()
{
  return DynamicViewControllerPresentationError.failureReason.getter(*v0);
}

unsigned char *storeEnumTagSinglePayload for DynamicViewControllerPresentationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x34298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicViewControllerPresentationError()
{
  return &type metadata for DynamicViewControllerPresentationError;
}

void *sub_342D0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    sub_8FE30();
    uint64_t v6 = a1 + 32;
    do
    {
      a2(v6);
      sub_8FE10();
      sub_8FE40();
      sub_8FE50();
      sub_8FE20();
      v6 += 56;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_3439C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenuInteraction] = 0;
  *(void *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_longPressGestureRecognizer] = 0;
  *(void *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenu] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = (objc_class *)type metadata accessor for EditMenu();
  v22.receiver = v3;
  v22.super_class = v6;
  id v7 = objc_msgSendSuper2(&v22, "init");
  swift_unknownObjectWeakAssign();
  sub_F040(0, &qword_BC648);
  uint64_t v8 = (char *)v7;
  char v9 = sub_342D0(a1, (void (*)(uint64_t))sub_34C78);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v25.value._countAndFlagsBits = 0;
  v25.value._object = 0;
  v23.value.super.Class isa = 0;
  v23.is_nil = 0;
  v10.value = 0;
  v11.super.super.Class isa = sub_8FC90(v24, v25, v23, v10, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v9, v20).super.super.isa;
  uint64_t v12 = *(void **)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenu];
  *(UIMenu *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenu] = v11;

  id v13 = [objc_allocWithZone((Class)UIEditMenuInteraction) initWithDelegate:v8];
  [a3 addInteraction:v13];
  uint64_t v14 = *(void **)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenuInteraction];
  *(void *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenuInteraction] = v13;
  id v15 = v13;

  _OWORD v21[3] = v6;
  v21[0] = v8;
  objc_allocWithZone((Class)UILongPressGestureRecognizer);
  unint64_t v16 = v8;
  id v17 = sub_34C80(v21, (uint64_t)"didLongPress:");
  [a3 addGestureRecognizer:v17];

  swift_release();
  unint64_t v18 = *(void **)&v16[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_longPressGestureRecognizer];
  *(void *)&v16[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_longPressGestureRecognizer] = v17;

  return v16;
}

uint64_t sub_345B0(uint64_t a1, uint64_t a2)
{
  sub_F040(0, &qword_BC650);
  sub_34DC4(a1, (uint64_t)v7);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  long long v5 = v7[1];
  *(_OWORD *)(v4 + 24) = v7[0];
  *(_OWORD *)(v4 + 40) = v5;
  *(_OWORD *)(v4 + 56) = v7[2];
  *(void *)(v4 + 72) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_8FCB0();
}

uint64_t sub_346A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_8EC80();
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_8F650();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  UIMenu v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8ECA0();
  sub_8F560();
  sub_8F770();
  uint64_t v12 = *(void *)&v15[0];
  sub_8F770();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
  uint64_t v13 = sub_5664((uint64_t *)&unk_BCEB0);
  sub_56F8((uint64_t)v7, 0, 1, v13);
  memset(v15, 0, sizeof(v15));
  char v16 = -1;
  (*(void (**)(uint64_t, char *, uint64_t, _OWORD *))(*(void *)v12 + 216))(a3, v7, a2, v15);
  swift_release();
  swift_release();
  sub_34E74((uint64_t)v15);
  sub_EFE4((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_348B8()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenuInteraction]) {
      objc_msgSend(Strong, "removeInteraction:");
    }
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_longPressGestureRecognizer];
    if (v3)
    {
      id v4 = v3;
      [v2 removeGestureRecognizer:v4];
    }
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for EditMenu();
  return objc_msgSendSuper2(&v6, "dealloc");
}

void sub_349FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (id)Strong;
    if ([a1 state] == (char *)&def_41A10 + 1)
    {
      [a1 locationInView:v7];
      sub_F040(0, (unint64_t *)&unk_BC660);
      uint64_t v5 = (void *)sub_8FC20();
      id v6 = *(id *)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenuInteraction);
      [v6 presentEditMenuWithConfiguration:v5];
    }
  }
}

void sub_34B74()
{
}

uint64_t type metadata accessor for EditMenu()
{
  return self;
}

void *sub_34BD8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin8EditMenu_editMenu);
  id v2 = v1;
  return v1;
}

uint64_t sub_34C78(uint64_t a1)
{
  return sub_345B0(a1, v1);
}

id sub_34C80(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    id v6 = sub_820C(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    __n128 v8 = __chkstk_darwin(v6);
    uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    uint64_t v11 = sub_8FF30();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v4);
    sub_616C((uint64_t)a1);
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = [v2 initWithTarget:v11 action:a2];
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_34DC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_34E20()
{
  swift_release();
  sub_616C(v0 + 24);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_34E68(uint64_t a1)
{
  return sub_346A8(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_34E74(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BB600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_34ED4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v19 = a1;
  sub_8F320();
  sub_7084();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  sub_8F330();
  uint64_t v7 = sub_8F300();
  uint64_t v9 = v8;
  uint64_t v10 = *(void (**)(void))(v4 + 8);
  sub_35848();
  v10();
  if (!v9)
  {
    uint64_t v12 = sub_8F8E0();
    sub_2F948();
    swift_allocError();
    *uint64_t v13 = 0x656C746974;
    v13[1] = 0xE500000000000000;
    v13[2] = &_s10descrADD91C5ModelV4ItemVN;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for JSONError.missingProperty(_:), v12);
    swift_willThrow();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v14();
    goto LABEL_5;
  }
  sub_8EA70();
  swift_initStackObject();
  sub_8F330();
  sub_8EA60();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v11();
    sub_35848();
    v10();
LABEL_5:
    sub_35848();
    return ((uint64_t (*)(void))v10)();
  }
  swift_release();
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v16();
  sub_35848();
  v10();
  sub_35848();
  v10();
  uint64_t result = sub_573C(&v18, a2);
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v9;
  return result;
}

uint64_t sub_351A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_34ED4(a1, a2);
}

char *sub_351B8(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v38 = sub_8F3F0();
  sub_7084();
  uint64_t v37 = v3;
  __chkstk_darwin(v4);
  sub_B7F0();
  v33[0] = v6 - v5;
  uint64_t v7 = sub_5664(&qword_BB0B0);
  __chkstk_darwin(v7 - 8);
  sub_B7F0();
  uint64_t v10 = v9 - v8;
  sub_8F320();
  sub_7084();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_B7F0();
  uint64_t v14 = sub_8F8D0();
  sub_7084();
  uint64_t v34 = v15;
  __chkstk_darwin(v16);
  long long v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v21 = (char *)v33 - v20;
  uint64_t v35 = a1;
  sub_8F330();
  sub_8F2D0();
  objc_super v22 = *(void (**)(void))(v12 + 8);
  sub_35858();
  v22();
  if (sub_5754(v10, 1, v14) == 1)
  {
    sub_35570(v10);
    uint64_t v23 = sub_8F8E0();
    sub_2F948();
    swift_allocError();
    *Swift::String v24 = 0x736D657469;
    v24[1] = 0xE500000000000000;
    _OWORD v24[2] = &_s10descrADD91C5ModelVN;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v24, enum case for JSONError.missingProperty(_:), v23);
    swift_willThrow();
    sub_7358();
    v25();
    sub_35858();
    v22();
  }
  else
  {
    uint64_t v26 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v21, v10, v14);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v18, v21, v14);
    (*(void (**)(void, uint64_t, uint64_t))(v37 + 16))(v33[0], v36, v38);
    sub_355D0();
    uint64_t v27 = v33[1];
    uint64_t v28 = sub_8FAB0();
    if (v27)
    {
      sub_7358();
      v29();
      sub_35858();
      v22();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v14);
    }
    else
    {
      long long v18 = (char *)v28;
      sub_7358();
      v30();
      sub_35858();
      v22();
      sub_7358();
      v31();
    }
  }
  return v18;
}

uint64_t sub_35570(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BB0B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_355D0()
{
  unint64_t result = qword_BC670;
  if (!qword_BC670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC670);
  }
  return result;
}

uint64_t _s10descrADD91C5ModelV4ItemVwxx(uint64_t a1)
{
  sub_616C(a1);

  return swift_bridgeObjectRelease();
}

uint64_t _s10descrADD91C5ModelV4ItemVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s10descrADD91C5ModelV4ItemVwca(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s10descrADD91C5ModelV4ItemVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s10descrADD91C5ModelV4ItemVwta(uint64_t a1, uint64_t a2)
{
  sub_616C(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10descrADD91C5ModelV4ItemVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10descrADD91C5ModelV4ItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s10descrADD91C5ModelV4ItemVMa()
{
  return &_s10descrADD91C5ModelV4ItemVN;
}

ValueMetadata *_s10descrADD91C5ModelVMa()
{
  return &_s10descrADD91C5ModelVN;
}

char *sub_3581C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  __n128 result = sub_351B8(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_35868(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!deviceIsRunningInternalBuild()) {
    return 0;
  }
  if (a2)
  {
    *(void *)&long long v33 = 0;
    *((void *)&v33 + 1) = 0xE000000000000000;
    sub_8FDE0(16);
    swift_bridgeObjectRelease();
    sub_35C34();
    v35._countAndFlagsBits = a1;
    v35._object = a2;
    sub_8FA10(v35);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a3);
    if (sub_8FF20())
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
    }
    else
    {
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v11, v9, a3);
    }
    uint64_t v12 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      swift_errorRetain();
      uint64_t v13 = (void *)sub_8E910();
      swift_errorRelease();
      id v14 = [v13 localizedFailureReason];
      if (!v14) {
        id v14 = [v13 description];
      }
      uint64_t v15 = sub_8F9D0();
      uint64_t v17 = v16;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2E720(0, *((void *)v12 + 2) + 1, 1, v12);
        uint64_t v12 = v27;
      }
      unint64_t v19 = *((void *)v12 + 2);
      unint64_t v18 = *((void *)v12 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_2E720(v18 > 1, v19 + 1, 1, v12);
        uint64_t v12 = v28;
      }
      *((void *)v12 + 2) = v19 + 1;
      uint64_t v20 = &v12[16 * v19];
      *((void *)v20 + 4) = v15;
      *((void *)v20 + 5) = v17;
      id v21 = [v13 userInfo];
      uint64_t v22 = sub_8F940();

      uint64_t v23 = sub_8F9D0();
      if (!*(void *)(v22 + 16)) {
        goto LABEL_18;
      }
      unint64_t v25 = sub_3ADF8(v23, v24);
      if (v26)
      {
        sub_22210(*(void *)(v22 + 56) + 32 * v25, (uint64_t)&v33);
      }
      else
      {
LABEL_18:
        long long v33 = 0u;
        long long v34 = 0u;
      }

      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      if (!*((void *)&v34 + 1)) {
        break;
      }
      sub_5664(&qword_BBB50);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_23;
      }
    }
    sub_8250((uint64_t)&v33);
LABEL_23:
    *(void *)&long long v33 = v12;
    sub_5664(&qword_BC540);
    sub_32878();
    uint64_t v29 = sub_8F980();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *(void *)&long long v33 = 0;
    *((void *)&v33 + 1) = 0xE000000000000000;
    sub_8FDE0(16);
    swift_bridgeObjectRelease();
    sub_35C34();
    v36._countAndFlagsBits = v29;
    v36._object = v31;
    sub_8FA10(v36);
    swift_bridgeObjectRelease();
  }
  return v33;
}

void sub_35C34()
{
  strcpy((char *)(v0 - 112), "INTERNAL ONLY\n");
  *(unsigned char *)(v0 - 97) = -18;
}

uint64_t sub_35C5C(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  sub_5664(&qword_BC678);
  if (swift_dynamicCast())
  {
    sub_573C(v9, (uint64_t)&v11);
    uint64_t v5 = *((void *)&v12 + 1);
    uint64_t v6 = v13;
    sub_820C(&v11, *((uint64_t *)&v12 + 1));
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    sub_616C((uint64_t)&v11);
  }
  else
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_EF88((uint64_t)v9, &qword_BC680);
    long long v11 = 0u;
    long long v12 = 0u;
    uint64_t v7 = sub_35DE0(0, 0, (uint64_t)&v11, a1);
    sub_EF88((uint64_t)&v11, &qword_BC780);
  }
  return v7;
}

uint64_t sub_35DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a3;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v5 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v8);
  if (sub_8FF20())
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a4);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10, v7, a4);
  }
  long long v11 = (void *)sub_8E910();
  swift_errorRelease();
  id v12 = [v11 code];
  id v13 = [v11 description];
  uint64_t v14 = sub_8F9D0();
  uint64_t v16 = v15;

  id v17 = [v11 domain];
  uint64_t v18 = sub_8F9D0();
  uint64_t v20 = v19;

  id v21 = [v11 userInfo];
  uint64_t v22 = sub_8F940();

  sub_37308(v22);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_3605C((uint64_t)v12, 0, v29, v30, v14, v16, v18, v20, v24, v28);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_3605C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_5664(&qword_BBBB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_92E90;
  sub_8FDB0();
  *(void *)(inited + 96) = sub_5664(&qword_BBD60);
  *(void *)(inited + 72) = a1;
  *(unsigned char *)(inited + 80) = a2 & 1;
  sub_8FDB0();
  uint64_t v18 = sub_5664(&qword_BB788);
  *(void *)(inited + 168) = v18;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  swift_bridgeObjectRetain();
  sub_8FDB0();
  *(void *)(inited + 240) = v18;
  *(void *)(inited + 216) = a5;
  *(void *)(inited + 224) = a6;
  swift_bridgeObjectRetain();
  sub_8FDB0();
  *(void *)(inited + 312) = v18;
  *(void *)(inited + 288) = a7;
  *(void *)(inited + 296) = a8;
  swift_bridgeObjectRetain();
  sub_8FDB0();
  uint64_t v19 = sub_5664(&qword_BC780);
  *(void *)(inited + 384) = v19;
  uint64_t v20 = swift_allocObject();
  id v21 = (void *)(v20 + 16);
  *(void *)(inited + 360) = v20;
  if (a9)
  {
    sub_36350(a9, v21);
  }
  else
  {
    *(_OWORD *)id v21 = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
  }
  sub_8FDB0();
  *(void *)(inited + 456) = v19;
  uint64_t v22 = swift_allocObject();
  *(void *)(inited + 432) = v22;
  sub_30058(a10, v22 + 16);
  return sub_8F950();
}

uint64_t sub_36310()
{
  if (*(void *)(v0 + 40)) {
    sub_616C(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_36350@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  a2[3] = sub_5664(&qword_BBBD8);
  sub_36C14(a1, v47);
  uint64_t v3 = v47[0];
  int64_t v4 = v47[3];
  unint64_t v5 = v47[4];
  uint64_t v35 = v47[1];
  int64_t v36 = (unint64_t)(v47[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v6 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v7 = v6 | (v4 << 6);
  while (1)
  {
    sub_10210(*(void *)(v3 + 48) + 40 * v7, (uint64_t)__src);
    sub_22210(*(void *)(v3 + 56) + 32 * v7, (uint64_t)&__src[40]);
    memcpy(__dst, __src, sizeof(__dst));
    sub_10210((uint64_t)__dst, (uint64_t)v42);
    sub_22210((uint64_t)&__dst[40], (uint64_t)v43);
    sub_22200(v43, v44);
    sub_1C464((uint64_t)v42);
    sub_10210((uint64_t)__dst, (uint64_t)v42);
    sub_22210((uint64_t)&__dst[40], (uint64_t)v43);
    sub_10210((uint64_t)v42, (uint64_t)&v39);
    sub_8FDB0();
    sub_1C464((uint64_t)v42);
    *((void *)&v38 + 1) = (char *)&type metadata for Any + 8;
    *(void *)&long long v37 = swift_allocObject();
    sub_22210((uint64_t)v44, v37 + 16);
    sub_36958((uint64_t)&v37, (uint64_t)&v39);
    sub_616C((uint64_t)&v37);
    if (!v40)
    {
      sub_EF88((uint64_t)&v39, &qword_BC780);
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_3ADB4((uint64_t)v41);
      char v28 = v27;
      swift_bridgeObjectRelease();
      if (v28)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        Swift::Int v30 = _swiftEmptyDictionarySingleton[3];
        sub_5664(&qword_BBD50);
        sub_8FE70(isUniquelyReferenced_nonNull_native, v30);
        sub_1C464(_swiftEmptyDictionarySingleton[6] + 40 * v26);
        sub_22200((_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v26), &v37);
        sub_8FE90();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v37 = 0u;
        long long v38 = 0u;
      }
      sub_1C464((uint64_t)v41);
      sub_EF88((uint64_t)&v37, &qword_BC780);
      goto LABEL_39;
    }
    sub_22200(&v39, &v37);
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v16 = sub_3ADB4((uint64_t)v41);
    uint64_t v18 = _swiftEmptyDictionarySingleton[2];
    BOOL v19 = (v17 & 1) == 0;
    Swift::Int v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    unint64_t v21 = v16;
    char v22 = v17;
    sub_5664(&qword_BBD50);
    if (sub_8FE70(v15, v20))
    {
      unint64_t v23 = sub_3ADB4((uint64_t)v41);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_45;
      }
      unint64_t v21 = v23;
    }
    if (v22)
    {
      uint64_t v25 = (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v21);
      sub_616C((uint64_t)v25);
      sub_22200(&v37, v25);
    }
    else
    {
      _swiftEmptyDictionarySingleton[(v21 >> 6) + 8] |= 1 << v21;
      sub_10210((uint64_t)v41, _swiftEmptyDictionarySingleton[6] + 40 * v21);
      sub_22200(&v37, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v21));
      uint64_t v31 = _swiftEmptyDictionarySingleton[2];
      BOOL v12 = __OFADD__(v31, 1);
      uint64_t v32 = v31 + 1;
      if (v12) {
        goto LABEL_44;
      }
      _swiftEmptyDictionarySingleton[2] = v32;
    }
    swift_bridgeObjectRelease();
    sub_1C464((uint64_t)v41);
LABEL_39:
    sub_616C((uint64_t)v44);
    sub_616C((uint64_t)v43);
    sub_EF88((uint64_t)__dst, (uint64_t *)&unk_BC840);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_43;
    }
    if (v8 >= v36) {
      goto LABEL_41;
    }
    unint64_t v9 = *(void *)(v35 + 8 * v8);
    int64_t v10 = v4 + 1;
    if (!v9)
    {
      sub_36C58();
      if (v11 == v12) {
        goto LABEL_41;
      }
      sub_36C4C();
      if (!v9)
      {
        sub_36C58();
        if (v11 == v12) {
          goto LABEL_41;
        }
        sub_36C4C();
        if (!v9)
        {
          sub_36C58();
          if (v11 == v12) {
            goto LABEL_41;
          }
          sub_36C4C();
          if (!v9)
          {
            sub_36C58();
            if (v11 == v12) {
              goto LABEL_41;
            }
            sub_36C4C();
            if (!v9)
            {
              int64_t v10 = v13 + 5;
              if (v13 + 5 >= v36) {
                goto LABEL_41;
              }
              unint64_t v9 = *(void *)(v35 + 8 * v10);
              if (!v9)
              {
                int64_t v14 = v4 + 7;
                while (v14 < v36)
                {
                  unint64_t v9 = *(void *)(v35 + 8 * v14++);
                  if (v9)
                  {
                    int64_t v10 = v14 - 1;
                    goto LABEL_24;
                  }
                }
LABEL_41:
                uint64_t result = swift_release();
                *a2 = _swiftEmptyDictionarySingleton;
                return result;
              }
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v4 = v10;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_8FF60();
  __break(1u);
  return result;
}

uint64_t sub_36828(uint64_t a1)
{
  sub_22210(a1, (uint64_t)v4);
  if ((swift_dynamicCast() & 1) == 0
    && !swift_dynamicCast()
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0)
  {
    sub_36BD0();
    if (swift_dynamicCast())
    {
    }
    else
    {
      if (!swift_dynamicCast())
      {
        uint64_t v1 = 0;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v1 = 1;
LABEL_10:
  sub_616C((uint64_t)v4);
  return v1;
}

double sub_36958@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((sub_36828(a1) & 1) == 0)
  {
    sub_22210(a1, (uint64_t)v13);
    sub_5664(&qword_BC678);
    if (swift_dynamicCast())
    {
      sub_573C(&v10, (uint64_t)v14);
      uint64_t v5 = v15;
      uint64_t v6 = v16;
      sub_820C(v14, v15);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      *(void *)(a2 + 24) = sub_5664(&qword_BBBD8);
      *(void *)a2 = v7;
    }
    else
    {
      uint64_t v12 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
      sub_EF88((uint64_t)&v10, &qword_BC680);
      sub_22210(a1, (uint64_t)v13);
      sub_5664(&qword_BC688);
      if (!swift_dynamicCast())
      {
        uint64_t v12 = 0;
        long long v10 = 0u;
        long long v11 = 0u;
        sub_EF88((uint64_t)&v10, &qword_BC690);
        double result = 0.0;
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
        return result;
      }
      sub_573C(&v10, (uint64_t)v14);
      uint64_t v8 = v15;
      uint64_t v9 = v16;
      sub_820C(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    }
    sub_616C((uint64_t)v14);
    return result;
  }

  sub_22210(a1, a2);
  return result;
}

uint64_t sub_36B18(_OWORD *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  sub_3BA5C(a1, a2, isUniquelyReferenced_nonNull_native);
  uint64_t *v2 = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_36B98()
{
  sub_616C(v0 + 16);

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_36BD0()
{
  unint64_t result = qword_BC698;
  if (!qword_BC698)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BC698);
  }
  return result;
}

uint64_t sub_36C14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_36C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_3CEE4();
  if (v3)
  {
    swift_errorRelease();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
  }
  uint64_t v10 = sub_3CEE4();
  uint64_t v12 = v11;
  uint64_t v13 = sub_3CEE4();
  uint64_t v15 = v14;
  sub_8F3F0();
  sub_B6C4();
  (*(void (**)(uint64_t))(v16 + 8))(a2);
  sub_8F320();
  sub_B6C4();
  uint64_t result = (*(uint64_t (**)(uint64_t))(v17 + 8))(a1);
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v12;
  a3[4] = v13;
  a3[5] = v15;
  return result;
}

double sub_36DF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_36C64(a1, a2, (uint64_t *)v7);
  if (!v3)
  {
    long long v6 = v7[1];
    *a3 = v7[0];
    a3[1] = v6;
    double result = *(double *)&v8;
    a3[2] = v8;
  }
  return result;
}

uint64_t destroy for ErrorPageDestination()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ErrorPageDestination(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ErrorPageDestination(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ErrorPageDestination(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for ErrorPageDestination(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorPageDestination(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorPageDestination(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorPageDestination()
{
  return &type metadata for ErrorPageDestination;
}

ValueMetadata *type metadata accessor for ErrorPageDestinationError()
{
  return &type metadata for ErrorPageDestinationError;
}

void *sub_370A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v6)
  {
    while (1)
    {
      __n128 result = sub_48B5C(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0) {
        break;
      }
      uint64_t v20 = v6;
      uint64_t v8 = 0;
      while (v6 != v8)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v9 = (id)sub_8FDF0();
        }
        else {
          id v9 = *(id *)(a1 + 8 * v8 + 32);
        }
        uint64_t v10 = v9;
        [v9 range];
        __n128 result = (void *)sub_8FB50();
        if (v11) {
          goto LABEL_18;
        }
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        sub_8FA20();
        uint64_t v14 = sub_8F9F0();
        uint64_t v16 = v15;

        swift_bridgeObjectRelease();
        unint64_t v18 = _swiftEmptyArrayStorage[2];
        unint64_t v17 = _swiftEmptyArrayStorage[3];
        if (v18 >= v17 >> 1) {
          sub_48B5C((char *)(v17 > 1), v18 + 1, 1);
        }
        ++v8;
        _swiftEmptyArrayStorage[2] = v18 + 1;
        BOOL v19 = (char *)&_swiftEmptyArrayStorage[2 * v18];
        *((void *)v19 + 4) = v14;
        *((void *)v19 + 5) = v16;
        uint64_t v6 = v20;
        a3 = v13;
        a2 = v12;
        if (v20 == v8) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_8FEB0();
      swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_3727C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_3B0D8(a1, (uint64_t)sub_3B0A0, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_37308(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_5664(&qword_BC830);
    uint64_t v2 = (void *)sub_8FED0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v7 << 6);
  while (1)
  {
    unint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_22210(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v43);
    *(void *)&long long v42 = v20;
    *((void *)&v42 + 1) = v19;
    v40[2] = v42;
    v41[0] = v43[0];
    v41[1] = v43[1];
    *(void *)&v40[0] = v20;
    *((void *)&v40[0] + 1) = v19;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_22200(v41, v35);
    long long v36 = v32;
    long long v37 = v33;
    uint64_t v38 = v34;
    sub_22200(v35, v39);
    long long v32 = v36;
    long long v33 = v37;
    uint64_t v34 = v38;
    sub_22200(v39, v40);
    sub_22200(v40, &v36);
    unint64_t v21 = sub_8FD80(v2[5]) & ~(-1 << *((unsigned char *)v2 + 32));
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) == 0)
    {
      sub_3C848();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        BOOL v25 = v23 == v24;
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        v22 |= v25;
        if (*(void *)&v6[8 * v23] != -1)
        {
          sub_3C834();
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    sub_3C85C();
LABEL_38:
    sub_3C820();
    *(void *)&v6[v26] |= v27;
    uint64_t v29 = v2[6] + 40 * v28;
    *(_OWORD *)uint64_t v29 = v32;
    *(_OWORD *)(v29 + 16) = v33;
    *(void *)(v29 + 32) = v34;
    sub_22200(&v36, (_OWORD *)(v2[7] + 32 * v28));
    ++v2[2];
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_42;
    }
    if (v10 >= v30) {
      goto LABEL_40;
    }
    unint64_t v11 = *(void *)(v31 + 8 * v10);
    int64_t v12 = v7 + 1;
    if (!v11)
    {
      sub_3C9D4();
      if (v13 == v14) {
        goto LABEL_40;
      }
      sub_3C9C8();
      if (!v11)
      {
        sub_3C9D4();
        if (v13 == v14) {
          goto LABEL_40;
        }
        sub_3C9C8();
        if (!v11)
        {
          sub_3C9D4();
          if (v13 == v14) {
            goto LABEL_40;
          }
          sub_3C9C8();
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v7 = v12;
  }
  int64_t v16 = v15 + 4;
  if (v16 >= v30)
  {
LABEL_40:
    swift_release();
    sub_221F8();
    return;
  }
  unint64_t v11 = *(void *)(v31 + 8 * v16);
  if (v11)
  {
    int64_t v12 = v16;
    goto LABEL_28;
  }
  while (!__OFADD__(v16, 1))
  {
    sub_3C9D4();
    if (v13 == v14) {
      goto LABEL_40;
    }
    sub_3C9C8();
    int64_t v16 = v17 + 1;
    if (v11) {
      goto LABEL_28;
    }
  }
LABEL_43:
  __break(1u);
}

unint64_t sub_3767C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_5664(&qword_BC798);
    uint64_t v2 = (void *)sub_8FED0();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  int64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  int64_t v10 = (char *)&type metadata for Any + 8;
  unint64_t v11 = &type metadata for String;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v34 = (v5 - 1) & v5;
        unint64_t v12 = __clz(__rbit64(v5)) | (v9 << 6);
      }
      else
      {
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_34;
        }
        if (v13 >= v31)
        {
LABEL_31:
          sub_221F8();
          return (unint64_t)v2;
        }
        unint64_t v14 = *(void *)(v32 + 8 * v13);
        int64_t v15 = v9 + 1;
        if (!v14)
        {
          int64_t v15 = v9 + 2;
          if (v9 + 2 >= v31) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v32 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v9 + 3;
            if (v9 + 3 >= v31) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v32 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v9 + 4;
              if (v9 + 4 >= v31) {
                goto LABEL_31;
              }
              unint64_t v14 = *(void *)(v32 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v9 + 5;
                if (v9 + 5 >= v31) {
                  goto LABEL_31;
                }
                unint64_t v14 = *(void *)(v32 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_35;
                    }
                    if (v15 >= v31) {
                      goto LABEL_31;
                    }
                    unint64_t v14 = *(void *)(v32 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v15 = v9 + 5;
              }
            }
          }
        }
LABEL_25:
        uint64_t v34 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        int64_t v9 = v15;
      }
      uint64_t v17 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
      uint64_t v35 = *v17;
      uint64_t v36 = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      sub_22200(v6, v7);
      sub_22200(v7, v40);
      sub_22200(v40, &v38);
      unint64_t result = sub_3ADF8(v35, v36);
      unint64_t v18 = result;
      if ((v19 & 1) == 0) {
        break;
      }
      int64_t v33 = v9;
      uint64_t v20 = v7;
      unint64_t v21 = v6;
      uint64_t v22 = v1;
      uint64_t v23 = v11;
      uint64_t v24 = v10;
      BOOL v25 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *BOOL v25 = v35;
      v25[1] = v36;
      int64_t v10 = v24;
      unint64_t v11 = v23;
      uint64_t v1 = v22;
      uint64_t v6 = v21;
      int64_t v7 = v20;
      int64_t v9 = v33;
      uint64_t v26 = (_OWORD *)(v2[7] + 32 * v18);
      sub_616C((uint64_t)v26);
      unint64_t result = (unint64_t)sub_22200(&v38, v26);
      unint64_t v5 = v34;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_22200(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_33;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_379DC@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph))
  {
    uint64_t v3 = sub_8F750();
    sub_8F560();
    swift_retain();
    sub_8F770();
    swift_release();
    uint64_t v4 = a1;
    uint64_t v5 = 0;
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v6 = sub_8F750();
    uint64_t v4 = a1;
    uint64_t v5 = 1;
  }

  return sub_56F8(v4, v5, 1, v6);
}

id sub_37A90()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView);
LABEL_5:
    id v8 = v2;
    return v3;
  }
  uint64_t v4 = v0;
  id v5 = objc_allocWithZone((Class)_UIContentUnavailableView);
  id result = sub_3AB94(0.0, 0.0, 0.0, 0.0, 0, 0xE000000000000000, 0);
  if (result)
  {
    int64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_37B28()
{
  sub_3C7BC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  char v35 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_8F390();
  uint64_t v11 = sub_3C870(v10);
  __chkstk_darwin(v11);
  sub_3C938();
  v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_automaticRetry] = 1;
  uint64_t v12 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry;
  id v13 = objc_allocWithZone((Class)AMSUIDAirplaneModeInquiry);
  unint64_t v14 = v0;
  *(void *)&v0[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_cellularDataInquiry;
  *(void *)&v14[v15] = [objc_allocWithZone((Class)AMSUIDCellularDataInquiry) init];
  int64_t v16 = &v14[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry];
  uint64_t v17 = type metadata accessor for NWPathNetworkInquiry();
  id v18 = sub_43B30();
  void v16[3] = v17;
  v16[4] = &off_B05B8;
  void *v16 = v18;
  char v19 = &v14[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation];
  *(_OWORD *)char v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((void *)v19 + 4) = 0;
  *(void *)&v14[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_error] = v9;
  *(void *)&v14[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph] = v7;
  uint64_t v20 = (uint64_t *)&v14[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_retryAction];
  *uint64_t v20 = v4;
  v20[1] = v2;
  v14[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_isNavigationControllerEmbedded] = v35;
  swift_errorRetain();
  swift_retain();
  sub_18224(v4);

  unint64_t v21 = (objc_class *)type metadata accessor for ErrorViewController();
  v39.receiver = v14;
  v39.super_class = v21;
  id v22 = objc_msgSendSuper2(&v39, "initWithNibName:bundle:", 0, 0);
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v23 = sub_8F3E0();
  sub_183C4(v23);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  long long v38 = v21;
  v37[0] = v22;
  id v24 = v22;
  id v25 = (id)AMSLogKey();
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = sub_8F9D0();
    uint64_t v29 = v28;

    sub_8F380();
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    sub_8F370(v40);
    sub_183DC(v37);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_3C988(MetatypeMetadata);
    sub_3C708((uint64_t)v36, &qword_BC780);
    v41._countAndFlagsBits = 5972026;
    v41._object = (void *)0xE300000000000000;
    sub_8F370(v41);
    v36[3] = &type metadata for String;
    v36[0] = v27;
    v36[1] = v29;
    sub_8F360();
    sub_3C708((uint64_t)v36, &qword_BC780);
    v31._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    sub_8F370(v42);
    sub_183DC(v37);
    uint64_t v32 = swift_getMetatypeMetadata();
    sub_3C988(v32);
    sub_3C708((uint64_t)v36, &qword_BC780);
    v31._countAndFlagsBits = 58;
  }
  v31._object = (void *)0xE100000000000000;
  sub_8F370(v31);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v37);
  sub_8F340();
  swift_getErrorValue();
  uint64_t v33 = sub_8FF90();
  long long v38 = (objc_class *)&type metadata for String;
  v37[0] = v33;
  v37[1] = v34;
  sub_8F3B0();
  sub_3C708((uint64_t)v37, &qword_BC780);
  sub_4366C();
  sub_18234(v4);
  swift_release();
  swift_errorRelease();
  swift_bridgeObjectRelease();

  sub_3C808();
}

void sub_37F40()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_automaticRetry] = 1;
  uint64_t v2 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)AMSUIDAirplaneModeInquiry) init];
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_cellularDataInquiry;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)AMSUIDCellularDataInquiry) init];
  uint64_t v4 = &v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry];
  uint64_t v5 = type metadata accessor for NWPathNetworkInquiry();
  id v6 = sub_43B30();
  *((void *)v4 + 3) = v5;
  *((void *)v4 + 4) = &off_B05B8;
  *(void *)uint64_t v4 = v6;
  uint64_t v7 = &v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView] = 0;

  sub_8FEA0();
  __break(1u);
}

id sub_3806C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation;
  swift_beginAccess();
  if (*(void *)(v2 + 24))
  {
    sub_18294(v2, (uint64_t)v7);
    sub_820C(v7, v7[3]);
    uint64_t v3 = sub_3C8C0();
    v4(v3);
    sub_616C((uint64_t)v7);
  }
  uint64_t v5 = (objc_class *)type metadata accessor for ErrorViewController();
  v8.receiver = v1;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, "dealloc");
}

id sub_38230()
{
  id v1 = [v0 parentViewController];
  if (v1)
  {
    uint64_t v2 = v1;
    self;
    if (!swift_dynamicCastObjCClass()
      || *((unsigned char *)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_isNavigationControllerEmbedded) == 1)
    {
      id v3 = [v2 navigationItem];

      return v3;
    }
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ErrorViewController();
  id v5 = objc_msgSendSuper2(&v6, "navigationItem");

  return v5;
}

void sub_38308()
{
  sub_3C7BC();
  uint64_t v2 = v0;
  uint64_t v3 = sub_8F1F0();
  sub_7084();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_22620();
  uint64_t v85 = v7;
  uint64_t v8 = sub_8F390();
  uint64_t v9 = sub_3C870(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5664((uint64_t *)&unk_BC7F0);
  uint64_t v13 = sub_3C870(v12);
  __chkstk_darwin(v13);
  sub_B7F0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_8E980();
  sub_7084();
  uint64_t v83 = v18;
  __chkstk_darwin(v19);
  sub_22620();
  uint64_t v84 = v20;
  uint64_t v21 = sub_5664(&qword_BBB40);
  uint64_t v22 = sub_3C870(v21);
  __chkstk_darwin(v22);
  sub_B800();
  uint64_t v23 = (objc_class *)type metadata accessor for ErrorViewController();
  v93.receiver = v0;
  v93.super_class = v23;
  objc_msgSendSuper2(&v93, "loadView");
  id v24 = [v0 view];
  id v25 = objc_msgSend(self, "ams_primaryBackground");
  [v24 setBackgroundColor:v25];

  sub_379DC(v1);
  uint64_t v26 = sub_8F750();
  if (sub_5754(v1, 1, v26) != 1)
  {
    uint64_t v82 = v5;
    uint64_t v36 = 0x6C6172656E6567;
    v81[2] = sub_8F720();
    sub_7358();
    v37();
    unint64_t v38 = *(unint64_t *)((char *)v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_error);
    v86 = (void **)v38;
    swift_errorRetain();
    sub_5664(&qword_BBB50);
    char v39 = swift_dynamicCast();
    v81[3] = v3;
    if ((v39 & 1) != 0 && !LOBYTE(v92[0])) {
      uint64_t v36 = 0x61727473746F6F62;
    }
    sub_8F9D0();
    id v40 = objc_allocWithZone((Class)AMSMetricsLoggingEvent);
    swift_errorRetain();
    id v41 = sub_3AC30();
    if (*(void **)((char *)v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph))
    {
      sub_8F550();
      if (sub_5754(v16, 1, v17) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32))(v84, v16, v17);
        sub_8E940();
        NSString v42 = sub_8F9A0();
        swift_bridgeObjectRelease();
        [v41 setUrl:v42];

        uint64_t v43 = sub_8E940();
        uint64_t v45 = v44;
        id v46 = objc_allocWithZone((Class)NSRegularExpression);
        sub_156A0();
        id v50 = sub_3ACD8(v47, v48, 0);
        NSString v51 = sub_8F9A0();
        v92[0] = 15;
        v86 = (void **)v43;
        uint64_t v87 = v45;
        swift_bridgeObjectRetain();
        sub_5664(&qword_BC808);
        sub_3C42C((unint64_t *)&unk_BC810, &qword_BC808);
        unint64_t v52 = sub_3C470();
        uint64_t v55 = sub_3C9EC(v52, v53, v54, (uint64_t)&type metadata for String);
        id v57 = objc_msgSend(v50, "matchesInString:options:range:", v51, 0, v55, v56);

        sub_F040(0, (unint64_t *)&unk_BC820);
        unint64_t v58 = sub_8FA70();

        swift_bridgeObjectRetain();
        long long v59 = sub_370A4(v58, v43, v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v59[2])
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          NSString v60 = sub_8F9A0();
          swift_bridgeObjectRelease();
          [v41 setEventServiceType:v60];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v36 = sub_8E940();
        uint64_t v62 = v61;
        id v63 = objc_allocWithZone((Class)NSRegularExpression);
        sub_156A0();
        id v65 = sub_3ACD8(0xD000000000000011, v64, 0);
        uint64_t v11 = (char *)sub_8F9A0();
        v92[0] = 15;
        v86 = (void **)v36;
        uint64_t v87 = v62;
        swift_bridgeObjectRetain();
        sub_5664(&qword_BC808);
        sub_3C42C((unint64_t *)&unk_BC810, &qword_BC808);
        unint64_t v66 = sub_3C470();
        uint64_t v69 = sub_3C9EC(v66, v67, v68, (uint64_t)&type metadata for String);
        id v71 = objc_msgSend(v65, "matchesInString:options:range:", v11, 0, v69, v70);

        sub_F040(0, (unint64_t *)&unk_BC820);
        unint64_t v38 = sub_8FA70();

        swift_bridgeObjectRetain();
        long long v72 = sub_370A4(v38, v36, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_3C8DC();
        if (v72[2])
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_3C9E0();
          NSString v73 = sub_8F9A0();
          swift_bridgeObjectRelease();
          [v41 setEventPlacement:v73];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v84, v17);
        goto LABEL_21;
      }
    }
    else
    {
      sub_56F8(v16, 1, 1, v17);
    }
    sub_3C708(v16, (uint64_t *)&unk_BC7F0);
    sub_3C8DC();
LABEL_21:
    id v74 = [self internalInstanceUsingBag:v36];
    sub_F040(0, (unint64_t *)&qword_BBBB0);
    uint64_t v75 = v82;
    (*(void (**)(char *, void, unint64_t))(v82 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v38);
    v76 = (void *)sub_8FBF0();
    (*(void (**)(char *, unint64_t))(v75 + 8))(v11, v38);
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v74;
    *(void *)(v77 + 24) = v41;
    v90 = sub_3C354;
    uint64_t v91 = v77;
    v86 = _NSConcreteStackBlock;
    uint64_t v87 = 1107296256;
    v88 = sub_3A478;
    v89 = (objc_class *)&unk_B0200;
    v78 = _Block_copy(&v86);
    id v79 = v74;
    id v80 = v41;
    swift_release();
    sub_3C364(v76, v78);
    swift_unknownObjectRelease();
    _Block_release(v78);

    goto LABEL_22;
  }
  sub_3C708(v1, &qword_BBB40);
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v27 = sub_8F3E0();
  sub_183C4(v27);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  v89 = v23;
  v86 = v2;
  uint64_t v28 = v2;
  id v29 = (id)AMSLogKey();
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = sub_8F9D0();
    uint64_t v33 = v32;

    sub_8F380();
    v94._countAndFlagsBits = 0;
    v94._object = (void *)0xE000000000000000;
    sub_8F370(v94);
    sub_183DC(&v86);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_3CA0C(MetatypeMetadata);
    sub_3C708((uint64_t)v92, &qword_BC780);
    v95._countAndFlagsBits = 5972026;
    v95._object = (void *)0xE300000000000000;
    sub_8F370(v95);
    v92[3] = &type metadata for String;
    v92[0] = v31;
    v92[1] = v33;
    sub_8F360();
    sub_3C708((uint64_t)v92, &qword_BC780);
    v35._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v96._countAndFlagsBits = 0;
    v96._object = (void *)0xE000000000000000;
    sub_8F370(v96);
    sub_183DC(&v86);
    uint64_t v49 = swift_getMetatypeMetadata();
    sub_3CA0C(v49);
    sub_3C708((uint64_t)v92, &qword_BC780);
    v35._countAndFlagsBits = 58;
  }
  v35._object = (void *)0xE100000000000000;
  sub_8F370(v35);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)&v86);
  sub_8F340();
  sub_4366C();
  swift_bridgeObjectRelease();
LABEL_22:
  sub_3C808();
}

void sub_38FD4()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ErrorViewController();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_39154();
  sub_3A544();
}

void sub_39058()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for ErrorViewController();
  objc_msgSendSuper2(&v11, "viewWillLayoutSubviews");
  id v1 = sub_37A90();
  id v2 = [v0 view];
  [v2 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
}

void sub_39154()
{
  id v1 = [v0 navigationItem];
  objc_msgSend(v1, "ams_configureWithTransparentBackground");

  sub_391B0();

  sub_39224();
}

void sub_391B0()
{
  id v1 = [v0 view];
  id v2 = sub_37A90();
  [v1 addSubview:v2];
}

void sub_39224()
{
  void (*v4)(void *__return_ptr, void *, void (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  void v6[5];
  void v7[5];

  [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry) setDelegate:v0];
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry + 32);
  sub_820C((void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry), v1);
  v6[3] = sub_F040(0, (unint64_t *)&qword_BBBB0);
  v6[4] = &protocol witness table for OS_dispatch_queue;
  v6[0] = sub_8FBD0();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v4 = *(void (**)(void *__return_ptr, void *, void (*)(), uint64_t, uint64_t, uint64_t))(v2 + 40);
  swift_retain();
  v4(v7, v6, sub_3C2A4, v3, v1, v2);
  swift_release_n();
  sub_616C((uint64_t)v6);
  double v5 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation;
  swift_beginAccess();
  sub_3C2AC((uint64_t)v7, v5);
  swift_endAccess();
  sub_39D50();
}

void sub_39388()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_3A4BC();
  }
}

void sub_393DC()
{
  sub_3C7BC();
  uint64_t v0 = sub_5664(&qword_BBB40);
  uint64_t v1 = sub_3C870(v0);
  __chkstk_darwin(v1);
  sub_B7F0();
  uint64_t v4 = v3 - v2;
  swift_errorRetain();
  sub_5664(&qword_BBB50);
  if (swift_dynamicCast())
  {
    double v5 = v22;
    uint64_t v7 = v23;
    double v6 = v24;
    double v8 = v26;
    swift_bridgeObjectRetain();
    uint64_t v18 = v21;
    if (v26)
    {
      uint64_t v19 = v25;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v7 = 0;
    double v6 = 0;
    double v5 = (unsigned char *)(&def_41A10 + 1);
  }
  type metadata accessor for Localizations();
  sub_379DC(v4);
  sub_156A0();
  uint64_t v19 = sub_4320C(v9, v10, v4);
  double v8 = v11;
  sub_3C708(v4, &qword_BBB40);
  swift_bridgeObjectRelease();
LABEL_6:
  swift_getErrorValue();
  if (v5 == (unsigned char *)&def_41A10 + 1)
  {
    uint64_t v7 = 0;
    double v6 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = sub_35868(v7, v6, v20);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (v5 == (unsigned char *)&def_41A10 + 1 || (swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), !v5))
  {
    type metadata accessor for Localizations();
    sub_379DC(v4);
    sub_156A0();
    uint64_t v15 = sub_4320C(0xD000000000000014, v16, v4);
    double v5 = v17;
    sub_3C708(v4, &qword_BBB40);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v18;
  }
  sub_39988(v19, v8, v12, v14, v15, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_3C808();
}

void sub_39640()
{
  sub_3C7BC();
  LODWORD(v3) = v2;
  uint64_t v4 = sub_5664(&qword_BBB40);
  uint64_t v5 = sub_3C870(v4);
  __chkstk_darwin(v5);
  sub_13868();
  uint64_t v6 = sub_5664((uint64_t *)&unk_BC7F0);
  uint64_t v7 = sub_3C870(v6);
  __chkstk_darwin(v7);
  sub_3C938();
  uint64_t v8 = sub_8E980();
  sub_7084();
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v13);
  uint64_t v14 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v17 = &v27[-v16];
  sub_47B6C(v3, v1);
  if (sub_5754(v1, 1, v8) == 1)
  {
    sub_3C708(v1, (uint64_t *)&unk_BC7F0);
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    int v28 = (int)v3;
    uint64_t v3 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 32);
    v3(v17, v1, v8);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v14, v17, v8);
    unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v22 = swift_allocObject() + v21;
    v3((unsigned char *)v22, (uint64_t)v14, v8);
    LOBYTE(v3) = v28;
    type metadata accessor for Localizations();
    sub_379DC(v0);
    uint64_t v18 = sub_4320C(0x53474E4954544553, 0xEF4E4F495443415FLL, v0);
    uint64_t v19 = v23;
    sub_3C708(v0, &qword_BBB40);
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v17, v8);
    uint64_t v20 = sub_3C244;
  }
  sub_379DC(v0);
  uint64_t v24 = sub_47D28(v0, (char)v3);
  uint64_t v26 = v25;
  sub_3C708(v0, &qword_BBB40);
  sub_39988(v24, v26, 0, 0, v18, v19);
  swift_bridgeObjectRelease();
  sub_18234((uint64_t)v20);
  swift_bridgeObjectRelease();
  sub_3C808();
}

void sub_39920()
{
  uint64_t v0 = self;
  sub_8E950(v1);
  id v3 = v2;
  [v0 openStandardURL:v2];
}

void sub_39988(uint64_t a1, NSString a2, uint64_t a3, NSString a4, uint64_t a5, NSString a6)
{
  id v12 = sub_37A90();
  uint64_t v13 = sub_3BDFC(v12, (SEL *)&selRef_buttonTitle);
  if (v14)
  {
    if (!a6)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    if (v13 == a5 && v14 == a6)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v16 = sub_8FF40();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        goto LABEL_32;
      }
    }
  }
  else if (a6)
  {
    goto LABEL_32;
  }
  id v17 = sub_37A90();
  uint64_t v18 = sub_3BDFC(v17, (SEL *)&selRef_message);
  if (!v19)
  {
    if (!a4) {
      goto LABEL_23;
    }
LABEL_32:
    id v27 = sub_37A90();
    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v33[4] = sub_3C1B8;
    v33[5] = v28;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 1107296256;
    void v33[2] = sub_3A478;
    void v33[3] = &unk_B0188;
    id v29 = _Block_copy(v33);
    swift_release();
    [v27 setButtonAction:v29];
    _Block_release(v29);

    id v30 = sub_37A90();
    if (a6) {
      a6 = sub_8F9A0();
    }
    [v30 setButtonTitle:a6];

    id v31 = sub_37A90();
    if (a4) {
      a4 = sub_8F9A0();
    }
    [v31 setMessage:a4];

    id v32 = sub_37A90();
    if (a2) {
      a2 = sub_8F9A0();
    }
    [v32 setTitle:a2];

    return;
  }
  if (!a4) {
    goto LABEL_31;
  }
  if (v18 == a3 && v19 == a4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = sub_8FF40();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_32;
    }
  }
LABEL_23:
  id v22 = sub_37A90();
  uint64_t v23 = sub_3BDFC(v22, (SEL *)&selRef_title);
  if (!v24)
  {
    if (!a2) {
      return;
    }
    goto LABEL_32;
  }
  if (!a2) {
    goto LABEL_31;
  }
  if (v23 != a1 || v24 != a2)
  {
    char v26 = sub_8FF40();
    swift_bridgeObjectRelease();
    if (v26) {
      return;
    }
    goto LABEL_32;
  }

  swift_bridgeObjectRelease();
}

void sub_39C98()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_3A748();
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = *(void (**)(void))(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_retryAction);
    sub_18224((uint64_t)v4);

    if (v4)
    {
      v4();
      sub_18234((uint64_t)v4);
    }
  }
}

void sub_39D50()
{
  sub_3C7BC();
  uint64_t v4 = sub_8F1E0();
  sub_7084();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_13868();
  uint64_t v19 = sub_8F210();
  sub_7084();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_3C8F8();
  uint64_t v11 = sub_8F1F0();
  sub_7084();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_B800();
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v11);
  uint64_t v15 = (void *)sub_8FBF0();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v11);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v0;
  v20[4] = sub_3C0CC;
  v20[5] = v16;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_3A478;
  void v20[3] = &unk_B00E8;
  id v17 = _Block_copy(v20);
  id v18 = v0;
  sub_8F200();
  sub_3C0EC();
  sub_5664(&qword_BC7D8);
  sub_3C42C((unint64_t *)&qword_BC7E0, &qword_BC7D8);
  sub_8FD40();
  sub_8FBE0();
  _Block_release(v17);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v19);
  swift_release();
  sub_3C808();
}

uint64_t sub_3A000(uint64_t a1)
{
  uint64_t v2 = sub_8F1E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_8F210();
  uint64_t v6 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry + 24);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry + 32);
  sub_820C((void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry), v10);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11))
  {
    char v12 = 4;
  }
  else if ([*(id *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry) isEnabled])
  {
    char v12 = 1;
  }
  else
  {
    uint64_t v13 = *(void **)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_cellularDataInquiry);
    if ([v13 isSupported] && !objc_msgSend(v13, "isEnabledForDevice"))
    {
      char v12 = 2;
    }
    else if ([v13 isSupported] {
           && (uint64_t v15 = v9[3],
    }
               uint64_t v14 = v9[4],
               sub_820C(v9, v15),
               (*(unsigned __int8 (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14) == 3)
           && ![v13 isEnabledForBundle])
    {
      char v12 = 3;
    }
    else
    {
      char v12 = 0;
    }
  }
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  uint64_t v16 = (void *)sub_8FBD0();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v12;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_3C1AC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A478;
  void aBlock[3] = &unk_B0160;
  uint64_t v19 = _Block_copy(aBlock);
  swift_release();
  sub_8F200();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_3C0EC();
  sub_5664(&qword_BC7D8);
  sub_3C42C((unint64_t *)&qword_BC7E0, &qword_BC7D8);
  sub_8FD40();
  sub_8FBE0();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v22);
}

void sub_3A3E4(char a1)
{
  if (a1 == 4)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    uint64_t v2 = (void *)Strong;
    sub_393DC();
  }
  else
  {
    swift_beginAccess();
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    if (!v3) {
      return;
    }
    uint64_t v2 = (void *)v3;
    sub_39640();
  }
}

uint64_t sub_3A478(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_3A4BC()
{
  sub_39D50();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_automaticRetry) == 1)
  {
    sub_820C((void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry), *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry + 24));
    uint64_t v1 = sub_3C8C0();
    if (v2(v1))
    {
      uint64_t v3 = *(void (**)(void))(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_retryAction);
      if (v3) {
        v3();
      }
    }
  }
}

void sub_3A544()
{
  uint64_t v0 = (void *)sub_8E910();
  sub_5664(&qword_BC7B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_91D00;
  *(void *)(inited + 32) = 0x707954726F727265;
  *(void *)(inited + 40) = 0xE900000000000065;
  swift_getObjectType();
  sub_5664(&qword_BC7B8);
  *(void *)(inited + 48) = sub_8F9E0();
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = 0xD000000000000010;
  *(void *)(inited + 72) = 0x800000000009C520;
  id v3 = [v0 description];
  uint64_t v4 = sub_8F9D0();
  uint64_t v6 = v5;

  *(void *)(inited + 80) = v4;
  *(void *)(inited + 88) = v6;
  *(void *)(inited + 96) = 0x707954746E657665;
  *(void *)(inited + 104) = 0xE900000000000065;
  *(void *)(inited + 112) = 1701273968;
  *(void *)(inited + 120) = 0xE400000000000000;
  uint64_t v7 = sub_8F950();
  uint64_t v8 = sub_3BD98(v0);
  if (v9)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_3BB90(v10, v11, 0xD000000000000012, 0x800000000009C540, isUniquelyReferenced_nonNull_native);
  }
  else
  {
    sub_156A0();
    sub_3B94C(0xD000000000000012, v13);
  }
  swift_bridgeObjectRelease();
  sub_3767C(v7);
  swift_bridgeObjectRelease();
  sub_3A7BC();
  swift_bridgeObjectRelease();
}

uint64_t sub_3A748()
{
  uint64_t v0 = sub_8F950();
  sub_3767C(v0);
  swift_bridgeObjectRelease();
  sub_3A7BC();

  return swift_bridgeObjectRelease();
}

void sub_3A7BC()
{
  sub_3C7BC();
  sub_8F410();
  sub_7084();
  __chkstk_darwin(v1);
  sub_3C8F8();
  sub_8F580();
  sub_7084();
  __chkstk_darwin(v2);
  sub_B800();
  uint64_t v3 = sub_8F650();
  sub_7084();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_B7F0();
  uint64_t v9 = v8 - v7;
  if (*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph))
  {
    sub_5664((uint64_t *)&unk_BC788);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_91D10;
    *(void *)(inited + 32) = 1701273968;
    *(void *)(inited + 40) = 0xE400000000000000;
    *(void *)(inited + 48) = 0x726F727245;
    *(void *)(inited + 56) = 0xE500000000000000;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 80) = 0x6570795465676170;
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 88) = 0xE800000000000000;
    *(void *)(inited + 96) = 0x726F727245534D41;
    *(void *)(inited + 104) = 0xE800000000000000;
    swift_retain();
    uint64_t v11 = sub_8F950();
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_3727C(v12, v11);
    sub_8F560();
    sub_8F770();
    sub_8F770();
    sub_8F400();
    sub_8F570();
    swift_release();
    swift_release();
    sub_7358();
    v13();
    sub_7358();
    v14();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  }
  sub_3C808();
}

void sub_3AA74()
{
}

void sub_3AAB4()
{
}

uint64_t type metadata accessor for ErrorViewController()
{
  return self;
}

id sub_3AB94(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a6)
  {
    NSString v13 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v13 = 0;
  }
  id v14 = objc_msgSend(v7, "initWithFrame:title:style:", v13, a7, a1, a2, a3, a4);

  return v14;
}

id sub_3AC30()
{
  NSString v1 = sub_8F9A0();
  swift_bridgeObjectRelease();
  NSString v2 = sub_8F9A0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_8E910();
  id v4 = [v0 initWithSubsystem:v1 category:v2 error:v3];
  swift_errorRelease();

  return v4;
}

id sub_3ACD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_8E920();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_3ADB4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_8FD80(*(void *)(v2 + 40));

  return sub_3AE70(a1, v4);
}

unint64_t sub_3ADF8(uint64_t a1, uint64_t a2)
{
  sub_8FFE0();
  sub_8FA00();
  Swift::Int v4 = sub_90000();

  return sub_3AF38(a1, a2, v4);
}

unint64_t sub_3AE70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10210(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_8FD90();
      sub_1C464((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_3AF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_8FF40() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        NSString v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_8FF40() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_3B01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a2;
}

uint64_t sub_3B05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10210(a3, a1);
  uint64_t v3 = sub_3C9E0();

  return sub_22210(v3, v4);
}

uint64_t sub_3B0A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_3B01C((uint64_t)(a2 + 2), *a1, a1[1], (uint64_t)(a1 + 2));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_3B0D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_3BE6C(a1, a2, a3, &v28);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_3BEA8(&v26);
  uint64_t v7 = *((void *)&v26 + 1);
  if (!*((void *)&v26 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_221F8();
    return swift_release();
  }
  while (1)
  {
    uint64_t v8 = v26;
    sub_22200(&v27, v25);
    uint64_t v9 = *a5;
    unint64_t v11 = sub_3ADF8(v8, v7);
    uint64_t v12 = *(void *)(v9 + 16);
    BOOL v13 = (v10 & 1) == 0;
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v14 = v10;
    if (*(void *)(v9 + 24) >= v12 + v13)
    {
      if (a4)
      {
        if (v10) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_5664(&qword_BBBE0);
        sub_8FE80();
        if (v14) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_3B2F4();
      unint64_t v15 = sub_3ADF8(v8, v7);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_17;
      }
      unint64_t v11 = v15;
      if (v14)
      {
LABEL_9:
        sub_22210((uint64_t)v25, (uint64_t)v24);
        sub_616C((uint64_t)v25);
        swift_bridgeObjectRelease();
        uint64_t v17 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v11);
        sub_616C((uint64_t)v17);
        sub_22200(v24, v17);
        goto LABEL_13;
      }
    }
    uint64_t v18 = (void *)*a5;
    *(void *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v19 = (uint64_t *)(v18[6] + 16 * v11);
    *uint64_t v19 = v8;
    v19[1] = v7;
    sub_22200(v25, (_OWORD *)(v18[7] + 32 * v11));
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_16;
    }
    _OWORD v18[2] = v22;
LABEL_13:
    sub_3BEA8(&v26);
    uint64_t v7 = *((void *)&v26 + 1);
    a4 = 1;
    if (!*((void *)&v26 + 1)) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = sub_8FF60();
  __break(1u);
  return result;
}

void sub_3B2F4()
{
  sub_3C87C();
  sub_5664(&qword_BC798);
  uint64_t v3 = sub_3C914();
  if (v1[2])
  {
    id v32 = v0;
    sub_3C950();
    uint64_t v34 = v6;
    if (v4 < 64) {
      uint64_t v7 = ~(-1 << v4);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    int64_t v33 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v9 = v3 + 64;
    swift_retain();
    int64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      char v16 = (uint64_t *)(v1[6] + 16 * i);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      uint64_t v19 = (_OWORD *)(v1[7] + 32 * i);
      if (v2)
      {
        sub_22200(v19, v35);
      }
      else
      {
        sub_22210((uint64_t)v19, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_8FFE0();
      sub_8FA00();
      unint64_t v20 = sub_90000() & ~(-1 << *(unsigned char *)(v3 + 32));
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) == 0)
      {
        sub_3C848();
        while (++v22 != v23 || (v21 & 1) == 0)
        {
          BOOL v24 = v22 == v23;
          if (v22 == v23) {
            uint64_t v22 = 0;
          }
          v21 |= v24;
          if (*(void *)(v9 + 8 * v22) != -1)
          {
            sub_3C834();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      sub_3C85C();
LABEL_31:
      sub_3C820();
      *(void *)(v9 + v25) |= v26;
      uint64_t v28 = (void *)(*(void *)(v3 + 48) + 16 * v27);
      *uint64_t v28 = v18;
      v28[1] = v17;
      sub_22200(v35, (_OWORD *)(*(void *)(v3 + 56) + 32 * v27));
      ++*(void *)(v3 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v13 >= v33) {
        goto LABEL_33;
      }
      unint64_t v14 = v34[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v33) {
          goto LABEL_33;
        }
        unint64_t v14 = v34[v10];
        if (!v14)
        {
          int64_t v15 = v13 + 2;
          if (v15 >= v33)
          {
LABEL_33:
            swift_release();
            uint64_t v0 = v32;
            if (v2)
            {
              sub_3CA2C();
              if (v30 != v31) {
                *uint64_t v34 = -1 << v29;
              }
              else {
                sub_5FE30(0, (unint64_t)(v29 + 63) >> 6, v34);
              }
              v1[2] = 0;
            }
            break;
          }
          unint64_t v14 = v34[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_41;
              }
              if (v10 >= v33) {
                goto LABEL_33;
              }
              unint64_t v14 = v34[v10];
              ++v15;
              if (v14) {
                goto LABEL_18;
              }
            }
          }
          int64_t v10 = v15;
        }
      }
LABEL_18:
      unint64_t v8 = (v14 - 1) & v14;
    }
  }
  swift_release();
  *uint64_t v0 = v3;
}

void sub_3B57C()
{
  sub_3C87C();
  sub_5664(&qword_BC830);
  uint64_t v3 = sub_3C914();
  if (v1[2])
  {
    sub_3C950();
    Swift::String v35 = v6;
    if (v4 < 64) {
      uint64_t v7 = ~(-1 << v4);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    int64_t v9 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v10 = v3 + 64;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v11 << 6))
    {
      uint64_t v18 = v1[6] + 40 * i;
      if (v2)
      {
        long long v19 = *(_OWORD *)v18;
        long long v20 = *(_OWORD *)(v18 + 16);
        uint64_t v39 = *(void *)(v18 + 32);
        long long v37 = v19;
        long long v38 = v20;
        sub_22200((_OWORD *)(v1[7] + 32 * i), v36);
      }
      else
      {
        sub_10210(v18, (uint64_t)&v37);
        sub_22210(v1[7] + 32 * i, (uint64_t)v36);
      }
      unint64_t v21 = sub_8FD80(*(void *)(v3 + 40)) & ~(-1 << *(unsigned char *)(v3 + 32));
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
      {
        sub_3C848();
        while (++v23 != v24 || (v22 & 1) == 0)
        {
          BOOL v25 = v23 == v24;
          if (v23 == v24) {
            uint64_t v23 = 0;
          }
          v22 |= v25;
          if (*(void *)(v10 + 8 * v23) != -1)
          {
            sub_3C834();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_3C85C();
LABEL_31:
      sub_3C820();
      *(void *)(v10 + v26) |= v27;
      uint64_t v29 = *(void *)(v3 + 48) + 40 * v28;
      long long v30 = v37;
      long long v31 = v38;
      *(void *)(v29 + 32) = v39;
      *(_OWORD *)uint64_t v29 = v30;
      *(_OWORD *)(v29 + 16) = v31;
      sub_22200(v36, (_OWORD *)(*(void *)(v3 + 56) + 32 * v28));
      ++*(void *)(v3 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_42;
      }
      if (v14 >= v9) {
        break;
      }
      int64_t v15 = v35;
      unint64_t v16 = v35[v14];
      ++v11;
      if (!v16)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v35[v11];
        if (!v16)
        {
          int64_t v17 = v14 + 2;
          if (v17 >= v9)
          {
LABEL_33:
            swift_release();
            if ((v2 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_36;
          }
          unint64_t v16 = v35[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_43;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = v35[v11];
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
LABEL_18:
      unint64_t v8 = (v16 - 1) & v16;
    }
    swift_release();
    int64_t v15 = v35;
    if ((v2 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    sub_3CA2C();
    if (v33 != v34) {
      *int64_t v15 = -1 << v32;
    }
    else {
      sub_5FE30(0, (unint64_t)(v32 + 63) >> 6, v15);
    }
    v1[2] = 0;
  }
LABEL_40:
  swift_release();
  *uint64_t v0 = v3;
}

double sub_3B81C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_3ADB4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_5664(&qword_BBD50);
    sub_8FE70(isUniquelyReferenced_nonNull_native, v10);
    sub_1C464(*(void *)(v12 + 48) + 40 * v6);
    sub_22200((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    sub_8FE90();
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_3B94C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_3ADF8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v3;
  uint64_t v9 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  Swift::Int v10 = *(void *)(v9 + 24);
  sub_5664((uint64_t *)&unk_BC7C0);
  sub_8FE70(isUniquelyReferenced_nonNull_native, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(v13 + 56) + 16 * v6);
  sub_8FE90();
  *uint64_t v3 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

_OWORD *sub_3BA5C(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_3ADB4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_5664(&qword_BBD50);
  if (!sub_8FE70(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_3ADB4(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    double result = (_OWORD *)sub_8FF60();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    sub_616C(v18[7] + 32 * v14);
    long long v19 = (_OWORD *)sub_3C9E0();
    return sub_22200(v19, v20);
  }
  else
  {
    sub_10210(a2, (uint64_t)v22);
    return sub_3BCD0(v14, (uint64_t)v22, a1, v18);
  }
}

uint64_t sub_3BB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  BOOL v12 = (void *)*v5;
  unint64_t v13 = sub_3ADF8(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v14 & 1) == 0;
  Swift::Int v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v18 = v13;
  char v19 = v14;
  sub_5664((uint64_t *)&unk_BC7C0);
  if (!sub_8FE70(a5 & 1, v17)) {
    goto LABEL_5;
  }
  unint64_t v20 = sub_3ADF8(a3, a4);
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_11:
    uint64_t result = sub_8FF60();
    __break(1u);
    return result;
  }
  unint64_t v18 = v20;
LABEL_5:
  char v22 = *v6;
  if (v19)
  {
    uint64_t v23 = (uint64_t *)(v22[7] + 16 * v18);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v23 = a1;
    v23[1] = a2;
  }
  else
  {
    sub_3BD4C(v18, a3, a4, a1, a2, v22);
    return swift_bridgeObjectRetain();
  }
  return result;
}

_OWORD *sub_3BCD0(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_22200(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_3BD4C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  long long v6 = (void *)(a6[6] + 16 * result);
  *long long v6 = a2;
  v6[1] = a3;
  char v7 = (void *)(a6[7] + 16 * result);
  *char v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_3BD98(void *a1)
{
  id v1 = [a1 localizedFailureReason];
  if (!v1) {
    return 0;
  }
  char v2 = v1;
  uint64_t v3 = sub_8F9D0();

  return v3;
}

uint64_t sub_3BDFC(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_8F9D0();

  return v4;
}

uint64_t sub_3BE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v8 = -1;
  }
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_3BEA8@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_22210(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v18 < v15)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  char v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_3C6B0((uint64_t)&v23, (uint64_t)v22, &qword_BC7A0);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_3C708((uint64_t)v21, &qword_BC7A8);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_3C094()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_3C0CC()
{
  return sub_3A000(*(void *)(v0 + 16));
}

uint64_t sub_3C0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_3C0E4()
{
  return swift_release();
}

unint64_t sub_3C0EC()
{
  unint64_t result = qword_BC7D0;
  if (!qword_BC7D0)
  {
    sub_8F1E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC7D0);
  }
  return result;
}

uint64_t sub_3C13C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_3C174()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_3C1AC()
{
  sub_3A3E4(*(unsigned char *)(v0 + 16));
}

void sub_3C1B8()
{
}

uint64_t sub_3C1C0()
{
  sub_8E980();
  sub_13858();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  sub_7358();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

void sub_3C244()
{
  sub_8E980();

  sub_39920();
}

void sub_3C2A4()
{
}

uint64_t sub_3C2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BC800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_3C314()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_3C354()
{
  return [*(id *)(v0 + 16) enqueueEvent:*(void *)(v0 + 24)];
}

void sub_3C364(void *a1, void *a2)
{
  uint64_t v3 = a1;
  id v4 = a2;
  AMSLogKey();
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_3C758;
  v8[3] = &unk_B0230;
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  id v10 = v4;
  id v5 = v9;
  id v6 = v4;
  dispatch_async(v3, v8);

  id v7 = v9;
}

uint64_t sub_3C42C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2517C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_3C470()
{
  unint64_t result = qword_BDA30;
  if (!qword_BDA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDA30);
  }
  return result;
}

uint64_t sub_3C4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    sub_10210(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v20);
    sub_22210(*(void *)(v3 + 56) + 32 * v10, (uint64_t)&v20[2] + 8);
    goto LABEL_23;
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v11 < v12)
  {
    unint64_t v13 = *(void *)(v4 + 8 * v11);
    if (v13)
    {
LABEL_7:
      uint64_t v9 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
      int64_t v7 = v11;
      goto LABEL_3;
    }
    int64_t v14 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v12)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_10:
        int64_t v11 = v14;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v12)
      {
        unint64_t v13 = *(void *)(v4 + 8 * (v5 + 3));
        if (v13)
        {
          int64_t v11 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v14 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v12)
        {
          unint64_t v13 = *(void *)(v4 + 8 * v14);
          if (v13) {
            goto LABEL_10;
          }
          int64_t v11 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v12)
          {
            unint64_t v13 = *(void *)(v4 + 8 * v11);
            if (v13) {
              goto LABEL_7;
            }
            int64_t v7 = v12 - 1;
            int64_t v15 = v5 + 6;
            while (v15 < v12)
            {
              unint64_t v13 = *(void *)(v4 + 8 * v15++);
              if (v13)
              {
                int64_t v11 = v15 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  unint64_t v16 = (void (*)(unsigned char *))v1[5];
  uint64_t result = sub_3C6B0((uint64_t)v20, (uint64_t)__src, &qword_BC838);
  if (__src[3])
  {
    memcpy(v18, __src, sizeof(v18));
    v16(v18);
    return sub_3C708((uint64_t)v18, (uint64_t *)&unk_BC840);
  }
  else
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_3C6B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_13858();
  uint64_t v4 = sub_3C9E0();
  v5(v4);
  return a2;
}

uint64_t sub_3C708(uint64_t a1, uint64_t *a2)
{
  sub_5664(a2);
  sub_13858();
  sub_7358();
  v3();
  return a1;
}

uint64_t sub_3C758(uint64_t a1)
{
  id v2 = (id)AMSSetLogKey();
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_3C7D4()
{
  v1._countAndFlagsBits = 0x2064696C61766E49;
  v1._object = (void *)0xEF203A7865676572;
  sub_8F370(v1);
}

uint64_t sub_3C870(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_3C898()
{
  return swift_allocObject();
}

uint64_t sub_3C8C0()
{
  return v0;
}

uint64_t sub_3C8F8()
{
  return 0;
}

uint64_t sub_3C914()
{
  return static _DictionaryStorage.resize(original:capacity:move:)(v1, v0, v2);
}

uint64_t sub_3C968(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 160) = v2;
  *(void *)(v3 - 184) = a1;
  *(void *)(v3 - 176) = a2;
  return sub_8F360();
}

uint64_t sub_3C988(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return sub_8F360();
}

uint64_t sub_3C9A8()
{
  return sub_8F380();
}

uint64_t sub_3C9E0()
{
  return v0;
}

uint64_t sub_3C9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _NSRange.init<A, B>(_:in:)(v6 - 136, v6 - 184, v5, a4, v4);
}

uint64_t sub_3CA0C(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return sub_8F360();
}

uint64_t ImpressionMetrics.hash(into:)()
{
  uint64_t v0 = sub_8F5D0();
  sub_7084();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F5E0();
  sub_3CE9C(&qword_BC850, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics.ID);
  sub_8F970();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v0);
}

uint64_t static ImpressionMetrics.== infix(_:_:)()
{
  uint64_t v0 = sub_8F5D0();
  sub_7084();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v12 - v7;
  sub_8F5E0();
  sub_8F5E0();
  char v9 = sub_8F5C0();
  unint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v5, v0);
  v10(v8, v0);
  return v9 & 1;
}

Swift::Int ImpressionMetrics.hashValue.getter()
{
  uint64_t v0 = sub_8F5D0();
  sub_7084();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8FFE0();
  sub_8F5E0();
  sub_3CE9C(&qword_BC850, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics.ID);
  sub_8F970();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  return sub_90000();
}

Swift::Int sub_3CD28()
{
  uint64_t v0 = sub_8F5D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8FFE0();
  sub_8F5E0();
  sub_3CE9C(&qword_BC850, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics.ID);
  sub_8F970();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_90000();
}

uint64_t sub_3CE54()
{
  return sub_3CE9C(&qword_BC858, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
}

uint64_t sub_3CE9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3CEE4()
{
  sub_3D530();
  sub_7084();
  __chkstk_darwin();
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (uint64_t v0 = sub_8F300(), !v1))
  {
    uint64_t v2 = sub_8F8E0();
    sub_2F948();
    uint64_t v5 = sub_70D0();
    sub_3D554(v5, v6);
    sub_7108();
    sub_7130();
    v7();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v8 = sub_3D568();
    v9(v8);
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = sub_3D568();
    v4(v3);
  }
  return v2;
}

uint64_t sub_3CFF0()
{
  sub_3D530();
  sub_7084();
  __chkstk_darwin(v0);
  sub_70A0();
  if ((sub_8F2F0() & 1) != 0 || (char v1 = sub_8F2C0(), v1 == 2))
  {
    sub_8F8E0();
    sub_2F948();
    uint64_t v2 = sub_70D0();
    sub_3D554(v2, v3);
    sub_7108();
    sub_7130();
    v4();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v5 = sub_71E0();
    v6(v5);
  }
  else
  {
    char v8 = v1;
    uint64_t v9 = sub_71E0();
    v10(v9);
    char v7 = v8 & 1;
  }
  return v7 & 1;
}

uint64_t sub_3D0F8()
{
  sub_3D530();
  sub_7084();
  __chkstk_darwin(v0);
  sub_70A0();
  if (sub_8F2F0() & 1) != 0 || (uint64_t v1 = sub_8F2A0(), (v2))
  {
    uint64_t v3 = sub_8F8E0();
    sub_2F948();
    uint64_t v6 = sub_70D0();
    sub_3D554(v6, v7);
    sub_7108();
    sub_7130();
    v8();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v9 = sub_71E0();
    v10(v9);
  }
  else
  {
    uint64_t v3 = v1;
    uint64_t v4 = sub_71E0();
    v5(v4);
  }
  return v3;
}

uint64_t sub_3D1F4()
{
  sub_3D530();
  sub_7084();
  __chkstk_darwin(v0);
  sub_70A0();
  if (sub_8F2F0() & 1) != 0 || (sub_8F2E0(), (v1))
  {
    sub_8F8E0();
    sub_2F948();
    uint64_t v5 = sub_70D0();
    sub_3D554(v5, v6);
    sub_7108();
    sub_7130();
    v7();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v8 = sub_71E0();
    return v9(v8);
  }
  else
  {
    uint64_t v2 = sub_71E0();
    return v3(v2);
  }
}

uint64_t sub_3D2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v7 = sub_5664((uint64_t *)&unk_BC7F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F320();
  sub_7084();
  __chkstk_darwin(v10);
  sub_8F330();
  if (sub_8F2F0()) {
    goto LABEL_4;
  }
  sub_8F2B0();
  uint64_t v11 = sub_8E980();
  if (sub_5754((uint64_t)v9, 1, v11) == 1)
  {
    sub_3D4D0((uint64_t)v9);
LABEL_4:
    sub_8F8E0();
    sub_2F948();
    sub_70D0();
    *uint64_t v12 = a1;
    v12[1] = a2;
    _OWORD v12[2] = a3;
    sub_7108();
    sub_7130();
    v13();
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v14 = sub_3D580();
    return v15(v14);
  }
  uint64_t v17 = sub_3D580();
  v18(v17);
  sub_7108();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v21, v9, v11);
}

uint64_t sub_3D4D0(uint64_t a1)
{
  uint64_t v2 = sub_5664((uint64_t *)&unk_BC7F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3D530()
{
  return sub_8F320();
}

void *sub_3D554(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = v4;
  a2[1] = v2;
  a2[2] = v3;
  return result;
}

uint64_t sub_3D568()
{
  return v0;
}

uint64_t sub_3D580()
{
  return v0;
}

uint64_t sub_3D598()
{
  sub_F040(0, &qword_BBD68);
  id v1 = v0;
  sub_5664(&qword_BC678);
  if (swift_dynamicCast())
  {
    sub_573C(v6, (uint64_t)&v8);
    uint64_t v2 = *((void *)&v9 + 1);
    uint64_t v3 = v10;
    sub_820C(&v8, *((uint64_t *)&v9 + 1));
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    sub_616C((uint64_t)&v8);
  }
  else
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_EF88((uint64_t)v6, &qword_BC680);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v4 = sub_24A08(0, 0, (uint64_t)&v8);
    sub_EF88((uint64_t)&v8, &qword_BC780);
  }
  return v4;
}

uint64_t sub_3D6AC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = sub_5664(&qword_BBBD8);
  sub_8F960();
  swift_getWitnessTable();
  return sub_8FA40();
}

uint64_t sub_3D788(uint64_t a1)
{
  sub_22210(a1, (uint64_t)v4);
  if ((sub_3DF1C() & 1) == 0 && (sub_3DF1C() & 1) == 0 && (sub_3DF1C() & 1) == 0 && (sub_3DF1C() & 1) == 0)
  {
    sub_F040(0, (unint64_t *)&qword_BC698);
    if (sub_3DF1C())
    {
    }
    else
    {
      if (!sub_3DF1C())
      {
        uint64_t v1 = 0;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v1 = 1;
LABEL_10:
  sub_616C((uint64_t)v4);
  return v1;
}

double sub_3D868@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((sub_3D788(a1) & 1) == 0)
  {
    sub_22210(a1, (uint64_t)v13);
    sub_5664(&qword_BC678);
    if (sub_3DF3C())
    {
      sub_573C(&v10, (uint64_t)v14);
      uint64_t v5 = v15;
      uint64_t v6 = v16;
      sub_820C(v14, v15);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      *(void *)(a2 + 24) = sub_5664(&qword_BBBD8);
      *(void *)a2 = v7;
    }
    else
    {
      uint64_t v12 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
      sub_EF88((uint64_t)&v10, &qword_BC680);
      sub_22210(a1, (uint64_t)v13);
      sub_5664(&qword_BC688);
      if (!sub_3DF3C())
      {
        uint64_t v12 = 0;
        long long v10 = 0u;
        long long v11 = 0u;
        sub_EF88((uint64_t)&v10, &qword_BC690);
        double result = 0.0;
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
        return result;
      }
      sub_573C(&v10, (uint64_t)v14);
      uint64_t v8 = v15;
      uint64_t v9 = v16;
      sub_820C(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    }
    sub_616C((uint64_t)v14);
    return result;
  }

  sub_22210(a1, a2);
  return result;
}

uint64_t sub_3DA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a5;
  uint64_t v41 = a1;
  uint64_t v37 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = TupleTypeMetadata2 - 8;
  __chkstk_darwin(TupleTypeMetadata2);
  long long v11 = (char *)&v32 - v10;
  uint64_t v12 = *(void *)(a4 - 8);
  __n128 v14 = __chkstk_darwin(v13);
  char v33 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(int *)(v9 + 56);
  uint64_t v17 = &v11[v16];
  uint64_t v36 = a2;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a3 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v34 = v18;
  Swift::String v35 = v20;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v20)(v11, a2, a3, v14);
  uint64_t v39 = v12;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v21 = v18;
  uint64_t v22 = v37;
  v32(v17, v21, v37);
  long long v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v24 = v33;
  v23(v33, v17, v22);
  BOOL v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v11, a3);
  uint64_t v26 = &v11[*(int *)(v9 + 56)];
  long long v38 = v26;
  v35(v11, v36, a3);
  uint64_t v27 = v26;
  uint64_t v28 = (void (*)(uint64_t *, char *, uint64_t))v32;
  v32(v27, v34, v22);
  sub_8FEF0();
  v25(v11, a3);
  sub_8F960();
  v42[3] = v22;
  uint64_t v29 = sub_8374(v42);
  v28(v29, v24, v22);
  sub_3D868((uint64_t)v42, (uint64_t)v43);
  sub_616C((uint64_t)v42);
  sub_23DB0((uint64_t)v43, (uint64_t)v44);
  long long v30 = *(void (**)(char *, uint64_t))(v39 + 8);
  v30(v24, v22);
  return ((uint64_t (*)(char *, uint64_t))v30)(v38, v22);
}

uint64_t sub_3DD00@<X0>(uint64_t a1@<X8>)
{
  return sub_3D6AC(a1);
}

uint64_t sub_3DD14@<X0>(uint64_t *a1@<X8>)
{
  sub_8FAD0();
  swift_getWitnessTable();
  uint64_t v2 = sub_8FA30();
  uint64_t result = sub_5664(&qword_BC860);
  a1[3] = result;
  *a1 = v2;
  return result;
}

uint64_t sub_3DDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_8FAD0();
  v8[3] = a2;
  uint64_t v6 = sub_8374(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v6, a1, a2);
  sub_3D868((uint64_t)v8, a3);
  return sub_616C((uint64_t)v8);
}

uint64_t sub_3DE5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_3DD14(a1);
}

uint64_t sub_3DE6C@<X0>(uint64_t *a1@<X8>)
{
  id v3 = v1;
  uint64_t v4 = sub_3D598();

  uint64_t result = sub_5664(&qword_BBBD8);
  a1[3] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_3DEBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_3DE6C(a1);
}

uint64_t sub_3DEE0(uint64_t a1, uint64_t a2)
{
  return sub_3DA08(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_3DF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3DDC4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_3DF1C()
{
  return swift_dynamicCast();
}

uint64_t sub_3DF3C()
{
  return swift_dynamicCast();
}

void sub_3DF5C()
{
  id v1 = [v0 window];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 frame];
    sub_3DFFC();
  }
}

void sub_3DFC8()
{
  [v0 contentSize];

  sub_3DFFC();
}

void sub_3DFFC()
{
  id v0 = [self currentDevice];
  [v0 userInterfaceIdiom];
}

BOOL sub_3E0DC()
{
  id v1 = [self currentDevice];
  id v2 = [v1 userInterfaceIdiom];

  if ((((unint64_t)v2 - 1) & 0xFFFFFFFFFFFFFFFBLL) != 0) {
    return 0;
  }
  id v4 = [v0 window];
  if (!v4) {
    return 1;
  }
  uint64_t v5 = v4;
  [v4 frame];
  double v7 = v6;

  return v7 >= 400.0;
}

uint64_t sub_3E1A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_8E980();
  sub_7084();
  uint64_t v29 = v4;
  __chkstk_darwin(v5);
  double v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_8F4B0();
  sub_7084();
  uint64_t v30 = v9;
  __chkstk_darwin(v10);
  sub_8EA70();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = (int *)type metadata accessor for LinkAction();
  uint64_t v32 = a1;
  uint64_t v13 = v31;
  sub_3AD8();
  if (v13)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v14();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v15();
  }
  else
  {
    long long v31 = v7;
    uint64_t v24 = v3;
    uint64_t v17 = *(uint64_t (**)(void))(v30 + 32);
    uint64_t v26 = v35 + v12[5];
    uint64_t v27 = v8;
    uint64_t v18 = v17();
    __chkstk_darwin(v18);
    *(&v24 - 2) = v11;
    *(&v24 - 1) = a1;
    sub_3F31C();
    sub_3B0C();
    uint64_t v25 = v35 + v12[6];
    uint64_t v19 = sub_BEB0((uint64_t)&v34, v25);
    __chkstk_darwin(v19);
    *(&v24 - 2) = v11;
    *(&v24 - 1) = 0;
    uint64_t v28 = 0;
    sub_3F31C();
    sub_3B0C();
    uint64_t v20 = (uint64_t)v31;
    uint64_t v21 = v35;
    sub_BEB0((uint64_t)&v33, v35 + v12[7]);
    sub_3D2F0(7107189, 0xE300000000000000, (uint64_t)v12, v20);
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v22();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v23();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v21, v20, v24);
  }
}

uint64_t sub_3E620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v13 + 16))(&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F490();
  uint64_t v14 = sub_8F4B0();
  return sub_56F8(a3, 0, 1, v14);
}

uint64_t sub_3E7D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_3E1A0(a1, a2);
}

uint64_t type metadata accessor for LinkAction()
{
  uint64_t result = qword_BC8C0;
  if (!qword_BC8C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3E834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3E620(a1, *(void *)(v2 + 16), a2);
}

uint64_t *sub_3E83C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8E980();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_8F4B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v12 + 24);
    if (v15)
    {
      uint64_t v16 = *((void *)v14 + 4);
      *((void *)v13 + 3) = v15;
      *((void *)v13 + 4) = v16;
      (**(void (***)(void))(v15 - 8))();
    }
    else
    {
      long long v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      *((void *)v13 + 4) = *((void *)v14 + 4);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 24);
    if (v22)
    {
      uint64_t v23 = *((void *)v21 + 4);
      *((void *)v20 + 3) = v22;
      *((void *)v20 + 4) = v23;
      (**(void (***)(void))(v22 - 8))();
    }
    else
    {
      long long v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v24;
      *((void *)v20 + 4) = *((void *)v21 + 4);
    }
  }
  return a1;
}

uint64_t sub_3E9FC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  if (*(void *)(v7 + 24)) {
    sub_616C(v7);
  }
  uint64_t result = a1 + a2[7];
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_3EAE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  if (v14)
  {
    uint64_t v15 = *(void *)(v13 + 32);
    *(void *)(v12 + 24) = v14;
    *(void *)(v12 + 32) = v15;
    (**(void (***)(void))(v14 - 8))();
  }
  else
  {
    long long v16 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v16;
    *(void *)(v12 + 32) = *(void *)(v13 + 32);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 24);
  if (v20)
  {
    uint64_t v21 = *(void *)(v19 + 32);
    *(void *)(v18 + 24) = v20;
    *(void *)(v18 + 32) = v21;
    (**(void (***)(void))(v20 - 8))();
  }
  else
  {
    long long v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
  }
  return a1;
}

uint64_t sub_3EC54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  if (*(void *)(a1 + v11 + 24))
  {
    if (v14)
    {
      sub_64C8((uint64_t *)v12, v13);
      goto LABEL_8;
    }
    sub_616C(v12);
  }
  else if (v14)
  {
    *(void *)(v12 + 24) = v14;
    *(void *)(v12 + 32) = v13[4];
    (**(void (***)(uint64_t, long long *))(v14 - 8))(v12, (long long *)v13);
    goto LABEL_8;
  }
  long long v15 = *(_OWORD *)v13;
  long long v16 = *((_OWORD *)v13 + 1);
  *(void *)(v12 + 32) = v13[4];
  *(_OWORD *)uint64_t v12 = v15;
  *(_OWORD *)(v12 + 16) = v16;
LABEL_8:
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  uint64_t v20 = *((void *)v19 + 3);
  if (!*(void *)(a1 + v17 + 24))
  {
    if (v20)
    {
      *(void *)(v18 + 24) = v20;
      *(void *)(v18 + 32) = *((void *)v19 + 4);
      (**(void (***)(uint64_t, long long *))(v20 - 8))(v18, v19);
      return a1;
    }
LABEL_14:
    long long v21 = *v19;
    long long v22 = v19[1];
    *(void *)(v18 + 32) = *((void *)v19 + 4);
    *(_OWORD *)uint64_t v18 = v21;
    *(_OWORD *)(v18 + 16) = v22;
    return a1;
  }
  if (!v20)
  {
    sub_616C(v18);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v18, (uint64_t *)v19);
  return a1;
}

uint64_t sub_3EE24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  return a1;
}

uint64_t sub_3EF18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if (*(void *)(a1 + v11 + 24)) {
    sub_616C(v12);
  }
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_616C(a1 + v15);
  }
  long long v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_3F030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3F044);
}

uint64_t sub_3F044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8E980();
  sub_B704();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return sub_5754(v9, a2, v8);
  }
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v14 = v13 - 1;
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t sub_3F108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3F11C);
}

void sub_3F11C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_8E980();
  sub_B704();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_8F4B0();
    sub_B704();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  sub_56F8(v11, a2, a2, v10);
}

uint64_t sub_3F1D0()
{
  uint64_t result = sub_8E980();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_8F4B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_3F2A4(uint64_t a1)
{
  unint64_t result = sub_3F2CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_3F2CC()
{
  unint64_t result = qword_BC2C0;
  if (!qword_BC2C0)
  {
    type metadata accessor for LinkAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC2C0);
  }
  return result;
}

uint64_t sub_3F334()
{
  id v0 = self;
  sub_8E950(v1);
  uint64_t v3 = v2;
  LODWORD(v0) = [v0 openStandardURL:v2];

  sub_5664(&qword_BB0A0);
  if (v0) {
    return sub_8F7C0();
  }
  sub_3F418();
  swift_allocError();
  return sub_8F7B0();
}

uint64_t type metadata accessor for LinkActionImplementation()
{
  return self;
}

uint64_t sub_3F400()
{
  return sub_3F334();
}

unint64_t sub_3F418()
{
  unint64_t result = qword_BC9C0;
  if (!qword_BC9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC9C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LinkActionImplementation.PerformError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3F500);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkActionImplementation.PerformError()
{
  return &type metadata for LinkActionImplementation.PerformError;
}

unint64_t sub_3F53C()
{
  unint64_t result = qword_BC9C8;
  if (!qword_BC9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC9C8);
  }
  return result;
}

unint64_t sub_3F58C()
{
  unint64_t result = qword_BC9D0;
  if (!qword_BC9D0)
  {
    type metadata accessor for ListItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC9D0);
  }
  return result;
}

uint64_t type metadata accessor for ListItem()
{
  uint64_t result = qword_BCA30;
  if (!qword_BCA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3F624(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AE618;
  v6._object = a2;
  unint64_t v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_3F670(char a1)
{
  uint64_t result = 1819043171;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C6C65436B6E696CLL;
      break;
    case 2:
      uint64_t result = 0x656C746974627573;
      break;
    case 3:
      uint64_t result = 0x6C654365756C6176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_3F708(unsigned __int8 *a1, char *a2)
{
  return sub_54FC4(*a1, *a2);
}

Swift::Int sub_3F714()
{
  return sub_55944(*v0);
}

uint64_t sub_3F71C()
{
  return sub_55E4C();
}

Swift::Int sub_3F724(uint64_t a1)
{
  return sub_567F4(a1, *v1);
}

uint64_t sub_3F72C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_3F624(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_3F75C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_3F670(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_3F788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C518(v2 + *(int *)(a1 + 44), a2, &qword_BAAD0);
}

uint64_t sub_3F7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C518(v2 + *(int *)(a1 + 40), a2, &qword_BDD70);
}

uint64_t sub_3F7E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  uint64_t v8 = swift_allocObject();
  sub_8EBF0();
  swift_allocObject();
  uint64_t v9 = type metadata accessor for ListItem();
  sub_41150();
  char v10 = sub_905C();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    uint64_t v12 = sub_41140();
    v13(v12);
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    return (*(uint64_t (**)(uint64_t))(v14 + 8))(a1);
  }
  else
  {
    *(unsigned char *)a2 = v10;
    sub_41150();
    uint64_t v11 = sub_3CFF0();
    *(unsigned char *)(a2 + 1) = v11 & 1;
    __chkstk_darwin(v11);
    sub_4115C();
    sub_41150();
    sub_3B74(v15, v16, v17, v18, v19, v20, v21, v22);
    *(void *)(a2 + 8) = v23;
    v36[0] = sub_3CEE4();
    v36[1] = v24;
    uint64_t v25 = sub_8FDB0();
    v36[7] = &v34;
    __chkstk_darwin(v25);
    sub_4115C();
    sub_41150();
    sub_3BC4();
    uint64_t v26 = sub_8F5F0();
    sub_56F8((uint64_t)v7, 0, 1, v26);
    uint64_t v27 = sub_1C4C0((uint64_t)v7, a2 + *(int *)(v9 + 40), &qword_BDD70);
    __chkstk_darwin(v27);
    sub_E1B4();
    sub_3B40();
    uint64_t v28 = sub_1C4C0((uint64_t)v36, a2 + 16, (uint64_t *)&unk_BAAE0);
    __chkstk_darwin(v28);
    *((void *)&v34 - 2) = v8;
    *((void *)&v34 - 1) = a1;
    sub_41150();
    sub_3B0C();
    uint64_t v29 = sub_1C4C0((uint64_t)&v35, a2 + *(int *)(v9 + 44), &qword_BAAD0);
    __chkstk_darwin(v29);
    sub_E1B4();
    sub_3B40();
    sub_8F320();
    sub_B6C4();
    uint64_t v30 = sub_41140();
    v31(v30);
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v32 + 8))(a1);
    return sub_1C4C0((uint64_t)&v34, a2 + 56, (uint64_t *)&unk_BAAE0);
  }
}

char *sub_3FDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, __n128))(v14 + 16))(v13, a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = sub_351B8((uint64_t)v13, (uint64_t)v9);
  *a3 = result;
  return result;
}

uint64_t sub_3FF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v13 + 16))(&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F5B0();
  uint64_t v14 = sub_8F5F0();
  return sub_56F8(a3, 0, 1, v14);
}

uint64_t sub_4010C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_3F7E0(a1, a2);
}

char *sub_40124@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  return sub_3FDC8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_4012C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3FF58(a1, *(void *)(v2 + 16), a2);
}

uint64_t getEnumTagSinglePayload for ListItem.ListItemConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ListItem.ListItemConfiguration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x40288);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListItem.ListItemConfiguration()
{
  return &type metadata for ListItem.ListItemConfiguration;
}

uint64_t sub_402C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    BOOL v7 = (_OWORD *)(a1 + 16);
    uint64_t v8 = a2 + 2;
    uint64_t v9 = a2[5];
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v10 = a2[6];
      *(void *)(v4 + 40) = v9;
      *(void *)(v4 + 48) = v10;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(v4 + 16, (uint64_t)(a2 + 2), v9);
    }
    else
    {
      long long v12 = *((_OWORD *)a2 + 2);
      *BOOL v7 = *v8;
      *(_OWORD *)(v4 + 32) = v12;
      *(void *)(v4 + 48) = a2[6];
    }
    uint64_t v13 = (_OWORD *)(v4 + 56);
    uint64_t v14 = a2 + 7;
    uint64_t v15 = a2[10];
    if (v15)
    {
      uint64_t v16 = a2[11];
      *(void *)(v4 + 80) = v15;
      *(void *)(v4 + 88) = v16;
      (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
    }
    else
    {
      long long v17 = *(_OWORD *)(a2 + 9);
      *uint64_t v13 = *v14;
      *(_OWORD *)(v4 + 72) = v17;
      *(void *)(v4 + 88) = a2[11];
    }
    long long v18 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(v4 + 120) = v18;
    (**(void (***)(uint64_t, uint64_t))(v18 - 8))(v4 + 96, (uint64_t)(a2 + 12));
    uint64_t v19 = *(int *)(a3 + 40);
    uint64_t v20 = (void *)(v4 + v19);
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_8F5F0();
    if (sub_5754((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = sub_5664(&qword_BDD70);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      sub_56F8((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v24 = *(int *)(a3 + 44);
    uint64_t v25 = v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24 + 24);
    if (v27)
    {
      uint64_t v28 = *(void *)(v26 + 32);
      *(void *)(v25 + 24) = v27;
      *(void *)(v25 + 32) = v28;
      (**(void (***)(void))(v27 - 8))();
    }
    else
    {
      long long v29 = *(_OWORD *)(v26 + 16);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *(_OWORD *)(v25 + 16) = v29;
      *(void *)(v25 + 32) = *(void *)(v26 + 32);
    }
  }
  return v4;
}

uint64_t sub_4054C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }
  if (*(void *)(a1 + 80)) {
    sub_616C(a1 + 56);
  }
  sub_616C(a1 + 96);
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 44);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_40630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  unsigned int v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = a2 + 16;
  uint64_t v8 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, v7, v8);
  }
  else
  {
    long long v10 = *(_OWORD *)(v7 + 16);
    *unsigned int v6 = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(void *)(a1 + 48) = *(void *)(v7 + 32);
  }
  uint64_t v11 = (_OWORD *)(a1 + 56);
  long long v12 = (_OWORD *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 80);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v13;
    *(void *)(a1 + 88) = v14;
    (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 72);
    _OWORD *v11 = *v12;
    *(_OWORD *)(a1 + 72) = v15;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  long long v16 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v16;
  (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 96, a2 + 96);
  uint64_t v17 = *(int *)(a3 + 40);
  long long v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_8F5F0();
  if (sub_5754((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_5664(&qword_BDD70);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    sub_56F8((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v22 = *(int *)(a3 + 44);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22 + 24);
  if (v25)
  {
    uint64_t v26 = *(void *)(v24 + 32);
    *(void *)(v23 + 24) = v25;
    *(void *)(v23 + 32) = v26;
    (**(void (***)(void))(v25 - 8))();
  }
  else
  {
    long long v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
  }
  return a1;
}

uint64_t sub_4086C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      sub_64C8((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    sub_616C(a1 + 16);
  }
  else if (v6)
  {
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v8 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v9)
    {
      sub_64C8((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
      goto LABEL_15;
    }
    sub_616C(a1 + 56);
  }
  else if (v9)
  {
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
    goto LABEL_15;
  }
  long long v10 = *(_OWORD *)(a2 + 56);
  long long v11 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 72) = v11;
LABEL_15:
  sub_64C8((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_8F5F0();
  int v16 = sub_5754((uint64_t)v13, 1, v15);
  int v17 = sub_5754((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      sub_56F8((uint64_t)v13, 0, 1, v15);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_20:
    uint64_t v19 = sub_5664(&qword_BDD70);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_21:
  uint64_t v20 = *(int *)(a3 + 44);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (long long *)(a2 + v20);
  uint64_t v23 = *((void *)v22 + 3);
  if (!*(void *)(a1 + v20 + 24))
  {
    if (v23)
    {
      *(void *)(v21 + 24) = v23;
      *(void *)(v21 + 32) = *((void *)v22 + 4);
      (**(void (***)(uint64_t, long long *))(v23 - 8))(v21, v22);
      return a1;
    }
LABEL_27:
    long long v24 = *v22;
    long long v25 = v22[1];
    *(void *)(v21 + 32) = *((void *)v22 + 4);
    *(_OWORD *)uint64_t v21 = v24;
    *(_OWORD *)(v21 + 16) = v25;
    return a1;
  }
  if (!v23)
  {
    sub_616C(v21);
    goto LABEL_27;
  }
  sub_64C8((uint64_t *)v21, (uint64_t *)v22);
  return a1;
}

uint64_t sub_40B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = *(int *)(a3 + 40);
  long long v10 = (void *)(a1 + v9);
  long long v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = v8;
  uint64_t v12 = sub_8F5F0();
  if (sub_5754((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_5664(&qword_BDD70);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    sub_56F8((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  return a1;
}

uint64_t sub_40CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    sub_616C(a1 + 16);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  if (*(void *)(a1 + 80)) {
    sub_616C(a1 + 56);
  }
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_616C(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = *(int *)(a3 + 40);
  long long v10 = (void *)(a1 + v9);
  long long v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_8F5F0();
  int v13 = sub_5754((uint64_t)v10, 1, v12);
  int v14 = sub_5754((uint64_t)v11, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      sub_56F8((uint64_t)v10, 0, 1, v12);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
LABEL_10:
    uint64_t v16 = sub_5664(&qword_BDD70);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_11:
  uint64_t v17 = *(int *)(a3 + 44);
  uint64_t v18 = a1 + v17;
  if (*(void *)(a1 + v17 + 24)) {
    sub_616C(a1 + v17);
  }
  long long v19 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v18 + 16) = v19;
  *(void *)(v18 + 32) = *(void *)(a2 + v17 + 32);
  return a1;
}

uint64_t sub_40EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_40F0C);
}

uint64_t sub_40F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 120);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_40F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_40FAC);
}

uint64_t sub_40FAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 120) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 40);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

void sub_41030()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_410F4()
{
  unint64_t result = qword_BCA80;
  if (!qword_BCA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCA80);
  }
  return result;
}

uint64_t sub_41140()
{
  return v0;
}

id sub_41170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_41788(a1, a3);

  return [v3 layoutIfNeeded];
}

uint64_t sub_411AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ListItemComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_41214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ListItemComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_4127C()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_412F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_41374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_413F0()
{
  return sub_41480(&qword_BC3B0, (void (*)(uint64_t))type metadata accessor for ListItem);
}

uint64_t sub_41438()
{
  return sub_41480(&qword_BB4D8, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_41480(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_414C8(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin17ListItemComponent_editMenu] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ListItemComponent();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

void sub_4155C()
{
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17ListItemComponent_editMenu] = 0;

  sub_8FEA0();
  __break(1u);
}

uint64_t sub_415E4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17ListItemComponent_editMenu) = a1;
  return _objc_release_x1();
}

uint64_t sub_415F8()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ListItemComponent();
  objc_msgSendSuper2(&v4, "prepareForReuse");
  v3[3] = sub_8F0B0();
  v3[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_8374(v3);
  sub_8FC50();
  sub_8FC10();
  if (sub_42368(v0))
  {
    swift_bridgeObjectRelease();
    sub_423C8();
    Class isa = sub_8FA60().super.isa;
    swift_bridgeObjectRelease();
    [v0 setGestureRecognizers:isa];
  }
  else
  {
    [v0 setGestureRecognizers:0];
  }
  sub_415E4(0);
  sub_8FC30();
  swift_bridgeObjectRelease();
  return sub_8FC40();
}

void sub_41788(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v2 = sub_5664(&qword_BCB60);
  __chkstk_darwin(v2 - 8);
  sub_22620();
  uint64_t v50 = v3;
  sub_4243C();
  sub_8EFB0();
  sub_7084();
  uint64_t v51 = v5;
  uint64_t v52 = v4;
  __chkstk_darwin(v4);
  sub_22620();
  uint64_t v49 = v6;
  sub_4243C();
  uint64_t v48 = sub_8EF70();
  sub_7084();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_22620();
  uint64_t v47 = v10;
  sub_4243C();
  sub_8EFC0();
  sub_7084();
  uint64_t v54 = v12;
  uint64_t v55 = v11;
  __chkstk_darwin(v11);
  sub_22620();
  uint64_t v53 = v13;
  sub_4243C();
  uint64_t v59 = sub_8F0B0();
  sub_7084();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v47 - v20;
  swift_getKeyPath();
  sub_5664((uint64_t *)&unk_BCB68);
  sub_8F430();
  swift_release();
  switch(LOBYTE(v60[0]))
  {
    case 2:
      sub_8F060();
      break;
    case 3:
      sub_8F0A0();
      break;
    default:
      sub_8F080();
      break;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v18, v59);
  swift_getKeyPath();
  sub_42408();
  swift_release();
  switch(LOBYTE(v60[0]))
  {
    case 0:
    case 2:
    case 3:
      char v22 = sub_8FF40();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_8;
      }
      id v23 = 0;
      break;
    case 1:
      swift_bridgeObjectRelease();
LABEL_8:
      id v23 = [self linkColor];
      break;
    default:
      JUMPOUT(0);
  }
  swift_getKeyPath();
  sub_42408();
  swift_release();
  id v24 = v58;
  long long v25 = (objc_class *)[v58 traitCollection];
  id v57 = v23;
  sub_41DF0((uint64_t)v60, v25, v23);

  sub_EF88((uint64_t)v60, (uint64_t *)&unk_BAAE0);
  swift_getKeyPath();
  sub_42408();
  swift_release();
  uint64_t v26 = (objc_class *)[v24 traitCollection];
  sub_41F10((uint64_t)v60, v26);

  sub_EF88((uint64_t)v60, (uint64_t *)&unk_BAAE0);
  uint64_t v27 = v59;
  v60[3] = v59;
  v60[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v28 = sub_8374(v60);
  (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(v28, v21, v27);
  sub_8FC10();
  swift_getKeyPath();
  sub_42408();
  swift_release();
  if (LOBYTE(v60[0]) == 1)
  {
    uint64_t v29 = v47;
    uint64_t v30 = v48;
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v47, enum case for UICellAccessory.DisplayedState.always(_:), v48);
    uint64_t v31 = sub_8EF80();
    sub_56F8(v50, 1, 1, v31);
    uint64_t v32 = v49;
    sub_8EFA0();
    uint64_t v33 = v53;
    sub_8EF90();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v32, v52);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v29, v30);
    uint64_t v34 = sub_8FC30();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2E804(0, *(void *)(v34 + 16) + 1, 1, v34);
      uint64_t v34 = v45;
    }
    unint64_t v36 = *(void *)(v34 + 16);
    unint64_t v35 = *(void *)(v34 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_2E804(v35 > 1, v36 + 1, 1, v34);
      uint64_t v34 = v46;
    }
    *(void *)(v34 + 16) = v36 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 32))(v34+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v36, v33, v55);
    sub_8FC40();
  }
  swift_getKeyPath();
  sub_42408();
  swift_release();
  uint64_t v37 = v60[0];
  if (v60[0])
  {
    id v38 = objc_allocWithZone((Class)type metadata accessor for EditMenu());
    uint64_t v39 = v56;
    swift_retain();
    uint64_t v40 = sub_3439C(v37, v39, v58);
    sub_415E4((uint64_t)v40);

    uint64_t v41 = sub_42424();
    v42(v41);
  }
  else
  {
    uint64_t v43 = sub_42424();
    v44(v43);
  }
}

uint64_t sub_41DF0(uint64_t a1, objc_class *a2, void *a3)
{
  sub_422AC(a1, (uint64_t)__dst);
  if (!__dst[3])
  {
    sub_EF88((uint64_t)__dst, (uint64_t *)&unk_BAAE0);
    goto LABEL_6;
  }
  sub_5664(&qword_BCB80);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    bzero(v7, 0x88uLL);
    return sub_EF88((uint64_t)v7, &qword_BCB78);
  }
  if (v7[16])
  {
    memcpy(__dst, v7, sizeof(__dst));
    swift_bridgeObjectRetain();
    sub_8F090();
    uint64_t v5 = (void (*)(void *, void))sub_8F050();
    sub_420A0((uint64_t)__dst, a2, a3);
    v5(v7, 0);
    return sub_42314((uint64_t)__dst);
  }
  return sub_EF88((uint64_t)v7, &qword_BCB78);
}

uint64_t sub_41F10(uint64_t a1, objc_class *a2)
{
  sub_422AC(a1, (uint64_t)__dst);
  if (!__dst[3])
  {
    sub_EF88((uint64_t)__dst, (uint64_t *)&unk_BAAE0);
    goto LABEL_6;
  }
  sub_5664(&qword_BCB80);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    bzero(v5, 0x88uLL);
    return sub_EF88((uint64_t)v5, &qword_BCB78);
  }
  if (v5[16])
  {
    memcpy(__dst, v5, sizeof(__dst));
    swift_bridgeObjectRetain();
    sub_8F000();
    uint64_t v3 = (void (*)(void *, void))sub_8F070();
    sub_420A0((uint64_t)__dst, a2, 0);
    v3(v5, 0);
    return sub_42314((uint64_t)__dst);
  }
  return sub_EF88((uint64_t)v5, &qword_BCB78);
}

id sub_42024()
{
  return sub_42030((SEL *)&selRef_dealloc);
}

id sub_42030(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ListItemComponent();
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t type metadata accessor for ListItemComponent()
{
  return self;
}

unint64_t sub_420A0(uint64_t a1, objc_class *a2, void *a3)
{
  uint64_t v6 = sub_8F010();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - v10;
  if (sub_8FC00())
  {
    if (*(unsigned char *)a1 == 5) {
      uint64_t v12 = 4;
    }
    else {
      uint64_t v12 = sub_8EC20();
    }
    sub_421E0(v12, (uint64_t)v11);
  }
  else
  {
    if (*(unsigned char *)(a1 + 24) == 5) {
      uint64_t v13 = 4;
    }
    else {
      uint64_t v13 = sub_8EC20();
    }
    sub_421E0(v13, (uint64_t)v8);
  }
  sub_8F040();
  uint64_t v14 = *(void **)(a1 + 32);
  if (v14 || (uint64_t v14 = a3) != 0)
  {
    id v15 = v14;
    sub_8F030();
  }
  v16.super.Class isa = a2;
  unint64_t result = sub_8EB90(v16);
  if (result) {
    return sub_8F020();
  }
  return result;
}

uint64_t sub_421E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)&enum case for UIListContentConfiguration.TextProperties.TextAlignment.center(_:);
      break;
    case 3:
      uint64_t v3 = (unsigned int *)&enum case for UIListContentConfiguration.TextProperties.TextAlignment.justified(_:);
      break;
    default:
      uint64_t v3 = (unsigned int *)&enum case for UIListContentConfiguration.TextProperties.TextAlignment.natural(_:);
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_8F010();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

uint64_t sub_422AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664((uint64_t *)&unk_BAAE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_42314(uint64_t a1)
{
  return a1;
}

uint64_t sub_42368(void *a1)
{
  id v1 = [a1 gestureRecognizers];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_423C8();
  uint64_t v3 = sub_8FA70();

  return v3;
}

unint64_t sub_423C8()
{
  unint64_t result = qword_BCB88;
  if (!qword_BCB88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BCB88);
  }
  return result;
}

uint64_t sub_42408()
{
  return sub_8F430();
}

uint64_t sub_42424()
{
  return v0;
}

uint64_t sub_4243C()
{
  return 0;
}

id sub_42448(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator;
  id v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  uint64_t v5 = v1;
  id v6 = [v4 init];
  [v6 setActivityIndicatorViewStyle:100];
  *(void *)&v1[v3] = v6;
  uint64_t v7 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)AMSUICommonView) init];
  v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style] = a1;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for LoadingViewController();
  return objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
}

void sub_42518()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator;
  id v2 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  [v2 setActivityIndicatorViewStyle:100];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)AMSUICommonView) init];

  sub_8FEA0();
  __break(1u);
}

id sub_42638()
{
  id v1 = [v0 parentViewController];
  if (v1)
  {
    id v2 = v1;
    self;
    if (!swift_dynamicCastObjCClass())
    {
      id v5 = [v2 navigationItem];

      return v5;
    }
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for LoadingViewController();
  id v3 = objc_msgSendSuper2(&v6, "navigationItem");

  return v3;
}

void sub_426FC()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for LoadingViewController();
  objc_msgSendSuper2(&v4, "loadView");
  id v1 = [v0 view];
  id v2 = objc_msgSend(self, "ams_clear");
  [v1 setBackgroundColor:v2];

  id v3 = [v0 view];
  [v3 setUserInteractionEnabled:0];
}

void sub_42810()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LoadingViewController();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_42998();
}

void sub_42890()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for LoadingViewController();
  objc_msgSendSuper2(&v11, "viewWillLayoutSubviews");
  id v1 = *(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView];
  id v2 = [v0 view];
  [v2 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
}

void sub_42998()
{
  id v1 = [v0 navigationItem];
  objc_msgSend(v1, "ams_configureWithTransparentBackground");

  sub_42C08();

  sub_429F4();
}

void sub_429F4()
{
  id v1 = v0;
  id v2 = [v0 view];
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator;
  [v2 addSubview:*(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator]];

  id v4 = *(id *)&v1[v3];
  sub_898EC(0, 0, 1);

  [*(id *)&v1[v3] startAnimating];
  [*(id *)&v1[v3] setAlpha:0.0];
  double v5 = dbl_94088[v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style]];
  double v6 = self;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9[4] = sub_431FC;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  long long v9[2] = sub_3A478;
  v9[3] = &unk_B0500;
  double v8 = _Block_copy(v9);
  swift_release();
  [v6 animateWithDuration:0 delay:v8 options:0 animations:0.5 completion:v5];
  _Block_release(v8);
}

void sub_42B8C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator);

    [v2 setAlpha:1.0];
  }
}

void sub_42C08()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = [v0 view];
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView;
  [v2 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView]];

  int v4 = v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style];
  if (v4 == 2)
  {
    double v6 = *(void **)&v0[v3];
    uint64_t v7 = self;
    id v8 = v6;
    id v9 = objc_msgSend(v7, "ams_dim");
LABEL_9:
    id v12 = v9;
    [v8 setBackgroundColor:v12];

    [*(id *)&v0[v3] setAlpha:0.0];
    uint64_t v13 = self;
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = ObjectType;
    v17[4] = sub_431DC;
    v17[5] = v15;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_3A478;
    uint64_t v17[3] = &unk_B04D8;
    UITraitCollection v16 = _Block_copy(v17);
    swift_release();
    [v13 animateWithDuration:0 delay:v16 options:0 animations:0.5 completion:0.0];
    _Block_release(v16);
    return;
  }
  if (v4 == 1)
  {
    double v10 = *(void **)&v0[v3];
    objc_super v11 = self;
    id v8 = v10;
    id v9 = objc_msgSend(v11, "ams_primaryBackground");
    goto LABEL_9;
  }
  if (!v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style])
  {
    double v5 = *(void **)&v0[v3];
    [v5 setAlpha:0.0];
  }
}

void sub_42E58()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (unsigned char *)Strong;
    id v2 = *(void **)(Strong + OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView);
    double v3 = 1.0;
    if (!v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style]) {
      double v3 = 0.0;
    }
    [v2 setAlpha:v3];
  }
}

void sub_42EDC()
{
}

void sub_42F1C()
{
}

id sub_42F74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LoadingViewController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LoadingViewController.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x430E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingViewController.Style()
{
  return &type metadata for LoadingViewController.Style;
}

unint64_t sub_43120()
{
  unint64_t result = qword_BCC30;
  if (!qword_BCC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCC30);
  }
  return result;
}

uint64_t sub_4316C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_431A4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_431DC()
{
}

uint64_t sub_431E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_431F4()
{
  return swift_release();
}

void sub_431FC()
{
}

uint64_t sub_4320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_5664(&qword_BCCE0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5664(&qword_BBB40);
  __chkstk_darwin(v8 - 8);
  double v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21A28(a3, (uint64_t)v10);
  uint64_t v11 = sub_8F750();
  if (sub_5754((uint64_t)v10, 1, v11) == 1)
  {
    sub_434E0((uint64_t)v10);
    uint64_t v12 = 0;
  }
  else
  {
    if (qword_BA9D8 != -1) {
      swift_once();
    }
    sub_8F740();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    sub_8F730();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = v19[1];
  }
  NSString v13 = sub_8F9A0();
  if (qword_BA9E0 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_BCC40;
  if (v12)
  {
    NSString v15 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  id v16 = [self localizedStringForKey:v13 bundle:v14 table:0 languageCode:v15];

  uint64_t v17 = sub_8F9D0();
  return v17;
}

uint64_t type metadata accessor for Localizations()
{
  return self;
}

uint64_t sub_434E0(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BBB40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NSString sub_43540()
{
  NSString result = sub_8F9A0();
  qword_BCC38 = (uint64_t)result;
  return result;
}

id sub_4357C()
{
  sub_1AAC0();
  id result = sub_435D0();
  if (result) {
    qword_BCC40 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

id sub_435D0()
{
  NSString v0 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() bundleWithIdentifier:v0];

  return v1;
}

uint64_t sub_43634()
{
  os_log_type_t v0 = sub_8FB90();

  return sub_43740(v0);
}

uint64_t sub_4366C()
{
  os_log_type_t v0 = sub_8FB80();

  return sub_43740(v0);
}

uint64_t sub_436A4()
{
  sub_43914();
  uint64_t result = sub_8FD00();
  qword_BCCE8 = result;
  return result;
}

uint64_t sub_43708()
{
  os_log_type_t v0 = sub_8FB70();

  return sub_43740(v0);
}

uint64_t sub_43740(os_log_type_t a1)
{
  if (qword_BA9E8 != -1) {
    swift_once();
  }
  uint64_t result = os_log_type_enabled((os_log_t)qword_BCCE8, a1);
  if (result)
  {
    sub_8F350();
    uint64_t v3 = sub_8F3C0();
    uint64_t v5 = v4;
    sub_5664(&qword_BCD88);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_92840;
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_438C8();
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v5;
    sub_8ED20();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_4386C()
{
  os_log_type_t v0 = sub_8FB60();

  return sub_43740(v0);
}

uint64_t type metadata accessor for Log()
{
  return self;
}

unint64_t sub_438C8()
{
  unint64_t result = qword_BCD90;
  if (!qword_BCD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCD90);
  }
  return result;
}

unint64_t sub_43914()
{
  unint64_t result = qword_BCD98;
  if (!qword_BCD98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BCD98);
  }
  return result;
}

unint64_t sub_43958()
{
  unint64_t result = qword_BCDA0;
  if (!qword_BCDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCDA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkInterface(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkInterface(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x43AF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterface()
{
  return &type metadata for NetworkInterface;
}

id sub_43B30()
{
  id result = [self sharedDefaultEvaluator];
  if (result)
  {
    id v1 = result;
    uint64_t v2 = swift_allocObject();
    sub_43BE0(v1);
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_43B98(unint64_t a1)
{
  if (a1 < 5) {
    return (a1 + 1);
  }
  else {
    return 1;
  }
}

NSString sub_43BA8()
{
  NSString result = sub_8F9A0();
  qword_BCDA8 = (uint64_t)result;
  return result;
}

uint64_t sub_43BE0(void *a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  swift_getKeyPath();
  swift_allocObject();
  swift_weakInit();
  id v4 = a1;
  uint64_t v5 = sub_8E930();

  swift_release();
  swift_release();
  unsigned int v6 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = v5;

  return v2;
}

id sub_43CB8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 path];
  *a2 = result;
  return result;
}

uint64_t sub_43CF4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_43D4C();
    return swift_release();
  }
  return result;
}

void sub_43D4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_8F390();
  __chkstk_darwin(v3 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_92E90;
  uint64_t v18 = v2;
  v17[0] = v0;
  swift_retain();
  id v4 = (id)AMSLogKey();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_8F9D0();
    uint64_t v8 = v7;

    sub_8F380();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    sub_8F370(v19);
    sub_820C(v17, (uint64_t)v18);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = DynamicType;
    sub_8F360();
    sub_8250((uint64_t)v15);
    v20._countAndFlagsBits = 5972026;
    v20._object = (void *)0xE300000000000000;
    sub_8F370(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v15[0] = v6;
    v15[1] = v8;
    sub_8F360();
    sub_8250((uint64_t)v15);
    v10._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    sub_8F370(v21);
    sub_820C(v17, (uint64_t)v18);
    uint64_t v11 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v15[0] = v11;
    sub_8F360();
    sub_8250((uint64_t)v15);
    v10._countAndFlagsBits = 58;
  }
  v10._object = (void *)0xE100000000000000;
  sub_8F370(v10);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v17);
  sub_8F340();
  sub_8F340();
  BOOL v12 = sub_441C8();
  uint64_t v18 = (ValueMetadata *)&type metadata for Bool;
  LOBYTE(v17[0]) = v12;
  sub_8F3B0();
  sub_8250((uint64_t)v17);
  sub_8F340();
  char v13 = sub_44220();
  uint64_t v18 = &type metadata for NetworkInterface;
  LOBYTE(v17[0]) = v13;
  sub_8F3B0();
  sub_8250((uint64_t)v17);
  sub_43708();
  swift_bridgeObjectRelease();
  id v14 = [self defaultCenter];
  if (qword_BA9F0 != -1) {
    swift_once();
  }
  objc_msgSend(v14, "postNotificationName:object:", qword_BCDA8, v1, v15[0]);
}

uint64_t sub_44124()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 24);
  if (v2)
  {
    id v3 = v2;
    sub_8E900();
  }
  return v1;
}

uint64_t sub_44170()
{
  sub_44124();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for NWPathNetworkInquiry()
{
  return self;
}

BOOL sub_441C8()
{
  id v1 = [*(id *)(v0 + 16) path];
  unint64_t v2 = (unint64_t)[v1 status];

  return (v2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

uint64_t sub_44220()
{
  id v1 = [*(id *)(v0 + 16) path];
  id v2 = [v1 interface];

  if (!v2) {
    return 0;
  }
  id v3 = [v2 type];

  return sub_43B98((unint64_t)v3);
}

id sub_442B4(SEL *a1)
{
  id v3 = [*(id *)(v1 + 16) path];
  id v4 = [v3 *a1];

  return v4;
}

uint64_t sub_44304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v5;
  if (qword_BA9F0 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_BCDA8;
  void v16[3] = v10;
  v16[0] = v5;
  sub_18294(a1, (uint64_t)v15);
  uint64_t v12 = type metadata accessor for CommonNetworkObservation();
  swift_allocObject();
  id v13 = v11;
  swift_retain();
  swift_retain();
  uint64_t result = sub_2A0E0(v13, v16, (uint64_t)v15, a2, a3);
  a4[3] = v12;
  a4[4] = (uint64_t)&off_AFB10;
  *a4 = result;
  return result;
}

BOOL sub_44428()
{
  return sub_441C8();
}

uint64_t sub_44450()
{
  return sub_44220();
}

unint64_t sub_44474()
{
  return (unint64_t)sub_442B4((SEL *)&selRef_isExpensive) & 1;
}

unint64_t sub_444A4()
{
  return (unint64_t)sub_442B4((SEL *)&selRef_isConstrained) & 1;
}

uint64_t sub_444D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_44304(a1, a2, a3, a4);
}

const char *sub_444F8()
{
  return "path";
}

uint64_t sub_44508()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_44540()
{
  return sub_43CF4();
}

uint64_t destroy for OnboardingPageDestination(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_616C(a1 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96))
  {
    sub_616C(a1 + 72);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OnboardingPageDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 72, a2 + 72, v10);
    uint64_t v12 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v13;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
  }
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  uint64_t v15 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v15;
  uint64_t v16 = *(void *)(a2 + 160);
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v16;
  *(void *)(a1 + 168) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OnboardingPageDestination(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_64C8((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 72);
  uint64_t v5 = (long long *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v6)
    {
      sub_64C8((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_448B4(a1 + 72);
      long long v8 = *(_OWORD *)(a2 + 88);
      long long v7 = *(_OWORD *)(a2 + 104);
      long long v9 = *v5;
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(_OWORD *)(a1 + 88) = v8;
      *(_OWORD *)(a1 + 104) = v7;
      _OWORD *v4 = v9;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 96) = v6;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 72, a2 + 72);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 88);
    long long v12 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 88) = v11;
    *(_OWORD *)(a1 + 104) = v12;
    _OWORD *v4 = v10;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_448B4(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for OnboardingPageDestination(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t assignWithTake for OnboardingPageDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  sub_616C(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 72);
  long long v7 = (_OWORD *)(a2 + 72);
  if (!*(void *)(a1 + 96)) {
    goto LABEL_5;
  }
  if (!*(void *)(a2 + 96))
  {
    sub_448B4(a1 + 72);
LABEL_5:
    long long v10 = *(_OWORD *)(a2 + 88);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 88) = v10;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    goto LABEL_6;
  }
  sub_616C(a1 + 72);
  long long v8 = *(_OWORD *)(a2 + 88);
  *uint64_t v6 = *v7;
  *(_OWORD *)(a1 + 88) = v8;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingPageDestination(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingPageDestination(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingPageDestination()
{
  return &type metadata for OnboardingPageDestination;
}

ValueMetadata *type metadata accessor for OnboardingPageDestination.Button()
{
  return &type metadata for OnboardingPageDestination.Button;
}

uint64_t sub_44AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_3CEE4();
  if (v1)
  {
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v5();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    return v6();
  }
  else
  {
    *(void *)(a1 + 144) = v3;
    *(void *)(a1 + 152) = v4;
    __chkstk_darwin(v3);
    sub_45168();
    sub_3F64();
    long long v8 = v31[1];
    *(_OWORD *)(a1 + 16) = v31[0];
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 48) = v31[2];
    *(void *)(a1 + 64) = v32;
    *(void *)a1 = sub_3CEE4();
    *(void *)(a1 + 8) = v9;
    uint64_t v10 = sub_45144();
    *(void *)(a1 + 128) = v10;
    *(void *)(a1 + 136) = v11;
    __chkstk_darwin(v10);
    sub_45168();
    sub_3E14();
    sub_450DC((uint64_t)v31, a1 + 72);
    uint64_t v12 = sub_3CEE4();
    uint64_t v14 = v13;
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v22(v15, v16, v17, v18, v19, v20, v21);
    sub_8F320();
    sub_B6C4();
    sub_7358();
    uint64_t result = v30(v23, v24, v25, v26, v27, v28, v29);
    *(void *)(a1 + 160) = v12;
    *(void *)(a1 + 168) = v14;
  }
  return result;
}

uint64_t sub_44EA8@<X0>(uint64_t a1@<X8>)
{
  return sub_44AB4(a1);
}

uint64_t sub_44EC0@<X0>(uint64_t a1@<X8>)
{
  sub_8EA70();
  swift_allocObject();
  sub_3B0C();
  if (v1)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v3();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v4();
  }
  else
  {
    sub_573C(&v11, a1);
    uint64_t v6 = sub_45144();
    uint64_t v8 = v7;
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v9();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    uint64_t result = v10();
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v8;
  }
  return result;
}

uint64_t sub_450B4@<X0>(uint64_t a1@<X8>)
{
  return sub_44EC0(a1);
}

void sub_450CC()
{
}

void sub_450D4()
{
}

uint64_t sub_450DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BCEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_45144()
{
  return sub_3CEE4();
}

id sub_4517C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_8F750();
  sub_7084();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_B7F0();
  uint64_t v11 = v10 - v9;
  sub_81CC();
  uint64_t v12 = v2;
  sub_8F550();
  *(void *)&v12[OBJC_IVAR____TtC19CoreDynamicUIPlugin28OnboardingPageViewController_account] = v17;
  sub_8F560();
  sub_8F770();
  uint64_t v13 = sub_8F720();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  *(void *)&v12[OBJC_IVAR____TtC19CoreDynamicUIPlugin28OnboardingPageViewController_bag] = v13;
  *(void *)&v12[OBJC_IVAR____TtC19CoreDynamicUIPlugin28OnboardingPageViewController_objectGraph] = a2;
  sub_2ECD0(a1, (uint64_t)&v12[OBJC_IVAR____TtC19CoreDynamicUIPlugin28OnboardingPageViewController_destination]);
  swift_retain();

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for OnboardingPageViewController();
  id v14 = objc_msgSendSuper2(&v16, "init");
  swift_release();
  sub_2ED2C(a1);
  return v14;
}

void sub_452EC()
{
}

void sub_45358()
{
  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for OnboardingPageViewController();
  objc_msgSendSuper2(&v37, "viewDidLoad");
  uint64_t v1 = self;
  unint64_t v2 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin28OnboardingPageViewController_destination];
  NSString v3 = sub_8F9A0();
  id v4 = [v1 linkWithBundleIdentifier:v3];

  if (v4)
  {
    [v4 setModalPresentationStyle:0];
    NSString v5 = (NSString)*((void *)v2 + 21);
    id v6 = v4;
    if (v5) {
      NSString v5 = sub_8F9A0();
    }
    [v4 setDisplayLanguage:v5];
  }
  uint64_t v27 = v0;
  uint64_t v7 = *((void *)v2 + 16);
  uint64_t v8 = *((void *)v2 + 17);
  uint64_t v9 = *((void *)v2 + 18);
  uint64_t v10 = *((void *)v2 + 19);
  uint64_t v11 = (uint64_t)(v2 + 72);
  uint64_t v13 = *((void *)v2 + 7);
  uint64_t v12 = *((void *)v2 + 8);
  sub_46248(v11, (uint64_t)&aBlock);
  uint64_t v26 = v11;
  if (v33)
  {
    uint64_t v15 = v35;
    uint64_t v14 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_448B4((uint64_t)&aBlock);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_EF88((uint64_t)&aBlock, &qword_BCEC0);
    uint64_t v15 = 0;
    uint64_t v14 = 0;
  }
  id v16 = objc_allocWithZone((Class)AMSUIOnboardingViewController);
  id v25 = v4;
  id v17 = sub_462B0(0, v7, v8, v9, v10, v13, v12, v15, v14, v4);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v34 = sub_46404;
  uint64_t v35 = v18;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_EA30;
  uint64_t v33 = &unk_B0750;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  [v17 setPrimaryButtonCallback:v19];
  _Block_release(v19);
  sub_46248(v26, (uint64_t)&aBlock);
  if (v33)
  {
    sub_18294((uint64_t)&aBlock, (uint64_t)v28);
    sub_448B4((uint64_t)&aBlock);
    sub_573C(v28, (uint64_t)v29);
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_18294((uint64_t)v29, (uint64_t)v28);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    sub_573C(v28, v21 + 24);
    uint64_t v34 = sub_46464;
    uint64_t v35 = v21;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    uint64_t v32 = sub_EA30;
    uint64_t v33 = &unk_B07A0;
    char v22 = _Block_copy(&aBlock);
    swift_release();
    [v17 setSecondaryButtonCallback:v22];
    _Block_release(v22);
    sub_616C((uint64_t)v29);
  }
  else
  {
    sub_EF88((uint64_t)&aBlock, &qword_BCEC0);
  }
  [v27 setChildViewController:v17];
  id v23 = [v17 view];
  if (v23)
  {
    uint64_t v24 = v23;
    sub_89BCC(0, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  }
  else
  {
    __break(1u);
  }
}

void sub_4576C()
{
  uint64_t v0 = sub_8F390();
  __chkstk_darwin(v0 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v2 = (void *)Strong;
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v15 = type metadata accessor for OnboardingPageViewController();
    v14[0] = v2;
    id v3 = v2;
    id v4 = (id)AMSLogKey();
    if (v4)
    {
      NSString v5 = v4;
      uint64_t v6 = sub_8F9D0();
      uint64_t v8 = v7;

      sub_8F380();
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      sub_8F370(v16);
      sub_820C(v14, v15);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v12[0] = DynamicType;
      sub_8F360();
      sub_EF88((uint64_t)v12, &qword_BC780);
      v17._countAndFlagsBits = 5972026;
      v17._object = (void *)0xE300000000000000;
      sub_8F370(v17);
      uint64_t MetatypeMetadata = &type metadata for String;
      v12[0] = v6;
      v12[1] = v8;
      sub_8F360();
      sub_EF88((uint64_t)v12, &qword_BC780);
      v10._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      sub_8F370(v18);
      sub_820C(v14, v15);
      uint64_t v11 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v12[0] = v11;
      sub_8F360();
      sub_EF88((uint64_t)v12, &qword_BC780);
      v10._countAndFlagsBits = 58;
    }
    v10._object = (void *)0xE100000000000000;
    sub_8F370(v10);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v14);
    sub_8F340();
    sub_43634();
    swift_bridgeObjectRelease();
    sub_45F04((uint64_t)v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin28OnboardingPageViewController_destination + 16);
  }
  else
  {
    type metadata accessor for Log();
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_92840;
    sub_8F340();
    sub_4366C();
    swift_bridgeObjectRelease();
  }
}

void sub_45B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_8F390();
  __chkstk_darwin(v4 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v19 = type metadata accessor for OnboardingPageViewController();
    v18[0] = v6;
    id v7 = v6;
    id v8 = (id)AMSLogKey();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_8F9D0();
      uint64_t v12 = v11;

      sub_8F380();
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      sub_8F370(v20);
      sub_820C(v18, v19);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v16[0] = DynamicType;
      sub_8F360();
      sub_EF88((uint64_t)v16, &qword_BC780);
      v21._countAndFlagsBits = 5972026;
      v21._object = (void *)0xE300000000000000;
      sub_8F370(v21);
      uint64_t MetatypeMetadata = &type metadata for String;
      v16[0] = v10;
      v16[1] = v12;
      sub_8F360();
      sub_EF88((uint64_t)v16, &qword_BC780);
      v14._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      sub_8F370(v22);
      sub_820C(v18, v19);
      uint64_t v15 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v16[0] = v15;
      sub_8F360();
      sub_EF88((uint64_t)v16, &qword_BC780);
      v14._countAndFlagsBits = 58;
    }
    v14._object = (void *)0xE100000000000000;
    sub_8F370(v14);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v18);
    sub_8F340();
    sub_43634();
    swift_bridgeObjectRelease();
    sub_45F04(a3);
  }
  else
  {
    type metadata accessor for Log();
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_92840;
    sub_8F340();
    sub_4366C();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_45F04(uint64_t a1)
{
  uint64_t v3 = sub_8EC80();
  __chkstk_darwin(v3 - 8);
  sub_B7F0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_8F650();
  sub_7084();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_B7F0();
  uint64_t v13 = v12 - v11;
  sub_8ECA0();
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin28OnboardingPageViewController_objectGraph);
  sub_8F560();
  sub_8F770();
  uint64_t v15 = *(void *)&v18[0];
  sub_8F770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v13, v7);
  uint64_t v16 = sub_5664((uint64_t *)&unk_BCEB0);
  sub_56F8(v6, 0, 1, v16);
  memset(v18, 0, sizeof(v18));
  char v19 = -1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, _OWORD *))(*(void *)v15 + 216))(a1, v6, v14, v18);
  swift_release();
  swift_release();
  sub_EF88((uint64_t)v18, &qword_BB600);
  sub_EFE4(v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
}

void sub_460EC()
{
}

void sub_4612C()
{
}

id sub_46184()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingPageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for OnboardingPageViewController()
{
  return self;
}

uint64_t sub_46248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BCEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_462B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  NSString v11 = sub_8F9A0();
  swift_bridgeObjectRelease();
  NSString v12 = sub_8F9A0();
  swift_bridgeObjectRelease();
  NSString v13 = sub_8F9A0();
  swift_bridgeObjectRelease();
  if (a9)
  {
    NSString v14 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v14 = 0;
  }
  id v15 = [v17 initWithHeaderImage:a1 titleText:v11 descriptionText:v12 primaryButtonText:v13 secondaryButtonText:v14 privacyLinkController:a10];

  return v15;
}

uint64_t sub_463CC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_46404()
{
}

uint64_t sub_4640C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_4641C()
{
  return swift_release();
}

uint64_t sub_46424()
{
  swift_release();
  sub_616C(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_46464(uint64_t a1)
{
  sub_45B14(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_46478@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (int *)type metadata accessor for PrivacySplashAction();
  uint64_t v11 = sub_3CEE4();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    uint64_t v13 = sub_41140();
    v14(v13);
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    return (*(uint64_t (**)(uint64_t))(v15 + 8))(a1);
  }
  else
  {
    *a2 = v11;
    a2[1] = v12;
    uint64_t v17 = sub_3CEE4();
    uint64_t v33 = a1;
    uint64_t v30 = v9;
    a2[2] = v17;
    a2[3] = v18;
    __chkstk_darwin(v17);
    sub_47328();
    uint64_t v19 = v33;
    *(void *)(v20 - 16) = v33;
    sub_3AD8();
    uint64_t v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))((char *)a2 + v10[6], v8, v5);
    __chkstk_darwin(v21);
    sub_47328();
    *(void *)(v22 - 16) = v30;
    *(void *)(v22 - 8) = v19;
    sub_191F4();
    uint64_t v23 = sub_BEB0((uint64_t)&v32, (uint64_t)a2 + v10[7]);
    __chkstk_darwin(v23);
    sub_47328();
    uint64_t v24 = v33;
    *(void *)(v25 - 16) = v30;
    *(void *)(v25 - 8) = v24;
    sub_191F4();
    sub_8F320();
    sub_B6C4();
    uint64_t v26 = sub_41140();
    v27(v26);
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v28 + 8))(v24);
    return sub_BEB0((uint64_t)&v31, (uint64_t)a2 + v10[8]);
  }
}

uint64_t sub_46904@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_46478(a1, a2);
}

uint64_t type metadata accessor for PrivacySplashAction()
{
  uint64_t result = qword_BCF20;
  if (!qword_BCF20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_46964(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_8F4B0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *((void *)v16 + 4);
      *((void *)v15 + 3) = v17;
      *((void *)v15 + 4) = v18;
      (**(void (***)(void))(v17 - 8))();
    }
    else
    {
      long long v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((void *)v15 + 4) = *((void *)v16 + 4);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 24);
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 4);
      *((void *)v22 + 3) = v24;
      *((void *)v22 + 4) = v25;
      (**(void (***)(void))(v24 - 8))();
    }
    else
    {
      long long v26 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v26;
      *((void *)v22 + 4) = *((void *)v23 + 4);
    }
  }
  return v4;
}

uint64_t sub_46B1C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  if (*(void *)(v6 + 24)) {
    sub_616C(v6);
  }
  uint64_t result = a1 + a2[8];
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

void *sub_46BDC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_8F4B0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)((char *)a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *((void *)v15 + 4);
    *((void *)v14 + 3) = v16;
    *((void *)v14 + 4) = v17;
    (**(void (***)(void))(v16 - 8))();
  }
  else
  {
    long long v18 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v18;
    *((void *)v14 + 4) = *((void *)v15 + 4);
  }
  uint64_t v19 = a3[8];
  long long v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)((char *)a2 + v19 + 24);
  if (v22)
  {
    uint64_t v23 = *((void *)v21 + 4);
    *((void *)v20 + 3) = v22;
    *((void *)v20 + 4) = v23;
    (**(void (***)(void))(v22 - 8))();
  }
  else
  {
    long long v24 = *((_OWORD *)v21 + 1);
    *(_OWORD *)long long v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v24;
    *((void *)v20 + 4) = *((void *)v21 + 4);
  }
  return a1;
}

void *sub_46D44(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = *(void *)((char *)a2 + v10 + 24);
  if (*(void *)((char *)a1 + v10 + 24))
  {
    if (v13)
    {
      sub_64C8((uint64_t *)v11, v12);
      goto LABEL_8;
    }
    sub_616C(v11);
  }
  else if (v13)
  {
    *(void *)(v11 + 24) = v13;
    *(void *)(v11 + 32) = v12[4];
    (**(void (***)(uint64_t, char *))(v13 - 8))(v11, (char *)v12);
    goto LABEL_8;
  }
  long long v14 = *(_OWORD *)v12;
  long long v15 = *((_OWORD *)v12 + 1);
  *(void *)(v11 + 32) = v12[4];
  *(_OWORD *)uint64_t v11 = v14;
  *(_OWORD *)(v11 + 16) = v15;
LABEL_8:
  uint64_t v16 = a3[8];
  uint64_t v17 = (uint64_t)a1 + v16;
  long long v18 = (char *)a2 + v16;
  uint64_t v19 = *((void *)v18 + 3);
  if (!*(void *)((char *)a1 + v16 + 24))
  {
    if (v19)
    {
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = *((void *)v18 + 4);
      (**(void (***)(uint64_t, char *))(v19 - 8))(v17, v18);
      return a1;
    }
LABEL_14:
    long long v20 = *(_OWORD *)v18;
    long long v21 = *((_OWORD *)v18 + 1);
    *(void *)(v17 + 32) = *((void *)v18 + 4);
    *(_OWORD *)uint64_t v17 = v20;
    *(_OWORD *)(v17 + 16) = v21;
    return a1;
  }
  if (!v19)
  {
    sub_616C(v17);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v17, (uint64_t *)v18);
  return a1;
}

_OWORD *sub_46F18(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v11;
  long long v14 = (char *)a2 + v11;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  return a1;
}

void *sub_46FD8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_8F4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (uint64_t)a1 + v12;
  long long v14 = (char *)a2 + v12;
  if (*(void *)((char *)a1 + v12 + 24)) {
    sub_616C(v13);
  }
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *((void *)v14 + 4);
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  if (*(void *)((char *)a1 + v16 + 24)) {
    sub_616C((uint64_t)a1 + v16);
  }
  long long v18 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v18;
  *((void *)v17 + 4) = *(void *)((char *)a2 + v16 + 32);
  return a1;
}

uint64_t sub_470D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_470E8);
}

uint64_t sub_470E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_8F4B0();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_47170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_47184);
}

uint64_t sub_47184(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_47204()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_472B0(uint64_t a1)
{
  unint64_t result = sub_472D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_472D8()
{
  unint64_t result = qword_BC2F8;
  if (!qword_BC2F8)
  {
    type metadata accessor for PrivacySplashAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC2F8);
  }
  return result;
}

uint64_t sub_47338(uint64_t *a1)
{
  uint64_t v3 = sub_8F390();
  __chkstk_darwin(v3 - 8);
  sub_5664(&qword_BB0A0);
  uint64_t v4 = sub_8F820();
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v29 = (void *)type metadata accessor for PrivacySplashActionImplementation();
  aBlock[0] = v1;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_8F9D0();
    uint64_t v9 = v8;

    sub_8F380();
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    sub_8F370(v33);
    sub_83F8();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_47B4C(MetatypeMetadata);
    sub_8250((uint64_t)v32);
    v34._countAndFlagsBits = 5972026;
    v34._object = (void *)0xE300000000000000;
    sub_8F370(v34);
    v32[3] = &type metadata for String;
    v32[0] = v7;
    v32[1] = v9;
    sub_8F360();
    sub_8250((uint64_t)v32);
    v11._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    sub_8F370(v35);
    sub_83F8();
    uint64_t v12 = swift_getMetatypeMetadata();
    sub_47B4C(v12);
    sub_8250((uint64_t)v32);
    v11._countAndFlagsBits = 58;
  }
  v11._object = (void *)0xE100000000000000;
  sub_8F370(v11);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)aBlock);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  sub_478F4();
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  swift_bridgeObjectRetain();
  id v15 = sub_477F8(v13, v14);
  if (!v15)
  {
    sub_47934();
    swift_allocError();
    *long long v24 = 1;
    uint64_t v25 = sub_8F7B0();
LABEL_12:
    swift_release();
    return v25;
  }
  uint64_t v16 = v15;
  uint64_t v17 = a1[3];
  if (v17)
  {
    uint64_t v18 = a1[2];
    swift_bridgeObjectRetain();
    sub_479A0(v18, v17, v16);
    swift_bridgeObjectRelease();
  }
  sub_8EC70();
  sub_8F560();
  uint64_t v19 = sub_8F770();
  long long v20 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)aBlock[0] + 88))(v19);
  if (!v20
    || (long long v21 = v20,
        id v22 = [v20 topViewController],
        v21,
        !v22))
  {
    sub_47934();
    swift_allocError();
    unsigned char *v26 = 0;
    uint64_t v25 = sub_8F7B0();
    swift_release();

    goto LABEL_12;
  }
  [v16 setPresentingViewController:v22];
  swift_weakInit();
  swift_weakDestroy();
  uint64_t v30 = sub_47980;
  uint64_t v31 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A478;
  uint64_t v29 = &unk_B07E8;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 setDismissHandler:v23];
  _Block_release(v23);
  [v16 present];

  swift_release();
  return v4;
}

id sub_477F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v2 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = [(id)swift_getObjCClassFromMetadata() presenterForPrivacySplashWithIdentifier:v2];

  return v3;
}

uint64_t sub_47868()
{
  memset(v1, 0, sizeof(v1));
  sub_8F7F0();
  return sub_EF34((uint64_t)v1);
}

uint64_t type metadata accessor for PrivacySplashActionImplementation()
{
  return self;
}

uint64_t sub_478D0(uint64_t *a1)
{
  return sub_47338(a1);
}

unint64_t sub_478F4()
{
  unint64_t result = qword_BD028;
  if (!qword_BD028)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BD028);
  }
  return result;
}

unint64_t sub_47934()
{
  unint64_t result = qword_BD030;
  if (!qword_BD030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD030);
  }
  return result;
}

uint64_t sub_47980()
{
  return sub_47868();
}

uint64_t sub_47988(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_47998()
{
  return swift_release();
}

void sub_479A0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8F9A0();
  [a3 setDisplayLanguage:v4];
}

unsigned char *storeEnumTagSinglePayload for PrivacySplashActionImplementation.PresentationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x47AC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacySplashActionImplementation.PresentationError()
{
  return &type metadata for PrivacySplashActionImplementation.PresentationError;
}

unint64_t sub_47B00()
{
  unint64_t result = qword_BD038;
  if (!qword_BD038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD038);
  }
  return result;
}

uint64_t sub_47B4C(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return sub_8F360();
}

uint64_t sub_47B6C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5664((uint64_t *)&unk_BC7F0);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  if (a1 - 2 < 2)
  {
    id v10 = [self settingsURL];
    if (v10)
    {
      Swift::String v11 = v10;
      sub_8E960();

      uint64_t v12 = sub_8E980();
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v12 = sub_8E980();
      uint64_t v13 = 1;
    }
    sub_56F8((uint64_t)v6, v13, 1, v12);
    uint64_t v20 = (uint64_t)v6;
    return sub_47EB8(v20, a2);
  }
  if (a1)
  {
    id v16 = [self settingsURL];
    if (v16)
    {
      uint64_t v17 = v16;
      sub_8E960();

      uint64_t v18 = sub_8E980();
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v18 = sub_8E980();
      uint64_t v19 = 1;
    }
    sub_56F8((uint64_t)v9, v19, 1, v18);
    uint64_t v20 = (uint64_t)v9;
    return sub_47EB8(v20, a2);
  }
  uint64_t v14 = sub_8E980();

  return sub_56F8(a2, 1, 1, v14);
}

uint64_t sub_47D28(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      uint64_t v4 = 0xD000000000000013;
      uint64_t v3 = (void *)0x800000000009CC50;
      break;
    case 2:
      uint64_t v4 = 0xD00000000000001ALL;
      uint64_t v3 = (void *)0x800000000009CC30;
      break;
    case 3:
      uint64_t v4 = 0xD000000000000017;
      uint64_t v3 = (void *)0x800000000009CC10;
      break;
    default:
      uint64_t v3 = (void *)0x800000000009CC70;
      uint64_t v4 = 0xD000000000000012;
      break;
  }
  return sub_47DF0(v4, v3, a1);
}

uint64_t sub_47DF0(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int v6 = [self wapiCapability];
  type metadata accessor for Localizations();
  if (v6) {
    uint64_t v7 = 1312902231;
  }
  else {
    uint64_t v7 = 1229343063;
  }
  unint64_t v10 = v7 & 0xFFFF0000FFFFFFFFLL | 0x5F00000000;
  v11._countAndFlagsBits = a1;
  v11._object = a2;
  sub_8FA10(v11);
  uint64_t v8 = sub_4320C(v10, 0xE500000000000000, a3);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_47EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664((uint64_t *)&unk_BC7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_47F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6F8C(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_47F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_8F4B0();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_47FA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = type metadata accessor for ReplaceComponentShelfPageAction();
  uint64_t v8 = a2 + *(int *)(v7 + 40);
  sub_8EA70();
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  uint64_t v50 = v8;
  *(void *)(v8 + 32) = 0;
  uint64_t v9 = swift_allocObject();
  uint64_t v45 = a1;
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v10();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v11();
    return sub_D68C(v50, &qword_BAAD0);
  }
  else
  {
    uint64_t v43 = v6;
    uint64_t v44 = v9;
    uint64_t v12 = *(int *)(v7 + 36);
    _OWORD v41[2] = v5;
    uint64_t v42 = a2;
    uint64_t v13 = *(uint64_t (**)(void))(v6 + 32);
    v41[1] = a2 + v12;
    uint64_t v14 = v13();
    __chkstk_darwin(v14);
    v41[-2] = a1;
    uint64_t v48 = &type metadata for PluginComponent;
    unint64_t v49 = sub_48A0C();
    *(void *)&long long v47 = swift_allocObject();
    sub_49B58();
    uint64_t v15 = v7;
    sub_426C();
    uint64_t v16 = a1;
    uint64_t v17 = v50;
    uint64_t v18 = v42;
    uint64_t v19 = sub_48AF4((uint64_t)&v47, v42);
    __chkstk_darwin(v19);
    v41[-2] = v16;
    uint64_t v20 = sub_49B58();
    sub_3B74(v20, v21, v15, v22, v23, v24, v25, v26);
    uint64_t v28 = sub_48884(v27);
    uint64_t v29 = swift_bridgeObjectRelease();
    *(void *)(v18 + 40) = v28;
    __chkstk_darwin(v29);
    v41[-2] = v44;
    v41[-1] = v16;
    sub_3B0C();
    sub_9698((uint64_t)&v46, v17);
    *(unsigned char *)(v18 + 48) = sub_3CFF0() & 1;
    *(void *)(v18 + 56) = sub_3CEE4();
    *(void *)(v18 + 64) = v30;
    sub_8FF4(0x616C50666C656873, 0xEE00746E656D6563, v15, v31, v32, v33, v34, v35);
    char v38 = v37;
    swift_release();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v39();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    uint64_t result = v40();
    *(unsigned char *)(v18 + 72) = v38;
  }
  return result;
}

uint64_t sub_48564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_8F320();
  __n128 v9 = __chkstk_darwin(v8);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v11 + 16))(&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v9);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  return sub_8EB20();
}

void *sub_48704(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  sub_48B9C(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_22210(i, (uint64_t)v10);
      if (!swift_dynamicCast()) {
        break;
      }
      memcpy(__dst, __src, sizeof(__dst));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_48B9C(0, v3[2] + 1, 1);
        uint64_t v3 = v11;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_48B9C((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v3 = v11;
      }
      v3[2] = v6 + 1;
      memcpy(&v3[11 * v6 + 4], __dst, 0x58uLL);
      if (!--v2) {
        return v3;
      }
    }
    memset(__src, 0, sizeof(__src));
    swift_release();
    sub_D68C((uint64_t)__src, &qword_BAB18);
    return 0;
  }
  return v3;
}

void *sub_48884(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  int64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    sub_48B7C(0, v1, 0);
    int64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_490C0(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_48B7C((char *)(v5 > 1), v6 + 1, 1);
        int64_t v2 = v12;
      }
      __n128 v9 = &type metadata for PluginComponent;
      unint64_t v10 = sub_48A0C();
      *(void *)&long long v8 = swift_allocObject();
      sub_490C0((uint64_t)v11, v8 + 16);
      v2[2] = v6 + 1;
      sub_573C(&v8, (uint64_t)&v2[5 * v6 + 4]);
      sub_4911C((uint64_t)v11);
      v4 += 88;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_489A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_47FA0(a1, a2);
}

uint64_t type metadata accessor for ReplaceComponentShelfPageAction()
{
  uint64_t result = qword_BD0B0;
  if (!qword_BD0B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_48A04(uint64_t a1)
{
  return sub_48564(a1, *(void *)(v1 + 16));
}

unint64_t sub_48A0C()
{
  unint64_t result = qword_BD040;
  if (!qword_BD040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD040);
  }
  return result;
}

uint64_t sub_48A58()
{
  sub_616C(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

void *sub_48AA0(void *result)
{
  uint64_t v1 = *(void *)(result[3] - 8);
  if ((*(_DWORD *)(v1 + 80) & 0x20000) != 0) {
    return (void *)_swift_slowDealloc(*result, *(void *)(v1 + 64)+ ((*(_DWORD *)(v1 + 80) + 16) & ~(unint64_t)*(_DWORD *)(v1 + 80)), *(_DWORD *)(v1 + 80) | 7);
  }
  return result;
}

uint64_t sub_48AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BD048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_48B5C(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_48BDC(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_48B7C(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_48CD4(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_48B9C(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_48DE4(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

size_t sub_48BBC(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_48EE4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_48BDC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_5664(&qword_BC430);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  if (v5)
  {
    sub_2E4B0((char *)(a4 + 32), v8, v10 + 32);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_48CD4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_5664(&qword_BC448);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (v5)
  {
    sub_2E4D0((char *)(a4 + 32), v8, v10 + 32);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_5664(&qword_BDDA0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_48DE4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_5664(&qword_BD050);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (v5)
  {
    sub_2E4F8((char *)(a4 + 32), v8, v10 + 32);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_48EE4(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_5664(&qword_BC438);
  uint64_t v10 = *(void *)(type metadata accessor for Shelf() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Shelf() - 8);
  if (v5)
  {
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    sub_2E520(a4 + v16, v8, (unint64_t)v13 + v16);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_49094@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_CCB0(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_490C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_4911C(uint64_t a1)
{
  return a1;
}

uint64_t sub_49170(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(void *)(a1 + 32) = a2[4];
    }
    *(void *)(v4 + 40) = a2[5];
    *(unsigned char *)(v4 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 64) = v11;
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    *(unsigned char *)(v4 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v15 = sub_8F4B0();
    unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = *(int *)(a3 + 40);
    uint64_t v18 = v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v17 + 24);
    if (v20)
    {
      uint64_t v21 = *(void *)(v19 + 32);
      *(void *)(v18 + 24) = v20;
      *(void *)(v18 + 32) = v21;
      (**(void (***)(void))(v20 - 8))();
    }
    else
    {
      long long v22 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v22;
      *(void *)(v18 + 32) = *(void *)(v19 + 32);
    }
  }
  return v4;
}

uint64_t sub_49334(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_616C(a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t result = a1 + *(int *)(a2 + 40);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_493F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v13 = sub_8F4B0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  uint64_t v15 = *(int *)(a3 + 40);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 24);
  if (v18)
  {
    uint64_t v19 = *(void *)(v17 + 32);
    *(void *)(v16 + 24) = v18;
    *(void *)(v16 + 32) = v19;
    (**(void (***)(void))(v18 - 8))();
  }
  else
  {
    long long v20 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v20;
    *(void *)(v16 + 32) = *(void *)(v17 + 32);
  }
  return a1;
}

uint64_t sub_49564(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_64C8((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    sub_616C(a1);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (long long *)((char *)a2 + v13);
  uint64_t v16 = *((void *)v15 + 3);
  if (!*(void *)(a1 + v13 + 24))
  {
    if (v16)
    {
      *(void *)(v14 + 24) = v16;
      *(void *)(v14 + 32) = *((void *)v15 + 4);
      (**(void (***)(uint64_t, long long *))(v16 - 8))(v14, v15);
      return a1;
    }
LABEL_14:
    long long v17 = *v15;
    long long v18 = v15[1];
    *(void *)(v14 + 32) = *((void *)v15 + 4);
    *(_OWORD *)uint64_t v14 = v17;
    *(_OWORD *)(v14 + 16) = v18;
    return a1;
  }
  if (!v16)
  {
    sub_616C(v14);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v14, (uint64_t *)v15);
  return a1;
}

uint64_t sub_49730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 56) = v8;
  uint64_t v12 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_497F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24)) {
    sub_616C(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = a1 + v13;
  if (*(void *)(a1 + v13 + 24)) {
    sub_616C(a1 + v13);
  }
  long long v15 = *(_OWORD *)(a2 + v13 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(a2 + v13 + 32);
  return a1;
}

uint64_t sub_498F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_49904);
}

uint64_t sub_49904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_8F4B0();
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_4998C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_499A0);
}

uint64_t sub_499A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 64) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_49A20()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_49AE0(uint64_t a1)
{
  unint64_t result = sub_49B08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_49B08()
{
  unint64_t result = qword_BC3D8;
  if (!qword_BC3D8)
  {
    type metadata accessor for ReplaceComponentShelfPageAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC3D8);
  }
  return result;
}

uint64_t sub_49B58()
{
  return 0x6E656E6F706D6F63;
}

uint64_t sub_49B6C(uint64_t a1)
{
  unint64_t v4 = _swiftEmptyArrayStorage;
  if (*(void *)(a1 + 40))
  {
    swift_bridgeObjectRetain();
    sub_773D8();
  }
  sub_49C58(a1, (uint64_t *)&v4);
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_bridgeObjectRetain();
    sub_7BB28();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_5664(&qword_BB0A0);
  uint64_t v2 = sub_8F7C0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_49C58(uint64_t a1, uint64_t *a2)
{
  sub_49D94(a1, (uint64_t)&v7);
  uint64_t v4 = v8;
  if (!v8) {
    return v4 == 0;
  }
  sub_573C(&v7, (uint64_t)v6);
  sub_49CE0((uint64_t)v6, a2);
  uint64_t result = sub_616C((uint64_t)v6);
  if (!v2) {
    return v4 == 0;
  }
  return result;
}

uint64_t sub_49CE0(uint64_t a1, uint64_t *a2)
{
  sub_51B58();
  uint64_t v4 = *(void *)(*a2 + 16);
  sub_51B18(v4);
  uint64_t v5 = *a2;
  *(void *)(v5 + 16) = v4 + 1;
  return sub_18294(a1, v5 + 40 * v4 + 32);
}

uint64_t type metadata accessor for ReplaceComponentShelfPageActionImplementation()
{
  return self;
}

uint64_t sub_49D70(uint64_t a1)
{
  return sub_49B6C(a1);
}

uint64_t sub_49D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BD048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_49DFC()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_7D090();
    swift_unknownObjectRelease();
  }
  sub_5664(&qword_BB0A0);
  return sub_8F7C0();
}

uint64_t type metadata accessor for ReplaceNavigationBarButtonShelfPageActionImplementation()
{
  return self;
}

unint64_t sub_49E94()
{
  unint64_t result = qword_BC3E8;
  if (!qword_BC3E8)
  {
    type metadata accessor for ReplaceNavigationBarItemShelfPageAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC3E8);
  }
  return result;
}

uint64_t sub_49EE4()
{
  return sub_49DFC();
}

BOOL sub_49F08(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AE698;
  v6._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_49F60@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_49F08(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_49F98(void *a1@<X8>)
{
  *a1 = 0x7972616D697270;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_49FB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReplaceNavigationBarItemShelfPageAction();
  uint64_t v10 = a2 + *(int *)(v9 + 32);
  sub_8EA70();
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  uint64_t v35 = v10;
  *(void *)(v10 + 32) = 0;
  uint64_t v11 = swift_allocObject();
  uint64_t v33 = a1;
  sub_4B80C();
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v12();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v13();
    return sub_9630(v35);
  }
  else
  {
    uint64_t v32 = v11;
    uint64_t v14 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + *(int *)(v9 + 28), v8, v5);
    __chkstk_darwin(v14);
    sub_4B834();
    sub_4B80C();
    sub_43DC();
    uint64_t v15 = sub_5930((uint64_t)&v34, a2);
    __chkstk_darwin(v15);
    sub_4B834();
    sub_4B80C();
    sub_40FC();
    *(void *)(a2 + 144) = v16;
    *(unsigned char *)(a2 + 152) = v17 & 1;
    sub_4B80C();
    sub_9028(v18, v19, v20, v21, v22, v23, v24, v25);
    __chkstk_darwin(v27);
    *(&v31 - 2) = v32;
    *(&v31 - 1) = a1;
    sub_4B80C();
    sub_3B0C();
    uint64_t v28 = v35;
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v29();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    (*(void (**)(uint64_t))(v30 + 8))(a1);
    return sub_9698((uint64_t)&v34, v28);
  }
}

uint64_t sub_4A4F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_49FB4(a1, a2);
}

ValueMetadata *sub_4A510(uint64_t a1)
{
  Swift::OpaquePointer v3 = &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement;
  uint64_t v4 = sub_3CEE4();
  if (v1) {
    goto LABEL_2;
  }
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  BOOL v10 = v4 == 1952867692 && v5 == 0xE400000000000000;
  if (v10 || (sub_4B818() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    Swift::OpaquePointer v3 = 0;
LABEL_9:
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v11();
    sub_8F320();
    sub_B6C4();
    (*(void (**)(uint64_t))(v12 + 8))(a1);
    return v3;
  }
  BOOL v14 = v8 == 0x7468676972 && v9 == 0xE500000000000000;
  if (v14 || (sub_4B818() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    Swift::OpaquePointer v3 = (ValueMetadata *)(&def_41A10 + 1);
    goto LABEL_9;
  }
  BOOL v15 = v8 == 0x726568746FLL && v9 == 0xE500000000000000;
  if (v15 || (sub_4B818() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    Swift::OpaquePointer v3 = (ValueMetadata *)sub_3D0F8();
    goto LABEL_9;
  }
  uint64_t v16 = sub_8F8E0();
  sub_4B774((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  swift_allocError();
  *char v17 = v8;
  v17[1] = v9;
  v17[2] = (uint64_t)&type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for JSONError.unknownCase(_:), v16);
  swift_willThrow();
LABEL_2:
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v6();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v7();
  return v3;
}

ValueMetadata *sub_4A7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL result = sub_4A510(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t type metadata accessor for ReplaceNavigationBarItemShelfPageAction()
{
  uint64_t result = qword_BD318;
  if (!qword_BD318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_4A858()
{
}

void sub_4A860(uint64_t a1@<X8>)
{
  sub_9A5C();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

void sub_4A894(uint64_t a1@<X8>)
{
}

uint64_t sub_4A89C(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x4A98CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind()
{
  return &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind;
}

uint64_t sub_4A9C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      long long v9 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 40) = v9;
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    }
    else
    {
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v8;
      uint64_t v11 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v11;
      uint64_t v12 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 72) = a2[9];
    uint64_t v13 = a2[13];
    swift_retain();
    if (v13)
    {
      uint64_t v14 = a2[14];
      *(void *)(a1 + 104) = v13;
      *(void *)(a1 + 112) = v14;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 80, (uint64_t)(a2 + 10), v13);
    }
    else
    {
      long long v15 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v15;
      *(void *)(a1 + 112) = a2[14];
    }
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    uint64_t v16 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v16;
    *(void *)(a1 + 144) = a2[18];
    uint64_t v17 = *(int *)(a3 + 28);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    uint64_t v20 = sub_8F4B0();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    uint64_t v22 = *(int *)(a3 + 32);
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 24);
    if (v25)
    {
      uint64_t v26 = *(void *)(v24 + 32);
      *(void *)(v23 + 24) = v25;
      *(void *)(v23 + 32) = v26;
      (**(void (***)(void))(v25 - 8))();
    }
    else
    {
      long long v27 = *(_OWORD *)(v24 + 16);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 16) = v27;
      *(void *)(v23 + 32) = *(void *)(v24 + 32);
    }
  }
  return a1;
}

uint64_t sub_4AC04(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if (*(void *)(a1 + 104)) {
    sub_616C(a1 + 80);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t result = a1 + *(int *)(a2 + 32);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_4ACE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 104);
  swift_retain();
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v11;
    *(void *)(a1 + 112) = v12;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 80, a2 + 80, v11);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v13;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v18 = sub_8F4B0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  uint64_t v20 = *(int *)(a3 + 32);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a2 + v20 + 24);
  if (v23)
  {
    uint64_t v24 = *(void *)(v22 + 32);
    *(void *)(v21 + 24) = v23;
    *(void *)(v21 + 32) = v24;
    (**(void (***)(void))(v23 - 8))();
  }
  else
  {
    long long v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(void *)(v21 + 32) = *(void *)(v22 + 32);
  }
  return a1;
}

uint64_t sub_4AED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = (long long *)(a1 + 24);
  uint64_t v7 = (long long *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) == 1)
  {
    if (v8 == 1)
    {
      long long v9 = *v7;
      long long v10 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v10;
      *uint64_t v6 = v9;
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_4B1DC(a1 + 24);
    long long v12 = *(_OWORD *)(a2 + 40);
    long long v11 = *(_OWORD *)(a2 + 56);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 40) = v12;
    *(_OWORD *)(a1 + 56) = v11;
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  uint64_t v13 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v13)
    {
      sub_64C8((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
      goto LABEL_15;
    }
    sub_616C(a1 + 80);
  }
  else if (v13)
  {
    *(void *)(a1 + 104) = v13;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 80, a2 + 80);
    goto LABEL_15;
  }
  long long v14 = *(_OWORD *)(a2 + 80);
  long long v15 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v15;
LABEL_15:
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v16;
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (long long *)(a2 + v21);
  uint64_t v24 = *((void *)v23 + 3);
  if (!*(void *)(a1 + v21 + 24))
  {
    if (v24)
    {
      *(void *)(v22 + 24) = v24;
      *(void *)(v22 + 32) = *((void *)v23 + 4);
      (**(void (***)(uint64_t, long long *))(v24 - 8))(v22, v23);
      return a1;
    }
LABEL_21:
    long long v25 = *v23;
    long long v26 = v23[1];
    *(void *)(v22 + 32) = *((void *)v23 + 4);
    *(_OWORD *)uint64_t v22 = v25;
    *(_OWORD *)(v22 + 16) = v26;
    return a1;
  }
  if (!v24)
  {
    sub_616C(v22);
    goto LABEL_21;
  }
  sub_64C8((uint64_t *)v22, (uint64_t *)v23);
  return a1;
}

uint64_t sub_4B1DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_4B230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  memcpy((void *)a1, (const void *)a2, 0x90uLL);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  return a1;
}

uint64_t sub_4B2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (*(void *)(a1 + 32) == 1) {
    goto LABEL_4;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7 == 1)
  {
    sub_4B1DC(a1 + 24);
LABEL_4:
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  if (*(void *)(a1 + 104)) {
    sub_616C(a1 + 80);
  }
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = a1 + v17;
  if (*(void *)(a1 + v17 + 24)) {
    sub_616C(a1 + v17);
  }
  long long v19 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v18 + 16) = v19;
  *(void *)(v18 + 32) = *(void *)(a2 + v17 + 32);
  return a1;
}

uint64_t sub_4B478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4B48C);
}

uint64_t sub_4B48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_8F4B0();
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    return sub_5754(v10, a2, v9);
  }
}

uint64_t sub_4B520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4B534);
}

uint64_t sub_4B534(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_8F4B0();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_4B5B4()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_4B6D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_4B6EC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement()
{
  return &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement;
}

uint64_t sub_4B71C(uint64_t a1)
{
  uint64_t result = sub_4B774((unint64_t *)&qword_BC3E8, (void (*)(uint64_t))type metadata accessor for ReplaceNavigationBarItemShelfPageAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_4B774(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4B7C0()
{
  unint64_t result = qword_BD360;
  if (!qword_BD360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD360);
  }
  return result;
}

uint64_t sub_4B818()
{
  return sub_8FF40();
}

uint64_t sub_4B848@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8F4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_8EA70();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = type metadata accessor for ResolutionAction();
  uint64_t v20 = a1;
  sub_3AD8();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v11();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v12();
  }
  else
  {
    uint64_t v14 = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a2 + *(int *)(v10 + 20), v8, v5);
    __chkstk_darwin(v14);
    *(void *)&v19[-16] = v9;
    *(void *)&v19[-8] = a1;
    sub_3B0C();
    uint64_t v15 = sub_BEB0((uint64_t)&v21, a2 + *(int *)(v10 + 24));
    __chkstk_darwin(v15);
    *(void *)&v19[-16] = a1;
    sub_2FFC0();
    uint64_t v16 = swift_allocError();
    sub_4114();
    swift_release();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v17();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    uint64_t result = v18();
    *(void *)a2 = v16;
    *(unsigned char *)(a2 + 8) = 1;
  }
  return result;
}

uint64_t sub_4BC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v13 + 16))(&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F490();
  uint64_t v14 = sub_8F4B0();
  return sub_56F8(a3, 0, 1, v14);
}

uint64_t sub_4BE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v13 + 16))(&v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_2F5D4((uint64_t)v9, a3);
}

uint64_t sub_4BFC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_4B848(a1, a2);
}

uint64_t type metadata accessor for ResolutionAction()
{
  uint64_t result = qword_BD3C8;
  if (!qword_BD3C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4C024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_4BC68(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_4C02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_4BE1C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_4C034(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)unint64_t v4 = *(void *)a2;
    unint64_t v4 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int v7 = *(unsigned __int8 *)(a2 + 8);
    if (v7 == 255)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    }
    else
    {
      char v9 = v7 & 1;
      uint64_t v10 = *(void *)a2;
      sub_4C19C(*(void *)a2, v7 & 1);
      *(void *)unint64_t v4 = v10;
      *(unsigned char *)(v4 + 8) = v9;
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = v4 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_8F4B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = v4 + v15;
    uint64_t v17 = a2 + v15;
    uint64_t v18 = *(void *)(a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *(void *)(v17 + 32);
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = v19;
      (**(void (***)(void))(v18 - 8))();
    }
    else
    {
      long long v20 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v20;
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
    }
  }
  return v4;
}

uint64_t sub_4C19C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_4C1A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 8);
  if (v4 != 255) {
    sub_4C25C(*(void *)a1, v4 & 1);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t result = a1 + *(int *)(a2 + 24);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_4C25C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_4C268(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v6 = *((unsigned __int8 *)a2 + 8);
  if (v6 == 255)
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  }
  else
  {
    char v7 = v6 & 1;
    uint64_t v8 = *a2;
    sub_4C19C(*a2, v6 & 1);
    *(void *)a1 = v8;
    *(unsigned char *)(a1 + 8) = v7;
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }
  else
  {
    long long v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }
  return a1;
}

uint64_t sub_4C380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 8) == 255)
  {
    if (v6 == 255)
    {
      uint64_t v8 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)a1 = v8;
    }
    else
    {
      char v13 = v6 & 1;
      uint64_t v14 = *(void *)a2;
      sub_4C19C(*(void *)a2, v6 & 1);
      *(void *)a1 = v14;
      *(unsigned char *)(a1 + 8) = v13;
    }
  }
  else if (v6 == 255)
  {
    sub_4C524(a1);
    char v7 = *(unsigned char *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)a2;
    sub_4C19C(*(void *)a2, v6 & 1);
    uint64_t v11 = *(void *)a1;
    char v12 = *(unsigned char *)(a1 + 8);
    *(void *)a1 = v10;
    *(unsigned char *)(a1 + 8) = v9;
    sub_4C25C(v11, v12);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  long long v21 = (long long *)(a2 + v19);
  uint64_t v22 = *((void *)v21 + 3);
  if (!*(void *)(a1 + v19 + 24))
  {
    if (v22)
    {
      *(void *)(v20 + 24) = v22;
      *(void *)(v20 + 32) = *((void *)v21 + 4);
      (**(void (***)(uint64_t, long long *))(v22 - 8))(v20, v21);
      return a1;
    }
LABEL_14:
    long long v23 = *v21;
    long long v24 = v21[1];
    *(void *)(v20 + 32) = *((void *)v21 + 4);
    *(_OWORD *)uint64_t v20 = v23;
    *(_OWORD *)(v20 + 16) = v24;
    return a1;
  }
  if (!v22)
  {
    sub_616C(v20);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)v20, (uint64_t *)v21);
  return a1;
}

uint64_t sub_4C524(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BD368);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4C584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  return a1;
}

uint64_t sub_4C634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(unsigned __int8 *)(a1 + 8);
  if (v6 == 255) {
    goto LABEL_4;
  }
  int v7 = *(unsigned __int8 *)(a2 + 8);
  if (v7 == 255)
  {
    sub_4C524(a1);
LABEL_4:
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7 & 1;
  sub_4C25C(v8, v6 & 1);
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_8F4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  if (*(void *)(a1 + v13 + 24)) {
    sub_616C(a1 + v13);
  }
  long long v15 = *(_OWORD *)(a2 + v13 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(a2 + v13 + 32);
  return a1;
}

uint64_t sub_4C734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4C748);
}

uint64_t sub_4C748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_5754(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_4C7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4C7FC);
}

void sub_4C7FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_8F4B0();
  sub_B704();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    sub_56F8(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  }
}

uint64_t sub_4C88C()
{
  uint64_t result = sub_8F4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_4C92C(uint64_t a1)
{
  unint64_t result = sub_4C954();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_4C954()
{
  unint64_t result = qword_BC2D0;
  if (!qword_BC2D0)
  {
    type metadata accessor for ResolutionAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC2D0);
  }
  return result;
}

uint64_t sub_4C9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_8F390();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = *(void *)a1;
  int v7 = *(unsigned __int8 *)(a1 + 8);
  if (v7 == 255)
  {
    sub_EED0(a2, (uint64_t)v36, &qword_BB600);
    if (v37 == 255)
    {
      sub_EF88((uint64_t)v36, &qword_BB600);
    }
    else
    {
      sub_4D09C((uint64_t)v36, (uint64_t)v38);
      sub_4D0F8((uint64_t)v38, (uint64_t)v36);
      if (!v37)
      {
        sub_251D4((uint64_t)v38);
        uint64_t v9 = 0;
        uint64_t v8 = v36[0];
        goto LABEL_27;
      }
      if (v37 == 1)
      {
        sub_2F998((uint64_t)v36, (uint64_t)v34);
        sub_EED0((uint64_t)v34, (uint64_t)v32, &qword_BC780);
        if (v33)
        {
          sub_5664(&qword_BBBD8);
          if (swift_dynamicCast())
          {
            uint64_t v9 = v30[0];
LABEL_26:
            sub_EF88((uint64_t)v34, &qword_BC780);
            sub_251D4((uint64_t)v38);
            uint64_t v8 = 0;
            goto LABEL_27;
          }
        }
        else
        {
          sub_EF88((uint64_t)v32, &qword_BC780);
        }
        sub_5664((uint64_t *)&unk_BB5E0);
        uint64_t v18 = sub_8F3E0();
        sub_183C4(v18);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
        uint64_t v33 = (void *)type metadata accessor for ResolutionActionImplementation();
        v32[0] = v2;
        swift_retain();
        id v19 = (id)AMSLogKey();
        if (v19)
        {
          uint64_t v20 = v19;
          uint64_t v21 = sub_8F9D0();
          uint64_t v29 = v22;

          sub_8F380();
          sub_4D154();
          sub_820C(v32, (uint64_t)v33);
          uint64_t DynamicType = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v30[0] = DynamicType;
          sub_8F360();
          sub_EF88((uint64_t)v30, &qword_BC780);
          v40._countAndFlagsBits = 5972026;
          v40._object = (void *)0xE300000000000000;
          sub_8F370(v40);
          uint64_t MetatypeMetadata = &type metadata for String;
          v30[0] = v21;
          v30[1] = v29;
          sub_8F360();
          sub_EF88((uint64_t)v30, &qword_BC780);
          v24._countAndFlagsBits = 93;
        }
        else
        {
          sub_8F380();
          sub_4D154();
          sub_820C(v32, (uint64_t)v33);
          uint64_t v26 = swift_getDynamicType();
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
          v30[0] = v26;
          sub_8F360();
          sub_EF88((uint64_t)v30, &qword_BC780);
          v24._countAndFlagsBits = 58;
        }
        v24._object = (void *)0xE100000000000000;
        sub_8F370(v24);
        sub_8F3A0();
        type metadata accessor for Log();
        sub_616C((uint64_t)v32);
        sub_8F340();
        sub_8F3B0();
        sub_43634();
        swift_bridgeObjectRelease();
        uint64_t v9 = 0;
        goto LABEL_26;
      }
      sub_5664((uint64_t *)&unk_BB5E0);
      uint64_t v10 = sub_8F3E0();
      sub_183C4(v10);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
      uint64_t v35 = type metadata accessor for ResolutionActionImplementation();
      v34[0] = v2;
      swift_retain();
      id v11 = (id)AMSLogKey();
      if (v11)
      {
        int v12 = v11;
        uint64_t v13 = sub_8F9D0();
        uint64_t v15 = v14;

        sub_8F380();
        sub_4D154();
        sub_820C(v34, v35);
        uint64_t v16 = swift_getDynamicType();
        uint64_t v33 = (void *)swift_getMetatypeMetadata();
        v32[0] = v16;
        sub_8F360();
        sub_EF88((uint64_t)v32, &qword_BC780);
        v39._countAndFlagsBits = 5972026;
        v39._object = (void *)0xE300000000000000;
        sub_8F370(v39);
        uint64_t v33 = &type metadata for String;
        v32[0] = v13;
        v32[1] = v15;
        sub_8F360();
        sub_EF88((uint64_t)v32, &qword_BC780);
        v17._countAndFlagsBits = 93;
      }
      else
      {
        sub_8F380();
        sub_4D154();
        sub_820C(v34, v35);
        uint64_t v25 = swift_getDynamicType();
        uint64_t v33 = (void *)swift_getMetatypeMetadata();
        v32[0] = v25;
        sub_8F360();
        sub_EF88((uint64_t)v32, &qword_BC780);
        v17._countAndFlagsBits = 58;
      }
      v17._object = (void *)0xE100000000000000;
      sub_8F370(v17);
      sub_8F3A0();
      type metadata accessor for Log();
      sub_616C((uint64_t)v34);
      sub_8F340();
      sub_43634();
      swift_bridgeObjectRelease();
      sub_251D4((uint64_t)v38);
    }
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    goto LABEL_27;
  }
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v6;
  }
LABEL_27:
  sub_8EBD0();
  sub_4D084(v6, v7);
  sub_8F560();
  sub_8F770();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v38[0] + 208))(v9, v8);
  swift_bridgeObjectRelease();
  sub_5664(&qword_BB0A0);
  memset(v38, 0, 32);
  uint64_t v27 = sub_8F7C0();
  swift_errorRelease();
  swift_release();
  return v27;
}

uint64_t type metadata accessor for ResolutionActionImplementation()
{
  return self;
}

uint64_t sub_4D060(uint64_t a1, uint64_t a2)
{
  return sub_4C9A4(a1, a2);
}

uint64_t sub_4D084(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_4C19C(result, a2 & 1);
  }
  return result;
}

uint64_t sub_4D09C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_4D0F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_4D154()
{
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  sub_8F370(v1);
}

void *sub_4D16C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_8F5F0();
    if (sub_5754((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_5664(&qword_BDD70);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_56F8((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *(void *)(v16 + 32);
      *((void *)v15 + 3) = v17;
      *((void *)v15 + 4) = v18;
      (**(void (***)(void))(v17 - 8))();
    }
    else
    {
      long long v19 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v19;
      *((void *)v15 + 4) = *(void *)(v16 + 32);
    }
    uint64_t v20 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(void *)((char *)v4 + v20) = *(uint64_t *)((char *)a2 + v20);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_4D348(uint64_t a1, uint64_t a2)
{
  sub_616C(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v6 + 24)) {
    sub_616C(v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_4D3FC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8F5F0();
  if (sub_5754((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_56F8((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *(void *)(v14 + 32);
    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = v16;
    (**(void (***)(void))(v15 - 8))();
  }
  else
  {
    long long v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v17;
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
  }
  uint64_t v18 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_4D580(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_64C8(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F5F0();
  int v10 = sub_5754((uint64_t)v7, 1, v9);
  int v11 = sub_5754((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      sub_56F8((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_5664(&qword_BDD70);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
  if (!*(uint64_t *)((char *)a1 + v14 + 24))
  {
    if (v17)
    {
      *(void *)(v15 + 24) = v17;
      *(void *)(v15 + 32) = *((void *)v16 + 4);
      (**(void (***)(uint64_t, char *))(v17 - 8))(v15, v16);
      goto LABEL_14;
    }
LABEL_13:
    long long v18 = *(_OWORD *)v16;
    long long v19 = *((_OWORD *)v16 + 1);
    *(void *)(v15 + 32) = *((void *)v16 + 4);
    *(_OWORD *)uint64_t v15 = v18;
    *(_OWORD *)(v15 + 16) = v19;
    goto LABEL_14;
  }
  if (!v17)
  {
    sub_616C(v15);
    goto LABEL_13;
  }
  sub_64C8((uint64_t *)v15, (uint64_t *)v16);
LABEL_14:
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_4D79C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8F5F0();
  if (sub_5754((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    sub_56F8((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = (long long *)(a2 + v12);
  long long v16 = *v15;
  long long v17 = v15[1];
  *(void *)(v14 + 32) = *((void *)v15 + 4);
  *(_OWORD *)uint64_t v14 = v16;
  *(_OWORD *)(v14 + 16) = v17;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_4D8BC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_616C(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8F5F0();
  int v11 = sub_5754((uint64_t)v8, 1, v10);
  int v12 = sub_5754((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      sub_56F8((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_616C(a1 + v15);
  }
  long long v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_4DA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4DA98);
}

uint64_t sub_4DA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_4DB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4DB38);
}

uint64_t sub_4DB38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SegmentedControl()
{
  uint64_t result = qword_BD520;
  if (!qword_BD520) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_4DC04()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for SegmentedControl.Item(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    sub_616C(a1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SegmentedControl.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SegmentedControl.Item(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_616C(a1);
    goto LABEL_7;
  }
  sub_64C8((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SegmentedControl.Item(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_616C(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SegmentedControl.Item(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SegmentedControl.Item(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SegmentedControl.Item()
{
  return &type metadata for SegmentedControl.Item;
}

uint64_t sub_4DF40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v3 = sub_8F320();
  sub_7084();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  sub_8F330();
  uint64_t v10 = sub_8F300();
  uint64_t v12 = v11;
  uint64_t v13 = *(void (**)(void))(v5 + 8);
  sub_4EB64();
  v13();
  if (v12)
  {
    v21[0] = v10;
    sub_8EA70();
    swift_initStackObject();
    sub_8F330();
    uint64_t v14 = v21[1];
    sub_8EA60();
    swift_release();
    if (v14)
    {
      swift_errorRelease();
      sub_8F3F0();
      sub_13858();
      sub_7358();
      v15();
      sub_4EB64();
      v13();
      sub_4EB64();
      v13();
      uint64_t v23 = 0;
      memset(v22, 0, sizeof(v22));
    }
    else
    {
      sub_8F3F0();
      sub_13858();
      sub_7358();
      v20();
      sub_4EB64();
      v13();
      ((void (*)(char *, uint64_t))v13)(v8, v3);
    }
    uint64_t result = sub_25228((uint64_t)v22, a2, &qword_BAAD0);
    *(void *)(a2 + 40) = v21[0];
    *(void *)(a2 + 48) = v12;
  }
  else
  {
    uint64_t v16 = sub_8F8E0();
    sub_4EAD0((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    swift_allocError();
    *long long v17 = 1954047348;
    v17[1] = 0xE400000000000000;
    v17[2] = &type metadata for SegmentedControl.Item;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for JSONError.missingProperty(_:), v16);
    swift_willThrow();
    sub_8F3F0();
    sub_13858();
    sub_7358();
    v18();
    sub_4EB64();
    return ((uint64_t (*)(void))v13)();
  }
  return result;
}

uint64_t sub_4E260@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_4DF40(a1, a2);
}

uint64_t sub_4E278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v78 = a3;
  sub_8F3F0();
  sub_7084();
  uint64_t v82 = v5;
  uint64_t v83 = v4;
  __chkstk_darwin(v4);
  sub_4EBA4();
  uint64_t v77 = v6;
  __chkstk_darwin(v7);
  NSString v73 = (char *)&v66 - v8;
  uint64_t v9 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v9 - 8);
  uint64_t v75 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_5664(&qword_BB0B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_8F8D0();
  sub_7084();
  uint64_t v79 = v14;
  __chkstk_darwin(v15);
  sub_4EBA4();
  uint64_t v74 = v16;
  __chkstk_darwin(v17);
  id v80 = (char *)&v66 - v18;
  uint64_t v19 = sub_8F320();
  sub_7084();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_4EBA4();
  uint64_t v72 = v23;
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  uint64_t v87 = a1;
  sub_8F330();
  uint64_t v27 = sub_8F300();
  uint64_t v29 = v28;
  uint64_t v32 = *(void (**)(void))(v21 + 8);
  uint64_t v31 = v21 + 8;
  uint64_t v30 = v32;
  sub_4EB74();
  v32();
  if (!v29)
  {
    sub_8F8E0();
    sub_4EAD0((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    sub_4EB84();
    uint64_t v35 = sub_4EBD0();
    *(void *)&def_41A10 = 25705;
    unint64_t v36 = 0xE200000000000000;
    goto LABEL_5;
  }
  uint64_t v33 = v27;
  sub_8F330();
  sub_8F2D0();
  sub_4EB74();
  v30();
  uint64_t v34 = v81;
  if (sub_5754((uint64_t)v13, 1, v81) == 1)
  {
    swift_bridgeObjectRelease();
    sub_3C708((uint64_t)v13, &qword_BB0B0);
    sub_8F8E0();
    sub_4EAD0((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    sub_4EB84();
    uint64_t v35 = sub_4EBD0();
    *(void *)uint64_t v29 = 0x736D657469;
    unint64_t v36 = 0xE500000000000000;
LABEL_5:
    *(void *)(v29 + 8) = v36;
    *(void *)(v29 + 16) = v35;
    uint64_t v37 = sub_4EC00();
    v38(v37);
    swift_willThrow();
    sub_7358();
    v39();
    return ((uint64_t (*)(uint64_t, uint64_t))v30)(v87, v19);
  }
  uint64_t v41 = v79;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v80, v13, v34);
  sub_8F330();
  uint64_t v42 = sub_8F2A0();
  char v44 = v43;
  sub_4EB74();
  v30();
  if (v44)
  {
    swift_bridgeObjectRelease();
    sub_8F8E0();
    sub_4EAD0((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    sub_4EB84();
    uint64_t v50 = sub_4EBD0();
    strcpy((char *)v29, "selectedIndex");
    *(_WORD *)(v29 + 14) = -4864;
    *(void *)(v29 + 16) = v50;
    uint64_t v51 = sub_4EC00();
    v52(v51);
    swift_willThrow();
    sub_7358();
    v53();
    sub_4EB74();
    v30();
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v80, v81);
  }
  else
  {
    uint64_t v67 = v42;
    uint64_t v68 = v30;
    uint64_t v69 = v31;
    uint64_t v85 = v33;
    uint64_t v86 = v29;
    uint64_t v45 = v78;
    sub_8FDB0();
    sub_8F330();
    long long v46 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
    v46(v73, v84, v83);
    uint64_t v48 = (uint64_t)v75;
    uint64_t v47 = v76;
    sub_8F5B0();
    uint64_t v70 = v19;
    id v71 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
    if (v47)
    {
      swift_errorRelease();
      uint64_t v49 = 1;
    }
    else
    {
      uint64_t v49 = 0;
    }
    uint64_t v54 = v79;
    uint64_t v55 = v80;
    uint64_t v56 = sub_8F5F0();
    sub_56F8(v48, v49, 1, v56);
    id v57 = (int *)type metadata accessor for SegmentedControl();
    uint64_t v79 = v45 + v57[5];
    sub_25228(v48, v79, &qword_BDD70);
    uint64_t v58 = v45 + v57[6];
    *(void *)(v58 + 32) = 0;
    *(_OWORD *)uint64_t v58 = 0u;
    *(_OWORD *)(v58 + 16) = 0u;
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v74, v55, v81);
    v71(v77, v84, v83);
    sub_4EB18();
    uint64_t v59 = sub_8FAB0();
    sub_7358();
    v60();
    uint64_t v61 = sub_4EBB8();
    v62(v61);
    uint64_t v63 = sub_4EBEC();
    uint64_t result = v64(v63);
    uint64_t v65 = v78;
    *(void *)(v78 + v57[7]) = v59;
    *(void *)(v65 + v57[8]) = v67;
  }
  return result;
}

uint64_t sub_4EA0C@<X0>(uint64_t a1@<X8>)
{
  return sub_10210(v1, a1);
}

uint64_t sub_4EA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_13740(v2 + *(int *)(a1 + 24), a2, &qword_BAAD0);
}

uint64_t sub_4EA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_4E278(a1, a2, a3);
}

uint64_t sub_4EA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_13740(v2 + *(int *)(a1 + 20), a2, &qword_BDD70);
}

uint64_t sub_4EA88()
{
  return sub_4EAD0(&qword_BD568, (void (*)(uint64_t))type metadata accessor for SegmentedControl);
}

uint64_t sub_4EAD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4EB18()
{
  unint64_t result = qword_BD570;
  if (!qword_BD570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD570);
  }
  return result;
}

uint64_t sub_4EB84()
{
  return swift_allocError();
}

uint64_t sub_4EBB8()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_4EBD0()
{
  return type metadata accessor for SegmentedControl();
}

uint64_t sub_4EBEC()
{
  return *(void *)(v0 - 144);
}

uint64_t sub_4EC00()
{
  return v0;
}

uint64_t sub_4EC14()
{
  swift_getKeyPath();
  sub_5664(&qword_BD5C0);
  sub_8F430();
  swift_release();
  sub_4F2C0(v3);
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex) = v3;
  sub_4F2FC();
  uint64_t v1 = swift_retain();
  return sub_4F320(v1);
}

uint64_t sub_4ECF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SegmentedControlComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_4ED58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SegmentedControlComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_4EDC0()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_4EE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_4EEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_4EF34()
{
  return sub_4EFC4(&qword_BC380, (void (*)(uint64_t))type metadata accessor for SegmentedControl);
}

uint64_t sub_4EF7C()
{
  return sub_4EFC4(&qword_BB4D8, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_4EFC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_4F00C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph] = 0;
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl;
  id v10 = objc_allocWithZone((Class)UISegmentedControl);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for SegmentedControlComponent();
  id v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  sub_4F3D8();

  return v12;
}

void sub_4F11C()
{
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph] = 0;
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UISegmentedControl) init];

  sub_8FEA0();
  __break(1u);
}

id sub_4F1EC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl);
  id result = [v1 removeAllSegments];
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_4F890(v5, (uint64_t)v8);
      uint64_t v6 = v9;
      uint64_t v7 = v10;
      swift_bridgeObjectRetain();
      sub_4F8EC((uint64_t)v8);
      sub_4F814(v6, v7, (uint64_t)[v1 numberOfSegments], 0, v1);
      v5 += 56;
      --v4;
    }
    while (v4);
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_4F2C0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items) = a1;
  swift_bridgeObjectRelease();

  return sub_4F1EC();
}

id sub_4F2FC()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl) setSelectedSegmentIndex:*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex)];
}

uint64_t sub_4F320(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph) = a1;
  return swift_release();
}

uint64_t sub_4F338()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SegmentedControlComponent();
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_4F2C0((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex] = 0;
  sub_4F2FC();
  return sub_4F320(0);
}

void sub_4F3D8()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl];
  [v1 addTarget:v0 action:"segmentedControlAction" forControlEvents:4096];
  id v2 = [v0 contentView];
  [v2 addSubview:v1];

  sub_89BCC(1, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

unint64_t sub_4F46C()
{
  uint64_t v1 = sub_8EC80();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8F650();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (unint64_t)objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl), "selectedSegmentIndex", v6);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items);
  if (result >= *(void *)(v10 + 16))
  {
LABEL_10:
    __break(1u);
    return result;
  }
  sub_6F8C(v10 + 56 * result + 32, (uint64_t)&v14);
  if (!*((void *)&v15 + 1)) {
    return sub_EF88((uint64_t)&v14, &qword_BAAD0);
  }
  sub_573C(&v14, (uint64_t)v17);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph);
  if (v11)
  {
    sub_8ECA0();
    sub_8F560();
    swift_retain();
    sub_8F770();
    uint64_t v12 = v14;
    sub_8F770();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v8, v4);
    uint64_t v13 = sub_5664((uint64_t *)&unk_BCEB0);
    sub_56F8((uint64_t)v3, 0, 1, v13);
    long long v14 = 0u;
    long long v15 = 0u;
    char v16 = -1;
    (*(void (**)(unsigned char *, char *, uint64_t, long long *))(*(void *)v12 + 216))(v17, v3, v11, &v14);
    swift_release();
    swift_release();
    swift_release();
    sub_EF88((uint64_t)&v14, &qword_BB600);
    sub_EFE4((uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return sub_616C((uint64_t)v17);
}

id sub_4F760()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SegmentedControlComponent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SegmentedControlComponent()
{
  return self;
}

void sub_4F814(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  NSString v8 = sub_8F9A0();
  swift_bridgeObjectRelease();
  [a5 insertSegmentWithTitle:v8 atIndex:a3 animated:a4 & 1];
}

uint64_t sub_4F890(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_4F8EC(uint64_t a1)
{
  return a1;
}

void type metadata accessor for Shelf.Placement()
{
}

uint64_t *sub_4F954(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_8F5F0();
    swift_bridgeObjectRetain();
    if (sub_5754((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_5664(&qword_BDD70);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_56F8((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    long long v15 = (char *)v4 + v14;
    char v16 = (char *)a2 + v14;
    *(_WORD *)long long v15 = *(_WORD *)v16;
    _OWORD v15[2] = v16[2];
    uint64_t v17 = *((void *)v16 + 2);
    *((void *)v15 + 1) = *((void *)v16 + 1);
    *((void *)v15 + 2) = v17;
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = *((void *)v16 + 3);
    *((void *)v15 + 4) = v18;
    unsigned char v15[40] = v16[40];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_4FAEC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_4FBA8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F5F0();
  swift_bridgeObjectRetain();
  if (sub_5754((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_56F8((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_WORD *)uint64_t v13 = *(_WORD *)v14;
  v13[2] = v14[2];
  uint64_t v15 = *((void *)v14 + 2);
  *((void *)v13 + 1) = *((void *)v14 + 1);
  *((void *)v13 + 2) = v15;
  uint64_t v16 = *((void *)v14 + 4);
  *((void *)v13 + 3) = *((void *)v14 + 3);
  *((void *)v13 + 4) = v16;
  v13[40] = v14[40];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_4FCF0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F5F0();
  int v10 = sub_5754((uint64_t)v7, 1, v9);
  int v11 = sub_5754((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_5664(&qword_BDD70);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  sub_56F8((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *uint64_t v15 = *((unsigned char *)a2 + v14);
  v15[1] = *((unsigned char *)a2 + v14 + 1);
  _OWORD v15[2] = *((unsigned char *)a2 + v14 + 2);
  *((void *)v15 + 1) = *(void *)((char *)a2 + v14 + 8);
  *((void *)v15 + 2) = *(void *)((char *)a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v15 + 3) = *((void *)v16 + 3);
  *((void *)v15 + 4) = *((void *)v16 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned char v15[40] = v16[40];
  return a1;
}

_OWORD *sub_4FF00(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8F5F0();
  if (sub_5754((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_5664(&qword_BDD70);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    sub_56F8((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v13 + 25);
  return a1;
}

void *sub_5000C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F5F0();
  int v11 = sub_5754((uint64_t)v8, 1, v10);
  int v12 = sub_5754((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_56F8((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(_WORD *)uint64_t v16 = *(_WORD *)v17;
  v16[2] = v17[2];
  uint64_t v18 = *((void *)v17 + 2);
  *((void *)v16 + 1) = *((void *)v17 + 1);
  *((void *)v16 + 2) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v17 + 4);
  *((void *)v16 + 3) = *((void *)v17 + 3);
  *((void *)v16 + 4) = v19;
  swift_bridgeObjectRelease();
  void v16[40] = v17[40];
  return a1;
}

uint64_t sub_501DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_501F0);
}

uint64_t sub_501F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_5027C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_50290);
}

uint64_t sub_50290(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Shelf()
{
  uint64_t result = qword_BD668;
  if (!qword_BD668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_5035C()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_5040C()
{
  return &protocol witness table for String;
}

uint64_t sub_50418(char a1)
{
  if (!a1) {
    return 0x726564616568;
  }
  if (a1 == 1) {
    return 2036625250;
  }
  return 0x7265746F6F66;
}

uint64_t sub_50460(char *a1, char *a2)
{
  return sub_5513C(*a1, *a2);
}

Swift::Int sub_5046C()
{
  return sub_55974();
}

uint64_t sub_50474(uint64_t a1)
{
  return sub_55F1C(a1, *v1);
}

Swift::Int sub_5047C()
{
  return sub_56718();
}

uint64_t sub_50484@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_AE6D0;
  uint64_t result = sub_5065C(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_504BC()
{
  char v1 = sub_52294();
  uint64_t result = sub_50418(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_504E4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AE738;
  v6._object = a2;
  unint64_t v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

unint64_t sub_50530(char a1)
{
  unint64_t result = 0x6E69616C70;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646570756F7267;
      break;
    case 2:
      unint64_t result = 0x6F72477465736E69;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_505CC(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_AE7B8;
  v7._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_50620(char a1)
{
  if (a1) {
    return 0x6C61636974726576;
  }
  else {
    return 0x746E6F7A69726F68;
  }
}

uint64_t sub_5065C(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_8FF00(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

uint64_t sub_506A4(char a1)
{
  if (!a1) {
    return 1701736302;
  }
  if (a1 == 1) {
    return 0x656C676E6973;
  }
  return 0x656C7069746C756DLL;
}

uint64_t sub_506F0(unsigned __int8 *a1, char *a2)
{
  return sub_552F0(*a1, *a2);
}

Swift::Int sub_506FC()
{
  return sub_55980(*v0);
}

uint64_t sub_50704()
{
  return sub_56008();
}

Swift::Int sub_5070C(uint64_t a1)
{
  return sub_5660C(a1, *v1);
}

uint64_t sub_50714@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_504E4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_50744()
{
  char v1 = sub_52294();
  unint64_t result = sub_50530(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_5076C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_55210(*a1, *a2);
}

uint64_t sub_50778()
{
  return sub_591C0(*v0);
}

uint64_t sub_50780(uint64_t a1)
{
  return sub_55F88(a1, *v1);
}

uint64_t sub_50788(uint64_t a1)
{
  return sub_564C4(a1, *v1);
}

uint64_t sub_50790@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_505CC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_507C0()
{
  char v1 = sub_52294();
  uint64_t result = sub_50620(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_507E8(char *a1, char *a2)
{
  return sub_55214(*a1, *a2);
}

Swift::Int sub_507F4()
{
  return sub_559E8();
}

uint64_t sub_507FC(uint64_t a1)
{
  return sub_55F8C(a1, *v1);
}

Swift::Int sub_50804()
{
  return sub_56624();
}

uint64_t sub_5080C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_AE808;
  uint64_t result = sub_5065C(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_50844()
{
  char v1 = sub_52294();
  uint64_t result = sub_506A4(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_5086C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v34 = a3;
  sub_8F320();
  sub_7084();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  sub_522C0();
  __chkstk_darwin(v13);
  uint64_t v35 = a1;
  sub_8F330();
  sub_519CC();
  sub_8F280();
  if (v3)
  {
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v14();
    uint64_t v15 = *(void (**)(void))(v7 + 8);
    sub_52258();
    v15();
    sub_52258();
    return ((uint64_t (*)(void))v15)();
  }
  else
  {
    uint64_t v32 = v10;
    uint64_t v33 = a2;
    uint64_t v17 = *(void (**)(void))(v7 + 8);
    sub_52258();
    v17();
    int v36 = v39;
    sub_8F330();
    int v18 = sub_8F2C0();
    sub_52258();
    v17();
    sub_8F330();
    sub_51A18();
    sub_8F280();
    int v31 = v18;
    sub_52258();
    v17();
    int v30 = v38;
    sub_8F330();
    uint64_t v29 = sub_8F300();
    uint64_t v20 = v19;
    sub_52258();
    v17();
    swift_bridgeObjectRetain();
    sub_8F330();
    uint64_t v28 = sub_8F300();
    uint64_t v22 = v21;
    sub_52258();
    v17();
    swift_bridgeObjectRetain();
    sub_8F330();
    sub_51A64();
    sub_8F280();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v23();
    sub_52258();
    v17();
    sub_52258();
    v17();
    char v24 = v37;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = v20;
    uint64_t v26 = v34;
    *uint64_t v34 = v31;
    v26[1] = v36;
    v26[2] = v30;
    *((void *)v26 + 1) = v29;
    *((void *)v26 + 2) = v25;
    *((void *)v26 + 3) = v28;
    *((void *)v26 + 4) = v22;
    v26[40] = v24;
  }
  return result;
}

double sub_50CB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_5086C(a1, a2, &v7);
  if (!v3)
  {
    long long v6 = v8[0];
    *a3 = v7;
    a3[1] = v6;
    double result = *(double *)((char *)v8 + 9);
    *(_OWORD *)((char *)a3 + 25) = *(_OWORD *)((char *)v8 + 9);
  }
  return result;
}

double sub_50CFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v93 = a2;
  v90 = a3;
  sub_8F3F0();
  sub_7084();
  uint64_t v91 = v4;
  uint64_t v92 = v5;
  __chkstk_darwin(v4);
  sub_4EBA4();
  uint64_t v88 = v6;
  sub_52270();
  __chkstk_darwin(v7);
  uint64_t v87 = (char *)&v76 - v8;
  sub_52270();
  __chkstk_darwin(v9);
  uint64_t v83 = (char *)&v76 - v10;
  uint64_t v11 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v11 - 8);
  uint64_t v84 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_5664(&qword_BB0B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_8F320();
  sub_7084();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_4EBA4();
  uint64_t v86 = v20;
  sub_52270();
  __chkstk_darwin(v21);
  uint64_t v81 = (char *)&v76 - v22;
  sub_52270();
  __chkstk_darwin(v23);
  sub_522C0();
  __chkstk_darwin(v24);
  uint64_t v25 = sub_8F8D0();
  sub_7084();
  uint64_t v89 = v26;
  __chkstk_darwin(v27);
  sub_4EBA4();
  uint64_t v82 = v28;
  sub_52270();
  __chkstk_darwin(v29);
  int v31 = (char *)&v76 - v30;
  uint64_t v97 = a1;
  sub_8F330();
  sub_8F2D0();
  uint64_t v34 = *(void (**)(void))(v18 + 8);
  uint64_t v32 = v18 + 8;
  uint64_t v33 = v34;
  uint64_t v94 = v16;
  sub_522A0();
  v34();
  if (sub_5754((uint64_t)v15, 1, v25) == 1)
  {
    sub_D68C((uint64_t)v15, &qword_BB0B0);
    sub_8F8E0();
    sub_518D0((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
    sub_70D0();
    int v36 = v35;
    uint64_t v37 = type metadata accessor for Shelf();
    *int v36 = 0x6E656E6F706D6F63;
    v36[1] = 0xEA00000000007374;
    _OWORD v36[2] = v37;
    uint64_t v38 = sub_522AC();
    v39(v38);
    swift_willThrow();
    sub_7358();
    v40();
    sub_522A0();
    v33();
  }
  else
  {
    uint64_t v42 = v89;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v31, v15, v25);
    sub_8F330();
    uint64_t v43 = sub_8F300();
    uint64_t v45 = v44;
    sub_522A0();
    v33();
    if (v45)
    {
      id v80 = v31;
      uint64_t v46 = v42;
      uint64_t v47 = v90;
      uint64_t *v90 = v43;
      v47[1] = v45;
      sub_8F330();
      uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
      v77(v83, v93, v91);
      uint64_t v49 = v84;
      uint64_t v48 = v85;
      sub_8F5B0();
      uint64_t v79 = v33;
      uint64_t v78 = v32;
      if (v48)
      {
        swift_errorRelease();
        uint64_t v83 = 0;
        uint64_t v50 = 1;
      }
      else
      {
        uint64_t v50 = 0;
        uint64_t v83 = 0;
      }
      uint64_t v58 = sub_8F5F0();
      sub_56F8(v49, v50, 1, v58);
      uint64_t v59 = type metadata accessor for Shelf();
      uint64_t v84 = (uint64_t)v47 + *(int *)(v59 + 20);
      sub_51918(v49, v84);
      NSString v60 = *(void (**)(uint64_t, char *, uint64_t))(v46 + 16);
      uint64_t v85 = v25;
      v60(v82, v80, v25);
      uint64_t v61 = v47;
      uint64_t v62 = v93;
      uint64_t v63 = v91;
      uint64_t v64 = (void (*)(uint64_t, uint64_t, uint64_t))v77;
      v77(v87, v93, v91);
      sub_51980();
      uint64_t v65 = sub_8FAC0();
      uint64_t v66 = sub_48884(v65);
      swift_bridgeObjectRelease();
      uint64_t v87 = (char *)v59;
      *(uint64_t *)((char *)v61 + *(int *)(v59 + 24)) = (uint64_t)v66;
      uint64_t v67 = v86;
      sub_8F330();
      uint64_t v68 = v88;
      v64(v88, v62, v63);
      uint64_t v69 = v83;
      sub_5086C(v67, v68, &v95);
      sub_7358();
      v70();
      sub_7358();
      v71();
      uint64_t v72 = sub_5227C();
      v73(v72);
      if (v69)
      {
        swift_bridgeObjectRelease();
        sub_D68C(v84, &qword_BDD70);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v74 = (_OWORD *)((char *)v90 + *((int *)v87 + 7));
        long long v75 = v96[0];
        *uint64_t v74 = v95;
        v74[1] = v75;
        double result = *(double *)((char *)v96 + 9);
        *(_OWORD *)((char *)v74 + 25) = *(_OWORD *)((char *)v96 + 9);
      }
    }
    else
    {
      sub_8F8E0();
      sub_518D0((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
      uint64_t v51 = v42;
      sub_70D0();
      uint64_t v53 = v52;
      uint64_t v54 = type metadata accessor for Shelf();
      *uint64_t v53 = 25705;
      v53[1] = 0xE200000000000000;
      v53[2] = v54;
      uint64_t v55 = sub_522AC();
      v56(v55);
      swift_willThrow();
      sub_7358();
      v57();
      sub_522A0();
      v33();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v25);
    }
  }
  return result;
}

void sub_51494(uint64_t *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = (int *)type metadata accessor for Shelf();
  uint64_t v9 = *(void **)((char *)v4 + v8[6]);
  uint64_t v10 = v9[2];
  if (v10)
  {
    char v30 = a2;
    uint64_t v29 = a3;
    swift_bridgeObjectRetain_n();
    unint64_t v11 = 0;
    uint64_t v12 = 4;
    while (1)
    {
      sub_820C(&v9[v12], v9[v12 + 3]);
      sub_8F500();
      sub_820C(a1, a1[3]);
      sub_8F500();
      char v13 = sub_8FD90();
      sub_1C464((uint64_t)v31);
      sub_1C464((uint64_t)v32);
      if (v13) {
        break;
      }
      ++v11;
      v12 += 5;
      if (v10 == v11)
      {
        swift_bridgeObjectRelease();
        a3 = v29;
        if (v30) {
          goto LABEL_8;
        }
LABEL_6:
        swift_bridgeObjectRelease();
        sub_51BA4((uint64_t)v4, (uint64_t)a3);
        return;
      }
    }
    swift_bridgeObjectRelease();
    LOBYTE(v16) = swift_isUniquelyReferenced_nonNull_native();
    if (v30)
    {
      if ((v16 & 1) == 0)
      {
        sub_7DC5C(v9);
        uint64_t v9 = v16;
      }
      if (v11 < v9[2]) {
        goto LABEL_21;
      }
      __break(1u);
    }
    if ((v16 & 1) == 0)
    {
      sub_7DC5C(v9);
      uint64_t v9 = v28;
    }
    if (v11 >= v9[2])
    {
      __break(1u);
      return;
    }
LABEL_21:
    sub_64C8(&v9[v12], a1);
    a3 = v29;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if ((a2 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
  sub_18294((uint64_t)a1, (uint64_t)v32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_2E828(0, v9[2] + 1, 1, v9);
    uint64_t v9 = v26;
  }
  unint64_t v15 = v9[2];
  unint64_t v14 = v9[3];
  if (v15 >= v14 >> 1)
  {
    sub_2E828(v14 > 1, v15 + 1, 1, v9);
    uint64_t v9 = v27;
  }
  long long v9[2] = v15 + 1;
  sub_573C(v32, (uint64_t)&v9[5 * v15 + 4]);
LABEL_22:
  uint64_t v17 = *v4;
  uint64_t v18 = v4[1];
  sub_51AB0((uint64_t)v4 + v8[5], (uint64_t)a3 + v8[5]);
  uint64_t v19 = (char *)v4 + v8[7];
  __int16 v20 = *(_WORD *)v19;
  char v21 = v19[2];
  uint64_t v22 = *((void *)v19 + 1);
  uint64_t v23 = *((void *)v19 + 4);
  char v24 = v19[40];
  *a3 = v17;
  a3[1] = v18;
  *(void *)((char *)a3 + v8[6]) = v9;
  uint64_t v25 = (char *)a3 + v8[7];
  *(_WORD *)uint64_t v25 = v20;
  _OWORD v25[2] = v21;
  *((void *)v25 + 1) = v22;
  *((_OWORD *)v25 + 1) = *((_OWORD *)v19 + 1);
  *((void *)v25 + 4) = v23;
  v25[40] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t sub_51740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 28);
  char v4 = *(unsigned char *)(v3 + 2);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 32);
  char v7 = *(unsigned char *)(v3 + 40);
  *(_WORD *)a2 = *(_WORD *)v3;
  *(unsigned char *)(a2 + 2) = v4;
  *(void *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v3 + 16);
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_517B0()
{
  return swift_bridgeObjectRetain();
}

double sub_517BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_50CFC(a1, a2, a3);
}

uint64_t sub_517D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_51AB0(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_517E4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_517F0()
{
  return sub_518D0(&qword_BD6A8, (void (*)(uint64_t))type metadata accessor for Shelf);
}

uint64_t sub_51838()
{
  return sub_518D0(&qword_BD6B0, (void (*)(uint64_t))type metadata accessor for Shelf);
}

unint64_t sub_51884()
{
  unint64_t result = qword_BD6B8;
  if (!qword_BD6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6B8);
  }
  return result;
}

uint64_t sub_518D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_51918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BDD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_51980()
{
  unint64_t result = qword_BD6C0;
  if (!qword_BD6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6C0);
  }
  return result;
}

unint64_t sub_519CC()
{
  unint64_t result = qword_BD6C8;
  if (!qword_BD6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6C8);
  }
  return result;
}

unint64_t sub_51A18()
{
  unint64_t result = qword_BD6D0;
  if (!qword_BD6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6D0);
  }
  return result;
}

unint64_t sub_51A64()
{
  unint64_t result = qword_BD6D8;
  if (!qword_BD6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6D8);
  }
  return result;
}

uint64_t sub_51AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BDD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_51B18(uint64_t a1)
{
  unint64_t v2 = (*v1)[3];
  if (a1 + 1 > (uint64_t)(v2 >> 1))
  {
    sub_2E828(v2 > 1, a1 + 1, 1, *v1);
    void *v1 = v3;
  }
}

void sub_51B58()
{
  char v1 = *v0;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2E828(0, v1[2] + 1, 1, v1);
    *unint64_t v0 = v3;
  }
}

uint64_t sub_51BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *sub_51C08(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x51CD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for Shelf.Presentation.ToggleStyle()
{
}

unsigned char *sub_51D08(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x51DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Shelf.Presentation.Axis()
{
}

unsigned char *sub_51E08(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x51ED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for Shelf.Presentation.Appearance()
{
}

uint64_t sub_51F08()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_51F44(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_51F9C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 sub_5202C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_52040(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_520A0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_520F4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for Shelf.Presentation()
{
}

unint64_t sub_52164()
{
  unint64_t result = qword_BD6E0;
  if (!qword_BD6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6E0);
  }
  return result;
}

unint64_t sub_521B4()
{
  unint64_t result = qword_BD6E8;
  if (!qword_BD6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6E8);
  }
  return result;
}

unint64_t sub_52204()
{
  unint64_t result = qword_BD6F0;
  if (!qword_BD6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6F0);
  }
  return result;
}

uint64_t sub_5227C()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_52294()
{
  return *v0;
}

uint64_t sub_522AC()
{
  return v0;
}

unsigned char *sub_522D4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x523A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void _s13NavigationBarV10AppearanceOMa()
{
}

uint64_t sub_523D4(uint64_t a1)
{
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 104)) {
      sub_616C(a1 + 80);
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 160) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 184) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 256)) {
      sub_616C(a1 + 232);
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 312) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 336) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 408)) {
      sub_616C(a1 + 384);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 464) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 488) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 560)) {
      sub_616C(a1 + 536);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 672);
  if (v3 != 255)
  {
    if (v3)
    {
      return sub_616C(a1 + 624);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_525A4(char *__dst, char *__src)
{
  uint64_t v4 = *((void *)__src + 1);
  if (v4 == 1)
  {
    memcpy(__dst, __src, 0x90uLL);
  }
  else
  {
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = v4;
    __dst[16] = __src[16];
    uint64_t v5 = *((void *)__src + 4);
    swift_bridgeObjectRetain();
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(__src + 40);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 40) = v6;
      *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 56);
    }
    else
    {
      *((void *)__dst + 3) = *((void *)__src + 3);
      *((void *)__dst + 4) = v5;
      uint64_t v7 = *((void *)__src + 6);
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = v7;
      uint64_t v8 = *((void *)__src + 8);
      *((void *)__dst + 7) = *((void *)__src + 7);
      *((void *)__dst + 8) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((void *)__dst + 9) = *((void *)__src + 9);
    uint64_t v9 = *((void *)__src + 13);
    swift_retain();
    if (v9)
    {
      uint64_t v10 = *((void *)__src + 14);
      *((void *)__dst + 13) = v9;
      *((void *)__dst + 14) = v10;
      (**(void (***)(char *, char *, uint64_t))(v9 - 8))(__dst + 80, __src + 80, v9);
    }
    else
    {
      long long v11 = *((_OWORD *)__src + 6);
      *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 6) = v11;
      *((void *)__dst + 14) = *((void *)__src + 14);
    }
    __dst[120] = __src[120];
    uint64_t v12 = *((void *)__src + 17);
    *((void *)__dst + 16) = *((void *)__src + 16);
    *((void *)__dst + 17) = v12;
    swift_bridgeObjectRetain();
  }
  __dst[144] = __src[144];
  uint64_t v13 = *((void *)__src + 20);
  if (v13 == 1)
  {
    memcpy(__dst + 152, __src + 152, 0x90uLL);
  }
  else
  {
    *((void *)__dst + 19) = *((void *)__src + 19);
    *((void *)__dst + 20) = v13;
    __dst[168] = __src[168];
    uint64_t v14 = *((void *)__src + 23);
    swift_bridgeObjectRetain();
    if (v14 == 1)
    {
      long long v15 = *((_OWORD *)__src + 12);
      *((_OWORD *)__dst + 11) = *((_OWORD *)__src + 11);
      *((_OWORD *)__dst + 12) = v15;
      *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
    }
    else
    {
      *((void *)__dst + 22) = *((void *)__src + 22);
      *((void *)__dst + 23) = v14;
      uint64_t v16 = *((void *)__src + 25);
      *((void *)__dst + 24) = *((void *)__src + 24);
      *((void *)__dst + 25) = v16;
      uint64_t v17 = *((void *)__src + 27);
      *((void *)__dst + 26) = *((void *)__src + 26);
      *((void *)__dst + 27) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((void *)__dst + 28) = *((void *)__src + 28);
    uint64_t v18 = *((void *)__src + 32);
    swift_retain();
    if (v18)
    {
      uint64_t v19 = *((void *)__src + 33);
      *((void *)__dst + 32) = v18;
      *((void *)__dst + 33) = v19;
      (**(void (***)(char *, char *, uint64_t))(v18 - 8))(__dst + 232, __src + 232, v18);
    }
    else
    {
      long long v20 = *(_OWORD *)(__src + 248);
      *(_OWORD *)(__dst + 232) = *(_OWORD *)(__src + 232);
      *(_OWORD *)(__dst + 248) = v20;
      *((void *)__dst + 33) = *((void *)__src + 33);
    }
    __dst[272] = __src[272];
    uint64_t v21 = *((void *)__src + 36);
    *((void *)__dst + 35) = *((void *)__src + 35);
    *((void *)__dst + 36) = v21;
    swift_bridgeObjectRetain();
  }
  __dst[296] = __src[296];
  uint64_t v22 = *((void *)__src + 39);
  if (v22 == 1)
  {
    memcpy(__dst + 304, __src + 304, 0x90uLL);
  }
  else
  {
    *((void *)__dst + 38) = *((void *)__src + 38);
    *((void *)__dst + 39) = v22;
    __dst[320] = __src[320];
    uint64_t v23 = *((void *)__src + 42);
    swift_bridgeObjectRetain();
    if (v23 == 1)
    {
      long long v24 = *(_OWORD *)(__src + 344);
      *(_OWORD *)(__dst + 328) = *(_OWORD *)(__src + 328);
      *(_OWORD *)(__dst + 344) = v24;
      *(_OWORD *)(__dst + 360) = *(_OWORD *)(__src + 360);
    }
    else
    {
      *((void *)__dst + 41) = *((void *)__src + 41);
      *((void *)__dst + 42) = v23;
      uint64_t v25 = *((void *)__src + 44);
      *((void *)__dst + 43) = *((void *)__src + 43);
      *((void *)__dst + 44) = v25;
      uint64_t v26 = *((void *)__src + 46);
      *((void *)__dst + 45) = *((void *)__src + 45);
      *((void *)__dst + 46) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((void *)__dst + 47) = *((void *)__src + 47);
    uint64_t v27 = *((void *)__src + 51);
    swift_retain();
    if (v27)
    {
      uint64_t v28 = *((void *)__src + 52);
      *((void *)__dst + 51) = v27;
      *((void *)__dst + 52) = v28;
      (**(void (***)(char *, char *, uint64_t))(v27 - 8))(__dst + 384, __src + 384, v27);
    }
    else
    {
      long long v29 = *((_OWORD *)__src + 25);
      *((_OWORD *)__dst + 24) = *((_OWORD *)__src + 24);
      *((_OWORD *)__dst + 25) = v29;
      *((void *)__dst + 52) = *((void *)__src + 52);
    }
    __dst[424] = __src[424];
    uint64_t v30 = *((void *)__src + 55);
    *((void *)__dst + 54) = *((void *)__src + 54);
    *((void *)__dst + 55) = v30;
    swift_bridgeObjectRetain();
  }
  *((void *)__dst + 56) = *((void *)__src + 56);
  uint64_t v31 = *((void *)__src + 58);
  swift_bridgeObjectRetain();
  if (v31 == 1)
  {
    memcpy(__dst + 456, __src + 456, 0x90uLL);
  }
  else
  {
    *((void *)__dst + 57) = *((void *)__src + 57);
    *((void *)__dst + 58) = v31;
    __dst[472] = __src[472];
    uint64_t v32 = *((void *)__src + 61);
    swift_bridgeObjectRetain();
    if (v32 == 1)
    {
      long long v33 = *((_OWORD *)__src + 31);
      *((_OWORD *)__dst + 30) = *((_OWORD *)__src + 30);
      *((_OWORD *)__dst + 31) = v33;
      *((_OWORD *)__dst + 32) = *((_OWORD *)__src + 32);
    }
    else
    {
      *((void *)__dst + 60) = *((void *)__src + 60);
      *((void *)__dst + 61) = v32;
      uint64_t v34 = *((void *)__src + 63);
      *((void *)__dst + 62) = *((void *)__src + 62);
      *((void *)__dst + 63) = v34;
      *((void *)__dst + 64) = *((void *)__src + 64);
      *((void *)__dst + 65) = *((void *)__src + 65);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((void *)__dst + 66) = *((void *)__src + 66);
    uint64_t v35 = *((void *)__src + 70);
    swift_retain();
    if (v35)
    {
      *((void *)__dst + 70) = v35;
      *((void *)__dst + 71) = *((void *)__src + 71);
      (**(void (***)(char *, char *, uint64_t))(v35 - 8))(__dst + 536, __src + 536, v35);
    }
    else
    {
      long long v36 = *(_OWORD *)(__src + 552);
      *(_OWORD *)(__dst + 536) = *(_OWORD *)(__src + 536);
      *(_OWORD *)(__dst + 552) = v36;
      *((void *)__dst + 71) = *((void *)__src + 71);
    }
    __dst[576] = __src[576];
    *((void *)__dst + 73) = *((void *)__src + 73);
    *((void *)__dst + 74) = *((void *)__src + 74);
    swift_bridgeObjectRetain();
  }
  __dst[600] = __src[600];
  *((void *)__dst + 76) = *((void *)__src + 76);
  *((void *)__dst + 77) = *((void *)__src + 77);
  int v37 = __src[672];
  swift_bridgeObjectRetain();
  if (v37 == 255)
  {
    long long v38 = *((_OWORD *)__src + 40);
    *((_OWORD *)__dst + 39) = *((_OWORD *)__src + 39);
    *((_OWORD *)__dst + 40) = v38;
    *((_OWORD *)__dst + 41) = *((_OWORD *)__src + 41);
    __dst[672] = __src[672];
  }
  else if (v37)
  {
    uint64_t v39 = *((void *)__src + 81);
    *((void *)__dst + 81) = v39;
    *((void *)__dst + 82) = *((void *)__src + 82);
    (**(void (***)(char *, char *))(v39 - 8))(__dst + 624, __src + 624);
    __dst[672] = 1;
  }
  else
  {
    *((void *)__dst + 78) = *((void *)__src + 78);
    *((void *)__dst + 79) = *((void *)__src + 79);
    *((void *)__dst + 80) = *((void *)__src + 80);
    *((void *)__dst + 81) = *((void *)__src + 81);
    *((void *)__dst + 82) = *((void *)__src + 82);
    *((void *)__dst + 83) = *((void *)__src + 83);
    __dst[672] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __dst[673] = __src[673];
  return __dst;
}

char *sub_52B2C(char *__dst, char *__src)
{
  uint64_t v4 = *((void *)__src + 1);
  if (*((void *)__dst + 1) != 1)
  {
    if (v4 == 1)
    {
      sub_539D4((uint64_t)__dst);
      goto LABEL_7;
    }
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = *((void *)__src + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __dst[16] = __src[16];
    uint64_t v8 = (long long *)(__dst + 24);
    uint64_t v9 = (long long *)(__src + 24);
    uint64_t v10 = *((void *)__src + 4);
    if (*((void *)__dst + 4) == 1)
    {
      if (v10 == 1)
      {
        long long v11 = *v9;
        long long v12 = *(_OWORD *)(__src + 56);
        *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
        *(_OWORD *)(__dst + 56) = v12;
        *uint64_t v8 = v11;
      }
      else
      {
        *((void *)__dst + 3) = *((void *)__src + 3);
        *((void *)__dst + 4) = *((void *)__src + 4);
        *((void *)__dst + 5) = *((void *)__src + 5);
        *((void *)__dst + 6) = *((void *)__src + 6);
        *((void *)__dst + 7) = *((void *)__src + 7);
        *((void *)__dst + 8) = *((void *)__src + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v10 == 1)
    {
      sub_4B1DC((uint64_t)(__dst + 24));
      long long v15 = *(_OWORD *)(__src + 40);
      long long v14 = *(_OWORD *)(__src + 56);
      *uint64_t v8 = *v9;
      *(_OWORD *)(__dst + 40) = v15;
      *(_OWORD *)(__dst + 56) = v14;
    }
    else
    {
      *((void *)__dst + 3) = *((void *)__src + 3);
      *((void *)__dst + 4) = *((void *)__src + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = *((void *)__src + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 7) = *((void *)__src + 7);
      *((void *)__dst + 8) = *((void *)__src + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *((void *)__dst + 9) = *((void *)__src + 9);
    swift_retain();
    swift_release();
    uint64_t v18 = *((void *)__src + 13);
    if (*((void *)__dst + 13))
    {
      if (v18)
      {
        sub_64C8((uint64_t *)__dst + 10, (uint64_t *)__src + 10);
LABEL_27:
        __dst[120] = __src[120];
        *((void *)__dst + 16) = *((void *)__src + 16);
        *((void *)__dst + 17) = *((void *)__src + 17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      sub_616C((uint64_t)(__dst + 80));
    }
    else if (v18)
    {
      *((void *)__dst + 13) = v18;
      *((void *)__dst + 14) = *((void *)__src + 14);
      (**(void (***)(char *, char *))(v18 - 8))(__dst + 80, __src + 80);
      goto LABEL_27;
    }
    long long v19 = *((_OWORD *)__src + 5);
    long long v20 = *((_OWORD *)__src + 6);
    *((void *)__dst + 14) = *((void *)__src + 14);
    *((_OWORD *)__dst + 5) = v19;
    *((_OWORD *)__dst + 6) = v20;
    goto LABEL_27;
  }
  if (v4 == 1)
  {
LABEL_7:
    memcpy(__dst, __src, 0x90uLL);
    goto LABEL_28;
  }
  *(void *)__dst = *(void *)__src;
  *((void *)__dst + 1) = *((void *)__src + 1);
  __dst[16] = __src[16];
  uint64_t v5 = *((void *)__src + 4);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    long long v6 = *(_OWORD *)(__src + 24);
    long long v7 = *(_OWORD *)(__src + 56);
    *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
    *(_OWORD *)(__dst + 56) = v7;
    *(_OWORD *)(__dst + 24) = v6;
  }
  else
  {
    *((void *)__dst + 3) = *((void *)__src + 3);
    *((void *)__dst + 4) = *((void *)__src + 4);
    *((void *)__dst + 5) = *((void *)__src + 5);
    *((void *)__dst + 6) = *((void *)__src + 6);
    *((void *)__dst + 7) = *((void *)__src + 7);
    *((void *)__dst + 8) = *((void *)__src + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((void *)__dst + 9) = *((void *)__src + 9);
  uint64_t v13 = *((void *)__src + 13);
  swift_retain();
  if (v13)
  {
    *((void *)__dst + 13) = v13;
    *((void *)__dst + 14) = *((void *)__src + 14);
    (**(void (***)(char *, char *, uint64_t))(v13 - 8))(__dst + 80, __src + 80, v13);
  }
  else
  {
    long long v16 = *((_OWORD *)__src + 5);
    long long v17 = *((_OWORD *)__src + 6);
    *((void *)__dst + 14) = *((void *)__src + 14);
    *((_OWORD *)__dst + 5) = v16;
    *((_OWORD *)__dst + 6) = v17;
  }
  __dst[120] = __src[120];
  *((void *)__dst + 16) = *((void *)__src + 16);
  *((void *)__dst + 17) = *((void *)__src + 17);
  swift_bridgeObjectRetain();
LABEL_28:
  __dst[144] = __src[144];
  uint64_t v21 = *((void *)__src + 20);
  if (*((void *)__dst + 20) != 1)
  {
    if (v21 == 1)
    {
      sub_539D4((uint64_t)(__dst + 152));
      goto LABEL_34;
    }
    *((void *)__dst + 19) = *((void *)__src + 19);
    *((void *)__dst + 20) = *((void *)__src + 20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __dst[168] = __src[168];
    uint64_t v25 = (long long *)(__dst + 176);
    uint64_t v26 = (long long *)(__src + 176);
    uint64_t v27 = *((void *)__src + 23);
    if (*((void *)__dst + 23) == 1)
    {
      if (v27 == 1)
      {
        long long v28 = *v26;
        long long v29 = *((_OWORD *)__src + 13);
        *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
        *((_OWORD *)__dst + 13) = v29;
        *uint64_t v25 = v28;
      }
      else
      {
        *((void *)__dst + 22) = *((void *)__src + 22);
        *((void *)__dst + 23) = *((void *)__src + 23);
        *((void *)__dst + 24) = *((void *)__src + 24);
        *((void *)__dst + 25) = *((void *)__src + 25);
        *((void *)__dst + 26) = *((void *)__src + 26);
        *((void *)__dst + 27) = *((void *)__src + 27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v27 == 1)
    {
      sub_4B1DC((uint64_t)(__dst + 176));
      long long v32 = *((_OWORD *)__src + 12);
      long long v31 = *((_OWORD *)__src + 13);
      *uint64_t v25 = *v26;
      *((_OWORD *)__dst + 12) = v32;
      *((_OWORD *)__dst + 13) = v31;
    }
    else
    {
      *((void *)__dst + 22) = *((void *)__src + 22);
      *((void *)__dst + 23) = *((void *)__src + 23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 24) = *((void *)__src + 24);
      *((void *)__dst + 25) = *((void *)__src + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 26) = *((void *)__src + 26);
      *((void *)__dst + 27) = *((void *)__src + 27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *((void *)__dst + 28) = *((void *)__src + 28);
    swift_retain();
    swift_release();
    uint64_t v35 = *((void *)__src + 32);
    if (*((void *)__dst + 32))
    {
      if (v35)
      {
        sub_64C8((uint64_t *)__dst + 29, (uint64_t *)__src + 29);
LABEL_54:
        __dst[272] = __src[272];
        *((void *)__dst + 35) = *((void *)__src + 35);
        *((void *)__dst + 36) = *((void *)__src + 36);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      sub_616C((uint64_t)(__dst + 232));
    }
    else if (v35)
    {
      *((void *)__dst + 32) = v35;
      *((void *)__dst + 33) = *((void *)__src + 33);
      (**(void (***)(char *, char *))(v35 - 8))(__dst + 232, __src + 232);
      goto LABEL_54;
    }
    long long v36 = *(_OWORD *)(__src + 232);
    long long v37 = *(_OWORD *)(__src + 248);
    *((void *)__dst + 33) = *((void *)__src + 33);
    *(_OWORD *)(__dst + 232) = v36;
    *(_OWORD *)(__dst + 248) = v37;
    goto LABEL_54;
  }
  if (v21 == 1)
  {
LABEL_34:
    memcpy(__dst + 152, __src + 152, 0x90uLL);
    goto LABEL_55;
  }
  *((void *)__dst + 19) = *((void *)__src + 19);
  *((void *)__dst + 20) = *((void *)__src + 20);
  __dst[168] = __src[168];
  uint64_t v22 = *((void *)__src + 23);
  swift_bridgeObjectRetain();
  if (v22 == 1)
  {
    long long v23 = *((_OWORD *)__src + 11);
    long long v24 = *((_OWORD *)__src + 13);
    *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
    *((_OWORD *)__dst + 13) = v24;
    *((_OWORD *)__dst + 11) = v23;
  }
  else
  {
    *((void *)__dst + 22) = *((void *)__src + 22);
    *((void *)__dst + 23) = *((void *)__src + 23);
    *((void *)__dst + 24) = *((void *)__src + 24);
    *((void *)__dst + 25) = *((void *)__src + 25);
    *((void *)__dst + 26) = *((void *)__src + 26);
    *((void *)__dst + 27) = *((void *)__src + 27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((void *)__dst + 28) = *((void *)__src + 28);
  uint64_t v30 = *((void *)__src + 32);
  swift_retain();
  if (v30)
  {
    *((void *)__dst + 32) = v30;
    *((void *)__dst + 33) = *((void *)__src + 33);
    (**(void (***)(char *, char *, uint64_t))(v30 - 8))(__dst + 232, __src + 232, v30);
  }
  else
  {
    long long v33 = *(_OWORD *)(__src + 232);
    long long v34 = *(_OWORD *)(__src + 248);
    *((void *)__dst + 33) = *((void *)__src + 33);
    *(_OWORD *)(__dst + 232) = v33;
    *(_OWORD *)(__dst + 248) = v34;
  }
  __dst[272] = __src[272];
  *((void *)__dst + 35) = *((void *)__src + 35);
  *((void *)__dst + 36) = *((void *)__src + 36);
  swift_bridgeObjectRetain();
LABEL_55:
  __dst[296] = __src[296];
  uint64_t v38 = *((void *)__src + 39);
  if (*((void *)__dst + 39) != 1)
  {
    if (v38 == 1)
    {
      sub_4A89C((uint64_t)(__dst + 304));
      goto LABEL_61;
    }
    *((void *)__dst + 38) = *((void *)__src + 38);
    *((void *)__dst + 39) = *((void *)__src + 39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __dst[320] = __src[320];
    uint64_t v42 = (long long *)(__dst + 328);
    uint64_t v43 = (long long *)(__src + 328);
    uint64_t v44 = *((void *)__src + 42);
    if (*((void *)__dst + 42) == 1)
    {
      if (v44 == 1)
      {
        long long v45 = *v43;
        long long v46 = *(_OWORD *)(__src + 360);
        *(_OWORD *)(__dst + 344) = *(_OWORD *)(__src + 344);
        *(_OWORD *)(__dst + 360) = v46;
        *uint64_t v42 = v45;
      }
      else
      {
        *((void *)__dst + 41) = *((void *)__src + 41);
        *((void *)__dst + 42) = *((void *)__src + 42);
        *((void *)__dst + 43) = *((void *)__src + 43);
        *((void *)__dst + 44) = *((void *)__src + 44);
        *((void *)__dst + 45) = *((void *)__src + 45);
        *((void *)__dst + 46) = *((void *)__src + 46);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v44 == 1)
    {
      sub_4B1DC((uint64_t)(__dst + 328));
      long long v49 = *(_OWORD *)(__src + 344);
      long long v48 = *(_OWORD *)(__src + 360);
      *uint64_t v42 = *v43;
      *(_OWORD *)(__dst + 344) = v49;
      *(_OWORD *)(__dst + 360) = v48;
    }
    else
    {
      *((void *)__dst + 41) = *((void *)__src + 41);
      *((void *)__dst + 42) = *((void *)__src + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 43) = *((void *)__src + 43);
      *((void *)__dst + 44) = *((void *)__src + 44);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 45) = *((void *)__src + 45);
      *((void *)__dst + 46) = *((void *)__src + 46);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *((void *)__dst + 47) = *((void *)__src + 47);
    swift_retain();
    swift_release();
    uint64_t v52 = *((void *)__src + 51);
    if (*((void *)__dst + 51))
    {
      if (v52)
      {
        sub_64C8((uint64_t *)__dst + 48, (uint64_t *)__src + 48);
LABEL_81:
        __dst[424] = __src[424];
        *((void *)__dst + 54) = *((void *)__src + 54);
        *((void *)__dst + 55) = *((void *)__src + 55);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_82;
      }
      sub_616C((uint64_t)(__dst + 384));
    }
    else if (v52)
    {
      *((void *)__dst + 51) = v52;
      *((void *)__dst + 52) = *((void *)__src + 52);
      (**(void (***)(char *, char *))(v52 - 8))(__dst + 384, __src + 384);
      goto LABEL_81;
    }
    long long v53 = *((_OWORD *)__src + 24);
    long long v54 = *((_OWORD *)__src + 25);
    *((void *)__dst + 52) = *((void *)__src + 52);
    *((_OWORD *)__dst + 24) = v53;
    *((_OWORD *)__dst + 25) = v54;
    goto LABEL_81;
  }
  if (v38 == 1)
  {
LABEL_61:
    memcpy(__dst + 304, __src + 304, 0x90uLL);
    goto LABEL_82;
  }
  *((void *)__dst + 38) = *((void *)__src + 38);
  *((void *)__dst + 39) = *((void *)__src + 39);
  __dst[320] = __src[320];
  uint64_t v39 = *((void *)__src + 42);
  swift_bridgeObjectRetain();
  if (v39 == 1)
  {
    long long v40 = *(_OWORD *)(__src + 328);
    long long v41 = *(_OWORD *)(__src + 360);
    *(_OWORD *)(__dst + 344) = *(_OWORD *)(__src + 344);
    *(_OWORD *)(__dst + 360) = v41;
    *(_OWORD *)(__dst + 328) = v40;
  }
  else
  {
    *((void *)__dst + 41) = *((void *)__src + 41);
    *((void *)__dst + 42) = *((void *)__src + 42);
    *((void *)__dst + 43) = *((void *)__src + 43);
    *((void *)__dst + 44) = *((void *)__src + 44);
    *((void *)__dst + 45) = *((void *)__src + 45);
    *((void *)__dst + 46) = *((void *)__src + 46);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((void *)__dst + 47) = *((void *)__src + 47);
  uint64_t v47 = *((void *)__src + 51);
  swift_retain();
  if (v47)
  {
    *((void *)__dst + 51) = v47;
    *((void *)__dst + 52) = *((void *)__src + 52);
    (**(void (***)(char *, char *, uint64_t))(v47 - 8))(__dst + 384, __src + 384, v47);
  }
  else
  {
    long long v50 = *((_OWORD *)__src + 24);
    long long v51 = *((_OWORD *)__src + 25);
    *((void *)__dst + 52) = *((void *)__src + 52);
    *((_OWORD *)__dst + 24) = v50;
    *((_OWORD *)__dst + 25) = v51;
  }
  __dst[424] = __src[424];
  *((void *)__dst + 54) = *((void *)__src + 54);
  *((void *)__dst + 55) = *((void *)__src + 55);
  swift_bridgeObjectRetain();
LABEL_82:
  *((void *)__dst + 56) = *((void *)__src + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = *((void *)__src + 58);
  if (*((void *)__dst + 58) != 1)
  {
    if (v55 == 1)
    {
      sub_4A89C((uint64_t)(__dst + 456));
      goto LABEL_88;
    }
    *((void *)__dst + 57) = *((void *)__src + 57);
    *((void *)__dst + 58) = *((void *)__src + 58);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __dst[472] = __src[472];
    uint64_t v59 = (long long *)(__dst + 480);
    NSString v60 = (long long *)(__src + 480);
    uint64_t v61 = *((void *)__src + 61);
    if (*((void *)__dst + 61) == 1)
    {
      if (v61 == 1)
      {
        long long v62 = *v60;
        long long v63 = *((_OWORD *)__src + 32);
        *((_OWORD *)__dst + 31) = *((_OWORD *)__src + 31);
        *((_OWORD *)__dst + 32) = v63;
        *uint64_t v59 = v62;
      }
      else
      {
        *((void *)__dst + 60) = *((void *)__src + 60);
        *((void *)__dst + 61) = *((void *)__src + 61);
        *((void *)__dst + 62) = *((void *)__src + 62);
        *((void *)__dst + 63) = *((void *)__src + 63);
        *((void *)__dst + 64) = *((void *)__src + 64);
        *((void *)__dst + 65) = *((void *)__src + 65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v61 == 1)
    {
      sub_4B1DC((uint64_t)(__dst + 480));
      long long v66 = *((_OWORD *)__src + 31);
      long long v65 = *((_OWORD *)__src + 32);
      *uint64_t v59 = *v60;
      *((_OWORD *)__dst + 31) = v66;
      *((_OWORD *)__dst + 32) = v65;
    }
    else
    {
      *((void *)__dst + 60) = *((void *)__src + 60);
      *((void *)__dst + 61) = *((void *)__src + 61);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 62) = *((void *)__src + 62);
      *((void *)__dst + 63) = *((void *)__src + 63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 64) = *((void *)__src + 64);
      *((void *)__dst + 65) = *((void *)__src + 65);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *((void *)__dst + 66) = *((void *)__src + 66);
    swift_retain();
    swift_release();
    uint64_t v69 = *((void *)__src + 70);
    if (*((void *)__dst + 70))
    {
      if (v69)
      {
        sub_64C8((uint64_t *)__dst + 67, (uint64_t *)__src + 67);
LABEL_108:
        __dst[576] = __src[576];
        *((void *)__dst + 73) = *((void *)__src + 73);
        *((void *)__dst + 74) = *((void *)__src + 74);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_109;
      }
      sub_616C((uint64_t)(__dst + 536));
    }
    else if (v69)
    {
      *((void *)__dst + 70) = v69;
      *((void *)__dst + 71) = *((void *)__src + 71);
      (**(void (***)(char *, char *))(v69 - 8))(__dst + 536, __src + 536);
      goto LABEL_108;
    }
    long long v70 = *(_OWORD *)(__src + 536);
    long long v71 = *(_OWORD *)(__src + 552);
    *((void *)__dst + 71) = *((void *)__src + 71);
    *(_OWORD *)(__dst + 536) = v70;
    *(_OWORD *)(__dst + 552) = v71;
    goto LABEL_108;
  }
  if (v55 == 1)
  {
LABEL_88:
    memcpy(__dst + 456, __src + 456, 0x90uLL);
    goto LABEL_109;
  }
  *((void *)__dst + 57) = *((void *)__src + 57);
  *((void *)__dst + 58) = *((void *)__src + 58);
  __dst[472] = __src[472];
  uint64_t v56 = *((void *)__src + 61);
  swift_bridgeObjectRetain();
  if (v56 == 1)
  {
    long long v57 = *((_OWORD *)__src + 30);
    long long v58 = *((_OWORD *)__src + 32);
    *((_OWORD *)__dst + 31) = *((_OWORD *)__src + 31);
    *((_OWORD *)__dst + 32) = v58;
    *((_OWORD *)__dst + 30) = v57;
  }
  else
  {
    *((void *)__dst + 60) = *((void *)__src + 60);
    *((void *)__dst + 61) = *((void *)__src + 61);
    *((void *)__dst + 62) = *((void *)__src + 62);
    *((void *)__dst + 63) = *((void *)__src + 63);
    *((void *)__dst + 64) = *((void *)__src + 64);
    *((void *)__dst + 65) = *((void *)__src + 65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((void *)__dst + 66) = *((void *)__src + 66);
  uint64_t v64 = *((void *)__src + 70);
  swift_retain();
  if (v64)
  {
    *((void *)__dst + 70) = v64;
    *((void *)__dst + 71) = *((void *)__src + 71);
    (**(void (***)(char *, char *, uint64_t))(v64 - 8))(__dst + 536, __src + 536, v64);
  }
  else
  {
    long long v67 = *(_OWORD *)(__src + 536);
    long long v68 = *(_OWORD *)(__src + 552);
    *((void *)__dst + 71) = *((void *)__src + 71);
    *(_OWORD *)(__dst + 536) = v67;
    *(_OWORD *)(__dst + 552) = v68;
  }
  __dst[576] = __src[576];
  *((void *)__dst + 73) = *((void *)__src + 73);
  *((void *)__dst + 74) = *((void *)__src + 74);
  swift_bridgeObjectRetain();
LABEL_109:
  __dst[600] = __src[600];
  *((void *)__dst + 76) = *((void *)__src + 76);
  *((void *)__dst + 77) = *((void *)__src + 77);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = __dst + 624;
  NSString v73 = (long long *)(__src + 624);
  uint64_t v74 = __dst + 672;
  int v75 = __src[672];
  if (__dst[672] == 255)
  {
    if (v75 == 255)
    {
      long long v79 = *v73;
      long long v80 = *((_OWORD *)__src + 40);
      long long v81 = *((_OWORD *)__src + 41);
      __dst[672] = __src[672];
      *((_OWORD *)__dst + 40) = v80;
      *((_OWORD *)__dst + 41) = v81;
      *uint64_t v72 = v79;
      goto LABEL_119;
    }
    if (v75)
    {
LABEL_116:
      uint64_t v82 = *((void *)__src + 81);
      *((void *)__dst + 81) = v82;
      *((void *)__dst + 82) = *((void *)__src + 82);
      (**(void (***)(char *, char *))(v82 - 8))(__dst + 624, __src + 624);
      *uint64_t v74 = 1;
      goto LABEL_119;
    }
LABEL_118:
    *((void *)__dst + 78) = *((void *)__src + 78);
    *((void *)__dst + 79) = *((void *)__src + 79);
    *((void *)__dst + 80) = *((void *)__src + 80);
    *((void *)__dst + 81) = *((void *)__src + 81);
    *((void *)__dst + 82) = *((void *)__src + 82);
    *((void *)__dst + 83) = *((void *)__src + 83);
    *uint64_t v74 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_119;
  }
  if (v75 != 255)
  {
    if (__dst == __src) {
      goto LABEL_119;
    }
    sub_53A04((uint64_t)(__dst + 624));
    if (__src[672]) {
      goto LABEL_116;
    }
    goto LABEL_118;
  }
  sub_53A04((uint64_t)(__dst + 624));
  long long v77 = *((_OWORD *)__src + 40);
  long long v76 = *((_OWORD *)__src + 41);
  long long v78 = *v73;
  __dst[672] = __src[672];
  *((_OWORD *)__dst + 40) = v77;
  *((_OWORD *)__dst + 41) = v76;
  *uint64_t v72 = v78;
LABEL_119:
  __dst[673] = __src[673];
  return __dst;
}

uint64_t sub_539D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_53A04(uint64_t a1)
{
  return a1;
}

void *sub_53A34(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2A2uLL);
}

char *sub_53A3C(char *__dst, char *__src)
{
  if (*((void *)__dst + 1) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *((void *)__src + 1);
  if (v4 == 1)
  {
    sub_539D4((uint64_t)__dst);
LABEL_4:
    memcpy(__dst, __src, 0x90uLL);
    goto LABEL_13;
  }
  *(void *)__dst = *(void *)__src;
  *((void *)__dst + 1) = v4;
  swift_bridgeObjectRelease();
  __dst[16] = __src[16];
  if (*((void *)__dst + 4) != 1)
  {
    uint64_t v5 = *((void *)__src + 4);
    if (v5 != 1)
    {
      *((void *)__dst + 3) = *((void *)__src + 3);
      *((void *)__dst + 4) = v5;
      swift_bridgeObjectRelease();
      uint64_t v7 = *((void *)__src + 6);
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *((void *)__src + 8);
      *((void *)__dst + 7) = *((void *)__src + 7);
      *((void *)__dst + 8) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_4B1DC((uint64_t)(__dst + 24));
  }
  long long v6 = *(_OWORD *)(__src + 40);
  *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
  *(_OWORD *)(__dst + 40) = v6;
  *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 56);
LABEL_10:
  *((void *)__dst + 9) = *((void *)__src + 9);
  swift_release();
  if (*((void *)__dst + 13)) {
    sub_616C((uint64_t)(__dst + 80));
  }
  long long v9 = *((_OWORD *)__src + 6);
  *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
  *((_OWORD *)__dst + 6) = v9;
  *((void *)__dst + 14) = *((void *)__src + 14);
  __dst[120] = __src[120];
  uint64_t v10 = *((void *)__src + 17);
  *((void *)__dst + 16) = *((void *)__src + 16);
  *((void *)__dst + 17) = v10;
  swift_bridgeObjectRelease();
LABEL_13:
  __dst[144] = __src[144];
  if (*((void *)__dst + 20) == 1)
  {
LABEL_16:
    memcpy(__dst + 152, __src + 152, 0x90uLL);
    goto LABEL_25;
  }
  uint64_t v11 = *((void *)__src + 20);
  if (v11 == 1)
  {
    sub_539D4((uint64_t)(__dst + 152));
    goto LABEL_16;
  }
  *((void *)__dst + 19) = *((void *)__src + 19);
  *((void *)__dst + 20) = v11;
  swift_bridgeObjectRelease();
  __dst[168] = __src[168];
  if (*((void *)__dst + 23) != 1)
  {
    uint64_t v12 = *((void *)__src + 23);
    if (v12 != 1)
    {
      *((void *)__dst + 22) = *((void *)__src + 22);
      *((void *)__dst + 23) = v12;
      swift_bridgeObjectRelease();
      uint64_t v14 = *((void *)__src + 25);
      *((void *)__dst + 24) = *((void *)__src + 24);
      *((void *)__dst + 25) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *((void *)__src + 27);
      *((void *)__dst + 26) = *((void *)__src + 26);
      *((void *)__dst + 27) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_4B1DC((uint64_t)(__dst + 176));
  }
  long long v13 = *((_OWORD *)__src + 12);
  *((_OWORD *)__dst + 11) = *((_OWORD *)__src + 11);
  *((_OWORD *)__dst + 12) = v13;
  *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
LABEL_22:
  *((void *)__dst + 28) = *((void *)__src + 28);
  swift_release();
  if (*((void *)__dst + 32)) {
    sub_616C((uint64_t)(__dst + 232));
  }
  long long v16 = *(_OWORD *)(__src + 248);
  *(_OWORD *)(__dst + 232) = *(_OWORD *)(__src + 232);
  *(_OWORD *)(__dst + 248) = v16;
  *((void *)__dst + 33) = *((void *)__src + 33);
  __dst[272] = __src[272];
  uint64_t v17 = *((void *)__src + 36);
  *((void *)__dst + 35) = *((void *)__src + 35);
  *((void *)__dst + 36) = v17;
  swift_bridgeObjectRelease();
LABEL_25:
  __dst[296] = __src[296];
  if (*((void *)__dst + 39) == 1)
  {
LABEL_28:
    memcpy(__dst + 304, __src + 304, 0x90uLL);
    goto LABEL_37;
  }
  uint64_t v18 = *((void *)__src + 39);
  if (v18 == 1)
  {
    sub_4A89C((uint64_t)(__dst + 304));
    goto LABEL_28;
  }
  *((void *)__dst + 38) = *((void *)__src + 38);
  *((void *)__dst + 39) = v18;
  swift_bridgeObjectRelease();
  __dst[320] = __src[320];
  if (*((void *)__dst + 42) != 1)
  {
    uint64_t v19 = *((void *)__src + 42);
    if (v19 != 1)
    {
      *((void *)__dst + 41) = *((void *)__src + 41);
      *((void *)__dst + 42) = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = *((void *)__src + 44);
      *((void *)__dst + 43) = *((void *)__src + 43);
      *((void *)__dst + 44) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *((void *)__src + 46);
      *((void *)__dst + 45) = *((void *)__src + 45);
      *((void *)__dst + 46) = v22;
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    sub_4B1DC((uint64_t)(__dst + 328));
  }
  long long v20 = *(_OWORD *)(__src + 344);
  *(_OWORD *)(__dst + 328) = *(_OWORD *)(__src + 328);
  *(_OWORD *)(__dst + 344) = v20;
  *(_OWORD *)(__dst + 360) = *(_OWORD *)(__src + 360);
LABEL_34:
  *((void *)__dst + 47) = *((void *)__src + 47);
  swift_release();
  if (*((void *)__dst + 51)) {
    sub_616C((uint64_t)(__dst + 384));
  }
  long long v23 = *((_OWORD *)__src + 25);
  *((_OWORD *)__dst + 24) = *((_OWORD *)__src + 24);
  *((_OWORD *)__dst + 25) = v23;
  *((void *)__dst + 52) = *((void *)__src + 52);
  __dst[424] = __src[424];
  uint64_t v24 = *((void *)__src + 55);
  *((void *)__dst + 54) = *((void *)__src + 54);
  *((void *)__dst + 55) = v24;
  swift_bridgeObjectRelease();
LABEL_37:
  *((void *)__dst + 56) = *((void *)__src + 56);
  swift_bridgeObjectRelease();
  if (*((void *)__dst + 58) == 1)
  {
LABEL_40:
    memcpy(__dst + 456, __src + 456, 0x90uLL);
    goto LABEL_49;
  }
  uint64_t v25 = *((void *)__src + 58);
  if (v25 == 1)
  {
    sub_4A89C((uint64_t)(__dst + 456));
    goto LABEL_40;
  }
  *((void *)__dst + 57) = *((void *)__src + 57);
  *((void *)__dst + 58) = v25;
  swift_bridgeObjectRelease();
  __dst[472] = __src[472];
  if (*((void *)__dst + 61) != 1)
  {
    uint64_t v26 = *((void *)__src + 61);
    if (v26 != 1)
    {
      *((void *)__dst + 60) = *((void *)__src + 60);
      *((void *)__dst + 61) = v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = *((void *)__src + 63);
      *((void *)__dst + 62) = *((void *)__src + 62);
      *((void *)__dst + 63) = v28;
      swift_bridgeObjectRelease();
      *((void *)__dst + 64) = *((void *)__src + 64);
      *((void *)__dst + 65) = *((void *)__src + 65);
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_4B1DC((uint64_t)(__dst + 480));
  }
  long long v27 = *((_OWORD *)__src + 31);
  *((_OWORD *)__dst + 30) = *((_OWORD *)__src + 30);
  *((_OWORD *)__dst + 31) = v27;
  *((_OWORD *)__dst + 32) = *((_OWORD *)__src + 32);
LABEL_46:
  *((void *)__dst + 66) = *((void *)__src + 66);
  swift_release();
  if (*((void *)__dst + 70)) {
    sub_616C((uint64_t)(__dst + 536));
  }
  long long v29 = *(_OWORD *)(__src + 552);
  *(_OWORD *)(__dst + 536) = *(_OWORD *)(__src + 536);
  *(_OWORD *)(__dst + 552) = v29;
  *((void *)__dst + 71) = *((void *)__src + 71);
  __dst[576] = __src[576];
  *((void *)__dst + 73) = *((void *)__src + 73);
  *((void *)__dst + 74) = *((void *)__src + 74);
  swift_bridgeObjectRelease();
LABEL_49:
  __dst[600] = __src[600];
  *((void *)__dst + 76) = *((void *)__src + 76);
  *((void *)__dst + 77) = *((void *)__src + 77);
  swift_bridgeObjectRelease();
  if (__dst[672] == 255)
  {
LABEL_55:
    long long v31 = *((_OWORD *)__src + 40);
    *((_OWORD *)__dst + 39) = *((_OWORD *)__src + 39);
    *((_OWORD *)__dst + 40) = v31;
    *((_OWORD *)__dst + 41) = *((_OWORD *)__src + 41);
    __dst[672] = __src[672];
    goto LABEL_56;
  }
  if (__src[672] == 255 || __dst != __src)
  {
    sub_53A04((uint64_t)(__dst + 624));
    goto LABEL_55;
  }
LABEL_56:
  __dst[673] = __src[673];
  return __dst;
}

uint64_t sub_53F20(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 674))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 448);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_53F74(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 664) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_WORD *)(result + 672) = 0;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 674) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 674) = 0;
    }
    if (a2) {
      *(void *)(result + 448) = a2;
    }
  }
  return result;
}

void _s13NavigationBarVMa()
{
}

uint64_t sub_54088(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1)
  {
    return sub_616C(a1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_54108(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 48);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    char v5 = 1;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 48) = v5;
  return a1;
}

uint64_t sub_541C4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      sub_616C(a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 48) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

__n128 sub_542EC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_54308(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      sub_616C(a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 48) = v7;
  }
  return a1;
}

uint64_t sub_543C4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_54400(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_54450(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_5446C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

void _s13NavigationBarV9TitleViewOMa()
{
}

void *sub_544AC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

void _s13NavigationBarV4ItemOMa()
{
}

uint64_t sub_544CC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if (*(void *)(a1 + 104)) {
    sub_616C(a1 + 80);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_54540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 104);
  swift_retain();
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v9;
    *(void *)(a1 + 112) = v10;
    sub_7170();
    (*v11)(a1 + 80, a2 + 80, v9);
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_54660(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (long long *)(a1 + 24);
  uint64_t v5 = (long long *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *v5;
      long long v8 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v8;
      long long *v4 = v7;
    }
    else
    {
      sub_59354();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_4B1DC(a1 + 24);
    long long v10 = *(_OWORD *)(a2 + 40);
    long long v9 = *(_OWORD *)(a2 + 56);
    long long *v4 = *v5;
    *(_OWORD *)(a1 + 40) = v10;
    *(_OWORD *)(a1 + 56) = v9;
  }
  else
  {
    sub_59354();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v11)
    {
      *(void *)(a1 + 104) = v11;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      sub_7170();
      (*v12)(a1 + 80, a2 + 80);
      goto LABEL_15;
    }
LABEL_14:
    long long v13 = *(_OWORD *)(a2 + 80);
    long long v14 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = v14;
    goto LABEL_15;
  }
  if (!v11)
  {
    sub_616C(a1 + 80);
    goto LABEL_14;
  }
  sub_64C8((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
LABEL_15:
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_54864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (*(void *)(a1 + 32) == 1) {
    goto LABEL_4;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (v5 == 1)
  {
    sub_4B1DC(a1 + 24);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  if (*(void *)(a1 + 104)) {
    sub_616C(a1 + 80);
  }
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_54960(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 144))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_549B4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void _s13NavigationBarV6ButtonVMa()
{
}

void _s13NavigationBarV7AppViewVMa()
{
}

uint64_t sub_54A44()
{
  uint64_t v0 = sub_8F9D0();
  uint64_t v2 = v1;
  if (v0 == sub_8F9D0() && v2 == v3) {
    sub_591F4();
  }
  else {
    LOBYTE(v0) = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_54ABC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x726564616568;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x6E69616C70;
    }
    else {
      uint64_t v4 = 0x6D6574737973;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xE500000000000000;
    }
    else {
      unint64_t v5 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE600000000000000;
    uint64_t v4 = 0x726564616568;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 0x6E69616C70;
    }
    else {
      uint64_t v2 = 0x6D6574737973;
    }
    if (a2 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v4 == v2 && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_8FF40();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_54BB0(char a1, char a2)
{
  unint64_t v2 = 0xEA00000000007379;
  uint64_t v3 = 0x61776C41776F6873;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x63536E4F776F6873;
    }
    else {
      uint64_t v4 = 0x63536E4F65646968;
    }
    unint64_t v5 = 0xEC0000006C6C6F72;
  }
  else
  {
    uint64_t v4 = 0x61776C41776F6873;
    unint64_t v5 = 0xEA00000000007379;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x63536E4F776F6873;
    }
    else {
      uint64_t v3 = 0x63536E4F65646968;
    }
    unint64_t v2 = 0xEC0000006C6C6F72;
  }
  if (v4 == v3 && v5 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_8FF40();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_54CC0(char a1, char a2)
{
  uint64_t v3 = 0x7265746E6563;
  if (a1)
  {
    sub_592CC();
    if (v4) {
      uint64_t v6 = 1952867692;
    }
    else {
      uint64_t v6 = 0x7468676972;
    }
    if (v4) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
    uint64_t v6 = 0x7265746E6563;
  }
  if (a2)
  {
    sub_592CC();
    if (v8) {
      uint64_t v3 = 1952867692;
    }
    else {
      uint64_t v3 = 0x7468676972;
    }
    if (v8) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xE600000000000000;
  }
  if (v6 == v3 && v7 == v10) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_54D94(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x6E6564646968;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x6E6564646968;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v6 = 0x656772616CLL;
      break;
    case 2:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v6 = 0x6E69616C70;
      break;
    case 3:
      unint64_t v4 = 0x800000000009AE50;
      unint64_t v6 = 0xD000000000000019;
      break;
    case 4:
      unint64_t v6 = 0x726170736E617274;
      unint64_t v4 = 0xEB00000000746E65;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      unint64_t v3 = 0x656772616CLL;
      break;
    case 2:
      unint64_t v7 = 0xE500000000000000;
      unint64_t v3 = 0x6E69616C70;
      break;
    case 3:
      unint64_t v7 = 0x800000000009AE50;
      unint64_t v3 = 0xD000000000000019;
      break;
    case 4:
      unint64_t v3 = 0x726170736E617274;
      unint64_t v7 = 0xEB00000000746E65;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_54F30(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x646570756F7267;
  }
  else {
    uint64_t v4 = 0x6E69616C70;
  }
  if (v3) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x646570756F7267;
  }
  else {
    uint64_t v6 = 0x6E69616C70;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_54FC4(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1819043171;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 1819043171;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x6C6C65436B6E696CLL;
      break;
    case 2:
      uint64_t v6 = 0x656C746974627573;
      unint64_t v4 = 0xEC0000006C6C6543;
      break;
    case 3:
      uint64_t v6 = 0x6C654365756C6176;
      unint64_t v4 = 0xE90000000000006CLL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x6C6C65436B6E696CLL;
      break;
    case 2:
      uint64_t v3 = 0x656C746974627573;
      unint64_t v7 = 0xEC0000006C6C6543;
      break;
    case 3:
      uint64_t v3 = 0x6C654365756C6176;
      unint64_t v7 = 0xE90000000000006CLL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_5513C(char a1, char a2)
{
  uint64_t v3 = 0x726564616568;
  if (a1)
  {
    sub_592CC();
    if (v4) {
      uint64_t v6 = 2036625250;
    }
    else {
      uint64_t v6 = 0x7265746F6F66;
    }
    if (v4) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
    uint64_t v6 = 0x726564616568;
  }
  if (a2)
  {
    sub_592CC();
    if (v8) {
      uint64_t v3 = 2036625250;
    }
    else {
      uint64_t v3 = 0x7265746F6F66;
    }
    if (v8) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xE600000000000000;
  }
  if (v6 == v3 && v7 == v10) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_55214(char a1, char a2)
{
  uint64_t v3 = 1701736302;
  if (a1)
  {
    sub_5933C();
    if (v4) {
      uint64_t v6 = 0x656C676E6973;
    }
    else {
      uint64_t v6 = 0x656C7069746C756DLL;
    }
    if (v4) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE400000000000000;
    uint64_t v6 = 1701736302;
  }
  if (a2)
  {
    sub_5933C();
    if (v8) {
      uint64_t v3 = 0x656C676E6973;
    }
    else {
      uint64_t v3 = 0x656C7069746C756DLL;
    }
    if (v8) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xE400000000000000;
  }
  if (v6 == v3 && v7 == v10) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_552F0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x6E69616C70;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x6E69616C70;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v6 = 0x646570756F7267;
      break;
    case 2:
      unint64_t v6 = 0x6F72477465736E69;
      unint64_t v4 = 0xEC00000064657075;
      break;
    case 3:
      unint64_t v4 = 0x800000000009AE00;
      unint64_t v6 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v3 = 0x646570756F7267;
      break;
    case 2:
      unint64_t v3 = 0x6F72477465736E69;
      unint64_t v7 = 0xEC00000064657075;
      break;
    case 3:
      unint64_t v7 = 0x800000000009AE00;
      unint64_t v3 = 0xD000000000000012;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_55464(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x7265746F6F66;
  }
  else {
    uint64_t v2 = 0x726564616568;
  }
  if (a2) {
    uint64_t v3 = 0x7265746F6F66;
  }
  else {
    uint64_t v3 = 0x726564616568;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_8FF40();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_554DC(char a1, char a2)
{
  unint64_t v3 = 0x746C7561666564;
  if (a1)
  {
    sub_59298();
    if (v5 == 1) {
      unint64_t v8 = v6;
    }
    else {
      unint64_t v8 = 0xD000000000000011;
    }
    if (v5 == 1) {
      unint64_t v9 = v7;
    }
    else {
      unint64_t v9 = (v4 - 32) | 0x8000000000000000;
    }
  }
  else
  {
    unint64_t v9 = 0xE700000000000000;
    unint64_t v8 = 0x746C7561666564;
  }
  if (a2)
  {
    sub_59298();
    unint64_t v14 = (v13 - 32) | 0x8000000000000000;
    if (v10 == 1) {
      unint64_t v3 = v11;
    }
    else {
      unint64_t v3 = 0xD000000000000011;
    }
    if (v10 == 1) {
      unint64_t v15 = v12;
    }
    else {
      unint64_t v15 = v14;
    }
  }
  else
  {
    unint64_t v15 = 0xE700000000000000;
  }
  if (v8 == v3 && v9 == v15) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_555B8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6D6F74737563;
  }
  else {
    uint64_t v4 = 0x6C6C616D73;
  }
  if (v3) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x6D6F74737563;
  }
  else {
    uint64_t v6 = 0x6C6C616D73;
  }
  if (a2) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_55644(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6C61636974726576;
  }
  else {
    uint64_t v4 = 0x746E6F7A69726F68;
  }
  if (v3) {
    unint64_t v5 = 0xEA00000000006C61;
  }
  else {
    unint64_t v5 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x6C61636974726576;
  }
  else {
    uint64_t v6 = 0x746E6F7A69726F68;
  }
  if (a2) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xEA00000000006C61;
  }
  if (v4 == v6 && v5 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_556DC(char a1, char a2)
{
  uint64_t v3 = 0x6C65636E6163;
  if (a1)
  {
    sub_59348();
    if (v4) {
      uint64_t v6 = 0x746C7561666564;
    }
    else {
      uint64_t v6 = 0x7463757274736564;
    }
    if (v4) {
      unint64_t v7 = v5;
    }
    else {
      unint64_t v7 = 0xEB00000000657669;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
    uint64_t v6 = 0x6C65636E6163;
  }
  if (a2)
  {
    sub_59348();
    if (v8) {
      uint64_t v3 = 0x746C7561666564;
    }
    else {
      uint64_t v3 = 0x7463757274736564;
    }
    if (v8) {
      unint64_t v10 = v9;
    }
    else {
      unint64_t v10 = 0xEB00000000657669;
    }
  }
  else
  {
    unint64_t v10 = 0xE600000000000000;
  }
  if (v6 == v3 && v7 == v10) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_557D8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x7472656C61;
  }
  else {
    uint64_t v4 = 0x68536E6F69746361;
  }
  if (v3) {
    unint64_t v5 = 0xEB00000000746565;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x7472656C61;
  }
  else {
    uint64_t v6 = 0x68536E6F69746361;
  }
  if (a2) {
    unint64_t v7 = 0xE500000000000000;
  }
  else {
    unint64_t v7 = 0xEB00000000746565;
  }
  if (v4 == v6 && v5 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_55870(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 1954047348;
  }
  else {
    uint64_t v4 = 0x656E6961746E6F63;
  }
  if (v3) {
    unint64_t v5 = 0xE900000000000064;
  }
  else {
    unint64_t v5 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v6 = 1954047348;
  }
  else {
    uint64_t v6 = 0x656E6961746E6F63;
  }
  if (a2) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE900000000000064;
  }
  if (v4 == v6 && v5 == v7) {
    sub_591F4();
  }
  else {
    char v2 = sub_591C4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

Swift::Int sub_55900()
{
  return sub_56530();
}

Swift::Int sub_5590C()
{
  return sub_56440();
}

Swift::Int sub_55918()
{
  return sub_563CC();
}

Swift::Int sub_55924()
{
  return sub_56788();
}

Swift::Int sub_55944(uint64_t a1)
{
  return sub_55998(a1, (void (*)(unsigned char *, uint64_t))sub_55E4C);
}

Swift::Int sub_5595C()
{
  return sub_55A9C();
}

Swift::Int sub_55974()
{
  return sub_56718();
}

Swift::Int sub_55980(uint64_t a1)
{
  return sub_55998(a1, (void (*)(unsigned char *, uint64_t))sub_56008);
}

Swift::Int sub_55998(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_8FFE0();
  a2(v5, a1);
  return sub_90000();
}

Swift::Int sub_559E8()
{
  return sub_56624();
}

Swift::Int sub_559F4(char a1)
{
  return sub_90000();
}

Swift::Int sub_55A58()
{
  return sub_56A88();
}

Swift::Int sub_55A64()
{
  return sub_569D4();
}

Swift::Int sub_55A70()
{
  return sub_56944();
}

Swift::Int sub_55A7C()
{
  return sub_55A9C();
}

Swift::Int sub_55A9C()
{
  return sub_90000();
}

Swift::Int sub_55AEC()
{
  return sub_56878();
}

Swift::Int sub_55AF8()
{
  return sub_565A8();
}

Swift::Int sub_55B04()
{
  return sub_566A4();
}

Swift::Int sub_55B24()
{
  return sub_564C8();
}

uint64_t sub_55B30()
{
  return sub_8FA00();
}

uint64_t sub_55B44()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55BC4()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55C64()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55CE0()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55DC4()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55E2C()
{
  return sub_8FA00();
}

uint64_t sub_55E4C()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55F1C(uint64_t a1, char a2)
{
  if (a2) {
    sub_592CC();
  }
  else {
    sub_59390();
  }
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55F8C(uint64_t a1, char a2)
{
  if (a2) {
    sub_5933C();
  }
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_56008()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_560D8()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_56128()
{
  return sub_8FA00();
}

uint64_t sub_56140(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_5927C();
    sub_59260();
  }
  else
  {
    sub_592B4();
  }
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_5619C()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_56200()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_56270(uint64_t a1, char a2)
{
  if (a2) {
    sub_59348();
  }
  else {
    sub_5937C();
  }
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_562F0()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_56360()
{
  sub_8FA00();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_563CC()
{
  return sub_90000();
}

Swift::Int sub_56440()
{
  sub_59230();
  if (v0) {
    sub_59348();
  }
  else {
    sub_5937C();
  }
  sub_59248();
  swift_bridgeObjectRelease();
  return sub_90000();
}

Swift::Int sub_564C8()
{
  return sub_90000();
}

Swift::Int sub_56530()
{
  sub_59230();
  if (v0)
  {
    sub_5927C();
    sub_59260();
  }
  else
  {
    sub_592B4();
  }
  sub_59248();
  swift_bridgeObjectRelease();
  return sub_90000();
}

Swift::Int sub_56590()
{
  return sub_56B1C();
}

Swift::Int sub_565A8()
{
  return sub_90000();
}

Swift::Int sub_5660C(uint64_t a1, uint64_t a2)
{
  return sub_5680C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_56008);
}

Swift::Int sub_56624()
{
  sub_59230();
  if (v0) {
    sub_5933C();
  }
  sub_59248();
  swift_bridgeObjectRelease();
  return sub_90000();
}

Swift::Int sub_566A4()
{
  return sub_90000();
}

Swift::Int sub_56718()
{
  sub_59230();
  if (v0) {
    sub_592CC();
  }
  else {
    sub_59390();
  }
  sub_59248();
  swift_bridgeObjectRelease();
  return sub_90000();
}

Swift::Int sub_56788()
{
  return sub_90000();
}

Swift::Int sub_567F4(uint64_t a1, uint64_t a2)
{
  return sub_5680C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_55E4C);
}

Swift::Int sub_5680C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_8FFE0();
  a3(v6, a2);
  return sub_90000();
}

Swift::Int sub_56858()
{
  return sub_56B1C();
}

Swift::Int sub_56878()
{
  return sub_90000();
}

Swift::Int sub_568E4(uint64_t a1, char a2)
{
  return sub_90000();
}

Swift::Int sub_56944()
{
  return sub_90000();
}

Swift::Int sub_569D4()
{
  return sub_90000();
}

Swift::Int sub_56A88()
{
  return sub_90000();
}

Swift::Int sub_56B1C()
{
  return sub_90000();
}

void sub_56B68(void *a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_5664(&qword_BBB50);
    swift_willThrowTypedImpl();
    sub_8F7D0();
    uint64_t v4 = a1;
    char v5 = 1;
  }
  else
  {
    id v3 = a1;
    sub_8F7F0();
    uint64_t v4 = a1;
    char v5 = 0;
  }
  sub_58E74(v4, v5);
}

uint64_t sub_56BF0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AE870;
  v6._object = a2;
  unint64_t v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

unint64_t sub_56C3C(char a1)
{
  unint64_t result = 0x6E6564646968;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656772616CLL;
      break;
    case 2:
      unint64_t result = 0x6E69616C70;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0x726170736E617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_56CEC(char a1)
{
  if (!a1) {
    return 0x726564616568;
  }
  if (a1 == 1) {
    return 0x6E69616C70;
  }
  return 0x6D6574737973;
}

BOOL sub_56D38(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AE970;
  v6._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_56D80(char a1)
{
  if (!a1) {
    return 0x61776C41776F6873;
  }
  if (a1 == 1) {
    return 0x63536E4F776F6873;
  }
  return 0x63536E4F65646968;
}

uint64_t sub_56DEC(char a1)
{
  if (!a1) {
    return 0x7265746E6563;
  }
  sub_592CC();
  if (v1) {
    return 1952867692;
  }
  else {
    return 0x7468676972;
  }
}

uint64_t sub_56E38(unsigned __int8 *a1, char *a2)
{
  return sub_54D94(*a1, *a2);
}

Swift::Int sub_56E44()
{
  return sub_559F4(*v0);
}

uint64_t sub_56E4C()
{
  return sub_55CE0();
}

Swift::Int sub_56E54(uint64_t a1)
{
  return sub_568E4(a1, *v1);
}

uint64_t sub_56E5C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_56BF0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_56E8C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_56C3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_56EBC()
{
  unint64_t result = qword_BD6F8;
  if (!qword_BD6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD6F8);
  }
  return result;
}

uint64_t sub_56F08(unsigned __int8 *a1, char *a2)
{
  return sub_54ABC(*a1, *a2);
}

Swift::Int sub_56F14()
{
  return sub_55A58();
}

uint64_t sub_56F1C()
{
  return sub_55B44();
}

Swift::Int sub_56F24()
{
  return sub_56A88();
}

uint64_t sub_56F2C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_AE908;
  uint64_t result = sub_5065C(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_56F64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_56CEC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_56F90()
{
  return sub_55A9C();
}

Swift::Int sub_56FBC()
{
  return sub_56B1C();
}

BOOL sub_56FE4@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_56D38(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_5701C(void *a1@<X8>)
{
  *a1 = 0x65736F6C63;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_57034(char *a1, char *a2)
{
  return sub_54BB0(*a1, *a2);
}

Swift::Int sub_57040()
{
  return sub_55A64();
}

uint64_t sub_57048()
{
  return sub_55BC4();
}

Swift::Int sub_57050()
{
  return sub_569D4();
}

uint64_t sub_57058@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_AE9A8;
  uint64_t result = sub_5065C(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_57090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_56D80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_570BC(char *a1, char *a2)
{
  return sub_54CC0(*a1, *a2);
}

Swift::Int sub_570C8()
{
  return sub_55A70();
}

uint64_t sub_570D0()
{
  return sub_55C64();
}

Swift::Int sub_570D8()
{
  return sub_56944();
}

uint64_t sub_570E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_AEA10;
  uint64_t result = sub_5065C(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_57118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_56DEC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_57144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = a1 + 304;
  *(_OWORD *)(a1 + 304) = xmmword_91D80;
  bzero((void *)(a1 + 320), 0x90uLL);
  *(void *)(a1 + 464) = 1;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  sub_494C();
  if (v1)
  {
    swift_errorRelease();
    v32[0] = xmmword_91D80;
    memset(&v32[1], 0, 128);
  }
  sub_145C0((uint64_t)v32, a1, &qword_BAB50);
  sub_59368();
  uint64_t v4 = sub_9384();
  *(unsigned char *)(a1 + 144) = v4;
  __chkstk_darwin(v4);
  sub_591E0();
  sub_592D8(0x6B636162u);
  sub_494C();
  uint64_t v5 = sub_145C0((uint64_t)v32, a1 + 152, &qword_BAB50);
  __chkstk_darwin(v5);
  sub_591E0();
  sub_592D8(0x7466656Cu);
  sub_4924();
  sub_58D3C((uint64_t)v32, v3);
  uint64_t v6 = sub_3CFF0();
  *(unsigned char *)(a1 + 296) = v6 & 1;
  __chkstk_darwin(v6);
  sub_591E0();
  sub_3B74(0x747542726568746FLL, 0xEC000000736E6F74, (uint64_t)&unk_B0EB0, (uint64_t)sub_58DA4, v7, v8, v9, v10);
  uint64_t v12 = v11;
  uint64_t v13 = swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = v12;
  __chkstk_darwin(v13);
  sub_591E0();
  sub_4924();
  sub_58D3C((uint64_t)v32, a1 + 456);
  sub_94DC(0xD000000000000014, 0x800000000009CF30, (uint64_t)&unk_B0EB0, v14, v15, v16, v17, v18);
  *(unsigned char *)(a1 + 600) = v19;
  uint64_t v20 = sub_59308();
  *(void *)(a1 + 608) = v20;
  *(void *)(a1 + 616) = v21;
  __chkstk_darwin(v20);
  sub_591E0();
  sub_47D4();
  sub_145C0((uint64_t)v32, a1 + 624, &qword_BAB38);
  sub_9510(0x696C41656C746974, 0xEE00746E656D6E67, (uint64_t)&unk_B0EB0, v22, v23, v24, v25, v26);
  char v28 = v27;
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v29();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  uint64_t result = v30();
  *(unsigned char *)(a1 + 673) = v28;
  return result;
}

uint64_t sub_5773C@<X0>(uint64_t a1@<X8>)
{
  return sub_57144(a1);
}

uint64_t sub_57754@<X0>(uint64_t a1@<X8>)
{
  sub_8EA70();
  swift_allocObject();
  uint64_t v3 = sub_3CEE4();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = sub_59368();
  sub_931C(v5, 0xEA00000000006563, v6, v7, v8, v9, v10, v11);
  *(unsigned char *)(a1 + 16) = v12;
  __chkstk_darwin(v12);
  sub_591E0();
  sub_592F0();
  sub_46A4();
  long long v13 = v42[4];
  long long v14 = v42[5];
  *(_OWORD *)(a1 + 24) = v42[3];
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v14;
  __chkstk_darwin(v15);
  sub_591E0();
  sub_468C(0x6B726F77747261, 0xE700000000000000, (uint64_t)&unk_B1078, (uint64_t)sub_58D00, v16, v17, v18, v19);
  *(void *)(a1 + 72) = v20;
  __chkstk_darwin(v20);
  sub_3B0C();
  sub_145C0((uint64_t)v42, a1 + 80, &qword_BAAD0);
  sub_9350(0xD000000000000010, 0x800000000009CF10, (uint64_t)&unk_B1078, v21, v22, v23, v24, v25);
  *(unsigned char *)(a1 + 120) = 0;
  uint64_t v26 = sub_59308();
  uint64_t v28 = v27;
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v34(v29, v30, v31, v32, v33);
  swift_release();
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  uint64_t result = v40(v35, v36, v37, v38, v39);
  *(void *)(a1 + 128) = v26;
  *(void *)(a1 + 136) = v28;
  return result;
}

uint64_t sub_57AB8@<X0>(uint64_t a1@<X8>)
{
  return sub_57754(a1);
}

uint64_t sub_57AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v36 = a3;
  uint64_t v6 = sub_8F3F0();
  sub_7084();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_13868();
  uint64_t v10 = sub_8F320();
  sub_7084();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_3CEE4();
  uint64_t v37 = v3;
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v38, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, v10);
  }
  uint64_t v19 = v17;
  uint64_t v32 = v4;
  uint64_t v33 = a1;
  uint64_t v34 = v8;
  uint64_t v35 = v10;
  uint64_t v20 = v38;
  if (v16 == 0x6E6F74747562 && v17 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = v20;
    uint64_t v24 = v12;
    uint64_t v25 = v6;
    goto LABEL_10;
  }
  uint64_t v22 = v16;
  uint64_t v23 = v38;
  uint64_t v24 = v12;
  uint64_t v25 = v6;
  if (sub_8FF40())
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v26 = v33;
    uint64_t v27 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v15, v33, v35);
    uint64_t v28 = v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v32, v23, v25);
    sub_57754(v36);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v23, v25);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v26, v27);
  }
  sub_8F8E0();
  sub_2F948();
  swift_allocError();
  *uint64_t v29 = v22;
  v29[1] = v19;
  v29[2] = (uint64_t)&unk_B1000;
  sub_7170();
  (*(void (**)(void))(v30 + 104))();
  swift_willThrow();
  sub_7358();
  v31();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v33, v35);
}

uint64_t sub_57DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_57AD0(a1, a2, a3);
}

uint64_t sub_57DE8@<X0>(uint64_t *a1@<X8>)
{
  sub_8F320();
  sub_7084();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  sub_8F330();
  uint64_t v27 = sub_8F300();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(void))(v3 + 8);
  sub_59200();
  v8();
  sub_8F330();
  uint64_t v9 = sub_8F300();
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  sub_59200();
  v8();
  sub_8F330();
  uint64_t v11 = sub_8F300();
  unint64_t v13 = v12;
  sub_59200();
  v8();
  if (!v13)
  {
    if (!v7)
    {
      sub_8F3F0();
      sub_B6C4();
      sub_7358();
      v18();
      sub_59200();
      uint64_t result = ((uint64_t (*)(void))v8)();
      uint64_t v11 = 0;
      unint64_t v13 = 0xE000000000000000;
      goto LABEL_11;
    }
    sub_F040(0, &qword_BD708);
    swift_bridgeObjectRetain();
    uint64_t v23 = v7;
    id v16 = sub_58100(v27, v7, 1);
    if (v26)
    {
      swift_errorRelease();
    }
    else
    {
      uint64_t v19 = v16;
      if (v16)
      {
        id v20 = [v16 localizedName];
        uint64_t v11 = sub_8F9D0();
        unint64_t v13 = v21;

        sub_8F3F0();
        sub_B6C4();
        sub_7358();
        v22();
        sub_59200();
        uint64_t result = ((uint64_t (*)(void))v8)();
        goto LABEL_10;
      }
    }
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v17();
    sub_59200();
    uint64_t result = ((uint64_t (*)(void))v8)();
    uint64_t v11 = 0;
    unint64_t v13 = 0xE000000000000000;
LABEL_10:
    uint64_t v7 = v23;
    goto LABEL_11;
  }
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v14();
  sub_59200();
  uint64_t result = ((uint64_t (*)(void))v8)();
LABEL_11:
  *a1 = v27;
  a1[1] = v7;
  a1[2] = v25;
  a1[3] = v24;
  a1[4] = v11;
  a1[5] = v13;
  return result;
}

id sub_58100(uint64_t a1, uint64_t a2, char a3)
{
  NSString v4 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v9 = 0;
  id v5 = [(id)swift_getObjCClassFromMetadata() bundleRecordWithBundleIdentifier:v4 allowPlaceholder:a3 & 1 error:&v9];

  if (v5)
  {
    id v6 = v9;
  }
  else
  {
    id v7 = v9;
    sub_8E920();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_581E8(double a1, double a2)
{
  uint64_t v6 = sub_5664((uint64_t *)&unk_BC7F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_8E980();
  sub_7084();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_13868();
  sub_5664(&qword_BD718);
  uint64_t v13 = sub_8F820();
  if (*(void *)(v2 + 8))
  {
    sub_F040(0, &qword_BD720);
    swift_bridgeObjectRetain();
    id v14 = sub_58604();
    [self scale];
    id v16 = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", a1, a2, v15);
    uint64_t v32 = sub_58E6C;
    uint64_t v33 = v13;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_58760;
    uint64_t v31 = &unk_B1158;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v14 getCGImageForImageDescriptor:v16 completion:v17];
    _Block_release(v17);
  }
  else
  {
    sub_145C0(v2 + 16, (uint64_t)v34, &qword_BB788);
    sub_145C0((uint64_t)v34, (uint64_t)v35, &qword_BB788);
    if (v35[1])
    {
      sub_8E970();
      if (sub_5754((uint64_t)v8, 1, v9) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v3, v8, v9);
        id v21 = [self defaultLoader];
        sub_8E950(v22);
        uint64_t v24 = v23;
        id v25 = [v21 fetchImageWithURL:v23];

        uint64_t v32 = sub_58E4C;
        uint64_t v33 = v13;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v29 = 1107296256;
        uint64_t v30 = sub_16954;
        uint64_t v31 = &unk_B1130;
        uint64_t v26 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v25 addFinishBlock:v26];
        _Block_release(v26);

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v9);
        return v13;
      }
      sub_D68C((uint64_t)v8, (uint64_t *)&unk_BC7F0);
    }
    NSString v18 = sub_8F9A0();
    id v19 = (id)AMSError();

    id v20 = v19;
    sub_56B68(v19, 1);
  }
  return v13;
}

id sub_58604()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithBundleIdentifier:v1];

  return v2;
}

void sub_58678(void *a1)
{
  if (a1)
  {
    id v2 = objc_allocWithZone((Class)UIImage);
    id v6 = a1;
    id v3 = objc_msgSend(v2, "initWithCGImage:");
    sub_56B68(v3, 0);
  }
  else
  {
    NSString v4 = sub_8F9A0();
    id v5 = (id)AMSError();

    id v3 = v5;
    sub_56B68(v5, 1);
    id v6 = v3;
  }
}

void sub_58760(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_587CC(void *a1, void *a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_56B68(a2, 1);
    swift_errorRelease();
  }
  else
  {
    id v4 = a1;
    sub_56B68(a1, 0);
  }
}

double sub_5886C@<D0>(_OWORD *a1@<X8>)
{
  sub_57DE8((uint64_t *)v5);
  if (!v1)
  {
    long long v4 = v5[1];
    *a1 = v5[0];
    a1[1] = v4;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

uint64_t sub_588B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_3CEE4();
  if (v3) {
    goto LABEL_8;
  }
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  if (v7 != 0x77656956707061 || v8 != 0xE700000000000000)
  {
    sub_592F0();
    if ((sub_8FF40() & 1) == 0)
    {
      BOOL v18 = v9 == 1954047348 && v10 == 0xE400000000000000;
      if (v18 || (sub_8FF40() & 1) != 0)
      {
        uint64_t v19 = swift_bridgeObjectRelease();
        __chkstk_darwin(v19);
        sub_591E0();
        sub_59328();
        sub_3B40();
        sub_8F320();
        sub_B6C4();
        sub_7358();
        v22();
        sub_8F3F0();
        sub_B6C4();
        sub_7358();
        v23();
        char v25 = 1;
        return sub_58DE0(v24, a3);
      }
      sub_8F8E0();
      sub_2F948();
      swift_allocError();
      *id v20 = v9;
      v20[1] = v10;
      v20[2] = (uint64_t)&unk_B0F70;
      sub_7170();
      (*(void (**)(void))(v21 + 104))();
      swift_willThrow();
LABEL_8:
      sub_8F320();
      sub_B6C4();
      (*(void (**)(uint64_t))(v13 + 8))(a1);
      sub_8F3F0();
      sub_B6C4();
      return (*(uint64_t (**)(uint64_t))(v14 + 8))(a2);
    }
  }
  uint64_t v12 = swift_bridgeObjectRelease();
  __chkstk_darwin(v12);
  sub_591E0();
  sub_59328();
  sub_4ACC();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v16();
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v17();
  v24[0] = v26;
  v24[1] = v27;
  _OWORD v24[2] = v28;
  char v25 = 0;
  return sub_58DE0(v24, a3);
}

uint64_t sub_58C20()
{
  return sub_8EBE0();
}

uint64_t sub_58C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_588B0(a1, a2, a3);
}

uint64_t sub_58CB4@<X0>(uint64_t a1@<X8>)
{
  sub_9C8C();
  return sub_145C0((uint64_t)&v3, a1, &qword_BD700);
}

uint64_t sub_58CF8@<X0>(uint64_t a1@<X8>)
{
  return sub_58CB4(a1);
}

uint64_t sub_58D00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_9C44(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_58D2C(uint64_t a1)
{
  return sub_9E94(a1, *(void *)(v1 + 16));
}

uint64_t sub_58D34(uint64_t a1)
{
  return sub_9E74(a1, *(void *)(v1 + 16));
}

uint64_t sub_58D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_58DA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_CE18(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

void sub_58DD0()
{
}

uint64_t sub_58DD8()
{
  return sub_58C20();
}

uint64_t sub_58DE0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_58E00@<X0>(uint64_t a1@<X8>)
{
  sub_A014();
  return sub_145C0((uint64_t)&v3, a1, &qword_BD710);
}

uint64_t sub_58E44@<X0>(uint64_t a1@<X8>)
{
  return sub_58E00(a1);
}

void sub_58E4C(void *a1, void *a2)
{
}

uint64_t sub_58E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_58E64()
{
  return swift_release();
}

void sub_58E6C(void *a1)
{
}

void sub_58E74(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

void _s13NavigationBarV14TitleAlignmentOMa()
{
}

void _s13NavigationBarV20ScrollEdgeVisibilityOMa()
{
}

unsigned char *sub_58E9C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x58F38);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void _s13NavigationBarV6ButtonV10SystemItemOMa()
{
}

unsigned char *sub_58F6C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x59038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void _s13NavigationBarV6ButtonV10AppearanceOMa()
{
}

unint64_t sub_59070()
{
  unint64_t result = qword_BD728;
  if (!qword_BD728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD728);
  }
  return result;
}

unint64_t sub_590C0()
{
  unint64_t result = qword_BD730;
  if (!qword_BD730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD730);
  }
  return result;
}

unint64_t sub_59110()
{
  unint64_t result = qword_BD738;
  if (!qword_BD738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD738);
  }
  return result;
}

unint64_t sub_59160()
{
  unint64_t result = qword_BD740;
  if (!qword_BD740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD740);
  }
  return result;
}

uint64_t sub_591C4()
{
  return sub_8FF40();
}

double sub_59210()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 208) = *(_OWORD *)(v0 - 256);
  *(_OWORD *)(v0 - 192) = 0u;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  *(_OWORD *)(v0 - 80) = 0u;
  return result;
}

uint64_t sub_59230()
{
  return sub_8FFE0();
}

uint64_t sub_59248()
{
  return sub_8FA00();
}

uint64_t sub_592D8(unsigned int a1)
{
  return a1 | 0x7474754200000000;
}

uint64_t sub_592F0()
{
  return 0x77656956707061;
}

uint64_t sub_59308()
{
  return sub_3CEE4();
}

uint64_t sub_59328()
{
  return 2003134838;
}

uint64_t sub_59354()
{
  *(void *)(v0 + 24) = *(void *)(v1 + 24);
  uint64_t result = *(void *)(v1 + 32);
  *(void *)(v0 + 32) = result;
  return result;
}

uint64_t sub_59368()
{
  return 0x6E61726165707061;
}

unsigned char *sub_593A4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x59470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void _s12PresentationV10AppearanceOMa()
{
}

uint64_t sub_594A4(uint64_t a1)
{
  swift_release();

  sub_616C(a1 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 112) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 184)) {
      sub_616C(a1 + 160);
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 240) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 264) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 336)) {
      sub_616C(a1 + 312);
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 392) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 416) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 488)) {
      sub_616C(a1 + 464);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 544) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 568) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 640)) {
      sub_616C(a1 + 616);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 752);
  if (v3 != 255)
  {
    if (v3)
    {
      return sub_616C(a1 + 704);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *sub_59694(void *a1, void *a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v4 = (void *)a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  uint64_t v5 = a2 + 3;
  long long v6 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 3) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(void *, void *, uint64_t))(v6 - 8);
  swift_retain();
  id v9 = v4;
  v8(a1 + 3, v5, v7);
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  uint64_t v11 = a2[11];
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    memcpy(a1 + 10, a2 + 10, 0x90uLL);
  }
  else
  {
    a1[10] = a2[10];
    a1[11] = v11;
    *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v12 = a2[14];
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 15) = v13;
      *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    }
    else
    {
      a1[13] = a2[13];
      a1[14] = v12;
      uint64_t v14 = a2[16];
      a1[15] = a2[15];
      a1[16] = v14;
      uint64_t v15 = a2[18];
      a1[17] = a2[17];
      a1[18] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[19] = a2[19];
    uint64_t v16 = a2[23];
    swift_retain();
    if (v16)
    {
      uint64_t v17 = a2[24];
      a1[23] = v16;
      a1[24] = v17;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(a1 + 20), (uint64_t)(a2 + 20), v16);
    }
    else
    {
      long long v18 = *((_OWORD *)a2 + 11);
      *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 11) = v18;
      a1[24] = a2[24];
    }
    *((unsigned char *)a1 + 200) = *((unsigned char *)a2 + 200);
    uint64_t v19 = a2[27];
    a1[26] = a2[26];
    a1[27] = v19;
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
  uint64_t v20 = a2[30];
  if (v20 == 1)
  {
    memcpy(a1 + 29, a2 + 29, 0x90uLL);
  }
  else
  {
    a1[29] = a2[29];
    a1[30] = v20;
    *((unsigned char *)a1 + 248) = *((unsigned char *)a2 + 248);
    uint64_t v21 = a2[33];
    swift_bridgeObjectRetain();
    if (v21 == 1)
    {
      long long v22 = *((_OWORD *)a2 + 17);
      *((_OWORD *)a1 + 16) = *((_OWORD *)a2 + 16);
      *((_OWORD *)a1 + 17) = v22;
      *((_OWORD *)a1 + 18) = *((_OWORD *)a2 + 18);
    }
    else
    {
      a1[32] = a2[32];
      a1[33] = v21;
      uint64_t v23 = a2[35];
      a1[34] = a2[34];
      a1[35] = v23;
      uint64_t v24 = a2[37];
      a1[36] = a2[36];
      a1[37] = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[38] = a2[38];
    uint64_t v25 = a2[42];
    swift_retain();
    if (v25)
    {
      uint64_t v26 = a2[43];
      a1[42] = v25;
      a1[43] = v26;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))((uint64_t)(a1 + 39), (uint64_t)(a2 + 39), v25);
    }
    else
    {
      long long v27 = *(_OWORD *)(a2 + 41);
      *(_OWORD *)(a1 + 39) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 41) = v27;
      a1[43] = a2[43];
    }
    *((unsigned char *)a1 + 352) = *((unsigned char *)a2 + 352);
    uint64_t v28 = a2[46];
    a1[45] = a2[45];
    a1[46] = v28;
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 376) = *((unsigned char *)a2 + 376);
  uint64_t v29 = a2[49];
  if (v29 == 1)
  {
    memcpy(a1 + 48, a2 + 48, 0x90uLL);
  }
  else
  {
    a1[48] = a2[48];
    a1[49] = v29;
    *((unsigned char *)a1 + 400) = *((unsigned char *)a2 + 400);
    uint64_t v30 = a2[52];
    swift_bridgeObjectRetain();
    if (v30 == 1)
    {
      long long v31 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 51) = *(_OWORD *)(a2 + 51);
      *(_OWORD *)(a1 + 53) = v31;
      *(_OWORD *)(a1 + 55) = *(_OWORD *)(a2 + 55);
    }
    else
    {
      a1[51] = a2[51];
      a1[52] = v30;
      uint64_t v32 = a2[54];
      a1[53] = a2[53];
      a1[54] = v32;
      uint64_t v33 = a2[56];
      a1[55] = a2[55];
      a1[56] = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[57] = a2[57];
    uint64_t v34 = a2[61];
    swift_retain();
    if (v34)
    {
      uint64_t v35 = a2[62];
      a1[61] = v34;
      a1[62] = v35;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8))((uint64_t)(a1 + 58), (uint64_t)(a2 + 58), v34);
    }
    else
    {
      long long v36 = *((_OWORD *)a2 + 30);
      *((_OWORD *)a1 + 29) = *((_OWORD *)a2 + 29);
      *((_OWORD *)a1 + 30) = v36;
      a1[62] = a2[62];
    }
    *((unsigned char *)a1 + 504) = *((unsigned char *)a2 + 504);
    a1[64] = a2[64];
    a1[65] = a2[65];
    swift_bridgeObjectRetain();
  }
  a1[66] = a2[66];
  uint64_t v37 = a2[68];
  swift_bridgeObjectRetain();
  if (v37 == 1)
  {
    memcpy(a1 + 67, a2 + 67, 0x90uLL);
  }
  else
  {
    a1[67] = a2[67];
    a1[68] = v37;
    *((unsigned char *)a1 + 552) = *((unsigned char *)a2 + 552);
    uint64_t v38 = a2[71];
    swift_bridgeObjectRetain();
    if (v38 == 1)
    {
      long long v39 = *((_OWORD *)a2 + 36);
      *((_OWORD *)a1 + 35) = *((_OWORD *)a2 + 35);
      *((_OWORD *)a1 + 36) = v39;
      *((_OWORD *)a1 + 37) = *((_OWORD *)a2 + 37);
    }
    else
    {
      a1[70] = a2[70];
      a1[71] = v38;
      a1[72] = a2[72];
      a1[73] = a2[73];
      a1[74] = a2[74];
      a1[75] = a2[75];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[76] = a2[76];
    uint64_t v40 = a2[80];
    swift_retain();
    if (v40)
    {
      a1[80] = v40;
      a1[81] = a2[81];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v40 - 8))((uint64_t)(a1 + 77), (uint64_t)(a2 + 77), v40);
    }
    else
    {
      long long v41 = *(_OWORD *)(a2 + 79);
      *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
      *(_OWORD *)(a1 + 79) = v41;
      a1[81] = a2[81];
    }
    *((unsigned char *)a1 + 656) = *((unsigned char *)a2 + 656);
    a1[83] = a2[83];
    a1[84] = a2[84];
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 680) = *((unsigned char *)a2 + 680);
  a1[86] = a2[86];
  a1[87] = a2[87];
  int v42 = *((unsigned __int8 *)a2 + 752);
  swift_bridgeObjectRetain();
  if (v42 == 255)
  {
    long long v43 = *((_OWORD *)a2 + 45);
    *((_OWORD *)a1 + 44) = *((_OWORD *)a2 + 44);
    *((_OWORD *)a1 + 45) = v43;
    *((_OWORD *)a1 + 46) = *((_OWORD *)a2 + 46);
    *((unsigned char *)a1 + 752) = *((unsigned char *)a2 + 752);
  }
  else if (v42)
  {
    uint64_t v44 = a2[91];
    a1[91] = v44;
    a1[92] = a2[92];
    (**(void (***)(uint64_t, uint64_t))(v44 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88));
    *((unsigned char *)a1 + 752) = 1;
  }
  else
  {
    a1[88] = a2[88];
    a1[89] = a2[89];
    a1[90] = a2[90];
    a1[91] = a2[91];
    a1[92] = a2[92];
    a1[93] = a2[93];
    *((unsigned char *)a1 + 752) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 753) = *((unsigned char *)a2 + 753);
  *((_WORD *)a1 + 377) = *((_WORD *)a2 + 377);
  return a1;
}

uint64_t sub_59CB4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  unsigned int v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  sub_64C8((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) != 1)
  {
    if (v7 == 1)
    {
      sub_539D4(a1 + 80);
      goto LABEL_7;
    }
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    uint64_t v11 = (long long *)(a1 + 104);
    uint64_t v12 = (long long *)(a2 + 104);
    uint64_t v13 = *(void *)(a2 + 112);
    if (*(void *)(a1 + 112) == 1)
    {
      if (v13 == 1)
      {
        long long v14 = *v12;
        long long v15 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = v15;
        long long *v11 = v14;
      }
      else
      {
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v13 == 1)
    {
      sub_4B1DC(a1 + 104);
      long long v18 = *(_OWORD *)(a2 + 120);
      long long v17 = *(_OWORD *)(a2 + 136);
      long long *v11 = *v12;
      *(_OWORD *)(a1 + 120) = v18;
      *(_OWORD *)(a1 + 136) = v17;
    }
    else
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_retain();
    swift_release();
    uint64_t v21 = *(void *)(a2 + 184);
    if (*(void *)(a1 + 184))
    {
      if (v21)
      {
        sub_64C8((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
LABEL_27:
        *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      sub_616C(a1 + 160);
    }
    else if (v21)
    {
      *(void *)(a1 + 184) = v21;
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 160, a2 + 160);
      goto LABEL_27;
    }
    long long v22 = *(_OWORD *)(a2 + 160);
    long long v23 = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v22;
    *(_OWORD *)(a1 + 176) = v23;
    goto LABEL_27;
  }
  if (v7 == 1)
  {
LABEL_7:
    memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x90uLL);
    goto LABEL_28;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    long long v9 = *(_OWORD *)(a2 + 104);
    long long v10 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v10;
    *(_OWORD *)(a1 + 104) = v9;
  }
  else
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v16 = *(void *)(a2 + 184);
  swift_retain();
  if (v16)
  {
    *(void *)(a1 + 184) = v16;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 160, a2 + 160, v16);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 160);
    long long v20 = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v19;
    *(_OWORD *)(a1 + 176) = v20;
  }
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
LABEL_28:
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  uint64_t v24 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240) != 1)
  {
    if (v24 == 1)
    {
      sub_539D4(a1 + 232);
      goto LABEL_34;
    }
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    uint64_t v28 = (long long *)(a1 + 256);
    uint64_t v29 = (long long *)(a2 + 256);
    uint64_t v30 = *(void *)(a2 + 264);
    if (*(void *)(a1 + 264) == 1)
    {
      if (v30 == 1)
      {
        long long v31 = *v29;
        long long v32 = *(_OWORD *)(a2 + 288);
        *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
        *(_OWORD *)(a1 + 288) = v32;
        *uint64_t v28 = v31;
      }
      else
      {
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        *(void *)(a1 + 272) = *(void *)(a2 + 272);
        *(void *)(a1 + 280) = *(void *)(a2 + 280);
        *(void *)(a1 + 288) = *(void *)(a2 + 288);
        *(void *)(a1 + 296) = *(void *)(a2 + 296);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v30 == 1)
    {
      sub_4B1DC(a1 + 256);
      long long v35 = *(_OWORD *)(a2 + 272);
      long long v34 = *(_OWORD *)(a2 + 288);
      *uint64_t v28 = *v29;
      *(_OWORD *)(a1 + 272) = v35;
      *(_OWORD *)(a1 + 288) = v34;
    }
    else
    {
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    swift_retain();
    swift_release();
    uint64_t v38 = *(void *)(a2 + 336);
    if (*(void *)(a1 + 336))
    {
      if (v38)
      {
        sub_64C8((uint64_t *)(a1 + 312), (uint64_t *)(a2 + 312));
LABEL_54:
        *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
        *(void *)(a1 + 360) = *(void *)(a2 + 360);
        *(void *)(a1 + 368) = *(void *)(a2 + 368);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      sub_616C(a1 + 312);
    }
    else if (v38)
    {
      *(void *)(a1 + 336) = v38;
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      (**(void (***)(uint64_t, uint64_t))(v38 - 8))(a1 + 312, a2 + 312);
      goto LABEL_54;
    }
    long long v39 = *(_OWORD *)(a2 + 312);
    long long v40 = *(_OWORD *)(a2 + 328);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(_OWORD *)(a1 + 312) = v39;
    *(_OWORD *)(a1 + 328) = v40;
    goto LABEL_54;
  }
  if (v24 == 1)
  {
LABEL_34:
    memcpy((void *)(a1 + 232), (const void *)(a2 + 232), 0x90uLL);
    goto LABEL_55;
  }
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v25 = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  if (v25 == 1)
  {
    long long v26 = *(_OWORD *)(a2 + 256);
    long long v27 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v27;
    *(_OWORD *)(a1 + 256) = v26;
  }
  else
  {
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  uint64_t v33 = *(void *)(a2 + 336);
  swift_retain();
  if (v33)
  {
    *(void *)(a1 + 336) = v33;
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v33 - 8))(a1 + 312, a2 + 312, v33);
  }
  else
  {
    long long v36 = *(_OWORD *)(a2 + 312);
    long long v37 = *(_OWORD *)(a2 + 328);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(_OWORD *)(a1 + 312) = v36;
    *(_OWORD *)(a1 + 328) = v37;
  }
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
LABEL_55:
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  uint64_t v41 = *(void *)(a2 + 392);
  if (*(void *)(a1 + 392) != 1)
  {
    if (v41 == 1)
    {
      sub_4A89C(a1 + 384);
      goto LABEL_61;
    }
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
    long long v45 = (long long *)(a1 + 408);
    long long v46 = (long long *)(a2 + 408);
    uint64_t v47 = *(void *)(a2 + 416);
    if (*(void *)(a1 + 416) == 1)
    {
      if (v47 == 1)
      {
        long long v48 = *v46;
        long long v49 = *(_OWORD *)(a2 + 440);
        *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
        *(_OWORD *)(a1 + 440) = v49;
        *long long v45 = v48;
      }
      else
      {
        *(void *)(a1 + 408) = *(void *)(a2 + 408);
        *(void *)(a1 + 416) = *(void *)(a2 + 416);
        *(void *)(a1 + 424) = *(void *)(a2 + 424);
        *(void *)(a1 + 432) = *(void *)(a2 + 432);
        *(void *)(a1 + 440) = *(void *)(a2 + 440);
        *(void *)(a1 + 448) = *(void *)(a2 + 448);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v47 == 1)
    {
      sub_4B1DC(a1 + 408);
      long long v52 = *(_OWORD *)(a2 + 424);
      long long v51 = *(_OWORD *)(a2 + 440);
      *long long v45 = *v46;
      *(_OWORD *)(a1 + 424) = v52;
      *(_OWORD *)(a1 + 440) = v51;
    }
    else
    {
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    swift_retain();
    swift_release();
    uint64_t v55 = *(void *)(a2 + 488);
    if (*(void *)(a1 + 488))
    {
      if (v55)
      {
        sub_64C8((uint64_t *)(a1 + 464), (uint64_t *)(a2 + 464));
LABEL_81:
        *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
        *(void *)(a1 + 512) = *(void *)(a2 + 512);
        *(void *)(a1 + 520) = *(void *)(a2 + 520);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_82;
      }
      sub_616C(a1 + 464);
    }
    else if (v55)
    {
      *(void *)(a1 + 488) = v55;
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      (**(void (***)(uint64_t, uint64_t))(v55 - 8))(a1 + 464, a2 + 464);
      goto LABEL_81;
    }
    long long v56 = *(_OWORD *)(a2 + 464);
    long long v57 = *(_OWORD *)(a2 + 480);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(_OWORD *)(a1 + 464) = v56;
    *(_OWORD *)(a1 + 480) = v57;
    goto LABEL_81;
  }
  if (v41 == 1)
  {
LABEL_61:
    memcpy((void *)(a1 + 384), (const void *)(a2 + 384), 0x90uLL);
    goto LABEL_82;
  }
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v42 = *(void *)(a2 + 416);
  swift_bridgeObjectRetain();
  if (v42 == 1)
  {
    long long v43 = *(_OWORD *)(a2 + 408);
    long long v44 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v44;
    *(_OWORD *)(a1 + 408) = v43;
  }
  else
  {
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  uint64_t v50 = *(void *)(a2 + 488);
  swift_retain();
  if (v50)
  {
    *(void *)(a1 + 488) = v50;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v50 - 8))(a1 + 464, a2 + 464, v50);
  }
  else
  {
    long long v53 = *(_OWORD *)(a2 + 464);
    long long v54 = *(_OWORD *)(a2 + 480);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(_OWORD *)(a1 + 464) = v53;
    *(_OWORD *)(a1 + 480) = v54;
  }
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
LABEL_82:
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = *(void *)(a2 + 544);
  if (*(void *)(a1 + 544) != 1)
  {
    if (v58 == 1)
    {
      sub_4A89C(a1 + 536);
      goto LABEL_88;
    }
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
    long long v62 = (long long *)(a1 + 560);
    long long v63 = (long long *)(a2 + 560);
    uint64_t v64 = *(void *)(a2 + 568);
    if (*(void *)(a1 + 568) == 1)
    {
      if (v64 == 1)
      {
        long long v65 = *v63;
        long long v66 = *(_OWORD *)(a2 + 592);
        *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
        *(_OWORD *)(a1 + 592) = v66;
        *long long v62 = v65;
      }
      else
      {
        *(void *)(a1 + 560) = *(void *)(a2 + 560);
        *(void *)(a1 + 568) = *(void *)(a2 + 568);
        *(void *)(a1 + 576) = *(void *)(a2 + 576);
        *(void *)(a1 + 584) = *(void *)(a2 + 584);
        *(void *)(a1 + 592) = *(void *)(a2 + 592);
        *(void *)(a1 + 600) = *(void *)(a2 + 600);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v64 == 1)
    {
      sub_4B1DC(a1 + 560);
      long long v69 = *(_OWORD *)(a2 + 576);
      long long v68 = *(_OWORD *)(a2 + 592);
      *long long v62 = *v63;
      *(_OWORD *)(a1 + 576) = v69;
      *(_OWORD *)(a1 + 592) = v68;
    }
    else
    {
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    swift_retain();
    swift_release();
    uint64_t v72 = *(void *)(a2 + 640);
    if (*(void *)(a1 + 640))
    {
      if (v72)
      {
        sub_64C8((uint64_t *)(a1 + 616), (uint64_t *)(a2 + 616));
LABEL_108:
        *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
        *(void *)(a1 + 664) = *(void *)(a2 + 664);
        *(void *)(a1 + 672) = *(void *)(a2 + 672);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_109;
      }
      sub_616C(a1 + 616);
    }
    else if (v72)
    {
      *(void *)(a1 + 640) = v72;
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      (**(void (***)(uint64_t, uint64_t))(v72 - 8))(a1 + 616, a2 + 616);
      goto LABEL_108;
    }
    long long v73 = *(_OWORD *)(a2 + 616);
    long long v74 = *(_OWORD *)(a2 + 632);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(_OWORD *)(a1 + 616) = v73;
    *(_OWORD *)(a1 + 632) = v74;
    goto LABEL_108;
  }
  if (v58 == 1)
  {
LABEL_88:
    memcpy((void *)(a1 + 536), (const void *)(a2 + 536), 0x90uLL);
    goto LABEL_109;
  }
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  uint64_t v59 = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  if (v59 == 1)
  {
    long long v60 = *(_OWORD *)(a2 + 560);
    long long v61 = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 592) = v61;
    *(_OWORD *)(a1 + 560) = v60;
  }
  else
  {
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  uint64_t v67 = *(void *)(a2 + 640);
  swift_retain();
  if (v67)
  {
    *(void *)(a1 + 640) = v67;
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v67 - 8))(a1 + 616, a2 + 616, v67);
  }
  else
  {
    long long v70 = *(_OWORD *)(a2 + 616);
    long long v71 = *(_OWORD *)(a2 + 632);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(_OWORD *)(a1 + 616) = v70;
    *(_OWORD *)(a1 + 632) = v71;
  }
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRetain();
LABEL_109:
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v75 = (_OWORD *)(a1 + 704);
  long long v76 = (long long *)(a2 + 704);
  long long v77 = (unsigned char *)(a1 + 752);
  int v78 = *(unsigned __int8 *)(a2 + 752);
  if (*(unsigned __int8 *)(a1 + 752) == 255)
  {
    if (v78 == 255)
    {
      long long v82 = *v76;
      long long v83 = *(_OWORD *)(a2 + 720);
      long long v84 = *(_OWORD *)(a2 + 736);
      *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
      *(_OWORD *)(a1 + 720) = v83;
      *(_OWORD *)(a1 + 736) = v84;
      *int v75 = v82;
      goto LABEL_119;
    }
    if (v78)
    {
LABEL_116:
      uint64_t v85 = *(void *)(a2 + 728);
      *(void *)(a1 + 728) = v85;
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      (**(void (***)(uint64_t, uint64_t))(v85 - 8))(a1 + 704, a2 + 704);
      *long long v77 = 1;
      goto LABEL_119;
    }
LABEL_118:
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *long long v77 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_119;
  }
  if (v78 != 255)
  {
    if (a1 == a2) {
      goto LABEL_119;
    }
    sub_53A04(a1 + 704);
    if (*(unsigned char *)(a2 + 752)) {
      goto LABEL_116;
    }
    goto LABEL_118;
  }
  sub_53A04(a1 + 704);
  long long v80 = *(_OWORD *)(a2 + 720);
  long long v79 = *(_OWORD *)(a2 + 736);
  long long v81 = *v76;
  *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
  *(_OWORD *)(a1 + 720) = v80;
  *(_OWORD *)(a1 + 736) = v79;
  *int v75 = v81;
LABEL_119:
  *(unsigned char *)(a1 + 753) = *(unsigned char *)(a2 + 753);
  *(_WORD *)(a1 + 754) = *(_WORD *)(a2 + 754);
  return a1;
}

void *sub_5ABCC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2F4uLL);
}

void *sub_5ABD4(void *a1, void *a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  a1[1] = a2[1];
  swift_release();
  unsigned int v4 = (void *)a1[2];
  a1[2] = a2[2];

  sub_616C((uint64_t)(a1 + 3));
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  if (a1[11] == 1) {
    goto LABEL_4;
  }
  uint64_t v5 = a2[11];
  if (v5 == 1)
  {
    sub_539D4((uint64_t)(a1 + 10));
LABEL_4:
    memcpy(a1 + 10, a2 + 10, 0x90uLL);
    goto LABEL_13;
  }
  a1[10] = a2[10];
  a1[11] = v5;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
  if (a1[14] != 1)
  {
    uint64_t v6 = a2[14];
    if (v6 != 1)
    {
      a1[13] = a2[13];
      a1[14] = v6;
      swift_bridgeObjectRelease();
      uint64_t v8 = a2[16];
      a1[15] = a2[15];
      a1[16] = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = a2[18];
      a1[17] = a2[17];
      a1[18] = v9;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_4B1DC((uint64_t)(a1 + 13));
  }
  long long v7 = *(_OWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(_OWORD *)(a1 + 15) = v7;
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
LABEL_10:
  a1[19] = a2[19];
  swift_release();
  if (a1[23]) {
    sub_616C((uint64_t)(a1 + 20));
  }
  long long v10 = *((_OWORD *)a2 + 11);
  *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 11) = v10;
  a1[24] = a2[24];
  *((unsigned char *)a1 + 200) = *((unsigned char *)a2 + 200);
  uint64_t v11 = a2[27];
  a1[26] = a2[26];
  a1[27] = v11;
  swift_bridgeObjectRelease();
LABEL_13:
  *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
  if (a1[30] == 1)
  {
LABEL_16:
    memcpy(a1 + 29, a2 + 29, 0x90uLL);
    goto LABEL_25;
  }
  uint64_t v12 = a2[30];
  if (v12 == 1)
  {
    sub_539D4((uint64_t)(a1 + 29));
    goto LABEL_16;
  }
  a1[29] = a2[29];
  a1[30] = v12;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 248) = *((unsigned char *)a2 + 248);
  if (a1[33] != 1)
  {
    uint64_t v13 = a2[33];
    if (v13 != 1)
    {
      a1[32] = a2[32];
      a1[33] = v13;
      swift_bridgeObjectRelease();
      uint64_t v15 = a2[35];
      a1[34] = a2[34];
      a1[35] = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = a2[37];
      a1[36] = a2[36];
      a1[37] = v16;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_4B1DC((uint64_t)(a1 + 32));
  }
  long long v14 = *((_OWORD *)a2 + 17);
  *((_OWORD *)a1 + 16) = *((_OWORD *)a2 + 16);
  *((_OWORD *)a1 + 17) = v14;
  *((_OWORD *)a1 + 18) = *((_OWORD *)a2 + 18);
LABEL_22:
  a1[38] = a2[38];
  swift_release();
  if (a1[42]) {
    sub_616C((uint64_t)(a1 + 39));
  }
  long long v17 = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 39) = *(_OWORD *)(a2 + 39);
  *(_OWORD *)(a1 + 41) = v17;
  a1[43] = a2[43];
  *((unsigned char *)a1 + 352) = *((unsigned char *)a2 + 352);
  uint64_t v18 = a2[46];
  a1[45] = a2[45];
  a1[46] = v18;
  swift_bridgeObjectRelease();
LABEL_25:
  *((unsigned char *)a1 + 376) = *((unsigned char *)a2 + 376);
  if (a1[49] == 1)
  {
LABEL_28:
    memcpy(a1 + 48, a2 + 48, 0x90uLL);
    goto LABEL_37;
  }
  uint64_t v19 = a2[49];
  if (v19 == 1)
  {
    sub_4A89C((uint64_t)(a1 + 48));
    goto LABEL_28;
  }
  a1[48] = a2[48];
  a1[49] = v19;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 400) = *((unsigned char *)a2 + 400);
  if (a1[52] != 1)
  {
    uint64_t v20 = a2[52];
    if (v20 != 1)
    {
      a1[51] = a2[51];
      a1[52] = v20;
      swift_bridgeObjectRelease();
      uint64_t v22 = a2[54];
      a1[53] = a2[53];
      a1[54] = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = a2[56];
      a1[55] = a2[55];
      a1[56] = v23;
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    sub_4B1DC((uint64_t)(a1 + 51));
  }
  long long v21 = *(_OWORD *)(a2 + 53);
  *(_OWORD *)(a1 + 51) = *(_OWORD *)(a2 + 51);
  *(_OWORD *)(a1 + 53) = v21;
  *(_OWORD *)(a1 + 55) = *(_OWORD *)(a2 + 55);
LABEL_34:
  a1[57] = a2[57];
  swift_release();
  if (a1[61]) {
    sub_616C((uint64_t)(a1 + 58));
  }
  long long v24 = *((_OWORD *)a2 + 30);
  *((_OWORD *)a1 + 29) = *((_OWORD *)a2 + 29);
  *((_OWORD *)a1 + 30) = v24;
  a1[62] = a2[62];
  *((unsigned char *)a1 + 504) = *((unsigned char *)a2 + 504);
  a1[64] = a2[64];
  a1[65] = a2[65];
  swift_bridgeObjectRelease();
LABEL_37:
  a1[66] = a2[66];
  swift_bridgeObjectRelease();
  if (a1[68] == 1)
  {
LABEL_40:
    memcpy(a1 + 67, a2 + 67, 0x90uLL);
    goto LABEL_49;
  }
  uint64_t v25 = a2[68];
  if (v25 == 1)
  {
    sub_4A89C((uint64_t)(a1 + 67));
    goto LABEL_40;
  }
  a1[67] = a2[67];
  a1[68] = v25;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 552) = *((unsigned char *)a2 + 552);
  if (a1[71] != 1)
  {
    uint64_t v26 = a2[71];
    if (v26 != 1)
    {
      a1[70] = a2[70];
      a1[71] = v26;
      swift_bridgeObjectRelease();
      a1[72] = a2[72];
      a1[73] = a2[73];
      swift_bridgeObjectRelease();
      a1[74] = a2[74];
      a1[75] = a2[75];
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_4B1DC((uint64_t)(a1 + 70));
  }
  long long v27 = *((_OWORD *)a2 + 36);
  *((_OWORD *)a1 + 35) = *((_OWORD *)a2 + 35);
  *((_OWORD *)a1 + 36) = v27;
  *((_OWORD *)a1 + 37) = *((_OWORD *)a2 + 37);
LABEL_46:
  a1[76] = a2[76];
  swift_release();
  if (a1[80]) {
    sub_616C((uint64_t)(a1 + 77));
  }
  long long v28 = *(_OWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 79) = v28;
  a1[81] = a2[81];
  *((unsigned char *)a1 + 656) = *((unsigned char *)a2 + 656);
  a1[83] = a2[83];
  a1[84] = a2[84];
  swift_bridgeObjectRelease();
LABEL_49:
  *((unsigned char *)a1 + 680) = *((unsigned char *)a2 + 680);
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRelease();
  if (*((unsigned __int8 *)a1 + 752) == 255)
  {
LABEL_55:
    long long v30 = *((_OWORD *)a2 + 45);
    *((_OWORD *)a1 + 44) = *((_OWORD *)a2 + 44);
    *((_OWORD *)a1 + 45) = v30;
    *((_OWORD *)a1 + 46) = *((_OWORD *)a2 + 46);
    *((unsigned char *)a1 + 752) = *((unsigned char *)a2 + 752);
    goto LABEL_56;
  }
  if (*((unsigned __int8 *)a2 + 752) == 255 || a1 != a2)
  {
    sub_53A04((uint64_t)(a1 + 88));
    goto LABEL_55;
  }
LABEL_56:
  *((unsigned char *)a1 + 753) = *((unsigned char *)a2 + 753);
  *((_WORD *)a1 + 377) = *((_WORD *)a2 + 377);
  return a1;
}

uint64_t sub_5B138(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 756))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_5B178(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 744) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 752) = 0;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 756) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 756) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void _s12PresentationVMa()
{
}

void _s12PresentationV13ShelfBehaviorVMa()
{
}

BOOL sub_5B298(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_AEA78;
  v6._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_5B2E0(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_AEAB0;
  v7._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_5B334(char a1)
{
  if (a1) {
    return 0x646570756F7267;
  }
  else {
    return 0x6E69616C70;
  }
}

BOOL sub_5B374@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_5B298(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_5B3AC(void *a1@<X8>)
{
  *a1 = 0x6853656C676E6973;
  a1[1] = 0xEB00000000666C65;
}

uint64_t sub_5B3D0(char *a1, char *a2)
{
  return sub_54F30(*a1, *a2);
}

Swift::Int sub_5B3DC()
{
  return sub_55AEC();
}

uint64_t sub_5B3E4()
{
  return sub_55DC4();
}

Swift::Int sub_5B3EC()
{
  return sub_56878();
}

uint64_t sub_5B3F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_5B2E0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_5B424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_5B334(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_5B454()
{
  unint64_t result = qword_BD748;
  if (!qword_BD748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD748);
  }
  return result;
}

uint64_t sub_5B4A0@<X0>(uint64_t a1@<X8>)
{
  sub_8EAD0();
  swift_allocObject();
  sub_9544(0x6E61726165707061, 0xEA00000000006563, (uint64_t)&unk_B14B8, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v9();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v10();
  }
  else
  {
    *(unsigned char *)a1 = v8 & 1;
    __chkstk_darwin(v8);
    sub_591E0();
    sub_468C(0xD000000000000011, 0x800000000009CFE0, (uint64_t)&unk_B14B8, (uint64_t)sub_5BB6C, v12, v13, v14, v15);
    *(void *)(a1 + 8) = v16;
    __chkstk_darwin(v16);
    sub_591E0();
    sub_3B74(0x756F72676B636162, 0xEF726F6C6F43646ELL, (uint64_t)&unk_B14B8, (uint64_t)sub_1C45C, v17, v18, v19, v20);
    *(void *)(a1 + 16) = v21;
    __chkstk_darwin(v21);
    sub_4BFC();
    sub_573C(&v35, (uint64_t)&v36);
    sub_573C(&v36, a1 + 24);
    uint64_t v22 = sub_3CEE4();
    *(void *)(a1 + 64) = v22;
    *(void *)(a1 + 72) = v23;
    __chkstk_darwin(v22);
    sub_591E0();
    sub_4ED4();
    long long v24 = memcpy((void *)(a1 + 80), v34, 0x2A2uLL);
    __chkstk_darwin(v24);
    sub_591E0();
    sub_4DA0(0x686542666C656873, 0xED0000726F697661, (uint64_t)&unk_B14B8, (uint64_t)sub_5BC08, v25, v26, v27, v28, v33, v34[0], v34[1], SBYTE2(v34[1]));
    __int16 v30 = v29;
    swift_release();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v31();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    uint64_t result = v32();
    *(unsigned char *)(a1 + 754) = v30;
    *(unsigned char *)(a1 + 755) = HIBYTE(v30) & 1;
  }
  return result;
}

uint64_t sub_5B9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 88))(a1, a3);
}

uint64_t sub_5BA28@<X0>(uint64_t a1@<X8>)
{
  return sub_5B4A0(a1);
}

BOOL sub_5BA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_91B4(0xD000000000000017, 0x800000000009D020, (uint64_t)&unk_B14F8, a4, a5, a6, a7, a8);
  if (v8) {
    swift_errorRelease();
  }
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v9();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v10();
  return v8 != 0;
}

BOOL sub_5BB08@<W0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned char *a9@<X8>)
{
  BOOL result = sub_5BA40(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9) {
    *a9 = result;
  }
  return result;
}

uint64_t sub_5BB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_A104(a1, a2);
  *(_WORD *)a3 = result;
  *(unsigned char *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_5BB6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_A354(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_5BB98(uint64_t a1)
{
  return sub_5B9B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_5BBA0(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BAB60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_5BC00()
{
}

uint64_t sub_5BC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5BB3C(a1, *(void *)(v2 + 16), a2);
}

unsigned char *sub_5BC10(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x5BCACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void _s12PresentationV13ShelfBehaviorV23InterShelfSelectionTypeOMa()
{
}

unint64_t sub_5BCE4()
{
  unint64_t result = qword_BD750;
  if (!qword_BD750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD750);
  }
  return result;
}

uint64_t sub_5BD30(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_5664(&qword_BD758);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Shelf();
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v18 - v15;
  sub_5BEB4(a2, a3, a4, (uint64_t)v10);
  if (sub_5754((uint64_t)v10, 1, v11) == 1) {
    return sub_5C100((uint64_t)v10);
  }
  sub_5C09C((uint64_t)v10, (uint64_t)v16);
  sub_51494(a1, 1, v13);
  sub_5C160((uint64_t)v13, a4);
  sub_5C040((uint64_t)v13);
  return sub_5C040((uint64_t)v16);
}

uint64_t sub_5BEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for Shelf();
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a3)
  {
    uint64_t v13 = v4 + 8;
    if (a3 == 1) {
      uint64_t v13 = v4;
    }
  }
  else
  {
    uint64_t v13 = v4 + 16;
  }
  uint64_t v14 = *(void *)(*(void *)v13 + 16);
  if (v14)
  {
    uint64_t v15 = *(void *)v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v16 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_51BA4(v15, (uint64_t)v12);
      BOOL v17 = *v12 == a1 && v12[1] == a2;
      if (v17 || (sub_8FF40() & 1) != 0) {
        break;
      }
      sub_5C040((uint64_t)v12);
      v15 += v16;
      if (!--v14) {
        goto LABEL_17;
      }
    }
    sub_5C09C((uint64_t)v12, a4);
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_17:
    uint64_t v18 = 1;
  }
  sub_56F8(a4, v18, 1, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_5C040(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Shelf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5C09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5C100(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BD758);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5C160(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a2 == 1)
    {
      __chkstk_darwin(a1);
      sub_5C33C();
      uint64_t v5 = sub_77264((void (*)(uint64_t))sub_5C324, v3, v4);
      uint64_t result = swift_bridgeObjectRelease();
      void *v2 = v5;
    }
    else
    {
      __chkstk_darwin(a1);
      sub_5C33C();
      uint64_t v12 = sub_77264((void (*)(uint64_t))sub_5C304, v10, v11);
      uint64_t result = swift_bridgeObjectRelease();
      v2[1] = v12;
    }
  }
  else
  {
    __chkstk_darwin(a1);
    sub_5C33C();
    uint64_t v9 = sub_77264((void (*)(uint64_t))sub_5C324, v7, v8);
    uint64_t result = swift_bridgeObjectRelease();
    v2[2] = v9;
  }
  return result;
}

uint64_t sub_5C298@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = (uint64_t)a2;
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_8FF40() & 1) == 0) {
    uint64_t v3 = (uint64_t)a1;
  }
  return sub_51BA4(v3, a3);
}

uint64_t sub_5C304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5C298(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_5C324@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5C304(a1, a2);
}

void *sub_5C350(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v9 = (void *)a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    long long v54 = a2 + 8;
    long long v10 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 11) = v10;
    uint64_t v11 = v10;
    uint64_t v12 = **(void (***)(void *, void *, uint64_t))(v10 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v13 = v9;
    v12(a1 + 8, v54, v11);
    uint64_t v14 = a2[14];
    a1[13] = a2[13];
    a1[14] = v14;
    uint64_t v15 = a2[16];
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      memcpy(a1 + 15, a2 + 15, 0x90uLL);
    }
    else
    {
      a1[15] = a2[15];
      a1[16] = v15;
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      uint64_t v16 = a2[19];
      swift_bridgeObjectRetain();
      if (v16 == 1)
      {
        long long v17 = *((_OWORD *)a2 + 10);
        *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
        *((_OWORD *)a1 + 10) = v17;
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
      }
      else
      {
        a1[18] = a2[18];
        a1[19] = v16;
        uint64_t v18 = a2[21];
        a1[20] = a2[20];
        a1[21] = v18;
        uint64_t v19 = a2[23];
        a1[22] = a2[22];
        a1[23] = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      a1[24] = a2[24];
      uint64_t v20 = a2[28];
      swift_retain();
      if (v20)
      {
        uint64_t v21 = a2[29];
        a1[28] = v20;
        a1[29] = v21;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(a1 + 25), (uint64_t)(a2 + 25), v20);
      }
      else
      {
        long long v22 = *(_OWORD *)(a2 + 27);
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        *(_OWORD *)(a1 + 27) = v22;
        a1[29] = a2[29];
      }
      *((unsigned char *)a1 + 240) = *((unsigned char *)a2 + 240);
      uint64_t v23 = a2[32];
      a1[31] = a2[31];
      a1[32] = v23;
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)a1 + 264) = *((unsigned char *)a2 + 264);
    uint64_t v24 = a2[35];
    if (v24 == 1)
    {
      memcpy(a1 + 34, a2 + 34, 0x90uLL);
    }
    else
    {
      a1[34] = a2[34];
      a1[35] = v24;
      *((unsigned char *)a1 + 288) = *((unsigned char *)a2 + 288);
      uint64_t v25 = a2[38];
      swift_bridgeObjectRetain();
      if (v25 == 1)
      {
        long long v26 = *(_OWORD *)(a2 + 39);
        *(_OWORD *)(a1 + 37) = *(_OWORD *)(a2 + 37);
        *(_OWORD *)(a1 + 39) = v26;
        *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      }
      else
      {
        a1[37] = a2[37];
        a1[38] = v25;
        uint64_t v27 = a2[40];
        a1[39] = a2[39];
        a1[40] = v27;
        uint64_t v28 = a2[42];
        a1[41] = a2[41];
        a1[42] = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      a1[43] = a2[43];
      uint64_t v29 = a2[47];
      swift_retain();
      if (v29)
      {
        uint64_t v30 = a2[48];
        a1[47] = v29;
        a1[48] = v30;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))((uint64_t)(a1 + 44), (uint64_t)(a2 + 44), v29);
      }
      else
      {
        long long v31 = *((_OWORD *)a2 + 23);
        *((_OWORD *)a1 + 22) = *((_OWORD *)a2 + 22);
        *((_OWORD *)a1 + 23) = v31;
        a1[48] = a2[48];
      }
      *((unsigned char *)a1 + 392) = *((unsigned char *)a2 + 392);
      uint64_t v32 = a2[51];
      a1[50] = a2[50];
      a1[51] = v32;
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)a1 + 416) = *((unsigned char *)a2 + 416);
    uint64_t v33 = a2[54];
    if (v33 == 1)
    {
      memcpy(a1 + 53, a2 + 53, 0x90uLL);
    }
    else
    {
      a1[53] = a2[53];
      a1[54] = v33;
      *((unsigned char *)a1 + 440) = *((unsigned char *)a2 + 440);
      uint64_t v34 = a2[57];
      swift_bridgeObjectRetain();
      if (v34 == 1)
      {
        long long v35 = *((_OWORD *)a2 + 29);
        *((_OWORD *)a1 + 28) = *((_OWORD *)a2 + 28);
        *((_OWORD *)a1 + 29) = v35;
        *((_OWORD *)a1 + 30) = *((_OWORD *)a2 + 30);
      }
      else
      {
        a1[56] = a2[56];
        a1[57] = v34;
        uint64_t v36 = a2[59];
        a1[58] = a2[58];
        a1[59] = v36;
        uint64_t v37 = a2[61];
        a1[60] = a2[60];
        a1[61] = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      a1[62] = a2[62];
      uint64_t v38 = a2[66];
      swift_retain();
      if (v38)
      {
        a1[66] = v38;
        a1[67] = a2[67];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8))((uint64_t)(a1 + 63), (uint64_t)(a2 + 63), v38);
      }
      else
      {
        long long v39 = *(_OWORD *)(a2 + 65);
        *(_OWORD *)(a1 + 63) = *(_OWORD *)(a2 + 63);
        *(_OWORD *)(a1 + 65) = v39;
        a1[67] = a2[67];
      }
      *((unsigned char *)a1 + 544) = *((unsigned char *)a2 + 544);
      a1[69] = a2[69];
      a1[70] = a2[70];
      swift_bridgeObjectRetain();
    }
    a1[71] = a2[71];
    uint64_t v40 = a2[73];
    swift_bridgeObjectRetain();
    if (v40 == 1)
    {
      memcpy(a1 + 72, a2 + 72, 0x90uLL);
    }
    else
    {
      a1[72] = a2[72];
      a1[73] = v40;
      *((unsigned char *)a1 + 592) = *((unsigned char *)a2 + 592);
      uint64_t v41 = a2[76];
      swift_bridgeObjectRetain();
      if (v41 == 1)
      {
        long long v42 = *(_OWORD *)(a2 + 77);
        *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
        *(_OWORD *)(a1 + 77) = v42;
        *(_OWORD *)(a1 + 79) = *(_OWORD *)(a2 + 79);
      }
      else
      {
        a1[75] = a2[75];
        a1[76] = v41;
        a1[77] = a2[77];
        a1[78] = a2[78];
        a1[79] = a2[79];
        a1[80] = a2[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      a1[81] = a2[81];
      uint64_t v43 = a2[85];
      swift_retain();
      if (v43)
      {
        a1[85] = v43;
        a1[86] = a2[86];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v43 - 8))((uint64_t)(a1 + 82), (uint64_t)(a2 + 82), v43);
      }
      else
      {
        long long v44 = *((_OWORD *)a2 + 42);
        *((_OWORD *)a1 + 41) = *((_OWORD *)a2 + 41);
        *((_OWORD *)a1 + 42) = v44;
        a1[86] = a2[86];
      }
      *((unsigned char *)a1 + 696) = *((unsigned char *)a2 + 696);
      a1[88] = a2[88];
      a1[89] = a2[89];
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)a1 + 720) = *((unsigned char *)a2 + 720);
    a1[91] = a2[91];
    a1[92] = a2[92];
    int v45 = *((unsigned __int8 *)a2 + 792);
    swift_bridgeObjectRetain();
    if (v45 == 255)
    {
      long long v46 = *(_OWORD *)(a2 + 95);
      *(_OWORD *)(a1 + 93) = *(_OWORD *)(a2 + 93);
      *(_OWORD *)(a1 + 95) = v46;
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
      *((unsigned char *)a1 + 792) = *((unsigned char *)a2 + 792);
    }
    else if (v45)
    {
      long long v47 = *((_OWORD *)a2 + 48);
      *((_OWORD *)a1 + 48) = v47;
      (**(void (***)(uint64_t, uint64_t))(v47 - 8))((uint64_t)(a1 + 93), (uint64_t)(a2 + 93));
      *((unsigned char *)a1 + 792) = 1;
    }
    else
    {
      a1[93] = a2[93];
      a1[94] = a2[94];
      a1[95] = a2[95];
      a1[96] = a2[96];
      a1[97] = a2[97];
      a1[98] = a2[98];
      *((unsigned char *)a1 + 792) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)a1 + 793) = *((unsigned char *)a2 + 793);
    *((_WORD *)a1 + 397) = *((_WORD *)a2 + 397);
    uint64_t v48 = *(int *)(a3 + 36);
    long long v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = sub_8F420();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t sub_5CA50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_616C(a1 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 128) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 152) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 224)) {
      sub_616C(a1 + 200);
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 280) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 304) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 376)) {
      sub_616C(a1 + 352);
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 432) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 456) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 528)) {
      sub_616C(a1 + 504);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 584) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 608) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(void *)(a1 + 680)) {
      sub_616C(a1 + 656);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a1 + 792);
  if (v4 != 255)
  {
    if (v4)
    {
      sub_616C(a1 + 744);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_8F420();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

void *sub_5CC84(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
  uint64_t v7 = (void *)a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  long long v52 = a2 + 8;
  long long v53 = a1 + 8;
  long long v8 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 11) = v8;
  uint64_t v9 = v8;
  long long v10 = **(void (***)(void *, void *, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v11 = v7;
  v10(v53, v52, v9);
  uint64_t v12 = a2[14];
  a1[13] = a2[13];
  a1[14] = v12;
  uint64_t v13 = a2[16];
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    memcpy(a1 + 15, a2 + 15, 0x90uLL);
  }
  else
  {
    a1[15] = a2[15];
    a1[16] = v13;
    *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
    uint64_t v14 = a2[19];
    swift_bridgeObjectRetain();
    if (v14 == 1)
    {
      long long v15 = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 10) = v15;
      *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
    }
    else
    {
      a1[18] = a2[18];
      a1[19] = v14;
      uint64_t v16 = a2[21];
      a1[20] = a2[20];
      a1[21] = v16;
      uint64_t v17 = a2[23];
      a1[22] = a2[22];
      a1[23] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[24] = a2[24];
    uint64_t v18 = a2[28];
    swift_retain();
    if (v18)
    {
      uint64_t v19 = a2[29];
      a1[28] = v18;
      a1[29] = v19;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))((uint64_t)(a1 + 25), (uint64_t)(a2 + 25), v18);
    }
    else
    {
      long long v20 = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      *(_OWORD *)(a1 + 27) = v20;
      a1[29] = a2[29];
    }
    *((unsigned char *)a1 + 240) = *((unsigned char *)a2 + 240);
    uint64_t v21 = a2[32];
    a1[31] = a2[31];
    a1[32] = v21;
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 264) = *((unsigned char *)a2 + 264);
  uint64_t v22 = a2[35];
  if (v22 == 1)
  {
    memcpy(a1 + 34, a2 + 34, 0x90uLL);
  }
  else
  {
    a1[34] = a2[34];
    a1[35] = v22;
    *((unsigned char *)a1 + 288) = *((unsigned char *)a2 + 288);
    uint64_t v23 = a2[38];
    swift_bridgeObjectRetain();
    if (v23 == 1)
    {
      long long v24 = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 37) = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 39) = v24;
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }
    else
    {
      a1[37] = a2[37];
      a1[38] = v23;
      uint64_t v25 = a2[40];
      a1[39] = a2[39];
      a1[40] = v25;
      uint64_t v26 = a2[42];
      a1[41] = a2[41];
      a1[42] = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[43] = a2[43];
    uint64_t v27 = a2[47];
    swift_retain();
    if (v27)
    {
      uint64_t v28 = a2[48];
      a1[47] = v27;
      a1[48] = v28;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))((uint64_t)(a1 + 44), (uint64_t)(a2 + 44), v27);
    }
    else
    {
      long long v29 = *((_OWORD *)a2 + 23);
      *((_OWORD *)a1 + 22) = *((_OWORD *)a2 + 22);
      *((_OWORD *)a1 + 23) = v29;
      a1[48] = a2[48];
    }
    *((unsigned char *)a1 + 392) = *((unsigned char *)a2 + 392);
    uint64_t v30 = a2[51];
    a1[50] = a2[50];
    a1[51] = v30;
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 416) = *((unsigned char *)a2 + 416);
  uint64_t v31 = a2[54];
  if (v31 == 1)
  {
    memcpy(a1 + 53, a2 + 53, 0x90uLL);
  }
  else
  {
    a1[53] = a2[53];
    a1[54] = v31;
    *((unsigned char *)a1 + 440) = *((unsigned char *)a2 + 440);
    uint64_t v32 = a2[57];
    swift_bridgeObjectRetain();
    if (v32 == 1)
    {
      long long v33 = *((_OWORD *)a2 + 29);
      *((_OWORD *)a1 + 28) = *((_OWORD *)a2 + 28);
      *((_OWORD *)a1 + 29) = v33;
      *((_OWORD *)a1 + 30) = *((_OWORD *)a2 + 30);
    }
    else
    {
      a1[56] = a2[56];
      a1[57] = v32;
      uint64_t v34 = a2[59];
      a1[58] = a2[58];
      a1[59] = v34;
      uint64_t v35 = a2[61];
      a1[60] = a2[60];
      a1[61] = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[62] = a2[62];
    uint64_t v36 = a2[66];
    swift_retain();
    if (v36)
    {
      a1[66] = v36;
      a1[67] = a2[67];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8))((uint64_t)(a1 + 63), (uint64_t)(a2 + 63), v36);
    }
    else
    {
      long long v37 = *(_OWORD *)(a2 + 65);
      *(_OWORD *)(a1 + 63) = *(_OWORD *)(a2 + 63);
      *(_OWORD *)(a1 + 65) = v37;
      a1[67] = a2[67];
    }
    *((unsigned char *)a1 + 544) = *((unsigned char *)a2 + 544);
    a1[69] = a2[69];
    a1[70] = a2[70];
    swift_bridgeObjectRetain();
  }
  a1[71] = a2[71];
  uint64_t v38 = a2[73];
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    memcpy(a1 + 72, a2 + 72, 0x90uLL);
  }
  else
  {
    a1[72] = a2[72];
    a1[73] = v38;
    *((unsigned char *)a1 + 592) = *((unsigned char *)a2 + 592);
    uint64_t v39 = a2[76];
    swift_bridgeObjectRetain();
    if (v39 == 1)
    {
      long long v40 = *(_OWORD *)(a2 + 77);
      *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
      *(_OWORD *)(a1 + 77) = v40;
      *(_OWORD *)(a1 + 79) = *(_OWORD *)(a2 + 79);
    }
    else
    {
      a1[75] = a2[75];
      a1[76] = v39;
      a1[77] = a2[77];
      a1[78] = a2[78];
      a1[79] = a2[79];
      a1[80] = a2[80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    a1[81] = a2[81];
    uint64_t v41 = a2[85];
    swift_retain();
    if (v41)
    {
      a1[85] = v41;
      a1[86] = a2[86];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v41 - 8))((uint64_t)(a1 + 82), (uint64_t)(a2 + 82), v41);
    }
    else
    {
      long long v42 = *((_OWORD *)a2 + 42);
      *((_OWORD *)a1 + 41) = *((_OWORD *)a2 + 41);
      *((_OWORD *)a1 + 42) = v42;
      a1[86] = a2[86];
    }
    *((unsigned char *)a1 + 696) = *((unsigned char *)a2 + 696);
    a1[88] = a2[88];
    a1[89] = a2[89];
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 720) = *((unsigned char *)a2 + 720);
  a1[91] = a2[91];
  a1[92] = a2[92];
  int v43 = *((unsigned __int8 *)a2 + 792);
  swift_bridgeObjectRetain();
  if (v43 == 255)
  {
    long long v44 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)(a1 + 93) = *(_OWORD *)(a2 + 93);
    *(_OWORD *)(a1 + 95) = v44;
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    *((unsigned char *)a1 + 792) = *((unsigned char *)a2 + 792);
  }
  else if (v43)
  {
    long long v45 = *((_OWORD *)a2 + 48);
    *((_OWORD *)a1 + 48) = v45;
    (**(void (***)(uint64_t, uint64_t))(v45 - 8))((uint64_t)(a1 + 93), (uint64_t)(a2 + 93));
    *((unsigned char *)a1 + 792) = 1;
  }
  else
  {
    a1[93] = a2[93];
    a1[94] = a2[94];
    a1[95] = a2[95];
    a1[96] = a2[96];
    a1[97] = a2[97];
    a1[98] = a2[98];
    *((unsigned char *)a1 + 792) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + 793) = *((unsigned char *)a2 + 793);
  *((_WORD *)a1 + 397) = *((_WORD *)a2 + 397);
  uint64_t v46 = *(int *)(a3 + 36);
  long long v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = sub_8F420();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  return a1;
}

uint64_t sub_5D33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void **)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v6;
  id v8 = v6;

  sub_64C8((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128) != 1)
  {
    if (v9 == 1)
    {
      sub_539D4(a1 + 120);
      goto LABEL_7;
    }
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v13 = (long long *)(a1 + 144);
    uint64_t v14 = (long long *)(a2 + 144);
    uint64_t v15 = *(void *)(a2 + 152);
    if (*(void *)(a1 + 152) == 1)
    {
      if (v15 == 1)
      {
        long long v16 = *v14;
        long long v17 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v17;
        *uint64_t v13 = v16;
      }
      else
      {
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v15 == 1)
    {
      sub_4B1DC(a1 + 144);
      long long v20 = *(_OWORD *)(a2 + 160);
      long long v19 = *(_OWORD *)(a2 + 176);
      *uint64_t v13 = *v14;
      *(_OWORD *)(a1 + 160) = v20;
      *(_OWORD *)(a1 + 176) = v19;
    }
    else
    {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    swift_retain();
    swift_release();
    uint64_t v23 = *(void *)(a2 + 224);
    if (*(void *)(a1 + 224))
    {
      if (v23)
      {
        sub_64C8((uint64_t *)(a1 + 200), (uint64_t *)(a2 + 200));
LABEL_27:
        *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      sub_616C(a1 + 200);
    }
    else if (v23)
    {
      *(void *)(a1 + 224) = v23;
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 200, a2 + 200);
      goto LABEL_27;
    }
    long long v24 = *(_OWORD *)(a2 + 200);
    long long v25 = *(_OWORD *)(a2 + 216);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v24;
    *(_OWORD *)(a1 + 216) = v25;
    goto LABEL_27;
  }
  if (v9 == 1)
  {
LABEL_7:
    memcpy((void *)(a1 + 120), (const void *)(a2 + 120), 0x90uLL);
    goto LABEL_28;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v11 = *(_OWORD *)(a2 + 144);
    long long v12 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v12;
    *(_OWORD *)(a1 + 144) = v11;
  }
  else
  {
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v18 = *(void *)(a2 + 224);
  swift_retain();
  if (v18)
  {
    *(void *)(a1 + 224) = v18;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))(a1 + 200, a2 + 200, v18);
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 200);
    long long v22 = *(_OWORD *)(a2 + 216);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v21;
    *(_OWORD *)(a1 + 216) = v22;
  }
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
LABEL_28:
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v26 = *(void *)(a2 + 280);
  if (*(void *)(a1 + 280) != 1)
  {
    if (v26 == 1)
    {
      sub_539D4(a1 + 272);
      goto LABEL_34;
    }
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    uint64_t v30 = (long long *)(a1 + 296);
    uint64_t v31 = (long long *)(a2 + 296);
    uint64_t v32 = *(void *)(a2 + 304);
    if (*(void *)(a1 + 304) == 1)
    {
      if (v32 == 1)
      {
        long long v33 = *v31;
        long long v34 = *(_OWORD *)(a2 + 328);
        *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
        *(_OWORD *)(a1 + 328) = v34;
        *uint64_t v30 = v33;
      }
      else
      {
        *(void *)(a1 + 296) = *(void *)(a2 + 296);
        *(void *)(a1 + 304) = *(void *)(a2 + 304);
        *(void *)(a1 + 312) = *(void *)(a2 + 312);
        *(void *)(a1 + 320) = *(void *)(a2 + 320);
        *(void *)(a1 + 328) = *(void *)(a2 + 328);
        *(void *)(a1 + 336) = *(void *)(a2 + 336);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v32 == 1)
    {
      sub_4B1DC(a1 + 296);
      long long v37 = *(_OWORD *)(a2 + 312);
      long long v36 = *(_OWORD *)(a2 + 328);
      *uint64_t v30 = *v31;
      *(_OWORD *)(a1 + 312) = v37;
      *(_OWORD *)(a1 + 328) = v36;
    }
    else
    {
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    swift_retain();
    swift_release();
    uint64_t v40 = *(void *)(a2 + 376);
    if (*(void *)(a1 + 376))
    {
      if (v40)
      {
        sub_64C8((uint64_t *)(a1 + 352), (uint64_t *)(a2 + 352));
LABEL_54:
        *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
        *(void *)(a1 + 400) = *(void *)(a2 + 400);
        *(void *)(a1 + 408) = *(void *)(a2 + 408);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      sub_616C(a1 + 352);
    }
    else if (v40)
    {
      *(void *)(a1 + 376) = v40;
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      (**(void (***)(uint64_t, uint64_t))(v40 - 8))(a1 + 352, a2 + 352);
      goto LABEL_54;
    }
    long long v41 = *(_OWORD *)(a2 + 352);
    long long v42 = *(_OWORD *)(a2 + 368);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(_OWORD *)(a1 + 352) = v41;
    *(_OWORD *)(a1 + 368) = v42;
    goto LABEL_54;
  }
  if (v26 == 1)
  {
LABEL_34:
    memcpy((void *)(a1 + 272), (const void *)(a2 + 272), 0x90uLL);
    goto LABEL_55;
  }
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  uint64_t v27 = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  if (v27 == 1)
  {
    long long v28 = *(_OWORD *)(a2 + 296);
    long long v29 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 328) = v29;
    *(_OWORD *)(a1 + 296) = v28;
  }
  else
  {
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  uint64_t v35 = *(void *)(a2 + 376);
  swift_retain();
  if (v35)
  {
    *(void *)(a1 + 376) = v35;
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8))(a1 + 352, a2 + 352, v35);
  }
  else
  {
    long long v38 = *(_OWORD *)(a2 + 352);
    long long v39 = *(_OWORD *)(a2 + 368);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(_OWORD *)(a1 + 352) = v38;
    *(_OWORD *)(a1 + 368) = v39;
  }
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
LABEL_55:
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  uint64_t v43 = *(void *)(a2 + 432);
  if (*(void *)(a1 + 432) != 1)
  {
    if (v43 == 1)
    {
      sub_4A89C(a1 + 424);
      goto LABEL_61;
    }
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
    long long v47 = (long long *)(a1 + 448);
    uint64_t v48 = (long long *)(a2 + 448);
    uint64_t v49 = *(void *)(a2 + 456);
    if (*(void *)(a1 + 456) == 1)
    {
      if (v49 == 1)
      {
        long long v50 = *v48;
        long long v51 = *(_OWORD *)(a2 + 480);
        *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
        *(_OWORD *)(a1 + 480) = v51;
        *long long v47 = v50;
      }
      else
      {
        *(void *)(a1 + 448) = *(void *)(a2 + 448);
        *(void *)(a1 + 456) = *(void *)(a2 + 456);
        *(void *)(a1 + 464) = *(void *)(a2 + 464);
        *(void *)(a1 + 472) = *(void *)(a2 + 472);
        *(void *)(a1 + 480) = *(void *)(a2 + 480);
        *(void *)(a1 + 488) = *(void *)(a2 + 488);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v49 == 1)
    {
      sub_4B1DC(a1 + 448);
      long long v54 = *(_OWORD *)(a2 + 464);
      long long v53 = *(_OWORD *)(a2 + 480);
      *long long v47 = *v48;
      *(_OWORD *)(a1 + 464) = v54;
      *(_OWORD *)(a1 + 480) = v53;
    }
    else
    {
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    swift_retain();
    swift_release();
    uint64_t v57 = *(void *)(a2 + 528);
    if (*(void *)(a1 + 528))
    {
      if (v57)
      {
        sub_64C8((uint64_t *)(a1 + 504), (uint64_t *)(a2 + 504));
LABEL_81:
        *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
        *(void *)(a1 + 552) = *(void *)(a2 + 552);
        *(void *)(a1 + 560) = *(void *)(a2 + 560);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_82;
      }
      sub_616C(a1 + 504);
    }
    else if (v57)
    {
      *(void *)(a1 + 528) = v57;
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      (**(void (***)(uint64_t, uint64_t))(v57 - 8))(a1 + 504, a2 + 504);
      goto LABEL_81;
    }
    long long v58 = *(_OWORD *)(a2 + 504);
    long long v59 = *(_OWORD *)(a2 + 520);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(_OWORD *)(a1 + 504) = v58;
    *(_OWORD *)(a1 + 520) = v59;
    goto LABEL_81;
  }
  if (v43 == 1)
  {
LABEL_61:
    memcpy((void *)(a1 + 424), (const void *)(a2 + 424), 0x90uLL);
    goto LABEL_82;
  }
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  uint64_t v44 = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  if (v44 == 1)
  {
    long long v45 = *(_OWORD *)(a2 + 448);
    long long v46 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v46;
    *(_OWORD *)(a1 + 448) = v45;
  }
  else
  {
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  uint64_t v52 = *(void *)(a2 + 528);
  swift_retain();
  if (v52)
  {
    *(void *)(a1 + 528) = v52;
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v52 - 8))(a1 + 504, a2 + 504, v52);
  }
  else
  {
    long long v55 = *(_OWORD *)(a2 + 504);
    long long v56 = *(_OWORD *)(a2 + 520);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(_OWORD *)(a1 + 504) = v55;
    *(_OWORD *)(a1 + 520) = v56;
  }
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRetain();
LABEL_82:
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = *(void *)(a2 + 584);
  if (*(void *)(a1 + 584) != 1)
  {
    if (v60 == 1)
    {
      sub_4A89C(a1 + 576);
      goto LABEL_88;
    }
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
    uint64_t v64 = (long long *)(a1 + 600);
    long long v65 = (long long *)(a2 + 600);
    uint64_t v66 = *(void *)(a2 + 608);
    if (*(void *)(a1 + 608) == 1)
    {
      if (v66 == 1)
      {
        long long v67 = *v65;
        long long v68 = *(_OWORD *)(a2 + 632);
        *(_OWORD *)(a1 + 616) = *(_OWORD *)(a2 + 616);
        *(_OWORD *)(a1 + 632) = v68;
        *uint64_t v64 = v67;
      }
      else
      {
        *(void *)(a1 + 600) = *(void *)(a2 + 600);
        *(void *)(a1 + 608) = *(void *)(a2 + 608);
        *(void *)(a1 + 616) = *(void *)(a2 + 616);
        *(void *)(a1 + 624) = *(void *)(a2 + 624);
        *(void *)(a1 + 632) = *(void *)(a2 + 632);
        *(void *)(a1 + 640) = *(void *)(a2 + 640);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v66 == 1)
    {
      sub_4B1DC(a1 + 600);
      long long v71 = *(_OWORD *)(a2 + 616);
      long long v70 = *(_OWORD *)(a2 + 632);
      *uint64_t v64 = *v65;
      *(_OWORD *)(a1 + 616) = v71;
      *(_OWORD *)(a1 + 632) = v70;
    }
    else
    {
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 616) = *(void *)(a2 + 616);
      *(void *)(a1 + 624) = *(void *)(a2 + 624);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    swift_retain();
    swift_release();
    uint64_t v74 = *(void *)(a2 + 680);
    if (*(void *)(a1 + 680))
    {
      if (v74)
      {
        sub_64C8((uint64_t *)(a1 + 656), (uint64_t *)(a2 + 656));
LABEL_108:
        *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
        *(void *)(a1 + 704) = *(void *)(a2 + 704);
        *(void *)(a1 + 712) = *(void *)(a2 + 712);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_109;
      }
      sub_616C(a1 + 656);
    }
    else if (v74)
    {
      *(void *)(a1 + 680) = v74;
      *(void *)(a1 + 688) = *(void *)(a2 + 688);
      (**(void (***)(uint64_t, uint64_t))(v74 - 8))(a1 + 656, a2 + 656);
      goto LABEL_108;
    }
    long long v75 = *(_OWORD *)(a2 + 656);
    long long v76 = *(_OWORD *)(a2 + 672);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(_OWORD *)(a1 + 656) = v75;
    *(_OWORD *)(a1 + 672) = v76;
    goto LABEL_108;
  }
  if (v60 == 1)
  {
LABEL_88:
    memcpy((void *)(a1 + 576), (const void *)(a2 + 576), 0x90uLL);
    goto LABEL_109;
  }
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  uint64_t v61 = *(void *)(a2 + 608);
  swift_bridgeObjectRetain();
  if (v61 == 1)
  {
    long long v62 = *(_OWORD *)(a2 + 600);
    long long v63 = *(_OWORD *)(a2 + 632);
    *(_OWORD *)(a1 + 616) = *(_OWORD *)(a2 + 616);
    *(_OWORD *)(a1 + 632) = v63;
    *(_OWORD *)(a1 + 600) = v62;
  }
  else
  {
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    *(void *)(a1 + 640) = *(void *)(a2 + 640);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  uint64_t v69 = *(void *)(a2 + 680);
  swift_retain();
  if (v69)
  {
    *(void *)(a1 + 680) = v69;
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v69 - 8))(a1 + 656, a2 + 656, v69);
  }
  else
  {
    long long v72 = *(_OWORD *)(a2 + 656);
    long long v73 = *(_OWORD *)(a2 + 672);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(_OWORD *)(a1 + 656) = v72;
    *(_OWORD *)(a1 + 672) = v73;
  }
  *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRetain();
LABEL_109:
  *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v77 = (_OWORD *)(a1 + 744);
  int v78 = (long long *)(a2 + 744);
  long long v79 = (unsigned char *)(a1 + 792);
  int v80 = *(unsigned __int8 *)(a2 + 792);
  if (*(unsigned __int8 *)(a1 + 792) == 255)
  {
    if (v80 == 255)
    {
      long long v84 = *v78;
      long long v85 = *(_OWORD *)(a2 + 760);
      long long v86 = *(_OWORD *)(a2 + 776);
      *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
      *(_OWORD *)(a1 + 760) = v85;
      *(_OWORD *)(a1 + 776) = v86;
      *long long v77 = v84;
      goto LABEL_119;
    }
    if (v80)
    {
LABEL_116:
      uint64_t v87 = *(void *)(a2 + 768);
      *(void *)(a1 + 768) = v87;
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      (**(void (***)(uint64_t, uint64_t))(v87 - 8))(a1 + 744, a2 + 744);
      *long long v79 = 1;
      goto LABEL_119;
    }
LABEL_118:
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    *long long v79 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_119;
  }
  if (v80 != 255)
  {
    if (a1 == a2) {
      goto LABEL_119;
    }
    sub_53A04(a1 + 744);
    if (*(unsigned char *)(a2 + 792)) {
      goto LABEL_116;
    }
    goto LABEL_118;
  }
  sub_53A04(a1 + 744);
  long long v82 = *(_OWORD *)(a2 + 760);
  long long v81 = *(_OWORD *)(a2 + 776);
  long long v83 = *v78;
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  *(_OWORD *)(a1 + 760) = v82;
  *(_OWORD *)(a1 + 776) = v81;
  *long long v77 = v83;
LABEL_119:
  *(unsigned char *)(a1 + 793) = *(unsigned char *)(a2 + 793);
  *(_WORD *)(a1 + 794) = *(_WORD *)(a2 + 794);
  uint64_t v88 = *(int *)(a3 + 36);
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = sub_8F420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
  return a1;
}

uint64_t sub_5E310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x2F4uLL);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_8F420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *sub_5E3B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
  a1[6] = a2[6];
  swift_release();
  uint64_t v7 = (void *)a1[7];
  a1[7] = a2[7];

  sub_616C((uint64_t)(a1 + 8));
  long long v8 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v8;
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  a1[14] = a2[14];
  swift_bridgeObjectRelease();
  if (a1[16] == 1) {
    goto LABEL_4;
  }
  uint64_t v9 = a2[16];
  if (v9 == 1)
  {
    sub_539D4((uint64_t)(a1 + 15));
LABEL_4:
    memcpy(a1 + 15, a2 + 15, 0x90uLL);
    goto LABEL_13;
  }
  a1[15] = a2[15];
  a1[16] = v9;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
  if (a1[19] != 1)
  {
    uint64_t v10 = a2[19];
    if (v10 != 1)
    {
      a1[18] = a2[18];
      a1[19] = v10;
      swift_bridgeObjectRelease();
      uint64_t v12 = a2[21];
      a1[20] = a2[20];
      a1[21] = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = a2[23];
      a1[22] = a2[22];
      a1[23] = v13;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_4B1DC((uint64_t)(a1 + 18));
  }
  long long v11 = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  *((_OWORD *)a1 + 10) = v11;
  *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
LABEL_10:
  a1[24] = a2[24];
  swift_release();
  if (a1[28]) {
    sub_616C((uint64_t)(a1 + 25));
  }
  long long v14 = *(_OWORD *)(a2 + 27);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 27) = v14;
  a1[29] = a2[29];
  *((unsigned char *)a1 + 240) = *((unsigned char *)a2 + 240);
  uint64_t v15 = a2[32];
  a1[31] = a2[31];
  a1[32] = v15;
  swift_bridgeObjectRelease();
LABEL_13:
  *((unsigned char *)a1 + 264) = *((unsigned char *)a2 + 264);
  if (a1[35] == 1)
  {
LABEL_16:
    memcpy(a1 + 34, a2 + 34, 0x90uLL);
    goto LABEL_25;
  }
  uint64_t v16 = a2[35];
  if (v16 == 1)
  {
    sub_539D4((uint64_t)(a1 + 34));
    goto LABEL_16;
  }
  a1[34] = a2[34];
  a1[35] = v16;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 288) = *((unsigned char *)a2 + 288);
  if (a1[38] != 1)
  {
    uint64_t v17 = a2[38];
    if (v17 != 1)
    {
      a1[37] = a2[37];
      a1[38] = v17;
      swift_bridgeObjectRelease();
      uint64_t v19 = a2[40];
      a1[39] = a2[39];
      a1[40] = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = a2[42];
      a1[41] = a2[41];
      a1[42] = v20;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_4B1DC((uint64_t)(a1 + 37));
  }
  long long v18 = *(_OWORD *)(a2 + 39);
  *(_OWORD *)(a1 + 37) = *(_OWORD *)(a2 + 37);
  *(_OWORD *)(a1 + 39) = v18;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_22:
  a1[43] = a2[43];
  swift_release();
  if (a1[47]) {
    sub_616C((uint64_t)(a1 + 44));
  }
  long long v21 = *((_OWORD *)a2 + 23);
  *((_OWORD *)a1 + 22) = *((_OWORD *)a2 + 22);
  *((_OWORD *)a1 + 23) = v21;
  a1[48] = a2[48];
  *((unsigned char *)a1 + 392) = *((unsigned char *)a2 + 392);
  uint64_t v22 = a2[51];
  a1[50] = a2[50];
  a1[51] = v22;
  swift_bridgeObjectRelease();
LABEL_25:
  *((unsigned char *)a1 + 416) = *((unsigned char *)a2 + 416);
  if (a1[54] == 1)
  {
LABEL_28:
    memcpy(a1 + 53, a2 + 53, 0x90uLL);
    goto LABEL_37;
  }
  uint64_t v23 = a2[54];
  if (v23 == 1)
  {
    sub_4A89C((uint64_t)(a1 + 53));
    goto LABEL_28;
  }
  a1[53] = a2[53];
  a1[54] = v23;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 440) = *((unsigned char *)a2 + 440);
  if (a1[57] != 1)
  {
    uint64_t v24 = a2[57];
    if (v24 != 1)
    {
      a1[56] = a2[56];
      a1[57] = v24;
      swift_bridgeObjectRelease();
      uint64_t v26 = a2[59];
      a1[58] = a2[58];
      a1[59] = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = a2[61];
      a1[60] = a2[60];
      a1[61] = v27;
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    sub_4B1DC((uint64_t)(a1 + 56));
  }
  long long v25 = *((_OWORD *)a2 + 29);
  *((_OWORD *)a1 + 28) = *((_OWORD *)a2 + 28);
  *((_OWORD *)a1 + 29) = v25;
  *((_OWORD *)a1 + 30) = *((_OWORD *)a2 + 30);
LABEL_34:
  a1[62] = a2[62];
  swift_release();
  if (a1[66]) {
    sub_616C((uint64_t)(a1 + 63));
  }
  long long v28 = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 63) = *(_OWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 65) = v28;
  a1[67] = a2[67];
  *((unsigned char *)a1 + 544) = *((unsigned char *)a2 + 544);
  a1[69] = a2[69];
  a1[70] = a2[70];
  swift_bridgeObjectRelease();
LABEL_37:
  a1[71] = a2[71];
  swift_bridgeObjectRelease();
  if (a1[73] == 1)
  {
LABEL_40:
    memcpy(a1 + 72, a2 + 72, 0x90uLL);
    goto LABEL_49;
  }
  uint64_t v29 = a2[73];
  if (v29 == 1)
  {
    sub_4A89C((uint64_t)(a1 + 72));
    goto LABEL_40;
  }
  a1[72] = a2[72];
  a1[73] = v29;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + 592) = *((unsigned char *)a2 + 592);
  if (a1[76] != 1)
  {
    uint64_t v30 = a2[76];
    if (v30 != 1)
    {
      a1[75] = a2[75];
      a1[76] = v30;
      swift_bridgeObjectRelease();
      a1[77] = a2[77];
      a1[78] = a2[78];
      swift_bridgeObjectRelease();
      a1[79] = a2[79];
      a1[80] = a2[80];
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_4B1DC((uint64_t)(a1 + 75));
  }
  long long v31 = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 77) = v31;
  *(_OWORD *)(a1 + 79) = *(_OWORD *)(a2 + 79);
LABEL_46:
  a1[81] = a2[81];
  swift_release();
  if (a1[85]) {
    sub_616C((uint64_t)(a1 + 82));
  }
  long long v32 = *((_OWORD *)a2 + 42);
  *((_OWORD *)a1 + 41) = *((_OWORD *)a2 + 41);
  *((_OWORD *)a1 + 42) = v32;
  a1[86] = a2[86];
  *((unsigned char *)a1 + 696) = *((unsigned char *)a2 + 696);
  a1[88] = a2[88];
  a1[89] = a2[89];
  swift_bridgeObjectRelease();
LABEL_49:
  *((unsigned char *)a1 + 720) = *((unsigned char *)a2 + 720);
  a1[91] = a2[91];
  a1[92] = a2[92];
  swift_bridgeObjectRelease();
  if (*((unsigned __int8 *)a1 + 792) == 255)
  {
LABEL_55:
    long long v34 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)(a1 + 93) = *(_OWORD *)(a2 + 93);
    *(_OWORD *)(a1 + 95) = v34;
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    *((unsigned char *)a1 + 792) = *((unsigned char *)a2 + 792);
    goto LABEL_56;
  }
  if (*((unsigned __int8 *)a2 + 792) == 255 || a1 != a2)
  {
    sub_53A04((uint64_t)(a1 + 93));
    goto LABEL_55;
  }
LABEL_56:
  *((unsigned char *)a1 + 793) = *((unsigned char *)a2 + 793);
  *((_WORD *)a1 + 397) = *((_WORD *)a2 + 397);
  uint64_t v35 = *(int *)(a3 + 36);
  long long v36 = (char *)a1 + v35;
  long long v37 = (char *)a2 + v35;
  uint64_t v38 = sub_8F420();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t sub_5E9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5E9B8);
}

uint64_t sub_5E9B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_8F420();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 36);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_5EA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5EA54);
}

void *sub_5EA54(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_8F420();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 36);
    return (void *)sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ShelfPage()
{
  uint64_t result = qword_BD7B8;
  if (!qword_BD7B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_5EB1C()
{
  uint64_t result = sub_8F420();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_5EBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_8F420();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

void *sub_5EC40@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v36 = sub_8F420();
  uint64_t v33 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ShelfPage();
  v34[2] = a1;
  sub_3B74(0x6C65685379646F62, 0xEB00000000736576, v7, (uint64_t)sub_5F11C, (uint64_t)v34, v8, v9, v10);
  if (v2)
  {
    swift_errorRelease();
    long long v11 = _swiftEmptyArrayStorage;
  }
  *(void *)a2 = v11;
  __chkstk_darwin(v11);
  sub_4B834();
  sub_5F15C(0x746F6F66u, v12, v13, (uint64_t)sub_5F158, v14, v15, v16, v17);
  *((void *)a2 + 1) = v18;
  __chkstk_darwin(v18);
  sub_4B834();
  sub_5F15C(0x64616568u, v19, v20, (uint64_t)sub_5F158, v21, v22, v23, v24);
  *((void *)a2 + 2) = v25;
  uint64_t v26 = sub_3CEE4();
  *((void *)a2 + 3) = v26;
  *((void *)a2 + 4) = v27;
  __chkstk_darwin(v26);
  sub_4B834();
  sub_52A8();
  uint64_t v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v33 + 32))(&a2[*(int *)(v7 + 36)], v6, v36);
  __chkstk_darwin(v28);
  sub_4B834();
  sub_5150();
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v29();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v30();
  return memcpy(a2 + 40, v35, 0x2F4uLL);
}

void *sub_5F104@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  return sub_5EC40(a1, a2);
}

uint64_t sub_5F11C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_CE38(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_5F148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_A5D0(a1, *(void *)(v2 + 16), a2);
}

void sub_5F150()
{
}

void sub_5F15C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = a1 | 0x6853726500000000;
  sub_3B74(v10, 0xED00007365766C65, v8, a4, a5, a6, a7, a8);
}

id sub_5F188()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  id v1 = objc_msgSendSuper2(&v3, "init");
  [v1 setClipsToBounds:0];
  return v1;
}

id sub_5F200(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  id v3 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    [v5 setClipsToBounds:0];
  }
  return v4;
}

id sub_5F2A0(void *a1, double a2, double a3, double a4, double a5)
{
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  id v11 = objc_msgSendSuper2(&v13, "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);
  [v11 setClipsToBounds:0];

  return v11;
}

id sub_5F390()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPageBodyCollectionView()
{
  return self;
}

void *sub_5F3E8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = &_swiftEmptySetSingleton;
  return v2;
}

uint64_t sub_5F400(uint64_t a1, Class isa, void *a3)
{
  uint64_t v6 = sub_5664((uint64_t *)&unk_BDD90);
  sub_7084();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v11);
  sub_5664(&qword_BDD80);
  sub_8F450();
  sub_5664(&qword_BDDA0);
  if (!swift_dynamicCast())
  {
    memset(__src, 0, 88);
    sub_5FDD0((uint64_t)__src);
    sub_608D4();
    swift_allocError();
    *uint64_t v20 = 0;
    swift_willThrow();
    return (uint64_t)isa;
  }
  id v30 = a3;
  memcpy(__dst, __src, sizeof(__dst));
  sub_5FCD4(__dst);
  uint64_t v31 = v3;
  uint64_t v12 = *(void **)(v3 + 16);
  NSString v13 = sub_8F9A0();
  swift_bridgeObjectRelease();
  Class isa = sub_8E9C0().super.isa;
  id v14 = [v12 dequeueReusableCellWithReuseIdentifier:v13 forIndexPath:isa];

  swift_getObjectType();
  uint64_t v15 = sub_60920((uint64_t)v14);
  if (!v15)
  {

    sub_608D4();
    swift_allocError();
    *uint64_t v21 = 1;
    swift_willThrow();
    sub_4911C((uint64_t)__dst);
    return (uint64_t)isa;
  }
  Class isa = (Class)v15;
  uint64_t v35 = v16;
  id v17 = v14;
  sub_8EB30();
  sub_8FDA0();
  sub_1C464((uint64_t)__src);
  if (swift_dynamicCast())
  {
    uint64_t v18 = aBlock[6];
    uint64_t v19 = aBlock[7];
  }
  else
  {
    uint64_t v19 = 0x800000000009D110;
    uint64_t v18 = 0xD000000000000013;
  }
  id v22 = v30;
  sub_6D290(v18, v19, isa);

  id v30 = self;
  sub_490C0((uint64_t)__dst, (uint64_t)__src);
  (*(void (**)(char *, id, uint64_t))(v8 + 16))((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v6);
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  uint64_t v25 = v35;
  *((void *)v24 + 2) = isa;
  *((void *)v24 + 3) = v25;
  memcpy(v24 + 32, __src, 0x58uLL);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v24[v23], (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)&v24[(v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8] = v31;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_60A40;
  *(void *)(v26 + 24) = v24;
  aBlock[4] = sub_60AE8;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_6622C;
  void aBlock[3] = &unk_B15F0;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v17;
  swift_retain();
  swift_retain();
  swift_release();
  [v30 performWithoutAnimation:v27];
  _Block_release(v27);
  sub_4911C((uint64_t)__dst);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0) {
    return (uint64_t)isa;
  }
  __break(1u);
  return result;
}

id sub_5F8A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_5664(&qword_BDD80);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t ObjectType = swift_getObjectType();
  [a1 setNeedsLayout];
  sub_18294(a3 + 16, (uint64_t)v17);
  sub_8F460();
  (*(void (**)(char *, uint64_t, void, uint64_t, uint64_t))(a2 + 8))(v13, a4, *(void *)(a5 + 24), ObjectType, a2);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return [a1 layoutIfNeeded];
}

uint64_t sub_5F9F8()
{
  sub_5664(&qword_BDD80);
  sub_8F450();
  sub_5664(&qword_BDDA0);
  if (swift_dynamicCast())
  {
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v1 = sub_5FCD4(__dst);
    uint64_t v3 = v2;
    swift_beginAccess();
    uint64_t v4 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain();
    char v5 = sub_5FB9C(v1, v3, v4);
    swift_bridgeObjectRelease();
    if (v5)
    {
      sub_4911C((uint64_t)__dst);
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_5FE4C(&v10, v1, v3);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void **)(v0 + 16);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      NSString v9 = sub_8F9A0();
      swift_bridgeObjectRelease();
      [v7 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v9];

      return sub_4911C((uint64_t)__dst);
    }
  }
  else
  {
    memset(__src, 0, 88);
    return sub_5FDD0((uint64_t)__src);
  }
}

uint64_t sub_5FB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_8FFE0();
    sub_8FA00();
    Swift::Int v6 = sub_90000();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_8FF40() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_8FF40() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_5FCD4(void *a1)
{
  uint64_t v5 = a1[7];
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = 46;
  v6._object = (void *)0xE100000000000000;
  sub_8FA10(v6);
  uint64_t v3 = a1[9];
  uint64_t v2 = (void *)a1[10];
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v3;
  v7._object = v2;
  sub_8FA10(v7);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_5FD48()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_5FD78()
{
  sub_5FD48();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for ShelfPageCollectionCellProvider()
{
  return self;
}

uint64_t sub_5FDD0(uint64_t a1)
{
  uint64_t v2 = sub_5664(&qword_BAB18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5FE30(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_5FE4C(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_8FFE0();
  swift_bridgeObjectRetain();
  sub_8FA00();
  Swift::Int v8 = sub_90000();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    BOOL v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_8FF40() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_8FF40() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_602D8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_5FFFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_5664(&qword_BD910);
  uint64_t v3 = sub_8FDD0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    id v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_8FFE0();
      sub_8FA00();
      uint64_t result = sub_90000();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      id v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *id v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_5FE30(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *id v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

Swift::Int sub_602D8(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_5FFFC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_60474();
      goto LABEL_22;
    }
    sub_60628();
  }
  uint64_t v11 = *v4;
  sub_8FFE0();
  sub_8FA00();
  uint64_t result = sub_90000();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_8FF40(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_8FF50();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_8FF40();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_60474()
{
  uint64_t v1 = v0;
  sub_5664(&qword_BD910);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_8FDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_60628()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_5664(&qword_BD910);
  uint64_t v3 = sub_8FDD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_8FFE0();
    swift_bridgeObjectRetain();
    sub_8FA00();
    uint64_t result = sub_90000();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    id v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *id v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_608D4()
{
  unint64_t result = qword_BD918;
  if (!qword_BD918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD918);
  }
  return result;
}

uint64_t sub_60920(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_60964()
{
  uint64_t v1 = sub_5664((uint64_t *)&unk_BDD90);
  sub_7084();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 120) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;

  sub_616C(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_release();

  return _swift_deallocObject(v0, v9 + 8, v8);
}

id sub_60A40()
{
  uint64_t v1 = *(void *)(sub_5664((uint64_t *)&unk_BDD90) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_5F8A0(v3, v4, v0 + 32, v0 + v2, v5);
}

uint64_t sub_60AD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_60AE8()
{
  return sub_66204(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_60AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_60B00()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for ShelfPageCollectionCellProvider.DequeueError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x60BD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageCollectionCellProvider.DequeueError()
{
  return &type metadata for ShelfPageCollectionCellProvider.DequeueError;
}

unint64_t sub_60C10()
{
  unint64_t result = qword_BD920;
  if (!qword_BD920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD920);
  }
  return result;
}

uint64_t sub_60C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BD9C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_5664(&qword_BD9D0);
  swift_allocObject();
  uint64_t v8 = sub_8F230();
  unint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  sub_3C42C(&qword_BD9D8, &qword_BD9E0);
  swift_retain();
  swift_retain();
  sub_8F470();
  sub_8F480();
  swift_release();
  sub_616C((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_60E44(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr))
{
  a3(v4);
  sub_8F220();
  return sub_616C((uint64_t)v4);
}

uint64_t sub_60E90(uint64_t a1)
{
  *(void *)(v1
            + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetchSubscription) = a1;
  return swift_release();
}

uint64_t sub_60EA8(uint64_t a1, uint64_t a2)
{
  int v3 = (void *)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetcher);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetcher);
  *int v3 = a1;
  v3[1] = a2;
  return sub_18234(v4);
}

void sub_60EC8()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView];
  if (v1)
  {
    id v2 = v1;
    [v2 setAccessibilityElementsHidden:1];
    id v3 = [v0 view];
    [v3 addSubview:v2];
  }
  id v4 = [v0 view];
  [v4 setNeedsLayout];
}

void sub_60F88(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView;
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView);
  if (v4)
  {
    [v4 removeFromSuperview];
    uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView;
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView);
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)(v1 + v3) = a1;
  id v6 = a1;

  sub_60EC8();
}

uint64_t sub_6100C()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 preferredContentSizeCategory];

  sub_8F9D0();
  sub_3C470();
  char v2 = sub_8FD30();
  swift_bridgeObjectRelease();

  return v2 & 1;
}

char *sub_610E4(uint64_t a1, uint64_t a2)
{
  void (*v17)(void *__return_ptr, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  __int16 v25;
  objc_class *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  objc_class *v41;
  char *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void v59[3];
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  objc_super v64;
  char v65[40];
  void v66[4];
  void v67[3];
  uint64_t v68;
  uint64_t v69;

  uint64_t v5 = sub_5664(&qword_BAB10);
  __chkstk_darwin(v5 - 8);
  sub_22620();
  long long v55 = v6;
  uint64_t v7 = OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetchSubject;
  sub_5664(&qword_BD9C0);
  swift_allocObject();
  uint64_t v8 = v2;
  *(void *)&v2[v7] = sub_8F190();
  *(void *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetchSubscription] = 0;
  unint64_t v9 = &v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetcher];
  *(void *)unint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  *(void *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView] = 0;
  v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_adjustmentsScrollViewInsets] = 1;
  uint64_t v10 = OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerBackgroundView;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)AMSUICommonVisualEffectView) init];
  *(void *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_objectGraph] = a2;
  *(void *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_presenter] = a1;
  long long v58 = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v57 = sub_60C5C((uint64_t)sub_616BC, 0);
  swift_release();
  swift_retain();
  long long v56 = sub_60C5C((uint64_t)sub_61714, 0);
  swift_release();
  int64_t v11 = *(void **)(a1 + 32);
  *(void *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_backgroundArtwork] = v11[2];
  unint64_t v12 = (void *)v11[3];
  long long v53 = v8;
  *(void *)&v8[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_backgroundColor] = v12;
  uint64_t v13 = v11[4];
  uint64_t v14 = (uint64_t)(v11 + 7);
  swift_beginAccess();
  sub_18294(v14, (uint64_t)v67);
  uint64_t v16 = v68;
  uint64_t v15 = v69;
  sub_820C(v67, v68);
  int64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8);
  swift_retain();
  uint64_t v18 = v12;
  long long v54 = v13;
  swift_retain();
  v17(v66, v16, v15);
  sub_820C(v66, v66[3]);
  uint64_t v19 = sub_63A9C();
  v20(v19);
  unint64_t v21 = OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
  unint64_t v22 = type metadata accessor for ShelfPageDestination();
  sub_63600(a1 + *(int *)(v22 + 24) + v21, v55);
  unint64_t v23 = type metadata accessor for ShelfPage();
  if (sub_5754(v55, 1, v23) == 1)
  {
    sub_639DC(v55, &qword_BAB10);
    char v24 = 0;
    unint64_t v25 = 1;
  }
  else
  {
    sub_636F0(v55 + 40, (uint64_t)v59);
    sub_6374C(v55);
    char v24 = v62;
    unint64_t v25 = v63;
    sub_637A8((uint64_t)v59);
  }
  BOOL v26 = (objc_class *)type metadata accessor for ShelfPageCollectionViewController();
  uint64_t v27 = objc_allocWithZone(v26);
  swift_retain();
  swift_retain();
  sub_66254(v54, 1, v58, (uint64_t)v65, v57, v24 | (v25 << 8));
  int64_t v29 = v28;
  sub_616C((uint64_t)v66);
  sub_616C((uint64_t)v67);
  *(void *)&v53[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController] = v29;
  id v30 = *(void *)(a1 + 32);
  uint64_t v31 = *(void *)(v30 + 40);
  uint64_t v32 = v30 + 56;
  swift_beginAccess();
  sub_18294(v32, (uint64_t)v59);
  uint64_t v33 = v60;
  long long v34 = v61;
  sub_820C(v59, v60);
  uint64_t v35 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 8);
  swift_retain();
  swift_retain();
  v35(v67, v33, v34);
  sub_820C(v67, v68);
  uint64_t v36 = sub_63A9C();
  v37(v36);
  uint64_t v38 = objc_allocWithZone(v26);
  swift_retain();
  sub_66254(v31, 2, v58, (uint64_t)v66, v56, 256);
  uint64_t v40 = v39;
  sub_616C((uint64_t)v67);
  sub_616C((uint64_t)v59);
  *(void *)&v53[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerCollectionViewController] = v40;

  long long v41 = (objc_class *)type metadata accessor for ShelfPageCollectionLayoutViewController();
  v64.receiver = v53;
  v64.super_class = v41;
  long long v42 = (char *)objc_msgSendSuper2(&v64, "initWithNibName:bundle:", 0, 0);
  uint64_t v43 = *(void **)&v42[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerCollectionViewController];
  uint64_t v44 = sub_184E0();
  swift_unknownObjectWeakInit();
  long long v45 = v42;
  long long v46 = v43;
  swift_retain();
  sub_66AC8((uint64_t)sub_636A0, v44);

  swift_release();
  long long v47 = *(void **)&v45[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController];
  uint64_t v48 = sub_184E0();
  swift_unknownObjectWeakInit();
  uint64_t v49 = sub_184E0();
  swift_unknownObjectWeakInit();
  long long v50 = swift_allocObject();
  *(void *)(v50 + 16) = v48;
  *(void *)(v50 + 24) = v49;
  long long v51 = v47;
  swift_retain();
  swift_retain();
  sub_66AE8((uint64_t)sub_636E8, v50);
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v45;
}

uint64_t sub_616BC(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_820C(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_61714(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_820C(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_6176C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_63090(0);
  }
}

double sub_617C4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  double v1 = 0.0;
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong view];

    if (v3)
    {
      swift_beginAccess();
      id v4 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v4 && (uint64_t v5 = v4, v6 = [v4 view], v5, v6))
      {
        [v3 bounds];
        [v6 frame];
        CGRectGetHeight(v9);
        sub_8FC70();
        double v1 = v7;
      }
      else
      {
      }
    }
  }
  return v1;
}

void sub_61928()
{
  double v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetchSubject;
  sub_5664(&qword_BD9C0);
  swift_allocObject();
  *(void *)&v0[v2] = sub_8F190();
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetchSubscription] = 0;
  id v3 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetcher];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView] = 0;
  v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_adjustmentsScrollViewInsets] = 1;
  uint64_t v4 = OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerBackgroundView;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)AMSUICommonVisualEffectView) init];

  sub_8FEA0();
  __break(1u);
}

void sub_61A38()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  objc_msgSendSuper2(&v3, "loadView");
  id v1 = [v0 view];
  [v1 setBackgroundColor:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_backgroundColor]];

  id v2 = [v0 view];
  [v2 setClipsToBounds:1];
}

void sub_61B28()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_62018();
}

void sub_61C04(char a1, SEL *a2)
{
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  objc_msgSendSuper2(&v5, *a2, a1 & 1);
  sub_63090(0);
}

uint64_t sub_61CB4()
{
  objc_super v1 = v0;
  v50.receiver = v0;
  v50.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  objc_msgSendSuper2(&v50, "viewDidLayoutSubviews");
  id v2 = [v0 view];
  sub_3E0DC();

  id v3 = sub_63A64();
  [v3 bounds];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v51.origin.x = v5;
  v51.origin.y = v7;
  v51.size.width = v9;
  v51.size.height = v11;
  double Height = CGRectGetHeight(v51);
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerCollectionViewController];
  id v14 = [v13 view];
  [v14 frame];
  double v16 = v15;

  double v17 = Height - v16 + 10.0;
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_contentView];
  if (v18)
  {
    uint64_t v19 = v18;
    id v20 = sub_63A64();
    [v20 frame];
    sub_63A50();

    double v21 = sub_63A3C();
    objc_msgSend(v22, v23, v21);

    id v24 = sub_63A64();
    [v24 frame];
    double v26 = v25;
    double v28 = v27;

    sub_628C8(v19, v26, v28);
  }
  int64_t v29 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerBackgroundView];
  id v30 = sub_63A64();
  [v30 bounds];
  sub_63A50();

  v52.origin.x = sub_63A3C();
  CGFloat v31 = CGRectGetHeight(v52) - v17;
  id v32 = sub_63A64();
  [v32 bounds];
  CGFloat v34 = v33;
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  CGFloat v40 = v39;

  v53.origin.x = v34;
  v53.origin.y = v36;
  v53.size.width = v38;
  v53.size.height = v40;
  objc_msgSend(v29, "setFrame:", 0.0, v31, CGRectGetWidth(v53), v17);
  uint64_t v41 = *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_presenter];
  if (*(unsigned char *)(v41 + 16) != 2)
  {
    uint64_t v42 = *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController];
    uint64_t v43 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView;
    [*(id *)(v42 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) contentSize];
    double v45 = v44;
    id v46 = [v13 view];
    [v46 frame];
    sub_63A50();

    v54.origin.x = sub_63A3C();
    double MinY = CGRectGetMinY(v54);
    if ((sub_6100C() & 1) != 0 && MinY < v45
      || (sub_6100C() & 1) != 0 && ([*(id *)(v42 + v43) contentSize], v48 == 0.0))
    {
      if (*(unsigned char *)(v41 + 16)) {
        goto LABEL_11;
      }
    }
    else if (*(unsigned char *)(v41 + 16) != 1)
    {
LABEL_11:
      sub_776BC();
    }
  }
  sub_63090(0);
  return sub_62E14();
}

void sub_62018()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_backgroundArtwork];
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = *(void *)(v1 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    id v4 = [v0 view];
    [v4 frame];

    sub_622DC(v3, v2);
    swift_release();
    swift_release();
    swift_release();
  }
  sub_62100();
  sub_621A8();

  sub_6220C();
}

void sub_62100()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController];
  swift_unknownObjectWeakAssign();
  [v0 setChildViewController:v1];
  id v2 = [v1 view];
  sub_89BCC(1, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

void sub_621A8()
{
  id v1 = [v0 view];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerBackgroundView]];
}

void sub_6220C()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerCollectionViewController];
  [v0 setChildViewController:v1];
  id v2 = [v0 view];
  BOOL v3 = sub_3E0DC();

  if (v3) {
    double v4 = 10.0;
  }
  else {
    double v4 = 0.0;
  }
  id v5 = [v1 view];
  sub_89F14(0.0, 0.0, v4, 0.0);
}

void sub_622DC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = v2;
  id v6 = objc_allocWithZone((Class)sub_8EB70());
  CGFloat v7 = (void *)sub_8EB60();
  id v14 = v7;
  sub_60F88(v7);
  uint64_t v8 = sub_184E0();
  swift_weakInit();
  uint64_t v9 = sub_184E0();
  swift_unknownObjectWeakInit();
  double v10 = (void *)swift_allocObject();
  v10[2] = v8;
  v10[3] = v9;
  v10[4] = v3;
  void v10[5] = a1;
  void v10[6] = a2;
  swift_retain();
  CGFloat v11 = v3;
  swift_retain();
  sub_60EA8((uint64_t)sub_639CC, (uint64_t)v10);
  unint64_t v12 = *(void (**)(uint64_t))&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetcher];
  if (v12)
  {
    uint64_t v13 = swift_retain();
    v12(v13);
    sub_18234((uint64_t)v12);
  }
  sub_629E0();
}

void sub_62458(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_8F390();
  __chkstk_darwin(v8 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    swift_beginAccess();
    CGFloat v11 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v11)
    {
      unint64_t v12 = v11;
      if ((*(double (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v11)))() == CGSizeZero.width
        && v13 == CGSizeZero.height)
      {
        swift_release();

        return;
      }
      sub_5664((uint64_t *)&unk_BB5E0);
      sub_8F3E0();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
      uint64_t v29 = type metadata accessor for ShelfPageCollectionLayoutViewController();
      v28[0] = a3;
      id v15 = a3;
      id v16 = (id)AMSLogKey();
      if (v16)
      {
        double v17 = v16;
        uint64_t v18 = sub_8F9D0();
        uint64_t v24 = v19;
        uint64_t v25 = v18;

        sub_8F380();
        v30._countAndFlagsBits = 0;
        v30._object = (void *)0xE000000000000000;
        sub_8F370(v30);
        sub_820C(v28, v29);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v26[0] = DynamicType;
        sub_8F360();
        sub_639DC((uint64_t)v26, &qword_BC780);
        v31._countAndFlagsBits = 5972026;
        v31._object = (void *)0xE300000000000000;
        sub_8F370(v31);
        uint64_t MetatypeMetadata = &type metadata for String;
        v26[0] = v25;
        v26[1] = v24;
        sub_8F360();
        sub_639DC((uint64_t)v26, &qword_BC780);
        v21._countAndFlagsBits = 93;
      }
      else
      {
        sub_8F380();
        v32._countAndFlagsBits = 0;
        v32._object = (void *)0xE000000000000000;
        sub_8F370(v32);
        sub_820C(v28, v29);
        uint64_t v22 = swift_getDynamicType();
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
        v26[0] = v22;
        sub_8F360();
        sub_639DC((uint64_t)v26, &qword_BC780);
        v21._countAndFlagsBits = 58;
      }
      v21._object = (void *)0xE100000000000000;
      sub_8F370(v21);
      sub_8F3A0();
      type metadata accessor for Log();
      sub_616C((uint64_t)v28);
      sub_8F340();
      uint64_t v29 = sub_8ECE0();
      v28[0] = a4;
      swift_retain();
      sub_8F3B0();
      sub_639DC((uint64_t)v28, &qword_BC780);
      sub_43634();
      swift_bridgeObjectRelease();
      if (a5)
      {
        SEL v23 = *(void (**)(uint64_t, uint64_t, uint64_t))((char *)&stru_108.size + (swift_isaMask & *v12));
        swift_retain();
        v23(a4, a5, v10);
        swift_release();
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))&stru_108.segname[(swift_isaMask & *v12) + 16])(a4, v10);
      }
    }
    swift_release();
  }
}

void sub_628C8(void *a1, double a2, double a3)
{
  if (((*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *a1)))() & 1) == 0
    || ((sub_63AB0(), (*(double (**)(void))(v5 + 152))() == a2) ? (BOOL v7 = v6 == a3) : (BOOL v7 = 0), !v7))
  {
    sub_63AB0();
    (*(void (**)(double, double))(v8 + 160))(a2, a3);
    sub_5664(&qword_BD9C0);
    sub_3C42C(&qword_BDA28, &qword_BD9C0);
    sub_8F1A0();
  }
}

uint64_t sub_629E0()
{
  uint64_t v0 = sub_5664(&qword_BD9E8);
  __chkstk_darwin(v0 - 8);
  sub_B7F0();
  uint64_t v3 = v2 - v1;
  sub_8FCF0();
  sub_7084();
  __chkstk_darwin(v4);
  sub_B7F0();
  sub_5664(&qword_BD9F0);
  sub_7084();
  __chkstk_darwin(v5);
  sub_B7F0();
  sub_5664(&qword_BD9F8);
  sub_7084();
  __chkstk_darwin(v6);
  sub_22620();
  swift_retain();
  sub_8FCE0();
  BOOL v7 = self;
  id v13 = [v7 mainRunLoop];
  sub_8FCD0();
  sub_63A7C();
  sub_5664(&qword_BD9C0);
  sub_638A4();
  sub_3C42C(&qword_BDA08, &qword_BD9C0);
  sub_638E4();
  sub_8F1C0();
  sub_639DC(v3, &qword_BD9E8);

  sub_7358();
  v8();
  swift_release();
  id v14 = [v7 mainRunLoop];
  sub_63A7C();
  sub_3C42C(&qword_BDA18, &qword_BD9F0);
  sub_8F1B0();
  sub_639DC(v3, &qword_BD9E8);

  sub_7358();
  v9();
  sub_184E0();
  swift_unknownObjectWeakInit();
  sub_3C42C(&qword_BDA20, &qword_BD9F8);
  uint64_t v10 = sub_8F1D0();
  swift_release();
  sub_7358();
  v11();
  return sub_60E90(v10);
}

void sub_62D88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void (**)(void))(Strong
                          + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_artworkFetcher);
    sub_18224((uint64_t)v2);

    if (v2)
    {
      v2();
      sub_18234((uint64_t)v2);
    }
  }
}

uint64_t sub_62E14()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  BOOL v3 = sub_3E0DC();

  double v4 = 0.0;
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerCollectionViewController];
  if (v3) {
    double v6 = 10.0;
  }
  else {
    double v6 = 0.0;
  }
  uint64_t v7 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView;
  [*(id *)(v5 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) bounds];
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController];
  double v10 = v6 + v9;
  uint64_t v11 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView;
  [*(id *)(v8 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) verticalScrollIndicatorInsets];
  double v13 = v12;
  double v15 = v14;
  uint64_t v16 = OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_adjustmentsScrollViewInsets;
  double v17 = 20.0;
  if (v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_adjustmentsScrollViewInsets])
  {
    uint64_t v18 = 0;
    double v19 = 20.0;
  }
  else
  {
    id v20 = [v1 navigationController];
    if (v20)
    {
      Swift::String v21 = v20;
      id v22 = [v20 navigationBar];

      [v22 frame];
      double v4 = v23;
    }
    double v19 = 0.0 - v4;
    if (v1[v16]) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = 2;
    }
  }
  uint64_t v24 = *(void **)(v8 + v11);
  [v24 setContentInsetAdjustmentBehavior:v18];
  objc_msgSend(v24, "setVerticalScrollIndicatorInsets:", v19, v13, v10, v15);
  [v24 contentInset];
  double v26 = v25;
  double v28 = v27;
  if ((v1[v16] & 1) == 0)
  {
    id v29 = [v1 navigationController];
    double v30 = 0.0;
    if (v29)
    {
      Swift::String v31 = v29;
      id v32 = [v29 navigationBar];

      [v32 frame];
      double v30 = v33;
    }
    double v17 = 0.0 - v30;
  }
  objc_msgSend(*(id *)(v8 + v11), "setContentInset:", v17, v26, v10, v28);
  [*(id *)(v5 + v7) bounds];
  CGFloat v34 = (void *)(v8
                 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets);
  *CGFloat v34 = 0;
  v34[1] = 0;
  v34[2] = v35;
  void v34[3] = 0;
  return sub_66A58();
}

void sub_63090(char a1)
{
  BOOL v3 = *(char **)(v1
                + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerCollectionViewController);
  BOOL v4 = [*(id *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView] numberOfSections] == 0;
  [*(id *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerBackgroundView) setHidden:v4];
  id v5 = [v3 view];
  [v5 setHidden:v4];

  double v6 = *(void **)(*(void *)(v1
                            + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController)
                + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  [v6 contentOffset];
  double v8 = v7 + 0.0;
  [v6 contentSize];
  double v10 = v9;
  [v6 contentInset];
  double v12 = v10 + v11;
  [v6 frame];
  double v14 = v12 - v13;
  uint64_t v15 = sub_184E0();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = v14 < v8;
  if (a1)
  {
    double v17 = self;
    _OWORD v20[4] = sub_63880;
    v20[5] = v16;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_3A478;
    void v20[3] = &unk_B1770;
    uint64_t v18 = _Block_copy(v20);
    swift_retain();
    swift_release();
    [v17 animateWithDuration:4 delay:v18 options:0 animations:0.3 completion:0.0];
    swift_release();
    _Block_release(v18);
  }
  else
  {
    uint64_t v19 = swift_retain();
    sub_63308(v19, v14 < v8);
    swift_release();
    swift_release();
  }
}

void sub_63308(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    BOOL v4 = (void *)Strong;
    id v5 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_footerBackgroundView));

    if (a2) {
      id v6 = 0;
    }
    else {
      id v6 = [self effectWithStyle:7];
    }
    [v5 setEffect:v6];
  }
}

void sub_633C8()
{
}

void sub_63408()
{
}

id sub_63460()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPageCollectionLayoutViewController()
{
  return self;
}

void sub_63598()
{
}

uint64_t sub_63600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_63668()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_636A0()
{
}

uint64_t sub_636A8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

double sub_636E8()
{
  return sub_617C4();
}

uint64_t sub_636F0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_6374C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShelfPage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_637A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_637FC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_6383C(uint64_t a1)
{
  return sub_60E44(a1, *(void *)(v1 + 16), *(void (**)(void *__return_ptr))(v1 + 24));
}

uint64_t sub_63848()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_63880()
{
  sub_63308(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_6388C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_6389C()
{
  return swift_release();
}

unint64_t sub_638A4()
{
  unint64_t result = qword_BDA00;
  if (!qword_BDA00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BDA00);
  }
  return result;
}

unint64_t sub_638E4()
{
  unint64_t result = qword_BDA10;
  if (!qword_BDA10)
  {
    sub_638A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDA10);
  }
  return result;
}

void sub_63934()
{
}

uint64_t sub_6393C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_63974()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_639CC()
{
  sub_62458(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_639DC(uint64_t a1, uint64_t *a2)
{
  sub_5664(a2);
  sub_7358();
  v3();
  return a1;
}

double sub_63A3C()
{
  return v0;
}

id sub_63A64()
{
  BOOL v3 = *(const char **)(v1 + 152);
  return [v0 v3];
}

uint64_t sub_63A7C()
{
  return sub_56F8(v1, 1, 1, v0);
}

uint64_t sub_63A9C()
{
  return v0;
}

uint64_t sub_63AC4()
{
  swift_beginAccess();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  BOOL v3 = sub_820C(v0 + 7, v1);
  uint64_t v4 = *(void *)(v1 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v8, v1, v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v1);
  sub_8F220();
  return sub_616C((uint64_t)v8);
}

uint64_t sub_63BFC(uint64_t *a1)
{
  swift_beginAccess();
  sub_64C8((uint64_t *)(v1 + 56), a1);
  swift_endAccess();
  sub_63AC4();
  return sub_616C((uint64_t)a1);
}

void *sub_63C64(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  v18[1] = a5;
  uint64_t v19 = sub_5664(&qword_BDB40);
  sub_7084();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  double v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5664(&qword_BDB48);
  swift_allocObject();
  v5[4] = sub_8EDD0();
  swift_allocObject();
  void v5[5] = sub_8EDD0();
  swift_allocObject();
  v5[6] = sub_8EDD0();
  sub_5664(&qword_BD9E0);
  swift_allocObject();
  uint64_t v15 = sub_8F230();
  _OWORD v5[2] = a2;
  v5[3] = a3;
  v5[12] = v15;
  v5[13] = a1;
  sub_18294(a4, (uint64_t)(v5 + 7));
  swift_allocObject();
  swift_weakInit();
  sub_5664(&qword_BDB50);
  sub_3C42C(&qword_BDB58, &qword_BDB50);
  swift_retain();
  id v16 = a3;
  swift_retain();
  sub_8F470();
  sub_8F480();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_616C(a4);
  sub_616C((uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v19);
  return v5;
}

uint64_t sub_63EB4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_18294(a1, (uint64_t)v3);
    sub_63BFC(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_63F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8F1E0();
  sub_7084();
  __chkstk_darwin(v7);
  uint64_t v18 = sub_64B64();
  sub_7084();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_3C8F8();
  sub_64900();
  uint64_t v11 = (void *)sub_8FBD0();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  void v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  aBlock[4] = sub_64B50;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A478;
  void aBlock[3] = &unk_B18B0;
  double v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_8F200();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_3C0EC();
  sub_5664(&qword_BC7D8);
  sub_3C42C((unint64_t *)&qword_BC7E0, &qword_BC7D8);
  sub_8FD40();
  sub_8FBE0();
  _Block_release(v14);

  uint64_t v15 = sub_64B8C();
  v16(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v3, v18);
}

uint64_t sub_6417C()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_774C4();
    sub_5664(&qword_BDB60);
    sub_3C42C(&qword_BDB68, &qword_BDB60);
    sub_8EDB0();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_5664(&qword_BDB60);
    sub_3C42C(&qword_BDB68, &qword_BDB60);
    sub_8EDB0();
    return swift_release();
  }
  return result;
}

uint64_t sub_6430C(uint64_t a1, char a2)
{
  sub_8F1E0();
  sub_7084();
  uint64_t v25 = v6;
  __chkstk_darwin(v7);
  sub_64B64();
  sub_7084();
  uint64_t v23 = v9;
  uint64_t v24 = v8;
  __chkstk_darwin(v8);
  sub_3C8F8();
  uint64_t v10 = type metadata accessor for Shelf();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = 40;
  if ((a2 & 0xFE) == 0) {
    uint64_t v13 = 32;
  }
  uint64_t v14 = *(void *)(v2 + v13);
  sub_64900();
  swift_retain();
  uint64_t v15 = (void *)sub_8FBD0();
  sub_51BA4(a1, (uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  sub_5C09C((uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  aBlock[4] = sub_64A84;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A478;
  void aBlock[3] = &unk_B1860;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_8F200();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_3C0EC();
  sub_5664(&qword_BC7D8);
  sub_3C42C((unint64_t *)&qword_BC7E0, &qword_BC7D8);
  sub_8FD40();
  sub_8FBE0();
  _Block_release(v18);
  swift_release();

  uint64_t v19 = sub_64B8C();
  v20(v19);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v3, v24);
}

uint64_t sub_645E0(uint64_t a1, uint64_t a2)
{
  sub_5664(&qword_BC438);
  uint64_t v3 = *(void *)(type metadata accessor for Shelf() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_92840;
  sub_51BA4(a2, v5 + v4);
  sub_5664(&qword_BDB60);
  sub_3C42C(&qword_BDB68, &qword_BDB60);
  sub_8EDC0();
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_92840;
  sub_51BA4(a2, v6 + v4);
  sub_8EDC0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_64798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ShelvesPresenter.ReplaceSolution.discard<A>(_:);
  uint64_t v3 = sub_5664(&qword_BDB70);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_64810()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  sub_616C(v0 + 56);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_64868()
{
  sub_64810();

  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for ShelfPageCollectionPresenter()
{
  return self;
}

uint64_t sub_648C0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_648F8(uint64_t a1)
{
  return sub_63EB4(a1);
}

unint64_t sub_64900()
{
  unint64_t result = qword_BBBB0;
  if (!qword_BBBB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BBBB0);
  }
  return result;
}

uint64_t sub_64940()
{
  uint64_t v1 = type metadata accessor for Shelf();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v6 = sub_8F5F0();
  if (!sub_5754(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_64A84()
{
  uint64_t v1 = *(void *)(type metadata accessor for Shelf() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_645E0(v2, v3);
}

uint64_t sub_64AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_64AF8()
{
  return swift_release();
}

uint64_t sub_64B00()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_64B50()
{
  return sub_6417C();
}

uint64_t sub_64B64()
{
  return sub_8F210();
}

uint64_t sub_64B8C()
{
  return v0;
}

uint64_t sub_64BA8(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_AEB00;
  v7._object = a2;
  Swift::Int v4 = sub_8FF00(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_64BFC(char a1)
{
  if (a1) {
    return 0x7265746F6F66;
  }
  else {
    return 0x726564616568;
  }
}

unsigned char *storeEnumTagSinglePayload for ShelfPageCollectionSupplementaryItemPlacement(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x64CF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageCollectionSupplementaryItemPlacement()
{
  return &type metadata for ShelfPageCollectionSupplementaryItemPlacement;
}

unint64_t sub_64D2C()
{
  unint64_t result = qword_BDB78;
  if (!qword_BDB78)
  {
    sub_2517C(&qword_BDB80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDB78);
  }
  return result;
}

uint64_t sub_64D80(char *a1, char *a2)
{
  return sub_55464(*a1, *a2);
}

Swift::Int sub_64D8C()
{
  return sub_55AF8();
}

uint64_t sub_64D94()
{
  return sub_560D8();
}

Swift::Int sub_64D9C()
{
  return sub_565A8();
}

uint64_t sub_64DA4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_64BA8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_64DD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_64BFC(*v1);
  *a1 = result;
  a1[1] = 0xE600000000000000;
  return result;
}

void sub_64E04(void *a1@<X8>)
{
  *a1 = &off_AEB50;
}

unint64_t sub_64E18()
{
  unint64_t result = qword_BDB88;
  if (!qword_BDB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDB88);
  }
  return result;
}

uint64_t sub_64E64(void *a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  id v3 = a1;
  swift_retain();
  sub_64F68();

  swift_release();
  return v2;
}

void sub_64F68()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = sub_8F9D0();
  uint64_t v5 = v4;
  unsigned int v6 = UICollectionElementKindSectionHeader;
  sub_650EC(v3, v5);
  if (v1)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_65EC4();
    swift_getObjCClassFromMetadata();
    NSString v7 = sub_8F9A0();
    swift_bridgeObjectRelease();
    sub_661C0();

    uint64_t v8 = sub_8F9D0();
    uint64_t v10 = v9;
    uint64_t v11 = UICollectionElementKindSectionFooter;
    sub_650EC(v8, v10);
    swift_bridgeObjectRelease();
    NSString v12 = sub_8F9A0();
    swift_bridgeObjectRelease();
    sub_661C0();

    type metadata accessor for TextComponent();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v14 = sub_8F9A0();
    [v2 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v14];
  }
}

uint64_t sub_650EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x48646570756F7267;
  if (sub_8F9D0() == a1 && v5 == a2) {
    goto LABEL_12;
  }
  char v7 = sub_8FF40();
  swift_bridgeObjectRelease();
  if (v7) {
    return v4;
  }
  uint64_t v4 = 0x46646570756F7267;
  if (sub_8F9D0() == a1 && v8 == a2)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v4;
  }
  char v10 = sub_8FF40();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    sub_65464();
    swift_allocError();
    *(void *)uint64_t v11 = a1;
    *(void *)(v11 + 8) = a2;
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(unsigned char *)(v11 + 32) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_65244()
{
  swift_release();
  return v0;
}

uint64_t sub_6526C()
{
  sub_65244();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for ShelfPageCollectionSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_652C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = sub_650EC(a3, a4);
  if (!v5)
  {
    uint64_t v13 = v10;
    uint64_t v14 = v11;
    uint64_t v15 = *(void **)(v6 + 16);
    NSString v16 = sub_8F9A0();
    uint64_t v23 = v13;
    uint64_t v25 = v14;
    NSString v17 = sub_8F9A0();
    Class isa = sub_8E9C0().super.isa;
    id v19 = [v15 dequeueReusableSupplementaryViewOfKind:v16 withReuseIdentifier:v17 forIndexPath:isa];

    self;
    uint64_t v20 = swift_dynamicCastObjCClass();
    if (v20)
    {
      a2 = v20;
      swift_bridgeObjectRelease();
      sub_654B0(a3, a4, v24);
      sub_8FC10();
    }
    else
    {

      sub_65464();
      swift_allocError();
      *(void *)uint64_t v21 = a3;
      *(void *)(v21 + 8) = a4;
      uint64_t v22 = v25;
      *(void *)(v21 + 16) = v23;
      *(void *)(v21 + 24) = v22;
      *(unsigned char *)(v21 + 32) = 1;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
  }
  return a2;
}

unint64_t sub_65464()
{
  unint64_t result = qword_BDC40;
  if (!qword_BDC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDC40);
  }
  return result;
}

uint64_t sub_654B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_8F0B0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v12 = sub_8F9D0() == a1 && v11 == a2;
  uint64_t v21 = v3;
  if (v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v13 = sub_8FF40();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_13:
    sub_8EFF0();
    swift_getKeyPath();
    sub_5664((uint64_t *)&unk_BDFE0);
    sub_8F430();
    swift_release();
    goto LABEL_14;
  }
  if (sub_8F9D0() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_8FF40();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      sub_65464();
      swift_allocError();
      *(void *)uint64_t v17 = a1;
      *(void *)(v17 + 8) = a2;
      *(void *)(v17 + 16) = 0;
      *(void *)(v17 + 24) = 0;
      *(unsigned char *)(v17 + 32) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
  }
  sub_8EFE0();
  swift_getKeyPath();
  sub_5664((uint64_t *)&unk_BDFE0);
  sub_8F430();
  swift_release();
LABEL_14:
  swift_bridgeObjectRelease();
  sub_8F090();
  a3[3] = v7;
  a3[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  id v19 = sub_8374(a3);
  return (*(uint64_t (**)(uint64_t *, unsigned char *, uint64_t))(v8 + 32))(v19, v10, v7);
}

uint64_t sub_65734(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v6 = a3 & 1;
  uint64_t v37 = sub_5664(&qword_BDD80);
  uint64_t v36 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  double v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Text();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v4;
  uint64_t v11 = *(void **)(v4 + 16);
  NSString v12 = sub_8F9A0();
  Class isa = sub_8E9C0().super.isa;
  id v14 = [v11 dequeueReusableCellWithReuseIdentifier:v12 forIndexPath:isa];

  uint64_t v15 = type metadata accessor for TextComponent();
  uint64_t v16 = swift_dynamicCastClass();
  if (v16)
  {
    uint64_t v5 = v16;
    uint64_t v32 = v15;
    swift_getKeyPath();
    if (v6)
    {
      uint64_t v17 = UIFontTextStyleFootnote;
      sub_5664((uint64_t *)&unk_BDFE0);
      sub_661E4();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v18 = 1953460070;
    }
    else
    {
      uint64_t v17 = UIFontTextStyleSubheadline;
      sub_5664((uint64_t *)&unk_BDFE0);
      sub_661E4();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v18 = 1684104552;
    }
    unint64_t v31 = v18 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
    id v20 = objc_msgSend(self, "ams_secondaryText");
    uint64_t v21 = sub_8ED30();
    uint64_t v42 = (void *)v21;
    uint64_t v43 = &protocol witness table for FontSource;
    *sub_8374((uint64_t *)&v41) = (uint64_t)v17;
    (*(void (**)(void))(*(void *)(v21 - 8) + 104))();
    sub_8EB80();
    uint64_t v42 = &type metadata for DynamicPlainText;
    uint64_t v43 = &protocol witness table for DynamicPlainText;
    *(void *)&long long v41 = swift_allocObject();
    sub_65D60((uint64_t)v44, v41 + 16);
    uint64_t v22 = v17;
    sub_5664((uint64_t *)&unk_BDFE0);
    sub_8F440();
    uint64_t v39 = sub_8FD70();
    uint64_t v40 = v23;
    sub_1C464((uint64_t)v38);
    v45._countAndFlagsBits = 45;
    v45._object = (void *)0xE100000000000000;
    sub_8FA10(v45);
    v46._countAndFlagsBits = v31;
    v46._object = (void *)0xE600000000000000;
    sub_8FA10(v46);
    swift_bridgeObjectRelease();
    v38[0] = v39;
    v38[1] = v40;
    sub_8FDB0();
    uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 28)];
    uint64_t v25 = sub_8F5F0();
    sub_56F8(v24, 1, 1, v25);
    double v26 = &v10[*(int *)(v8 + 32)];
    *((void *)v26 + 4) = 0;
    *(_OWORD *)double v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    sub_573C(&v41, (uint64_t)(v10 + 16));
    *(void *)uint64_t v10 = 0;
    *((_WORD *)v10 + 4) = 256;
    uint64_t v42 = (void *)v8;
    uint64_t v43 = (void *)sub_65E20(&qword_BC360, (void (*)(uint64_t))type metadata accessor for Text);
    double v27 = sub_8374((uint64_t *)&v41);
    sub_65DBC((uint64_t)v10, (uint64_t)v27);
    double v28 = v33;
    sub_8F460();
    sub_65E20(&qword_BDC48, (void (*)(uint64_t))type metadata accessor for TextComponent);
    sub_8EAA0();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v37);
    sub_65E68((uint64_t)v10);
    sub_42314((uint64_t)v44);
  }
  else
  {

    sub_65464();
    swift_allocError();
    *(void *)uint64_t v19 = v6;
    *(_OWORD *)(v19 + 8) = xmmword_95A30;
    *(void *)(v19 + 24) = 0;
    *(unsigned char *)(v19 + 32) = 0;
    swift_willThrow();
  }
  return v5;
}

uint64_t sub_65D08()
{
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 80)) {
    sub_616C(v0 + 56);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_65D60(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_65DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Text();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_65E20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_65E68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Text();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_65EC4()
{
  unint64_t result = qword_BDC50;
  if (!qword_BDC50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BDC50);
  }
  return result;
}

uint64_t sub_65F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 && a5 != 2)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1)
{
  return sub_65F7C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_65F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 && a5 != 2)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_65F04(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_65F04(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_65F7C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_65F7C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_661A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_661A8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageCollectionSupplementaryViewProvider.DequeueError()
{
  return &type metadata for ShelfPageCollectionSupplementaryViewProvider.DequeueError;
}

id sub_661C0()
{
  uint64_t v6 = *(const char **)(v4 + 1992);
  return objc_msgSend(v0, v6, v2, v1, v3);
}

uint64_t sub_661E4()
{
  return sub_8F430();
}

uint64_t sub_66204(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_6622C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_66254(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_5664(&qword_BDD18);
  sub_7084();
  __chkstk_darwin(v10);
  sub_22620();
  uint64_t v11 = sub_8F260();
  sub_7084();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_6DAA8();
  swift_unknownObjectWeakInit();
  uint64_t v15 = &v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets];
  long long v16 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v15 + 1) = v16;
  uint64_t v17 = &v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  *(void *)&v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content] = 0;
  *(void *)&v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider] = 0;
  *(void *)&v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY] = 0;
  *(void *)&v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_pageCount] = 0;
  *(void *)&v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_previousIndex] = 0;
  sub_5664(&qword_BDD20);
  sub_8F560();
  uint64_t v19 = v6;
  sub_8F770();
  sub_8F8B0();
  swift_unknownObjectRetain();
  uint64_t v20 = sub_8F870();
  *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculator] = v20;
  uint64_t v36 = v20;
  swift_retain();
  sub_8F240();
  uint64_t v21 = sub_8F540();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v7, v11);
  *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_objectGraph] = v21;
  v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_placement] = a2;
  if (!a2)
  {
    id v22 = [objc_allocWithZone((Class)type metadata accessor for ShelfPageBodyCollectionView()) init];
    *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView] = v22;
    unsigned int v25 = 1684104552;
LABEL_6:
    uint64_t v23 = v25 | 0x6853726500000000;
    uint64_t v24 = 0xEB00000000666C65;
    goto LABEL_7;
  }
  if (a2 != 1)
  {
    id v22 = [objc_allocWithZone((Class)type metadata accessor for ShelfPageFooterCollectionView()) init];
    *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView] = v22;
    unsigned int v25 = 1953460070;
    goto LABEL_6;
  }
  id v22 = [objc_allocWithZone((Class)type metadata accessor for ShelfPageBodyCollectionView()) init];
  *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView] = v22;
  uint64_t v23 = 0x6C65685379646F62;
  uint64_t v24 = 0xE900000000000066;
LABEL_7:
  sub_6D290(v23, v24, v22);
  sub_5664(&qword_BDD28);
  swift_allocObject();
  swift_retain();
  uint64_t v36 = sub_8F630();
  sub_5664(&qword_BDD30);
  swift_allocObject();
  sub_3C42C((unint64_t *)&unk_BDD38, &qword_BDD28);
  *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_statePresenter] = sub_8EF00();
  type metadata accessor for ShelfPageCollectionCellProvider();
  swift_allocObject();
  *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_cellProvider] = sub_5F3E8((uint64_t)v22, a3);
  type metadata accessor for ShelfPageCollectionSupplementaryViewProvider();
  swift_allocObject();
  id v26 = v22;
  swift_retain_n();
  *(void *)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_supplementaryViewProvider] = sub_64E64(v26, a3);
  sub_18294(a4, (uint64_t)&v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel]);
  double v27 = &v19[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_shelfBehavior];
  *double v27 = a6;
  v27[1] = HIBYTE(a6) & 1;

  v37.receiver = v19;
  v37.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  id v28 = objc_msgSendSuper2(&v37, "init");
  sub_184E0();
  swift_unknownObjectWeakInit();
  sub_5664(&qword_BD9D0);
  sub_3C42C(&qword_BDD48, &qword_BD9D0);
  id v29 = v28;
  sub_8F470();
  sub_8F480();
  swift_release();
  sub_616C((uint64_t)&v36);
  sub_7358();
  v30();
  sub_5664(&qword_BDD50);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_91D00;
  *(void *)(v31 + 32) = sub_8F180();
  *(void *)(v31 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v31 + 48) = sub_8EFD0();
  *(void *)(v31 + 56) = &protocol witness table for UITraitLegibilityWeight;
  *(void *)(v31 + 64) = sub_8F0C0();
  *(void *)(v31 + 72) = &protocol witness table for UITraitHorizontalSizeClass;
  *(void *)(sub_184E0() + 16) = ObjectType;
  id v32 = v29;
  sub_8FBC0();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_616C(a4);
  sub_3C808();
}

void sub_66888(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_18294(a1, (uint64_t)v4);
    sub_66CD8(v4);
  }
}

void sub_668F0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) collectionViewLayout];
  [v1 invalidateLayout];
}

void sub_66950()
{
  swift_unknownObjectWeakInit();
  id v1 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets];
  long long v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)id v1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v1 + 1) = v2;
  uint64_t v3 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_pageCount] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_previousIndex] = 0;

  sub_8FEA0();
  __break(1u);
}

uint64_t sub_66A58()
{
  [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) bounds];
  sub_8FC70();
  return sub_8F850();
}

uint64_t sub_66AC8(uint64_t a1, uint64_t a2)
{
  return sub_66B08(a1, a2, &OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews, (uint64_t (*)(uint64_t, uint64_t))sub_18234);
}

uint64_t sub_66AE8(uint64_t a1, uint64_t a2)
{
  return sub_66B08(a1, a2, &OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator, (uint64_t (*)(uint64_t, uint64_t))sub_6D9A0);
}

uint64_t sub_66B08(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = (uint64_t *)(v4 + *a3);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  *uint64_t v5 = a1;
  v5[1] = a2;
  return a4(v6, v7);
}

uint64_t sub_66B28()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content);
  }
  else
  {
    uint64_t v2 = sub_67088();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_66B8C()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider))
  {
    uint64_t v2 = *(void **)(v0
                    + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = sub_66B28();
    uint64_t v5 = v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel;
    swift_beginAccess();
    sub_18294(v5, (uint64_t)v8);
    uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculator);
    type metadata accessor for ShelfPageCollectionViewLayoutProvider();
    swift_allocObject();
    uint64_t v2 = sub_6DB68(v4, v8, v6);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_66C78()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel;
  swift_beginAccess();
  sub_18294(v1, (uint64_t)v3);
  sub_68214((uint64_t)v3);
  return sub_616C((uint64_t)v3);
}

uint64_t sub_66CD8(uint64_t *a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel);
  swift_beginAccess();
  sub_64C8(v3, a1);
  swift_endAccess();
  sub_66C78();
  return sub_616C((uint64_t)a1);
}

void sub_66D48()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  objc_msgSendSuper2(&v3, "loadView");
  id v1 = [v0 view];
  id v2 = objc_msgSend(self, "ams_clear");
  [v1 setBackgroundColor:v2];
}

void sub_66E28()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_680F0();
}

uint64_t sub_66EA8()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  objc_msgSendSuper2(&v4, "viewDidLayoutSubviews");
  uint64_t result = sub_66A58();
  id v2 = *(void (**)(uint64_t))&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews];
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    return sub_18234((uint64_t)v2);
  }
  return result;
}

uint64_t sub_66FC4(char a1, SEL *a2)
{
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  objc_msgSendSuper2(&v6, *a2, a1 & 1);
  return sub_8F8A0();
}

uint64_t sub_67088()
{
  uint64_t v1 = v0;
  sub_5664(&qword_BDDE8);
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  sub_184E0();
  swift_unknownObjectWeakInit();
  swift_retain();
  id v3 = v2;
  uint64_t v4 = sub_8EE30();
  char v5 = 0;
  uint64_t v6 = 0;
  do
  {
    char v7 = v5;
    char v8 = *((unsigned char *)&off_AEB78 + v6 + 32);
    uint64_t v9 = sub_184E0();
    swift_weakInit();
    sub_184E0();
    sub_6DA18();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v1;
    *(unsigned char *)(v10 + 32) = v8;
    sub_8EDF0();
    swift_bridgeObjectRelease();
    swift_release();
    char v5 = 1;
    uint64_t v6 = 1;
  }
  while ((v7 & 1) == 0);
  uint64_t v11 = sub_8F9D0();
  uint64_t v13 = v12;
  uint64_t v22 = sub_8F9D0();
  uint64_t v15 = v14;
  uint64_t v16 = sub_184E0();
  swift_weakInit();
  sub_184E0();
  sub_6DA18();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16;
  void v17[3] = v1;
  v17[4] = v11;
  v17[5] = v13;
  swift_bridgeObjectRetain_n();
  sub_8EDF0();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v18 = sub_184E0();
  swift_weakInit();
  sub_184E0();
  sub_6DA18();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v18;
  uint64_t v19[3] = v1;
  v19[4] = v22;
  v19[5] = v15;
  swift_bridgeObjectRetain_n();
  sub_8EDF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_placement)
    && *(unsigned char *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_placement) != 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_8FF40();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      return v4;
    }
  }
  sub_8EDE0();
  return v4;
}

uint64_t sub_67400(uint64_t a1, objc_class *a2, void *a3)
{
  uint64_t v6 = sub_5664((uint64_t *)&unk_BDD60);
  __chkstk_darwin(v6 - 8);
  char v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_5664((uint64_t *)&unk_BDFE0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    swift_retain();
    sub_5F9F8();
    uint64_t v15 = (void *)sub_5F400(a1, a2, a3);
    uint64_t v16 = swift_release();
    sub_66B28(v16);
    sub_8EE20();
    swift_release();
    if (sub_5754((uint64_t)v8, 1, v9) == 1)
    {

      sub_639DC((uint64_t)v8, (uint64_t *)&unk_BDD60);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
      swift_getKeyPath();
      sub_8F430();
      swift_release();
      int v17 = v25[97];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 - 1) <= 1)
      {
        uint64_t v18 = self;
        id v19 = v15;
        id v20 = objc_msgSend(v18, "ams_componentBackground");
        [v19 setBackgroundColor:v20];

        id v21 = v19;
        sub_89188(0.0);
      }
      swift_getKeyPath();
      sub_8F430();
      swift_release();
      int v22 = v25[96];
      swift_bridgeObjectRelease();
      uint64_t v23 = swift_bridgeObjectRelease();
      if (v22 == 2 || (v22 & 1) != 0)
      {
      }
      else
      {
        sub_66B28(v23);
        sub_8EDE0();

        swift_release();
      }
      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    }
    return (uint64_t)v15;
  }
  else
  {
    uint64_t result = sub_8FEA0();
    __break(1u);
  }
  return result;
}

uint64_t sub_67968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  v23[0] = a4;
  v23[1] = a5;
  int v25 = a6 & 1;
  uint64_t v7 = sub_5664((uint64_t *)&unk_BDD90);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v23 - v12;
  uint64_t v14 = sub_5664((uint64_t *)&unk_BDD60);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_5664((uint64_t *)&unk_BDFE0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  sub_8EE20();
  if (sub_5754((uint64_t)v16, 1, v17) == 1)
  {
    sub_639DC((uint64_t)v16, (uint64_t *)&unk_BDD60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_8EF40();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        uint64_t v21 = sub_65734((uint64_t)v20, v24, v25, (uint64_t)v13);
        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        return v21;
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_8FDE0(47);
  v29._object = (void *)0x800000000009D7D0;
  v29._countAndFlagsBits = 0xD00000000000002DLL;
  sub_8FA10(v29);
  char v26 = v25;
  sub_8FE60();
  uint64_t result = sub_8FEA0();
  __break(1u);
  return result;
}

uint64_t sub_67D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  v26._countAndFlagsBits = a6;
  v26._object = a7;
  v24[1] = a5;
  uint64_t v25 = sub_5664((uint64_t *)&unk_BDD90);
  uint64_t v8 = *(void *)(v25 - 8);
  uint64_t v9 = __chkstk_darwin(v25);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v14 = sub_5664((uint64_t *)&unk_BDD60);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_5664((uint64_t *)&unk_BDFE0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EE20();
  if (sub_5754((uint64_t)v16, 1, v17) == 1)
  {
    sub_639DC((uint64_t)v16, (uint64_t *)&unk_BDD60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_8EF40();
      swift_release();
      uint64_t v21 = v25;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v25);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        uint64_t v22 = sub_652C4((uint64_t)v20, a2, v26._countAndFlagsBits, (uint64_t)v26._object);
        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v21);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        return v22;
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v21);
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  unint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_8FDE0(42);
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD000000000000028;
  unint64_t v28 = 0x800000000009D7A0;
  sub_8FA10(v26);
  uint64_t result = sub_8FEA0();
  __break(1u);
  return result;
}

void sub_680F0()
{
  sub_6817C();
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView];
  [v1 setCommonDelegate:v0];
  id v2 = [v0 view];
  [v2 addSubview:v1];

  sub_89BCC(1, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

void sub_6817C()
{
  sub_66B8C()[3] = &off_B1A20;
  swift_unknownObjectWeakAssign();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  sub_66B8C();
  id v2 = sub_6DBBC();
  swift_release();
  [v1 setCollectionViewLayout:v2];
}

void sub_68214(uint64_t a1)
{
  id v3 = sub_66B8C();
  sub_18294(a1, (uint64_t)v5);
  swift_beginAccess();
  sub_616C((uint64_t)(v3 + 4));
  sub_573C(v5, (uint64_t)(v3 + 4));
  swift_endAccess();
  swift_release();
  id v4 = [*(id *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) collectionViewLayout];
  [v4 invalidateLayout];
}

void sub_682C8()
{
}

void sub_68308()
{
}

id sub_68360()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPageCollectionViewController()
{
  return self;
}

uint64_t sub_684AC(unint64_t a1, unint64_t a2, void *a3)
{
  sub_8F5D0();
  sub_7084();
  __chkstk_darwin(v6);
  sub_22620();
  sub_6DAD8(v7);
  uint64_t v8 = sub_8E9B0();
  sub_7084();
  __chkstk_darwin(v9);
  sub_22620();
  sub_6DACC(v10);
  uint64_t v11 = sub_5664(&qword_BDD58);
  uint64_t v12 = sub_3C870(v11);
  __chkstk_darwin(v12);
  sub_22620();
  sub_6DACC(v13);
  uint64_t v14 = sub_5664((uint64_t *)&unk_BDD60);
  uint64_t v15 = sub_3C870(v14);
  __chkstk_darwin(v15);
  sub_4EBA4();
  sub_6DA00();
  __chkstk_darwin(v16);
  sub_6DAC0();
  sub_6DACC(v17);
  uint64_t v104 = sub_5664((uint64_t *)&unk_BDFE0);
  sub_7084();
  uint64_t v99 = v18;
  __chkstk_darwin(v19);
  sub_22620();
  sub_6DACC(v20);
  uint64_t v21 = sub_5664(&qword_BDD70);
  uint64_t v22 = sub_3C870(v21);
  __chkstk_darwin(v22);
  sub_4EBA4();
  sub_6DA00();
  __chkstk_darwin(v23);
  sub_6DA00();
  __chkstk_darwin(v24);
  sub_6DAC0();
  sub_6DAD8(v25);
  uint64_t v110 = sub_8F5F0();
  sub_7084();
  uint64_t v98 = v26;
  __chkstk_darwin(v27);
  sub_4EBA4();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_6DA00();
  __chkstk_darwin(v31);
  sub_6DAC0();
  sub_6DAD8(v32);
  uint64_t v111 = sub_8EA10();
  sub_7084();
  uint64_t v101 = v33;
  __chkstk_darwin(v34);
  sub_B7F0();
  uint64_t v37 = v36 - v35;
  uint64_t v38 = sub_5664(&qword_BDD78);
  uint64_t v39 = sub_3C870(v38);
  __chkstk_darwin(v39);
  sub_3C938();
  uint64_t v114 = sub_5664(&qword_BDD80);
  sub_7084();
  long long v41 = (void (**)(uint64_t, uint64_t, uint64_t))v40;
  __chkstk_darwin(v42);
  sub_22620();
  sub_6DACC(v43);
  if (a1 >> 62)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    sub_6DAF4();
    uint64_t v44 = sub_8FEB0();
  }
  else
  {
    uint64_t v44 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  Swift::String v45 = &selRef_hasSystemTelephonyOfAnyKind;
  uint64_t v115 = v44;
  uint64_t v92 = v29;
  if (v44)
  {
    uint64_t v90 = v8;
    Swift::Int v95 = a2;
    a2 = a1 & 0xC000000000000001;
    v113 = (char ***)(v101 + 8);
    v107 = v41 + 4;
    uint64_t v8 = 4;
    unint64_t v112 = a1;
    uint64_t v46 = v111;
    uint64_t v106 = v3;
    unint64_t v105 = a1 & 0xC000000000000001;
    while (1)
    {
      uint64_t v29 = v8 - 4;
      if (a2)
      {
        long long v41 = (void (**)(uint64_t, uint64_t, uint64_t))sub_8FDF0();
      }
      else
      {
        long long v41 = *(void (***)(uint64_t, uint64_t, uint64_t))(a1 + 8 * v8);
        swift_unknownObjectRetain();
      }
      a1 = v8 - 3;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
      sub_66B28();
      id v47 = [v41 v45[253]];
      sub_8E9D0();

      sub_8EE00();
      swift_release();
      Swift::String v45 = *v113;
      ((void (*)(uint64_t, uint64_t))*v113)(v37, v46);
      sub_6D9B8(v3, 1, v114);
      if (!v48) {
        break;
      }
      swift_unknownObjectRelease();
      sub_639DC(v3, &qword_BDD78);
      sub_6DAF4();
      Swift::String v45 = &selRef_hasSystemTelephonyOfAnyKind;
LABEL_33:
      ++v8;
      BOOL v48 = a1 == v115;
      a1 = v112;
      if (v48) {
        goto LABEL_37;
      }
    }
    (*v107)(v109, v3, v114);
    swift_getKeyPath();
    uint64_t v3 = v114;
    sub_8F430();
    swift_release();
    sub_6D9B8(v108, 1, v110);
    if (v48)
    {
      sub_6DAE8();
      sub_7358();
      v49();
      swift_unknownObjectRelease();
      sub_639DC(v108, &qword_BDD70);
      sub_6DAF4();
      uint64_t v46 = v111;
      sub_6DA80();
LABEL_32:
      a2 = v105;
      goto LABEL_33;
    }
    sub_6D9F4();
    v50();
    id v51 = [v41 indexPath];
    sub_8E9D0();

    sub_6B690((uint64_t)v116);
    uint64_t v46 = v111;
    uint64_t v3 = v101 + 8;
    ((void (*)(uint64_t, uint64_t))v45)(v37, v111);
    sub_6D348((uint64_t)v116, (uint64_t)&v120);
    if (v121 == 1)
    {
      swift_unknownObjectRelease();
      sub_7358();
      v52();
      sub_7358();
      v53();
      sub_6DA80();
      goto LABEL_32;
    }
    swift_retain();
    sub_66B28();
    id v54 = [v41 indexPath];
    sub_8E9D0();

    sub_8EE20();
    swift_release();
    ((void (*)(uint64_t, uint64_t))v45)(v37, v111);
    sub_6D9B8(v103, 1, v104);
    if (!v48)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v102, v103, v104);
      swift_getKeyPath();
      sub_8F430();
      swift_release();
      sub_6D9B8(v100, 1, v110);
      uint64_t v3 = v106;
      if (v55)
      {
        sub_7358();
        v56();
        sub_639DC(v100, &qword_BDD70);
      }
      else
      {
        sub_6D9F4();
        v57();
        sub_66B28();
        long long v58 = (void *)sub_8EE10();
        swift_release();
        id v59 = [v58 collectionViewLayout];

        self;
        uint64_t v60 = (void *)swift_dynamicCastObjCClass();
        if (v60)
        {
          uint64_t v88 = v60;
          id v61 = [v60 _orthogonalScrollingSections];
          if (!v61) {
            goto LABEL_57;
          }
          long long v62 = v61;
          sub_8E990();

          sub_6DAE8();
          v63(v94, v93, v90);
          sub_56F8(v94, 0, 1, v90);
          sub_6D9B8(v94, 1, v90);
          Swift::String v45 = &selRef_hasSystemTelephonyOfAnyKind;
          if (v48) {
            goto LABEL_58;
          }
          BOOL v89 = sub_8E9A0(v95);
          sub_7358();
          v64();
          if (!v89)
          {
            sub_8F890();

            sub_7358();
            v72();
            sub_7358();
            v73();
            goto LABEL_31;
          }
          [v88 _orthogonalScrollingLayoutRectForSection:v95];
          sub_8F840();
          sub_8F5E0();
          uint64_t v65 = sub_8F830();

          sub_6DAE8();
          sub_7358();
          v66();
          sub_7358();
          v67();
          sub_7358();
          v68();
          if (v65)
          {
            swift_release();
            Swift::String v45 = &selRef_hasSystemTelephonyOfAnyKind;
            goto LABEL_31;
          }
        }
        else
        {

          sub_6DAE8();
          sub_7358();
          v69();
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v102, v104);
        }
      }
      Swift::String v45 = &selRef_hasSystemTelephonyOfAnyKind;
      goto LABEL_31;
    }
    sub_639DC(v103, (uint64_t *)&unk_BDD60);
    sub_6DA80();
LABEL_31:
    sub_8F840();
    swift_release();
    swift_unknownObjectRelease();
    sub_7358();
    v70();
    sub_7358();
    v71();
    sub_6DAF4();
    goto LABEL_32;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  sub_66B28();
  sub_8E9F0();
  sub_8EE20();
  swift_release();
  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
  v74(v37, v111);
  sub_6D9B8(v97, 1, v104);
  if (v48)
  {
    sub_639DC(v97, (uint64_t *)&unk_BDD60);
    uint64_t v77 = v96;
    uint64_t v75 = sub_6DB28();
    sub_56F8(v75, v76, 1, v110);
    return sub_639DC(v77, &qword_BDD70);
  }
  swift_getKeyPath();
  uint64_t v77 = v96;
  sub_8F430();
  swift_release();
  sub_7358();
  v78();
  uint64_t v79 = sub_6DB28();
  sub_6D9B8(v79, v80, v110);
  if (v81) {
    return sub_639DC(v77, &qword_BDD70);
  }
  sub_6D9F4();
  v83();
  objc_msgSend(objc_msgSend(a3, "container"), "contentSize");
  swift_unknownObjectRelease();
  sub_8F5E0();
  sub_8F880();
  sub_7358();
  v84();
  if (!v115) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v92, v110);
  }
  if (v115 >= 1)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v115; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        long long v86 = (void *)sub_8FDF0();
      }
      else
      {
        long long v86 = *(void **)(a1 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      id v87 = [v86 indexPath];
      sub_8E9D0();

      sub_6B690((uint64_t)v117);
      v74(v37, v111);
      sub_6D348((uint64_t)v117, (uint64_t)&v118);
      if ((v119 & 1) == 0) {
        sub_8F890();
      }
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v92, v110);
  }
  __break(1u);
LABEL_57:
  sub_56F8(v94, 1, 1, v90);
LABEL_58:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_694D0(void *a1)
{
  sub_66A58();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = Strong;
    if ([Strong respondsToSelector:"collectionViewDidScroll:"]) {
      [v4 collectionViewDidScroll:a1];
    }
    swift_unknownObjectRelease();
  }
  [a1 contentOffset];
  uint64_t v5 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY;
  *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY] = v6;
  id v7 = [v1 parentViewController];
  if (v7)
  {
    id v12 = v7;
    type metadata accessor for ShelfPageCollectionLayoutViewController();
    uint64_t v8 = (void *)swift_dynamicCastClass();
    if (v8)
    {
      id v9 = [v8 parentViewController];
      if (v9)
      {
        id v10 = v9;
        type metadata accessor for ShelfPageViewController();
        if (swift_dynamicCastClass())
        {
          sub_815DC(*(double *)&v1[v5] > 0.0, 1);
          uint64_t v11 = v12;
          id v12 = v10;
        }
        else
        {
          uint64_t v11 = v10;
        }
      }
    }
  }
}

void sub_69690(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t))
{
  sub_69784(a2);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = Strong;
    if ([Strong respondsToSelector:"collectionView:didEndDisplayingItemAtIndexPath:"])
    {
      Class isa = sub_8E9C0().super.isa;
      [v4 collectionView:a1 didEndDisplayingItemAtIndexPath:isa];
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_69784(void (*a1)(char *, uint64_t, uint64_t))
{
  uint64_t v50 = sub_8F5D0();
  uint64_t v52 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v51 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5664((uint64_t *)&unk_BDD60);
  __chkstk_darwin(v4 - 8);
  long long v56 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_5664((uint64_t *)&unk_BDFE0);
  uint64_t v55 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  CGRect v53 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v7 - 8);
  id v54 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v59 = (char *)&v44 - v10;
  uint64_t v11 = sub_8F5F0();
  uint64_t v57 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = sub_5664(&qword_BDD78);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_5664(&qword_BDD80);
  uint64_t v21 = *(void (***)(char *, char *, uint64_t))(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_66B28();
  sub_8EE00();
  swift_release();
  if (sub_5754((uint64_t)v19, 1, v20) == 1)
  {
    uint64_t v24 = &qword_BDD78;
    uint64_t v25 = (uint64_t)v19;
    return sub_639DC(v25, v24);
  }
  uint64_t v46 = v13;
  uint64_t v47 = v1;
  BOOL v48 = a1;
  uint64_t v49 = v16;
  uint64_t v26 = v58;
  v21[4](v23, v19, v20);
  swift_getKeyPath();
  uint64_t v27 = (uint64_t)v59;
  sub_8F430();
  swift_release();
  uint64_t v28 = (char *)v21;
  if (sub_5754(v27, 1, v11) == 1)
  {
    ((void (*)(char *, uint64_t))v21[1])(v23, v20);
    uint64_t v24 = &qword_BDD70;
    uint64_t v25 = v27;
    return sub_639DC(v25, v24);
  }
  uint64_t v44 = v20;
  Swift::String v45 = v23;
  uint64_t v30 = v57;
  uint64_t v31 = v49;
  uint64_t v32 = v27;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
  v33(v49, v32, v11);
  swift_retain();
  sub_66B28();
  uint64_t v34 = (uint64_t)v56;
  sub_8EE20();
  swift_release();
  if (sub_5754(v34, 1, v26) == 1)
  {
    sub_639DC(v34, (uint64_t *)&unk_BDD60);
  }
  else
  {
    BOOL v48 = v33;
    id v59 = v28;
    uint64_t v35 = v55;
    uint64_t v36 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v53, v34, v26);
    swift_getKeyPath();
    uint64_t v37 = v11;
    uint64_t v38 = (uint64_t)v54;
    sub_8F430();
    swift_release();
    if (sub_5754(v38, 1, v11) == 1)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v26);
      sub_639DC(v38, &qword_BDD70);
      uint64_t v30 = v57;
    }
    else
    {
      uint64_t v39 = v46;
      v48(v46, v38, v11);
      uint64_t v40 = v51;
      sub_8F5E0();
      uint64_t v41 = sub_8F830();
      uint64_t v42 = v40;
      uint64_t v11 = v37;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v50);
      uint64_t v30 = v57;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v11);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v26);
      if (v41) {
        swift_release();
      }
    }
    uint64_t v31 = v49;
    uint64_t v28 = v59;
  }
  uint64_t v43 = v44;
  sub_8F860();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v11);
  return (*((uint64_t (**)(char *, uint64_t))v28 + 1))(v45, v43);
}

void sub_69EFC(uint64_t a1, uint64_t a2)
{
}

void sub_69F08(uint64_t a1, int a2)
{
  uint64_t v4 = v2;
  int v76 = a2;
  sub_5664(&qword_BDDA8);
  sub_7084();
  uint64_t v79 = v7;
  uint64_t v80 = v6;
  __chkstk_darwin(v6);
  sub_22620();
  uint64_t v78 = v8;
  uint64_t v9 = sub_5664((uint64_t *)&unk_BDD60);
  uint64_t v10 = sub_3C870(v9);
  __chkstk_darwin(v10);
  sub_B7F0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_5664((uint64_t *)&unk_BDFE0);
  sub_7084();
  uint64_t v77 = v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  sub_6DAC0();
  uint64_t v81 = v20;
  uint64_t v21 = sub_5664(&qword_BDD78);
  uint64_t v22 = sub_3C870(v21);
  __chkstk_darwin(v22);
  sub_6DA90();
  uint64_t v23 = sub_5664(&qword_BDD80);
  sub_7084();
  __chkstk_darwin(v24);
  sub_B7F0();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = *(void **)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  uint64_t v83 = a1;
  Class isa = sub_8E9C0().super.isa;
  long long v82 = v28;
  id v84 = [v28 cellForItemAtIndexPath:isa];

  if (!v84) {
    goto LABEL_35;
  }
  swift_getObjectType();
  uint64_t v30 = sub_60920((uint64_t)v84);
  if (v30)
  {
    uint64_t v32 = v30;
    uint64_t v74 = v31;
    uint64_t v75 = v27;
    sub_6A710(v3);
    uint64_t v33 = sub_6DB28();
    sub_6D9B8(v33, v34, v23);
    if (v38)
    {

      sub_639DC(v3, &qword_BDD78);
      goto LABEL_35;
    }
    uint64_t v73 = v23;
    sub_6D9F4();
    v37();
    sub_66B28();
    sub_8EE20();
    swift_release();
    sub_6D9B8(v13, 1, v14);
    if (v38)
    {
      sub_639DC(v13, (uint64_t *)&unk_BDD60);
      goto LABEL_17;
    }
    uint64_t v39 = v77;
    uint64_t v40 = v81;
    sub_6D9F4();
    v41();
    swift_getObjectType();
    uint64_t v42 = sub_60920(v32);
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v14);
      goto LABEL_17;
    }
    uint64_t v70 = v42;
    uint64_t v71 = v43;
    uint64_t v72 = v39;
    uint64_t KeyPath = swift_getKeyPath();
    id v45 = v84;
    sub_8F430();
    swift_release();
    sub_6DA34();
    swift_bridgeObjectRelease();
    if (KeyPath)
    {
      if (KeyPath != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v60 = sub_6D9D0();
        v61(v60);
        id v59 = v45;
        goto LABEL_31;
      }
      sub_6DB00();
    }
    uint64_t KeyPath = sub_8FF40();
    swift_bridgeObjectRelease();
    uint64_t v57 = sub_6D9D0();
    v58(v57);
    id v59 = v45;
    if ((KeyPath & 1) == 0)
    {
      uint64_t KeyPath = swift_getKeyPath();
      sub_8F430();
      swift_release();
      sub_6DA34();
      swift_bridgeObjectRelease();
      if (KeyPath)
      {
        if (KeyPath == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t KeyPath = *(void *)(v72 + 8);
          ((void (*)(char *, uint64_t))KeyPath)(v18, v14);
LABEL_32:
          uint64_t v63 = v83;
          uint64_t v64 = v70;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v85 = v64;
          if ((*(uint64_t (**)(uint64_t))(v71 + 8))(ObjectType))
          {

            ((void (*)(uint64_t, uint64_t))KeyPath)(v81, v14);
            goto LABEL_34;
          }
          sub_6A8EC(v82, v63);

          ((void (*)(uint64_t, uint64_t))KeyPath)(v81, v14);
          goto LABEL_17;
        }
        sub_6DA68();
      }
      char v68 = sub_8FF40();
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_6DB14();
      ((void (*)(uint64_t))KeyPath)(v69);
      if (v68) {
        goto LABEL_32;
      }
      ((void (*)(uint64_t, uint64_t))KeyPath)(v81, v14);

LABEL_17:
      uint64_t v46 = swift_getObjectType();
      uint64_t v47 = (void *)v32;
      uint64_t v48 = v78;
      uint64_t v49 = v75;
      sub_8EF20();
      (*(void (**)(uint64_t, uint64_t, void, uint64_t))(v74 + 16))(v49, v48, *(void *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_objectGraph), v46);
      sub_7358();
      v50();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v52 = Strong;
        if ([Strong respondsToSelector:"collectionView:didSelectItemAtIndexPath:"])
        {
          Class v53 = sub_8E9C0().super.isa;
          [v52 collectionView:v82 didSelectItemAtIndexPath:v53];
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      type metadata accessor for ListItemComponent();
      if (!swift_dynamicCastClass())
      {

        goto LABEL_34;
      }
      if ([v47 isSelected])
      {
        Class v54 = sub_8E9C0().super.isa;
        [v82 deselectItemAtIndexPath:v54 animated:1];

LABEL_34:
        uint64_t v66 = sub_6DB34();
        v67(v66);
        goto LABEL_35;
      }
      uint64_t v55 = sub_6DB34();
      v56(v55);

LABEL_35:
      sub_3C808();
      return;
    }
LABEL_31:
    uint64_t v62 = sub_6DB14();
    ((void (*)(uint64_t))KeyPath)(v62);
    goto LABEL_32;
  }
  sub_3C808();
}

uint64_t sub_6A710@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_5664(&qword_BDD78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = __src - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  sub_66B28();
  sub_8EE00();
  swift_release();
  uint64_t v5 = sub_5664(&qword_BDD80);
  if (sub_5754((uint64_t)v4, 1, v5) == 1)
  {
    sub_639DC((uint64_t)v4, &qword_BDD78);
    memset(__src, 0, sizeof(__src));
    goto LABEL_7;
  }
  sub_8F450();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_5664(&qword_BDDA0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    memset(__src, 0, sizeof(__src));
    goto LABEL_7;
  }
  if (!*(void *)__src)
  {
LABEL_7:
    sub_639DC((uint64_t)__src, &qword_BAB18);
    uint64_t v6 = a1;
    uint64_t v7 = 1;
    return sub_56F8(v6, v7, 1, v5);
  }
  memcpy(__dst, __src, sizeof(__dst));
  sub_18294((uint64_t)&__dst[16], (uint64_t)__src);
  sub_8F460();
  sub_4911C((uint64_t)__dst);
  uint64_t v6 = a1;
  uint64_t v7 = 0;
  return sub_56F8(v6, v7, 1, v5);
}

uint64_t sub_6A8EC(void *a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v4 = sub_5664(&qword_BDDB0);
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F390();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_5664((uint64_t *)&unk_BDD60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_5664((uint64_t *)&unk_BDFE0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_66B28();
  sub_8EE20();
  swift_release();
  if (sub_5754((uint64_t)v10, 1, v11) == 1) {
    return sub_639DC((uint64_t)v10, (uint64_t *)&unk_BDD60);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  int v16 = v46;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  char v17 = sub_8FF40();
  swift_bridgeObjectRelease();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_5664((uint64_t *)&unk_BB5E0);
  v37[1] = *(void *)(*(void *)(sub_8F3E0() - 8) + 72);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_91D10;
  v37[2] = v18;
  uint64_t v45 = type metadata accessor for ShelfPageCollectionViewController();
  v44[0] = v2;
  id v38 = v2;
  id v19 = (id)AMSLogKey();
  uint64_t v39 = v4;
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_8F9D0();
    v37[0] = v22;

    sub_8F380();
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    sub_8F370(v47);
    sub_820C(v44, v45);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v42[0] = DynamicType;
    sub_8F360();
    sub_639DC((uint64_t)v42, &qword_BC780);
    v48._countAndFlagsBits = 5972026;
    v48._object = (void *)0xE300000000000000;
    sub_8F370(v48);
    uint64_t MetatypeMetadata = &type metadata for String;
    v42[0] = v21;
    v42[1] = v37[0];
    sub_8F360();
    sub_639DC((uint64_t)v42, &qword_BC780);
    v24._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    sub_8F370(v49);
    sub_820C(v44, v45);
    uint64_t v25 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v42[0] = v25;
    sub_8F360();
    sub_639DC((uint64_t)v42, &qword_BC780);
    v24._countAndFlagsBits = 58;
  }
  v24._object = (void *)0xE100000000000000;
  sub_8F370(v24);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v44);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  sub_5664(&qword_BDDB8);
  uint64_t v26 = swift_allocBox();
  uint64_t v28 = v27;
  uint64_t v29 = sub_8EA10();
  sub_56F8(v28, 1, 1, v29);
  uint64_t v30 = v38;
  uint64_t v31 = sub_8EF10();
  __chkstk_darwin(v31);
  uint64_t v32 = v41;
  v37[-6] = v30;
  v37[-5] = v32;
  v37[-4] = a2;
  v37[-3] = v14;
  v37[-2] = v28;
  uint64_t v33 = v39;
  sub_8F4E0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v33);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v26;
  void v34[3] = v32;
  void v34[4] = v30;
  id v35 = v30;
  swift_retain();
  id v36 = v32;
  sub_6CB64((uint64_t)sub_6D420, (uint64_t)v34);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_6AF84(void *a1, uint64_t a2)
{
  uint64_t v6 = sub_8EA10();
  sub_7084();
  uint64_t v54 = v7;
  __chkstk_darwin(v8);
  sub_4EBA4();
  uint64_t v52 = v9;
  __chkstk_darwin(v10);
  sub_6DAC0();
  uint64_t v53 = v11;
  sub_5664((uint64_t *)&unk_BDD90);
  sub_7084();
  __chkstk_darwin(v12);
  sub_3C938();
  uint64_t v13 = sub_5664((uint64_t *)&unk_BDD60);
  uint64_t v14 = sub_3C870(v13);
  __chkstk_darwin(v14);
  sub_6DA90();
  uint64_t v15 = sub_5664((uint64_t *)&unk_BDFE0);
  sub_7084();
  __chkstk_darwin(v16);
  sub_6DAA8();
  uint64_t v17 = sub_5664(&qword_BDD78);
  uint64_t v18 = sub_3C870(v17);
  __chkstk_darwin(v18);
  sub_B7F0();
  uint64_t v21 = v20 - v19;
  uint64_t v58 = sub_5664(&qword_BDD80);
  sub_7084();
  __chkstk_darwin(v22);
  sub_22620();
  uint64_t v55 = v23;
  Class isa = sub_8E9C0().super.isa;
  uint64_t v57 = a1;
  id v25 = [a1 cellForItemAtIndexPath:isa];

  if (v25)
  {
    swift_getObjectType();
    if (sub_60920((uint64_t)v25))
    {
      uint64_t v51 = v26;
      sub_6A710(v21);
      sub_6D9B8(v21, 1, v58);
      if (v30)
      {

        sub_639DC(v21, &qword_BDD78);
      }
      else
      {
        sub_6D9F4();
        v27();
        sub_66B28();
        sub_8EE20();
        swift_release();
        uint64_t v28 = sub_6DB28();
        sub_6D9B8(v28, v29, v15);
        if (v30)
        {
          sub_639DC(v2, (uint64_t *)&unk_BDD60);
          goto LABEL_17;
        }
        sub_6D9F4();
        v31();
        int KeyPath = swift_getKeyPath();
        sub_8F430();
        swift_release();
        sub_6DA34();
        swift_bridgeObjectRelease();
        if (!KeyPath)
        {
          swift_bridgeObjectRelease();
          uint64_t v33 = sub_6DA50();
          v34(v33);
          goto LABEL_17;
        }
        if (KeyPath == 1) {
          sub_6DB00();
        }
        else {
          sub_6DA68();
        }
        char v35 = sub_8FF40();
        swift_bridgeObjectRelease();
        uint64_t v36 = sub_6DA50();
        v37(v36);
        if (v35)
        {
LABEL_17:
          type metadata accessor for ListItemComponent();
          uint64_t v38 = swift_dynamicCastClass();
          uint64_t ObjectType = swift_getObjectType();
          sub_8EF30();
          char v40 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v51 + 24))(v55, v3, *(void *)(v56 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_objectGraph), ObjectType);
          sub_7358();
          v41();
          uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
          if (v38)
          {
            uint64_t v43 = v53;
            v42(v53, a2, v6);
            uint64_t v44 = v57;
            if ((v40 & 1) == 0)
            {
              uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
              if (Strong)
              {
                unsigned __int8 v46 = Strong;
                if (([Strong respondsToSelector:"collectionView:shouldHighlightItemAtIndexPath:"] & 1) == 0)
                {
LABEL_21:

                  swift_unknownObjectRelease();
LABEL_29:
                  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v43, v6);
                  sub_7358();
                  v50();
                  goto LABEL_7;
                }
LABEL_25:
                Class v48 = sub_8E9C0().super.isa;
                [v46 collectionView:v44 shouldHighlightItemAtIndexPath:v48];

                swift_unknownObjectRelease();
                goto LABEL_29;
              }
            }
          }
          else
          {
            uint64_t v43 = v52;
            v42(v52, a2, v6);
            uint64_t v44 = v57;
            if ((v40 & 1) == 0)
            {
              Swift::String v47 = (void *)swift_unknownObjectWeakLoadStrong();
              if (v47)
              {
                unsigned __int8 v46 = v47;
                if (([v47 respondsToSelector:"collectionView:shouldHighlightItemAtIndexPath:"] & 1) == 0)goto LABEL_21; {
                goto LABEL_25;
                }
              }
            }
          }

          goto LABEL_29;
        }
        sub_7358();
        v49();
      }
    }
    else
    {
    }
  }
LABEL_7:
  sub_3C808();
}

uint64_t sub_6B648(void *a1)
{
  return sub_8F920();
}

void sub_6B690(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  Class isa = sub_8E9C0().super.isa;
  id v5 = [v3 cellForItemAtIndexPath:isa];

  if (v5)
  {
    [v5 frame];
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v5 == 0;
}

uint64_t sub_6B754(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v59 = a3;
  uint64_t v53 = a2;
  uint64_t v6 = sub_5664((uint64_t *)&unk_BDD60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_5664((uint64_t *)&unk_BDFE0);
  uint64_t v9 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v64 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8EA10();
  uint64_t v49 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v47 - v16;
  *(void *)&double v20 = __chkstk_darwin(v18).n128_u64[0];
  uint64_t v22 = (char *)&v47 - v21;
  uint64_t v61 = a1;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_shelfBehavior + 1) & 1) != 0
    || (*(unsigned char *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_shelfBehavior) & 1) != 0)
  {
    swift_getKeyPath();
    sub_8F430();
    swift_release();
    int v40 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v41 = sub_8FF40();
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0) {
        goto LABEL_36;
      }
    }
    uint64_t result = (uint64_t)[v53 numberOfItemsInSection:sub_8EA00()];
    if (result < 0)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v42 = result;
    if (result)
    {
      uint64_t v43 = 0;
      uint64_t v44 = (void (**)(char *, uint64_t))(v49 + 8);
      do
      {
        sub_8EA00();
        sub_8E9E0();
        sub_6BF68(v53, (uint64_t)v13, 0);
        (*v44)(v13, v11);
        ++v43;
      }
      while (v42 != v43);
    }
LABEL_36:
    uint64_t v45 = v48;
    sub_639DC(v48, &qword_BDDB8);
    uint64_t v46 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v45, v59, v11);
    sub_56F8(v45, 0, 1, v11);
    return sub_6BF68(v53, v46, 1);
  }
  uint64_t v52 = v19;
  uint64_t result = (uint64_t)objc_msgSend(v53, "numberOfSections", v20);
  if ((result & 0x8000000000000000) == 0)
  {
    Swift::String v24 = v17;
    uint64_t v25 = v57;
    if (result)
    {
      uint64_t v26 = 0;
      uint64_t v55 = v8;
      uint64_t v56 = (void (**)(char *, char *, uint64_t))(v9 + 32);
      uint64_t v50 = result;
      uint64_t v51 = (void (**)(char *, char *, uint64_t))(v49 + 16);
      uint64_t v62 = (void (**)(char *, uint64_t))(v49 + 8);
      uint64_t v54 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v60 = v22;
      while (1)
      {
        if (v26 == result) {
          goto LABEL_38;
        }
        uint64_t result = (uint64_t)[v53 numberOfItemsInSection:v26];
        if (result < 0) {
          break;
        }
        uint64_t v27 = result;
        if (result)
        {
          uint64_t v28 = 0;
          uint64_t v58 = result;
          do
          {
            if (v27 == v28)
            {
              __break(1u);
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
            uint64_t v29 = v26;
            sub_8E9E0();
            sub_66B28();
            sub_8EE20();
            swift_release();
            if (sub_5754((uint64_t)v8, 1, v25) == 1)
            {
              (*v62)(v22, v11);
              sub_639DC((uint64_t)v8, (uint64_t *)&unk_BDD60);
              break;
            }
            (*v56)(v64, v8, v25);
            swift_getKeyPath();
            sub_8F430();
            swift_release();
            int v30 = v63;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v30 != 1 && v30 != 2)
            {
              swift_bridgeObjectRelease();
LABEL_26:
              (*v54)(v64, v25);
              (*v62)(v22, v11);
              uint64_t v8 = v55;
              break;
            }
            char v31 = sub_8FF40();
            swift_bridgeObjectRelease();
            if (v31) {
              goto LABEL_26;
            }
            swift_getKeyPath();
            sub_8F430();
            swift_release();
            int v32 = v63;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v32 == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v33 = *v51;
              (*v51)(v24, v22, v11);
              uint64_t v34 = v24;
              char v35 = v52;
              v33(v52, (char *)v59, v11);
            }
            else
            {
              char v36 = sub_8FF40();
              swift_bridgeObjectRelease();
              uint64_t v37 = *v51;
              (*v51)(v24, v60, v11);
              uint64_t v34 = v24;
              char v35 = v52;
              v37(v52, (char *)v59, v11);
              if ((v36 & 1) == 0)
              {
                uint64_t v39 = *v62;
                (*v62)(v35, v11);
                v39(v34, v11);
                Swift::String v24 = v34;
LABEL_21:
                uint64_t v25 = v57;
                uint64_t v22 = v60;
                goto LABEL_22;
              }
            }
            sub_6D4BC();
            char v38 = sub_8F990();
            uint64_t v39 = *v62;
            (*v62)(v35, v11);
            v39(v34, v11);
            Swift::String v24 = v34;
            if (v38) {
              goto LABEL_21;
            }
            uint64_t v22 = v60;
            sub_6BF68(v53, (uint64_t)v60, 0);
            uint64_t v25 = v57;
LABEL_22:
            ++v28;
            (*v54)(v64, v25);
            uint64_t result = ((uint64_t (*)(char *, uint64_t))v39)(v22, v11);
            uint64_t v27 = v58;
            uint64_t v8 = v55;
            uint64_t v26 = v29;
          }
          while (v58 != v28);
        }
        ++v26;
        uint64_t result = v50;
        if (v26 == v50) {
          goto LABEL_36;
        }
      }
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    goto LABEL_36;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_6BF68(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v57 = a3;
  uint64_t v7 = sub_8F390();
  __chkstk_darwin(v7 - 8);
  uint64_t v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_5664(&qword_BDDB0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_5664(&qword_BDD78);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_5664(&qword_BDD80);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v56 = a1;
  uint64_t v59 = a2;
  sub_6A710((uint64_t)v15);
  if (sub_5754((uint64_t)v15, 1, v16) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    sub_8EF10();
    char v28 = sub_6CD3C((uint64_t)v19, v57 & 1, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((v28 & 1) == 0) {
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    uint64_t v29 = (uint64_t)v4;
    uint64_t v55 = v16;
    Class isa = sub_8E9C0().super.isa;
    id v31 = [v56 cellForItemAtIndexPath:isa];

    if (v31)
    {
      swift_getObjectType();
      uint64_t v32 = sub_60920((uint64_t)v31);
      if (v32)
      {
        uint64_t v34 = (void *)v32;
        uint64_t v35 = v33;
        uint64_t ObjectType = swift_getObjectType();
        id v63 = v34;
        (*(void (**)(void, uint64_t, uint64_t))(v35 + 16))(v57 & 1, ObjectType, v35);
        id v37 = v63;
        sub_6D50C(v37, v29, ObjectType, v35);

        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v55);
      }
    }
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
    uint64_t v65 = (void *)type metadata accessor for ShelfPageCollectionViewController();
    id v63 = v4;
    id v42 = v4;
    id v43 = (id)AMSLogKey();
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v45 = sub_8F9D0();
      uint64_t v46 = v19;
      uint64_t v48 = v47;

      sub_8F380();
      v69._countAndFlagsBits = 0;
      v69._object = (void *)0xE000000000000000;
      sub_8F370(v69);
      sub_820C(&v63, (uint64_t)v65);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v60 = DynamicType;
      sub_8F360();
      sub_639DC((uint64_t)&v60, &qword_BC780);
      v70._countAndFlagsBits = 5972026;
      v70._object = (void *)0xE300000000000000;
      sub_8F370(v70);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v60 = v45;
      uint64_t v61 = v48;
      uint64_t v19 = v46;
      sub_8F360();
      sub_639DC((uint64_t)&v60, &qword_BC780);
      v50._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v71._countAndFlagsBits = 0;
      v71._object = (void *)0xE000000000000000;
      sub_8F370(v71);
      sub_820C(&v63, (uint64_t)v65);
      uint64_t v51 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v60 = v51;
      sub_8F360();
      sub_639DC((uint64_t)&v60, &qword_BC780);
      v50._countAndFlagsBits = 58;
    }
    v50._object = (void *)0xE100000000000000;
    sub_8F370(v50);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)&v63);
    uint64_t v65 = &type metadata for String;
    id v63 = (id)0xD00000000000004ELL;
    unint64_t v64 = 0x800000000009D710;
    sub_8F3B0();
    sub_639DC((uint64_t)&v63, &qword_BC780);
    uint64_t v52 = (void *)sub_8EA10();
    uint64_t v65 = v52;
    uint64_t v53 = sub_8374((uint64_t *)&v63);
    (*(void (**)(uint64_t *, uint64_t, void *))(*((void *)v52 - 1) + 16))(v53, v59, v52);
    sub_8F3B0();
    sub_639DC((uint64_t)&v63, &qword_BC780);
    sub_43634();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v55);
  }
  sub_639DC((uint64_t)v15, &qword_BDD78);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  uint64_t v65 = (void *)type metadata accessor for ShelfPageCollectionViewController();
  id v63 = v4;
  id v20 = v4;
  id v21 = (id)AMSLogKey();
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_8F9D0();
    uint64_t v25 = v24;

    sub_8F380();
    v66._countAndFlagsBits = 0;
    v66._object = (void *)0xE000000000000000;
    sub_8F370(v66);
    sub_820C(&v63, (uint64_t)v65);
    uint64_t v26 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v60 = v26;
    sub_8F360();
    sub_639DC((uint64_t)&v60, &qword_BC780);
    v67._countAndFlagsBits = 5972026;
    v67._object = (void *)0xE300000000000000;
    sub_8F370(v67);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v60 = v23;
    uint64_t v61 = v25;
    sub_8F360();
    sub_639DC((uint64_t)&v60, &qword_BC780);
    v27._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v68._countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    sub_8F370(v68);
    sub_820C(&v63, (uint64_t)v65);
    uint64_t v39 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v60 = v39;
    sub_8F360();
    sub_639DC((uint64_t)&v60, &qword_BC780);
    v27._countAndFlagsBits = 58;
  }
  v27._object = (void *)0xE100000000000000;
  sub_8F370(v27);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)&v63);
  uint64_t v65 = &type metadata for String;
  id v63 = (id)0xD000000000000048;
  unint64_t v64 = 0x800000000009D6C0;
  sub_8F3B0();
  sub_639DC((uint64_t)&v63, &qword_BC780);
  int v40 = (void *)sub_8EA10();
  uint64_t v65 = v40;
  char v41 = sub_8374((uint64_t *)&v63);
  (*(void (**)(uint64_t *, uint64_t, void *))(*((void *)v40 - 1) + 16))(v41, v59, v40);
  sub_8F3B0();
  sub_639DC((uint64_t)&v63, &qword_BC780);
  sub_43634();
  return swift_bridgeObjectRelease();
}

uint64_t sub_6C844(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_5664(&qword_BDDB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_8EA10();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_projectBox();
  swift_beginAccess();
  sub_EED0(v12, (uint64_t)v7, &qword_BDDB8);
  if (sub_5754((uint64_t)v7, 1, v8) == 1) {
    return sub_639DC((uint64_t)v7, &qword_BDDB8);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  uint64_t v14 = *(void (**)(void))(a3
                         + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator);
  sub_18224((uint64_t)v14);
  BOOL v15 = sub_6CA50((uint64_t)v11, v14);
  sub_18234((uint64_t)v14);
  if (!v15)
  {
    Class isa = sub_8E9C0().super.isa;
    [a2 scrollToItemAtIndexPath:isa atScrollPosition:2 animated:1];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

BOOL sub_6CA50(uint64_t a1, void (*a2)(void))
{
  uint64_t v7 = v2;
  Class isa = sub_8E9C0().super.isa;
  id v10 = [v2 layoutAttributesForItemAtIndexPath:isa];

  if (!v10) {
    return 0;
  }
  [v10 frame];
  sub_6DB48();
  objc_msgSend(v7, "convertRect:toView:", objc_msgSend(v7, "superview"), v3, v4, v5, v6);
  sub_6DB48();
  if (a2) {
    a2();
  }
  else {
    [v7 bounds];
  }
  v16.origin.x = v3;
  v16.origin.y = v4;
  v16.size.width = v5;
  v16.size.height = v6;
  return CGRectContainsRect(*(CGRect *)&v11, v16);
}

void sub_6CB64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [*(id *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) collectionViewLayout];
  [v6 invalidateLayout];

  uint64_t v7 = self;
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  CGRect v16 = sub_6D42C;
  uint64_t v17 = v8;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_3A478;
  BOOL v15 = &unk_B1AA8;
  uint64_t v9 = _Block_copy(&v12);
  swift_release();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  CGRect v16 = sub_6D48C;
  uint64_t v17 = v10;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_8922C;
  BOOL v15 = &unk_B1AF8;
  uint64_t v11 = _Block_copy(&v12);
  sub_18224(a1);
  swift_release();
  [v7 animateWithDuration:134 delay:v9 options:v11 animations:0.2 completion:0.0];
  _Block_release(v11);
  _Block_release(v9);
}

uint64_t sub_6CD3C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_5664((uint64_t *)&unk_BDDD0);
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  __chkstk_darwin(v5);
  uint64_t v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F390();
  __chkstk_darwin(v7 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_91D00;
  uint64_t v25 = v8;
  uint64_t v32 = (void *)type metadata accessor for ShelfPageCollectionViewController();
  uint64_t v30 = (uint64_t)v3;
  id v9 = v3;
  id v10 = (id)AMSLogKey();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_8F9D0();
    unint64_t v14 = v13;

    sub_8F380();
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    sub_8F370(v37);
    sub_820C(&v30, (uint64_t)v32);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v34 = DynamicType;
    sub_8F360();
    sub_639DC((uint64_t)&v34, &qword_BC780);
    v38._countAndFlagsBits = 5972026;
    v38._object = (void *)0xE300000000000000;
    sub_8F370(v38);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v34 = v12;
    unint64_t v35 = v14;
    sub_8F360();
    sub_639DC((uint64_t)&v34, &qword_BC780);
    v16._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    sub_8F370(v39);
    sub_820C(&v30, (uint64_t)v32);
    uint64_t v17 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v34 = v17;
    sub_8F360();
    sub_639DC((uint64_t)&v34, &qword_BC780);
    v16._countAndFlagsBits = 58;
  }
  v16._object = (void *)0xE100000000000000;
  sub_8F370(v16);
  sub_8F3A0();
  sub_616C((uint64_t)&v30);
  uint64_t v32 = &type metadata for String;
  uint64_t v30 = 0x676E696C67676F54;
  unint64_t v31 = 0xE900000000000020;
  sub_8F3B0();
  sub_639DC((uint64_t)&v30, &qword_BC780);
  sub_5664(&qword_BDD80);
  sub_8F440();
  uint64_t v34 = sub_8FD70();
  unint64_t v35 = v18;
  sub_1C464((uint64_t)&v30);
  v40._countAndFlagsBits = 32;
  v40._object = (void *)0xE100000000000000;
  sub_8FA10(v40);
  int v19 = a2 & 1;
  if (a2) {
    uint64_t v20 = 28271;
  }
  else {
    uint64_t v20 = 6710895;
  }
  if (a2) {
    id v21 = (void *)0xE200000000000000;
  }
  else {
    id v21 = (void *)0xE300000000000000;
  }
  type metadata accessor for Log();
  v41._countAndFlagsBits = v20;
  v41._object = v21;
  sub_8FA10(v41);
  swift_bridgeObjectRelease();
  uint64_t v32 = &type metadata for String;
  uint64_t v30 = v34;
  unint64_t v31 = v35;
  sub_8F3B0();
  sub_639DC((uint64_t)&v30, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_8F440();
  uint64_t v22 = v26;
  sub_8F8F0();
  sub_5664(&qword_BDDB0);
  sub_1258C();
  sub_8F4D0();
  if (!v19)
  {
    if (v34 != 2)
    {
      char v23 = 2;
      goto LABEL_16;
    }
LABEL_14:
    (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v29);
    return 0;
  }
  if (!(_BYTE)v34) {
    goto LABEL_14;
  }
  char v23 = 0;
LABEL_16:
  LOBYTE(v34) = v23;
  uint64_t v32 = &type metadata for CellState;
  unint64_t v33 = sub_6D868();
  LOBYTE(v30) = v23;
  sub_8F4C0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v29);
  sub_616C((uint64_t)&v30);
  return 1;
}

void sub_6D218()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView));

    [v2 layoutIfNeeded];
  }
}

void sub_6D290(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8F9A0();
  swift_bridgeObjectRelease();
  [a3 setAccessibilityIdentifier:v4];
}

uint64_t sub_6D2F4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_6D32C(uint64_t a1)
{
}

uint64_t sub_6D334()
{
  return sub_6DA10(v0, 24);
}

void sub_6D340(uint64_t a1)
{
}

uint64_t sub_6D348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BDD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6D3B4()
{
  return sub_6B754(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_6D3D8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_6D420()
{
  return sub_6C844(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_6D42C()
{
}

uint64_t sub_6D434(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_6D444()
{
  return swift_release();
}

uint64_t sub_6D44C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_6D48C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

unint64_t sub_6D4BC()
{
  unint64_t result = qword_BDDC0;
  if (!qword_BDDC0)
  {
    sub_8EA10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDDC0);
  }
  return result;
}

void sub_6D50C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  [a1 setNeedsLayout];
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a4;
  unint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_6D7E4;
  *(void *)(v8 + 24) = v7;
  v17[4] = sub_6D800;
  v17[5] = v8;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_6622C;
  void v17[3] = &unk_B1B70;
  id v9 = _Block_copy(v17);
  id v10 = a1;
  swift_retain();
  swift_release();
  [v6 performWithoutAnimation:v9];
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    id v11 = [v10 contentView];
    id v12 = [v11 subviews];

    sub_6D828();
    unint64_t v8 = sub_8FA70();

    if (!(v8 >> 62))
    {
      uint64_t v13 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
      if (v13) {
        goto LABEL_4;
      }
LABEL_10:
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_8FEB0();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_10;
  }
LABEL_4:
  if (v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v15 = (id)sub_8FDF0();
      }
      else {
        id v15 = *(id *)(v8 + 8 * i + 32);
      }
      Swift::String v16 = v15;
      [v6 transitionWithView:v15 duration:5243014 options:0 animations:0 completion:0.2];
    }
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_6D7AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_6D7E4()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

uint64_t sub_6D7F4()
{
  return sub_6DA10(v0, 32);
}

uint64_t sub_6D800()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_6D828()
{
  unint64_t result = qword_BDDC8;
  if (!qword_BDDC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BDDC8);
  }
  return result;
}

unint64_t sub_6D868()
{
  unint64_t result = qword_BDDE0;
  if (!qword_BDDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDDE0);
  }
  return result;
}

uint64_t sub_6D8B4(uint64_t a1, objc_class *a2, void *a3)
{
  return sub_67400(a1, a2, a3);
}

uint64_t sub_6D8BC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_6D8F4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_6D934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_67968(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
}

uint64_t sub_6D944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_67D40(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_6D954()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_6D9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5754(a1, a2, a3);
}

uint64_t sub_6D9D0()
{
  return v0;
}

void sub_6DA00()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_6DA10(uint64_t a1, uint64_t a2)
{
  return _swift_deallocObject(a1, a2, 7);
}

uint64_t sub_6DA18()
{
  return swift_weakInit();
}

uint64_t sub_6DA34()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_6DA50()
{
  return v0;
}

uint64_t sub_6DA68()
{
  return 0x656C7069746C756DLL;
}

void sub_6DACC(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_6DAD8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_6DB00()
{
  return 0x656C676E6973;
}

uint64_t sub_6DB14()
{
  return v0;
}

uint64_t sub_6DB28()
{
  return v0;
}

uint64_t sub_6DB34()
{
  return *(void *)(v0 - 216);
}

void sub_6DB48()
{
}

void *sub_6DB68(uint64_t a1, long long *a2, uint64_t a3)
{
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v3[9] = a1;
  v3[10] = a3;
  sub_573C(a2, (uint64_t)(v3 + 4));
  return v3;
}

id sub_6DBBC()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  id v1 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  return sub_70174((uint64_t)sub_7036C, v0);
}

uint64_t sub_6DC28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5664((uint64_t *)&unk_BDD60);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_5664((uint64_t *)&unk_BDFE0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_8EA10();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  sub_8E9F0();
  swift_retain();
  sub_8EE20();
  swift_release();
  if (sub_5754((uint64_t)v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    swift_getKeyPath();
    sub_8F430();
    swift_release();
    unsigned int v14 = BYTE1(v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14 > 2) {
      uint64_t v15 = sub_6DFA4();
    }
    else {
      uint64_t v15 = (uint64_t)sub_6E1E0((uint64_t)v9, (uint64_t)v13, a2);
    }
    uint64_t v16 = v15;
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v16;
  }
  sub_EF88((uint64_t)v5, (uint64_t *)&unk_BDD60);
  unint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_8FDE0(39);
  swift_bridgeObjectRelease();
  unint64_t v19 = 0xD000000000000025;
  unint64_t v20 = 0x800000000009DA70;
  sub_70374();
  v21._countAndFlagsBits = sub_8FF10();
  sub_8FA10(v21);
  swift_bridgeObjectRelease();
  uint64_t result = sub_8FEA0();
  __break(1u);
  return result;
}

uint64_t sub_6DFA4()
{
  uint64_t v29 = sub_8F110();
  sub_7084();
  uint64_t v1 = v0;
  __chkstk_darwin(v2);
  sub_B7F0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_8F120();
  sub_7084();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_B7F0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_8F100();
  sub_7084();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_B7F0();
  uint64_t v19 = v18 - v17;
  uint64_t v28 = sub_8F170();
  sub_7084();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_B7F0();
  uint64_t v25 = v24 - v23;
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v19, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v13);
  sub_8F130();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v12, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v6);
  sub_8F150();
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v5, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v29);
  sub_8F140();
  sub_F040(0, &qword_BDF58);
  uint64_t v26 = sub_8FC60();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v28);
  return v26;
}

void *sub_6E1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_5664((uint64_t *)&unk_BDFE0);
  sub_8F440();
  sub_6FDEC((uint64_t)&v17, (uint64_t)v12);
  sub_1C464((uint64_t)&v17);
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  uint64_t v5 = v13;
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  long long v17 = v15;
  v18[0] = v16[0];
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v16 + 9);
  uint64_t v6 = sub_6E3C4(v5, (uint64_t)&v17, a3);
  swift_bridgeObjectRelease();
  sub_702FC((uint64_t)&v17);
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  long long v15 = v13;
  v16[0] = v14[0];
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v14 + 9);
  id v7 = sub_6ED34((unint64_t)v6, (uint64_t)&v15, v12);
  swift_bridgeObjectRelease();
  sub_702FC((uint64_t)&v15);
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  long long v13 = v10;
  v14[0] = *(_OWORD *)v11;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)&v11[9];
  uint64_t v8 = sub_6F42C((uint64_t)v7, (uint64_t)&v13, a2, (uint64_t)v12, a3);
  sub_702FC((uint64_t)&v13);

  sub_616C((uint64_t)v12);
  return v8;
}

void *sub_6E3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_weakInit();
  uint64_t v6 = _swiftEmptyArrayStorage;
  unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_6E4F4(v8, a2, a3, &v10);
      if (v10)
      {
        sub_8FA50();
        if (*(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v11 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_8FA90();
        sub_8FAA0();
        sub_8FA80();
      }
      v8 += 40;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)v11;
  }
  swift_weakDestroy();
  return v6;
}

uint64_t sub_6E4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = sub_8F390();
  __chkstk_darwin(v8 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    *a4 = 0;
    return result;
  }
  uint64_t v10 = result;
  sub_18294(a1, (uint64_t)v31);
  sub_5664(&qword_BDDA0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v34 = 0;
    memset(v33, 0, sizeof(v33));
  }
  sub_70294((uint64_t)v33, (uint64_t)v31);
  uint64_t v11 = v31[0];
  if (v31[0])
  {
    sub_4911C((uint64_t)v31);
    uint64_t v12 = sub_60920(v11);
    if (v12)
    {
      uint64_t v14 = v12;
      uint64_t v15 = v13;
      if (*(unsigned char *)(a2 + 2))
      {
        char v16 = sub_8FF40();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          id v17 = sub_6EA60(v14, v15, a3);
          swift_release();
          *a4 = v17;
          return sub_EF88((uint64_t)v33, &qword_BAB18);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(a3, v14, v15);
      id v19 = [self itemWithLayoutSize:v18];
      swift_release();

      *a4 = v19;
      return sub_EF88((uint64_t)v33, &qword_BAB18);
    }
  }
  else
  {
    sub_EF88((uint64_t)v31, &qword_BAB18);
  }
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  uint64_t v32 = type metadata accessor for ShelfPageCollectionViewLayoutProvider();
  v31[0] = v10;
  id v20 = (id)AMSLogKey();
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_8F9D0();
    uint64_t v24 = v23;

    sub_8F380();
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    sub_8F370(v35);
    sub_820C(v31, v32);
    uint64_t DynamicType = swift_getDynamicType();
    *((void *)&v30 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v29 = DynamicType;
    sub_8F360();
    sub_EF88((uint64_t)&v29, &qword_BC780);
    v36._countAndFlagsBits = 5972026;
    v36._object = (void *)0xE300000000000000;
    sub_8F370(v36);
    *((void *)&v30 + 1) = &type metadata for String;
    *(void *)&long long v29 = v22;
    *((void *)&v29 + 1) = v24;
    sub_8F360();
    sub_EF88((uint64_t)&v29, &qword_BC780);
    v26._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    sub_8F370(v37);
    sub_820C(v31, v32);
    uint64_t v27 = swift_getDynamicType();
    *((void *)&v30 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v29 = v27;
    sub_8F360();
    sub_EF88((uint64_t)&v29, &qword_BC780);
    v26._countAndFlagsBits = 58;
  }
  v26._object = (void *)0xE100000000000000;
  sub_8F370(v26);
  sub_8F3A0();
  sub_616C((uint64_t)v31);
  sub_8F340();
  sub_70294((uint64_t)v33, (uint64_t)v31);
  uint64_t v28 = v31[0];
  if (v31[0])
  {
    sub_4911C((uint64_t)v31);
    *((void *)&v30 + 1) = swift_getMetatypeMetadata();
    *(void *)&long long v29 = v28;
  }
  else
  {
    sub_EF88((uint64_t)v31, &qword_BAB18);
    long long v29 = 0u;
    long long v30 = 0u;
  }
  type metadata accessor for Log();
  sub_8F3B0();
  sub_EF88((uint64_t)&v29, &qword_BC780);
  sub_4366C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_8FEA0();
  __break(1u);
  return result;
}

id sub_6EA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t))(a2 + 16))(a3);
  id v4 = [self itemWithLayoutSize:v3];
  sub_F040(0, (unint64_t *)&unk_BDFD0);
  uint64_t v5 = self;
  id v6 = sub_6ECB4([v5 flexibleSpacing:0.0], 0, objc_msgSend(v5, "flexibleSpacing:", 0.0), 0);
  [v4 setEdgeSpacing:v6];

  uint64_t v7 = self;
  id v8 = [self fractionalWidthDimension:1.0];
  id v9 = [v3 heightDimension];
  id v10 = [self sizeWithWidthDimension:v8 heightDimension:v9];

  sub_5664(&qword_BBEE8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_95BD0;
  *(void *)(v11 + 32) = v4;
  sub_8FA80();
  sub_F040(0, &qword_BDFC8);
  id v12 = v4;
  Class isa = sub_8FA60().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v7 verticalGroupWithLayoutSize:v10 subitems:isa];

  return v14;
}

id sub_6ECB4(void *a1, void *a2, void *a3, void *a4)
{
  id v8 = [(id)swift_getObjCClassFromMetadata() spacingForLeading:a1 top:a2 trailing:a3 bottom:a4];

  return v8;
}

id sub_6ED34(unint64_t a1, uint64_t a2, void *a3)
{
  if (!(a1 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_3;
    }
LABEL_10:
    id v14 = self;
    id v15 = [v14 absoluteDimension:0.0];
    id v16 = [v14 absoluteDimension:0.0];
    id v17 = [self sizeWithWidthDimension:v15 heightDimension:v16];

    uint64_t v18 = self;
    sub_F040(0, &qword_BDFC8);
    Class isa = sub_8FA60().super.isa;
    id v8 = [v18 verticalGroupWithLayoutSize:v17 subitems:isa];

    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_8FEB0();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_10;
  }
LABEL_3:
  if (*(unsigned char *)(a2 + 2) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = sub_8FF40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      uint64_t v7 = sub_6F084(a1);
      goto LABEL_8;
    }
  }
  uint64_t v7 = (uint64_t)sub_6EF70();
LABEL_8:
  id v8 = (id)v7;
  id v9 = self;
  sub_820C(a3, a3[3]);
  uint64_t v10 = sub_703CC();
  v11(v10);
  Class isa = (Class)objc_msgSend(v9, "fixedSpacing:");
  [v8 setInterItemSpacing:isa];
LABEL_11:

  return v8;
}

id sub_6EF70()
{
  uint64_t v0 = self;
  id v1 = [v0 fractionalWidthDimension:1.0];
  id v2 = [v0 estimatedDimension:200.0];
  id v3 = [self sizeWithWidthDimension:v1 heightDimension:v2];

  id v4 = self;
  sub_F040(0, &qword_BDFC8);
  Class isa = sub_8FA60().super.isa;
  id v6 = [v4 verticalGroupWithLayoutSize:v3 subitems:isa];

  return v6;
}

uint64_t sub_6F084(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_8FEB0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_3:
  if (v2 < 1)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xC000000000000001;
  double v6 = 10.0;
  do
  {
    if (v5) {
      id v7 = (id)sub_8FDF0();
    }
    else {
      id v7 = *(id *)(a1 + 8 * v4 + 32);
    }
    id v8 = v7;
    ++v4;
    id v9 = [v7 layoutSize];
    id v10 = [v9 widthDimension];

    [v10 dimension];
    double v12 = v11;

    double v6 = v6 + v12;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
  sub_89160(0, v5 == 0, a1);
  if (v5)
  {
    swift_bridgeObjectRetain();
    id v13 = (id)sub_8FDF0();
  }
  else
  {
    id v14 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain();
    id v13 = v14;
  }
  id v15 = v13;
  uint64_t v16 = v2 - 1;
  if (v16)
  {
    sub_89160(1, v5 == 0, a1);
    sub_89160(v16, v5 == 0, a1);
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (v5) {
        id v18 = (id)sub_8FDF0();
      }
      else {
        id v18 = *(id *)(a1 + 8 * i + 40);
      }
      id v19 = v18;
      id v20 = [v15 layoutSize];
      id v21 = [v20 heightDimension];

      [v21 dimension];
      double v23 = v22;

      id v24 = [v19 layoutSize];
      id v25 = [v24 heightDimension];

      [v25 dimension];
      double v27 = v26;

      if (v23 >= v27) {
        uint64_t v28 = v19;
      }
      else {
        uint64_t v28 = v15;
      }
      if (v23 < v27) {
        id v15 = v19;
      }
    }
  }
  swift_bridgeObjectRelease();
  id v29 = [self estimatedDimension:v6];
  id v30 = [v15 layoutSize];
  id v31 = [v30 heightDimension];

  id v32 = [self sizeWithWidthDimension:v29 heightDimension:v31];
  unint64_t v33 = self;
  sub_F040(0, &qword_BDFC8);
  Class isa = sub_8FA60().super.isa;
  id v35 = [v33 horizontalGroupWithLayoutSize:v32 subitems:isa];

  return (uint64_t)v35;
}

void *sub_6F42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_8EA10();
  sub_7084();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v15);
  if (*(unsigned __int8 *)(a2 + 1) - 1 > 1) {
    id v17 = sub_6F7F4(a1);
  }
  else {
    id v17 = sub_6F8E0(v16, a2, a5);
  }
  id v18 = v17;
  sub_6FB34(a2);
  sub_F040(0, &qword_BDF50);
  Class isa = sub_8FA60().super.isa;
  swift_bridgeObjectRelease();
  [v18 setBoundarySupplementaryItems:isa];

  if ((*(unsigned char *)(a2 + 2) & 1) == 0) {
    [v18 setOrthogonalScrollingBehavior:1];
  }
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakLoadStrong();
  *(void *)(v20 + 24) = *(void *)(v5 + 24);
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v21, (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_700C0;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_6F740;
  void aBlock[3] = &unk_B1CB0;
  double v23 = _Block_copy(aBlock);
  swift_release();
  [v18 setVisibleItemsInvalidationHandler:v23];
  _Block_release(v23);
  return v18;
}

uint64_t sub_6F6A8(unint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v5 = sub_8EA00();
    sub_684AC(a1, v5, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_6F740(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v8 = *(void (**)(uint64_t, uint64_t, double, double))(a1 + 32);
  sub_5664(&qword_BDFC0);
  uint64_t v9 = sub_8FA70();
  swift_retain();
  swift_unknownObjectRetain();
  v8(v9, a5, a2, a3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

id sub_6F7F4(uint64_t a1)
{
  id v1 = [self sectionWithGroup:a1];
  sub_703E0();
  uint64_t v2 = sub_703CC();
  double v4 = v3(v2);
  sub_703E0();
  uint64_t v5 = sub_703CC();
  double v7 = v6(v5);
  sub_703E0();
  uint64_t v8 = sub_703CC();
  double v10 = v9(v8);
  sub_703E0();
  uint64_t v11 = sub_703CC();
  objc_msgSend(v1, "setContentInsets:", v4, v7, v10, v12(v11));
  return v1;
}

void *sub_6F8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v27[1] = a3;
  uint64_t v4 = sub_8F0E0();
  __chkstk_darwin(v4 - 8);
  sub_B7F0();
  uint64_t v5 = sub_8F170();
  sub_7084();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_B7F0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_8F100();
  sub_7084();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  __n128 v17 = __chkstk_darwin(v16);
  id v19 = (char *)v27 - v18;
  (*(void (**)(char *, void, uint64_t, __n128))(v14 + 104))((char *)v27 - v18, *(unsigned int *)*(&off_B1D28 + *(char *)(a2 + 1)), v12, v17);
  uint64_t v20 = *(void (**)(uint64_t))(v14 + 16);
  uint64_t v21 = sub_70404();
  v20(v21);
  sub_8F130();
  uint64_t v22 = sub_70404();
  v20(v22);
  sub_8F0D0();
  sub_8F0F0();
  sub_8F160();
  sub_F040(0, &qword_BDF58);
  double v23 = (void *)sub_8FC60();
  [v23 contentInsets];
  double v25 = v24;
  [v23 contentInsets];
  objc_msgSend(v23, "setContentInsets:", 8.0, v25, 26.0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v12);
  return v23;
}

void *sub_6FB34(uint64_t a1)
{
  uint64_t v2 = self;
  id v3 = [v2 fractionalWidthDimension:1.0];
  id v4 = [v2 estimatedDimension:44.0];
  id v5 = [self sizeWithWidthDimension:v3 heightDimension:v4];

  sub_6FF7C(a1 + 24, (uint64_t)v8);
  sub_6FF7C((uint64_t)v8, (uint64_t)v9);
  if (v10)
  {
    sub_F040(0, &qword_BDF50);
    sub_6FD4C(v5, 5.0, 10.0, 0x726564616568, 0xE600000000000000, 1);
    sub_8FA50();
    if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
      sub_7041C();
    }
    sub_8FAA0();
    sub_8FA80();
  }
  sub_6FF7C(a1 + 8, (uint64_t)v7);
  sub_6FF7C((uint64_t)v7, (uint64_t)v11);
  if (v12)
  {
    sub_F040(0, &qword_BDF50);
    sub_6FD4C(v5, 5.0, -26.0, 0x7265746F6F66, 0xE600000000000000, 5);
    sub_8FA50();
    if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
      sub_7041C();
    }
    sub_8FAA0();
    sub_8FA80();
  }

  return _swiftEmptyArrayStorage;
}

id sub_6FD4C(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v10 = sub_8F9A0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", a1, v10, a6, a2, a3);

  return v11;
}

uint64_t sub_6FDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10210(a1, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    swift_beginAccess();
    sub_18294(v2 + 32, (uint64_t)v9);
    uint64_t v4 = v10;
    uint64_t v5 = v11;
    sub_820C(v9, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 64))(v7, v8, v4, v5);
    swift_bridgeObjectRelease();
    return sub_616C((uint64_t)v9);
  }
  else
  {
    swift_beginAccess();
    return sub_18294(v2 + 32, a2);
  }
}

uint64_t sub_6FEEC()
{
  sub_B990(v0 + 16);
  sub_616C(v0 + 32);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_6FF24()
{
  sub_6FEEC();

  return _swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for ShelfPageCollectionViewLayoutProvider()
{
  return self;
}

uint64_t sub_6FF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BB788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6FFE4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_7001C()
{
  uint64_t v1 = sub_8EA10();
  sub_7084();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_700C0(unint64_t a1, void *a2)
{
  sub_8EA10();

  return sub_6F6A8(a1, a2);
}

uint64_t sub_7015C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_7016C()
{
  return swift_release();
}

id sub_70174(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  long long v6[2] = sub_70218;
  v6[3] = &unk_B1D00;
  uint64_t v3 = _Block_copy(v6);
  id v4 = [v2 initWithSectionProvider:v3];
  _Block_release(v3);
  swift_release();
  return v4;
}

id sub_70218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_70294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_702FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_70334()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_7036C(uint64_t a1, uint64_t a2)
{
  return sub_6DC28(a1, a2);
}

unint64_t sub_70374()
{
  unint64_t result = qword_BDFF0;
  if (!qword_BDFF0)
  {
    sub_8EA10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDFF0);
  }
  return result;
}

uint64_t sub_703CC()
{
  return v0;
}

void *sub_703E0()
{
  return sub_820C(v0, v0[3]);
}

uint64_t sub_70404()
{
  return v0;
}

uint64_t sub_7041C()
{
  return sub_8FA90();
}

uint64_t *sub_7043C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = sub_8EBC0();
    swift_bridgeObjectRetain();
    if (sub_5754((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_5664(&qword_BAAF8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v13;
      long long v9[2] = v10[2];
      uint64_t v14 = *(int *)(v11 + 24);
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = sub_8E980();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_5754((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_5664((uint64_t *)&unk_BC7F0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        sub_56F8((uint64_t)v15, 0, 1, v17);
      }
      sub_56F8((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (uint64_t *)((char *)v7 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = type metadata accessor for ShelfPage();
    if (sub_5754((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = sub_5664(&qword_BAB10);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v70 = v22;
      Swift::String v71 = v7;
      uint64_t v24 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v24;
      uint64_t v25 = v21[3];
      v20[2] = v21[2];
      void v20[3] = v25;
      _OWORD v20[4] = v21[4];
      *((unsigned char *)v20 + 40) = *((unsigned char *)v21 + 40);
      double v26 = (void *)v21[7];
      void v20[6] = v21[6];
      v20[7] = v26;
      long long v27 = *(_OWORD *)(v21 + 11);
      *(_OWORD *)(v20 + 11) = v27;
      uint64_t v28 = v27;
      id v29 = **(void (***)(void *, void *, uint64_t))(v27 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v30 = v26;
      v29(v20 + 8, v21 + 8, v28);
      uint64_t v31 = v21[14];
      v20[13] = v21[13];
      v20[14] = v31;
      uint64_t v32 = v21[16];
      swift_bridgeObjectRetain();
      if (v32 == 1)
      {
        memcpy(v20 + 15, v21 + 15, 0x90uLL);
        uint64_t v7 = v71;
      }
      else
      {
        v20[15] = v21[15];
        v20[16] = v32;
        *((unsigned char *)v20 + 136) = *((unsigned char *)v21 + 136);
        uint64_t v33 = v21[19];
        swift_bridgeObjectRetain();
        if (v33 == 1)
        {
          long long v34 = *((_OWORD *)v21 + 10);
          *((_OWORD *)v20 + 9) = *((_OWORD *)v21 + 9);
          *((_OWORD *)v20 + 10) = v34;
          *((_OWORD *)v20 + 11) = *((_OWORD *)v21 + 11);
        }
        else
        {
          v20[18] = v21[18];
          v20[19] = v33;
          uint64_t v35 = v21[21];
          v20[20] = v21[20];
          v20[21] = v35;
          uint64_t v36 = v21[23];
          v20[22] = v21[22];
          v20[23] = v36;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v7 = v71;
        v20[24] = v21[24];
        uint64_t v37 = v21[28];
        swift_retain();
        if (v37)
        {
          uint64_t v38 = v21[29];
          v20[28] = v37;
          v20[29] = v38;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8))((uint64_t)(v20 + 25), (uint64_t)(v21 + 25), v37);
        }
        else
        {
          long long v39 = *(_OWORD *)(v21 + 27);
          *(_OWORD *)(v20 + 25) = *(_OWORD *)(v21 + 25);
          *(_OWORD *)(v20 + 27) = v39;
          v20[29] = v21[29];
        }
        *((unsigned char *)v20 + 240) = *((unsigned char *)v21 + 240);
        uint64_t v40 = v21[32];
        v20[31] = v21[31];
        v20[32] = v40;
        swift_bridgeObjectRetain();
      }
      *((unsigned char *)v20 + 264) = *((unsigned char *)v21 + 264);
      uint64_t v41 = v21[35];
      if (v41 == 1)
      {
        memcpy(v20 + 34, v21 + 34, 0x90uLL);
      }
      else
      {
        v20[34] = v21[34];
        v20[35] = v41;
        *((unsigned char *)v20 + 288) = *((unsigned char *)v21 + 288);
        uint64_t v42 = v21[38];
        swift_bridgeObjectRetain();
        if (v42 == 1)
        {
          long long v43 = *(_OWORD *)(v21 + 39);
          *(_OWORD *)(v20 + 37) = *(_OWORD *)(v21 + 37);
          *(_OWORD *)(v20 + 39) = v43;
          *(_OWORD *)(v20 + 41) = *(_OWORD *)(v21 + 41);
        }
        else
        {
          v20[37] = v21[37];
          v20[38] = v42;
          uint64_t v44 = v21[40];
          v20[39] = v21[39];
          unsigned char v20[40] = v44;
          uint64_t v45 = v21[42];
          v20[41] = v21[41];
          v20[42] = v45;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v20[43] = v21[43];
        uint64_t v46 = v21[47];
        swift_retain();
        if (v46)
        {
          uint64_t v47 = v21[48];
          v20[47] = v46;
          v20[48] = v47;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v46 - 8))((uint64_t)(v20 + 44), (uint64_t)(v21 + 44), v46);
        }
        else
        {
          long long v48 = *((_OWORD *)v21 + 23);
          *((_OWORD *)v20 + 22) = *((_OWORD *)v21 + 22);
          *((_OWORD *)v20 + 23) = v48;
          v20[48] = v21[48];
        }
        *((unsigned char *)v20 + 392) = *((unsigned char *)v21 + 392);
        uint64_t v49 = v21[51];
        v20[50] = v21[50];
        v20[51] = v49;
        swift_bridgeObjectRetain();
      }
      *((unsigned char *)v20 + 416) = *((unsigned char *)v21 + 416);
      uint64_t v50 = v21[54];
      if (v50 == 1)
      {
        memcpy(v20 + 53, v21 + 53, 0x90uLL);
      }
      else
      {
        v20[53] = v21[53];
        v20[54] = v50;
        *((unsigned char *)v20 + 440) = *((unsigned char *)v21 + 440);
        uint64_t v51 = v21[57];
        swift_bridgeObjectRetain();
        if (v51 == 1)
        {
          long long v52 = *((_OWORD *)v21 + 29);
          *((_OWORD *)v20 + 28) = *((_OWORD *)v21 + 28);
          *((_OWORD *)v20 + 29) = v52;
          *((_OWORD *)v20 + 30) = *((_OWORD *)v21 + 30);
        }
        else
        {
          v20[56] = v21[56];
          v20[57] = v51;
          uint64_t v53 = v21[59];
          v20[58] = v21[58];
          v20[59] = v53;
          uint64_t v54 = v21[61];
          v20[60] = v21[60];
          v20[61] = v54;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v20[62] = v21[62];
        uint64_t v55 = v21[66];
        swift_retain();
        if (v55)
        {
          v20[66] = v55;
          v20[67] = v21[67];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v55 - 8))((uint64_t)(v20 + 63), (uint64_t)(v21 + 63), v55);
        }
        else
        {
          long long v56 = *(_OWORD *)(v21 + 65);
          *(_OWORD *)(v20 + 63) = *(_OWORD *)(v21 + 63);
          *(_OWORD *)(v20 + 65) = v56;
          v20[67] = v21[67];
        }
        *((unsigned char *)v20 + 544) = *((unsigned char *)v21 + 544);
        v20[69] = v21[69];
        v20[70] = v21[70];
        swift_bridgeObjectRetain();
      }
      v20[71] = v21[71];
      uint64_t v57 = v21[73];
      swift_bridgeObjectRetain();
      if (v57 == 1)
      {
        memcpy(v20 + 72, v21 + 72, 0x90uLL);
      }
      else
      {
        v20[72] = v21[72];
        v20[73] = v57;
        *((unsigned char *)v20 + 592) = *((unsigned char *)v21 + 592);
        uint64_t v58 = v21[76];
        swift_bridgeObjectRetain();
        if (v58 == 1)
        {
          long long v59 = *(_OWORD *)(v21 + 77);
          *(_OWORD *)(v20 + 75) = *(_OWORD *)(v21 + 75);
          *(_OWORD *)(v20 + 77) = v59;
          *(_OWORD *)(v20 + 79) = *(_OWORD *)(v21 + 79);
        }
        else
        {
          v20[75] = v21[75];
          v20[76] = v58;
          v20[77] = v21[77];
          v20[78] = v21[78];
          v20[79] = v21[79];
          v20[80] = v21[80];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v20[81] = v21[81];
        uint64_t v60 = v21[85];
        swift_retain();
        if (v60)
        {
          v20[85] = v60;
          v20[86] = v21[86];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v60 - 8))((uint64_t)(v20 + 82), (uint64_t)(v21 + 82), v60);
        }
        else
        {
          long long v61 = *((_OWORD *)v21 + 42);
          *((_OWORD *)v20 + 41) = *((_OWORD *)v21 + 41);
          *((_OWORD *)v20 + 42) = v61;
          v20[86] = v21[86];
        }
        *((unsigned char *)v20 + 696) = *((unsigned char *)v21 + 696);
        v20[88] = v21[88];
        v20[89] = v21[89];
        swift_bridgeObjectRetain();
      }
      *((unsigned char *)v20 + 720) = *((unsigned char *)v21 + 720);
      v20[91] = v21[91];
      v20[92] = v21[92];
      int v62 = *((unsigned __int8 *)v21 + 792);
      swift_bridgeObjectRetain();
      if (v62 == 255)
      {
        long long v63 = *(_OWORD *)(v21 + 95);
        *(_OWORD *)(v20 + 93) = *(_OWORD *)(v21 + 93);
        *(_OWORD *)(v20 + 95) = v63;
        *(_OWORD *)(v20 + 97) = *(_OWORD *)(v21 + 97);
        *((unsigned char *)v20 + 792) = *((unsigned char *)v21 + 792);
      }
      else if (v62)
      {
        long long v64 = *((_OWORD *)v21 + 48);
        *((_OWORD *)v20 + 48) = v64;
        (**(void (***)(uint64_t, uint64_t))(v64 - 8))((uint64_t)(v20 + 93), (uint64_t)(v21 + 93));
        *((unsigned char *)v20 + 792) = 1;
      }
      else
      {
        v20[93] = v21[93];
        v20[94] = v21[94];
        v20[95] = v21[95];
        v20[96] = v21[96];
        v20[97] = v21[97];
        v20[98] = v21[98];
        *((unsigned char *)v20 + 792) = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *((unsigned char *)v20 + 793) = *((unsigned char *)v21 + 793);
      *((_WORD *)v20 + 397) = *((_WORD *)v21 + 397);
      uint64_t v65 = *(int *)(v70 + 36);
      Swift::String v66 = (char *)v20 + v65;
      Swift::String v67 = (char *)v21 + v65;
      uint64_t v68 = sub_8F420();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
      sub_56F8((uint64_t)v20, 0, 1, v70);
    }
  }
  return v7;
}

uint64_t sub_70D00(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_8EBC0();
  if (!sub_5754(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_8E980();
    if (!sub_5754(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = type metadata accessor for ShelfPage();
  uint64_t result = sub_5754(v8, 1, v9);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    sub_616C(v8 + 64);
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 128) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(v8 + 152) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      if (*(void *)(v8 + 224)) {
        sub_616C(v8 + 200);
      }
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v8 + 280) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(v8 + 304) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      if (*(void *)(v8 + 376)) {
        sub_616C(v8 + 352);
      }
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v8 + 432) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(v8 + 456) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      if (*(void *)(v8 + 528)) {
        sub_616C(v8 + 504);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 584) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(v8 + 608) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      if (*(void *)(v8 + 680)) {
        sub_616C(v8 + 656);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    int v11 = *(unsigned __int8 *)(v8 + 792);
    if (v11 != 255)
    {
      if (v11)
      {
        sub_616C(v8 + 744);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v12 = v8 + *(int *)(v9 + 36);
    uint64_t v13 = sub_8F420();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    return v14(v12, v13);
  }
  return result;
}

void *sub_7100C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = sub_8EBC0();
  swift_bridgeObjectRetain();
  if (sub_5754((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_5664(&qword_BAAF8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v11;
    _OWORD v7[2] = v8[2];
    uint64_t v12 = *(int *)(v9 + 24);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_8E980();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_5754((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_5664((uint64_t *)&unk_BC7F0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      sub_56F8((uint64_t)v13, 0, 1, v15);
    }
    sub_56F8((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (void *)((char *)v5 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = type metadata accessor for ShelfPage();
  if (sub_5754((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_5664(&qword_BAB10);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v68 = v20;
    Swift::String v69 = v5;
    uint64_t v22 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v22;
    uint64_t v23 = v19[3];
    void v18[2] = v19[2];
    _OWORD v18[3] = v23;
    v18[4] = v19[4];
    *((unsigned char *)v18 + 40) = *((unsigned char *)v19 + 40);
    uint64_t v24 = (void *)v19[7];
    v18[6] = v19[6];
    v18[7] = v24;
    long long v25 = *(_OWORD *)(v19 + 11);
    *(_OWORD *)(v18 + 11) = v25;
    uint64_t v26 = v25;
    long long v27 = **(void (***)(void *, void *, uint64_t))(v25 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v28 = v24;
    v27(v18 + 8, v19 + 8, v26);
    uint64_t v29 = v19[14];
    v18[13] = v19[13];
    v18[14] = v29;
    uint64_t v30 = v19[16];
    swift_bridgeObjectRetain();
    if (v30 == 1)
    {
      memcpy(v18 + 15, v19 + 15, 0x90uLL);
      uint64_t v5 = v69;
    }
    else
    {
      v18[15] = v19[15];
      unsigned char v18[16] = v30;
      *((unsigned char *)v18 + 136) = *((unsigned char *)v19 + 136);
      uint64_t v31 = v19[19];
      swift_bridgeObjectRetain();
      if (v31 == 1)
      {
        long long v32 = *((_OWORD *)v19 + 10);
        *((_OWORD *)v18 + 9) = *((_OWORD *)v19 + 9);
        *((_OWORD *)v18 + 10) = v32;
        *((_OWORD *)v18 + 11) = *((_OWORD *)v19 + 11);
      }
      else
      {
        v18[18] = v19[18];
        v18[19] = v31;
        uint64_t v33 = v19[21];
        v18[20] = v19[20];
        v18[21] = v33;
        uint64_t v34 = v19[23];
        v18[22] = v19[22];
        v18[23] = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v5 = v69;
      unsigned char v18[24] = v19[24];
      uint64_t v35 = v19[28];
      swift_retain();
      if (v35)
      {
        uint64_t v36 = v19[29];
        v18[28] = v35;
        v18[29] = v36;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8))((uint64_t)(v18 + 25), (uint64_t)(v19 + 25), v35);
      }
      else
      {
        long long v37 = *(_OWORD *)(v19 + 27);
        *(_OWORD *)(v18 + 25) = *(_OWORD *)(v19 + 25);
        *(_OWORD *)(v18 + 27) = v37;
        v18[29] = v19[29];
      }
      *((unsigned char *)v18 + 240) = *((unsigned char *)v19 + 240);
      uint64_t v38 = v19[32];
      v18[31] = v19[31];
      v18[32] = v38;
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)v18 + 264) = *((unsigned char *)v19 + 264);
    uint64_t v39 = v19[35];
    if (v39 == 1)
    {
      memcpy(v18 + 34, v19 + 34, 0x90uLL);
    }
    else
    {
      v18[34] = v19[34];
      v18[35] = v39;
      *((unsigned char *)v18 + 288) = *((unsigned char *)v19 + 288);
      uint64_t v40 = v19[38];
      swift_bridgeObjectRetain();
      if (v40 == 1)
      {
        long long v41 = *(_OWORD *)(v19 + 39);
        *(_OWORD *)(v18 + 37) = *(_OWORD *)(v19 + 37);
        *(_OWORD *)(v18 + 39) = v41;
        *(_OWORD *)(v18 + 41) = *(_OWORD *)(v19 + 41);
      }
      else
      {
        v18[37] = v19[37];
        v18[38] = v40;
        uint64_t v42 = v19[40];
        v18[39] = v19[39];
        v18[40] = v42;
        uint64_t v43 = v19[42];
        v18[41] = v19[41];
        v18[42] = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v18[43] = v19[43];
      uint64_t v44 = v19[47];
      swift_retain();
      if (v44)
      {
        uint64_t v45 = v19[48];
        v18[47] = v44;
        v18[48] = v45;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v44 - 8))((uint64_t)(v18 + 44), (uint64_t)(v19 + 44), v44);
      }
      else
      {
        long long v46 = *((_OWORD *)v19 + 23);
        *((_OWORD *)v18 + 22) = *((_OWORD *)v19 + 22);
        *((_OWORD *)v18 + 23) = v46;
        v18[48] = v19[48];
      }
      *((unsigned char *)v18 + 392) = *((unsigned char *)v19 + 392);
      uint64_t v47 = v19[51];
      v18[50] = v19[50];
      v18[51] = v47;
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)v18 + 416) = *((unsigned char *)v19 + 416);
    uint64_t v48 = v19[54];
    if (v48 == 1)
    {
      memcpy(v18 + 53, v19 + 53, 0x90uLL);
    }
    else
    {
      v18[53] = v19[53];
      v18[54] = v48;
      *((unsigned char *)v18 + 440) = *((unsigned char *)v19 + 440);
      uint64_t v49 = v19[57];
      swift_bridgeObjectRetain();
      if (v49 == 1)
      {
        long long v50 = *((_OWORD *)v19 + 29);
        *((_OWORD *)v18 + 28) = *((_OWORD *)v19 + 28);
        *((_OWORD *)v18 + 29) = v50;
        *((_OWORD *)v18 + 30) = *((_OWORD *)v19 + 30);
      }
      else
      {
        v18[56] = v19[56];
        v18[57] = v49;
        uint64_t v51 = v19[59];
        v18[58] = v19[58];
        v18[59] = v51;
        uint64_t v52 = v19[61];
        v18[60] = v19[60];
        v18[61] = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v18[62] = v19[62];
      uint64_t v53 = v19[66];
      swift_retain();
      if (v53)
      {
        v18[66] = v53;
        v18[67] = v19[67];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v53 - 8))((uint64_t)(v18 + 63), (uint64_t)(v19 + 63), v53);
      }
      else
      {
        long long v54 = *(_OWORD *)(v19 + 65);
        *(_OWORD *)(v18 + 63) = *(_OWORD *)(v19 + 63);
        *(_OWORD *)(v18 + 65) = v54;
        v18[67] = v19[67];
      }
      *((unsigned char *)v18 + 544) = *((unsigned char *)v19 + 544);
      v18[69] = v19[69];
      v18[70] = v19[70];
      swift_bridgeObjectRetain();
    }
    v18[71] = v19[71];
    uint64_t v55 = v19[73];
    swift_bridgeObjectRetain();
    if (v55 == 1)
    {
      memcpy(v18 + 72, v19 + 72, 0x90uLL);
    }
    else
    {
      unsigned char v18[72] = v19[72];
      v18[73] = v55;
      *((unsigned char *)v18 + 592) = *((unsigned char *)v19 + 592);
      uint64_t v56 = v19[76];
      swift_bridgeObjectRetain();
      if (v56 == 1)
      {
        long long v57 = *(_OWORD *)(v19 + 77);
        *(_OWORD *)(v18 + 75) = *(_OWORD *)(v19 + 75);
        *(_OWORD *)(v18 + 77) = v57;
        *(_OWORD *)(v18 + 79) = *(_OWORD *)(v19 + 79);
      }
      else
      {
        v18[75] = v19[75];
        v18[76] = v56;
        v18[77] = v19[77];
        v18[78] = v19[78];
        v18[79] = v19[79];
        v18[80] = v19[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v18[81] = v19[81];
      uint64_t v58 = v19[85];
      swift_retain();
      if (v58)
      {
        v18[85] = v58;
        v18[86] = v19[86];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v58 - 8))((uint64_t)(v18 + 82), (uint64_t)(v19 + 82), v58);
      }
      else
      {
        long long v59 = *((_OWORD *)v19 + 42);
        *((_OWORD *)v18 + 41) = *((_OWORD *)v19 + 41);
        *((_OWORD *)v18 + 42) = v59;
        v18[86] = v19[86];
      }
      *((unsigned char *)v18 + 696) = *((unsigned char *)v19 + 696);
      v18[88] = v19[88];
      v18[89] = v19[89];
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)v18 + 720) = *((unsigned char *)v19 + 720);
    v18[91] = v19[91];
    v18[92] = v19[92];
    int v60 = *((unsigned __int8 *)v19 + 792);
    swift_bridgeObjectRetain();
    if (v60 == 255)
    {
      long long v61 = *(_OWORD *)(v19 + 95);
      *(_OWORD *)(v18 + 93) = *(_OWORD *)(v19 + 93);
      *(_OWORD *)(v18 + 95) = v61;
      *(_OWORD *)(v18 + 97) = *(_OWORD *)(v19 + 97);
      *((unsigned char *)v18 + 792) = *((unsigned char *)v19 + 792);
    }
    else if (v60)
    {
      long long v62 = *((_OWORD *)v19 + 48);
      *((_OWORD *)v18 + 48) = v62;
      (**(void (***)(uint64_t, uint64_t))(v62 - 8))((uint64_t)(v18 + 93), (uint64_t)(v19 + 93));
      *((unsigned char *)v18 + 792) = 1;
    }
    else
    {
      v18[93] = v19[93];
      v18[94] = v19[94];
      v18[95] = v19[95];
      v18[96] = v19[96];
      v18[97] = v19[97];
      v18[98] = v19[98];
      *((unsigned char *)v18 + 792) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)v18 + 793) = *((unsigned char *)v19 + 793);
    *((_WORD *)v18 + 397) = *((_WORD *)v19 + 397);
    uint64_t v63 = *(int *)(v68 + 36);
    long long v64 = (char *)v18 + v63;
    uint64_t v65 = (char *)v19 + v63;
    uint64_t v66 = sub_8F420();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
    sub_56F8((uint64_t)v18, 0, 1, v68);
  }
  return v5;
}

void *sub_71884(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = sub_8EBC0();
  int v10 = sub_5754((uint64_t)v7, 1, v9);
  int v11 = sub_5754((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      _OWORD v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_8E980();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_5754((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_5664((uint64_t *)&unk_BC7F0);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        sub_56F8((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v26 = (uint64_t)v7;
      uint64_t v27 = v9;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_75118((uint64_t)v7, (void (*)(void))&type metadata accessor for JSServiceRequest);
LABEL_7:
    size_t v17 = *(void *)(*(void *)(sub_5664(&qword_BAAF8) - 8) + 64);
    uint64_t v18 = v7;
    uint64_t v19 = v8;
LABEL_8:
    memcpy(v18, v19, v17);
    goto LABEL_15;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(v9 + 24);
  uint64_t v21 = (uint64_t)v7 + v20;
  uint64_t v22 = (uint64_t)v8 + v20;
  uint64_t v23 = sub_8E980();
  int v24 = sub_5754(v21, 1, v23);
  int v25 = sub_5754(v22, 1, v23);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      uint64_t v26 = v21;
      uint64_t v27 = v23;
LABEL_14:
      sub_56F8(v26, 0, 1, v27);
      goto LABEL_15;
    }
    goto LABEL_36;
  }
  uint64_t v52 = *(void *)(v23 - 8);
  if (v25)
  {
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v21, v23);
LABEL_36:
    size_t v17 = *(void *)(*(void *)(sub_5664((uint64_t *)&unk_BC7F0) - 8) + 64);
    uint64_t v18 = (void *)v21;
    uint64_t v19 = (const void *)v22;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 24))(v21, v22, v23);
LABEL_15:
  uint64_t v28 = *(int *)(a3 + 24);
  uint64_t v29 = (uint64_t)v5 + v28;
  uint64_t v30 = (uint64_t)a2 + v28;
  uint64_t v31 = type metadata accessor for ShelfPage();
  int v32 = sub_5754(v29, 1, v31);
  int v33 = sub_5754(v30, 1, v31);
  if (!v32)
  {
    if (v33)
    {
      sub_75118(v29, (void (*)(void))type metadata accessor for ShelfPage);
      goto LABEL_21;
    }
    *(void *)uint64_t v29 = *(void *)v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v29 + 16) = *(void *)(v30 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v29 + 24) = *(void *)(v30 + 24);
    *(void *)(v29 + 32) = *(void *)(v30 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v29 + 40) = *(unsigned char *)(v30 + 40);
    *(void *)(v29 + 48) = *(void *)(v30 + 48);
    swift_retain();
    swift_release();
    long long v41 = *(void **)(v30 + 56);
    uint64_t v42 = *(void **)(v29 + 56);
    *(void *)(v29 + 56) = v41;
    id v43 = v41;

    sub_64C8((uint64_t *)(v29 + 64), (uint64_t *)(v30 + 64));
    *(void *)(v29 + 104) = *(void *)(v30 + 104);
    *(void *)(v29 + 112) = *(void *)(v30 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void *)(v30 + 128);
    if (*(void *)(v29 + 128) == 1)
    {
      if (v44 != 1)
      {
        *(void *)(v29 + 120) = *(void *)(v30 + 120);
        *(void *)(v29 + 128) = *(void *)(v30 + 128);
        *(unsigned char *)(v29 + 136) = *(unsigned char *)(v30 + 136);
        uint64_t v45 = *(void *)(v30 + 152);
        swift_bridgeObjectRetain();
        if (v45 == 1)
        {
          long long v46 = *(_OWORD *)(v30 + 144);
          long long v47 = *(_OWORD *)(v30 + 176);
          *(_OWORD *)(v29 + 160) = *(_OWORD *)(v30 + 160);
          *(_OWORD *)(v29 + 176) = v47;
          *(_OWORD *)(v29 + 144) = v46;
        }
        else
        {
          *(void *)(v29 + 144) = *(void *)(v30 + 144);
          *(void *)(v29 + 152) = *(void *)(v30 + 152);
          *(void *)(v29 + 160) = *(void *)(v30 + 160);
          *(void *)(v29 + 168) = *(void *)(v30 + 168);
          *(void *)(v29 + 176) = *(void *)(v30 + 176);
          *(void *)(v29 + 184) = *(void *)(v30 + 184);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(void *)(v29 + 192) = *(void *)(v30 + 192);
        uint64_t v88 = *(void *)(v30 + 224);
        swift_retain();
        if (v88)
        {
          *(void *)(v29 + 224) = v88;
          *(void *)(v29 + 232) = *(void *)(v30 + 232);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v88 - 8))(v29 + 200, v30 + 200, v88);
        }
        else
        {
          long long v91 = *(_OWORD *)(v30 + 200);
          long long v92 = *(_OWORD *)(v30 + 216);
          *(void *)(v29 + 232) = *(void *)(v30 + 232);
          *(_OWORD *)(v29 + 200) = v91;
          *(_OWORD *)(v29 + 216) = v92;
        }
        *(unsigned char *)(v29 + 240) = *(unsigned char *)(v30 + 240);
        *(void *)(v29 + 248) = *(void *)(v30 + 248);
        *(void *)(v29 + 256) = *(void *)(v30 + 256);
        swift_bridgeObjectRetain();
LABEL_93:
        *(unsigned char *)(v29 + 264) = *(unsigned char *)(v30 + 264);
        uint64_t v96 = *(void *)(v30 + 280);
        if (*(void *)(v29 + 280) == 1)
        {
          if (v96 != 1)
          {
            *(void *)(v29 + 272) = *(void *)(v30 + 272);
            *(void *)(v29 + 280) = *(void *)(v30 + 280);
            *(unsigned char *)(v29 + 288) = *(unsigned char *)(v30 + 288);
            uint64_t v97 = *(void *)(v30 + 304);
            swift_bridgeObjectRetain();
            if (v97 == 1)
            {
              long long v98 = *(_OWORD *)(v30 + 296);
              long long v99 = *(_OWORD *)(v30 + 328);
              *(_OWORD *)(v29 + 312) = *(_OWORD *)(v30 + 312);
              *(_OWORD *)(v29 + 328) = v99;
              *(_OWORD *)(v29 + 296) = v98;
            }
            else
            {
              *(void *)(v29 + 296) = *(void *)(v30 + 296);
              *(void *)(v29 + 304) = *(void *)(v30 + 304);
              *(void *)(v29 + 312) = *(void *)(v30 + 312);
              *(void *)(v29 + 320) = *(void *)(v30 + 320);
              *(void *)(v29 + 328) = *(void *)(v30 + 328);
              *(void *)(v29 + 336) = *(void *)(v30 + 336);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            *(void *)(v29 + 344) = *(void *)(v30 + 344);
            uint64_t v105 = *(void *)(v30 + 376);
            swift_retain();
            if (v105)
            {
              *(void *)(v29 + 376) = v105;
              *(void *)(v29 + 384) = *(void *)(v30 + 384);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v105 - 8))(v29 + 352, v30 + 352, v105);
            }
            else
            {
              long long v108 = *(_OWORD *)(v30 + 352);
              long long v109 = *(_OWORD *)(v30 + 368);
              *(void *)(v29 + 384) = *(void *)(v30 + 384);
              *(_OWORD *)(v29 + 352) = v108;
              *(_OWORD *)(v29 + 368) = v109;
            }
            *(unsigned char *)(v29 + 392) = *(unsigned char *)(v30 + 392);
            *(void *)(v29 + 400) = *(void *)(v30 + 400);
            *(void *)(v29 + 408) = *(void *)(v30 + 408);
            swift_bridgeObjectRetain();
LABEL_120:
            *(unsigned char *)(v29 + 416) = *(unsigned char *)(v30 + 416);
            uint64_t v113 = *(void *)(v30 + 432);
            if (*(void *)(v29 + 432) == 1)
            {
              if (v113 != 1)
              {
                *(void *)(v29 + 424) = *(void *)(v30 + 424);
                *(void *)(v29 + 432) = *(void *)(v30 + 432);
                *(unsigned char *)(v29 + 440) = *(unsigned char *)(v30 + 440);
                uint64_t v114 = *(void *)(v30 + 456);
                swift_bridgeObjectRetain();
                if (v114 == 1)
                {
                  long long v115 = *(_OWORD *)(v30 + 448);
                  long long v116 = *(_OWORD *)(v30 + 480);
                  *(_OWORD *)(v29 + 464) = *(_OWORD *)(v30 + 464);
                  *(_OWORD *)(v29 + 480) = v116;
                  *(_OWORD *)(v29 + 448) = v115;
                }
                else
                {
                  *(void *)(v29 + 448) = *(void *)(v30 + 448);
                  *(void *)(v29 + 456) = *(void *)(v30 + 456);
                  *(void *)(v29 + 464) = *(void *)(v30 + 464);
                  *(void *)(v29 + 472) = *(void *)(v30 + 472);
                  *(void *)(v29 + 480) = *(void *)(v30 + 480);
                  *(void *)(v29 + 488) = *(void *)(v30 + 488);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                *(void *)(v29 + 496) = *(void *)(v30 + 496);
                uint64_t v122 = *(void *)(v30 + 528);
                swift_retain();
                if (v122)
                {
                  *(void *)(v29 + 528) = v122;
                  *(void *)(v29 + 536) = *(void *)(v30 + 536);
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v122 - 8))(v29 + 504, v30 + 504, v122);
                }
                else
                {
                  long long v125 = *(_OWORD *)(v30 + 504);
                  long long v126 = *(_OWORD *)(v30 + 520);
                  *(void *)(v29 + 536) = *(void *)(v30 + 536);
                  *(_OWORD *)(v29 + 504) = v125;
                  *(_OWORD *)(v29 + 520) = v126;
                }
                *(unsigned char *)(v29 + 544) = *(unsigned char *)(v30 + 544);
                *(void *)(v29 + 552) = *(void *)(v30 + 552);
                *(void *)(v29 + 560) = *(void *)(v30 + 560);
                swift_bridgeObjectRetain();
LABEL_147:
                *(void *)(v29 + 568) = *(void *)(v30 + 568);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v130 = *(void *)(v30 + 584);
                if (*(void *)(v29 + 584) == 1)
                {
                  if (v130 != 1)
                  {
                    *(void *)(v29 + 576) = *(void *)(v30 + 576);
                    *(void *)(v29 + 584) = *(void *)(v30 + 584);
                    *(unsigned char *)(v29 + 592) = *(unsigned char *)(v30 + 592);
                    uint64_t v131 = *(void *)(v30 + 608);
                    swift_bridgeObjectRetain();
                    if (v131 == 1)
                    {
                      long long v132 = *(_OWORD *)(v30 + 600);
                      long long v133 = *(_OWORD *)(v30 + 632);
                      *(_OWORD *)(v29 + 616) = *(_OWORD *)(v30 + 616);
                      *(_OWORD *)(v29 + 632) = v133;
                      *(_OWORD *)(v29 + 600) = v132;
                    }
                    else
                    {
                      *(void *)(v29 + 600) = *(void *)(v30 + 600);
                      *(void *)(v29 + 608) = *(void *)(v30 + 608);
                      *(void *)(v29 + 616) = *(void *)(v30 + 616);
                      *(void *)(v29 + 624) = *(void *)(v30 + 624);
                      *(void *)(v29 + 632) = *(void *)(v30 + 632);
                      *(void *)(v29 + 640) = *(void *)(v30 + 640);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    *(void *)(v29 + 648) = *(void *)(v30 + 648);
                    uint64_t v139 = *(void *)(v30 + 680);
                    swift_retain();
                    if (v139)
                    {
                      *(void *)(v29 + 680) = v139;
                      *(void *)(v29 + 688) = *(void *)(v30 + 688);
                      (**(void (***)(uint64_t, uint64_t, uint64_t))(v139 - 8))(v29 + 656, v30 + 656, v139);
                    }
                    else
                    {
                      long long v142 = *(_OWORD *)(v30 + 656);
                      long long v143 = *(_OWORD *)(v30 + 672);
                      *(void *)(v29 + 688) = *(void *)(v30 + 688);
                      *(_OWORD *)(v29 + 656) = v142;
                      *(_OWORD *)(v29 + 672) = v143;
                    }
                    *(unsigned char *)(v29 + 696) = *(unsigned char *)(v30 + 696);
                    *(void *)(v29 + 704) = *(void *)(v30 + 704);
                    *(void *)(v29 + 712) = *(void *)(v30 + 712);
                    swift_bridgeObjectRetain();
LABEL_174:
                    *(unsigned char *)(v29 + 720) = *(unsigned char *)(v30 + 720);
                    *(void *)(v29 + 728) = *(void *)(v30 + 728);
                    *(void *)(v29 + 736) = *(void *)(v30 + 736);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v147 = (_OWORD *)(v29 + 744);
                    v148 = (long long *)(v30 + 744);
                    v149 = (unsigned char *)(v29 + 792);
                    int v150 = *(unsigned __int8 *)(v30 + 792);
                    if (*(unsigned __int8 *)(v29 + 792) == 255)
                    {
                      if (v150 == 255)
                      {
                        long long v154 = *v148;
                        long long v155 = *(_OWORD *)(v30 + 760);
                        long long v156 = *(_OWORD *)(v30 + 776);
                        *(unsigned char *)(v29 + 792) = *(unsigned char *)(v30 + 792);
                        *(_OWORD *)(v29 + 760) = v155;
                        *(_OWORD *)(v29 + 776) = v156;
                        _OWORD *v147 = v154;
                        goto LABEL_184;
                      }
                      if (v150)
                      {
LABEL_181:
                        uint64_t v157 = *(void *)(v30 + 768);
                        *(void *)(v29 + 768) = v157;
                        *(void *)(v29 + 776) = *(void *)(v30 + 776);
                        (**(void (***)(uint64_t, uint64_t))(v157 - 8))(v29 + 744, v30 + 744);
                        unsigned char *v149 = 1;
                        goto LABEL_184;
                      }
                    }
                    else
                    {
                      if (v150 == 255)
                      {
                        sub_53A04(v29 + 744);
                        long long v152 = *(_OWORD *)(v30 + 760);
                        long long v151 = *(_OWORD *)(v30 + 776);
                        long long v153 = *v148;
                        *(unsigned char *)(v29 + 792) = *(unsigned char *)(v30 + 792);
                        *(_OWORD *)(v29 + 760) = v152;
                        *(_OWORD *)(v29 + 776) = v151;
                        _OWORD *v147 = v153;
LABEL_184:
                        *(unsigned char *)(v29 + 793) = *(unsigned char *)(v30 + 793);
                        *(_WORD *)(v29 + 794) = *(_WORD *)(v30 + 794);
                        uint64_t v158 = *(int *)(v31 + 36);
                        uint64_t v159 = v29 + v158;
                        uint64_t v160 = v30 + v158;
                        uint64_t v161 = sub_8F420();
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 24))(v159, v160, v161);
                        return v5;
                      }
                      if (v5 == a2) {
                        goto LABEL_184;
                      }
                      sub_53A04(v29 + 744);
                      if (*(unsigned char *)(v30 + 792)) {
                        goto LABEL_181;
                      }
                    }
                    *(void *)(v29 + 744) = *(void *)(v30 + 744);
                    *(void *)(v29 + 752) = *(void *)(v30 + 752);
                    *(void *)(v29 + 760) = *(void *)(v30 + 760);
                    *(void *)(v29 + 768) = *(void *)(v30 + 768);
                    *(void *)(v29 + 776) = *(void *)(v30 + 776);
                    *(void *)(v29 + 784) = *(void *)(v30 + 784);
                    unsigned char *v149 = 0;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    goto LABEL_184;
                  }
LABEL_153:
                  memcpy((void *)(v29 + 576), (const void *)(v30 + 576), 0x90uLL);
                  goto LABEL_174;
                }
                if (v130 == 1)
                {
                  sub_4A89C(v29 + 576);
                  goto LABEL_153;
                }
                *(void *)(v29 + 576) = *(void *)(v30 + 576);
                *(void *)(v29 + 584) = *(void *)(v30 + 584);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(unsigned char *)(v29 + 592) = *(unsigned char *)(v30 + 592);
                v134 = (long long *)(v29 + 600);
                v135 = (long long *)(v30 + 600);
                uint64_t v136 = *(void *)(v30 + 608);
                if (*(void *)(v29 + 608) == 1)
                {
                  if (v136 == 1)
                  {
                    long long v137 = *v135;
                    long long v138 = *(_OWORD *)(v30 + 632);
                    *(_OWORD *)(v29 + 616) = *(_OWORD *)(v30 + 616);
                    *(_OWORD *)(v29 + 632) = v138;
                    long long *v134 = v137;
                  }
                  else
                  {
                    *(void *)(v29 + 600) = *(void *)(v30 + 600);
                    *(void *)(v29 + 608) = *(void *)(v30 + 608);
                    *(void *)(v29 + 616) = *(void *)(v30 + 616);
                    *(void *)(v29 + 624) = *(void *)(v30 + 624);
                    *(void *)(v29 + 632) = *(void *)(v30 + 632);
                    *(void *)(v29 + 640) = *(void *)(v30 + 640);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v136 == 1)
                {
                  sub_4B1DC(v29 + 600);
                  long long v141 = *(_OWORD *)(v30 + 616);
                  long long v140 = *(_OWORD *)(v30 + 632);
                  long long *v134 = *v135;
                  *(_OWORD *)(v29 + 616) = v141;
                  *(_OWORD *)(v29 + 632) = v140;
                }
                else
                {
                  *(void *)(v29 + 600) = *(void *)(v30 + 600);
                  *(void *)(v29 + 608) = *(void *)(v30 + 608);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(void *)(v29 + 616) = *(void *)(v30 + 616);
                  *(void *)(v29 + 624) = *(void *)(v30 + 624);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(void *)(v29 + 632) = *(void *)(v30 + 632);
                  *(void *)(v29 + 640) = *(void *)(v30 + 640);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                }
                *(void *)(v29 + 648) = *(void *)(v30 + 648);
                swift_retain();
                swift_release();
                uint64_t v144 = *(void *)(v30 + 680);
                if (*(void *)(v29 + 680))
                {
                  if (v144)
                  {
                    sub_64C8((uint64_t *)(v29 + 656), (uint64_t *)(v30 + 656));
LABEL_173:
                    *(unsigned char *)(v29 + 696) = *(unsigned char *)(v30 + 696);
                    *(void *)(v29 + 704) = *(void *)(v30 + 704);
                    *(void *)(v29 + 712) = *(void *)(v30 + 712);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    goto LABEL_174;
                  }
                  sub_616C(v29 + 656);
                }
                else if (v144)
                {
                  *(void *)(v29 + 680) = v144;
                  *(void *)(v29 + 688) = *(void *)(v30 + 688);
                  (**(void (***)(uint64_t, uint64_t))(v144 - 8))(v29 + 656, v30 + 656);
                  goto LABEL_173;
                }
                long long v145 = *(_OWORD *)(v30 + 656);
                long long v146 = *(_OWORD *)(v30 + 672);
                *(void *)(v29 + 688) = *(void *)(v30 + 688);
                *(_OWORD *)(v29 + 656) = v145;
                *(_OWORD *)(v29 + 672) = v146;
                goto LABEL_173;
              }
LABEL_126:
              memcpy((void *)(v29 + 424), (const void *)(v30 + 424), 0x90uLL);
              goto LABEL_147;
            }
            if (v113 == 1)
            {
              sub_4A89C(v29 + 424);
              goto LABEL_126;
            }
            *(void *)(v29 + 424) = *(void *)(v30 + 424);
            *(void *)(v29 + 432) = *(void *)(v30 + 432);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(unsigned char *)(v29 + 440) = *(unsigned char *)(v30 + 440);
            v117 = (long long *)(v29 + 448);
            uint64_t v118 = (long long *)(v30 + 448);
            uint64_t v119 = *(void *)(v30 + 456);
            if (*(void *)(v29 + 456) == 1)
            {
              if (v119 == 1)
              {
                long long v120 = *v118;
                long long v121 = *(_OWORD *)(v30 + 480);
                *(_OWORD *)(v29 + 464) = *(_OWORD *)(v30 + 464);
                *(_OWORD *)(v29 + 480) = v121;
                long long *v117 = v120;
              }
              else
              {
                *(void *)(v29 + 448) = *(void *)(v30 + 448);
                *(void *)(v29 + 456) = *(void *)(v30 + 456);
                *(void *)(v29 + 464) = *(void *)(v30 + 464);
                *(void *)(v29 + 472) = *(void *)(v30 + 472);
                *(void *)(v29 + 480) = *(void *)(v30 + 480);
                *(void *)(v29 + 488) = *(void *)(v30 + 488);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
            }
            else if (v119 == 1)
            {
              sub_4B1DC(v29 + 448);
              long long v124 = *(_OWORD *)(v30 + 464);
              long long v123 = *(_OWORD *)(v30 + 480);
              long long *v117 = *v118;
              *(_OWORD *)(v29 + 464) = v124;
              *(_OWORD *)(v29 + 480) = v123;
            }
            else
            {
              *(void *)(v29 + 448) = *(void *)(v30 + 448);
              *(void *)(v29 + 456) = *(void *)(v30 + 456);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v29 + 464) = *(void *)(v30 + 464);
              *(void *)(v29 + 472) = *(void *)(v30 + 472);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v29 + 480) = *(void *)(v30 + 480);
              *(void *)(v29 + 488) = *(void *)(v30 + 488);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
            }
            *(void *)(v29 + 496) = *(void *)(v30 + 496);
            swift_retain();
            swift_release();
            uint64_t v127 = *(void *)(v30 + 528);
            if (*(void *)(v29 + 528))
            {
              if (v127)
              {
                sub_64C8((uint64_t *)(v29 + 504), (uint64_t *)(v30 + 504));
LABEL_146:
                *(unsigned char *)(v29 + 544) = *(unsigned char *)(v30 + 544);
                *(void *)(v29 + 552) = *(void *)(v30 + 552);
                *(void *)(v29 + 560) = *(void *)(v30 + 560);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_147;
              }
              sub_616C(v29 + 504);
            }
            else if (v127)
            {
              *(void *)(v29 + 528) = v127;
              *(void *)(v29 + 536) = *(void *)(v30 + 536);
              (**(void (***)(uint64_t, uint64_t))(v127 - 8))(v29 + 504, v30 + 504);
              goto LABEL_146;
            }
            long long v128 = *(_OWORD *)(v30 + 504);
            long long v129 = *(_OWORD *)(v30 + 520);
            *(void *)(v29 + 536) = *(void *)(v30 + 536);
            *(_OWORD *)(v29 + 504) = v128;
            *(_OWORD *)(v29 + 520) = v129;
            goto LABEL_146;
          }
LABEL_99:
          memcpy((void *)(v29 + 272), (const void *)(v30 + 272), 0x90uLL);
          goto LABEL_120;
        }
        if (v96 == 1)
        {
          sub_539D4(v29 + 272);
          goto LABEL_99;
        }
        *(void *)(v29 + 272) = *(void *)(v30 + 272);
        *(void *)(v29 + 280) = *(void *)(v30 + 280);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v29 + 288) = *(unsigned char *)(v30 + 288);
        uint64_t v100 = (long long *)(v29 + 296);
        uint64_t v101 = (long long *)(v30 + 296);
        uint64_t v102 = *(void *)(v30 + 304);
        if (*(void *)(v29 + 304) == 1)
        {
          if (v102 == 1)
          {
            long long v103 = *v101;
            long long v104 = *(_OWORD *)(v30 + 328);
            *(_OWORD *)(v29 + 312) = *(_OWORD *)(v30 + 312);
            *(_OWORD *)(v29 + 328) = v104;
            *uint64_t v100 = v103;
          }
          else
          {
            *(void *)(v29 + 296) = *(void *)(v30 + 296);
            *(void *)(v29 + 304) = *(void *)(v30 + 304);
            *(void *)(v29 + 312) = *(void *)(v30 + 312);
            *(void *)(v29 + 320) = *(void *)(v30 + 320);
            *(void *)(v29 + 328) = *(void *)(v30 + 328);
            *(void *)(v29 + 336) = *(void *)(v30 + 336);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
        }
        else if (v102 == 1)
        {
          sub_4B1DC(v29 + 296);
          long long v107 = *(_OWORD *)(v30 + 312);
          long long v106 = *(_OWORD *)(v30 + 328);
          *uint64_t v100 = *v101;
          *(_OWORD *)(v29 + 312) = v107;
          *(_OWORD *)(v29 + 328) = v106;
        }
        else
        {
          *(void *)(v29 + 296) = *(void *)(v30 + 296);
          *(void *)(v29 + 304) = *(void *)(v30 + 304);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v29 + 312) = *(void *)(v30 + 312);
          *(void *)(v29 + 320) = *(void *)(v30 + 320);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v29 + 328) = *(void *)(v30 + 328);
          *(void *)(v29 + 336) = *(void *)(v30 + 336);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        *(void *)(v29 + 344) = *(void *)(v30 + 344);
        swift_retain();
        swift_release();
        uint64_t v110 = *(void *)(v30 + 376);
        if (*(void *)(v29 + 376))
        {
          if (v110)
          {
            sub_64C8((uint64_t *)(v29 + 352), (uint64_t *)(v30 + 352));
LABEL_119:
            *(unsigned char *)(v29 + 392) = *(unsigned char *)(v30 + 392);
            *(void *)(v29 + 400) = *(void *)(v30 + 400);
            *(void *)(v29 + 408) = *(void *)(v30 + 408);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_120;
          }
          sub_616C(v29 + 352);
        }
        else if (v110)
        {
          *(void *)(v29 + 376) = v110;
          *(void *)(v29 + 384) = *(void *)(v30 + 384);
          (**(void (***)(uint64_t, uint64_t))(v110 - 8))(v29 + 352, v30 + 352);
          goto LABEL_119;
        }
        long long v111 = *(_OWORD *)(v30 + 352);
        long long v112 = *(_OWORD *)(v30 + 368);
        *(void *)(v29 + 384) = *(void *)(v30 + 384);
        *(_OWORD *)(v29 + 352) = v111;
        *(_OWORD *)(v29 + 368) = v112;
        goto LABEL_119;
      }
LABEL_30:
      memcpy((void *)(v29 + 120), (const void *)(v30 + 120), 0x90uLL);
      goto LABEL_93;
    }
    if (v44 == 1)
    {
      sub_539D4(v29 + 120);
      goto LABEL_30;
    }
    *(void *)(v29 + 120) = *(void *)(v30 + 120);
    *(void *)(v29 + 128) = *(void *)(v30 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v29 + 136) = *(unsigned char *)(v30 + 136);
    uint64_t v83 = (long long *)(v29 + 144);
    id v84 = (long long *)(v30 + 144);
    uint64_t v85 = *(void *)(v30 + 152);
    if (*(void *)(v29 + 152) == 1)
    {
      if (v85 == 1)
      {
        long long v86 = *v84;
        long long v87 = *(_OWORD *)(v30 + 176);
        *(_OWORD *)(v29 + 160) = *(_OWORD *)(v30 + 160);
        *(_OWORD *)(v29 + 176) = v87;
        *uint64_t v83 = v86;
      }
      else
      {
        *(void *)(v29 + 144) = *(void *)(v30 + 144);
        *(void *)(v29 + 152) = *(void *)(v30 + 152);
        *(void *)(v29 + 160) = *(void *)(v30 + 160);
        *(void *)(v29 + 168) = *(void *)(v30 + 168);
        *(void *)(v29 + 176) = *(void *)(v30 + 176);
        *(void *)(v29 + 184) = *(void *)(v30 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v85 == 1)
    {
      sub_4B1DC(v29 + 144);
      long long v90 = *(_OWORD *)(v30 + 160);
      long long v89 = *(_OWORD *)(v30 + 176);
      *uint64_t v83 = *v84;
      *(_OWORD *)(v29 + 160) = v90;
      *(_OWORD *)(v29 + 176) = v89;
    }
    else
    {
      *(void *)(v29 + 144) = *(void *)(v30 + 144);
      *(void *)(v29 + 152) = *(void *)(v30 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v29 + 160) = *(void *)(v30 + 160);
      *(void *)(v29 + 168) = *(void *)(v30 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v29 + 176) = *(void *)(v30 + 176);
      *(void *)(v29 + 184) = *(void *)(v30 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(v29 + 192) = *(void *)(v30 + 192);
    swift_retain();
    swift_release();
    uint64_t v93 = *(void *)(v30 + 224);
    if (*(void *)(v29 + 224))
    {
      if (v93)
      {
        sub_64C8((uint64_t *)(v29 + 200), (uint64_t *)(v30 + 200));
LABEL_92:
        *(unsigned char *)(v29 + 240) = *(unsigned char *)(v30 + 240);
        *(void *)(v29 + 248) = *(void *)(v30 + 248);
        *(void *)(v29 + 256) = *(void *)(v30 + 256);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_93;
      }
      sub_616C(v29 + 200);
    }
    else if (v93)
    {
      *(void *)(v29 + 224) = v93;
      *(void *)(v29 + 232) = *(void *)(v30 + 232);
      (**(void (***)(uint64_t, uint64_t))(v93 - 8))(v29 + 200, v30 + 200);
      goto LABEL_92;
    }
    long long v94 = *(_OWORD *)(v30 + 200);
    long long v95 = *(_OWORD *)(v30 + 216);
    *(void *)(v29 + 232) = *(void *)(v30 + 232);
    *(_OWORD *)(v29 + 200) = v94;
    *(_OWORD *)(v29 + 216) = v95;
    goto LABEL_92;
  }
  if (v33)
  {
LABEL_21:
    uint64_t v40 = sub_5664(&qword_BAB10);
    memcpy((void *)v29, (const void *)v30, *(void *)(*(void *)(v40 - 8) + 64));
    return v5;
  }
  v163 = v5;
  *(void *)uint64_t v29 = *(void *)v30;
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(unsigned char *)(v29 + 40) = *(unsigned char *)(v30 + 40);
  *(void *)(v29 + 48) = *(void *)(v30 + 48);
  uint64_t v34 = *(void **)(v30 + 56);
  *(void *)(v29 + 56) = v34;
  uint64_t v35 = *(void *)(v30 + 88);
  *(void *)(v29 + 88) = v35;
  *(void *)(v29 + 96) = *(void *)(v30 + 96);
  uint64_t v36 = **(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v37 = v34;
  v36(v29 + 64, v30 + 64, v35);
  *(void *)(v29 + 104) = *(void *)(v30 + 104);
  *(void *)(v29 + 112) = *(void *)(v30 + 112);
  uint64_t v38 = *(void *)(v30 + 128);
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    memcpy((void *)(v29 + 120), (const void *)(v30 + 120), 0x90uLL);
    uint64_t v39 = v31;
  }
  else
  {
    *(void *)(v29 + 120) = *(void *)(v30 + 120);
    *(void *)(v29 + 128) = *(void *)(v30 + 128);
    *(unsigned char *)(v29 + 136) = *(unsigned char *)(v30 + 136);
    uint64_t v48 = *(void *)(v30 + 152);
    swift_bridgeObjectRetain();
    if (v48 == 1)
    {
      long long v49 = *(_OWORD *)(v30 + 144);
      long long v50 = *(_OWORD *)(v30 + 176);
      *(_OWORD *)(v29 + 160) = *(_OWORD *)(v30 + 160);
      *(_OWORD *)(v29 + 176) = v50;
      *(_OWORD *)(v29 + 144) = v49;
    }
    else
    {
      *(void *)(v29 + 144) = *(void *)(v30 + 144);
      *(void *)(v29 + 152) = *(void *)(v30 + 152);
      *(void *)(v29 + 160) = *(void *)(v30 + 160);
      *(void *)(v29 + 168) = *(void *)(v30 + 168);
      *(void *)(v29 + 176) = *(void *)(v30 + 176);
      *(void *)(v29 + 184) = *(void *)(v30 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v39 = v31;
    *(void *)(v29 + 192) = *(void *)(v30 + 192);
    uint64_t v51 = *(void *)(v30 + 224);
    swift_retain();
    if (v51)
    {
      *(void *)(v29 + 224) = v51;
      *(void *)(v29 + 232) = *(void *)(v30 + 232);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v51 - 8))(v29 + 200, v30 + 200, v51);
    }
    else
    {
      long long v53 = *(_OWORD *)(v30 + 200);
      long long v54 = *(_OWORD *)(v30 + 216);
      *(void *)(v29 + 232) = *(void *)(v30 + 232);
      *(_OWORD *)(v29 + 200) = v53;
      *(_OWORD *)(v29 + 216) = v54;
    }
    *(unsigned char *)(v29 + 240) = *(unsigned char *)(v30 + 240);
    *(void *)(v29 + 248) = *(void *)(v30 + 248);
    *(void *)(v29 + 256) = *(void *)(v30 + 256);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v29 + 264) = *(unsigned char *)(v30 + 264);
  if (*(void *)(v30 + 280) == 1)
  {
    memcpy((void *)(v29 + 272), (const void *)(v30 + 272), 0x90uLL);
  }
  else
  {
    *(void *)(v29 + 272) = *(void *)(v30 + 272);
    *(void *)(v29 + 280) = *(void *)(v30 + 280);
    *(unsigned char *)(v29 + 288) = *(unsigned char *)(v30 + 288);
    uint64_t v55 = *(void *)(v30 + 304);
    swift_bridgeObjectRetain();
    if (v55 == 1)
    {
      long long v56 = *(_OWORD *)(v30 + 296);
      long long v57 = *(_OWORD *)(v30 + 328);
      *(_OWORD *)(v29 + 312) = *(_OWORD *)(v30 + 312);
      *(_OWORD *)(v29 + 328) = v57;
      *(_OWORD *)(v29 + 296) = v56;
    }
    else
    {
      *(void *)(v29 + 296) = *(void *)(v30 + 296);
      *(void *)(v29 + 304) = *(void *)(v30 + 304);
      *(void *)(v29 + 312) = *(void *)(v30 + 312);
      *(void *)(v29 + 320) = *(void *)(v30 + 320);
      *(void *)(v29 + 328) = *(void *)(v30 + 328);
      *(void *)(v29 + 336) = *(void *)(v30 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)(v29 + 344) = *(void *)(v30 + 344);
    uint64_t v58 = *(void *)(v30 + 376);
    swift_retain();
    if (v58)
    {
      *(void *)(v29 + 376) = v58;
      *(void *)(v29 + 384) = *(void *)(v30 + 384);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v58 - 8))(v29 + 352, v30 + 352, v58);
    }
    else
    {
      long long v59 = *(_OWORD *)(v30 + 352);
      long long v60 = *(_OWORD *)(v30 + 368);
      *(void *)(v29 + 384) = *(void *)(v30 + 384);
      *(_OWORD *)(v29 + 352) = v59;
      *(_OWORD *)(v29 + 368) = v60;
    }
    *(unsigned char *)(v29 + 392) = *(unsigned char *)(v30 + 392);
    *(void *)(v29 + 400) = *(void *)(v30 + 400);
    *(void *)(v29 + 408) = *(void *)(v30 + 408);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v29 + 416) = *(unsigned char *)(v30 + 416);
  if (*(void *)(v30 + 432) == 1)
  {
    memcpy((void *)(v29 + 424), (const void *)(v30 + 424), 0x90uLL);
  }
  else
  {
    *(void *)(v29 + 424) = *(void *)(v30 + 424);
    *(void *)(v29 + 432) = *(void *)(v30 + 432);
    *(unsigned char *)(v29 + 440) = *(unsigned char *)(v30 + 440);
    uint64_t v61 = *(void *)(v30 + 456);
    swift_bridgeObjectRetain();
    if (v61 == 1)
    {
      long long v62 = *(_OWORD *)(v30 + 448);
      long long v63 = *(_OWORD *)(v30 + 480);
      *(_OWORD *)(v29 + 464) = *(_OWORD *)(v30 + 464);
      *(_OWORD *)(v29 + 480) = v63;
      *(_OWORD *)(v29 + 448) = v62;
    }
    else
    {
      *(void *)(v29 + 448) = *(void *)(v30 + 448);
      *(void *)(v29 + 456) = *(void *)(v30 + 456);
      *(void *)(v29 + 464) = *(void *)(v30 + 464);
      *(void *)(v29 + 472) = *(void *)(v30 + 472);
      *(void *)(v29 + 480) = *(void *)(v30 + 480);
      *(void *)(v29 + 488) = *(void *)(v30 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)(v29 + 496) = *(void *)(v30 + 496);
    uint64_t v64 = *(void *)(v30 + 528);
    swift_retain();
    if (v64)
    {
      *(void *)(v29 + 528) = v64;
      *(void *)(v29 + 536) = *(void *)(v30 + 536);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v64 - 8))(v29 + 504, v30 + 504, v64);
    }
    else
    {
      long long v65 = *(_OWORD *)(v30 + 504);
      long long v66 = *(_OWORD *)(v30 + 520);
      *(void *)(v29 + 536) = *(void *)(v30 + 536);
      *(_OWORD *)(v29 + 504) = v65;
      *(_OWORD *)(v29 + 520) = v66;
    }
    *(unsigned char *)(v29 + 544) = *(unsigned char *)(v30 + 544);
    *(void *)(v29 + 552) = *(void *)(v30 + 552);
    *(void *)(v29 + 560) = *(void *)(v30 + 560);
    swift_bridgeObjectRetain();
  }
  *(void *)(v29 + 568) = *(void *)(v30 + 568);
  uint64_t v67 = *(void *)(v30 + 584);
  swift_bridgeObjectRetain();
  if (v67 == 1)
  {
    memcpy((void *)(v29 + 576), (const void *)(v30 + 576), 0x90uLL);
    uint64_t v5 = v163;
  }
  else
  {
    *(void *)(v29 + 576) = *(void *)(v30 + 576);
    *(void *)(v29 + 584) = *(void *)(v30 + 584);
    *(unsigned char *)(v29 + 592) = *(unsigned char *)(v30 + 592);
    uint64_t v68 = *(void *)(v30 + 608);
    swift_bridgeObjectRetain();
    if (v68 == 1)
    {
      long long v69 = *(_OWORD *)(v30 + 600);
      long long v70 = *(_OWORD *)(v30 + 632);
      *(_OWORD *)(v29 + 616) = *(_OWORD *)(v30 + 616);
      *(_OWORD *)(v29 + 632) = v70;
      *(_OWORD *)(v29 + 600) = v69;
    }
    else
    {
      *(void *)(v29 + 600) = *(void *)(v30 + 600);
      *(void *)(v29 + 608) = *(void *)(v30 + 608);
      *(void *)(v29 + 616) = *(void *)(v30 + 616);
      *(void *)(v29 + 624) = *(void *)(v30 + 624);
      *(void *)(v29 + 632) = *(void *)(v30 + 632);
      *(void *)(v29 + 640) = *(void *)(v30 + 640);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v5 = v163;
    *(void *)(v29 + 648) = *(void *)(v30 + 648);
    uint64_t v71 = *(void *)(v30 + 680);
    swift_retain();
    if (v71)
    {
      *(void *)(v29 + 680) = v71;
      *(void *)(v29 + 688) = *(void *)(v30 + 688);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v71 - 8))(v29 + 656, v30 + 656, v71);
    }
    else
    {
      long long v72 = *(_OWORD *)(v30 + 656);
      long long v73 = *(_OWORD *)(v30 + 672);
      *(void *)(v29 + 688) = *(void *)(v30 + 688);
      *(_OWORD *)(v29 + 656) = v72;
      *(_OWORD *)(v29 + 672) = v73;
    }
    *(unsigned char *)(v29 + 696) = *(unsigned char *)(v30 + 696);
    *(void *)(v29 + 704) = *(void *)(v30 + 704);
    *(void *)(v29 + 712) = *(void *)(v30 + 712);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v29 + 720) = *(unsigned char *)(v30 + 720);
  *(void *)(v29 + 728) = *(void *)(v30 + 728);
  *(void *)(v29 + 736) = *(void *)(v30 + 736);
  int v74 = *(unsigned __int8 *)(v30 + 792);
  swift_bridgeObjectRetain();
  if (v74 == 255)
  {
    long long v75 = *(_OWORD *)(v30 + 744);
    long long v76 = *(_OWORD *)(v30 + 760);
    long long v77 = *(_OWORD *)(v30 + 776);
    *(unsigned char *)(v29 + 792) = *(unsigned char *)(v30 + 792);
    *(_OWORD *)(v29 + 760) = v76;
    *(_OWORD *)(v29 + 776) = v77;
    *(_OWORD *)(v29 + 744) = v75;
  }
  else if (v74)
  {
    uint64_t v78 = *(void *)(v30 + 768);
    *(void *)(v29 + 768) = v78;
    *(void *)(v29 + 776) = *(void *)(v30 + 776);
    (**(void (***)(uint64_t, uint64_t))(v78 - 8))(v29 + 744, v30 + 744);
    *(unsigned char *)(v29 + 792) = 1;
  }
  else
  {
    *(void *)(v29 + 744) = *(void *)(v30 + 744);
    *(void *)(v29 + 752) = *(void *)(v30 + 752);
    *(void *)(v29 + 760) = *(void *)(v30 + 760);
    *(void *)(v29 + 768) = *(void *)(v30 + 768);
    *(void *)(v29 + 776) = *(void *)(v30 + 776);
    *(void *)(v29 + 784) = *(void *)(v30 + 784);
    *(unsigned char *)(v29 + 792) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v29 + 793) = *(unsigned char *)(v30 + 793);
  *(_WORD *)(v29 + 794) = *(_WORD *)(v30 + 794);
  uint64_t v79 = *(int *)(v39 + 36);
  uint64_t v80 = v29 + v79;
  uint64_t v81 = v30 + v79;
  uint64_t v82 = sub_8F420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
  sub_56F8(v29, 0, 1, v39);
  return v5;
}

void *sub_73310(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = sub_8EBC0();
  if (sub_5754((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_5664(&qword_BAAF8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    _OWORD v7[2] = v8[2];
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_8E980();
    if (sub_5754((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_5664((uint64_t *)&unk_BC7F0);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      sub_56F8((uint64_t)v12, 0, 1, v14);
    }
    sub_56F8((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  size_t v17 = (_OWORD *)((char *)a1 + v16);
  uint64_t v18 = (_OWORD *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for ShelfPage();
  if (sub_5754((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_5664(&qword_BAB10);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *size_t v17 = *v18;
    *((void *)v17 + 2) = *((void *)v18 + 2);
    *(_OWORD *)((char *)v17 + 24) = *(_OWORD *)((char *)v18 + 24);
    memcpy((char *)v17 + 40, (char *)v18 + 40, 0x2F4uLL);
    uint64_t v21 = *(int *)(v19 + 36);
    uint64_t v22 = (char *)v17 + v21;
    uint64_t v23 = (char *)v18 + v21;
    uint64_t v24 = sub_8F420();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    sub_56F8((uint64_t)v17, 0, 1, v19);
  }
  return a1;
}

void *sub_73560(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = sub_8EBC0();
  int v10 = sub_5754(v7, 1, v9);
  int v11 = sub_5754(v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *(void *)(v7 + 16) = *(void *)(v8 + 16);
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (void *)(v7 + v12);
      uint64_t v14 = (const void *)(v8 + v12);
      uint64_t v15 = sub_8E980();
      if (sub_5754((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_5664((uint64_t *)&unk_BC7F0);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        sub_56F8((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v27 = v7;
      uint64_t v28 = v9;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_75118(v7, (void (*)(void))&type metadata accessor for JSServiceRequest);
LABEL_7:
    size_t v17 = *(void *)(*(void *)(sub_5664(&qword_BAAF8) - 8) + 64);
    uint64_t v18 = (void *)v7;
    uint64_t v19 = (const void *)v8;
LABEL_8:
    memcpy(v18, v19, v17);
    goto LABEL_15;
  }
  uint64_t v20 = *(void *)(v8 + 8);
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = v20;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(int *)(v9 + 24);
  uint64_t v22 = v7 + v21;
  uint64_t v23 = v8 + v21;
  uint64_t v24 = sub_8E980();
  int v25 = sub_5754(v22, 1, v24);
  int v26 = sub_5754(v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      uint64_t v27 = v22;
      uint64_t v28 = v24;
LABEL_14:
      sub_56F8(v27, 0, 1, v28);
      goto LABEL_15;
    }
    goto LABEL_28;
  }
  uint64_t v45 = *(void *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v22, v24);
LABEL_28:
    size_t v17 = *(void *)(*(void *)(sub_5664((uint64_t *)&unk_BC7F0) - 8) + 64);
    uint64_t v18 = (void *)v22;
    uint64_t v19 = (const void *)v23;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 40))(v22, v23, v24);
LABEL_15:
  uint64_t v29 = *(int *)(a3 + 24);
  uint64_t v30 = (uint64_t)a1 + v29;
  uint64_t v31 = (uint64_t)a2 + v29;
  uint64_t v32 = type metadata accessor for ShelfPage();
  int v33 = sub_5754(v30, 1, v32);
  int v34 = sub_5754(v31, 1, v32);
  if (!v33)
  {
    if (v34)
    {
      sub_75118(v30, (void (*)(void))type metadata accessor for ShelfPage);
      goto LABEL_20;
    }
    *(void *)uint64_t v30 = *(void *)v31;
    swift_bridgeObjectRelease();
    *(void *)(v30 + 8) = *(void *)(v31 + 8);
    swift_bridgeObjectRelease();
    *(void *)(v30 + 16) = *(void *)(v31 + 16);
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v31 + 32);
    *(void *)(v30 + 24) = *(void *)(v31 + 24);
    *(void *)(v30 + 32) = v41;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 40) = *(unsigned char *)(v31 + 40);
    *(void *)(v30 + 48) = *(void *)(v31 + 48);
    swift_release();
    uint64_t v42 = *(void **)(v30 + 56);
    *(void *)(v30 + 56) = *(void *)(v31 + 56);

    sub_616C(v30 + 64);
    long long v43 = *(_OWORD *)(v31 + 80);
    *(_OWORD *)(v30 + 64) = *(_OWORD *)(v31 + 64);
    *(_OWORD *)(v30 + 80) = v43;
    *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
    *(void *)(v30 + 112) = *(void *)(v31 + 112);
    swift_bridgeObjectRelease();
    if (*(void *)(v30 + 128) == 1) {
      goto LABEL_25;
    }
    uint64_t v44 = *(void *)(v31 + 128);
    if (v44 == 1)
    {
      sub_539D4(v30 + 120);
LABEL_25:
      memcpy((void *)(v30 + 120), (const void *)(v31 + 120), 0x90uLL);
      goto LABEL_38;
    }
    *(void *)(v30 + 120) = *(void *)(v31 + 120);
    *(void *)(v30 + 128) = v44;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 136) = *(unsigned char *)(v31 + 136);
    if (*(void *)(v30 + 152) != 1)
    {
      uint64_t v46 = *(void *)(v31 + 152);
      if (v46 != 1)
      {
        *(void *)(v30 + 144) = *(void *)(v31 + 144);
        *(void *)(v30 + 152) = v46;
        swift_bridgeObjectRelease();
        uint64_t v48 = *(void *)(v31 + 168);
        *(void *)(v30 + 160) = *(void *)(v31 + 160);
        *(void *)(v30 + 168) = v48;
        swift_bridgeObjectRelease();
        uint64_t v49 = *(void *)(v31 + 184);
        *(void *)(v30 + 176) = *(void *)(v31 + 176);
        *(void *)(v30 + 184) = v49;
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      sub_4B1DC(v30 + 144);
    }
    long long v47 = *(_OWORD *)(v31 + 160);
    *(_OWORD *)(v30 + 144) = *(_OWORD *)(v31 + 144);
    *(_OWORD *)(v30 + 160) = v47;
    *(_OWORD *)(v30 + 176) = *(_OWORD *)(v31 + 176);
LABEL_35:
    *(void *)(v30 + 192) = *(void *)(v31 + 192);
    swift_release();
    if (*(void *)(v30 + 224)) {
      sub_616C(v30 + 200);
    }
    long long v50 = *(_OWORD *)(v31 + 216);
    *(_OWORD *)(v30 + 200) = *(_OWORD *)(v31 + 200);
    *(_OWORD *)(v30 + 216) = v50;
    *(void *)(v30 + 232) = *(void *)(v31 + 232);
    *(unsigned char *)(v30 + 240) = *(unsigned char *)(v31 + 240);
    uint64_t v51 = *(void *)(v31 + 256);
    *(void *)(v30 + 248) = *(void *)(v31 + 248);
    *(void *)(v30 + 256) = v51;
    swift_bridgeObjectRelease();
LABEL_38:
    *(unsigned char *)(v30 + 264) = *(unsigned char *)(v31 + 264);
    if (*(void *)(v30 + 280) == 1)
    {
LABEL_41:
      memcpy((void *)(v30 + 272), (const void *)(v31 + 272), 0x90uLL);
      goto LABEL_50;
    }
    uint64_t v52 = *(void *)(v31 + 280);
    if (v52 == 1)
    {
      sub_539D4(v30 + 272);
      goto LABEL_41;
    }
    *(void *)(v30 + 272) = *(void *)(v31 + 272);
    *(void *)(v30 + 280) = v52;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 288) = *(unsigned char *)(v31 + 288);
    if (*(void *)(v30 + 304) != 1)
    {
      uint64_t v53 = *(void *)(v31 + 304);
      if (v53 != 1)
      {
        *(void *)(v30 + 296) = *(void *)(v31 + 296);
        *(void *)(v30 + 304) = v53;
        swift_bridgeObjectRelease();
        uint64_t v55 = *(void *)(v31 + 320);
        *(void *)(v30 + 312) = *(void *)(v31 + 312);
        *(void *)(v30 + 320) = v55;
        swift_bridgeObjectRelease();
        uint64_t v56 = *(void *)(v31 + 336);
        *(void *)(v30 + 328) = *(void *)(v31 + 328);
        *(void *)(v30 + 336) = v56;
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      sub_4B1DC(v30 + 296);
    }
    long long v54 = *(_OWORD *)(v31 + 312);
    *(_OWORD *)(v30 + 296) = *(_OWORD *)(v31 + 296);
    *(_OWORD *)(v30 + 312) = v54;
    *(_OWORD *)(v30 + 328) = *(_OWORD *)(v31 + 328);
LABEL_47:
    *(void *)(v30 + 344) = *(void *)(v31 + 344);
    swift_release();
    if (*(void *)(v30 + 376)) {
      sub_616C(v30 + 352);
    }
    long long v57 = *(_OWORD *)(v31 + 368);
    *(_OWORD *)(v30 + 352) = *(_OWORD *)(v31 + 352);
    *(_OWORD *)(v30 + 368) = v57;
    *(void *)(v30 + 384) = *(void *)(v31 + 384);
    *(unsigned char *)(v30 + 392) = *(unsigned char *)(v31 + 392);
    uint64_t v58 = *(void *)(v31 + 408);
    *(void *)(v30 + 400) = *(void *)(v31 + 400);
    *(void *)(v30 + 408) = v58;
    swift_bridgeObjectRelease();
LABEL_50:
    *(unsigned char *)(v30 + 416) = *(unsigned char *)(v31 + 416);
    if (*(void *)(v30 + 432) == 1)
    {
LABEL_53:
      memcpy((void *)(v30 + 424), (const void *)(v31 + 424), 0x90uLL);
      goto LABEL_62;
    }
    uint64_t v59 = *(void *)(v31 + 432);
    if (v59 == 1)
    {
      sub_4A89C(v30 + 424);
      goto LABEL_53;
    }
    *(void *)(v30 + 424) = *(void *)(v31 + 424);
    *(void *)(v30 + 432) = v59;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 440) = *(unsigned char *)(v31 + 440);
    if (*(void *)(v30 + 456) != 1)
    {
      uint64_t v60 = *(void *)(v31 + 456);
      if (v60 != 1)
      {
        *(void *)(v30 + 448) = *(void *)(v31 + 448);
        *(void *)(v30 + 456) = v60;
        swift_bridgeObjectRelease();
        uint64_t v62 = *(void *)(v31 + 472);
        *(void *)(v30 + 464) = *(void *)(v31 + 464);
        *(void *)(v30 + 472) = v62;
        swift_bridgeObjectRelease();
        uint64_t v63 = *(void *)(v31 + 488);
        *(void *)(v30 + 480) = *(void *)(v31 + 480);
        *(void *)(v30 + 488) = v63;
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      sub_4B1DC(v30 + 448);
    }
    long long v61 = *(_OWORD *)(v31 + 464);
    *(_OWORD *)(v30 + 448) = *(_OWORD *)(v31 + 448);
    *(_OWORD *)(v30 + 464) = v61;
    *(_OWORD *)(v30 + 480) = *(_OWORD *)(v31 + 480);
LABEL_59:
    *(void *)(v30 + 496) = *(void *)(v31 + 496);
    swift_release();
    if (*(void *)(v30 + 528)) {
      sub_616C(v30 + 504);
    }
    long long v64 = *(_OWORD *)(v31 + 520);
    *(_OWORD *)(v30 + 504) = *(_OWORD *)(v31 + 504);
    *(_OWORD *)(v30 + 520) = v64;
    *(void *)(v30 + 536) = *(void *)(v31 + 536);
    *(unsigned char *)(v30 + 544) = *(unsigned char *)(v31 + 544);
    *(void *)(v30 + 552) = *(void *)(v31 + 552);
    *(void *)(v30 + 560) = *(void *)(v31 + 560);
    swift_bridgeObjectRelease();
LABEL_62:
    *(void *)(v30 + 568) = *(void *)(v31 + 568);
    swift_bridgeObjectRelease();
    if (*(void *)(v30 + 584) == 1)
    {
LABEL_65:
      memcpy((void *)(v30 + 576), (const void *)(v31 + 576), 0x90uLL);
      goto LABEL_74;
    }
    uint64_t v65 = *(void *)(v31 + 584);
    if (v65 == 1)
    {
      sub_4A89C(v30 + 576);
      goto LABEL_65;
    }
    *(void *)(v30 + 576) = *(void *)(v31 + 576);
    *(void *)(v30 + 584) = v65;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 592) = *(unsigned char *)(v31 + 592);
    if (*(void *)(v30 + 608) != 1)
    {
      uint64_t v66 = *(void *)(v31 + 608);
      if (v66 != 1)
      {
        *(void *)(v30 + 600) = *(void *)(v31 + 600);
        *(void *)(v30 + 608) = v66;
        swift_bridgeObjectRelease();
        *(void *)(v30 + 616) = *(void *)(v31 + 616);
        *(void *)(v30 + 624) = *(void *)(v31 + 624);
        swift_bridgeObjectRelease();
        *(void *)(v30 + 632) = *(void *)(v31 + 632);
        *(void *)(v30 + 640) = *(void *)(v31 + 640);
        swift_bridgeObjectRelease();
        goto LABEL_71;
      }
      sub_4B1DC(v30 + 600);
    }
    long long v67 = *(_OWORD *)(v31 + 616);
    *(_OWORD *)(v30 + 600) = *(_OWORD *)(v31 + 600);
    *(_OWORD *)(v30 + 616) = v67;
    *(_OWORD *)(v30 + 632) = *(_OWORD *)(v31 + 632);
LABEL_71:
    *(void *)(v30 + 648) = *(void *)(v31 + 648);
    swift_release();
    if (*(void *)(v30 + 680)) {
      sub_616C(v30 + 656);
    }
    long long v68 = *(_OWORD *)(v31 + 672);
    *(_OWORD *)(v30 + 656) = *(_OWORD *)(v31 + 656);
    *(_OWORD *)(v30 + 672) = v68;
    *(void *)(v30 + 688) = *(void *)(v31 + 688);
    *(unsigned char *)(v30 + 696) = *(unsigned char *)(v31 + 696);
    *(void *)(v30 + 704) = *(void *)(v31 + 704);
    *(void *)(v30 + 712) = *(void *)(v31 + 712);
    swift_bridgeObjectRelease();
LABEL_74:
    *(unsigned char *)(v30 + 720) = *(unsigned char *)(v31 + 720);
    *(void *)(v30 + 728) = *(void *)(v31 + 728);
    *(void *)(v30 + 736) = *(void *)(v31 + 736);
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v30 + 792) != 255)
    {
      if (*(unsigned __int8 *)(v31 + 792) != 255 && a1 == a2) {
        goto LABEL_81;
      }
      sub_53A04(v30 + 744);
    }
    long long v70 = *(_OWORD *)(v31 + 760);
    *(_OWORD *)(v30 + 744) = *(_OWORD *)(v31 + 744);
    *(_OWORD *)(v30 + 760) = v70;
    *(_OWORD *)(v30 + 776) = *(_OWORD *)(v31 + 776);
    *(unsigned char *)(v30 + 792) = *(unsigned char *)(v31 + 792);
LABEL_81:
    *(unsigned char *)(v30 + 793) = *(unsigned char *)(v31 + 793);
    *(_WORD *)(v30 + 794) = *(_WORD *)(v31 + 794);
    uint64_t v71 = *(int *)(v32 + 36);
    uint64_t v72 = v30 + v71;
    uint64_t v73 = v31 + v71;
    uint64_t v74 = sub_8F420();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
    return a1;
  }
  if (v34)
  {
LABEL_20:
    uint64_t v39 = sub_5664(&qword_BAB10);
    memcpy((void *)v30, (const void *)v31, *(void *)(*(void *)(v39 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
  memcpy((void *)(v30 + 40), (const void *)(v31 + 40), 0x2F4uLL);
  uint64_t v35 = *(int *)(v32 + 36);
  uint64_t v36 = v30 + v35;
  uint64_t v37 = v31 + v35;
  uint64_t v38 = sub_8F420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  sub_56F8(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_73F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_73F34);
}

uint64_t sub_73F34(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_5664(&qword_BAAF8);
    sub_B704();
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v11 = sub_5664(&qword_BAB10);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    return sub_5754((uint64_t)a1 + v12, a2, v11);
  }
}

uint64_t sub_73FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_74008);
}

void *sub_74008(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    sub_5664(&qword_BAAF8);
    sub_B704();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_5664(&qword_BAB10);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (void *)sub_56F8((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ShelfPageDestination()
{
  uint64_t result = qword_BE058;
  if (!qword_BE058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_74100()
{
  sub_7420C(319, &qword_BE068, (void (*)(uint64_t))&type metadata accessor for JSServiceRequest);
  if (v0 <= 0x3F)
  {
    sub_7420C(319, (unint64_t *)&unk_BE070, (void (*)(uint64_t))type metadata accessor for ShelfPage);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_7420C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_8FD20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_74260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v66 = a1;
  uint64_t v71 = a3;
  uint64_t v6 = sub_8F390();
  uint64_t v7 = sub_3C870(v6);
  __chkstk_darwin(v7);
  sub_B7F0();
  uint64_t v61 = v9 - v8;
  uint64_t v10 = sub_5664(&qword_BAB10);
  uint64_t v11 = sub_3C870(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v62 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = sub_5664(&qword_BAAF8);
  uint64_t v17 = sub_3C870(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v61 - v21;
  uint64_t v23 = sub_5664(&qword_BB0B0);
  uint64_t v24 = sub_3C870(v23);
  __chkstk_darwin(v24);
  sub_B7F0();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = sub_8F320();
  uint64_t v64 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  sub_B7F0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = 0;
  int IsRunningInternalBuild = deviceIsRunningInternalBuild();
  uint64_t v65 = a2;
  uint64_t v63 = v28;
  if (!IsRunningInternalBuild) {
    goto LABEL_10;
  }
  if (objc_msgSend(self, "isRunningUnitTests", v61))
  {
    uint64_t v32 = 0;
    goto LABEL_10;
  }
  uint64_t v34 = type metadata accessor for ShelfPageDestination();
  sub_8F330();
  if ((sub_8F2F0() & 1) == 0)
  {
    sub_8F2D0();
    uint64_t v35 = sub_8F8D0();
    if (sub_5754(v27, 1, v35) != 1)
    {
      sub_5664(&qword_BBBD8);
      uint64_t v32 = sub_8F8C0();
      sub_7358();
      v38();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v31, v63);
      goto LABEL_9;
    }
    sub_3C708(v27, &qword_BB0B0);
    uint64_t v28 = v63;
  }
  uint64_t v36 = sub_8F8E0();
  sub_7516C((unint64_t *)&qword_BAAD8, (void (*)(uint64_t))&type metadata accessor for JSONError);
  swift_allocError();
  *uint64_t v37 = 0x666E496775626564;
  v37[1] = 0xE90000000000006FLL;
  v37[2] = v34;
  (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v37, enum case for JSONError.missingProperty(_:), v36);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v31, v28);
  swift_errorRelease();
  uint64_t v32 = 0;
  uint64_t v4 = 0;
LABEL_9:
  a2 = v65;
LABEL_10:
  *uint64_t v71 = v32;
  uint64_t v39 = type metadata accessor for ShelfPageDestination();
  __chkstk_darwin(v39);
  *(&v61 - 2) = a2;
  sub_3BF8();
  if (v4)
  {
    swift_errorRelease();
    uint64_t v40 = 1;
  }
  else
  {
    uint64_t v40 = 0;
  }
  uint64_t v41 = sub_8EBC0();
  sub_56F8((uint64_t)v22, v40, 1, v41);
  uint64_t v42 = (uint64_t)v71 + *(int *)(v39 + 20);
  uint64_t v43 = sub_25228((uint64_t)v22, v42, &qword_BAAF8);
  __chkstk_darwin(v43);
  *(&v61 - 2) = v65;
  sub_3C30();
  uint64_t v44 = type metadata accessor for ShelfPage();
  sub_56F8((uint64_t)v15, 0, 1, v44);
  uint64_t v45 = (uint64_t)v71 + *(int *)(v39 + 24);
  sub_25228((uint64_t)v15, v45, &qword_BAB10);
  sub_13740(v42, (uint64_t)v20, &qword_BAAF8);
  LODWORD(v42) = sub_5754((uint64_t)v20, 1, v41);
  sub_3C708((uint64_t)v20, &qword_BAAF8);
  if (v42 == 1
    && (uint64_t v46 = v62,
        sub_13740(v45, v62, &qword_BAB10),
        int v47 = sub_5754(v46, 1, v44),
        sub_3C708(v46, &qword_BAB10),
        v47 == 1))
  {
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v70 = v39;
    uint64_t v48 = sub_8374(v69);
    sub_75068((uint64_t)v71, (uint64_t)v48);
    id v49 = (id)AMSLogKey();
    if (v49)
    {
      long long v50 = v49;
      uint64_t v51 = sub_8F9D0();
      uint64_t v53 = v52;

      sub_8F380();
      v72._countAndFlagsBits = 0;
      v72._object = (void *)0xE000000000000000;
      sub_8F370(v72);
      sub_820C(v69, v70);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v67[0] = DynamicType;
      sub_8F360();
      sub_3C708((uint64_t)v67, &qword_BC780);
      v73._countAndFlagsBits = 5972026;
      v73._object = (void *)0xE300000000000000;
      sub_8F370(v73);
      uint64_t MetatypeMetadata = &type metadata for String;
      v67[0] = v51;
      v67[1] = v53;
      sub_8F360();
      sub_3C708((uint64_t)v67, &qword_BC780);
      v55._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v74._countAndFlagsBits = 0;
      v74._object = (void *)0xE000000000000000;
      sub_8F370(v74);
      sub_820C(v69, v70);
      uint64_t v57 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v67[0] = v57;
      sub_8F360();
      sub_3C708((uint64_t)v67, &qword_BC780);
      v55._countAndFlagsBits = 58;
    }
    v55._object = (void *)0xE100000000000000;
    sub_8F370(v55);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v69);
    sub_8F340();
    sub_4366C();
    swift_bridgeObjectRelease();
    sub_750CC();
    swift_allocError();
    swift_willThrow();
    sub_7358();
    v58();
    sub_75118((uint64_t)v71, (void (*)(void))type metadata accessor for ShelfPageDestination);
  }
  else
  {
    sub_7358();
    v56();
  }
  sub_8F3F0();
  sub_13858();
  sub_7358();
  return v59();
}

uint64_t sub_74B94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_5664(&qword_BB410);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8F270();
  uint64_t v5 = sub_8F530();
  if (sub_5754((uint64_t)v4, 1, v5) == 1)
  {
    uint64_t result = sub_3C708((uint64_t)v4, &qword_BB410);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = sub_8F520();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  *a1 = v7;
  return result;
}

uint64_t sub_74CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 16))(&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8EBA0();
  uint64_t v13 = sub_8EBC0();
  return sub_56F8(a3, 0, 1, v13);
}

uint64_t sub_74E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8F3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_8F320();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShelfPage();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  sub_7516C(&qword_BE0B0, (void (*)(uint64_t))type metadata accessor for ShelfPage);
  return sub_8F5A0();
}

uint64_t sub_75040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_74260(a1, a2, a3);
}

uint64_t sub_75058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_74CBC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_75060(uint64_t a1)
{
  return sub_74E70(a1, *(void *)(v1 + 16));
}

uint64_t sub_75068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfPageDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_750CC()
{
  unint64_t result = qword_BE0A8;
  if (!qword_BE0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE0A8);
  }
  return result;
}

uint64_t sub_75118(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_13858();
  sub_7358();
  v3();
  return a1;
}

uint64_t sub_7516C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShelfPageDestination.DecodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x75250);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageDestination.DecodingError()
{
  return &type metadata for ShelfPageDestination.DecodingError;
}

unint64_t sub_7528C()
{
  unint64_t result = qword_BE0B8;
  if (!qword_BE0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE0B8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ShelfPageError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ShelfPageError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ShelfPageError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ShelfPageError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfPageError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfPageError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageError()
{
  return &type metadata for ShelfPageError;
}

id sub_75440()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  id v1 = objc_msgSendSuper2(&v3, "init");
  [v1 setContentInsetAdjustmentBehavior:2];
  [v1 setScrollEnabled:0];

  return v1;
}

id sub_754D4(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  id v3 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    [v5 setContentInsetAdjustmentBehavior:2];
    [v5 setScrollEnabled:0];
  }
  return v4;
}

id sub_75588(void *a1, double a2, double a3, double a4, double a5)
{
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  id v11 = objc_msgSendSuper2(&v13, "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);
  [v11 setContentInsetAdjustmentBehavior:2];
  [v11 setScrollEnabled:0];

  return v11;
}

id sub_756D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  return objc_msgSendSuper2(&v2, "contentSize");
}

id sub_75764(double a1, double a2)
{
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  objc_msgSendSuper2(&v6, "setContentSize:", a1, a2);
  return [v2 invalidateIntrinsicContentSize];
}

CGFloat sub_75804()
{
  id v1 = [v0 collectionViewLayout];
  [v1 collectionViewContentSize];

  return UIViewNoIntrinsicMetric;
}

id sub_7586C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPageFooterCollectionView()
{
  return self;
}

uint64_t sub_758C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_759E4(a1, (uint64_t)__src);
  memcpy(__dst, __src, sizeof(__dst));
  if (LOBYTE(__dst[2]))
  {
    if (LOBYTE(__dst[2]) == 1)
    {
      id v5 = &unk_B1EA8;
      objc_super v6 = sub_76D84;
    }
    else
    {
      id v5 = &unk_B1F48;
      objc_super v6 = sub_770A8;
    }
    uint64_t v8 = sub_75A80((uint64_t)__dst, a4, (uint64_t)v5, (uint64_t)v6);
  }
  else
  {
    sub_7621C((uint64_t)&__dst[3], (uint64_t)v12, &qword_BD710);
    id v7 = sub_75B84((uint64_t)v12, __dst[9], __dst[16], (NSString)__dst[17], a4);
    sub_5664(&qword_BE0E8);
    [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v7];
    uint64_t v8 = sub_8F7C0();
  }
  sub_539D4((uint64_t)__dst);
  return v8;
}

uint64_t sub_759E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_75A40(uint64_t a1, uint64_t a2)
{
  return sub_75A80(a1, a2, (uint64_t)&unk_B1EA8, (uint64_t)sub_76D84);
}

uint64_t sub_75A60(uint64_t a1, uint64_t a2)
{
  return sub_75A80(a1, a2, (uint64_t)&unk_B1F48, (uint64_t)sub_770A8);
}

uint64_t sub_75A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_5664(&qword_BE0E8);
  uint64_t v7 = sub_8F820();
  sub_76280(a1, a2);
  sub_76D24(a1, (uint64_t)v11);
  uint64_t v8 = (void *)swift_allocObject();
  memcpy(v8 + 2, v11, 0x90uLL);
  v8[20] = a2;
  v8[21] = v7;
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  swift_retain();
  swift_retain();
  uint64_t v9 = (void *)sub_8FBD0();
  sub_76E1C(v9, a4, (uint64_t)v8);

  swift_release();
  swift_release();
  return v7;
}

id sub_75B84(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5)
{
  id v9 = [objc_allocWithZone((Class)AMSUICommonStackView) init];
  sub_7621C(a1, (uint64_t)v43, &qword_BD710);
  if (*((void *)&v43[0] + 1) == 1)
  {
    id v10 = objc_allocWithZone((Class)sub_8EB70());
    id v11 = (void *)sub_8EB60();
    id v12 = [v11 layer];
    id v13 = objc_msgSend(self, "ams_mediaBorder");
    id v14 = [v13 CGColor];

    [v12 setBorderColor:v14];
    id v15 = [v11 layer];
    [v15 setBorderWidth:1.0];

    sub_8A18C(1.0);
    if (a2)
    {
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))&stru_108.segname[(swift_isaMask & *v11) + 16];
      uint64_t v17 = swift_retain();
      v16(v17, a5);
      swift_release();
    }
    [v9 addArrangedSubview:v11];

    uint64_t v18 = &selRef_hasSystemTelephonyOfAnyKind;
  }
  else
  {
    v43[3] = v43[0];
    v43[4] = v43[1];
    v43[5] = v43[2];
    id v19 = objc_msgSend(objc_allocWithZone((Class)AMSUICommonImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v20 = [v19 heightAnchor];
    id v21 = [v20 constraintEqualToConstant:30.0];

    [v21 setActive:1];
    id v22 = [v19 widthAnchor];
    uint64_t v18 = &selRef_hasSystemTelephonyOfAnyKind;
    id v23 = [v22 constraintEqualToConstant:30.0];

    [v23 setActive:1];
    [self scale];
    sub_581E8(30.0, 30.0);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    *((void *)&v41 + 1) = sub_F040(0, (unint64_t *)&qword_BBBB0);
    *(void *)&long long v42 = &protocol witness table for OS_dispatch_queue;
    *(void *)&long long v40 = sub_8FBD0();
    sub_8F7A0();
    swift_release();
    sub_616C((uint64_t)&v40);
    [v9 addArrangedSubview:v19];

    swift_release();
  }
  id v24 = [objc_allocWithZone((Class)AMSUICommonLabel) v18[6]];
  sub_7621C(a1, (uint64_t)v39, &qword_BD710);
  if (*((void *)&v39[0] + 1) == 1
    || (long long v40 = v39[0],
        long long v41 = v39[1],
        long long v42 = v39[2],
        sub_7621C((uint64_t)&v42, (uint64_t)v44, &qword_BB788),
        sub_7621C((uint64_t)v44, (uint64_t)&v45, &qword_BB788),
        (uint64_t v25 = v46) == 0))
  {
    uint64_t v30 = self;
    id v31 = v24;
    id v32 = [v30 _preferredFontForTextStyle:UIFontTextStyleSubheadline variant:1024 maximumContentSizeCategory:UIContentSizeCategoryLarge];
    [v31 setFont:v32];

    id v33 = v31;
    if (a4) {
      a4 = sub_8F9A0();
    }
    [v31 setText:a4];
  }
  else
  {
    uint64_t v26 = v45;
    uint64_t v27 = self;
    id v28 = v24;
    id v29 = [v27 _preferredFontForTextStyle:UIFontTextStyleHeadline variant:1024 maximumContentSizeCategory:UIContentSizeCategoryLarge];
    [v28 setFont:v29];

    a4 = v28;
    sub_76C8C(v26, v25, a4);
  }

  [v24 setTextAlignment:1];
  uint64_t v34 = self;
  id v35 = v24;
  id v36 = objc_msgSend(v34, "ams_primaryText");
  [v35 setTextColor:v36];

  [v9 addArrangedSubview:v35];
  [v9 setSpacing:8.0];
  id v37 = v9;
  [v37 setAxis:0];

  return v37;
}

void sub_761B8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [Strong setImage:v1];
  }
}

uint64_t sub_7621C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5664(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_76280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664((uint64_t *)&unk_BC7F0);
  __chkstk_darwin(v4 - 8);
  objc_super v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 72))
  {
    uint64_t v25 = a2;
    uint64_t v7 = self;
    swift_retain();
    id v8 = [v7 mainBundle];
    if (qword_BA9A0 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_C6AC8;
    uint64_t v10 = qword_BA998;
    id v11 = (id)qword_C6AC8;
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_C6AC0;
    v26[0] = (uint64_t)_swiftEmptyArrayStorage;
    id v13 = (id)qword_C6AC0;
    if (v8)
    {
      id v14 = v8;
      sub_8FA50();
      if (*(void *)((char *)&dword_10 + (v26[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v26[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_8FA90();
      sub_8FAA0();
      sub_8FA80();
    }
    if (v9)
    {
      id v15 = v11;
      sub_8FA50();
      if (*(void *)((char *)&dword_10 + (v26[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v26[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_8FA90();
      sub_8FAA0();
      sub_8FA80();
    }
    if (v12)
    {
      id v16 = v13;
      sub_8FA50();
      if (*(void *)((char *)&dword_10 + (v26[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v26[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_8FA90();
      sub_8FAA0();
      sub_8FA80();
    }
    uint64_t v17 = v26[0];

    sub_F040(0, &qword_BE108);
    sub_8F560();
    sub_8F770();
    uint64_t v18 = (void *)v26[0];
    swift_retain();
    sub_8EAE0();
    sub_8EAF0();
    sub_76FD0((uint64_t)v26);
    uint64_t v19 = sub_8E980();
    uint64_t result = sub_5754((uint64_t)v6, 1, v19);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_5664(&qword_BE0F8);
      sub_8E950(v21);
      id v23 = v22;
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v6, v19);
      sub_76D90((uint64_t)v23, v17, v18);

      uint64_t v24 = sub_8F800();
      swift_release();

      return v24;
    }
  }
  else
  {
    sub_5664(&qword_BE0F8);
    sub_76F84();
    swift_allocError();
    return sub_8F7B0();
  }
  return result;
}

void sub_76630(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  objc_super v6 = *a1;
  sub_F040(0, &qword_BE0F0);
  uint64_t v7 = a3[16];
  id v8 = (void *)a3[17];
  sub_F040(0, &qword_BC650);
  sub_76D24((uint64_t)a3, (uint64_t)__src);
  uint64_t v9 = swift_allocObject();
  memcpy((void *)(v9 + 16), __src, 0x90uLL);
  *(void *)(v9 + 160) = a4;
  id v10 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  v17.is_nil = sub_8FCB0();
  v20.value._countAndFlagsBits = v7;
  v20.value._object = v8;
  v17.value.super.Class isa = (Class)v6;
  v18.value.super.super.Class isa = 0;
  v11.super.super.Class isa = sub_8FBB0(v20, v17, v18, v19).super.super.isa;
  NSString v12 = (NSString)a3[1];
  id v13 = v11.super.super.isa;
  if (v12) {
    NSString v12 = sub_8F9A0();
  }
  -[objc_class setAccessibilityLabel:](v11.super.super.isa, "setAccessibilityLabel:", v12, 0, 0, 0, sub_76F64, v9);

  [(objc_class *)v11.super.super.isa setIsAccessibilityElement:1];
  sub_6F8C((uint64_t)(a3 + 10), (uint64_t)__src);
  BOOL v14 = __src[3] != 0;
  id v15 = v11.super.super.isa;
  sub_EF88((uint64_t)__src, &qword_BAAD0);
  [(objc_class *)v15 setEnabled:v14];

  __src[0] = v15;
  sub_8F7F0();
}

uint64_t sub_76820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8EC80();
  __chkstk_darwin(v4 - 8);
  objc_super v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8F650();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8ECA0();
  sub_8F560();
  sub_8F770();
  uint64_t v11 = *(void *)&v14[0];
  sub_8F770();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  uint64_t v12 = sub_5664((uint64_t *)&unk_BCEB0);
  sub_56F8((uint64_t)v6, 0, 1, v12);
  memset(v14, 0, sizeof(v14));
  char v15 = -1;
  (*(void (**)(uint64_t, char *, uint64_t, _OWORD *))(*(void *)v11 + 216))(a1, v6, a2, v14);
  swift_release();
  swift_release();
  sub_EF88((uint64_t)v14, &qword_BB600);
  sub_EFE4((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_76A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*(unsigned char *)(a3 + 120) & 1) == 0)
  {
    sub_F040(0, &qword_BE0F0);
    sub_F040(0, &qword_BC650);
    sub_76D24(a3, (uint64_t)__src);
    uint64_t v6 = swift_allocObject();
    memcpy((void *)(v6 + 16), __src, 0x90uLL);
    *(void *)(v6 + 160) = a4;
    swift_retain();
    v13.value.super.super.Class isa = (Class)sub_8FCB0();
    v13.is_nil = 0;
    v7.super.super.Class isa = sub_8FBA0(UIBarButtonSystemItemClose, v13, v14).super.super.isa;
    NSString v8 = *(NSString *)(a3 + 8);
    uint64_t v9 = v7.super.super.isa;
    if (v8) {
      NSString v8 = sub_8F9A0();
    }
    -[objc_class setAccessibilityLabel:](v7.super.super.isa, "setAccessibilityLabel:", v8, 0, 0, 0, sub_7725C, v6);

    [(objc_class *)v7.super.super.isa setIsAccessibilityElement:1];
    sub_6F8C(a3 + 80, (uint64_t)__src);
    BOOL v10 = __src[3] != 0;
    uint64_t v11 = v7.super.super.isa;
    sub_EF88((uint64_t)__src, &qword_BAAD0);
    [(objc_class *)v11 setEnabled:v10];

    __src[0] = v11;
    sub_8F7F0();
  }
}

uint64_t sub_76C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6F8C(a2 + 80, (uint64_t)&v5);
  if (!v6) {
    return sub_EF88((uint64_t)&v5, &qword_BAAD0);
  }
  sub_573C(&v5, (uint64_t)v7);
  sub_76820((uint64_t)v7, a3);
  return sub_616C((uint64_t)v7);
}

void sub_76C8C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8F9A0();
  [a3 setText:v4];
}

uint64_t sub_76CE4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_76D1C(uint64_t *a1)
{
}

uint64_t sub_76D24(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_76D84(void **a1, uint64_t a2)
{
  sub_76630(a1, a2, (void *)(v2 + 16), *(void *)(v2 + 160));
}

id sub_76D90(uint64_t a1, uint64_t a2, void *a3)
{
  sub_F040(0, (unint64_t *)&qword_BB7A0);
  Class isa = sub_8FA60().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [a3 fetchImageWithURL:a1 searchBundles:isa];

  return v6;
}

uint64_t sub_76E1C(void *a1, uint64_t a2, uint64_t a3)
{
  v10[3] = sub_F040(0, (unint64_t *)&qword_BBBB0);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_retain_n();
  id v8 = a1;
  sub_8F7A0();
  swift_release();
  swift_release();
  return sub_616C((uint64_t)v10);
}

uint64_t sub_76F20()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_76F58(uint64_t a1)
{
  return sub_8E514(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_76F64(uint64_t a1)
{
  return sub_76C1C(a1, v1 + 16, *(void *)(v1 + 160));
}

unint64_t sub_76F84()
{
  unint64_t result = qword_BE100;
  if (!qword_BE100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE100);
  }
  return result;
}

uint64_t sub_76FD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_77020()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if (*(void *)(v0 + 120)) {
    sub_616C(v0 + 96);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 176, 7);
}

void sub_770A8(uint64_t a1, uint64_t a2)
{
  sub_76A38(a1, a2, v2 + 16, *(void *)(v2 + 160));
}

uint64_t sub_770B8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if (*(void *)(v0 + 120)) {
    sub_616C(v0 + 96);
  }
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 168, 7);
}

unsigned char *storeEnumTagSinglePayload for ShelfPageNavigationBarButtonProvider.ButtonDecodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x771D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageNavigationBarButtonProvider.ButtonDecodingError()
{
  return &type metadata for ShelfPageNavigationBarButtonProvider.ButtonDecodingError;
}

unint64_t sub_77210()
{
  unint64_t result = qword_BE110;
  if (!qword_BE110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE110);
  }
  return result;
}

void *sub_77264(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = type metadata accessor for Shelf();
  uint64_t v8 = sub_183C4(v7);
  uint64_t v10 = v9;
  __chkstk_darwin(v8);
  sub_3C938();
  int64_t v11 = *(void *)(a3 + 16);
  if (v11)
  {
    sub_48BBC(0, v11, 0);
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = a3 + v17;
    uint64_t v13 = *(void *)(v10 + 72);
    while (1)
    {
      a1(v12);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        sub_48BBC(v14 > 1, v15 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v15 + 1;
      sub_7E06C(v4, (uint64_t)_swiftEmptyArrayStorage + v17 + v15 * v13);
      v12 += v13;
      if (!--v11) {
        return _swiftEmptyArrayStorage;
      }
    }
    swift_release();
  }
  return _swiftEmptyArrayStorage;
}

void sub_773D8()
{
  sub_7E5E0();
  if (v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v4 > v1[3] >> 1)
  {
    if (v3 <= v4) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = v3;
    }
    sub_2E828(isUniquelyReferenced_nonNull_native, v9, 1, v1);
    uint64_t v1 = v10;
  }
  if (!*(void *)(v7 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  if ((v1[3] >> 1) - v1[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_5664(&qword_BDDA0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *uint64_t v0 = v1;
    return;
  }
  uint64_t v11 = v1[2];
  BOOL v6 = __OFADD__(v11, v2);
  uint64_t v12 = v11 + v2;
  if (!v6)
  {
    _OWORD v1[2] = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_774C4()
{
  sub_7E5E0();
  if (v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v4 > *(void *)(v1 + 24) >> 1)
  {
    if (v3 <= v4) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = v3;
    }
    sub_2EA10(isUniquelyReferenced_nonNull_native, v9, 1, v1);
    uint64_t v1 = v10;
  }
  if (!*(void *)(v7 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v11 = (*(void *)(v1 + 24) >> 1) - *(void *)(v1 + 16);
  type metadata accessor for Shelf();
  if (v11 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *uint64_t v0 = v1;
    return;
  }
  uint64_t v12 = *(void *)(v1 + 16);
  BOOL v6 = __OFADD__(v12, v2);
  uint64_t v13 = v12 + v2;
  if (!v6)
  {
    *(void *)(v1 + 16) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_775D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v5 > *(void *)(v3 + 24) >> 1)
  {
    if (v4 <= v5) {
      uint64_t v8 = v4 + v2;
    }
    else {
      uint64_t v8 = v4;
    }
    sub_2E720(isUniquelyReferenced_nonNull_native, v8, 1, (char *)v3);
    uint64_t v3 = v9;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return;
  }
  uint64_t v10 = *(void *)(v3 + 16);
  BOOL v11 = __OFADD__(v10, v2);
  uint64_t v12 = v10 + v2;
  if (!v11)
  {
    *(void *)(v3 + 16) = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_776BC()
{
  sub_3C7BC();
  uint64_t v126 = v0;
  char v3 = v2;
  uint64_t v117 = 0;
  uint64_t v4 = type metadata accessor for ShelfPage();
  sub_13858();
  __chkstk_darwin(v5);
  sub_22620();
  long long v128 = (uint64_t *)v6;
  uint64_t v7 = sub_5664(&qword_BD758);
  uint64_t v8 = sub_3C870(v7);
  __chkstk_darwin(v8);
  sub_22620();
  uint64_t v129 = v9;
  sub_4243C();
  uint64_t v130 = type metadata accessor for Shelf();
  sub_7084();
  uint64_t v122 = v10;
  __chkstk_darwin(v11);
  sub_4EBA4();
  uint64_t v118 = v12;
  sub_52270();
  __chkstk_darwin(v13);
  unint64_t v15 = (uint64_t *)((char *)&v115 - v14);
  __chkstk_darwin(v16);
  sub_7E400();
  uint64_t v125 = v17;
  sub_52270();
  __chkstk_darwin(v18);
  Swift::String_optional v20 = (uint64_t *)((char *)&v115 - v19);
  uint64_t v21 = sub_5664(&qword_BAB10);
  uint64_t v22 = sub_3C870(v21);
  __chkstk_darwin(v22);
  sub_7E4D4();
  __chkstk_darwin(v23);
  sub_7E400();
  uint64_t v119 = v24;
  sub_52270();
  __chkstk_darwin(v25);
  sub_7E400();
  uint64_t v120 = v26;
  sub_52270();
  __chkstk_darwin(v27);
  id v29 = (char *)&v115 - v28;
  __chkstk_darwin(v30);
  id v32 = (char *)&v115 - v31;
  __chkstk_darwin(v33);
  id v35 = (char *)&v115 - v34;
  __chkstk_darwin(v36);
  uint64_t v38 = (uint64_t *)((char *)&v115 - v37);
  uint64_t v127 = v4;
  switch(v3)
  {
    case 1:
      uint64_t v42 = v126;
      *(unsigned char *)(v126 + 16) = 1;
      uint64_t v43 = *(void *)(v42 + 24);
      uint64_t v44 = *(void *)(v43 + 16);
      if (!v44) {
        goto LABEL_36;
      }
      uint64_t v45 = v4;
      uint64_t v116 = v1;
      uint64_t v46 = v43 + 32;
      uint64_t v47 = v42 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
      uint64_t v115 = v43;
      swift_bridgeObjectRetain();
      sub_7E488();
      uint64_t v48 = 0;
      uint64_t v123 = v46;
      uint64_t v124 = v47;
      uint64_t v121 = v44;
      break;
    case 2:
      goto LABEL_57;
    case 3:
      goto LABEL_67;
    default:
      uint64_t v39 = v126;
      *(unsigned char *)(v126 + 16) = 0;
      uint64_t v40 = v39 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
      sub_7E488();
      sub_7E2D8(v40, (uint64_t)v38, &qword_BAB10);
      if (sub_5754((uint64_t)v38, 1, v4))
      {
        long long v41 = _swiftEmptyArrayStorage;
      }
      else
      {
        long long v41 = (void *)*v38;
        swift_bridgeObjectRetain();
      }
      sub_1379C((uint64_t)v38, &qword_BAB10);
      uint64_t v131 = v41;
      sub_7E2D8(v40, (uint64_t)v35, &qword_BAB10);
      uint64_t v89 = v127;
      long long v90 = _swiftEmptyArrayStorage;
      if (!sub_5754((uint64_t)v35, 1, v127)) {
        swift_bridgeObjectRetain();
      }
      sub_1379C((uint64_t)v35, &qword_BAB10);
      sub_774C4();
      long long v91 = sub_7881C();
      uint64_t v93 = (void *)v92;
      if (!sub_5754(v92, 1, v89))
      {
        *uint64_t v93 = v131;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v91)(v132, 0);
      sub_7E2D8(v40, (uint64_t)v32, &qword_BAB10);
      uint64_t v4 = v127;
      if (sub_5754((uint64_t)v32, 1, v127))
      {
        swift_bridgeObjectRelease();
        sub_1379C((uint64_t)v32, &qword_BAB10);
      }
      else
      {
        uint64_t v94 = *((void *)v32 + 1);
        swift_bridgeObjectRetain();
        sub_1379C((uint64_t)v32, &qword_BAB10);
        int64_t v95 = *(void *)(v94 + 16);
        if (v95)
        {
          uint64_t v116 = v1;
          v132[0] = _swiftEmptyArrayStorage;
          sub_48B5C(0, v95, 0);
          sub_7E3F0();
          uint64_t v130 = v94;
          uint64_t v97 = v94 + v96;
          uint64_t v99 = *(void *)(v98 + 72);
          long long v90 = (void *)v132[0];
          do
          {
            sub_7E0C8(v97, (uint64_t)v20);
            uint64_t v101 = *v20;
            uint64_t v100 = v20[1];
            swift_bridgeObjectRetain();
            sub_7B53C((uint64_t)v20, (void (*)(void))type metadata accessor for Shelf);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_48B5C(0, v90[2] + 1, 1);
              long long v90 = (void *)v132[0];
            }
            unint64_t v103 = v90[2];
            unint64_t v102 = v90[3];
            if (v103 >= v102 >> 1)
            {
              sub_48B5C((char *)(v102 > 1), v103 + 1, 1);
              long long v90 = (void *)v132[0];
            }
            v90[2] = v103 + 1;
            long long v104 = &v90[2 * v103];
            v104[4] = v101;
            v104[5] = v100;
            v97 += v99;
            --v95;
          }
          while (v95);
          swift_bridgeObjectRelease();
          uint64_t v1 = v116;
          uint64_t v39 = v126;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v4 = v127;
      }
      sub_775D8((uint64_t)v90);
      uint64_t v105 = sub_7881C();
      uint64_t v107 = sub_7E5B0((uint64_t)v105, v106);
      if (!sub_5754(v107, v108, v4))
      {
        *(void *)(v39 + 8) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v105)(v132, 0);
LABEL_57:
      uint64_t v109 = v126 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
      sub_7E488();
      uint64_t v110 = v120;
      sub_7E2D8(v109, v120, &qword_BAB10);
      if (sub_5754(v110, 1, v4))
      {
        long long v111 = _swiftEmptyArrayStorage;
      }
      else
      {
        long long v111 = *(void **)(v110 + 16);
        swift_bridgeObjectRetain();
      }
      long long v112 = v119;
      sub_1379C(v110, &qword_BAB10);
      sub_7E2D8(v109, (uint64_t)v112, &qword_BAB10);
      if (sub_5754((uint64_t)v112, 1, v127))
      {
        uint64_t v113 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v113 = *v112;
        swift_bridgeObjectRetain();
      }
      sub_1379C((uint64_t)v112, &qword_BAB10);
      sub_7E2D8(v109, v1, &qword_BAB10);
      if (sub_5754(v1, 1, v127))
      {
        uint64_t v114 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v114 = *(void **)(v1 + 8);
        swift_bridgeObjectRetain();
      }
      sub_1379C(v1, &qword_BAB10);
      sub_63F20((uint64_t)v111, (uint64_t)v113, (uint64_t)v114);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_67:
      sub_3C808();
      return;
  }
  while (1)
  {
    id v49 = (uint64_t *)(v46 + 16 * v48);
    uint64_t v51 = *v49;
    uint64_t v50 = v49[1];
    sub_7E2D8(v47, (uint64_t)v29, &qword_BAB10);
    uint64_t v52 = sub_7E5D4();
    if (sub_5754(v52, v53, v45))
    {
      swift_bridgeObjectRetain();
      sub_1379C((uint64_t)v29, &qword_BAB10);
      uint64_t v54 = v129;
      sub_56F8(v129, 1, 1, v130);
    }
    else
    {
      Swift::String v55 = v128;
      sub_7E0C8((uint64_t)v29, (uint64_t)v128);
      swift_bridgeObjectRetain();
      sub_1379C((uint64_t)v29, &qword_BAB10);
      uint64_t v56 = *v55;
      uint64_t v57 = *(void *)(v56 + 16);
      if (v57)
      {
        uint64_t v58 = v122;
        uint64_t v59 = v56 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
        swift_bridgeObjectRetain();
        uint64_t v60 = *(void *)(v58 + 72);
        while (1)
        {
          sub_7E0C8(v59, (uint64_t)v15);
          BOOL v61 = *v15 == v51 && v15[1] == v50;
          if (v61 || (sub_8FF40() & 1) != 0) {
            break;
          }
          sub_7B53C((uint64_t)v15, (void (*)(void))type metadata accessor for Shelf);
          v59 += v60;
          if (!--v57)
          {
            uint64_t v62 = 1;
            uint64_t v45 = v127;
            uint64_t v46 = v123;
            goto LABEL_19;
          }
        }
        uint64_t v54 = v129;
        sub_7E06C((uint64_t)v15, v129);
        uint64_t v62 = 0;
        uint64_t v45 = v127;
        uint64_t v46 = v123;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v62 = 1;
LABEL_19:
        uint64_t v54 = v129;
      }
      uint64_t v63 = v130;
      sub_56F8(v54, v62, 1, v130);
      swift_bridgeObjectRelease();
      sub_7B53C((uint64_t)v128, (void (*)(void))type metadata accessor for ShelfPage);
      if (sub_5754(v54, 1, v63) != 1)
      {
        sub_7E06C(v54, v125);
        uint64_t v64 = (uint64_t *)v126;
        uint64_t v65 = sub_7881C();
        uint64_t v67 = sub_7E5B0((uint64_t)v65, v66);
        int v69 = sub_5754(v67, v68, v45);
        uint64_t v47 = v124;
        if (v69)
        {
          uint64_t v70 = sub_7E398();
          ((void (*)(uint64_t))v65)(v70);
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v71 = v117;
          sub_7DC98(v64, v51, v50);
          uint64_t v73 = *(void *)(*v64 + 16);
          if (v73 < v72)
          {
            __break(1u);
            JUMPOUT(0x781F8);
          }
          uint64_t v117 = v71;
          sub_7D8A4(v72, v73);
          uint64_t v74 = sub_7E398();
          ((void (*)(uint64_t))v65)(v74);
          uint64_t v47 = v124;
        }
        long long v75 = sub_7881C();
        uint64_t v77 = v76;
        int v78 = sub_5754(v76, 1, v45);
        uint64_t v46 = v123;
        if (v78)
        {
          uint64_t v79 = sub_7E398();
          ((void (*)(uint64_t))v75)(v79);
          sub_7B53C(v125, (void (*)(void))type metadata accessor for Shelf);
          uint64_t v44 = v121;
        }
        else
        {
          sub_7E0C8(v125, v118);
          uint64_t v80 = *(void *)(v77 + 8);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v77 + 8) = v80;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2EA10(0, *(void *)(v80 + 16) + 1, 1, v80);
            uint64_t v80 = v87;
            *(void *)(v77 + 8) = v87;
          }
          unint64_t v83 = *(void *)(v80 + 16);
          unint64_t v82 = *(void *)(v80 + 24);
          if (v83 >= v82 >> 1)
          {
            sub_2EA10(v82 > 1, v83 + 1, 1, v80);
            uint64_t v80 = v88;
            *(void *)(v77 + 8) = v88;
          }
          *(void *)(v80 + 16) = v83 + 1;
          sub_7E3F0();
          sub_7E06C(v118, v80 + v84 + *(void *)(v85 + 72) * v83);
          uint64_t v86 = sub_7E398();
          ((void (*)(uint64_t))v75)(v86);
          sub_7B53C(v125, (void (*)(void))type metadata accessor for Shelf);
          uint64_t v45 = v127;
          uint64_t v44 = v121;
          uint64_t v46 = v123;
          uint64_t v47 = v124;
        }
        goto LABEL_23;
      }
      uint64_t v44 = v121;
      uint64_t v47 = v124;
    }
    sub_1379C(v54, &qword_BD758);
LABEL_23:
    swift_bridgeObjectRelease();
    if (++v48 == v44)
    {
      swift_bridgeObjectRelease();
      uint64_t v42 = v126;
      uint64_t v1 = v116;
      uint64_t v4 = v45;
LABEL_36:
      *(void *)(v42 + 24) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
  }
}

void sub_78208()
{
  sub_3C7BC();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v44 = v4;
  uint64_t v6 = sub_5664(&qword_BAB10);
  uint64_t v7 = sub_3C870(v6);
  __chkstk_darwin(v7);
  sub_4EBA4();
  uint64_t v50 = v8;
  sub_52270();
  __chkstk_darwin(v9);
  sub_7E400();
  uint64_t v49 = v10;
  sub_52270();
  __chkstk_darwin(v11);
  sub_6DAC0();
  uint64_t v48 = v12;
  uint64_t v13 = sub_5664(&qword_BAB70);
  uint64_t v14 = sub_3C870(v13);
  __chkstk_darwin(v14);
  sub_22620();
  uint64_t v47 = v15;
  sub_4243C();
  uint64_t v16 = sub_8F650();
  uint64_t v17 = sub_3C870(v16);
  __chkstk_darwin(v17);
  sub_22620();
  uint64_t v46 = v18;
  sub_4243C();
  uint64_t v19 = sub_8F580();
  sub_7084();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_4EBA4();
  uint64_t v45 = v23;
  sub_52270();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v44 - v25;
  *(unsigned char *)(v0 + 16) = 3;
  *(void *)(v0 + 24) = &_swiftEmptyArrayStorage;
  sub_5664(&qword_BE360);
  sub_7E4A0();
  *(void *)(v0 + 40) = sub_8F910();
  sub_5664(&qword_BDB50);
  sub_7E4A0();
  *(void *)(v0 + 48) = sub_8F230();
  sub_5664(&qword_BE368);
  sub_7E4A0();
  *(void *)(v0 + 56) = sub_8F910();
  sub_5664(&qword_BE370);
  sub_7E4A0();
  *(void *)(v0 + 64) = sub_8F910();
  sub_5664(&qword_BE378);
  sub_7E4A0();
  *(void *)(v0 + 72) = sub_8F910();
  uint64_t v27 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  uint64_t v28 = type metadata accessor for ShelfPage();
  sub_56F8(v27, 1, 1, v28);
  id v29 = (void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_lastItemId);
  *id v29 = 0;
  v29[1] = 0xE000000000000000;
  sub_7E0C8(v5, v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_objectGraph) = v3;
  sub_8F620();
  sub_7E55C();
  sub_8F560();
  swift_retain();
  sub_8F770();
  sub_8F770();
  uint64_t v51 = v26;
  uint64_t v52 = v21;
  uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 16);
  uint64_t v53 = v19;
  v30(v45, v26, v19);
  sub_5664(&qword_BDD20);
  swift_retain();
  uint64_t v54 = v3;
  sub_8F770();
  sub_8F640();
  swift_unknownObjectRelease();
  uint64_t v31 = sub_8F420();
  sub_56F8(v47, 1, 1, v31);
  sub_8F6A0();
  sub_7E4A0();
  uint64_t v32 = v44;
  uint64_t v33 = sub_8F660();
  uint64_t v34 = v48;
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_metricsPresenter) = v33;
  uint64_t v35 = v32 + *(int *)(type metadata accessor for ShelfPageDestination() + 24);
  sub_7E2D8(v35, v34, &qword_BAB10);
  sub_7E3D0(v34);
  if (v36)
  {
    sub_1379C(v34, &qword_BAB10);
    uint64_t v37 = 0;
  }
  else
  {
    sub_636F0(v34 + 40, (uint64_t)v55);
    sub_7B53C(v34, (void (*)(void))type metadata accessor for ShelfPage);
    uint64_t v37 = v55[1];
    swift_retain();
    sub_637A8((uint64_t)v55);
  }
  uint64_t v38 = v49;
  sub_7E2D8(v35, v49, &qword_BAB10);
  sub_7E3D0(v38);
  if (v36)
  {
    sub_1379C(v38, &qword_BAB10);
    id v39 = objc_msgSend(self, "ams_clear");
  }
  else
  {
    sub_636F0(v38 + 40, (uint64_t)v55);
    sub_7B53C(v38, (void (*)(void))type metadata accessor for ShelfPage);
    id v39 = (id)v55[2];
    sub_637A8((uint64_t)v55);
  }
  uint64_t v40 = v35;
  uint64_t v41 = v50;
  sub_7E2D8(v40, v50, &qword_BAB10);
  sub_7E3D0(v41);
  if (v36)
  {
    sub_1379C(v41, &qword_BAB10);
    v56[0] = &type metadata for DefaultLayoutModel;
    v56[1] = &protocol witness table for DefaultLayoutModel;
  }
  else
  {
    sub_636F0(v41 + 40, (uint64_t)v55);
    sub_7B53C(v41, (void (*)(void))type metadata accessor for ShelfPage);
    sub_18294((uint64_t)v56, (uint64_t)v57);
    sub_637A8((uint64_t)v55);
    sub_573C(v57, (uint64_t)v55);
  }
  sub_18294((uint64_t)v55, (uint64_t)v57);
  uint64_t v42 = *(void *)(v1 + 48);
  type metadata accessor for ShelfPageCollectionPresenter();
  swift_allocObject();
  swift_retain();
  uint64_t v43 = sub_63C64(v54, v37, v39, (uint64_t)v57, v42);
  swift_release();
  sub_7B53C(v32, (void (*)(void))type metadata accessor for ShelfPageDestination);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
  sub_616C((uint64_t)v55);
  *(void *)(v1 + 32) = v43;
  sub_3C808();
}

uint64_t (*sub_7881C())()
{
  return j__swift_endAccess;
}

uint64_t sub_7887C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_7B53C(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination, (void (*)(void))type metadata accessor for ShelfPageDestination);
  swift_release();
  swift_release();
  sub_1379C(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage, &qword_BAB10);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_7893C()
{
  sub_7887C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_78994()
{
  return type metadata accessor for ShelfPagePresenter(0);
}

uint64_t type metadata accessor for ShelfPagePresenter(uint64_t a1)
{
  return sub_79140(a1, qword_BE150);
}

void sub_789BC()
{
  type metadata accessor for ShelfPageDestination();
  if (v0 <= 0x3F)
  {
    sub_79568(319, (unint64_t *)&unk_BE070, (void (*)(uint64_t))type metadata accessor for ShelfPage);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t *sub_78ADC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *a2;
      swift_errorRetain();
      *a1 = v10;
      uint64_t v11 = sub_5664(&qword_BE298);
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_8E980();
      if (sub_5754((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_5664((uint64_t *)&unk_BC7F0);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        sub_56F8((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v17 = *(int *)(v11 + 64);
      uint64_t v18 = (uint64_t *)((char *)a1 + v17);
      uint64_t v19 = (uint64_t *)((char *)a2 + v17);
      if (*v19)
      {
        uint64_t v20 = v19[1];
        *uint64_t v18 = *v19;
        v18[1] = v20;
        swift_retain();
      }
      else
      {
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      }
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_78CBC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_errorRelease();
    uint64_t v3 = sub_5664(&qword_BE298);
    uint64_t v4 = a1 + *(int *)(v3 + 48);
    uint64_t v5 = sub_8E980();
    uint64_t result = sub_5754(v4, 1, v5);
    if (!result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
    if (*(void *)(a1 + *(int *)(v3 + 64)))
    {
      return swift_release();
    }
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_78DBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *a2;
    swift_errorRetain();
    *a1 = v8;
    uint64_t v9 = sub_5664(&qword_BE298);
    uint64_t v10 = *(int *)(v9 + 48);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_8E980();
    if (sub_5754((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_5664((uint64_t *)&unk_BC7F0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      sub_56F8((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v15 = *(int *)(v9 + 64);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    if (*v17)
    {
      uint64_t v18 = v17[1];
      void *v16 = *v17;
      v16[1] = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t *sub_78F58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_7B53C((uint64_t)a1, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *a2;
      swift_errorRetain();
      *a1 = v7;
      uint64_t v8 = sub_5664(&qword_BE298);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_8E980();
      if (sub_5754((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_5664((uint64_t *)&unk_BC7F0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        sub_56F8((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v14 = *(int *)(v8 + 64);
      uint64_t v15 = (uint64_t *)((char *)a1 + v14);
      uint64_t v16 = (uint64_t *)((char *)a2 + v14);
      if (*v16)
      {
        uint64_t v17 = v16[1];
        *uint64_t v15 = *v16;
        v15[1] = v17;
        swift_retain();
      }
      else
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      }
      goto LABEL_12;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for ShelfPagePresenter.State(uint64_t a1)
{
  return sub_79140(a1, (uint64_t *)&unk_BE310);
}

uint64_t sub_79140(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_79174(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = sub_5664(&qword_BE298);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_8E980();
    if (sub_5754((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_5664((uint64_t *)&unk_BC7F0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      sub_56F8((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v12 = *(int *)(v6 + 64);
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = *v14;
    if (*v14)
    {
      uint64_t v16 = v14[1];
      *uint64_t v13 = v15;
      v13[1] = v16;
    }
    else
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_792E4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_7B53C((uint64_t)a1, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = sub_5664(&qword_BE298);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_8E980();
      if (sub_5754((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_5664((uint64_t *)&unk_BC7F0);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        sub_56F8((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v12 = *(int *)(v6 + 64);
      uint64_t v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (void *)((char *)a2 + v12);
      uint64_t v15 = *v14;
      if (*v14)
      {
        uint64_t v16 = v14[1];
        *uint64_t v13 = v15;
        v13[1] = v16;
      }
      else
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_79484()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_79494()
{
  uint64_t v2 = &unk_95FC0;
  sub_79568(319, (unint64_t *)&unk_BE320, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v3 = &v1;
    uint64_t v4 = &unk_96010;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_79568(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_8FD20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ShelfPagePresenter.FooterLayout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x79688);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfPagePresenter.FooterLayout()
{
  return &type metadata for ShelfPagePresenter.FooterLayout;
}

unint64_t sub_796C4()
{
  unint64_t result = qword_BE350;
  if (!qword_BE350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE350);
  }
  return result;
}

uint64_t sub_79710()
{
  return sub_7E118(&qword_BE358, (void (*)(uint64_t))type metadata accessor for ShelfPagePresenter);
}

uint64_t sub_79758()
{
  type metadata accessor for ShelfPagePresenter.State(0);
  sub_13858();
  __chkstk_darwin(v1);
  sub_B7F0();
  unsigned int v4 = (unsigned char *)(v3 - v2);
  uint64_t v5 = sub_5664(&qword_BAB10);
  uint64_t v6 = sub_3C870(v5);
  __chkstk_darwin(v6);
  sub_B7F0();
  uint64_t v9 = v8 - v7;
  type metadata accessor for ShelfPage();
  sub_13858();
  __chkstk_darwin(v10);
  sub_B7F0();
  uint64_t v13 = v12 - v11;
  sub_8F6A0();
  sub_8F6B0();
  uint64_t v14 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
  uint64_t v15 = type metadata accessor for ShelfPageDestination();
  sub_7E2D8(v14 + *(int *)(v15 + 24), v9, &qword_BAB10);
  sub_7E3D0(v9);
  if (v16)
  {
    sub_1379C(v9, &qword_BAB10);
    unsigned char *v4 = 0;
    swift_storeEnumTagMultiPayload();
    sub_8F900();
    uint64_t v17 = (void (*)(void))type metadata accessor for ShelfPagePresenter.State;
    uint64_t v18 = (uint64_t)v4;
  }
  else
  {
    sub_7E06C(v9, v13);
    sub_7993C(v13);
    uint64_t v17 = (void (*)(void))type metadata accessor for ShelfPage;
    uint64_t v18 = v13;
  }
  sub_7B53C(v18, v17);
  return sub_7A040();
}

uint64_t sub_7993C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ShelfPagePresenter.State(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5664(&qword_BAB70);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_5664(&qword_BAB10);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v51 = (char *)&v47 - v14;
  uint64_t v15 = sub_8F390();
  __chkstk_darwin(v15 - 8);
  uint64_t v52 = type metadata accessor for ShelfPage();
  __chkstk_darwin(v52);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = *(void *)(*(void *)(a1 + 16) + 16);
  sub_7E0C8(a1, (uint64_t)&v47 - v19);
  if (v21)
  {
    sub_7B53C((uint64_t)v20, (void (*)(void))type metadata accessor for ShelfPage);
    sub_7E0C8(a1, (uint64_t)v17);
LABEL_4:
    sub_7B53C((uint64_t)v17, (void (*)(void))type metadata accessor for ShelfPage);
    goto LABEL_5;
  }
  uint64_t v22 = *(void *)(*(void *)v20 + 16);
  sub_7B53C((uint64_t)v20, (void (*)(void))type metadata accessor for ShelfPage);
  sub_7E0C8(a1, (uint64_t)v17);
  if (v22) {
    goto LABEL_4;
  }
  uint64_t v42 = *(void *)(*((void *)v17 + 1) + 16);
  sub_7B53C((uint64_t)v17, (void (*)(void))type metadata accessor for ShelfPage);
  if (!v42)
  {
    uint64_t v44 = *(void *)(a1 + 104);
    uint64_t v43 = *(void *)(a1 + 112);
    sub_7B664();
    uint64_t v45 = swift_allocError();
    *uint64_t v46 = v44;
    v46[1] = v43;
    swift_bridgeObjectRetain();
    sub_7A94C(v45);
    return swift_errorRelease();
  }
LABEL_5:
  uint64_t v50 = v12;
  uint64_t v48 = v9;
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v23 = *(void *)(*(void *)(sub_8F3E0() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v56 = type metadata accessor for ShelfPagePresenter(0);
  v55[0] = v1;
  swift_retain();
  id v24 = (id)AMSLogKey();
  uint64_t v49 = v23;
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = sub_8F9D0();
    uint64_t v27 = v6;
    uint64_t v29 = v28;

    sub_8F380();
    v57._countAndFlagsBits = 0;
    v57._object = (void *)0xE000000000000000;
    sub_8F370(v57);
    sub_820C(v55, v56);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v53[0] = DynamicType;
    sub_8F360();
    sub_1379C((uint64_t)v53, &qword_BC780);
    v58._countAndFlagsBits = 5972026;
    v58._object = (void *)0xE300000000000000;
    sub_8F370(v58);
    uint64_t MetatypeMetadata = &type metadata for String;
    v53[0] = v26;
    v53[1] = v29;
    uint64_t v6 = v27;
    sub_8F360();
    sub_1379C((uint64_t)v53, &qword_BC780);
    v31._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v59._countAndFlagsBits = 0;
    v59._object = (void *)0xE000000000000000;
    sub_8F370(v59);
    sub_820C(v55, v56);
    uint64_t v32 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v53[0] = v32;
    sub_8F360();
    sub_1379C((uint64_t)v53, &qword_BC780);
    v31._countAndFlagsBits = 58;
  }
  uint64_t v33 = (uint64_t)v48;
  uint64_t v34 = (uint64_t)v51;
  uint64_t v35 = v52;
  v31._object = (void *)0xE100000000000000;
  sub_8F370(v31);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v55);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  sub_7E0C8(a1, v34);
  sub_56F8(v34, 0, 1, v35);
  uint64_t v36 = v34;
  uint64_t v37 = (uint64_t)v50;
  sub_7B594(v36, (uint64_t)v50);
  uint64_t v38 = v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  swift_beginAccess();
  sub_7B5FC(v37, v38);
  swift_endAccess();
  uint64_t v39 = a1 + *(int *)(v35 + 36);
  uint64_t v40 = sub_8F420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v33, v39, v40);
  sub_56F8(v33, 0, 1, v40);
  sub_8F690();
  LOBYTE(v55[0]) = *(unsigned char *)(a1 + 40);
  sub_8F900();
  sub_8F900();
  sub_8F220();
  if (*(void *)(*(void *)a1 + 16))
  {
    *(unsigned char *)(v2 + 16) = 3;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = 2;
    sub_776BC();
  }
  swift_storeEnumTagMultiPayload();
  sub_8F900();
  return sub_7B53C((uint64_t)v6, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
}

uint64_t sub_7A040()
{
  uint64_t v1 = sub_8F390();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_5664(&qword_BAAF8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_8EBC0();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
  uint64_t v9 = type metadata accessor for ShelfPageDestination();
  sub_7E2D8(v8 + *(int *)(v9 + 20), (uint64_t)v4, &qword_BAAF8);
  if (sub_5754((uint64_t)v4, 1, v5) == 1)
  {
    sub_1379C((uint64_t)v4, &qword_BAAF8);
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    uint64_t v32 = type metadata accessor for ShelfPagePresenter(0);
    v31[0] = v0;
    swift_retain();
    id v10 = (id)AMSLogKey();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_8F9D0();
      uint64_t v14 = v13;

      sub_8F380();
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      sub_8F370(v37);
      sub_820C(v31, v32);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = DynamicType;
      sub_8F360();
      sub_1379C((uint64_t)&v34, &qword_BC780);
      v38._countAndFlagsBits = 5972026;
      v38._object = (void *)0xE300000000000000;
      sub_8F370(v38);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v34 = v12;
      uint64_t v35 = v14;
      sub_8F360();
      sub_1379C((uint64_t)&v34, &qword_BC780);
      v16._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      sub_8F370(v41);
      sub_820C(v31, v32);
      uint64_t v24 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = v24;
      sub_8F360();
      sub_1379C((uint64_t)&v34, &qword_BC780);
      v16._countAndFlagsBits = 58;
    }
    v16._object = (void *)0xE100000000000000;
    sub_8F370(v16);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v31);
    sub_8F340();
    sub_43634();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_7E06C((uint64_t)v4, (uint64_t)v7);
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
    uint64_t v32 = type metadata accessor for ShelfPagePresenter(0);
    v31[0] = v0;
    swift_retain();
    id v17 = (id)AMSLogKey();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_8F9D0();
      uint64_t v21 = v20;

      sub_8F380();
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      sub_8F370(v39);
      sub_820C(v31, v32);
      uint64_t v22 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = v22;
      sub_8F360();
      sub_1379C((uint64_t)&v34, &qword_BC780);
      v40._countAndFlagsBits = 5972026;
      v40._object = (void *)0xE300000000000000;
      sub_8F370(v40);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v34 = v19;
      uint64_t v35 = v21;
      sub_8F360();
      sub_1379C((uint64_t)&v34, &qword_BC780);
      v23._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      sub_8F370(v42);
      sub_820C(v31, v32);
      uint64_t v26 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v34 = v26;
      sub_8F360();
      sub_1379C((uint64_t)&v34, &qword_BC780);
      v23._countAndFlagsBits = 58;
    }
    v23._object = (void *)0xE100000000000000;
    sub_8F370(v23);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v31);
    sub_8F340();
    uint64_t v32 = v5;
    uint64_t v27 = sub_8374(v31);
    sub_7E0C8((uint64_t)v7, (uint64_t)v27);
    sub_8F3B0();
    sub_1379C((uint64_t)v31, &qword_BC780);
    sub_43634();
    swift_bridgeObjectRelease();
    sub_8F560();
    sub_8F770();
    type metadata accessor for ShelfPage();
    sub_7E118(&qword_BE0B0, (void (*)(uint64_t))type metadata accessor for ShelfPage);
    sub_8ED10();
    swift_allocObject();
    swift_weakInit();
    swift_allocObject();
    swift_weakInit();
    unint64_t v28 = sub_64900();
    swift_retain();
    uint64_t v29 = sub_8FBD0();
    uint64_t v32 = v28;
    uint64_t v33 = &protocol witness table for OS_dispatch_queue;
    v31[0] = v29;
    sub_8F7A0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_7B53C((uint64_t)v7, (void (*)(void))&type metadata accessor for JSServiceRequest);
    sub_616C((uint64_t)v31);
    return swift_release();
  }
}

void sub_7A7F0()
{
}

uint64_t sub_7A81C()
{
  return sub_8F680();
}

uint64_t sub_7A848(uint64_t (*a1)(uint64_t, void *))
{
  uint64_t v2 = sub_8F6A0();
  return a1(v2, &protocol witness table for PageMetricsPresenter);
}

uint64_t sub_7A88C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_7993C(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_7A8EC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_7A94C(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_7A94C(uint64_t a1)
{
  uint64_t v3 = sub_5664(&qword_BAAF8);
  __chkstk_darwin(v3 - 8);
  uint64_t v55 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ShelfPagePresenter.State(0);
  __chkstk_darwin(v57);
  uint64_t v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v56 = (uint64_t *)((char *)&v50 - v8);
  uint64_t v9 = sub_5664(&qword_BBB40);
  __chkstk_darwin(v9 - 8);
  uint64_t v51 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8F750();
  uint64_t v53 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v52 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v54 = (char *)&v50 - v14;
  uint64_t v15 = sub_8F390();
  __chkstk_darwin(v15 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  uint64_t v64 = type metadata accessor for ShelfPagePresenter(0);
  v63[0] = v1;
  swift_retain();
  id v16 = (id)AMSLogKey();
  uint64_t v58 = v1;
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = sub_8F9D0();
    uint64_t v20 = v19;

    sub_8F380();
    v65._countAndFlagsBits = 0;
    v65._object = (void *)0xE000000000000000;
    sub_8F370(v65);
    sub_820C(v63, v64);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v61[0] = DynamicType;
    sub_8F360();
    sub_1379C((uint64_t)v61, &qword_BC780);
    v66._countAndFlagsBits = 5972026;
    v66._object = (void *)0xE300000000000000;
    sub_8F370(v66);
    uint64_t MetatypeMetadata = &type metadata for String;
    v61[0] = v18;
    v61[1] = v20;
    sub_8F360();
    sub_1379C((uint64_t)v61, &qword_BC780);
    v22._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v67._countAndFlagsBits = 0;
    v67._object = (void *)0xE000000000000000;
    sub_8F370(v67);
    sub_820C(v63, v64);
    uint64_t v23 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v61[0] = v23;
    sub_8F360();
    sub_1379C((uint64_t)v61, &qword_BC780);
    v22._countAndFlagsBits = 58;
  }
  v22._object = (void *)0xE100000000000000;
  sub_8F370(v22);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v63);
  sub_8F340();
  swift_getErrorValue();
  uint64_t v24 = v59;
  uint64_t v25 = v60;
  uint64_t v64 = v60;
  uint64_t v26 = sub_8374(v63);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v26, v24, v25);
  sub_8F3B0();
  sub_1379C((uint64_t)v63, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  v61[0] = a1;
  swift_errorRetain();
  sub_5664(&qword_BBB50);
  if (swift_dynamicCast())
  {
    uint64_t v28 = v63[0];
    uint64_t v27 = v63[1];
    sub_8F560();
    uint64_t v29 = v54;
    uint64_t v30 = v11;
    sub_8F770();
    uint64_t v32 = v52;
    uint64_t v31 = v53;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
    v33(v52, v29, v11);
    if (!v27)
    {
      type metadata accessor for Localizations();
      uint64_t v34 = (uint64_t)v51;
      v33(v51, v32, v30);
      sub_56F8(v34, 0, 1, v30);
      uint64_t v28 = sub_4320C(0xD000000000000015, 0x800000000009C560, v34);
      uint64_t v27 = v35;
      sub_1379C(v34, &qword_BBB40);
    }
    uint64_t v36 = *(void (**)(char *, uint64_t))(v31 + 8);
    v36(v32, v30);
    uint64_t v37 = v30;
    uint64_t v38 = (uint64_t)v56;
    *uint64_t v56 = v28;
    *(void *)(v38 + 8) = v27;
    swift_storeEnumTagMultiPayload();
    sub_8F900();
    sub_7B53C(v38, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
    return ((uint64_t (*)(char *, uint64_t))v36)(v29, v37);
  }
  else
  {
    uint64_t v40 = v58;
    uint64_t v41 = sub_5664(&qword_BE298);
    uint64_t v42 = (uint64_t)v6 + *(int *)(v41 + 48);
    *uint64_t v6 = a1;
    uint64_t v43 = v40 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
    uint64_t v44 = v43 + *(int *)(type metadata accessor for ShelfPageDestination() + 20);
    uint64_t v45 = v55;
    sub_7E2D8(v44, v55, &qword_BAAF8);
    uint64_t v46 = sub_8EBC0();
    if (sub_5754(v45, 1, v46) == 1)
    {
      swift_errorRetain();
      sub_1379C(v45, &qword_BAAF8);
      uint64_t v47 = sub_8E980();
      sub_56F8(v42, 1, 1, v47);
    }
    else
    {
      sub_7E2D8(v45 + *(int *)(v46 + 24), v42, (uint64_t *)&unk_BC7F0);
      swift_errorRetain();
      sub_7B53C(v45, (void (*)(void))&type metadata accessor for JSServiceRequest);
    }
    uint64_t v48 = (uint64_t (**)())((char *)v6 + *(int *)(v41 + 64));
    uint64_t v49 = swift_allocObject();
    swift_weakInit();
    *uint64_t v48 = sub_7B6E8;
    v48[1] = (uint64_t (*)())v49;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_8F900();
    sub_7B53C((uint64_t)v6, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
    return swift_release();
  }
}

uint64_t sub_7B11C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_7B174();
    return swift_release();
  }
  return result;
}

uint64_t sub_7B174()
{
  uint64_t v1 = type metadata accessor for ShelfPagePresenter.State(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8F390();
  __chkstk_darwin(v4 - 8);
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
  uint64_t v17 = type metadata accessor for ShelfPagePresenter(0);
  v16[0] = v0;
  swift_retain();
  id v5 = (id)AMSLogKey();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_8F9D0();
    uint64_t v9 = v8;

    sub_8F380();
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    sub_8F370(v18);
    sub_820C(v16, v17);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v14[0] = DynamicType;
    sub_8F360();
    sub_1379C((uint64_t)v14, &qword_BC780);
    v19._countAndFlagsBits = 5972026;
    v19._object = (void *)0xE300000000000000;
    sub_8F370(v19);
    uint64_t MetatypeMetadata = &type metadata for String;
    v14[0] = v7;
    v14[1] = v9;
    sub_8F360();
    sub_1379C((uint64_t)v14, &qword_BC780);
    v11._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    sub_8F370(v20);
    sub_820C(v16, v17);
    uint64_t v12 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v14[0] = v12;
    sub_8F360();
    sub_1379C((uint64_t)v14, &qword_BC780);
    v11._countAndFlagsBits = 58;
  }
  v11._object = (void *)0xE100000000000000;
  sub_8F370(v11);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v16);
  sub_8F340();
  sub_43634();
  swift_bridgeObjectRelease();
  *uint64_t v3 = 0;
  swift_storeEnumTagMultiPayload();
  sub_8F900();
  sub_7B53C((uint64_t)v3, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
  return sub_7A040();
}

uint64_t sub_7B4B0()
{
  return sub_7A848((uint64_t (*)(uint64_t, void *))&ViewControllerPresenter.viewWillAppear());
}

uint64_t sub_7B4E4()
{
  return sub_7A848((uint64_t (*)(uint64_t, void *))&ViewControllerPresenter.viewDidDisappear());
}

uint64_t sub_7B510()
{
  return sub_7A848((uint64_t (*)(uint64_t, void *))&ViewControllerPresenter.viewDidReceiveMemoryWarning());
}

uint64_t sub_7B53C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_13858();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_7B594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7B5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BAB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_7B664()
{
  unint64_t result = qword_BE380;
  if (!qword_BE380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE380);
  }
  return result;
}

uint64_t sub_7B6B0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_7B6E8()
{
  return sub_7B11C();
}

void sub_7B6F0()
{
  sub_3C7BC();
  char v2 = v1;
  char v4 = v3;
  uint64_t v5 = sub_8F390();
  uint64_t v6 = sub_3C870(v5);
  __chkstk_darwin(v6);
  sub_7E568();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v7 = sub_8F3E0();
  sub_183C4(v7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_934E0;
  Swift::String v19 = (ValueMetadata *)type metadata accessor for ShelfPagePresenter(0);
  v18[0] = v0;
  swift_retain();
  id v8 = (id)AMSLogKey();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_8F9D0();
    uint64_t v12 = v11;

    sub_7E428();
    sub_4D154();
    sub_820C(v18, (uint64_t)v19);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = DynamicType;
    sub_8F360();
    sub_1379C((uint64_t)v16, &qword_BC780);
    sub_1842C();
    uint64_t MetatypeMetadata = &type metadata for String;
    v16[0] = v10;
    v16[1] = v12;
    sub_8F360();
    sub_1379C((uint64_t)v16, &qword_BC780);
    v14._countAndFlagsBits = 93;
  }
  else
  {
    sub_7E444();
    sub_4D154();
    uint64_t v15 = sub_7E580(v18);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v16[0] = v15;
    sub_8F360();
    sub_1379C((uint64_t)v16, &qword_BC780);
    v14._countAndFlagsBits = 58;
  }
  v14._object = (void *)0xE100000000000000;
  sub_8F370(v14);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v18);
  sub_8F340();
  Swift::String v19 = (ValueMetadata *)&type metadata for Bool;
  LOBYTE(v18[0]) = v4 & 1;
  sub_8F3B0();
  sub_1379C((uint64_t)v18, &qword_BC780);
  sub_8F340();
  Swift::String v19 = &type metadata for ActivityShelfPageAction.Style;
  LOBYTE(v18[0]) = v2;
  sub_8F3B0();
  sub_1379C((uint64_t)v18, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  if (v4) {
    sub_7B9AC(v2);
  }
  else {
    sub_7BA88();
  }
  sub_3C808();
}

uint64_t sub_7B9AC(char a1)
{
  uint64_t v2 = type metadata accessor for ShelfPagePresenter.State(0);
  __chkstk_darwin(v2);
  char v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1) {
      char v5 = 2;
    }
    else {
      char v5 = 1;
    }
    char *v4 = v5;
  }
  else
  {
    char *v4 = 0;
  }
  swift_storeEnumTagMultiPayload();
  sub_8F900();
  return sub_7B53C((uint64_t)v4, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
}

uint64_t sub_7BA88()
{
  uint64_t v0 = type metadata accessor for ShelfPagePresenter.State(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_8F900();
  return sub_7B53C((uint64_t)v2, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
}

void sub_7BB28()
{
  sub_3C7BC();
  uint64_t v2 = (void *)v0;
  LODWORD(v156) = v3;
  int v5 = v4;
  uint64_t v7 = v6;
  uint64_t v160 = v8;
  sub_7E55C();
  uint64_t v9 = sub_8F390();
  uint64_t v10 = sub_3C870(v9);
  __chkstk_darwin(v10);
  sub_3C938();
  uint64_t v158 = type metadata accessor for Shelf();
  sub_7084();
  uint64_t v141 = v11;
  __chkstk_darwin(v12);
  sub_7E4D4();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v139 - v14;
  __chkstk_darwin(v16);
  sub_7E400();
  uint64_t v147 = v17;
  sub_52270();
  __chkstk_darwin(v18);
  sub_6DAC0();
  uint64_t v157 = (void *)v19;
  sub_4243C();
  uint64_t v161 = type metadata accessor for ShelfPage();
  sub_13858();
  __chkstk_darwin(v20);
  Swift::String v22 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  sub_6DAC0();
  uint64_t v155 = v24;
  uint64_t v25 = sub_5664(&qword_BAB10);
  uint64_t v26 = sub_3C870(v25);
  __chkstk_darwin(v26);
  sub_4EBA4();
  uint64_t v146 = v27;
  sub_52270();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v139 - v29;
  uint64_t v31 = sub_5664(&qword_BD758);
  uint64_t v32 = sub_3C870(v31);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v139 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  sub_7E400();
  uint64_t v159 = v36;
  sub_52270();
  __chkstk_darwin(v37);
  sub_7E400();
  uint64_t v154 = v38;
  sub_52270();
  __chkstk_darwin(v39);
  sub_6DAC0();
  uint64_t v142 = v40;
  LODWORD(v40) = *(unsigned __int8 *)(v0 + 16);
  uint64_t v139 = v15;
  uint64_t v144 = v22;
  long long v140 = v1;
  if (!v40)
  {
    if (v5 > 1u)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v41 = sub_8FF40();
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0) {
        goto LABEL_7;
      }
    }
    int v5 = 1;
  }
LABEL_7:
  uint64_t v167 = 0;
  uint64_t v42 = (void *)&unk_C6000;
  int v148 = v5;
  if (!v0) {
    goto LABEL_38;
  }
  uint64_t v43 = *(void *)(v0 + 16);
  if (!v43) {
    goto LABEL_38;
  }
  long long v145 = v34;
  uint64_t v44 = v0 + 32;
  swift_bridgeObjectRetain();
  uint64_t v45 = v160;
  do
  {
    sub_7CB50((uint64_t *)v44, v0, v45, v7, v5, &v167);
    v44 += 40;
    --v43;
  }
  while (v43);
  swift_bridgeObjectRelease();
  uint64_t v34 = v145;
  uint64_t v42 = &unk_C6000;
  if ((v156 & 1) == 0 || v167 < 1)
  {
LABEL_38:
    uint64_t v71 = (uint64_t)v2 + v42[351];
    sub_7E488();
    uint64_t v72 = v146;
    sub_7E2D8(v71, v146, &qword_BAB10);
    if (sub_5754(v72, 1, v161))
    {
      sub_1379C(v72, &qword_BAB10);
      uint64_t v73 = sub_7E608();
      sub_56F8(v73, v75, v76, *(void *)(v74 - 256));
      uint64_t v77 = v160;
    }
    else
    {
      uint64_t v78 = (uint64_t)v144;
      sub_7E0C8(v72, (uint64_t)v144);
      sub_1379C(v72, &qword_BAB10);
      uint64_t v77 = v160;
      long long v145 = v34;
      if ((_BYTE)v5)
      {
        uint64_t v79 = (uint64_t *)v78;
        if (v5 != 1) {
          uint64_t v79 = (uint64_t *)(v78 + 8);
        }
      }
      else
      {
        uint64_t v79 = (uint64_t *)(v78 + 16);
      }
      uint64_t v80 = *v79;
      uint64_t v81 = *(void *)(*v79 + 16);
      if (v81)
      {
        sub_7E3F0();
        uint64_t v83 = v80 + v82;
        uint64_t v85 = *(void *)(v84 + 72);
        uint64_t v161 = v80;
        swift_bridgeObjectRetain();
        uint64_t v86 = v140;
        while (1)
        {
          sub_7E0C8(v83, (uint64_t)v86);
          BOOL v87 = *v86 == v77 && v86[1] == v7;
          if (v87 || (sub_8FF40() & 1) != 0) {
            break;
          }
          uint64_t v88 = sub_7B53C((uint64_t)v86, (void (*)(void))type metadata accessor for Shelf);
          v83 += v85;
          if (!--v81)
          {
            uint64_t v89 = 1;
            uint64_t v78 = (uint64_t)v144;
            uint64_t v34 = v145;
            goto LABEL_55;
          }
        }
        uint64_t v90 = (uint64_t)v86;
        uint64_t v34 = v145;
        uint64_t v88 = sub_7E06C(v90, (uint64_t)v145);
        uint64_t v89 = 0;
        uint64_t v78 = (uint64_t)v144;
      }
      else
      {
        uint64_t v88 = swift_bridgeObjectRetain();
        uint64_t v89 = 1;
        uint64_t v34 = v145;
      }
LABEL_55:
      sub_7E520(v88, v89);
      sub_7B53C(v78, (void (*)(void))type metadata accessor for ShelfPage);
      if (sub_5754((uint64_t)v34, 1, v81) != 1)
      {
        uint64_t v101 = (uint64_t)v139;
        sub_7E06C((uint64_t)v34, (uint64_t)v139);
        sub_6430C(v101, v5);
        sub_7B53C(v101, (void (*)(void))type metadata accessor for Shelf);
LABEL_60:
        sub_3C808();
        return;
      }
    }
    sub_1379C((uint64_t)v34, &qword_BD758);
    sub_5664((uint64_t *)&unk_BB5E0);
    sub_7E55C();
    uint64_t v91 = sub_8F3E0();
    sub_183C4(v91);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_92E90;
    v166 = (void *)type metadata accessor for ShelfPagePresenter(0);
    v165[0] = v2;
    swift_retain();
    id v92 = (id)AMSLogKey();
    if (v92)
    {
      uint64_t v93 = v92;
      uint64_t v94 = sub_8F9D0();
      uint64_t v96 = v95;

      sub_8F380();
      sub_7E40C();
      sub_7E360();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_7E3B0(MetatypeMetadata);
      sub_1379C((uint64_t)&v162, &qword_BC780);
      sub_1842C();
      v164 = &type metadata for String;
      uint64_t v162 = v94;
      uint64_t v163 = v96;
      sub_8F360();
      uint64_t v77 = v160;
      sub_1379C((uint64_t)&v162, &qword_BC780);
      v98._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      sub_7E40C();
      sub_7E360();
      uint64_t v100 = swift_getMetatypeMetadata();
      sub_7E3B0(v100);
      sub_1379C((uint64_t)&v162, &qword_BC780);
      v98._countAndFlagsBits = 58;
    }
    char v99 = v148;
    v98._object = (void *)0xE100000000000000;
    sub_8F370(v98);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v165);
    sub_8F340();
    sub_8F340();
    v166 = &type metadata for String;
    v165[0] = v77;
    v165[1] = v7;
    swift_bridgeObjectRetain();
    sub_8F3B0();
    sub_1379C((uint64_t)v165, &qword_BC780);
    sub_8F340();
    v166 = &unk_B0B68;
    LOBYTE(v165[0]) = v99;
    sub_8F3B0();
    sub_1379C((uint64_t)v165, &qword_BC780);
    sub_43634();
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  uint64_t v46 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  sub_7E488();
  sub_7E2D8(v46, (uint64_t)v30, &qword_BAB10);
  uint64_t v47 = sub_7E5D4();
  if (sub_5754(v47, v48, v161))
  {
    sub_1379C((uint64_t)v30, &qword_BAB10);
    uint64_t v49 = v142;
    uint64_t v50 = sub_7E608();
    uint64_t v52 = *(void *)(v51 - 256);
    sub_56F8(v50, v53, v54, v52);
    sub_7E61C();
  }
  else
  {
    sub_7E0C8((uint64_t)v30, v155);
    sub_1379C((uint64_t)v30, &qword_BAB10);
    uint64_t v44 = v159;
    uint64_t v49 = v142;
    if ((_BYTE)v5)
    {
      uint64_t v55 = v155;
      if (v5 != 1) {
        uint64_t v55 = v155 + 8;
      }
    }
    else
    {
      uint64_t v55 = v155 + 16;
    }
    uint64_t v56 = *(void *)v55;
    uint64_t v52 = *(void *)(*(void *)v55 + 16);
    if (v52)
    {
      sub_7E3F0();
      uint64_t v58 = v56 + v57;
      uint64_t v44 = *(void *)(v59 + 72);
      uint64_t v156 = v56;
      swift_bridgeObjectRetain();
      uint64_t v60 = v157;
      while (1)
      {
        sub_7E0C8(v58, (uint64_t)v60);
        if (*v60 == v160 && v60[1] == v7) {
          break;
        }
        char v62 = sub_8FF40();
        uint64_t v60 = v157;
        if (v62) {
          break;
        }
        sub_7B53C((uint64_t)v157, (void (*)(void))type metadata accessor for Shelf);
        v58 += v44;
        if (!--v52) {
          goto LABEL_29;
        }
      }
      sub_7E06C((uint64_t)v60, v49);
LABEL_29:
      sub_7E61C();
    }
    else
    {
      uint64_t v63 = swift_bridgeObjectRetain();
      uint64_t v64 = 1;
    }
    sub_7E520(v63, v64);
    sub_7B53C(v155, (void (*)(void))type metadata accessor for ShelfPage);
  }
  uint64_t v65 = v154;
  sub_7E2D8(v49, v154, &qword_BD758);
  uint64_t v66 = sub_7E5D4();
  if (sub_5754(v66, v67, v52) == 1)
  {
    sub_1379C(v65, &qword_BD758);
    uint64_t v68 = 0;
  }
  else
  {
    uint64_t v69 = *(void *)(v65 + *(int *)(v52 + 24));
    swift_bridgeObjectRetain();
    sub_7B53C(v65, (void (*)(void))type metadata accessor for Shelf);
    uint64_t v68 = *(void *)(v69 + 16);
    swift_bridgeObjectRelease();
  }
  uint64_t v143 = v7;
  uint64_t v70 = v167;
  if (v68 < v167)
  {
LABEL_87:
    __break(1u);
  }
  else
  {
    if (v167 == v68)
    {
LABEL_37:
      sub_1379C(v142, &qword_BD758);
      uint64_t v34 = v145;
      uint64_t v42 = &unk_C6000;
      uint64_t v7 = v143;
      goto LABEL_38;
    }
    uint64_t v157 = (void *)type metadata accessor for Log();
    if (v70 < v68)
    {
      uint64_t v102 = sub_8F3E0();
      sub_183C4(v102);
      uint64_t v104 = *(void *)(v103 + 72);
      uint64_t v106 = *(unsigned __int8 *)(v105 + 80);
      uint64_t v155 = (v106 + 32) & ~v106;
      uint64_t v154 = v155 + 3 * v104;
      uint64_t v153 = v106 | 7;
      uint64_t v156 = v104;
      uint64_t v152 = 2 * v104;
      long long v151 = xmmword_91D00;
      unint64_t v150 = 0x800000000009DE10;
      uint64_t v149 = v68;
      while (1)
      {
        sub_5664((uint64_t *)&unk_BB5E0);
        *(_OWORD *)(swift_allocObject() + 16) = v151;
        v166 = (void *)type metadata accessor for ShelfPagePresenter(0);
        v165[0] = v2;
        swift_retain();
        id v107 = (id)AMSLogKey();
        if (v107)
        {
          uint64_t v108 = v107;
          uint64_t v109 = sub_8F9D0();
          uint64_t v44 = v110;

          sub_8F380();
          sub_7E40C();
          sub_7E360();
          uint64_t v111 = swift_getMetatypeMetadata();
          sub_7E3B0(v111);
          sub_1379C((uint64_t)&v162, &qword_BC780);
          sub_1842C();
          v164 = &type metadata for String;
          uint64_t v162 = v109;
          uint64_t v163 = v44;
          sub_7E61C();
          sub_8F360();
          sub_1379C((uint64_t)&v162, &qword_BC780);
          v112._countAndFlagsBits = 93;
        }
        else
        {
          sub_8F380();
          sub_7E40C();
          sub_7E360();
          uint64_t v113 = swift_getMetatypeMetadata();
          sub_7E3B0(v113);
          sub_1379C((uint64_t)&v162, &qword_BC780);
          v112._countAndFlagsBits = 58;
        }
        v112._object = (void *)0xE100000000000000;
        sub_8F370(v112);
        sub_8F3A0();
        sub_616C((uint64_t)v165);
        sub_8F340();
        v166 = &type metadata for Int;
        v165[0] = v70;
        sub_8F3B0();
        sub_1379C((uint64_t)v165, &qword_BC780);
        sub_43634();
        swift_bridgeObjectRelease();
        uint64_t v114 = sub_7881C();
        uint64_t v116 = sub_7E5B0((uint64_t)v114, v115);
        if (sub_5754(v116, v117, v161))
        {
          uint64_t v118 = sub_7E5F4();
          ((void (*)(uint64_t))v114)(v118);
          uint64_t v119 = v149;
        }
        else
        {
          sub_5BEB4(v160, v143, v5, v44);
          uint64_t v120 = v158;
          if (sub_5754(v44, 1, v158) == 1)
          {
            sub_1379C(v44, &qword_BD758);
          }
          else
          {
            uint64_t v121 = v147;
            sub_7E06C(v44, v147);
            uint64_t v44 = *(int *)(v120 + 24);
            uint64_t v122 = *(void **)(v121 + v44);
            if (v122[2])
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v121 + v44) = v122;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_7DC5C(v122);
                uint64_t v122 = v138;
                *(void *)(v121 + v44) = v138;
              }
              uint64_t v124 = v122[2];
              if (!v124)
              {
                __break(1u);
                goto LABEL_87;
              }
              uint64_t v125 = v124 - 1;
              uint64_t v126 = sub_616C((uint64_t)&v122[5 * v124 - 1]);
              v122[2] = v125;
              uint64_t v127 = v147;
              *(void *)(v147 + v44) = v122;
              if ((_BYTE)v148)
              {
                if (v148 == 1)
                {
                  __chkstk_darwin(v126);
                  sub_7E4B8();
                  uint64_t v130 = sub_77264((void (*)(uint64_t))sub_5C324, v128, v129);
                  swift_bridgeObjectRelease();
                  void *v2 = v130;
                }
                else
                {
                  __chkstk_darwin(v126);
                  sub_7E4B8();
                  uint64_t v136 = sub_77264((void (*)(uint64_t))sub_5C304, v134, v135);
                  swift_bridgeObjectRelease();
                  v2[1] = v136;
                }
              }
              else
              {
                uint64_t v44 = v127;
                __chkstk_darwin(v126);
                *(&v139 - 2) = (char *)v44;
                long long v133 = sub_77264((void (*)(uint64_t))sub_5C324, (uint64_t)(&v139 - 4), v132);
                swift_bridgeObjectRelease();
                v2[2] = v133;
              }
              uint64_t v131 = v44;
            }
            else
            {
              uint64_t v131 = v121;
            }
            sub_7B53C(v131, (void (*)(void))type metadata accessor for Shelf);
            LOBYTE(v5) = v148;
            sub_7E61C();
          }
          uint64_t v119 = v149;
          uint64_t v137 = sub_7E5F4();
          ((void (*)(uint64_t))v114)(v137);
        }
        if (v119 == ++v70) {
          goto LABEL_37;
        }
      }
    }
  }
  __break(1u);
}

uint64_t sub_7CB50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v35 = a6;
  uint64_t v11 = sub_8F390();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_7881C();
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for ShelfPage();
  if (!sub_5754(v14, 1, v15)) {
    sub_5BD30(a1, a3, a4, a5);
  }
  ((void (*)(void *, void))v12)(v30, 0);
  char v29 = a5;
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_95F40;
  uint64_t v31 = (void *)type metadata accessor for ShelfPagePresenter(0);
  v30[0] = a2;
  swift_retain();
  id v16 = (id)AMSLogKey();
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_8F9D0();
    unint64_t v20 = v19;

    sub_8F380();
    v36._countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    sub_8F370(v36);
    sub_820C(v30, (uint64_t)v31);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v32 = DynamicType;
    sub_8F360();
    sub_1379C((uint64_t)&v32, &qword_BC780);
    v37._countAndFlagsBits = 5972026;
    v37._object = (void *)0xE300000000000000;
    sub_8F370(v37);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v32 = v18;
    unint64_t v33 = v20;
    sub_8F360();
    sub_1379C((uint64_t)&v32, &qword_BC780);
    v22._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    sub_8F370(v38);
    sub_820C(v30, (uint64_t)v31);
    uint64_t v23 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v32 = v23;
    sub_8F360();
    sub_1379C((uint64_t)&v32, &qword_BC780);
    v22._countAndFlagsBits = 58;
  }
  v22._object = (void *)0xE100000000000000;
  sub_8F370(v22);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v30);
  sub_8F340();
  uint64_t v24 = *v35;
  uint64_t v31 = &type metadata for Int;
  v30[0] = v24;
  sub_8F3B0();
  sub_1379C((uint64_t)v30, &qword_BC780);
  sub_8F340();
  sub_820C(a1, a1[3]);
  uint64_t v31 = &type metadata for AnyHashable;
  v30[0] = swift_allocObject();
  sub_8F500();
  sub_8F3B0();
  sub_1379C((uint64_t)v30, &qword_BC780);
  sub_8F340();
  uint64_t v31 = &type metadata for String;
  v30[0] = a3;
  v30[1] = a4;
  swift_bridgeObjectRetain();
  sub_8F3B0();
  sub_1379C((uint64_t)v30, &qword_BC780);
  sub_8F340();
  uint64_t v31 = &unk_B0B68;
  LOBYTE(v30[0]) = v29;
  sub_8F3B0();
  sub_1379C((uint64_t)v30, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_820C(a1, a1[3]);
  sub_8F500();
  if (swift_dynamicCast())
  {
    uint64_t v25 = v32;
    unint64_t v26 = v33;
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
  }
  uint64_t v27 = (uint64_t *)(a2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_lastItemId);
  *uint64_t v27 = v25;
  v27[1] = v26;
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(*v35, 1)) {
    __break(1u);
  }
  else {
    ++*v35;
  }
  return result;
}

void sub_7D090()
{
  sub_3C7BC();
  char v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_8F390();
  uint64_t v8 = sub_3C870(v7);
  __chkstk_darwin(v8);
  sub_7E568();
  uint64_t v9 = sub_5664(&qword_BAB10);
  uint64_t v10 = sub_3C870(v9);
  __chkstk_darwin(v10);
  sub_B7F0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  sub_7E488();
  sub_7E2D8(v14, v13, &qword_BAB10);
  uint64_t v15 = type metadata accessor for ShelfPage();
  uint64_t v16 = sub_7E5D4();
  if (sub_5754(v16, v17, v15))
  {
    sub_1379C(v13, &qword_BAB10);
    sub_5664((uint64_t *)&unk_BB5E0);
    uint64_t v18 = sub_8F3E0();
    sub_183C4(v18);
    *(_OWORD *)(sub_7E460() + 16) = xmmword_91D10;
    v56[3] = type metadata accessor for ShelfPagePresenter(0);
    v56[0] = v0;
    swift_retain();
    id v19 = (id)AMSLogKey();
    if (v19)
    {
      unint64_t v20 = v19;
      uint64_t v21 = sub_8F9D0();
      uint64_t v23 = v22;

      sub_7E428();
      sub_4D154();
      uint64_t v24 = sub_7E580(v56);
      void v55[3] = swift_getMetatypeMetadata();
      v55[0] = v24;
      sub_8F360();
      sub_1379C((uint64_t)v55, &qword_BC780);
      sub_1842C();
      void v55[3] = &type metadata for String;
      v55[0] = v21;
      v55[1] = v23;
      sub_8F360();
      sub_1379C((uint64_t)v55, &qword_BC780);
      v25._countAndFlagsBits = 93;
    }
    else
    {
      sub_7E444();
      sub_4D154();
      uint64_t v27 = sub_7E4F0(v56);
      void v55[3] = swift_getMetatypeMetadata();
      v55[0] = v27;
      sub_8F360();
      sub_1379C((uint64_t)v55, &qword_BC780);
      v25._countAndFlagsBits = 58;
    }
    v25._object = (void *)0xE100000000000000;
    sub_8F370(v25);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v56);
    sub_8F380();
    v57._countAndFlagsBits = 0xD000000000000046;
    v57._object = (void *)0x800000000009DCC0;
    sub_8F370(v57);
    v56[3] = &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind;
    sub_8F360();
    sub_1379C((uint64_t)v56, &qword_BC780);
    sub_4D154();
    sub_8F3A0();
    sub_4366C();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  sub_7E170((void *)(v13 + 120), v55);
  sub_1379C(v13, &qword_BAB10);
  memcpy(v56, v55, 0x2A2uLL);
  if (v2)
  {
    if (v4) {
      uint64_t v28 = &v56[57];
    }
    else {
      uint64_t v28 = &v56[38];
    }
    sub_1379C((uint64_t)v28, &qword_BAB20);
    sub_759E4(v6, (uint64_t)v28);
    goto LABEL_19;
  }
  uint64_t v26 = v56[56];
  if (!v56[56])
  {
    sub_5664((uint64_t *)&unk_BB5E0);
    uint64_t v29 = sub_8F3E0();
    sub_183C4(v29);
    *(_OWORD *)(sub_7E460() + 16) = xmmword_91D10;
    void v55[3] = type metadata accessor for ShelfPagePresenter(0);
    v55[0] = v0;
    swift_retain();
    id v30 = (id)AMSLogKey();
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = sub_8F9D0();
      uint64_t v34 = v33;

      sub_7E428();
      sub_4D154();
      uint64_t v35 = sub_7E580(v55);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v35;
      sub_8F360();
      sub_1379C((uint64_t)&v52, &qword_BC780);
      sub_1842C();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v52 = v32;
      uint64_t v53 = v34;
      sub_8F360();
      sub_1379C((uint64_t)&v52, &qword_BC780);
      v36._countAndFlagsBits = 93;
    }
    else
    {
      sub_7E444();
      sub_4D154();
      uint64_t v48 = sub_7E4F0(v55);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v48;
      sub_8F360();
      sub_1379C((uint64_t)&v52, &qword_BC780);
      v36._countAndFlagsBits = 58;
    }
    v36._object = (void *)0xE100000000000000;
    sub_8F370(v36);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v55);
    sub_8F340();
    sub_4366C();
    goto LABEL_28;
  }
  if (*(void *)(v56[56] + 16) <= (int64_t)v4)
  {
    sub_5664((uint64_t *)&unk_BB5E0);
    uint64_t v40 = sub_8F3E0();
    sub_183C4(v40);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    void v55[3] = type metadata accessor for ShelfPagePresenter(0);
    v55[0] = v0;
    swift_bridgeObjectRetain();
    swift_retain();
    id v41 = (id)AMSLogKey();
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = sub_8F9D0();
      uint64_t v45 = v44;

      sub_7E428();
      sub_4D154();
      sub_820C(v55, v55[3]);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = DynamicType;
      sub_8F360();
      sub_1379C((uint64_t)&v52, &qword_BC780);
      sub_1842C();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v52 = v43;
      uint64_t v53 = v45;
      sub_8F360();
      sub_1379C((uint64_t)&v52, &qword_BC780);
      v47._countAndFlagsBits = 93;
    }
    else
    {
      sub_7E444();
      sub_4D154();
      uint64_t v49 = sub_7E4F0(v55);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v52 = v49;
      sub_8F360();
      sub_1379C((uint64_t)&v52, &qword_BC780);
      v47._countAndFlagsBits = 58;
    }
    v47._object = (void *)0xE100000000000000;
    sub_8F370(v47);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v55);
    sub_8F380();
    v58._countAndFlagsBits = 0xD000000000000042;
    v58._object = (void *)0x800000000009DD50;
    sub_8F370(v58);
    void v55[3] = &type metadata for Int;
    v55[0] = v4;
    sub_8F360();
    sub_1379C((uint64_t)v55, &qword_BC780);
    v59._object = (void *)0x800000000009DDA0;
    v59._countAndFlagsBits = 0xD000000000000016;
    sub_8F370(v59);
    uint64_t v50 = *(void *)(v26 + 16);
    swift_bridgeObjectRelease();
    void v55[3] = &type metadata for Int;
    v55[0] = v50;
    sub_8F360();
    sub_1379C((uint64_t)v55, &qword_BC780);
    v60._countAndFlagsBits = 32;
    v60._object = (void *)0xE100000000000000;
    sub_8F370(v60);
    sub_8F3A0();
    sub_4366C();
LABEL_28:
    swift_bridgeObjectRelease();
LABEL_29:
    sub_7E1CC((uint64_t)v56);
LABEL_30:
    sub_3C808();
    return;
  }
  swift_bridgeObjectRetain();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_7DC70(v26);
  uint64_t v26 = v51;
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
LABEL_9:
  if (*(void *)(v26 + 16) > v4)
  {
    sub_7E220(v6, v26 + 144 * v4 + 32);
    swift_bridgeObjectRelease();
    v56[56] = v26;
LABEL_19:
    Swift::String v37 = sub_7881C();
    uint64_t v39 = v38;
    if (!sub_5754(v38, 1, v15)) {
      sub_7E27C(v56, (void *)(v39 + 120));
    }
    ((void (*)(void *, void))v37)(v55, 0);
    sub_8F900();
    goto LABEL_29;
  }
LABEL_33:
  __break(1u);
}

void sub_7D8A4(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_2EA10(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    uint64_t v4 = v12;
  }
  uint64_t v13 = *(void *)(type metadata accessor for Shelf() - 8);
  unint64_t v14 = v4 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  unint64_t v16 = v14 + v15 * a1;
  swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(v4 + 16);
  if (__OFSUB__(v17, a2)) {
    goto LABEL_22;
  }
  sub_2E520(v14 + v15 * a2, v17 - a2, v16);
  uint64_t v18 = *(void *)(v4 + 16);
  BOOL v19 = __OFADD__(v18, v8);
  uint64_t v20 = v18 - v7;
  if (!v19)
  {
    *(void *)(v4 + 16) = v20;
LABEL_16:
    uint64_t *v2 = v4;
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_7D9F8()
{
  sub_3C7BC();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v0 = v7;
    uint64_t v2 = v6;
    uint64_t v3 = v5;
    if (!(*v1 >> 62))
    {
      uint64_t v8 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_8FEB0();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v8 < v2)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v9 = v2 - v3;
  if (__OFSUB__(v2, v3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!(*v1 >> 62))
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    goto LABEL_9;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_8FEB0();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v11 = v10 + v4;
  if (__OFADD__(v10, v4))
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v12 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v12;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v12 & 0x8000000000000000) != 0
    || (v12 & 0x4000000000000000) != 0
    || (uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8, v11 > *(void *)((char *)&dword_18 + (v12 & 0xFFFFFFFFFFFFFF8)) >> 1))
  {
    if (!(v12 >> 62))
    {
LABEL_15:
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_8FE00();
      swift_bridgeObjectRelease();
      unint64_t *v1 = v12;
      uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_16;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    sub_8FEB0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v15 = v14 + 32 + 8 * v3;
  sub_5664(&qword_BE0E8);
  swift_arrayDestroy();
  if (!v4) {
    goto LABEL_24;
  }
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_8FEB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)(v14 + 16);
  }
  if (__OFSUB__(v16, v2))
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t result = (uint64_t)sub_2E5F0((char *)(v14 + 32 + 8 * v2), v16 - v2, (char *)(v15 + 8));
  if (v12 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_8FEB0();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v18 = *(void *)(v14 + 16);
LABEL_22:
  if (__OFADD__(v18, v4))
  {
    __break(1u);
    return result;
  }
  *(void *)(v14 + 16) = v18 + v4;
LABEL_24:
  *(void *)uint64_t v15 = v0;
  sub_3C808();
  return sub_8FA80();
}

void sub_7DC5C(void *a1)
{
}

void sub_7DC70(uint64_t a1)
{
}

void sub_7DC84(uint64_t a1)
{
}

void sub_7DC98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Shelf() - 8;
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v37 = (uint64_t)v33 - v10;
  __chkstk_darwin(v11);
  uint64_t v14 = (void *)((char *)v33 - v13);
  uint64_t v15 = *a1;
  uint64_t v16 = *(void *)(*a1 + 16);
  if (!v16) {
    goto LABEL_34;
  }
  uint64_t v35 = a1;
  unint64_t v17 = 0;
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(v12 + 72);
  unint64_t v36 = v18;
  while (1)
  {
    BOOL v20 = *(void *)(v15 + v18) == a2 && *(void *)(v15 + v18 + 8) == a3;
    if (v20 || (sub_8FF40() & 1) != 0) {
      break;
    }
    ++v17;
    v18 += v19;
    if (v16 == v17) {
      goto LABEL_34;
    }
  }
  if (__OFADD__(v17, 1)) {
    goto LABEL_44;
  }
  unint64_t v21 = *(void *)(v15 + 16);
  if (v17 + 1 == v21)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    return;
  }
  v33[1] = v3;
  uint64_t v22 = v19 + v18;
  unint64_t v23 = v17 + 1;
  uint64_t v24 = v35;
  while (v23 < v21)
  {
    sub_7E0C8(v15 + v22, (uint64_t)v14);
    if (*v14 == a2 && v14[1] == a3)
    {
      sub_7B53C((uint64_t)v14, (void (*)(void))type metadata accessor for Shelf);
    }
    else
    {
      char v26 = sub_8FF40();
      sub_7B53C((uint64_t)v14, (void (*)(void))type metadata accessor for Shelf);
      if ((v26 & 1) == 0)
      {
        if (v23 != v17)
        {
          if ((v17 & 0x8000000000000000) != 0) {
            goto LABEL_39;
          }
          uint64_t v27 = *v24;
          unint64_t v28 = *(void *)(*v24 + 16);
          if (v17 >= v28) {
            goto LABEL_40;
          }
          uint64_t v34 = v17 * v19;
          sub_7E0C8(v27 + v36 + v17 * v19, v37);
          if (v23 >= v28) {
            goto LABEL_41;
          }
          sub_7E0C8(v27 + v22, v38);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v24 = v35;
          *uint64_t v35 = v27;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_7DC84(v27);
            uint64_t v27 = v32;
            *uint64_t v24 = v32;
          }
          if (v17 >= *(void *)(v27 + 16)) {
            goto LABEL_42;
          }
          sub_7E008(v38, v27 + v36 + v34);
          if (v23 >= *(void *)(*v24 + 16)) {
            goto LABEL_43;
          }
          sub_7E008(v37, *v24 + v22);
        }
        if (__OFADD__(v17++, 1)) {
          goto LABEL_38;
        }
      }
    }
    unint64_t v31 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      goto LABEL_37;
    }
    uint64_t v15 = *v24;
    unint64_t v21 = *(void *)(*v24 + 16);
    ++v23;
    v22 += v19;
    if (v31 == v21) {
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_7E008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_7E06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_7E55C();
  v5(v4);
  sub_13858();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a2, v2);
  return a2;
}

uint64_t sub_7E0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_7E55C();
  v4(v3);
  sub_13858();
  uint64_t v5 = sub_7E5C0();
  v6(v5);
  return a2;
}

uint64_t sub_7E118(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7E160(uint64_t a1)
{
  return sub_7A88C(a1);
}

uint64_t sub_7E168(uint64_t a1)
{
  return sub_7A8EC(a1);
}

void *sub_7E170(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_7E1CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_7E220(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_7E27C(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_7E2D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_5664(a3);
  sub_13858();
  uint64_t v4 = sub_7E5C0();
  v5(v4);
  return a2;
}

uint64_t sub_7E328()
{
  sub_616C(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_7E360()
{
  sub_820C((void *)(v0 - 152), *(void *)(v0 - 128));
  return swift_getDynamicType();
}

uint64_t sub_7E398()
{
  return v0 - 144;
}

uint64_t sub_7E3B0(uint64_t a1)
{
  *(void *)(v2 - 160) = a1;
  *(void *)(v2 - 184) = v1;
  return sub_8F360();
}

uint64_t sub_7E3D0(uint64_t a1)
{
  return sub_5754(a1, 1, v1);
}

void sub_7E40C()
{
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  sub_8F370(v1);
}

uint64_t sub_7E428()
{
  return sub_8F380();
}

uint64_t sub_7E444()
{
  return sub_8F380();
}

uint64_t sub_7E460()
{
  return swift_allocObject();
}

uint64_t sub_7E488()
{
  return swift_beginAccess();
}

uint64_t sub_7E4A0()
{
  return swift_allocObject();
}

uint64_t sub_7E4F0(void *a1)
{
  sub_820C(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_7E520(uint64_t a1, uint64_t a2)
{
  sub_56F8(v2, a2, 1, *(void *)(v3 - 272));
  return swift_bridgeObjectRelease();
}

uint64_t sub_7E55C()
{
  return 0;
}

uint64_t sub_7E580(void *a1)
{
  sub_820C(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_7E5B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_7E5C0()
{
  return v0;
}

uint64_t sub_7E5D4()
{
  return v0;
}

uint64_t sub_7E5F4()
{
  return v0 - 152;
}

uint64_t sub_7E608()
{
  return v0;
}

uint64_t sub_7E628(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  *(void *)(swift_allocObject() + 16) = v2;
  sub_13740(a1, (uint64_t)&v4, &qword_BE3E8);
  if (v5)
  {
    sub_573C(&v4, (uint64_t)v6);
    sub_820C(v6, v6[3]);
    sub_8F4F0();
    swift_release();
    return sub_616C((uint64_t)v6);
  }
  else
  {
    swift_retain();
    sub_3C708((uint64_t)&v4, &qword_BE3E8);
    sub_7E740();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_7E740()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if ((sub_8F780() & 1) == 0) {
      sub_8F7F0();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_7E7A0(unint64_t a1, void *a2, char a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_8FEB0())
  {
    uint64_t v7 = 4;
    a3 &= 1u;
    while (1)
    {
      id v8 = (a1 & 0xC000000000000001) != 0 ? (id)sub_8FDF0() : *(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v10 = [v8 customView];
      if (v10)
      {
        uint64_t v11 = v10;
        if (sub_81A48((uint64_t)v10, a3)) {
          double v12 = 0.0;
        }
        else {
          double v12 = 1.0;
        }
        [v11 setAlpha:v12];
      }
      else
      {
      }
      if (v7 - 3 == v6) {
        goto LABEL_18;
      }
      ++v7;
    }
    __break(1u);
LABEL_17:
    sub_82EF0();
  }
LABEL_18:

  return swift_bridgeObjectRelease();
}

uint64_t sub_7E8D0(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_8FEB0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)sub_8FDF0() : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v8 = [v6 customView];
      if (v8)
      {
        uint64_t v9 = v8;
        if (sub_81A48((uint64_t)v8, 0)) {
          double v10 = 0.0;
        }
        else {
          double v10 = 1.0;
        }
        [v9 setAlpha:v10];
      }
      else
      {
      }
      if (i - 3 == v4) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    sub_82EF0();
  }
LABEL_18:

  return swift_bridgeObjectRelease();
}

uint64_t sub_7E9F8(unint64_t a1, uint64_t a2, char a3)
{
  LOBYTE(v3) = a3;
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_8FEB0())
  {
    unint64_t v6 = v4 & 0xC000000000000001;
    sub_8300C();
    swift_beginAccess();
    uint64_t v7 = 4;
    id v8 = &selRef_hasSystemTelephonyOfAnyKind;
    char v24 = v3 & 1;
    while (1)
    {
      uint64_t v3 = v7 - 4;
      id v9 = v6 ? (id)sub_8FDF0() : *(id *)(v4 + 8 * v7);
      double v10 = v9;
      uint64_t v11 = v7 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      id v12 = [v9 v8[324]];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v15 = (void *)Strong;
          uint64_t v25 = v7;
          unint64_t v16 = v6;
          uint64_t v17 = v5;
          unint64_t v18 = v4;
          uint64_t v19 = v8;
          char v20 = sub_81A48(Strong, v24);

          BOOL v21 = (v20 & 1) == 0;
          id v8 = v19;
          unint64_t v4 = v18;
          uint64_t v5 = v17;
          unint64_t v6 = v16;
          uint64_t v7 = v25;
          if (v21) {
            double v22 = 1.0;
          }
          else {
            double v22 = 0.0;
          }
        }
        else
        {
          double v22 = 1.0;
        }
        [v13 setAlpha:v22];
      }
      else
      {
      }
      if (v11 == v5) {
        goto LABEL_21;
      }
      ++v7;
    }
    __break(1u);
LABEL_20:
    sub_82EF0();
  }
LABEL_21:
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_7EBB8(void *a1@<X8>)
{
  uint64_t v4 = sub_5664(&qword_BAB10);
  uint64_t v5 = sub_3C870(v4);
  __chkstk_darwin(v5);
  sub_6DA90();
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_presenter)
     + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  sub_8300C();
  swift_beginAccess();
  sub_13740(v6, v2, &qword_BAB10);
  uint64_t v7 = type metadata accessor for ShelfPage();
  if (sub_82F88(v7))
  {
    sub_3C708(v2, &qword_BAB10);
    bzero(a1, 0x1C0uLL);
    a1[56] = 1;
    bzero(a1 + 57, 0xDAuLL);
  }
  else
  {
    sub_7E170((void *)(v2 + 120), a1);
    sub_3C708(v2, &qword_BAB10);
  }
}

uint64_t sub_7ECBC(uint64_t a1)
{
  sub_13740(a1, (uint64_t)v9, &qword_BAB58);
  if (v9[56] == 1)
  {
    uint64_t v2 = sub_3C9E0();
    sub_3C708(v2, v3);
    return sub_3C708((uint64_t)v9, &qword_BAB58);
  }
  else
  {
    memcpy(__dst, v9, 0x2A2uLL);
    uint64_t v5 = sub_7881C();
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for ShelfPage();
    if (!sub_82F88(v8)) {
      sub_7E27C(__dst, (void *)(v7 + 120));
    }
    ((void (*)(void *, void))v5)(v9, 0);
    sub_3C708(a1, &qword_BAB58);
    return sub_7E1CC((uint64_t)__dst);
  }
}

void sub_7EDA8(uint64_t a1)
{
  if (a1) {
    [v1 unsetChildViewController:a1];
  }
  uint64_t v2 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController;
  if (*(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController]) {
    objc_msgSend(v1, "setChildViewController:");
  }
  id v3 = [v1 view];
  [v3 setUserInteractionEnabled:*(void *)&v1[v2] == 0];
}

void sub_7EE4C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController) = a1;
  id v3 = a1;
  sub_7EDA8((uint64_t)v2);
}

void sub_7EEA8()
{
  sub_3C7BC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v19 = sub_8F710();
  sub_7084();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_B7F0();
  double v10 = (unsigned char *)(v9 - v8);
  sub_8F750();
  sub_7084();
  __chkstk_darwin(v11);
  sub_B7F0();
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController] = 0;
  uint64_t v12 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_preloadingCompletionPromise;
  sub_5664((uint64_t *)&unk_BE960);
  uint64_t v13 = v0;
  *(void *)&v0[v12] = sub_8F820();
  v13[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_navigationBarAppearance] = 5;
  *(void *)&v13[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_presenter] = v4;
  *(void *)&v13[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_objectGraph] = v2;
  id v14 = objc_allocWithZone((Class)type metadata accessor for ShelfPageCollectionLayoutViewController());
  swift_retain_n();
  swift_retain_n();
  *(void *)&v13[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController] = sub_610E4(v4, v2);
  sub_8F560();
  sub_82FBC();
  sub_8F770();
  sub_8EC60();
  swift_retain();
  uint64_t v15 = sub_8EC50();
  swift_release();
  *(void *)&v13[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter] = v15;
  if (v15)
  {
    unsigned char *v10 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v10, enum case for PageRenderMetricsPresenter.ActivityStart.fetchPrimaryData(_:), v19);
    (*(void (**)(unsigned char *))(*(void *)v15 + 152))(v10);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v10, v19);
  }

  type metadata accessor for ShelfPageViewController();
  sub_8300C();
  objc_msgSendSuper2(v16, v17);
  swift_release();
  swift_release();
  sub_7358();
  v18();
  sub_3C808();
}

void sub_7F12C()
{
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController] = 0;
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_preloadingCompletionPromise;
  sub_5664((uint64_t *)&unk_BE960);
  *(void *)&v0[v1] = sub_8F820();
  v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_navigationBarAppearance] = 5;

  sub_8FEA0();
  __break(1u);
}

id sub_7F234()
{
  id v1 = [v0 parentViewController];
  if (v1)
  {
    uint64_t v2 = v1;
    self;
    if (!swift_dynamicCastObjCClass())
    {
      id v5 = [v2 navigationItem];

      return v5;
    }
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ShelfPageViewController();
  id v3 = objc_msgSendSuper2(&v6, "navigationItem");

  return v3;
}

uint64_t sub_7F370()
{
  id v1 = [v0 parentViewController];
  if (v1)
  {
    uint64_t v2 = v1;
    self;
    if (!swift_dynamicCastObjCClass())
    {
      id v5 = [v2 title];
      if (v5)
      {
        objc_super v6 = v5;
        uint64_t v4 = sub_8F9D0();

        goto LABEL_8;
      }

      return 0;
    }
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ShelfPageViewController();
  id v3 = objc_msgSendSuper2(&v8, "title");
  if (!v3) {
    return 0;
  }
  uint64_t v2 = v3;
  uint64_t v4 = sub_8F9D0();
LABEL_8:

  return v4;
}

void sub_7F4E0(uint64_t a1, uint64_t a2)
{
  id v4 = [v2 parentViewController];
  if (!v4)
  {
LABEL_4:
    if (a2)
    {
      NSString v6 = sub_8F9A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v6 = 0;
    }
    v8.receiver = v2;
    v8.super_class = (Class)type metadata accessor for ShelfPageViewController();
    objc_msgSendSuper2(&v8, "setTitle:", v6);

    return;
  }
  id v5 = v4;
  self;
  if (swift_dynamicCastObjCClass())
  {

    goto LABEL_4;
  }
  if (a2)
  {
    NSString v7 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  [v5 setTitle:v7];
}

void sub_7F5FC()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v3, "loadView");
  id v1 = [v0 view];
  id v2 = objc_msgSend(self, "ams_primaryBackground");
  [v1 setBackgroundColor:v2];
}

void sub_7F6DC(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v4, "traitCollectionDidChange:", a1);
  id v3 = [v1 navigationItem];
  sub_805C0();
}

uint64_t sub_7F7B0()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v3, "viewDidLoad");
  sub_7FE6C();
  uint64_t result = sub_79758();
  if (*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter])
  {
    sub_82FC8();
    return (*(uint64_t (**)(void))(v2 + 168))();
  }
  return result;
}

void sub_7F87C(char a1)
{
  uint64_t v2 = v1;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v5, "viewDidAppear:", a1 & 1);
  if (*(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter])
  {
    sub_82FC8();
    (*(void (**)(void))(v4 + 184))();
  }
  sub_8F670();
}

void sub_7F964(char a1)
{
  uint64_t v2 = v1;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1 & 1);
  if (*(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter])
  {
    sub_82FC8();
    (*(void (**)(void))(v4 + 192))();
  }
  sub_8F6A0();
  sub_8F6D0();
}

void sub_7FA5C(char a1)
{
  uint64_t v2 = v1;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v6, "viewWillAppear:", a1 & 1);
  if (*(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter])
  {
    sub_82FC8();
    (*(void (**)(void))(v4 + 176))();
  }
  sub_8F6A0();
  sub_8F6C0();
  id v5 = [v2 navigationItem];
  sub_805C0();
}

uint64_t sub_7FB84(char a1)
{
  uint64_t v2 = v1;
  sub_8F6F0();
  sub_7084();
  __chkstk_darwin(v4);
  sub_B7F0();
  uint64_t v7 = v6 - v5;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v14, "viewWillDisappear:", a1 & 1);
  if (*(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter])
  {
    sub_8F6E0();
    sub_82FC8();
    (*(void (**)(uint64_t))(v8 + 200))(v7);
    uint64_t v9 = sub_82FBC();
    v10(v9);
  }
  sub_8F6E0();
  sub_8F680();
  uint64_t v11 = sub_82FBC();
  return v12(v11);
}

void sub_7FD10()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v7, "viewWillLayoutSubviews");
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController] view];
  id v2 = [v0 view];
  [v2 bounds];
  sub_8307C();

  sub_82F10();
  objc_super v3 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController];
  if (v3)
  {
    id v4 = [v3 view];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [v0 view];
      [v6 bounds];
      sub_8307C();

      sub_82F10();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_7FE6C()
{
  uint64_t v2 = sub_5664(&qword_BAB10);
  uint64_t v3 = sub_3C870(v2);
  __chkstk_darwin(v3);
  sub_6DA90();
  sub_7FFB8();
  sub_80038();
  id v4 = [v0 view];
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_presenter];
  uint64_t v6 = OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
  uint64_t v7 = type metadata accessor for ShelfPageDestination();
  sub_13740(v5 + v6 + *(int *)(v7 + 24), v1, &qword_BAB10);
  uint64_t v8 = type metadata accessor for ShelfPage();
  if (sub_82F88(v8) == 1)
  {
    sub_3C708(v1, &qword_BAB10);
    NSString v9 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_82AB0(v1, (void (*)(void))type metadata accessor for ShelfPage);
    NSString v9 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  [v4 setAccessibilityIdentifier:v9];
}

id sub_7FFB8()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController];
  id v2 = [v1 view];
  [v2 setAlpha:0.0];

  return [v0 setChildViewController:v1];
}

void sub_80038()
{
  sub_3C7BC();
  sub_5664(&qword_BE410);
  sub_7084();
  __chkstk_darwin(v0);
  sub_22620();
  sub_5664(&qword_BE418);
  sub_7084();
  __chkstk_darwin(v1);
  sub_22620();
  uint64_t v2 = sub_5664(&qword_BE420);
  sub_7084();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_B7F0();
  uint64_t v8 = v7 - v6;
  sub_184E0();
  swift_unknownObjectWeakInit();
  sub_5664(&qword_BE360);
  sub_3C42C(&qword_BE428, &qword_BE360);
  swift_retain();
  sub_8F470();
  sub_8F480();
  swift_release();
  swift_release();
  sub_616C((uint64_t)v11);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  sub_184E0();
  swift_unknownObjectWeakInit();
  sub_5664(&qword_BE368);
  sub_3C42C(&qword_BE430, &qword_BE368);
  swift_retain();
  sub_8F470();
  sub_8F480();
  swift_release();
  swift_release();
  sub_616C((uint64_t)v11);
  sub_7358();
  v9();
  sub_184E0();
  swift_unknownObjectWeakInit();
  sub_5664(&qword_BE370);
  sub_3C42C(&qword_BE438, &qword_BE370);
  swift_retain();
  sub_8F470();
  sub_8F480();
  swift_release();
  swift_release();
  sub_616C((uint64_t)v11);
  sub_7358();
  v10();
  sub_3C808();
}

void sub_803CC(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_80518(v1);
  }
}

void sub_80428(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_7E170(a1, v5);
    sub_7ECBC((uint64_t)v5);
    id v4 = [v3 navigationItem];
    sub_805C0();
  }
}

void sub_804BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v1 = (void *)Strong;
    sub_81D08();
  }
}

void sub_80518(char a1)
{
  id v3 = [v1 view];
  id v4 = self;
  uint64_t v5 = &selRef_ams_primaryBackground;
  if (a1) {
    uint64_t v5 = &selRef_ams_primaryGroupedBackground;
  }
  id v6 = [v4 *v5];
  [v3 setBackgroundColor:v6];
}

void sub_805C0()
{
  sub_3C7BC();
  char v1 = v0;
  id v3 = v2;
  id v4 = [v0 navigationController];
  if (!v4) {
    goto LABEL_66;
  }
  uint64_t v5 = v4;
  sub_7EBB8(__src);
  if (__src[56] == 1)
  {

    sub_3C708((uint64_t)__src, &qword_BAB58);
    goto LABEL_66;
  }
  memcpy(__dst, __src, 0x2A2uLL);
  unsigned int v6 = LOBYTE(__dst[18]);
  if (sub_56C3C(__dst[18]) == 0x6E6564646968 && v7 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_8FF40();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      unsigned __int8 v10 = 1;
      goto LABEL_12;
    }
  }
  unsigned __int8 v10 = [v5 isNavigationBarHidden];
LABEL_12:
  *(unsigned char *)(*(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController]
           + OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_adjustmentsScrollViewInsets) = v10;
  sub_62E14();
  id v11 = [v5 navigationBar];
  if (sub_56C3C(v6) == 0x656772616CLL && v12 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v14 = 1;
  }
  else
  {
    char v14 = sub_8FF40();
    swift_bridgeObjectRelease();
  }
  [v11 setPrefersLargeTitles:v14 & 1];

  uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_objectGraph];
  v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_navigationBarAppearance] = v6;
  if (v6 >= 5) {
    unint64_t v16 = &selRef_ams_configureWithDefaultBackground;
  }
  else {
    unint64_t v16 = off_B22C8[(char)v6];
  }
  swift_retain();
  [v3 *v16];
  uint64_t v17 = sub_81384(0, v15, 1);
  unint64_t v18 = _swiftEmptyArrayStorage;
  __src[0] = _swiftEmptyArrayStorage;
  if (v17)
  {
    swift_retain();
    sub_8FA50();
    sub_82EE0();
    if (v19) {
      sub_82FD4();
    }
    sub_83064();
    sub_8FA80();
    char v20 = (void *)__src[0];
  }
  else
  {
    char v20 = _swiftEmptyArrayStorage;
  }
  swift_release();
  unint64_t v80 = (unint64_t)v20;
  uint64_t v21 = sub_81384(0, v15, 0);
  __src[0] = _swiftEmptyArrayStorage;
  if (v21)
  {
    swift_retain();
    sub_8FA50();
    sub_82EE0();
    if (v19) {
      sub_82FD4();
    }
    sub_83064();
    sub_8FA80();
    unint64_t v18 = (void *)__src[0];
  }
  swift_release();
  uint64_t v79 = v18;
  if (__dst[77])
  {
    swift_bridgeObjectRetain();
    sub_3C9E0();
    NSString v22 = sub_8F9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v22 = 0;
  }
  [v3 setTitle:v22];

  sub_13740((uint64_t)&__dst[78], (uint64_t)v78, &qword_BAB38);
  unint64_t v23 = (Class *)&swift_task_switch_ptr;
  if (LOBYTE(v78[3]) == 255)
  {
    sub_3C708((uint64_t)v78, &qword_BAB38);
  }
  else
  {
    sub_58DE0(v78, (uint64_t)__src);
    sub_82E44((uint64_t)__src, (uint64_t)v78);
    if (v78[3])
    {
      sub_573C(v78, (uint64_t)&v83);
      sub_8EA50();
      id v24 = objc_msgSend(self, "ams_primaryText");
      uint64_t v25 = sub_8ED30();
      uint64_t v76 = v25;
      uint64_t v77 = &protocol witness table for FontSource;
      *sub_8374((uint64_t *)&v73) = (uint64_t)UIFontTextStyleLargeTitle;
      (*(void (**)(void))(*(void *)(v25 - 8) + 104))();
      char v26 = UIFontTextStyleLargeTitle;
      unint64_t v23 = (Class *)sub_8EA40();
      sub_82BF8(0x62614C656C746974, 0xEA00000000006C65, v23);
      (*(void (**)(uint64_t *, uint64_t))&stru_158.sectname[swift_isaMask & (unint64_t)*v23])(&v83, v15);
      unsigned int v27 = BYTE1(__dst[84]);
      switch(BYTE1(__dst[84]))
      {
        case 1:
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 3:
          goto LABEL_44;
        default:
          char v33 = sub_8FF40();
          swift_bridgeObjectRelease();
          if (v33)
          {
LABEL_40:
            sub_5664(&qword_BE0E8);
            id v73 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v23];
            sub_8F7C0();
            sub_8FA50();
            sub_82EE0();
            if (v19) {
              goto LABEL_47;
            }
            goto LABEL_48;
          }
          if (v27 > 1)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v34 = sub_8FF40();
            swift_bridgeObjectRelease();
            if ((v34 & 1) == 0)
            {
LABEL_44:
              [v3 setTitleView:*(Class *)((char *)v23 + direct field offset for DynamicLabel.label)];
              sub_616C((uint64_t)&v83);
              sub_53A04((uint64_t)__src);

              goto LABEL_49;
            }
          }
          sub_5664(&qword_BE0E8);
          id v73 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v23];
          sub_8F7C0();
          sub_8FA50();
          sub_82EE0();
          if (v19) {
            goto LABEL_47;
          }
          goto LABEL_48;
      }
    }
    long long v63 = *(long long *)((char *)v78 + 8);
    long long v84 = *(long long *)((char *)v78 + 8);
    long long v66 = *(long long *)((char *)&v78[1] + 8);
    long long v85 = *(long long *)((char *)&v78[1] + 8);
    uint64_t v83 = *(void *)&v78[0];
    uint64_t v86 = *((void *)&v78[2] + 1);
    sub_8300C();
    id v32 = sub_75B84(v28, v29, v30, v31, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    [v3 setTitleView:v32];

    sub_53A04((uint64_t)__src);
  }
  while (1)
  {
    id v35 = objc_msgSend(v5, "viewControllers", v63);
    sub_F040(0, (unint64_t *)&qword_BE990);
    unint64_t v36 = sub_8FA70();

    if (v36 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_8FEB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    uint64_t v69 = (uint64_t)v5;
    if (v37 < 2)
    {
      [v3 setBackBarButtonItem:0];
      [v3 setHidesBackButton:0];
      goto LABEL_65;
    }
    sub_13740((uint64_t)&__dst[19], (uint64_t)v78, &qword_BAB50);
    if (*((void *)&v78[0] + 1) == 1) {
      break;
    }
    memcpy(__src, v78, 0x90uLL);
    if (LOBYTE(__src[2]))
    {
      if (LOBYTE(__src[2]) == 1) {
        sub_75A40((uint64_t)__src, v15);
      }
      else {
        sub_75A60((uint64_t)__src, v15);
      }
    }
    else
    {
      sub_25228((uint64_t)&__src[3], (uint64_t)v78, &qword_BD710);
      id v38 = sub_75B84((uint64_t)v78, __src[9], __src[16], (NSString)__src[17], v15);
      sub_5664(&qword_BE0E8);
      id v73 = [objc_allocWithZone(v23[206]) initWithCustomView:v38];
      sub_8F7C0();
    }
    if (!(v80 >> 62))
    {
      swift_retain();
LABEL_64:
      sub_7D9F8();
      [v3 setHidesBackButton:1];
      swift_release();
      sub_539D4((uint64_t)__src);
      goto LABEL_65;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_8FEB0();
    swift_bridgeObjectRelease();
    if ((v62 & 0x8000000000000000) == 0) {
      goto LABEL_64;
    }
    __break(1u);
LABEL_47:
    sub_8FA90();
LABEL_48:
    sub_83064();
    sub_8FA80();

    sub_616C((uint64_t)&v83);
    sub_53A04((uint64_t)__src);
LABEL_49:
    unint64_t v23 = (Class *)&swift_task_switch_ptr;
  }
  sub_3C708((uint64_t)v78, &qword_BAB50);
  if (LOBYTE(__dst[37]) != 2) {
    [v3 setHidesBackButton:__dst[37] & 1];
  }
LABEL_65:
  __src[0] = v80;
  sub_5664(&qword_BE3F0);
  sub_5664(&qword_BE3F8);
  sub_3C42C(&qword_BE400, &qword_BE3F0);
  uint64_t v39 = sub_3C42C(&qword_BE408, &qword_BE0E8);
  sub_82F38(v39, (uint64_t)sub_811EC, v40, v41, v42, v43, v44, v45, v63, *((uint64_t *)&v63 + 1), v66, *((uint64_t *)&v66 + 1), v69, v15, (uint64_t)v73, v74, v75, v76, (uint64_t)v77,
    *(uint64_t *)&v78[0],
    *((uint64_t *)&v78[0] + 1),
    *(uint64_t *)&v78[1],
    *((uint64_t *)&v78[1] + 1),
    *(uint64_t *)&v78[2],
    *((uint64_t *)&v78[2] + 1),
    *(uint64_t *)&v78[3],
    *((uint64_t *)&v78[3] + 1),
    *(uint64_t *)&v78[4],
    *((uint64_t *)&v78[4] + 1),
    *(uint64_t *)&v78[5],
    *((uint64_t *)&v78[5] + 1),
    *(uint64_t *)&v78[6],
    *((uint64_t *)&v78[6] + 1),
    *(uint64_t *)&v78[7],
    *((uint64_t *)&v78[7] + 1),
    *(uint64_t *)&v78[8],
    *((uint64_t *)&v78[8] + 1),
    (uint64_t)v79,
    v80,
    __src[0]);
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_184E0();
  swift_unknownObjectWeakInit();
  uint64_t v67 = (uint64_t)v3;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v46;
  *(void *)(v47 + 24) = v1;
  uint64_t v48 = sub_F040(0, (unint64_t *)&qword_BBBB0);
  uint64_t v49 = v1;
  uint64_t v50 = sub_8FBD0();
  __src[3] = v48;
  __src[4] = &protocol witness table for OS_dispatch_queue;
  __src[0] = v50;
  sub_8F7A0();
  swift_release();
  swift_release();
  uint64_t v51 = sub_616C((uint64_t)__src);
  sub_82F38(v51, (uint64_t)sub_82EB8, v52, v53, v54, v55, v56, v57, v64, v65, v67, v68, v70, v72, (uint64_t)v73, v74, v75, v76, (uint64_t)v77,
    *(uint64_t *)&v78[0],
    *((uint64_t *)&v78[0] + 1),
    *(uint64_t *)&v78[1],
    *((uint64_t *)&v78[1] + 1),
    *(uint64_t *)&v78[2],
    *((uint64_t *)&v78[2] + 1),
    *(uint64_t *)&v78[3],
    *((uint64_t *)&v78[3] + 1),
    *(uint64_t *)&v78[4],
    *((uint64_t *)&v78[4] + 1),
    *(uint64_t *)&v78[5],
    *((uint64_t *)&v78[5] + 1),
    *(uint64_t *)&v78[6],
    *((uint64_t *)&v78[6] + 1),
    *(uint64_t *)&v78[7],
    *((uint64_t *)&v78[7] + 1),
    *(uint64_t *)&v78[8],
    *((uint64_t *)&v78[8] + 1),
    (uint64_t)v79,
    v80,
    (char)v79);
  swift_bridgeObjectRelease();
  uint64_t v58 = sub_184E0();
  swift_unknownObjectWeakInit();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v58;
  *(void *)(v59 + 24) = v49;
  Swift::String v60 = v49;
  uint64_t v61 = sub_8FBD0();
  __src[3] = v48;
  __src[4] = &protocol witness table for OS_dispatch_queue;
  __src[0] = v61;
  sub_8F7A0();
  swift_release();
  swift_release();
  swift_release();

  sub_616C((uint64_t)__src);
  sub_7E1CC((uint64_t)__dst);
LABEL_66:
  sub_3C808();
}

uint64_t sub_811EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_bridgeObjectRetain();
}

void *sub_81208(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v6 = Strong;
    sub_82C5C(v4, 1, Strong);
  }
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t result = (void *)sub_82B84(result, (SEL *)&selRef_leftBarButtonItems);
    if (result)
    {
      sub_7E8D0((unint64_t)result, a3);
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *sub_812C8(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v6 = Strong;
    sub_82CE8(v4, Strong);
  }
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t result = (void *)sub_82B84(result, (SEL *)&selRef_rightBarButtonItems);
    if (result)
    {
      sub_7E8D0((unint64_t)result, a3);
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_81384(uint64_t a1, uint64_t a2, char a3)
{
  sub_7EBB8(__src);
  if (__src[56] == 1)
  {
    uint64_t v5 = &qword_BAB58;
    unsigned int v6 = __src;
  }
  else
  {
    memcpy(__dst, __src, 0x2A2uLL);
    uint64_t v7 = 456;
    if (a3) {
      uint64_t v7 = 304;
    }
    sub_13740((uint64_t)&__dst[v7], (uint64_t)v12, &qword_BAB20);
    if (v12[1] != 1)
    {
      sub_5930((uint64_t)v12, (uint64_t)__src);
      uint64_t v9 = sub_184E0();
      swift_unknownObjectWeakInit();
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v9;
      *(unsigned char *)(v10 + 24) = a3 & 1;
      uint64_t v8 = sub_758C4((uint64_t)__src, (uint64_t)sub_82DE0, v10, a2);
      swift_retain();
      swift_release();
      sub_4A89C((uint64_t)__src);
      sub_7E1CC((uint64_t)__dst);
      swift_release();
      return v8;
    }
    sub_7E1CC((uint64_t)__dst);
    uint64_t v5 = &qword_BAB20;
    unsigned int v6 = v12;
  }
  sub_3C708((uint64_t)v6, v5);
  return 0;
}

uint64_t sub_814E8(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unsigned int v6 = (void *)result;
    sub_7EBB8(__src);
    if (__src[56] == 1)
    {

      return sub_3C708((uint64_t)__src, &qword_BAB58);
    }
    else
    {
      memcpy(__dst, __src, 0x2A2uLL);
      uint64_t v7 = 456;
      if (a3) {
        uint64_t v7 = 304;
      }
      uint64_t v8 = &__dst[v7];
      sub_3C708((uint64_t)&__dst[v7], &qword_BAB20);
      sub_759E4(a1, (uint64_t)v8);
      sub_7E170(__dst, __src);
      sub_7ECBC((uint64_t)__src);

      return sub_7E1CC((uint64_t)__dst);
    }
  }
  return result;
}

void sub_815DC(char a1, char a2)
{
  if (a2)
  {
    uint64_t v4 = self;
    uint64_t v5 = sub_184E0();
    swift_unknownObjectWeakInit();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(unsigned char *)(v6 + 24) = a1 & 1;
    aBlock[4] = sub_82DD4;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_3A478;
    void aBlock[3] = &unk_B2200;
    uint64_t v7 = _Block_copy(aBlock);
    swift_release();
    [v4 animateWithDuration:134 delay:v7 options:0 animations:0.2 completion:0.0];
    _Block_release(v7);
  }
  else
  {
    id v8 = sub_82FA4();
    unint64_t v9 = sub_82B84(v8, (SEL *)&selRef_leftBarButtonItems);
    if (v9)
    {
      sub_7E7A0(v9, v2, a1 & 1);
      swift_bridgeObjectRelease();
    }
    id v10 = sub_82FA4();
    unint64_t v11 = sub_82B84(v10, (SEL *)&selRef_rightBarButtonItems);
    if (v11)
    {
      sub_7E7A0(v11, v2, a1 & 1);
      swift_bridgeObjectRelease();
    }
  }
  int v12 = v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_navigationBarAppearance];
  if (v12 != 5)
  {
    if (sub_56C3C(v12) == 0xD000000000000019 && v13 == 0x800000000009AE50)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = sub_8FF40();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return;
      }
    }
    id v15 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
    [v15 configureWithTransparentBackground];
    if (a1)
    {
      unint64_t v16 = self;
      id v17 = v15;
      id v18 = [v16 systemBackgroundColor];
      id v19 = [v18 colorWithAlphaComponent:0.96];

      [v17 setBackgroundColor:v19];
    }
    id v20 = sub_82FA4();
    [v20 setScrollEdgeAppearance:v15];

    id v21 = sub_82FA4();
    [v21 setStandardAppearance:v15];

    id v22 = sub_82FA4();
    [v22 setCompactAppearance:v15];
  }
}

void *sub_81910(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    id v6 = [Strong navigationItem];

    uint64_t v7 = sub_82B84(v6, (SEL *)&selRef_leftBarButtonItems);
    if (v7)
    {
      unint64_t v8 = v7;
      swift_retain();
      sub_7E9F8(v8, a1, a2 & 1);
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v10 = result;
    id v11 = [result navigationItem];

    uint64_t result = (void *)sub_82B84(v11, (SEL *)&selRef_rightBarButtonItems);
    if (result)
    {
      unint64_t v12 = (unint64_t)result;
      swift_retain();
      sub_7E9F8(v12, a1, a2 & 1);
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_81A48(uint64_t a1, char a2)
{
  sub_7EBB8(__src);
  if (__src[56] == 1)
  {
    sub_3C708((uint64_t)__src, &qword_BAB58);
    char v3 = 0;
  }
  else
  {
    memcpy(__dst, __src, 0x2A2uLL);
    switch(__dst[600])
    {
      case 1:
        goto LABEL_6;
      case 2:
        sub_83018();
LABEL_6:
        char v4 = sub_8FF40();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0) {
          goto LABEL_7;
        }
        goto LABEL_21;
      case 3:
LABEL_7:
        sub_7E170(__dst, __src);
        if (a2)
        {
          sub_82FF8();
          switch(LOBYTE(__src[75]))
          {
            case 2:
              swift_bridgeObjectRelease();
              sub_7E1CC((uint64_t)__src);
              sub_7E170(__dst, v9);
              break;
            case 3:
              goto LABEL_11;
            default:
              char v5 = sub_82F60();
              swift_bridgeObjectRelease();
              sub_7E1CC((uint64_t)__src);
              sub_7E170(__dst, v9);
              if ((v5 & 1) == 0) {
                goto LABEL_12;
              }
              break;
          }
          sub_7E1CC((uint64_t)v9);
LABEL_21:
          sub_7E1CC((uint64_t)__dst);
          char v3 = 1;
        }
        else
        {
LABEL_11:
          sub_7E1CC((uint64_t)__src);
          sub_7E170(__dst, v9);
LABEL_12:
          sub_7E170(v9, v8);
          if (a2)
          {
            char v3 = 0;
          }
          else
          {
            sub_82FF8();
            char v6 = 1;
            char v3 = 0;
            switch(v8[600])
            {
              case 1:
                goto LABEL_17;
              case 2:
                sub_83018();
                goto LABEL_16;
              case 3:
                break;
              default:
LABEL_16:
                char v6 = sub_82F60();
LABEL_17:
                swift_bridgeObjectRelease();
                char v3 = v6;
                break;
            }
          }
          sub_7E1CC((uint64_t)v8);
          sub_7E1CC((uint64_t)v9);
          sub_7E1CC((uint64_t)__dst);
        }
        break;
      default:
        swift_bridgeObjectRelease();
        goto LABEL_21;
    }
  }
  return v3 & 1;
}

void sub_81D08()
{
  sub_3C7BC();
  uint64_t v95 = (char *)v1;
  uint64_t v84 = sub_8F700();
  sub_7084();
  uint64_t v83 = v2;
  __chkstk_darwin(v3);
  sub_22620();
  uint64_t v82 = v4;
  uint64_t v5 = sub_5664(&qword_BAB10);
  uint64_t v6 = sub_3C870(v5);
  __chkstk_darwin(v6);
  sub_22620();
  uint64_t v92 = v7;
  sub_4243C();
  uint64_t v93 = type metadata accessor for ShelfPage();
  sub_13858();
  __chkstk_darwin(v8);
  sub_22620();
  uint64_t v91 = v9;
  sub_4243C();
  uint64_t v10 = sub_8F1E0();
  sub_7084();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_22620();
  uint64_t v87 = v14;
  sub_4243C();
  uint64_t v88 = sub_8F210();
  sub_7084();
  uint64_t v86 = v15;
  __chkstk_darwin(v16);
  sub_22620();
  uint64_t v85 = v17;
  uint64_t v18 = sub_5664((uint64_t *)&unk_BC7F0);
  uint64_t v19 = sub_3C870(v18);
  __chkstk_darwin(v19);
  sub_22620();
  uint64_t v81 = v20;
  uint64_t v21 = sub_4243C();
  uint64_t v96 = type metadata accessor for ShelfPagePresenter.State(v21);
  sub_13858();
  __chkstk_darwin(v22);
  uint64_t v94 = (uint64_t)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  char v26 = (char *)&v81 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v81 - v28;
  uint64_t v30 = sub_8F390();
  uint64_t v31 = sub_3C870(v30);
  __chkstk_darwin(v31);
  sub_B7F0();
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
  *((void *)&v98 + 1) = type metadata accessor for ShelfPageViewController();
  *(void *)&long long v97 = v0;
  id v32 = v0;
  id v33 = (id)AMSLogKey();
  uint64_t v89 = v12;
  uint64_t v90 = v10;
  if (v33)
  {
    char v34 = v33;
    uint64_t v35 = sub_8F9D0();
    uint64_t v37 = v36;

    sub_8F380();
    v103._countAndFlagsBits = 0;
    v103._object = (void *)0xE000000000000000;
    sub_8F370(v103);
    uint64_t v38 = sub_8302C();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v101[0] = v38;
    sub_8F360();
    sub_3C708((uint64_t)v101, &qword_BC780);
    v104._countAndFlagsBits = 5972026;
    v104._object = (void *)0xE300000000000000;
    sub_8F370(v104);
    uint64_t MetatypeMetadata = &type metadata for String;
    v101[0] = v35;
    v101[1] = v37;
    sub_8F360();
    sub_3C708((uint64_t)v101, &qword_BC780);
    v39._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v105._countAndFlagsBits = 0;
    v105._object = (void *)0xE000000000000000;
    sub_8F370(v105);
    uint64_t v40 = sub_8302C();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v101[0] = v40;
    sub_8F360();
    sub_3C708((uint64_t)v101, &qword_BC780);
    v39._countAndFlagsBits = 58;
  }
  v39._object = (void *)0xE100000000000000;
  sub_8F370(v39);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)&v97);
  sub_8F340();
  *((void *)&v98 + 1) = v96;
  uint64_t v41 = sub_8374((uint64_t *)&v97);
  uint64_t v42 = (uint64_t)v95;
  sub_829E8((uint64_t)v95, (uint64_t)v41);
  sub_8F3B0();
  sub_3C708((uint64_t)&v97, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_829E8(v42, (uint64_t)v29);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v49 = sub_5664(&qword_BE298);
      uint64_t v50 = *(void *)&v29[*(int *)(v49 + 64)];
      uint64_t v51 = (uint64_t)&v29[*(int *)(v49 + 48)];
      uint64_t v52 = v81;
      sub_25228(v51, v81, (uint64_t *)&unk_BC7F0);
      id v53 = objc_allocWithZone((Class)type metadata accessor for ErrorViewController());
      swift_errorRetain();
      swift_retain();
      sub_18224(v50);
      sub_3C9E0();
      sub_37B28();
      uint64_t v55 = v54;
      *((unsigned char *)v54 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_automaticRetry) = 0;
      id v56 = v54;
      sub_7EE4C(v55);

      sub_18234(v50);
      swift_errorRelease();
      uint64_t v42 = (uint64_t)v95;
      sub_3C708(v52, (uint64_t *)&unk_BC7F0);
      goto LABEL_10;
    case 2u:
      char v47 = *v29;
      id v48 = objc_allocWithZone((Class)type metadata accessor for LoadingViewController());
      id v46 = sub_42448(v47);
      goto LABEL_8;
    case 3u:
      id v46 = 0;
      goto LABEL_8;
    default:
      id v43 = objc_allocWithZone((Class)type metadata accessor for AlertViewController());
      uint64_t v44 = sub_3C9E0();
      id v46 = sub_F364(v44, v45);
LABEL_8:
      sub_7EE4C(v46);
LABEL_10:
      uint64_t v58 = v92;
      uint64_t v57 = v93;
      sub_829E8(v42, (uint64_t)v26);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      sub_82AB0((uint64_t)v26, (void (*)(void))type metadata accessor for ShelfPagePresenter.State);
      if (EnumCaseMultiPayload == 3)
      {
        sub_F040(0, (unint64_t *)&qword_BBBB0);
        Swift::String v60 = (void *)sub_8FBD0();
        uint64_t v61 = sub_184E0();
        swift_unknownObjectWeakInit();
        char v99 = sub_82B34;
        uint64_t v100 = v61;
        *(void *)&long long v97 = _NSConcreteStackBlock;
        *((void *)&v97 + 1) = 1107296256;
        *(void *)&long long v98 = sub_3A478;
        *((void *)&v98 + 1) = &unk_B2160;
        uint64_t v62 = v57;
        long long v63 = _Block_copy(&v97);
        swift_release();
        uint64_t v95 = v32;
        uint64_t v64 = v85;
        sub_8F200();
        *(void *)&long long v97 = _swiftEmptyArrayStorage;
        sub_3C0EC();
        sub_5664(&qword_BC7D8);
        sub_3C42C((unint64_t *)&qword_BC7E0, &qword_BC7D8);
        sub_8FD40();
        sub_8FBE0();
        uint64_t v65 = v63;
        uint64_t v57 = v62;
        _Block_release(v65);

        sub_7358();
        v66();
        uint64_t v67 = v64;
        id v32 = v95;
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v67, v88);
      }
      uint64_t v68 = v94;
      sub_829E8(v42, v94);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_errorRelease();
          uint64_t v69 = sub_5664(&qword_BE298);
          uint64_t v70 = v68 + *(int *)(v69 + 48);
          sub_18234(*(void *)(v68 + *(int *)(v69 + 64)));
          sub_3C708(v70, (uint64_t *)&unk_BC7F0);
          goto LABEL_15;
        case 2u:
          goto LABEL_16;
        case 3u:
          goto LABEL_15;
        default:
          swift_bridgeObjectRelease();
LABEL_15:
          char v99 = 0;
          long long v97 = 0u;
          long long v98 = 0u;
          sub_7E628((uint64_t)&v97);
          sub_3C708((uint64_t)&v97, &qword_BE3E8);
LABEL_16:
          uint64_t v71 = *(void *)&v32[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_presenter];
          uint64_t v72 = OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
          uint64_t v73 = type metadata accessor for ShelfPageDestination();
          sub_13740(v71 + v72 + *(int *)(v73 + 24), v58, &qword_BAB10);
          if (sub_5754(v58, 1, v57) == 1)
          {
            sub_3C708(v58, &qword_BAB10);
          }
          else
          {
            uint64_t v74 = v91;
            sub_82A4C(v58, v91);
            uint64_t v75 = *(void *)&v32[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter];
            if (v75)
            {
              sub_8F420();
              sub_13858();
              uint64_t v76 = v82;
              uint64_t v77 = sub_82FBC();
              v78(v77);
              (*(void (**)(uint64_t, void, uint64_t))(v83 + 104))(v76, enum case for PageRenderMetricsPresenter.ActivityEnd.fetchPrimaryDataCompleted(_:), v84);
              (*(void (**)(uint64_t))(*(void *)v75 + 160))(v76);
              uint64_t v79 = sub_82FBC();
              v80(v79);
            }
            sub_82AB0(v74, (void (*)(void))type metadata accessor for ShelfPage);
          }
          sub_3C808();
          return;
      }
  }
}

void sub_82758()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController));

    id v3 = [v2 view];
    sub_89280(0, 0, 1.0, 0.1);
  }
}

void sub_827FC()
{
}

void sub_8283C()
{
}

id sub_82894()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPageViewController()
{
  return self;
}

uint64_t sub_82978()
{
  return swift_retain();
}

uint64_t sub_829C4()
{
  return sub_82978();
}

uint64_t sub_829E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfPagePresenter.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_82A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfPage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_82AB0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_13858();
  sub_7358();
  v3();
  return a1;
}

uint64_t sub_82B04()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_184B8();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_82B34()
{
}

uint64_t sub_82B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_82B4C()
{
  return swift_release();
}

uint64_t sub_82B54()
{
  swift_weakDestroy();
  uint64_t v0 = sub_184B8();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_82B84(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  sub_F040(0, &qword_BE0F0);
  uint64_t v4 = sub_8FA70();

  return v4;
}

void sub_82BF8(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8F9A0();
  swift_bridgeObjectRelease();
  [a3 setAccessibilityLabel:v4];
}

void sub_82C5C(uint64_t a1, char a2, void *a3)
{
  sub_F040(0, &qword_BE0F0);
  Class isa = sub_8FA60().super.isa;
  [a3 setLeftBarButtonItems:isa animated:a2 & 1];
}

void sub_82CE8(uint64_t a1, void *a2)
{
  sub_F040(0, &qword_BE0F0);
  Class isa = sub_8FA60().super.isa;
  [a2 setRightBarButtonItems:isa];
}

uint64_t sub_82D64()
{
  swift_release();
  uint64_t v0 = sub_184B8();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_82D94()
{
  return sub_7E740();
}

uint64_t sub_82D9C()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void *sub_82DD4()
{
  return sub_81910(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_82DE0(uint64_t a1)
{
  return sub_814E8(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void *sub_82DF0(uint64_t *a1)
{
  return sub_81208(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_82DFC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_82E3C(uint64_t *a1)
{
  return sub_812C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_82E44(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_82EA0(char *a1)
{
}

void sub_82EA8(void *a1)
{
}

void sub_82EB0()
{
}

uint64_t sub_82EB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_811EC(a1, a2);
}

uint64_t sub_82EF0()
{
  return swift_bridgeObjectRetain();
}

id sub_82F10()
{
  uint64_t v7 = *(const char **)(v1 + 208);
  return objc_msgSend(v0, v7, v3, v4, v5, v6);
}

uint64_t sub_82F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  return join<A, B>(_:by:)(&a40, a2, 0, v40, v41, v42, v43);
}

uint64_t sub_82F60()
{
  return sub_8FF40();
}

uint64_t sub_82F88(uint64_t a1)
{
  return sub_5754(v1, 1, a1);
}

id sub_82FA4()
{
  double v3 = *(const char **)(v1 + 176);
  return [v0 v3];
}

uint64_t sub_82FBC()
{
  return v0;
}

uint64_t sub_82FD4()
{
  return sub_8FA90();
}

uint64_t sub_82FF8()
{
  return 0x61776C41776F6873;
}

uint64_t sub_83018()
{
  return 0x63536E4F65646968;
}

uint64_t sub_8302C()
{
  sub_820C((void *)(v0 - 176), *(void *)(v0 - 152));
  return swift_getDynamicType();
}

uint64_t sub_83064()
{
  return sub_8FAA0();
}

uint64_t sub_83090(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  Swift::Int v5 = sub_8FF00(a3, v8);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t sub_830E0(char a1)
{
  if (a1) {
    return 0x6D6F74737563;
  }
  else {
    return 0x6C6C616D73;
  }
}

Swift::Int sub_83110()
{
  return sub_55B04();
}

uint64_t sub_83118@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_AEBA0;
  uint64_t result = sub_83090(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_83150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_50620(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_8317C(char *a1, char *a2)
{
  return sub_555B8(*a1, *a2);
}

Swift::Int sub_83188()
{
  return sub_55B24();
}

uint64_t sub_83190()
{
  return sub_5619C();
}

Swift::Int sub_83198()
{
  return sub_564C8();
}

uint64_t sub_831A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_AEBF0;
  uint64_t result = sub_83090(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_831D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_830E0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_83204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_8F8C(1684957547, 0xE400000000000000, (uint64_t)&unk_B24C8, a4, a5, a6, a7, a8);
  if (!v8)
  {
    if (v10)
    {
      sub_3D1F4();
      uint64_t v9 = v11;
    }
    else
    {
      uint64_t v9 = 0;
    }
  }
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v12();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v13();
  return v9;
}

uint64_t sub_83348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result = sub_83204(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9)
  {
    *(void *)a9 = result;
    *(unsigned char *)(a9 + 8) = v12 & 1;
  }
  return result;
}

uint64_t sub_8337C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SpacerModel(0);
  uint64_t v4 = a1 + *(int *)(v3 + 28);
  uint64_t v5 = sub_8F5F0();
  sub_56F8(v4, 1, 1, v5);
  uint64_t v6 = a1 + *(int *)(v3 + 32);
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  sub_3CEE4();
  if (v1)
  {
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v7();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v8();
    sub_D68C(v4, &qword_BDD70);
    return sub_D68C(v6, &qword_BAAD0);
  }
  else
  {
    sub_8FDB0();
    sub_8FC0(0x657269446C6C6966, 0xED00006E6F697463, v3, v9, v10, v11, v12, v13);
    *(unsigned char *)(a1 + 9) = v14 & 1;
    __chkstk_darwin(v14);
    sub_40FC();
    uint64_t v17 = v16;
    char v19 = v18;
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v22(v20, v21);
    sub_8F320();
    sub_B6C4();
    sub_7358();
    uint64_t result = v25(v23, v24);
    *(void *)a1 = v17;
    *(unsigned char *)(a1 + 8) = v19 & 1;
  }
  return result;
}

uint64_t sub_8362C@<X0>(uint64_t a1@<X8>)
{
  return sub_10210(v1 + 16, a1);
}

uint64_t sub_83638@<X0>(uint64_t a1@<X8>)
{
  return sub_8337C(a1);
}

uint64_t sub_83650()
{
  uint64_t v2 = sub_5664(&qword_BE570);
  __chkstk_darwin(v2 - 8);
  sub_6DA90();
  sub_5664(&qword_BE578);
  sub_8F450();
  uint64_t v3 = type metadata accessor for SpacerModel(0);
  sub_56F8(v1, 0, 1, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SpacerComponent_spacerModel;
  swift_beginAccess();
  sub_84C18(v1, v4);
  return swift_endAccess();
}

uint64_t sub_83724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SpacerComponent(0);

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_8378C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SpacerComponent(0);

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_837F4()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_83870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_838EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

id sub_83968(double a1, double a2, double a3, double a4)
{
  sub_84F58();
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for SpacerComponent(0);
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

uint64_t sub_83A0C()
{
  uint64_t v2 = sub_5664(&qword_BE570);
  __chkstk_darwin(v2 - 8);
  sub_84F40();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SpacerComponent(0);
  objc_msgSendSuper2(&v5, "prepareForReuse");
  sub_84F58();
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SpacerComponent_spacerModel;
  swift_beginAccess();
  sub_84C18(v0, v3);
  return swift_endAccess();
}

double sub_83B58(double a1, double a2, float a3)
{
  uint64_t v8 = sub_5664(&qword_BE570);
  __chkstk_darwin(v8 - 8);
  sub_6DA90();
  uint64_t v9 = type metadata accessor for SpacerModel(0);
  __chkstk_darwin(v9);
  sub_84F40();
  uint64_t v10 = v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SpacerComponent_spacerModel;
  swift_beginAccess();
  sub_EED0(v10, v5, &qword_BE570);
  if (sub_5754(v5, 1, v9) == 1)
  {
    sub_D68C(v5, &qword_BE570);
    double v11 = 0.0;
    BOOL v12 = a3 == 1000.0;
    goto LABEL_12;
  }
  sub_84CBC(v5, v3);
  if (*(unsigned char *)(v3 + 8)) {
    double v13 = 8.0;
  }
  else {
    double v13 = *(double *)v3;
  }
  if ((*(unsigned char *)(v3 + 9) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_84D20(v3);
    goto LABEL_11;
  }
  char v14 = sub_8FF40();
  swift_bridgeObjectRelease();
  sub_84D20(v3);
  if (v14)
  {
LABEL_11:
    BOOL v12 = a3 == 1000.0;
    double v11 = v13;
LABEL_12:
    if (!v12) {
      return v11;
    }
    return a1;
  }
  if (a3 != 1000.0) {
    return 0.0;
  }
  return a1;
}

void sub_83DD0()
{
}

id sub_83E10()
{
  return sub_83E1C((SEL *)&selRef_dealloc);
}

id sub_83E1C(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SpacerComponent(0);
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t sub_83E88()
{
  return type metadata accessor for SpacerComponent(0);
}

uint64_t type metadata accessor for SpacerComponent(uint64_t a1)
{
  return sub_79140(a1, (uint64_t *)&unk_BE468);
}

void sub_83EB0()
{
  sub_84AA4(319, &qword_BE478, (void (*)(uint64_t))type metadata accessor for SpacerModel);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for SpacerModel(uint64_t a1)
{
  return sub_79140(a1, qword_BE4D8);
}

void *sub_83F7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  objc_super v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    objc_super v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
    long long v7 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, (uint64_t)(a2 + 2));
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_8F5F0();
    if (sub_5754((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_5664(&qword_BDD70);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      sub_56F8((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *(void *)(v16 + 32);
      *((void *)v15 + 3) = v17;
      *((void *)v15 + 4) = v18;
      (**(void (***)(void))(v17 - 8))();
    }
    else
    {
      long long v19 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v19;
      *((void *)v15 + 4) = *(void *)(v16 + 32);
    }
  }
  return v4;
}

uint64_t sub_84158(uint64_t a1, uint64_t a2)
{
  sub_616C(a1 + 16);
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 32);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_84214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8F5F0();
  if (sub_5754((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_56F8((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *(void *)(v14 + 32);
    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = v16;
    (**(void (***)(void))(v15 - 8))();
  }
  else
  {
    long long v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v17;
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
  }
  return a1;
}

uint64_t sub_843A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  sub_64C8((uint64_t *)(a1 + 16), a2 + 2);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F5F0();
  int v11 = sub_5754((uint64_t)v8, 1, v10);
  int v12 = sub_5754((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      sub_56F8((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  long long v17 = (long long *)((char *)a2 + v15);
  uint64_t v18 = *((void *)v17 + 3);
  if (!*(void *)(a1 + v15 + 24))
  {
    if (v18)
    {
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      (**(void (***)(uint64_t, long long *))(v18 - 8))(v16, v17);
      return a1;
    }
LABEL_13:
    long long v19 = *v17;
    long long v20 = v17[1];
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(_OWORD *)uint64_t v16 = v19;
    *(_OWORD *)(v16 + 16) = v20;
    return a1;
  }
  if (!v18)
  {
    sub_616C(v16);
    goto LABEL_13;
  }
  sub_64C8((uint64_t *)v16, (uint64_t *)v17);
  return a1;
}

uint64_t sub_845B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  long long v6 = *(_OWORD *)(a2 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v11 = sub_8F5F0();
  if (sub_5754((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_5664(&qword_BDD70);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    sub_56F8((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_846D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  sub_616C(a1 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8F5F0();
  int v11 = sub_5754((uint64_t)v8, 1, v10);
  int v12 = sub_5754((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      sub_56F8((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_616C(a1 + v15);
  }
  long long v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_8489C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_848B0);
}

uint64_t sub_848B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_8493C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_84950);
}

uint64_t sub_84950(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

void sub_849D4()
{
  sub_84AA4(319, (unint64_t *)&qword_BB2F0, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_84AA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_8FD20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_84AF8()
{
  return sub_84B88(&qword_BE520, (void (*)(uint64_t))type metadata accessor for SpacerModel);
}

uint64_t sub_84B40()
{
  return sub_84B88(&qword_BC370, (void (*)(uint64_t))type metadata accessor for SpacerModel);
}

uint64_t sub_84B88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_84BD0()
{
  return sub_84B88(&qword_BB4D8, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_84C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5664(&qword_BE570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_84C80(uint64_t a1@<X8>)
{
  sub_9A44();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

void sub_84CB4(uint64_t a1@<X8>)
{
}

uint64_t sub_84CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpacerModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_84D20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SpacerModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for SpacerModel.Size.Kind()
{
}

unsigned char *sub_84D90(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x84E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SpacerModel.FillDirection()
{
}

void type metadata accessor for SpacerModel.Size()
{
}

unint64_t sub_84EA0()
{
  unint64_t result = qword_BE580;
  if (!qword_BE580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE580);
  }
  return result;
}

unint64_t sub_84EF0()
{
  unint64_t result = qword_BE588;
  if (!qword_BE588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE588);
  }
  return result;
}

uint64_t sub_84F58()
{
  uint64_t v1 = type metadata accessor for SpacerModel(0);
  return sub_56F8(v0, 1, 1, v1);
}

unint64_t sub_84F94()
{
  unint64_t result = qword_BE590;
  if (!qword_BE590)
  {
    type metadata accessor for Switch();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE590);
  }
  return result;
}

uint64_t type metadata accessor for Switch()
{
  uint64_t result = qword_BE5F0;
  if (!qword_BE5F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_8502C@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  swift_allocObject();
  sub_8EBF0();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = type metadata accessor for Switch();
  uint64_t v10 = sub_3CEE4();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v12();
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    return v13();
  }
  else
  {
    v28[0] = v10;
    v28[1] = v11;
    uint64_t v29 = a2;
    v25[4] = a2 + 128;
    uint64_t v15 = sub_8FDB0();
    __chkstk_darwin(v15);
    v25[-2] = a1;
    sub_3BC4();
    uint64_t v16 = sub_8F5F0();
    sub_56F8((uint64_t)v7, 0, 1, v16);
    long long v17 = v29;
    sub_1C4C0((uint64_t)v7, (uint64_t)&v29[*(int *)(v9 + 36)], &qword_BDD70);
    uint64_t v18 = sub_3CFF0();
    *long long v17 = v18 & 1;
    __chkstk_darwin(v18);
    sub_156AC();
    sub_85978();
    sub_3B0C();
    _OWORD v25[2] = v29 + 8;
    uint64_t v19 = sub_1C4C0((uint64_t)v28, (uint64_t)(v29 + 8), &qword_BAAD0);
    __chkstk_darwin(v19);
    sub_156AC();
    sub_85978();
    sub_3B0C();
    long long v20 = v29;
    v25[1] = v29 + 48;
    uint64_t v21 = sub_1C4C0((uint64_t)&v27, (uint64_t)(v29 + 48), &qword_BAAD0);
    void v25[3] = v25;
    uint64_t v22 = &v20[*(int *)(v9 + 40)];
    *((void *)v22 + 4) = 0;
    *(_OWORD *)uint64_t v22 = 0u;
    *((_OWORD *)v22 + 1) = 0u;
    __chkstk_darwin(v21);
    v25[-2] = v8;
    v25[-1] = a1;
    sub_3B40();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v23();
    swift_release();
    swift_release();
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v24();
    return sub_573C(&v26, (uint64_t)(v20 + 88));
  }
}

uint64_t sub_855BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v13 + 16))(&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F5B0();
  uint64_t v14 = sub_8F5F0();
  return sub_56F8(a3, 0, 1, v14);
}

uint64_t sub_85770@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_8502C(a1, a2);
}

uint64_t sub_85788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_855BC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_85790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_857A4);
}

uint64_t sub_857A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 112);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_85830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_85844);
}

uint64_t sub_85844(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 112) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

void sub_858C8()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_85978()
{
  return 0x6575676573;
}

uint64_t sub_85990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_5664(&qword_BE688);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  __n128 v11 = *(void **)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_label);
  swift_getKeyPath();
  sub_85FB4();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))&stru_158.sectname[swift_isaMask & *v11])(v23, a3);
  sub_616C((uint64_t)v23);
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_underlyingSwitch);
  swift_getKeyPath();
  sub_85FB4();
  swift_release();
  BOOL v13 = v24;
  sub_9630((uint64_t)v23);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  if (v13)
  {
    swift_getKeyPath();
    sub_8F430();
    swift_release();
    uint64_t v14 = sub_85FD0();
    v15(v14);
    BOOL v13 = v24;
    sub_9630((uint64_t)v23);
  }
  else
  {
    uint64_t v16 = sub_85FD0();
    v17(v16);
  }
  [v12 setEnabled:v13];
  swift_getKeyPath();
  sub_85FB4();
  swift_release();
  [v12 setOn:v23[0]];
  uint64_t v18 = swift_retain();
  sub_861EC(v18);
  swift_getKeyPath();
  sub_85FB4();
  swift_release();
  uint64_t v19 = v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_offSegue;
  swift_beginAccess();
  sub_9698((uint64_t)v23, v19);
  swift_endAccess();
  swift_getKeyPath();
  sub_85FB4();
  swift_release();
  uint64_t v20 = v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_onSegue;
  swift_beginAccess();
  sub_9698((uint64_t)v23, v20);
  return swift_endAccess();
}

uint64_t sub_85C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SwitchComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_85D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SwitchComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_85D68()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_85DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_85E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_85EDC()
{
  return sub_85F6C(&qword_BC3A0, (void (*)(uint64_t))type metadata accessor for Switch);
}

uint64_t sub_85F24()
{
  return sub_85F6C(&qword_BB4D8, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_85F6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_85FB4()
{
  return sub_8F430();
}

uint64_t sub_85FD0()
{
  return v0;
}

id sub_85FE4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_label;
  sub_8EA50();
  uint64_t v10 = self;
  __n128 v11 = v4;
  id v12 = objc_msgSend(v10, "ams_primaryText");
  uint64_t v13 = sub_8ED30();
  _OWORD v22[3] = v13;
  v22[4] = (uint64_t)&protocol witness table for FontSource;
  *sub_8374(v22) = (uint64_t)UIFontTextStyleBody;
  (*(void (**)(void))(*(void *)(v13 - 8) + 104))();
  uint64_t v14 = UIFontTextStyleBody;
  *(void *)&v4[v9] = sub_8EA40();
  *(void *)&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_objectGraph] = 0;
  uint64_t v15 = &v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_offSegue];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((void *)v15 + 4) = 0;
  uint64_t v16 = &v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_onSegue];
  *((void *)v16 + 4) = 0;
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  uint64_t v17 = OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_underlyingSwitch;
  *(void *)&v11[v17] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v18 = OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_horizontalStackView;
  *(void *)&v11[v18] = [objc_allocWithZone((Class)UIStackView) init];

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for SwitchComponent();
  id v19 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  sub_863A0();

  return v19;
}

uint64_t sub_861EC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_objectGraph) = a1;
  return swift_release();
}

uint64_t sub_86204()
{
  uint64_t v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SwitchComponent();
  id v2 = objc_msgSendSuper2(&v10, "prepareForReuse");
  (*(void (**)(id))&stru_158.segname[(swift_isaMask & **(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_label])
                                              - 8])(v2);
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_underlyingSwitch];
  [v3 setEnabled:1];
  [v3 setSelected:1];
  sub_861EC(0);
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_offSegue];
  swift_beginAccess();
  sub_9698((uint64_t)&v7, v4);
  swift_endAccess();
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  uint64_t v5 = (uint64_t)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_onSegue];
  swift_beginAccess();
  sub_9698((uint64_t)&v7, v5);
  return swift_endAccess();
}

id sub_863A0()
{
  uint64_t v1 = v0;
  id v2 = [v0 contentView];
  id v3 = objc_msgSend(self, "ams_componentBackground");
  [v2 setBackgroundColor:v3];

  id v4 = [v1 contentView];
  sub_89188(14.0);

  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_horizontalStackView];
  [v5 setAxis:0];
  [v5 setDistribution:2];
  [v5 setLayoutMarginsRelativeArrangement:1];
  objc_msgSend(v5, "setLayoutMargins:", 8.0, 15.0, 8.0, 0.0);
  [v5 setSpacing:8.0];
  id v6 = [v1 contentView];
  [v6 addSubview:v5];

  sub_89BCC(1, 0.0, 0.0, 0.0, -22.0);
  [v5 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_label]];
  long long v7 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_underlyingSwitch];
  [v7 addTarget:v1 action:"switchAction" forControlEvents:4096];

  return [v5 addArrangedSubview:v7];
}

uint64_t sub_8656C()
{
  uint64_t v1 = sub_8EC80();
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8F650();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  long long v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_underlyingSwitch), "isSelected", v6))uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_onSegue; {
  else
  }
    uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_offSegue;
  uint64_t v10 = v0 + v9;
  swift_beginAccess();
  sub_6F8C(v10, (uint64_t)&v16);
  if (!*((void *)&v17 + 1)) {
    return sub_EF88((uint64_t)&v16, &qword_BAAD0);
  }
  sub_573C(&v16, (uint64_t)v19);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SwitchComponent_objectGraph);
  if (v11)
  {
    sub_8ECA0();
    sub_8F560();
    swift_retain();
    sub_8F770();
    uint64_t v12 = v16;
    sub_8F770();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v8, v4);
    uint64_t v13 = sub_5664((uint64_t *)&unk_BCEB0);
    sub_56F8((uint64_t)v3, 0, 1, v13);
    long long v16 = 0u;
    long long v17 = 0u;
    char v18 = -1;
    (*(void (**)(unsigned char *, char *, uint64_t, long long *))(*(void *)v12 + 216))(v19, v3, v11, &v16);
    swift_release();
    swift_release();
    swift_release();
    sub_EF88((uint64_t)&v16, &qword_BB600);
    sub_EFE4((uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return sub_616C((uint64_t)v19);
}

void sub_86864()
{
}

id sub_868A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwitchComponent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SwitchComponent()
{
  return self;
}

unint64_t sub_8699C()
{
  unint64_t result = qword_BE6E8;
  if (!qword_BE6E8)
  {
    type metadata accessor for Text();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE6E8);
  }
  return result;
}

uint64_t type metadata accessor for Text()
{
  uint64_t result = qword_BE748;
  if (!qword_BE748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_86A34@<X0>(uint64_t a1@<X8>)
{
  return sub_10210(v1 + 56, a1);
}

uint64_t sub_86A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C518(v2 + *(int *)(a1 + 32), a2, &qword_BAAD0);
}

uint64_t sub_86A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C518(v2 + *(int *)(a1 + 28), a2, &qword_BDD70);
}

uint64_t sub_86A98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_5664(&qword_BDD70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  uint64_t v8 = swift_allocObject();
  sub_8EBF0();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = type metadata accessor for Text();
  uint64_t v27 = v9;
  uint64_t v28 = a1;
  sub_88144();
  sub_3B40();
  if (v2)
  {
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v11();
    swift_release();
    swift_release();
  }
  else
  {
    sub_88144();
    uint64_t v26 = sub_3CEE4();
    uint64_t v37 = v12;
    uint64_t v25 = v22;
    __chkstk_darwin(v26);
    sub_4115C();
    sub_88144();
    sub_3BC4();
    uint64_t v13 = sub_8F5F0();
    uint64_t v14 = sub_56F8((uint64_t)v7, 0, 1, v13);
    __chkstk_darwin(v14);
    v22[-2] = v8;
    v22[-1] = a1;
    sub_88144();
    sub_3B0C();
    v22[1] = v22;
    __chkstk_darwin(v15);
    sub_4115C();
    sub_40FC();
    LODWORD(v25) = v16 & 1;
    uint64_t v24 = v17;
    int v23 = 0;
    sub_18294((uint64_t)v36, (uint64_t)v34);
    uint64_t v29 = v26;
    uint64_t v30 = v37;
    swift_bridgeObjectRetain();
    sub_8FDB0();
    swift_release();
    swift_release();
    sub_8F320();
    sub_B6C4();
    sub_7358();
    v18();
    swift_bridgeObjectRelease();
    sub_616C((uint64_t)v36);
    sub_1C4C0((uint64_t)v7, a2 + *(int *)(v10 + 28), &qword_BDD70);
    sub_1C4C0((uint64_t)&v35, a2 + *(int *)(v10 + 32), &qword_BAAD0);
    sub_573C(v34, a2 + 16);
    long long v19 = v32;
    *(_OWORD *)(a2 + 56) = v31;
    *(_OWORD *)(a2 + 72) = v19;
    *(void *)(a2 + 88) = v33;
    *(void *)a2 = v24;
    *(unsigned char *)(a2 + 8) = (_BYTE)v25;
    *(unsigned char *)(a2 + 9) = v23;
  }
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  return v20();
}

uint64_t sub_86F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v13 + 16))(&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_8F5B0();
  uint64_t v14 = sub_8F5F0();
  return sub_56F8(a3, 0, 1, v14);
}

uint64_t sub_87124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_8F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_8F320();
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, __n128))(v14 + 16))(v13, a1, v11);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = sub_872D0((uint64_t)v13);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v16 & 1;
  *(unsigned char *)(a3 + 9) = 0;
  return result;
}

uint64_t sub_872D0(uint64_t a1)
{
  uint64_t v4 = sub_3CEE4();
  if (v1) {
    goto LABEL_2;
  }
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  BOOL v10 = v4 == 0x486E6F6974636573 && v5 == 0xED00007265646165;
  if (v10 || (sub_8FF40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = 0;
LABEL_9:
    sub_8F3F0();
    sub_B6C4();
    sub_7358();
    v11();
    sub_8F320();
    sub_B6C4();
    (*(void (**)(uint64_t))(v12 + 8))(a1);
    return v2;
  }
  if (v8 == 0x6D6F74737563 && v9 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    sub_3D1F4();
    uint64_t v2 = v15;
    goto LABEL_9;
  }
  uint64_t v2 = sub_8FF40();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_18;
  }
  [objc_allocWithZone((Class)NSError) init];
  swift_willThrow();
LABEL_2:
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v6();
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v7();
  return v2;
}

uint64_t sub_87514@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_86A98(a1, a2);
}

uint64_t sub_8752C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_872D0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_87560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_86F70(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_87568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_87124(a1, *(void *)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for Text.InsetModifier()
{
  return &type metadata for Text.InsetModifier;
}

uint64_t sub_87580(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    long long v7 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, (uint64_t)(a2 + 2));
    long long v8 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(v4 + 80) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 56, (uint64_t)(a2 + 7));
    uint64_t v9 = *(int *)(a3 + 28);
    BOOL v10 = (void *)(v4 + v9);
    __n128 v11 = (char *)a2 + v9;
    uint64_t v12 = sub_8F5F0();
    if (sub_5754((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_5664(&qword_BDD70);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      sub_56F8((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *(void *)(v17 + 32);
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = v19;
      (**(void (***)(void))(v18 - 8))();
    }
    else
    {
      long long v20 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v20;
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
    }
  }
  return v4;
}

uint64_t sub_877A4(uint64_t a1, uint64_t a2)
{
  sub_616C(a1 + 16);
  sub_616C(a1 + 56);
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_8F5F0();
  if (!sub_5754(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 32);
  if (*(void *)(result + 24))
  {
    return sub_616C(result);
  }
  return result;
}

uint64_t sub_87868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 56, a2 + 56);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  BOOL v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_8F5F0();
  if (sub_5754((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_5664(&qword_BDD70);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    sub_56F8((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }
  else
  {
    long long v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }
  return a1;
}

uint64_t sub_87A3C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(void *)a1 = v6;
  sub_64C8((uint64_t *)(a1 + 16), a2 + 2);
  sub_64C8((uint64_t *)(a1 + 56), a2 + 7);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_8F5F0();
  int v11 = sub_5754((uint64_t)v8, 1, v10);
  int v12 = sub_5754((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      sub_56F8((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (long long *)((char *)a2 + v15);
  uint64_t v18 = *((void *)v17 + 3);
  if (!*(void *)(a1 + v15 + 24))
  {
    if (v18)
    {
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      (**(void (***)(uint64_t, long long *))(v18 - 8))(v16, v17);
      return a1;
    }
LABEL_13:
    long long v19 = *v17;
    long long v20 = v17[1];
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(_OWORD *)uint64_t v16 = v19;
    *(_OWORD *)(v16 + 16) = v20;
    return a1;
  }
  if (!v18)
  {
    sub_616C(v16);
    goto LABEL_13;
  }
  sub_64C8((uint64_t *)v16, (uint64_t *)v17);
  return a1;
}

uint64_t sub_87C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 72) = v7;
  uint64_t v11 = sub_8F5F0();
  if (sub_5754((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_5664(&qword_BDD70);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    sub_56F8((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_87D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  sub_616C(a1 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_616C(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8F5F0();
  int v11 = sub_5754((uint64_t)v8, 1, v10);
  int v12 = sub_5754((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      sub_56F8((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5664(&qword_BDD70);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_616C(a1 + v15);
  }
  long long v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_87F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_87F74);
}

uint64_t sub_87F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5664(&qword_BDD70);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return sub_5754(v9, a2, v8);
  }
}

uint64_t sub_88000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_88014);
}

uint64_t sub_88014(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5664(&qword_BDD70);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

void sub_88098()
{
  sub_12168();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_88150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label];
  swift_getKeyPath();
  sub_5664(&qword_BE7D8);
  sub_8F430();
  swift_release();
  (*(void (**)(double *, uint64_t))&stru_158.sectname[swift_isaMask & *v5])(&v8, a3);
  sub_616C((uint64_t)&v8);
  swift_getKeyPath();
  sub_8F430();
  swift_release();
  double v6 = v8;
  if (v9) {
    double v6 = 16.0;
  }
  if (v10) {
    double v6 = 0.0;
  }
  *(double *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset] = v6;
  return [v3 layoutIfNeeded];
}

uint64_t sub_882B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for TextComponent();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_88318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for TextComponent();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_88380()
{
  swift_getWitnessTable();

  return sub_8EAA0();
}

uint64_t sub_883FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_88478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_884F4()
{
  return sub_88584(&qword_BC360, (void (*)(uint64_t))type metadata accessor for Text);
}

uint64_t sub_8853C()
{
  return sub_88584(&qword_BB4D8, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_88584(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_885CC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label;
  sub_8EA50();
  char v10 = self;
  int v11 = v4;
  id v12 = objc_msgSend(v10, "ams_primaryText");
  uint64_t v13 = sub_8ED30();
  void v18[3] = v13;
  v18[4] = (uint64_t)&protocol witness table for FontSource;
  *sub_8374(v18) = (uint64_t)UIFontTextStyleBody;
  (*(void (**)(void))(*(void *)(v13 - 8) + 104))();
  uint64_t v14 = UIFontTextStyleBody;
  *(void *)&v4[v9] = sub_8EA40();
  *(void *)&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset] = 0;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for TextComponent();
  id v15 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  sub_88AB4();

  return v15;
}

uint64_t sub_88764()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TextComponent();
  id v1 = objc_msgSendSuper2(&v3, "prepareForReuse");
  return (*(uint64_t (**)(id))&stru_158.segname[(swift_isaMask & **(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label])
                                                        - 8])(v1);
}

id sub_8883C()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for TextComponent();
  objc_msgSendSuper2(&v4, "layoutSubviews");
  id v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label];
  id v2 = [v0 contentView];
  [v2 bounds];

  sub_8FC70();
  return objc_msgSend(v1, "setFrame:");
}

double sub_8895C(double a1, double a2, float a3, float a4)
{
  if (a3 == 1000.0) {
    double v8 = a1;
  }
  else {
    double v8 = 1.79769313e308;
  }
  if (a4 == 1000.0) {
    double v9 = a2;
  }
  else {
    double v9 = 1.79769313e308;
  }
  double v10 = v8
      - (*(double *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset]
       + *(double *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset]);
  id v11 = *(id *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label];
  id v12 = [v4 contentView];
  objc_msgSend(v11, "measurementsWithFitting:in:", v12, v10, v9);
  if (a3 == 1000.0) {
    double v14 = a1;
  }
  else {
    double v14 = v13;
  }

  return v14;
}

void sub_88AB4()
{
  id v1 = [v0 contentView];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label]];
}

void sub_88B18()
{
}

id sub_88B58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextComponent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TextComponent()
{
  return self;
}

void sub_88BC0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_8FD50();
    sub_8902C();
    sub_8906C();
    sub_8FB40();
    uint64_t v1 = v20;
    uint64_t v18 = v21;
    uint64_t v2 = v22;
    int64_t v3 = v23;
    unint64_t v4 = v24;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_8FD60()) {
      goto LABEL_39;
    }
    sub_8902C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v19;
    swift_unknownObjectRelease();
    int64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v19) {
      goto LABEL_39;
    }
LABEL_26:
    self;
    id v15 = (void *)swift_dynamicCastObjCClass();
    if (!v15)
    {

      goto LABEL_32;
    }
    id v16 = [v15 keyWindow];

    int64_t v3 = v11;
    unint64_t v4 = v9;
    if (v16)
    {
      sub_8FA50();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_8FA90();
      }
      sub_8FAA0();
      sub_8FA80();
LABEL_32:
      int64_t v3 = v11;
      unint64_t v4 = v9;
    }
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    int64_t v11 = v3;
LABEL_25:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_39;
    }
    goto LABEL_26;
  }
  int64_t v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v18 + 8 * v11);
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_23;
      }
      int64_t v14 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_23;
      }
      int64_t v14 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        int64_t v11 = v14;
      }
      else
      {
        int64_t v11 = v3 + 5;
        if (v3 + 5 >= v8) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v18 + 8 * v11);
        if (!v13)
        {
          int64_t v17 = v3 + 6;
          while (v17 < v8)
          {
            unint64_t v13 = *(void *)(v18 + 8 * v17++);
            if (v13)
            {
              int64_t v11 = v17 - 1;
              goto LABEL_24;
            }
          }
LABEL_39:
          sub_221F8();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v9 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

void *UIApplication.regularWidth.unsafeMutableAddressor()
{
  return &static UIApplication.regularWidth;
}

double static UIApplication.regularWidth.getter()
{
  return 375.0;
}

uint64_t static UIApplication.window.getter()
{
  id v0 = [(id)swift_getObjCClassFromMetadata() sharedApplication];
  id v1 = [v0 connectedScenes];

  sub_8902C();
  sub_8906C();
  uint64_t v2 = sub_8FB30();

  sub_88BC0(v2);
  unint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_8FEB0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    if (!v6)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v7 = (id)sub_8FDF0();
    goto LABEL_6;
  }
  if (*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8)))
  {
    id v7 = *(id *)(v4 + 32);
LABEL_6:
    uint64_t v6 = (uint64_t)v7;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_8902C()
{
  unint64_t result = qword_BE818;
  if (!qword_BE818)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BE818);
  }
  return result;
}

unint64_t sub_8906C()
{
  unint64_t result = qword_BE820;
  if (!qword_BE820)
  {
    sub_8902C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE820);
  }
  return result;
}

void *static UIApplication.hasNotch()()
{
  unint64_t result = (void *)static UIApplication.window.getter();
  if (result)
  {
    id v1 = result;
    [result safeAreaInsets];
    double v3 = v2;

    return (void *)(v3 > 0.0);
  }
  return result;
}

void *static UIApplication.isCompact()()
{
  unint64_t result = (void *)static UIApplication.window.getter();
  if (result)
  {
    id v1 = result;
    [result frame];
    double Width = CGRectGetWidth(v3);

    return (void *)(Width < 375.0);
  }
  return result;
}

unint64_t sub_89164(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_89188(double a1)
{
  id v3 = [v1 layer];
  [v3 setCornerRadius:a1];

  id v4 = [v1 layer];
  [v4 setMasksToBounds:1];
}

uint64_t sub_8922C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_89280(void (*a1)(), uint64_t a2, double a3, double a4)
{
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(double *)(v9 + 24) = a3;
  id v15 = sub_894EC;
  uint64_t v16 = v9;
  int64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  unint64_t v13 = sub_3A478;
  int64_t v14 = &unk_B2628;
  unint64_t v10 = _Block_copy(&v11);
  swift_release();
  if (a1)
  {
    id v15 = a1;
    uint64_t v16 = a2;
    int64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    unint64_t v13 = sub_8922C;
    int64_t v14 = &unk_B2650;
    a1 = (void (*)())_Block_copy(&v11);
    swift_retain();
    swift_release();
  }
  [self animateWithDuration:134 delay:v10 options:a1 animations:a4 completion:0.0];
  _Block_release(a1);
  _Block_release(v10);
}

uint64_t sub_89410()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_89448(double a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [Strong setAlpha:a1];
  }
}

uint64_t sub_894B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_894EC()
{
  sub_89448(*(double *)(v0 + 24));
}

uint64_t sub_894F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_89508()
{
  return swift_release();
}

id sub_89518(char a1, char a2)
{
  id v4 = self;
  id v5 = [v4 areAnimationsEnabled];
  [v4 setAnimationsEnabled:a2 & 1];
  sub_895A4(a1);

  return [v4 setAnimationsEnabled:v5];
}

void sub_895A4(char a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (a1)
  {
    uint64_t v9 = sub_898DC;
    uint64_t v10 = v3;
    id v5 = _NSConcreteStackBlock;
    uint64_t v6 = 1107296256;
    id v7 = sub_3A478;
    uint64_t v8 = &unk_B26C8;
    id v4 = _Block_copy(&v5);
    swift_release();
    [v2 animateWithDuration:v4 animations:0.165];
  }
  else
  {
    uint64_t v9 = sub_898BC;
    uint64_t v10 = v3;
    id v5 = _NSConcreteStackBlock;
    uint64_t v6 = 1107296256;
    id v7 = sub_3A478;
    uint64_t v8 = &unk_B26A0;
    id v4 = _Block_copy(&v5);
    swift_release();
    [v2 animateWithDuration:v4 animations:0.25];
  }
  _Block_release(v4);
}

uint64_t sub_8971C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_89754()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    CGAffineTransformMakeScale(&v4, 0.97, 0.97);
    [v1 setTransform:&v4];
  }
  swift_beginAccess();
  uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 setAlpha:0.5];
  }
}

void sub_89814()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    v4[0] = 0x3FF0000000000000;
    v4[1] = 0;
    _OWORD v4[2] = 0;
    v4[3] = 0x3FF0000000000000;
    v4[4] = 0;
    uint64_t v4[5] = 0;
    [Strong setTransform:v4];
  }
  swift_beginAccess();
  uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 setAlpha:1.0];
  }
}

void sub_898BC()
{
}

uint64_t sub_898C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_898D4()
{
  return swift_release();
}

void sub_898DC()
{
}

void sub_898EC(uint64_t a1, uint64_t a2, char a3)
{
  CGAffineTransform v4 = v3;
  id v8 = [v3 superview];
  if (v8)
  {
    id v24 = v8;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    sub_5664(&qword_BBEE8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_96820;
    id v10 = [v4 centerXAnchor];
    id v11 = [v24 centerXAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    *(void *)(v9 + 32) = v12;
    id v13 = [v4 centerYAnchor];
    id v14 = [v24 centerYAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v9 + 40) = v15;
    sub_8FA80();
    sub_89ED4();
    Class isa = sub_8FA60().super.isa;
    swift_bridgeObjectRelease();
    [v24 addConstraints:isa];

    if ((a3 & 1) == 0)
    {
      double v17 = *(double *)&a2;
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_96820;
      id v19 = [v4 widthAnchor];
      id v20 = [v19 constraintEqualToConstant:*(double *)&a1];

      *(void *)(v18 + 32) = v20;
      id v21 = [v4 heightAnchor];
      id v22 = [v21 constraintEqualToConstant:v17];

      *(void *)(v18 + 40) = v22;
      sub_8FA80();
      Class v23 = sub_8FA60().super.isa;
      swift_bridgeObjectRelease();
      [v4 addConstraints:v23];
    }
  }
}

void sub_89BCC(char a1, double a2, double a3, double a4, double a5)
{
  id v11 = [v5 superview];
  if (v11)
  {
    id v12 = v11;
    if (a1)
    {
      id v13 = [v11 safeAreaLayoutGuide];
      id v14 = [v13 topAnchor];

      id v15 = [v12 safeAreaLayoutGuide];
      id v16 = [v15 bottomAnchor];
    }
    else
    {
      id v14 = [v11 topAnchor];
      id v16 = [v12 bottomAnchor];
    }
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    sub_5664(&qword_BBEE8);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_93470;
    id v18 = [v5 topAnchor];
    id v19 = [v18 constraintEqualToAnchor:v14 constant:a2];

    *(void *)(v17 + 32) = v19;
    id v20 = [v5 leadingAnchor];
    id v21 = [v12 leadingAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21 constant:a3];

    *(void *)(v17 + 40) = v22;
    id v23 = [v5 bottomAnchor];
    id v24 = [v23 constraintEqualToAnchor:v16 constant:-a4];

    *(void *)(v17 + 48) = v24;
    id v25 = [v5 trailingAnchor];
    id v26 = [v12 trailingAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26 constant:-a5];

    *(void *)(v17 + 56) = v27;
    sub_8FA80();
    sub_89ED4();
    Class isa = sub_8FA60().super.isa;
    swift_bridgeObjectRelease();
    [v12 addConstraints:isa];

    sub_8A2CC();
  }
  else
  {
    sub_8A2CC();
  }
}

unint64_t sub_89ED4()
{
  unint64_t result = qword_BBEF0;
  if (!qword_BBEF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BBEF0);
  }
  return result;
}

void sub_89F14(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  id v9 = [v4 superview];
  if (v9)
  {
    id v10 = v9;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    sub_5664(&qword_BBEE8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_93460;
    id v12 = [v5 leadingAnchor];
    id v13 = [v10 leadingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13 constant:a2];

    *(void *)(v11 + 32) = v14;
    id v15 = [v5 bottomAnchor];
    id v16 = [v10 safeAreaLayoutGuide];
    id v17 = [v16 bottomAnchor];

    id v18 = [v15 constraintEqualToAnchor:v17 constant:-a3];
    *(void *)(v11 + 40) = v18;
    id v19 = [v5 trailingAnchor];
    id v20 = [v10 trailingAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20 constant:-a4];

    *(void *)(v11 + 48) = v21;
    sub_8FA80();
    sub_89ED4();
    Class isa = sub_8FA60().super.isa;
    swift_bridgeObjectRelease();
    [v10 addConstraints:isa];
  }
}

void sub_8A18C(double a1)
{
  uint64_t v2 = v1;
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_5664(&qword_BBEE8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_95BD0;
  id v5 = [v2 heightAnchor];
  id v6 = [v2 widthAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6 multiplier:a1];

  *(void *)(v4 + 32) = v7;
  sub_8FA80();
  sub_89ED4();
  Class isa = sub_8FA60().super.isa;
  swift_bridgeObjectRelease();
  [v2 addConstraints:isa];
}

id sub_8A2F0(void *a1)
{
  id v1 = [a1 presentedViewController];
  self;
  if (!v1)
  {
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      id v12 = (void *)v11;
      id v13 = a1;
      id v14 = [v12 viewControllers];
      sub_8A5A0();
      unint64_t v15 = sub_8FA70();

      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_8FEB0();
        swift_bridgeObjectRelease();
        if (v16)
        {
LABEL_12:
          BOOL v17 = __OFSUB__(v16, 1);
          uint64_t v18 = v16 - 1;
          if (v17)
          {
            __break(1u);
          }
          else
          {
            sub_89160(v18, (v15 & 0xC000000000000001) == 0, v15);
            if ((v15 & 0xC000000000000001) == 0)
            {
              id v19 = *(id *)(v15 + 8 * v18 + 32);
LABEL_15:
              id v20 = v19;
              swift_bridgeObjectRelease();
              uint64_t v10 = sub_8A2F0(v20);

              return (id)v10;
            }
          }
          id v19 = (id)sub_8FDF0();
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
        if (v16) {
          goto LABEL_12;
        }
      }

      swift_bridgeObjectRelease();
    }
    return a1;
  }
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = v1;
    id v5 = [v3 viewControllers];
    sub_8A5A0();
    unint64_t v6 = sub_8FA70();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_8FEB0();
      swift_bridgeObjectRelease();
      if (v7)
      {
LABEL_5:
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
        }
        else
        {
          sub_89160(v7 - 1, (v6 & 0xC000000000000001) == 0, v6);
          if ((v6 & 0xC000000000000001) == 0)
          {
            id v8 = *(id *)(v6 + 8 * (v7 - 1) + 32);
LABEL_8:
            id v9 = v8;
            swift_bridgeObjectRelease();
            uint64_t v10 = sub_8A2F0(v9);

            return (id)v10;
          }
        }
        id v8 = (id)sub_8FDF0();
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
      if (v7) {
        goto LABEL_5;
      }
    }

    swift_bridgeObjectRelease();
  }
  uint64_t v22 = sub_8A2F0(v1);

  return (id)v22;
}

unint64_t sub_8A5A0()
{
  unint64_t result = qword_BE990;
  if (!qword_BE990)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BE990);
  }
  return result;
}

uint64_t sub_8A5E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8E980();
  uint64_t v26 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8EA70();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = type metadata accessor for WebPageDestination();
  uint64_t v10 = sub_3CFF0();
  if (v2)
  {
    uint64_t v10 = swift_errorRelease();
    char v11 = 2;
  }
  else
  {
    char v11 = v10 & 1;
  }
  *(unsigned char *)a2 = v11;
  __chkstk_darwin(v10);
  *((void *)&v25 - 2) = v8;
  *((void *)&v25 - 1) = a1;
  sub_3B0C();
  sub_BEB0((uint64_t)&v25, a2 + 8);
  *(void *)(a2 + 48) = sub_14174(0x6B63617065646973, 0xE800000000000000, v9);
  sub_3D2F0(7107189, 0xE300000000000000, v9, (uint64_t)v7);
  sub_8F320();
  sub_B6C4();
  sub_7358();
  v17(v12, v13, v14, v15, v16);
  swift_release();
  sub_8F3F0();
  sub_B6C4();
  sub_7358();
  v23(v18, v19, v20, v21, v22);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(a2 + *(int *)(v9 + 28), v7, v5);
}

uint64_t sub_8A8F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_8A5E0(a1, a2);
}

uint64_t type metadata accessor for WebPageDestination()
{
  uint64_t result = qword_BE880;
  if (!qword_BE880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_8A958(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)id v4 = *a2;
    id v4 = (unsigned char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a1 + 8;
    uint64_t v8 = a2 + 1;
    uint64_t v9 = a2[4];
    if (v9)
    {
      uint64_t v10 = a2[5];
      *((void *)v4 + 4) = v9;
      *((void *)v4 + 5) = v10;
      (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
    }
    else
    {
      long long v12 = *(_OWORD *)(a2 + 3);
      *uint64_t v7 = *v8;
      *(_OWORD *)(v4 + 24) = v12;
      *((void *)v4 + 5) = a2[5];
    }
    *((void *)v4 + 6) = a2[6];
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = &v4[v13];
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = sub_8E980();
    BOOL v17 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_8AAA4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32)) {
    sub_616C(a1 + 8);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_8E980();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_8AB2C(uint64_t a1, char *a2, uint64_t a3)
{
  char v7 = *a2;
  uint64_t v6 = a2 + 8;
  *(unsigned char *)a1 = v7;
  uint64_t v8 = a1 + 8;
  uint64_t v9 = *((void *)a2 + 4);
  if (v9)
  {
    uint64_t v10 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v8, (uint64_t)v6);
  }
  else
  {
    long long v11 = *((_OWORD *)v6 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v6;
    *(_OWORD *)(v8 + 16) = v11;
    *(void *)(v8 + 32) = *((void *)v6 + 4);
  }
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_8E980();
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_8AC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = a1 + 8;
  char v7 = (long long *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v8)
    {
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    long long v9 = *v7;
    long long v10 = v7[1];
    *(void *)(v6 + 32) = *((void *)v7 + 4);
    *(_OWORD *)uint64_t v6 = v9;
    *(_OWORD *)(v6 + 16) = v10;
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_616C(a1 + 8);
    goto LABEL_7;
  }
  sub_64C8((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_8AD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_8ADDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = a1 + 8;
  if (*(void *)(a1 + 32)) {
    sub_616C(a1 + 8);
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v6 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(v6 + 32) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_8E980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_8AE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8AEA8);
}

uint64_t sub_8AEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_8E980();
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    return sub_5754(v10, a2, v9);
  }
}

uint64_t sub_8AF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_8AF50);
}

uint64_t sub_8AF50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = sub_8E980();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return sub_56F8(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_8AFD0()
{
  uint64_t result = sub_8E980();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_8B080(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithRequest:a1 presentingViewController:a2];

  return v4;
}

void sub_8B0E0(void *a1, void (*a2)(void **, void))
{
  id v4 = a1;
  id v3 = a1;
  a2(&v4, 0);
}

uint64_t sub_8B13C(uint64_t (*a1)(char *, void))
{
  char v2 = 0;
  return a1(&v2, 0);
}

uint64_t sub_8B17C(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t))
{
  uint64_t v3 = 0;
  return a2(&v3, a1);
}

uint64_t sub_8B1BC()
{
  return sub_8F7F0();
}

uint64_t sub_8B1E0()
{
  return sub_8F7F0();
}

uint64_t sub_8B204()
{
  return sub_8F7D0();
}

void sub_8B228()
{
  sub_3C7BC();
  uint64_t v2 = v1;
  id v4 = v3;
  uint64_t v5 = sub_8F390();
  uint64_t v6 = sub_3C870(v5);
  __chkstk_darwin(v6);
  sub_22620();
  sub_8F750();
  sub_7084();
  __chkstk_darwin(v7);
  sub_B7F0();
  uint64_t v8 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_preloadingCompletionPromise;
  sub_5664((uint64_t *)&unk_BE960);
  uint64_t v9 = v0;
  *(void *)&v0[v8] = sub_8F820();
  sub_8EC10();
  sub_8F560();
  uint64_t v10 = sub_8F770();
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v45[0] + 128))(v10);
  sub_8F770();
  sub_F040(0, &qword_BBBD0);
  sub_8E774();
  uint64_t v12 = (void *)v45[0];
  sub_8E774();
  uint64_t v13 = v45[1];
  *(void *)&v9[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_objectGraph] = v2;
  sub_13740((uint64_t)(v4 + 8), (uint64_t)&v9[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_resolveAction], &qword_BAAD0);
  swift_retain();

  uint64_t v14 = sub_8F720();
  v47.receiver = v9;
  v47.Class super_class = (Class)type metadata accessor for WebPageViewController();
  Class super_class = v47.super_class;
  id v15 = objc_msgSendSuper2(&v47, "initWithBag:account:clientInfo:", v14, v11, v12);
  swift_unknownObjectRelease();
  if (*((void *)v4 + 6))
  {
    id v16 = v15;
    swift_bridgeObjectRetain();
    v17.super.Class isa = sub_8F930().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v18 = v15;
    v17.super.Class isa = 0;
  }
  [v15 setClientOptions:v17.super.isa];

  [v15 setDelegate:v15];
  id v19 = v15;
  if (v13)
  {
    v20.super.Class isa = sub_8F930().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v20.super.Class isa = 0;
  }
  [v15 setMetricsOverlay:v20.super.isa];

  int v21 = *v4;
  if (v21 != 2)
  {
    unsigned int v42 = v21 & 1;
    sub_5664((uint64_t *)&unk_BB5E0);
    uint64_t v22 = sub_8F3E0();
    sub_183C4(v22);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
    Class v46 = super_class;
    v45[0] = v15;
    id v41 = v15;
    id v23 = (id)AMSLogKey();
    if (v23)
    {
      id v24 = v23;
      uint64_t v25 = sub_8F9D0();
      uint64_t v38 = v26;
      uint64_t v39 = v25;

      sub_7E428();
      sub_4D154();
      uint64_t v27 = sub_8E7D4();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v43[0] = v27;
      sub_8F360();
      sub_3C708((uint64_t)v43, &qword_BC780);
      sub_1842C();
      uint64_t MetatypeMetadata = &type metadata for String;
      v43[0] = v39;
      v43[1] = v38;
      sub_8F360();
      sub_3C708((uint64_t)v43, &qword_BC780);
      v28._countAndFlagsBits = 93;
    }
    else
    {
      sub_7E444();
      sub_4D154();
      uint64_t v29 = sub_8E7D4();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v43[0] = v29;
      sub_8F360();
      sub_3C708((uint64_t)v43, &qword_BC780);
      v28._countAndFlagsBits = 58;
    }
    v28._object = (void *)0xE100000000000000;
    sub_8F370(v28);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)v45);
    sub_8E740();
    Class v46 = (Class)&type metadata for Bool;
    LOBYTE(v45[0]) = v42;
    sub_8F3B0();
    sub_3C708((uint64_t)v45, &qword_BC780);
    sub_43634();
    swift_bridgeObjectRelease();
    [v41 setReducedMemoryMode:v42];
  }
  type metadata accessor for WebPageDestination();
  id v30 = v15;
  sub_8E950(v31);
  uint64_t v33 = v32;
  id v34 = [v30 loadURL:v32];

  uint64_t v35 = sub_8F810();
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  uint64_t v36 = (void *)sub_8FBD0();
  sub_8DE50(v35, v36);

  swift_release();
  swift_release();

  swift_release();
  sub_8DFA8((uint64_t)v4, (void (*)(void))type metadata accessor for WebPageDestination);

  sub_7358();
  v37();
  sub_3C808();
}

void sub_8B814()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_preloadingCompletionPromise;
  sub_5664((uint64_t *)&unk_BE960);
  *(void *)&v0[v1] = sub_8F820();

  sub_8FEA0();
  __break(1u);
}

void sub_8B8BC()
{
}

id sub_8B918()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for WebPageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WebPageViewController()
{
  return self;
}

uint64_t sub_8B9C8()
{
  return swift_retain();
}

uint64_t sub_8B9D8()
{
  return sub_8B9C8();
}

Swift::Int sub_8B9FC()
{
  return sub_E1F0();
}

void sub_8BA18()
{
  sub_3C7BC();
  sub_8E794(v2, v3, v4, v5);
  sub_7084();
  __chkstk_darwin(v6);
  sub_8E680();
  sub_7084();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_8E550();
  uint64_t v9 = sub_3C870(v8);
  __chkstk_darwin(v9);
  sub_7E568();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v10 = sub_8F3E0();
  sub_183C4(v10);
  *(_OWORD *)(sub_8E5E0() + 16) = xmmword_91D00;
  uint64_t v26 = (void *)type metadata accessor for WebPageViewController();
  v25[0] = v1;
  id v11 = v1;
  if ((id)AMSLogKey())
  {
    sub_8F9D0();
    sub_8E658();
    sub_7E428();
    sub_4D154();
    uint64_t v12 = sub_8E6FC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v29 = v12;
    sub_8F360();
    sub_8E864();
    sub_1842C();
    sub_8E62C((uint64_t)&type metadata for String);
    sub_8E864();
    v13._countAndFlagsBits = 93;
  }
  else
  {
    sub_7E444();
    sub_4D154();
    uint64_t v14 = sub_8E80C();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v29 = v14;
    sub_8F360();
    sub_3C708((uint64_t)&v29, &qword_BC780);
    v13._countAndFlagsBits = 58;
  }
  v13._object = (void *)0xE100000000000000;
  sub_8F370(v13);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v25);
  sub_8E734();
  sub_8F340();
  uint64_t v26 = (void *)sub_F040(0, &qword_BB778);
  v25[0] = v0;
  id v15 = v0;
  sub_8E7B4();
  sub_3C708((uint64_t)v25, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  id v16 = (void *)sub_8FBD0();
  NSDictionary v17 = (void *)swift_allocObject();
  v17[2] = v11;
  void v17[3] = v23;
  v17[4] = v24;
  v17[5] = v0;
  uint64_t v27 = sub_8E378;
  Swift::String v28 = v17;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  _OWORD v25[2] = sub_3A478;
  uint64_t v26 = &unk_B2910;
  id v18 = _Block_copy(v25);
  id v19 = v11;
  id v20 = v0;
  swift_retain();
  swift_release();
  sub_8F200();
  v25[0] = _swiftEmptyArrayStorage;
  sub_3C0EC();
  sub_5664(&qword_BC7D8);
  sub_8E200();
  sub_8E5B0();
  sub_8E6D8();
  _Block_release(v18);

  sub_7358();
  v21();
  sub_7358();
  v22();
  sub_3C808();
}

void sub_8BDA0(void *a1, void (*a2)(void, uint64_t), uint64_t a3, void *a4)
{
  uint64_t v8 = sub_8F390();
  __chkstk_darwin(v8 - 8);
  sub_8EC70();
  sub_8F560();
  uint64_t v9 = sub_8F770();
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)aBlock[0] + 88))(v9);
  if (v10
    && (id v11 = v10,
        id v12 = [v10 topViewController],
        v11,
        v12))
  {
    uint64_t v32 = a3;
    Swift::String v13 = (void *)sub_F040(0, (unint64_t *)&qword_BE990);
    id v14 = v12;
    id v15 = sub_8A2F0(v14);

    sub_5664((uint64_t *)&unk_BB5E0);
    sub_8F3E0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D00;
    id v34 = (void *)type metadata accessor for WebPageViewController();
    aBlock[0] = a1;
    id v16 = v15;
    id v17 = a1;
    id v18 = (id)AMSLogKey();
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = sub_8F9D0();
      uint64_t v22 = v21;

      sub_8F380();
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      sub_8F370(v39);
      sub_820C(aBlock, (uint64_t)v34);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v37[0] = DynamicType;
      sub_8F360();
      sub_3C708((uint64_t)v37, &qword_BC780);
      v40._countAndFlagsBits = 5972026;
      v40._object = (void *)0xE300000000000000;
      sub_8F370(v40);
      uint64_t MetatypeMetadata = &type metadata for String;
      v37[0] = v20;
      v37[1] = v22;
      sub_8F360();
      sub_3C708((uint64_t)v37, &qword_BC780);
      v24._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      sub_8F370(v41);
      sub_820C(aBlock, (uint64_t)v34);
      uint64_t v26 = swift_getDynamicType();
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v37[0] = v26;
      sub_8F360();
      sub_3C708((uint64_t)v37, &qword_BC780);
      v24._countAndFlagsBits = 58;
    }
    v24._object = (void *)0xE100000000000000;
    sub_8F370(v24);
    sub_8F3A0();
    type metadata accessor for Log();
    sub_616C((uint64_t)aBlock);
    sub_8F340();
    id v34 = v13;
    aBlock[0] = v16;
    id v27 = v16;
    sub_8F3B0();
    sub_3C708((uint64_t)aBlock, &qword_BC780);
    sub_4386C();
    swift_bridgeObjectRelease();
    sub_F040(0, &qword_BBB90);
    id v28 = sub_8B080(a4, v27);
    id v29 = [v28 performAuthentication];
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a2;
    *(void *)(v30 + 24) = v32;
    uint64_t v35 = sub_8E518;
    uint64_t v36 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_8C2D0;
    id v34 = &unk_B2960;
    long long v31 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v29 addFinishBlock:v31];
    swift_release();

    _Block_release(v31);
  }
  else
  {
    sub_8E280();
    uint64_t v25 = swift_allocError();
    a2(0, v25);
    swift_errorRelease();
    swift_release();
  }
}

void sub_8C308()
{
  sub_3C7BC();
  sub_8E794(v2, v3, v4, v5);
  sub_7084();
  __chkstk_darwin(v6);
  sub_8E680();
  sub_7084();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_8E550();
  uint64_t v9 = sub_3C870(v8);
  __chkstk_darwin(v9);
  sub_7E568();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v10 = sub_8F3E0();
  sub_183C4(v10);
  *(_OWORD *)(sub_8E5E0() + 16) = xmmword_91D00;
  uint64_t v26 = (void *)type metadata accessor for WebPageViewController();
  v25[0] = v1;
  id v11 = v1;
  if ((id)AMSLogKey())
  {
    sub_8F9D0();
    sub_8E658();
    sub_7E428();
    sub_4D154();
    uint64_t v12 = sub_8E6FC();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v29 = v12;
    sub_8F360();
    sub_8E864();
    sub_1842C();
    sub_8E62C((uint64_t)&type metadata for String);
    sub_8E864();
    v13._countAndFlagsBits = 93;
  }
  else
  {
    sub_7E444();
    sub_4D154();
    uint64_t v14 = sub_8E80C();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    uint64_t v29 = v14;
    sub_8F360();
    sub_3C708((uint64_t)&v29, &qword_BC780);
    v13._countAndFlagsBits = 58;
  }
  v13._object = (void *)0xE100000000000000;
  sub_8F370(v13);
  sub_8F3A0();
  type metadata accessor for Log();
  sub_616C((uint64_t)v25);
  sub_8E734();
  sub_8F340();
  uint64_t v26 = (void *)sub_F040(0, &qword_BE980);
  v25[0] = v0;
  id v15 = v0;
  sub_8E7B4();
  sub_3C708((uint64_t)v25, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  id v16 = (void *)sub_8FBD0();
  id v17 = (void *)swift_allocObject();
  v17[2] = v11;
  void v17[3] = v23;
  v17[4] = v24;
  v17[5] = v0;
  id v27 = sub_8E274;
  id v28 = v17;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  _OWORD v25[2] = sub_3A478;
  uint64_t v26 = &unk_B2848;
  id v18 = _Block_copy(v25);
  id v19 = v11;
  id v20 = v0;
  swift_retain();
  swift_release();
  sub_8F200();
  v25[0] = _swiftEmptyArrayStorage;
  sub_3C0EC();
  sub_5664(&qword_BC7D8);
  sub_8E200();
  sub_8E5B0();
  sub_8E6D8();
  _Block_release(v18);

  sub_7358();
  v21();
  sub_7358();
  v22();
  sub_3C808();
}

void sub_8C690(uint64_t a1, void (*a2)(void, uint64_t), uint64_t a3, void *a4)
{
  sub_8EC70();
  sub_8F560();
  uint64_t v7 = sub_8F770();
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v18[0] + 88))(v7);
  if (v8
    && (uint64_t v9 = v8, v10 = [v8 topViewController], v9, v10))
  {
    sub_F040(0, &qword_BBB70);
    id v11 = a4;
    id v12 = v10;
    id v13 = sub_8B080(v11, v12);
    id v14 = [v13 present];
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    v18[4] = sub_8E304;
    uint64_t v18[5] = v15;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    void v18[2] = sub_8C2D0;
    void v18[3] = &unk_B2898;
    id v16 = _Block_copy(v18);
    swift_retain();
    swift_release();
    [v14 addFinishBlock:v16];
    _Block_release(v16);
    swift_release();
  }
  else
  {
    sub_8E280();
    uint64_t v17 = swift_allocError();
    a2(0, v17);
    swift_errorRelease();
    swift_release();
  }
}

uint64_t sub_8C8FC(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(void))
{
  id v12 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v12;
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;
  a8();

  return swift_release();
}

void sub_8C9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_8E910();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void sub_8CA2C()
{
  sub_3C7BC();
  uint64_t v27 = v1;
  uint64_t v3 = v2;
  sub_8F1E0();
  sub_7084();
  __chkstk_darwin(v4);
  sub_B7F0();
  sub_8F210();
  sub_7084();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_8E550();
  uint64_t v7 = sub_3C870(v6);
  __chkstk_darwin(v7);
  sub_7E568();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v8 = sub_8F3E0();
  sub_183C4(v8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_934E0;
  *((void *)&v30 + 1) = type metadata accessor for WebPageViewController();
  *(void *)&long long v29 = v0;
  id v26 = v0;
  id v9 = (id)AMSLogKey();
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = sub_8F9D0();
    uint64_t v13 = v12;

    sub_7E428();
    sub_4D154();
    uint64_t v14 = sub_8E6A8(&v29);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v33[0] = v14;
    sub_8F360();
    sub_3C708((uint64_t)v33, &qword_BC780);
    sub_1842C();
    uint64_t MetatypeMetadata = &type metadata for String;
    v33[0] = v11;
    v33[1] = v13;
    sub_8F360();
    sub_3C708((uint64_t)v33, &qword_BC780);
    v15._countAndFlagsBits = 93;
  }
  else
  {
    sub_7E444();
    sub_4D154();
    uint64_t v16 = sub_8E6A8(&v29);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v33[0] = v16;
    sub_8F360();
    sub_3C708((uint64_t)v33, &qword_BC780);
    v15._countAndFlagsBits = 58;
  }
  v15._object = (void *)0xE100000000000000;
  sub_8F370(v15);
  sub_8F3A0();
  sub_616C((uint64_t)&v29);
  sub_8E734();
  sub_8F340();
  if (v3)
  {
    *((void *)&v30 + 1) = sub_F040(0, &qword_BE978);
    *(void *)&long long v29 = v3;
  }
  else
  {
    long long v29 = 0u;
    long long v30 = 0u;
  }
  id v17 = v3;
  sub_8F3B0();
  sub_3C708((uint64_t)&v29, &qword_BC780);
  sub_8E844();
  if (v27)
  {
    swift_getErrorValue();
    *((void *)&v30 + 1) = v28;
    sub_8374((uint64_t *)&v29);
    sub_8E760();
    v18();
  }
  else
  {
    long long v29 = 0u;
    long long v30 = 0u;
  }
  type metadata accessor for Log();
  sub_8F3B0();
  sub_3C708((uint64_t)&v29, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_F040(0, (unint64_t *)&qword_BBBB0);
  id v19 = (void *)sub_8FBD0();
  id v20 = (void *)swift_allocObject();
  v20[2] = v26;
  void v20[3] = v3;
  _OWORD v20[4] = v27;
  long long v31 = sub_8E1DC;
  uint64_t v32 = v20;
  *(void *)&long long v29 = _NSConcreteStackBlock;
  *((void *)&v29 + 1) = 1107296256;
  *(void *)&long long v30 = sub_3A478;
  *((void *)&v30 + 1) = &unk_B27D0;
  uint64_t v21 = _Block_copy(&v29);
  id v22 = v26;
  id v23 = v17;
  swift_errorRetain();
  swift_release();
  sub_8F200();
  *(void *)&long long v29 = _swiftEmptyArrayStorage;
  sub_3C0EC();
  sub_5664(&qword_BC7D8);
  sub_8E200();
  sub_8FD40();
  sub_8FBE0();
  _Block_release(v21);

  sub_7358();
  v24();
  sub_7358();
  v25();
  sub_3C808();
}

uint64_t sub_8CEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8EBD0();
  sub_8F560();
  sub_8F770();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 200))(a2, a3);
  return swift_release();
}

void sub_8D034()
{
  sub_3C7BC();
  uint64_t v46 = v1;
  uint64_t v44 = v2;
  uint64_t v50 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = sub_8EC80();
  uint64_t v7 = sub_3C870(v6);
  __chkstk_darwin(v7);
  sub_22620();
  uint64_t v43 = v8;
  uint64_t v9 = sub_8F650();
  sub_7084();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_22620();
  uint64_t v45 = v13;
  uint64_t v14 = sub_8F390();
  uint64_t v15 = sub_3C870(v14);
  __chkstk_darwin(v15);
  sub_B7F0();
  sub_5664((uint64_t *)&unk_BB5E0);
  uint64_t v16 = sub_8F3E0();
  sub_183C4(v16);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_934E0;
  uint64_t v42 = type metadata accessor for WebPageViewController();
  *((void *)&v58 + 1) = v42;
  *(void *)&long long v57 = v0;
  id v17 = v0;
  id v18 = (id)AMSLogKey();
  uint64_t v48 = v9;
  uint64_t v47 = v11;
  uint64_t v49 = v17;
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = sub_8F9D0();
    uint64_t v22 = v21;

    sub_8F380();
    sub_7E40C();
    sub_8E578();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_8E60C(MetatypeMetadata);
    sub_3C708((uint64_t)&v54, &qword_BC780);
    sub_1842C();
    uint64_t v55 = &type metadata for String;
    *(void *)&long long v54 = v20;
    *((void *)&v54 + 1) = v22;
    sub_8F360();
    sub_3C708((uint64_t)&v54, &qword_BC780);
    v24._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    sub_7E40C();
    uint64_t v25 = sub_8E6A8(&v57);
    uint64_t v55 = (void *)swift_getMetatypeMetadata();
    *(void *)&long long v54 = v25;
    sub_8F360();
    sub_3C708((uint64_t)&v54, &qword_BC780);
    v24._countAndFlagsBits = 58;
  }
  v24._object = (void *)0xE100000000000000;
  sub_8F370(v24);
  sub_8F3A0();
  sub_616C((uint64_t)&v57);
  sub_8E734();
  sub_8F340();
  if (v5)
  {
    *((void *)&v58 + 1) = sub_5664(&qword_BBBD8);
    *(void *)&long long v57 = v5;
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  swift_bridgeObjectRetain();
  sub_8F3B0();
  sub_3C708((uint64_t)&v57, &qword_BC780);
  sub_8E844();
  if (v50)
  {
    swift_getErrorValue();
    *((void *)&v58 + 1) = v51;
    sub_8374((uint64_t *)&v57);
    sub_8E760();
    v26();
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  type metadata accessor for Log();
  sub_8F3B0();
  sub_3C708((uint64_t)&v57, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  sub_13740((uint64_t)&v49[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_resolveAction], (uint64_t)&v54, &qword_BAAD0);
  if (v55)
  {
    sub_573C(&v54, (uint64_t)&v57);
    if (v5)
    {
      uint64_t v55 = (void *)sub_5664(&qword_BBBD8);
      *(void *)&long long v54 = v5;
      char v56 = 1;
    }
    else if (v50)
    {
      *(void *)&long long v54 = v50;
      char v56 = 0;
      swift_errorRetain();
    }
    else
    {
      sub_8DF5C();
      v52[0] = swift_allocError();
      char v53 = 0;
      sub_4D09C((uint64_t)v52, (uint64_t)&v54);
    }
    sub_8ECA0();
    uint64_t v36 = *(void *)&v49[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_objectGraph];
    sub_8F560();
    swift_bridgeObjectRetain();
    sub_8F770();
    uint64_t v37 = v52[0];
    sub_8F770();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v43, v45, v48);
    uint64_t v38 = sub_5664((uint64_t *)&unk_BCEB0);
    sub_56F8(v43, 0, 1, v38);
    sub_4D0F8((uint64_t)&v54, (uint64_t)v52);
    (*(void (**)(long long *, uint64_t, uint64_t, void *))(*(void *)v37 + 216))(&v57, v43, v36, v52);
    sub_3C708((uint64_t)v52, &qword_BB600);
    sub_8DFA8(v43, (void (*)(void))&type metadata accessor for ResultingActionDispatcher.MetricsBehavior);
    Swift::String v39 = (void *)swift_allocObject();
    _OWORD v39[2] = v49;
    _OWORD v39[3] = v44;
    v39[4] = v46;
    sub_F040(0, (unint64_t *)&qword_BBBB0);
    Swift::String v40 = v49;
    swift_retain();
    Swift::String v41 = (void *)sub_8FBD0();
    sub_8E048(v41, (uint64_t)sub_8E03C, (uint64_t)v39);

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v48);
    sub_251D4((uint64_t)&v54);
    sub_616C((uint64_t)&v57);
  }
  else
  {
    sub_3C708((uint64_t)&v54, &qword_BAAD0);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_91D10;
    *((void *)&v58 + 1) = v42;
    *(void *)&long long v57 = v49;
    uint64_t v27 = v49;
    id v28 = (id)AMSLogKey();
    if (v28)
    {
      long long v29 = v28;
      uint64_t v30 = sub_8F9D0();
      uint64_t v32 = v31;

      sub_8F380();
      sub_7E40C();
      sub_8E578();
      uint64_t v33 = swift_getMetatypeMetadata();
      sub_8E60C(v33);
      sub_3C708((uint64_t)&v54, &qword_BC780);
      sub_1842C();
      uint64_t v55 = &type metadata for String;
      *(void *)&long long v54 = v30;
      *((void *)&v54 + 1) = v32;
      sub_8F360();
      sub_3C708((uint64_t)&v54, &qword_BC780);
      v34._countAndFlagsBits = 93;
    }
    else
    {
      sub_8F380();
      sub_7E40C();
      sub_8E578();
      uint64_t v35 = swift_getMetatypeMetadata();
      sub_8E60C(v35);
      sub_3C708((uint64_t)&v54, &qword_BC780);
      v34._countAndFlagsBits = 58;
    }
    v34._object = (void *)0xE100000000000000;
    sub_8F370(v34);
    sub_8F3A0();
    sub_616C((uint64_t)&v57);
    sub_8E740();
    sub_43634();
    swift_bridgeObjectRelease();
  }
  sub_3C808();
}

uint64_t sub_8D7F0(unsigned __int8 *a1, uint64_t a2, void *a3, void (*a4)(long long *, uint64_t))
{
  uint64_t v8 = sub_8F390();
  __chkstk_darwin(v8 - 8);
  int v9 = *a1;
  sub_5664((uint64_t *)&unk_BB5E0);
  sub_8F3E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_934E0;
  *((void *)&v25 + 1) = type metadata accessor for WebPageViewController();
  *(void *)&long long v24 = a3;
  id v10 = a3;
  id v11 = (id)AMSLogKey();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_8F9D0();
    uint64_t v15 = v14;

    sub_8F380();
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    sub_8F370(v26);
    sub_820C(&v24, *((uint64_t *)&v25 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = DynamicType;
    sub_8F360();
    sub_3C708((uint64_t)v22, &qword_BC780);
    v27._countAndFlagsBits = 5972026;
    v27._object = (void *)0xE300000000000000;
    sub_8F370(v27);
    uint64_t MetatypeMetadata = &type metadata for String;
    v22[0] = v13;
    v22[1] = v15;
    sub_8F360();
    sub_3C708((uint64_t)v22, &qword_BC780);
    v17._countAndFlagsBits = 93;
  }
  else
  {
    sub_8F380();
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    sub_8F370(v28);
    sub_820C(&v24, *((uint64_t *)&v25 + 1));
    uint64_t v18 = swift_getDynamicType();
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v22[0] = v18;
    sub_8F360();
    sub_3C708((uint64_t)v22, &qword_BC780);
    v17._countAndFlagsBits = 58;
  }
  v17._object = (void *)0xE100000000000000;
  sub_8F370(v17);
  sub_8F3A0();
  sub_616C((uint64_t)&v24);
  sub_8F340();
  if (v9)
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  else
  {
    *((void *)&v25 + 1) = (char *)&type metadata for () + 8;
  }
  sub_8F3B0();
  sub_3C708((uint64_t)&v24, &qword_BC780);
  sub_8F340();
  if (a2)
  {
    swift_getErrorValue();
    *((void *)&v25 + 1) = v21;
    id v19 = sub_8374((uint64_t *)&v24);
    (*(void (**)(uint64_t *))(*(void *)(v21 - 8) + 16))(v19);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  type metadata accessor for Log();
  sub_8F3B0();
  sub_3C708((uint64_t)&v24, &qword_BC780);
  sub_43634();
  swift_bridgeObjectRelease();
  if (a2)
  {
    long long v24 = 0u;
    long long v25 = 0u;
    swift_errorRetain();
    a4(&v24, a2);
    swift_errorRelease();
  }
  else
  {
    *((void *)&v25 + 1) = &type metadata for Bool;
    LOBYTE(v24) = 1;
    a4(&v24, 0);
  }
  return sub_3C708((uint64_t)&v24, &qword_BC780);
}

void sub_8DCE4(uint64_t a1, void *a2, uint64_t a3)
{
  sub_13740(a1, (uint64_t)v12, &qword_BC780);
  uint64_t v5 = v13;
  if (!v13)
  {
    uint64_t v11 = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v6 = sub_820C(v12, v13);
  uint64_t v7 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  id v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  uint64_t v11 = sub_8FF30();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_616C((uint64_t)v12);
  if (a2) {
LABEL_3:
  }
    a2 = (void *)sub_8E910();
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v11, a2);
  swift_unknownObjectRelease();
}

uint64_t sub_8DE50(uint64_t a1, void *a2)
{
  v5[3] = sub_F040(0, (unint64_t *)&qword_BBBB0);
  v5[4] = &protocol witness table for OS_dispatch_queue;
  v5[0] = a2;
  swift_retain_n();
  id v3 = a2;
  sub_8F7A0();
  swift_release_n();
  return sub_616C((uint64_t)v5);
}

uint64_t sub_8DF10()
{
  return sub_8B1E0();
}

uint64_t sub_8DF1C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_8DF54(uint64_t a1, void *a2)
{
  sub_8DCE4(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_8DF5C()
{
  unint64_t result = qword_BE970;
  if (!qword_BE970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE970);
  }
  return result;
}

uint64_t sub_8DFA8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_13858();
  sub_7358();
  v3();
  return a1;
}

uint64_t sub_8DFFC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_8E03C(unsigned __int8 *a1, uint64_t a2)
{
  return sub_8D7F0(a1, a2, *(void **)(v2 + 16), *(void (**)(long long *, uint64_t))(v2 + 24));
}

uint64_t sub_8E048(void *a1, uint64_t a2, uint64_t a3)
{
  v10[3] = sub_F040(0, (unint64_t *)&qword_BBBB0);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_retain_n();
  id v8 = a1;
  sub_8F7A0();
  swift_release();
  swift_release();
  return sub_616C((uint64_t)v10);
}

uint64_t sub_8E14C()
{
  return sub_8B13C(*(uint64_t (**)(char *, void))(v0 + 16));
}

uint64_t sub_8E154(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(char *, uint64_t))(v1 + 16);
  char v4 = 1;
  return v2(&v4, a1);
}

uint64_t sub_8E194()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_8E1DC()
{
  return sub_8CEF8(v0[2], v0[3], v0[4]);
}

uint64_t sub_8E1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_8E1F8()
{
  return swift_release();
}

unint64_t sub_8E200()
{
  unint64_t result = qword_BC7E0;
  if (!qword_BC7E0)
  {
    sub_2517C(&qword_BC7D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC7E0);
  }
  return result;
}

void sub_8E254(uint64_t a1, uint64_t a2)
{
  sub_8C9BC(a1, a2, *(void *)(v2 + 16));
}

void sub_8E274()
{
  sub_8C690(*(void *)(v0 + 16), *(void (**)(void, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

unint64_t sub_8E280()
{
  unint64_t result = qword_BE988;
  if (!qword_BE988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE988);
  }
  return result;
}

uint64_t sub_8E2CC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_8E304()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_8E330()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_8E378()
{
  sub_8BDA0(*(void **)(v0 + 16), *(void (**)(void, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

ValueMetadata *type metadata accessor for WebPageViewController.PresentationError()
{
  return &type metadata for WebPageViewController.PresentationError;
}

unsigned char *_s19CoreDynamicUIPlugin21WebPageViewControllerC17PresentationErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x8E438);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WebPageViewController.ResolveActionError()
{
  return &type metadata for WebPageViewController.ResolveActionError;
}

unint64_t sub_8E474()
{
  unint64_t result = qword_BE9A0;
  if (!qword_BE9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE9A0);
  }
  return result;
}

unint64_t sub_8E4C4()
{
  unint64_t result = qword_BE9A8;
  if (!qword_BE9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE9A8);
  }
  return result;
}

uint64_t sub_8E550()
{
  return sub_8F390();
}

uint64_t sub_8E578()
{
  sub_820C((void *)(v0 - 128), *(void *)(v0 - 104));
  return swift_getDynamicType();
}

uint64_t sub_8E5B0()
{
  return sub_8FD40();
}

uint64_t sub_8E5E0()
{
  return swift_allocObject();
}

uint64_t sub_8E60C(uint64_t a1)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 168) = v1;
  return sub_8F360();
}

uint64_t sub_8E62C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 88) = a1;
  *(void *)(v3 - 112) = v2;
  *(void *)(v3 - 104) = v1;
  return sub_8F360();
}

void sub_8E658()
{
  *(void *)(v2 - 216) = v0;
}

uint64_t sub_8E680()
{
  return sub_8F210();
}

uint64_t sub_8E6A8(void *a1)
{
  sub_820C(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_8E6D8()
{
  return sub_8FBE0();
}

uint64_t sub_8E6FC()
{
  sub_820C((void *)(v0 - 160), *(void *)(v0 - 136));
  return swift_getDynamicType();
}

uint64_t sub_8E740()
{
  return sub_8F340();
}

uint64_t sub_8E774()
{
  return sub_8F770();
}

uint64_t sub_8E794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 208) = a3;
  *(void *)(v4 - 200) = a4;
  return sub_8F1E0();
}

uint64_t sub_8E7B4()
{
  return sub_8F3B0();
}

uint64_t sub_8E7D4()
{
  sub_820C((void *)(v0 - 136), *(void *)(v0 - 112));
  return swift_getDynamicType();
}

uint64_t sub_8E80C()
{
  sub_820C((void *)(v0 - 160), *(void *)(v0 - 136));
  return swift_getDynamicType();
}

uint64_t sub_8E844()
{
  return sub_8F340();
}

uint64_t sub_8E864()
{
  return sub_3C708(v1 - 112, v0);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_8E8A0()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8E8B0()
{
  return Notification.object.getter();
}

uint64_t sub_8E8C0()
{
  return type metadata accessor for Notification();
}

uint64_t sub_8E8D0()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_8E8E0()
{
  return LocalizedError.errorDescription.getter();
}

uint64_t sub_8E8F0()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_8E900()
{
  return dispatch thunk of NSKeyValueObservation.invalidate()();
}

uint64_t sub_8E910()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_8E920()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_8E930()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t sub_8E940()
{
  return URL.absoluteString.getter();
}

void sub_8E950(NSURL *retstr@<X8>)
{
}

uint64_t sub_8E960()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8E970()
{
  return URL.init(string:)();
}

uint64_t sub_8E980()
{
  return type metadata accessor for URL();
}

uint64_t sub_8E990()
{
  return static IndexSet._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL sub_8E9A0(Swift::Int a1)
{
  return IndexSet.contains(_:)(a1);
}

uint64_t sub_8E9B0()
{
  return type metadata accessor for IndexSet();
}

NSIndexPath sub_8E9C0()
{
  return IndexPath._bridgeToObjectiveC()();
}

uint64_t sub_8E9D0()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8E9E0()
{
  return IndexPath.init(row:section:)();
}

uint64_t sub_8E9F0()
{
  return IndexPath.init(item:section:)();
}

uint64_t sub_8EA00()
{
  return IndexPath.section.getter();
}

uint64_t sub_8EA10()
{
  return type metadata accessor for IndexPath();
}

uint64_t sub_8EA20()
{
  return ColorFactory.color(deserializing:using:)();
}

uint64_t sub_8EA30()
{
  return type metadata accessor for ColorFactory();
}

uint64_t sub_8EA40()
{
  return DynamicLabel.__allocating_init(alignment:color:customTextStyle:)();
}

uint64_t sub_8EA50()
{
  return type metadata accessor for DynamicLabel();
}

uint64_t sub_8EA60()
{
  return ActionFactory.action(deserializing:using:)();
}

uint64_t sub_8EA70()
{
  return type metadata accessor for ActionFactory();
}

uint64_t sub_8EAA0()
{
  return ComponentCell.apply(contentsOf:with:asPartOf:)();
}

uint64_t sub_8EAD0()
{
  return type metadata accessor for LayoutFactory();
}

uint64_t sub_8EAE0()
{
  return ArtworkRequest.init(artwork:preferredSize:)();
}

uint64_t sub_8EAF0()
{
  return ArtworkRequest.makeURL()();
}

uint64_t sub_8EB00()
{
  return PageDefinition.init(id:viewControllerProvider:)();
}

uint64_t sub_8EB10()
{
  return type metadata accessor for PageDefinition();
}

uint64_t sub_8EB20()
{
  return PluginComponent.init(deserializing:using:)();
}

uint64_t sub_8EB30()
{
  return PluginComponent.id.getter();
}

uint64_t sub_8EB40()
{
  return ActionDefinition.init(id:model:actionImplementationProvider:)();
}

uint64_t sub_8EB50()
{
  return type metadata accessor for ActionDefinition();
}

uint64_t sub_8EB60()
{
  return ArtworkImageView.init(artworkSize:frame:)();
}

uint64_t sub_8EB70()
{
  return type metadata accessor for ArtworkImageView();
}

uint64_t sub_8EB80()
{
  return DynamicPlainText.init(accessibilityAlignment:accessibilityText:alignment:color:customTextStyle:maximumLineCount:preferredLineCount:text:)();
}

unint64_t sub_8EB90(UITraitCollection compatibleWith)
{
  return (unint64_t)DynamicPlainText.font(compatibleWith:)(compatibleWith);
}

uint64_t sub_8EBA0()
{
  return JSServiceRequest.init(deserializing:using:)();
}

uint64_t sub_8EBB0()
{
  return JSServiceRequest.init(fragment:options:url:)();
}

uint64_t sub_8EBC0()
{
  return type metadata accessor for JSServiceRequest();
}

uint64_t sub_8EBD0()
{
  return type metadata accessor for DelegateController();
}

uint64_t sub_8EBE0()
{
  return DynamicTextFactory.dynamicText(deserializing:using:)();
}

uint64_t sub_8EBF0()
{
  return type metadata accessor for DynamicTextFactory();
}

uint64_t sub_8EC00()
{
  return ComponentDefinition.init(id:model:component:)();
}

uint64_t sub_8EC10()
{
  return type metadata accessor for DynamicAccountsStore();
}

uint64_t sub_8EC20()
{
  return DynamicTextAlignment.textAlignment.getter();
}

uint64_t sub_8EC30()
{
  return PageActionDefinition.init(id:model:)();
}

uint64_t sub_8EC40()
{
  return type metadata accessor for PageActionDefinition();
}

uint64_t sub_8EC50()
{
  return static DynamicViewController.setupPageRenderPresenterWrapper(with:bag:)();
}

uint64_t sub_8EC60()
{
  return type metadata accessor for DynamicViewController();
}

uint64_t sub_8EC70()
{
  return type metadata accessor for NavigationControllerList();
}

uint64_t sub_8EC80()
{
  return type metadata accessor for ResultingActionDispatcher.MetricsBehavior();
}

uint64_t sub_8EC90()
{
  return ResultingActionDispatcher.init()();
}

uint64_t sub_8ECA0()
{
  return type metadata accessor for ResultingActionDispatcher();
}

uint64_t sub_8ECB0()
{
  return static CollectionLayoutItemProvider.horizontalLayoutSize(for:)();
}

uint64_t sub_8ECC0()
{
  return static CollectionLayoutItemProvider.verticalLayoutSize(for:)();
}

uint64_t sub_8ECD0()
{
  return ConcreteResultingActionImplementationBox.init(_:)();
}

uint64_t sub_8ECE0()
{
  return type metadata accessor for Artwork();
}

uint64_t sub_8ECF0()
{
  return JSService.updateService(account:)();
}

uint64_t sub_8ED00()
{
  return JSService.perform(request:)();
}

uint64_t sub_8ED10()
{
  return JSService.perform<A>(request:)();
}

uint64_t sub_8ED20()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t sub_8ED30()
{
  return type metadata accessor for FontSource();
}

uint64_t sub_8ED40()
{
  return LayoutRect.init(origin:size:baselines:)();
}

uint64_t sub_8ED50()
{
  return type metadata accessor for LayoutRect();
}

uint64_t sub_8ED60()
{
  return dispatch thunk of LayoutView.hasContent.getter();
}

uint64_t sub_8ED70()
{
  return dispatch thunk of LayoutView.frame.modify();
}

uint64_t sub_8ED80()
{
  return dispatch thunk of LayoutView.frame.getter();
}

uint64_t sub_8ED90()
{
  return dispatch thunk of LayoutView.isHidden.getter();
}

uint64_t sub_8EDA0()
{
  return dispatch thunk of AnyDimension.rawValue(in:)();
}

uint64_t sub_8EDB0()
{
  return ShelvesPresenter.setContents<A>(_:)();
}

uint64_t sub_8EDC0()
{
  return ShelvesPresenter.replace<A>(_:handlingProblemsWith:)();
}

uint64_t sub_8EDD0()
{
  return ShelvesPresenter.init()();
}

uint64_t sub_8EDE0()
{
  return CollectionContent.animatePresenterChanges.setter();
}

uint64_t sub_8EDF0()
{
  return CollectionContent.addSupplementaryViewProvider(forKind:_:)();
}

uint64_t sub_8EE00()
{
  return CollectionContent.item(for:)();
}

uint64_t sub_8EE10()
{
  return CollectionContent.view.getter();
}

uint64_t sub_8EE20()
{
  return CollectionContent.section(for:)();
}

uint64_t sub_8EE30()
{
  return CollectionContent.__allocating_init<A>(_:collectionView:cellProvider:)();
}

uint64_t sub_8EE40()
{
  return type metadata accessor for VerticalFlowLayout.VerticalPlacement();
}

uint64_t sub_8EE50()
{
  return VerticalFlowLayout.measurements(fitting:in:)();
}

uint64_t sub_8EE60()
{
  return VerticalFlowLayout.placeChildren(relativeTo:in:)();
}

uint64_t sub_8EE70()
{
  return static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter();
}

uint64_t sub_8EE80()
{
  return static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter();
}

uint64_t sub_8EE90()
{
  return static VerticalFlowLayout.ExclusionCondition.isHidden.getter();
}

uint64_t sub_8EEA0()
{
  return type metadata accessor for VerticalFlowLayout.ExclusionCondition();
}

uint64_t sub_8EEB0()
{
  return type metadata accessor for VerticalFlowLayout.HorizontalPlacement();
}

uint64_t sub_8EEC0()
{
  return VerticalFlowLayout.init(expandChildrenToFit:children:)();
}

uint64_t sub_8EED0()
{
  return static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)();
}

uint64_t sub_8EEE0()
{
  return type metadata accessor for VerticalFlowLayout.Child();
}

uint64_t sub_8EEF0()
{
  return type metadata accessor for VerticalFlowLayout();
}

uint64_t sub_8EF00()
{
  return DiffableDataStatePresenter.init<A>(dataPresenter:stateStore:)();
}

uint64_t sub_8EF10()
{
  return DiffableDataStatePresenter.stateStore.getter();
}

uint64_t sub_8EF20()
{
  return DiffableDataStatePresenter.writableLens(for:)();
}

uint64_t sub_8EF30()
{
  return DiffableDataStatePresenter.lens(for:)();
}

uint64_t sub_8EF40()
{
  return DiffableDataStatePresenter.lens(for:)();
}

uint64_t sub_8EF50()
{
  return Baselines.init()();
}

uint64_t sub_8EF60()
{
  return type metadata accessor for Baselines();
}

uint64_t sub_8EF70()
{
  return type metadata accessor for UICellAccessory.DisplayedState();
}

uint64_t sub_8EF80()
{
  return type metadata accessor for UICellAccessory.LayoutDimension();
}

uint64_t sub_8EF90()
{
  return static UICellAccessory.disclosureIndicator(displayed:options:)();
}

uint64_t sub_8EFA0()
{
  return UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
}

uint64_t sub_8EFB0()
{
  return type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
}

uint64_t sub_8EFC0()
{
  return type metadata accessor for UICellAccessory();
}

uint64_t sub_8EFD0()
{
  return type metadata accessor for UITraitLegibilityWeight();
}

uint64_t sub_8EFE0()
{
  return static UIListContentConfiguration.groupedFooter()();
}

uint64_t sub_8EFF0()
{
  return static UIListContentConfiguration.groupedHeader()();
}

uint64_t sub_8F000()
{
  return UIListContentConfiguration.secondaryText.setter();
}

uint64_t sub_8F010()
{
  return type metadata accessor for UIListContentConfiguration.TextProperties.TextAlignment();
}

uint64_t sub_8F020()
{
  return UIListContentConfiguration.TextProperties.font.setter();
}

uint64_t sub_8F030()
{
  return UIListContentConfiguration.TextProperties.color.setter();
}

uint64_t sub_8F040()
{
  return UIListContentConfiguration.TextProperties.alignment.setter();
}

uint64_t sub_8F050()
{
  return UIListContentConfiguration.textProperties.modify();
}

uint64_t sub_8F060()
{
  return static UIListContentConfiguration.sidebarSubtitleCell()();
}

uint64_t sub_8F070()
{
  return UIListContentConfiguration.secondaryTextProperties.modify();
}

uint64_t sub_8F080()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t sub_8F090()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t sub_8F0A0()
{
  return static UIListContentConfiguration.valueCell()();
}

uint64_t sub_8F0B0()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t sub_8F0C0()
{
  return type metadata accessor for UITraitHorizontalSizeClass();
}

uint64_t sub_8F0D0()
{
  return UIListSeparatorConfiguration.init(listAppearance:)();
}

uint64_t sub_8F0E0()
{
  return type metadata accessor for UIListSeparatorConfiguration();
}

uint64_t sub_8F0F0()
{
  return UICollectionLayoutListConfiguration.separatorConfiguration.setter();
}

uint64_t sub_8F100()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
}

uint64_t sub_8F110()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
}

uint64_t sub_8F120()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
}

uint64_t sub_8F130()
{
  return UICollectionLayoutListConfiguration.init(appearance:)();
}

uint64_t sub_8F140()
{
  return UICollectionLayoutListConfiguration.footerMode.setter();
}

uint64_t sub_8F150()
{
  return UICollectionLayoutListConfiguration.headerMode.setter();
}

uint64_t sub_8F160()
{
  return UICollectionLayoutListConfiguration.showsSeparators.setter();
}

uint64_t sub_8F170()
{
  return type metadata accessor for UICollectionLayoutListConfiguration();
}

uint64_t sub_8F180()
{
  return type metadata accessor for UITraitPreferredContentSizeCategory();
}

uint64_t sub_8F190()
{
  return PassthroughSubject.init()();
}

uint64_t sub_8F1A0()
{
  return Subject<>.send()();
}

uint64_t sub_8F1B0()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t sub_8F1C0()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t sub_8F1D0()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_8F1E0()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_8F1F0()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_8F200()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_8F210()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_8F220()
{
  return AsyncEvent.post(_:)();
}

uint64_t sub_8F230()
{
  return AsyncEvent.init()();
}

uint64_t sub_8F240()
{
  return Dependency.init<A>(satisfying:with:)();
}

uint64_t sub_8F250()
{
  return static Dependency.satisfying<A>(_:with:)();
}

uint64_t sub_8F260()
{
  return type metadata accessor for Dependency();
}

uint64_t sub_8F270()
{
  return JSONObject.dictionary.getter();
}

uint64_t sub_8F280()
{
  return JSONObject.stringEnum<A>()();
}

uint64_t sub_8F290()
{
  return JSONObject.stringEnumOrNil<A>()();
}

uint64_t sub_8F2A0()
{
  return JSONObject.int.getter();
}

uint64_t sub_8F2B0()
{
  return JSONObject.url.getter();
}

uint64_t sub_8F2C0()
{
  return JSONObject.BOOL.getter();
}

uint64_t sub_8F2D0()
{
  return JSONObject.array.getter();
}

uint64_t sub_8F2E0()
{
  return JSONObject.double.getter();
}

uint64_t sub_8F2F0()
{
  return JSONObject.isNull.getter();
}

uint64_t sub_8F300()
{
  return JSONObject.string.getter();
}

uint64_t sub_8F310()
{
  return JSONObject.untyped.getter();
}

uint64_t sub_8F320()
{
  return type metadata accessor for JSONObject();
}

uint64_t sub_8F330()
{
  return JSONObject.subscript.getter();
}

uint64_t sub_8F340()
{
  return LogMessage.init(stringLiteral:)();
}

uint64_t sub_8F350()
{
  return static LogMessage.isRedactionEnabled.getter();
}

uint64_t sub_8F360()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)();
}

void sub_8F370(Swift::String a1)
{
}

uint64_t sub_8F380()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_8F390()
{
  return type metadata accessor for LogMessage.StringInterpolation();
}

uint64_t sub_8F3A0()
{
  return LogMessage.init(stringInterpolation:)();
}

uint64_t sub_8F3B0()
{
  return static LogMessage.safe(_:)();
}

uint64_t sub_8F3C0()
{
  return static LogMessage.describe(contentsOf:withRedaction:separator:)();
}

uint64_t sub_8F3D0()
{
  return static LogMessage.sensitive(_:)();
}

uint64_t sub_8F3E0()
{
  return type metadata accessor for LogMessage();
}

uint64_t sub_8F3F0()
{
  return type metadata accessor for JSONContext();
}

uint64_t sub_8F400()
{
  return MetricsData.init(topic:shouldFlush:fields:includingFields:excludingFields:)();
}

uint64_t sub_8F410()
{
  return type metadata accessor for MetricsData();
}

uint64_t sub_8F420()
{
  return type metadata accessor for PageMetrics();
}

uint64_t sub_8F430()
{
  return DiffableLens.subscript.getter();
}

uint64_t sub_8F440()
{
  return DiffableLens.id.getter();
}

uint64_t sub_8F450()
{
  return DiffableLens.value.getter();
}

uint64_t sub_8F460()
{
  return DiffableLens<A>.init(_:)();
}

uint64_t sub_8F470()
{
  return dispatch thunk of static EventEmitter.defaultScheduler.getter();
}

uint64_t sub_8F480()
{
  return EventEmitter.addObserver(on:singleUse:_:)();
}

uint64_t sub_8F490()
{
  return ActionMetrics.init(deserializing:using:)();
}

uint64_t sub_8F4A0()
{
  return static ActionMetrics.notInstrumented.getter();
}

uint64_t sub_8F4B0()
{
  return type metadata accessor for ActionMetrics();
}

uint64_t sub_8F4C0()
{
  return AnyStateStore.updateState(at:to:)();
}

uint64_t sub_8F4D0()
{
  return AnyStateStore.currentState<A>(at:)();
}

uint64_t sub_8F4E0()
{
  return AnyStateStore.performTransaction<A>(postingChanges:_:)();
}

uint64_t sub_8F4F0()
{
  return dispatch thunk of TaskScheduler.schedule(task:)();
}

uint64_t sub_8F500()
{
  return dispatch thunk of ComponentModel.id.getter();
}

uint64_t sub_8F510()
{
  return ComponentModel.contextMenu.getter();
}

uint64_t sub_8F520()
{
  return JSONDictionary.bridgedPrimitiveValues<A, B>()();
}

uint64_t sub_8F530()
{
  return type metadata accessor for JSONDictionary();
}

uint64_t sub_8F540()
{
  return dispatch thunk of BaseObjectGraph.adding(dependency:)();
}

uint64_t sub_8F550()
{
  return BaseObjectGraph.optional<A>(_:)();
}

uint64_t sub_8F560()
{
  return type metadata accessor for BaseObjectGraph();
}

uint64_t sub_8F570()
{
  return MetricsPipeline.process(_:using:)();
}

uint64_t sub_8F580()
{
  return type metadata accessor for MetricsPipeline();
}

uint64_t sub_8F590()
{
  return dispatch thunk of ExpressibleByJSON.init(deserializing:using:)();
}

uint64_t sub_8F5A0()
{
  return ExpressibleByJSON.init(tryDeserializing:using:)();
}

uint64_t sub_8F5B0()
{
  return ImpressionMetrics.init(deserializing:using:)();
}

uint64_t sub_8F5C0()
{
  return static ImpressionMetrics.ID.== infix(_:_:)();
}

uint64_t sub_8F5D0()
{
  return type metadata accessor for ImpressionMetrics.ID();
}

uint64_t sub_8F5E0()
{
  return ImpressionMetrics.id.getter();
}

uint64_t sub_8F5F0()
{
  return type metadata accessor for ImpressionMetrics();
}

uint64_t sub_8F600()
{
  return SyncTaskScheduler.init()();
}

uint64_t sub_8F610()
{
  return type metadata accessor for SyncTaskScheduler();
}

uint64_t sub_8F620()
{
  return type metadata accessor for AppMetricsPresenter();
}

uint64_t sub_8F630()
{
  return TransientStateStore.init(isConcurrent:)();
}

uint64_t sub_8F640()
{
  return static MetricsFieldsContext.createFieldsContext(impressionsTracker:)();
}

uint64_t sub_8F650()
{
  return type metadata accessor for MetricsFieldsContext();
}

uint64_t sub_8F660()
{
  return PageMetricsPresenter.init(appMetrics:pipeline:context:data:)();
}

void sub_8F670()
{
}

uint64_t sub_8F680()
{
  return PageMetricsPresenter.viewWillDisappear(forReason:)();
}

uint64_t sub_8F690()
{
  return PageMetricsPresenter.data.setter();
}

uint64_t sub_8F6A0()
{
  return type metadata accessor for PageMetricsPresenter();
}

void sub_8F6B0()
{
}

void sub_8F6C0()
{
}

void sub_8F6D0()
{
}

uint64_t sub_8F6E0()
{
  return static ViewWillDisappearReason.inferred(for:)();
}

uint64_t sub_8F6F0()
{
  return type metadata accessor for ViewWillDisappearReason();
}

uint64_t sub_8F700()
{
  return type metadata accessor for PageRenderMetricsPresenter.ActivityEnd();
}

uint64_t sub_8F710()
{
  return type metadata accessor for PageRenderMetricsPresenter.ActivityStart();
}

uint64_t sub_8F720()
{
  return Bag.amsBag.getter();
}

uint64_t sub_8F730()
{
  return Bag.Value.currentOrNil()();
}

uint64_t sub_8F740()
{
  return Bag.subscript.getter();
}

uint64_t sub_8F750()
{
  return type metadata accessor for Bag();
}

uint64_t sub_8F770()
{
  return inject<A, B>(_:from:)();
}

uint64_t sub_8F780()
{
  return Promise.isResolved.getter();
}

uint64_t sub_8F790()
{
  return Promise.map<A>(on:_:)();
}

uint64_t sub_8F7A0()
{
  return Promise.then(perform:orCatchError:on:)();
}

uint64_t sub_8F7B0()
{
  return Promise.__allocating_init(error:)();
}

uint64_t sub_8F7C0()
{
  return Promise.__allocating_init(value:)();
}

uint64_t sub_8F7D0()
{
  return Promise.reject(_:)();
}

uint64_t sub_8F7E0()
{
  return Promise.flatMap<A>(on:_:)();
}

uint64_t sub_8F7F0()
{
  return Promise.resolve(_:)();
}

uint64_t sub_8F800()
{
  return Promise<A>.init(_:)();
}

uint64_t sub_8F810()
{
  return Promise<A>.init(_:)();
}

uint64_t sub_8F820()
{
  return Promise.__allocating_init()();
}

uint64_t sub_8F830()
{
  return Unstable.ImpressionsCalculator.childCalculator(for:)();
}

uint64_t sub_8F840()
{
  return Unstable.ImpressionsCalculator.addElement(_:at:)();
}

uint64_t sub_8F850()
{
  return Unstable.ImpressionsCalculator.viewBounds.setter();
}

uint64_t sub_8F860()
{
  return Unstable.ImpressionsCalculator.removeElement(_:)();
}

uint64_t sub_8F870()
{
  return Unstable.ImpressionsCalculator.__allocating_init(impressionableThreshold:tracker:)();
}

uint64_t sub_8F880()
{
  return Unstable.ImpressionsCalculator.changeImpressionableBounds(_:forElementWithID:)();
}

uint64_t sub_8F890()
{
  return Unstable.ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)();
}

uint64_t sub_8F8A0()
{
  return Unstable.ImpressionsCalculator.isVisible.setter();
}

uint64_t sub_8F8B0()
{
  return type metadata accessor for Unstable.ImpressionsCalculator();
}

uint64_t sub_8F8C0()
{
  return JSONArray.compactMap<A>(_:)();
}

uint64_t sub_8F8D0()
{
  return type metadata accessor for JSONArray();
}

uint64_t sub_8F8E0()
{
  return type metadata accessor for JSONError();
}

uint64_t sub_8F8F0()
{
  return StatePath.init(component:)();
}

uint64_t sub_8F900()
{
  return SyncEvent.post(_:)();
}

uint64_t sub_8F910()
{
  return SyncEvent.init()();
}

uint64_t sub_8F920()
{
  return dispatch thunk of ViewModel.impressionMetrics.getter();
}

NSDictionary sub_8F930()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_8F940()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8F950()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_8F960()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_8F970()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_8F980()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_8F990()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_8F9A0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_8F9B0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_8F9C0()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_8F9D0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8F9E0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_8F9F0()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_8FA00()
{
  return String.hash(into:)();
}

void sub_8FA10(Swift::String a1)
{
}

uint64_t sub_8FA20()
{
  return String.subscript.getter();
}

uint64_t sub_8FA30()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t sub_8FA40()
{
  return Sequence.reduce<A>(into:_:)();
}

uint64_t sub_8FA50()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_8FA60()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_8FA70()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8FA80()
{
  return specialized Array._endMutation()();
}

uint64_t sub_8FA90()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_8FAA0()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_8FAB0()
{
  return Array<A>.init(deserializing:using:)();
}

uint64_t sub_8FAC0()
{
  return Array<A>.init(tryDeserializing:using:)();
}

uint64_t sub_8FAD0()
{
  return type metadata accessor for Array();
}

uint64_t sub_8FAE0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_8FAF0()
{
  return static MainActor.shared.getter();
}

uint64_t sub_8FB00()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_8FB10()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_8FB20()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_8FB30()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8FB40()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_8FB50()
{
  return Range<>.init(_:in:)();
}

uint64_t sub_8FB60()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_8FB70()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_8FB80()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_8FB90()
{
  return static os_log_type_t.default.getter();
}

UIBarButtonItem sub_8FBA0(UIBarButtonSystemItem systemItem, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return UIBarButtonItem.init(systemItem:primaryAction:menu:)(systemItem, primaryAction, menu);
}

UIBarButtonItem sub_8FBB0(Swift::String_optional title, UIImage_optional image, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return UIBarButtonItem.init(title:image:primaryAction:menu:)(title, image, primaryAction, menu);
}

uint64_t sub_8FBC0()
{
  return UIViewController.registerForTraitChanges<A>(_:handler:)();
}

uint64_t sub_8FBD0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_8FBE0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_8FBF0()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_8FC00()
{
  return UITraitCollection.prefersAccessibilityLayouts.getter();
}

uint64_t sub_8FC10()
{
  return UICollectionViewCell.contentConfiguration.setter();
}

uint64_t sub_8FC20()
{
  return UIEditMenuConfiguration.init(identifier:sourcePoint:)();
}

uint64_t sub_8FC30()
{
  return UICollectionViewListCell.accessories.getter();
}

uint64_t sub_8FC40()
{
  return UICollectionViewListCell.accessories.setter();
}

uint64_t sub_8FC50()
{
  return UICollectionViewListCell.defaultContentConfiguration()();
}

uint64_t sub_8FC60()
{
  return static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
}

uint64_t sub_8FC70()
{
  return CGRect.subtracting(insets:)();
}

uint64_t sub_8FC80()
{
  return CGSize.subtracting(insets:)();
}

UIMenu sub_8FC90(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t sub_8FCA0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_8FCB0()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_8FCD0()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t sub_8FCE0()
{
  return static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t sub_8FCF0()
{
  return type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
}

uint64_t sub_8FD00()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_8FD10()
{
  return Optional<A>.init(deserializing:using:)();
}

uint64_t sub_8FD20()
{
  return type metadata accessor for Optional();
}

uint64_t sub_8FD30()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_8FD40()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_8FD50()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_8FD60()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_8FD70()
{
  return AnyHashable.description.getter();
}

Swift::Int sub_8FD80(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_8FD90()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_8FDA0()
{
  return AnyHashable.base.getter();
}

uint64_t sub_8FDB0()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_8FDC0()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_8FDD0()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void sub_8FDE0(Swift::Int a1)
{
}

uint64_t sub_8FDF0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_8FE00()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_8FE10()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_8FE20()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_8FE30()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_8FE40()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_8FE50()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_8FE60()
{
  return _print_unlocked<A, B>(_:_:)();
}

BOOL sub_8FE70(Swift::Bool isUnique, Swift::Int capacity)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, capacity);
}

void sub_8FE80()
{
}

uint64_t sub_8FE90()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t sub_8FEA0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_8FEB0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_8FED0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_8FEF0()
{
  return _convertToAnyHashable<A>(_:)();
}

Swift::Int sub_8FF00(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_8FF10()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_8FF20()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_8FF30()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_8FF40()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_8FF50()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_8FF60()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_8FF90()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_8FFA0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_8FFB0()
{
  return Error._code.getter();
}

uint64_t sub_8FFC0()
{
  return Error._domain.getter();
}

uint64_t sub_8FFD0()
{
  return Error._userInfo.getter();
}

uint64_t sub_8FFE0()
{
  return Hasher.init(_seed:)();
}

void sub_8FFF0(Swift::UInt a1)
{
}

Swift::Int sub_90000()
{
  return Hasher._finalize()();
}

uint64_t AMSError()
{
  return _AMSError();
}

uint64_t AMSLogKey()
{
  return _AMSLogKey();
}

uint64_t AMSSetLogKey()
{
  return _AMSSetLogKey();
}

uint64_t ASCLockupViewSizeGetEstimatedSize()
{
  return _ASCLockupViewSizeGetEstimatedSize();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return _CFBooleanGetValue(BOOLean);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFRelease(CFTypeRef cf)
{
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectContainsRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

uint64_t MGCopyAnswerWithError()
{
  return _MGCopyAnswerWithError();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CTServerConnectionCopyCellularUsagePolicy()
{
  return __CTServerConnectionCopyCellularUsagePolicy();
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return __CTServerConnectionCreateOnTargetQueue();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocError()
{
  return _swift_deallocError();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

id objc_msgSend_OSLogObject(void *a1, const char *a2, ...)
{
  return _[a1 OSLogObject];
}

id objc_msgSend_airplaneMode(void *a1, const char *a2, ...)
{
  return _[a1 airplaneMode];
}

id objc_msgSend_airplaneModeInquiryDidObserveChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airplaneModeInquiryDidObserveChange:");
}

id objc_msgSend_bundle(void *a1, const char *a2, ...)
{
  return _[a1 bundle];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 getActivePairedDevice];
}

id objc_msgSend_initWithBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundle:");
}

id objc_msgSend_isEnabledForDevice(void *a1, const char *a2, ...)
{
  return _[a1 isEnabledForDevice];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _[a1 isSupported];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_radiosPreferences(void *a1, const char *a2, ...)
{
  return _[a1 radiosPreferences];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_sharedConfig(void *a1, const char *a2, ...)
{
  return _[a1 sharedConfig];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}