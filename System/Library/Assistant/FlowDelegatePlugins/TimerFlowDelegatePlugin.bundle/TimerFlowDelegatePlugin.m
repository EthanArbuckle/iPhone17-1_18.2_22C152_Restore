uint64_t sub_31D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_31E8(a1, a2);
}

uint64_t sub_31E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_17B1D0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_141170();
  sub_33D8(v4, (uint64_t)qword_17D248);
  v5 = sub_141160();
  os_log_type_t v6 = sub_141480();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "TimerFlowDelegatePlugin: called findFlowForX()", v7, 2u);
    swift_slowDealloc();
  }

  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v13, v13[3]);
  char v8 = sub_13EBC0();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v13);
  if (v8)
  {
    sub_140DF0();
    sub_140DE0();
    _s20HandleIntentStrategyVwxx_1((uint64_t)v13);
  }
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_1408A0();
  sub_140890();
  swift_release();
  uint64_t v9 = type metadata accessor for TimerFlowProvider();
  uint64_t v10 = swift_allocObject();
  sub_3498(&v12, v10 + 16);
  v13[8] = v9;
  v13[9] = &off_175250;
  v13[5] = v10;
  sub_34B0(a1, a2);
  return sub_BA88((uint64_t)v13);
}

uint64_t sub_33D8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_3410(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for TimerFlowProvider()
{
  return self;
}

uint64_t sub_3498(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_34B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v243 = sub_140920();
  uint64_t v246 = *(void *)(v243 - 8);
  uint64_t v4 = __chkstk_darwin(v243);
  v222 = (char *)&v220 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v242 = (char *)&v220 - v6;
  uint64_t v7 = sub_13F3C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  v223 = (char *)&v220 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  v13 = (char *)&v220 - v12;
  __chkstk_darwin(v11);
  v248 = (char *)&v220 - v14;
  uint64_t v227 = sub_13F540();
  uint64_t v226 = *(void *)(v227 - 8);
  __chkstk_darwin(v227);
  v225 = (char *)&v220 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_13F500();
  uint64_t v238 = *(void *)(v235 - 8);
  __chkstk_darwin(v235);
  v228 = (char *)&v220 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_13F460();
  uint64_t v232 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  v231 = (char *)&v220 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_5830(&qword_17D450);
  __chkstk_darwin(v18 - 8);
  v234 = (char *)&v220 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_13F430();
  uint64_t v237 = *(void *)(v229 - 8);
  uint64_t v20 = __chkstk_darwin(v229);
  v224 = (char *)&v220 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v236 = (char *)&v220 - v22;
  uint64_t v241 = sub_13F410();
  uint64_t v240 = *(void *)(v241 - 8);
  __chkstk_darwin(v241);
  v239 = (char *)&v220 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v24 - 8);
  v250 = (char *)&v220 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = sub_140280();
  uint64_t v263 = *(void *)(v264 - 8);
  uint64_t v26 = __chkstk_darwin(v264);
  v245 = (char *)&v220 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  v251 = (char *)&v220 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v249 = (char *)&v220 - v31;
  __chkstk_darwin(v30);
  v253 = (char *)&v220 - v32;
  uint64_t v33 = sub_140590();
  __chkstk_darwin(v33 - 8);
  v257 = (char *)&v220 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = sub_140A60();
  uint64_t v259 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  v258 = (char *)&v220 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_140810();
  uint64_t v267 = *(void *)(v36 - 8);
  v268 = (void *)v36;
  __chkstk_darwin(v36);
  v266 = (char *)&v220 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = sub_1407F0();
  uint64_t v270 = *(void *)(v273 - 8);
  uint64_t v38 = __chkstk_darwin(v273);
  v271 = (uint8_t **)((char *)&v220 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v38);
  v272 = (char *)&v220 - v40;
  uint64_t v41 = sub_13F3E0();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  v261 = (char *)&v220 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v43);
  v254 = (char *)&v220 - v46;
  __chkstk_darwin(v45);
  v48 = (char *)&v220 - v47;
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  v230 = v13;
  uint64_t v244 = v8;
  uint64_t v247 = v7;
  uint64_t v49 = sub_141170();
  uint64_t v50 = sub_33D8(v49, (uint64_t)qword_17D320);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v262 = a1;
  v51(v48, a1, v41);
  uint64_t v269 = v50;
  v52 = sub_141160();
  os_log_type_t v53 = sub_141480();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v265 = a2;
  uint64_t v256 = v42 + 16;
  v255 = v51;
  if (v54)
  {
    v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v221 = swift_slowAlloc();
    *(void *)&long long v278 = v221;
    *(_DWORD *)v55 = 136315138;
    v220 = v55 + 4;
    v51(v254, (uint64_t)v48, v41);
    uint64_t v56 = sub_141260();
    uint64_t v274 = sub_58C0(v56, v57, (uint64_t *)&v278);
    sub_1415C0();
    swift_bridgeObjectRelease();
    uint64_t v58 = v42;
    v59 = *(char **)(v42 + 8);
    uint64_t v60 = v41;
    v254 = v59;
    ((void (*)(char *, uint64_t))v59)(v48, v41);
    _os_log_impl(&dword_0, v52, v53, "Running timer flow with parse: %s", v55, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v58 = v42;
    v61 = *(char **)(v42 + 8);
    uint64_t v60 = v41;
    v254 = v61;
    ((void (*)(char *, uint64_t))v61)(v48, v41);
  }

  uint64_t v62 = v270;
  v64 = v272;
  uint64_t v63 = v273;
  (*(void (**)(char *, void, uint64_t))(v270 + 104))(v272, enum case for AppInstallUtil.Domain.timer(_:), v273);
  v65 = *(void (**)(uint8_t **, char *, uint64_t))(v62 + 16);
  v65(v271, v64, v63);
  v66 = v266;
  sub_140800();
  char v67 = sub_1407E0();
  (*(void (**)(char *, void *))(v267 + 8))(v66, v268);
  v68 = sub_141160();
  os_log_type_t v69 = sub_141480();
  BOOL v70 = os_log_type_enabled(v68, v69);
  if ((v67 & 1) == 0)
  {
    if (v70)
    {
      v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v86 = 0;
      _os_log_impl(&dword_0, v68, v69, "Clock/Timers app is deleted from the device; returning UnsupportedClockAppNotInstalledFlow.",
        v86,
        2u);
      swift_slowDealloc();
    }

    v87 = v272;
    uint64_t v88 = v273;
    v65(v271, v272, v273);
    uint64_t v89 = type metadata accessor for TimerBaseCATPatternsExecutor(0);
    sub_140580();
    uint64_t v90 = sub_140470();
    *((void *)&v279 + 1) = v89;
    uint64_t v280 = sub_7908C(&qword_17D458, (void (*)(uint64_t))type metadata accessor for TimerBaseCATPatternsExecutor);
    *(void *)&long long v278 = v90;
    v276 = &type metadata for TimerAppNotInstalledLegacyDialog;
    unint64_t v277 = sub_78A94();
    v91 = v258;
    sub_140A50();
    sub_7908C(&qword_17D468, (void (*)(uint64_t))&type metadata accessor for UnsupportedAppNotInstalledFlow);
    uint64_t v92 = v260;
    sub_13EA60();
    sub_13EAE0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v259 + 8))(v91, v92);
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v87, v88);
  }
  if (v70)
  {
    v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v71 = 0;
    _os_log_impl(&dword_0, v68, v69, "Clock/Timers app is installed; continue!", v71, 2u);
    swift_slowDealloc();
  }

  v72 = v261;
  uint64_t v73 = v60;
  v255(v261, v262, v60);
  int v74 = (*(uint64_t (**)(char *, uint64_t))(v58 + 88))(v72, v60);
  uint64_t v75 = v263;
  if (v74 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v58 + 96))(v72, v60);
    v76 = v253;
    uint64_t v77 = v264;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v253, v72, v264);
    v78 = *(uint8_t ***)(v75 + 16);
    v79 = v249;
    ((void (*)(char *, char *, uint64_t))v78)(v249, v76, v77);
    v80 = sub_141160();
    os_log_type_t v81 = sub_141480();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v278 = swift_slowAlloc();
      v271 = v78;
      *(_DWORD *)v82 = 136315138;
      sub_7908C(&qword_17D470, (void (*)(uint64_t))&type metadata accessor for NLIntent);
      uint64_t v83 = sub_141980();
      uint64_t v274 = sub_58C0(v83, v84, (uint64_t *)&v278);
      sub_1415C0();
      swift_bridgeObjectRelease();
      v85 = *(void (**)(char *, uint64_t))(v75 + 8);
      v78 = v271;
      v85(v79, v264);
      _os_log_impl(&dword_0, v80, v81, "Receiving timer NLv3 intent parse: %s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v77 = v264;
      swift_slowDealloc();
    }
    else
    {
      v85 = *(void (**)(char *, uint64_t))(v75 + 8);
      v85(v79, v77);
    }

    uint64_t v110 = (uint64_t)v250;
    v111 = v253;
    ((void (*)(char *, char *, uint64_t))v78)(v250, v253, v77);
    sub_74B94(v110, v265);
    sub_30364(v110);
    v85(v111, v77);
    return (*(uint64_t (**)(char *, uint64_t))(v270 + 8))(v272, v273);
  }
  uint64_t v94 = v62;
  uint64_t v95 = v73;
  uint64_t v96 = v264;
  if (v74 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v58 + 96))(v72, v73);
    uint64_t v97 = *(void *)&v72[*(int *)(sub_5830((uint64_t *)&unk_17CD00) + 48)];
    v98 = v251;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v251, v72, v96);
    v271 = (uint8_t **)v97;
    v99 = (void *)sub_13F3D0();
    v100 = v245;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v245, v98, v96);
    id v101 = v99;
    v102 = sub_141160();
    os_log_type_t v103 = sub_141480();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      v268 = (void *)swift_slowAlloc();
      uint64_t v269 = swift_slowAlloc();
      *(void *)&long long v278 = v269;
      *(_DWORD *)uint64_t v104 = 136315394;
      sub_7908C(&qword_17D470, (void (*)(uint64_t))&type metadata accessor for NLIntent);
      uint64_t v105 = sub_141980();
      uint64_t v274 = sub_58C0(v105, v106, (uint64_t *)&v278);
      sub_1415C0();
      swift_bridgeObjectRelease();
      v107 = *(void (**)(char *, uint64_t))(v75 + 8);
      v107(v100, v96);
      *(_WORD *)(v104 + 12) = 2112;
      uint64_t v274 = (uint64_t)v101;
      id v108 = v101;
      uint64_t v94 = v270;
      uint64_t v109 = v265;
      sub_1415C0();
      void *v268 = v101;

      uint64_t v96 = v264;
      _os_log_impl(&dword_0, v102, v103, "Timer NLv3 intent is: %s, Timer SiriKit intent is: %@", (uint8_t *)v104, 0x16u);
      sub_5830(&qword_17D478);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v107 = *(void (**)(char *, uint64_t))(v75 + 8);
      v107(v100, v96);

      uint64_t v109 = v265;
    }
    sub_7521C(v101, v109);

    swift_release();
    v107(v251, v96);
    return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v272, v273);
  }
  if (v74 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v58 + 96))(v72, v73);
    (*(void (**)(char *, char *, uint64_t))(v244 + 32))(v248, v72, v247);
    v112 = sub_141160();
    os_log_type_t v113 = sub_141480();
    if (os_log_type_enabled(v112, v113))
    {
      v114 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v114 = 0;
      _os_log_impl(&dword_0, v112, v113, "Timer domain: received direct invocation", v114, 2u);
      swift_slowDealloc();
    }

    uint64_t v115 = sub_13F3A0();
    uint64_t v117 = v116;
    uint64_t v118 = v246;
    v119 = *(void (**)(char *, void, uint64_t))(v246 + 104);
    v120 = v242;
    uint64_t v121 = v243;
    v119(v242, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v243);
    uint64_t v122 = sub_140910();
    uint64_t v124 = v123;
    v125 = *(void (**)(char *, uint64_t))(v118 + 8);
    uint64_t v126 = v121;
    uint64_t v246 = v118 + 8;
    v127 = v125;
    v125(v120, v126);
    if (v115 == v122 && v117 == v124)
    {
      swift_bridgeObjectRelease_n();
LABEL_34:
      v133 = sub_141160();
      os_log_type_t v134 = sub_141480();
      BOOL v135 = os_log_type_enabled(v133, v134);
      uint64_t v136 = v247;
      if (v135)
      {
        v137 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v137 = 0;
        _os_log_impl(&dword_0, v133, v134, "TimerFlowFactory: deciding between deleteTimerFlow and dismissTimerFlow based on firing timer info from device context.", v137, 2u);
        swift_slowDealloc();
      }

      sub_90A8((void *)(v252 + 40), *(void *)(v252 + 64));
      sub_1D8A0();
      (*(void (**)(char *, uint64_t))(v244 + 8))(v248, v136);
      return (*(uint64_t (**)(char *, uint64_t))(v270 + 8))(v272, v273);
    }
    char v132 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v132) {
      goto LABEL_34;
    }
    uint64_t v153 = sub_13F3B0();
    uint64_t v154 = v247;
    if (!v153) {
      goto LABEL_69;
    }
    uint64_t v155 = v153;
    if (*(void *)(v153 + 16) && (unint64_t v156 = sub_16F44(1651664246, 0xE400000000000000), (v157 & 1) != 0))
    {
      sub_5B50(*(void *)(v155 + 56) + 32 * v156, (uint64_t)&v278);
    }
    else
    {
      long long v278 = 0u;
      long long v279 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v279 + 1))
    {
      sub_904C((uint64_t)&v278, &qword_17B9B0);
      goto LABEL_69;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_69:
      uint64_t v178 = v244;
      v179 = *(void (**)(char *, char *, uint64_t))(v244 + 16);
      v180 = v230;
      v179(v230, v248, v154);
      v181 = sub_141160();
      os_log_type_t v182 = sub_141470();
      BOOL v183 = os_log_type_enabled(v181, v182);
      uint64_t v94 = v270;
      if (v183)
      {
        v184 = (uint8_t *)swift_slowAlloc();
        v271 = (uint8_t **)swift_slowAlloc();
        *(void *)&long long v278 = v271;
        *(_DWORD *)v184 = 136315138;
        uint64_t v269 = (uint64_t)(v184 + 4);
        v179(v223, v180, v247);
        uint64_t v185 = sub_141260();
        uint64_t v274 = sub_58C0(v185, v186, (uint64_t *)&v278);
        sub_1415C0();
        swift_bridgeObjectRelease();
        v187 = *(void (**)(char *, uint64_t))(v178 + 8);
        v187(v180, v247);
        _os_log_impl(&dword_0, v181, v182, "Not able to handle directInvocation: %s", v184, 0xCu);
        swift_arrayDestroy();
        uint64_t v154 = v247;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v187 = *(void (**)(char *, uint64_t))(v178 + 8);
        v187(v180, v154);
      }

      sub_13EAC0();
      v187(v248, v154);
      return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v272, v273);
    }
    uint64_t v162 = v274;
    unint64_t v161 = v275;
    swift_bridgeObjectRetain();
    char v163 = sub_CC640();
    if (v163 == 19)
    {
      swift_bridgeObjectRelease();
      uint64_t v154 = v247;
      goto LABEL_69;
    }
    char v193 = v163;
    v271 = (uint8_t **)v162;
    uint64_t v194 = sub_13F3A0();
    v195 = v119;
    uint64_t v196 = v194;
    uint64_t v198 = v197;
    v199 = v222;
    uint64_t v200 = v243;
    v195(v222, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v243);
    uint64_t v201 = sub_140910();
    uint64_t v203 = v202;
    v127(v199, v200);
    if (v196 == v201 && v198 == v203)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v94 = v270;
LABEL_84:
      switch(v193)
      {
        case 1:
          swift_bridgeObjectRelease();
          v205 = sub_141160();
          os_log_type_t v206 = sub_141480();
          BOOL v207 = os_log_type_enabled(v205, v206);
          uint64_t v208 = v247;
          if (v207)
          {
            v209 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v209 = 0;
            _os_log_impl(&dword_0, v205, v206, "Undoing a previously deleted alarm", v209, 2u);
            swift_slowDealloc();
          }

          sub_90A8((void *)(v252 + 40), *(void *)(v252 + 64));
          sub_783E0();
          break;
        case 2:
          swift_bridgeObjectRelease();
          v210 = sub_141160();
          os_log_type_t v211 = sub_141480();
          BOOL v212 = os_log_type_enabled(v210, v211);
          uint64_t v208 = v247;
          if (v212)
          {
            v213 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v213 = 0;
            _os_log_impl(&dword_0, v210, v211, "Undoing a previously created timer", v213, 2u);
            swift_slowDealloc();
          }

          sub_90A8((void *)(v252 + 40), *(void *)(v252 + 64));
          sub_78594();
          break;
        case 5:
        case 8:
          swift_bridgeObjectRelease();
          sub_90A8((void *)(v252 + 40), *(void *)(v252 + 64));
          sub_78748();
          goto LABEL_98;
        default:
          swift_bridgeObjectRetain();
          v214 = sub_141160();
          os_log_type_t v215 = sub_141470();
          if (os_log_type_enabled(v214, v215))
          {
            v216 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v278 = swift_slowAlloc();
            *(_DWORD *)v216 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v274 = sub_58C0((uint64_t)v271, v161, (uint64_t *)&v278);
            sub_1415C0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_0, v214, v215, "Not able to handle specified verb for undo: %s", v216, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_13EAC0();
          goto LABEL_98;
      }
      (*(void (**)(char *, uint64_t))(v244 + 8))(v248, v208);
      return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v272, v273);
    }
    char v204 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v94 = v270;
    if (v204) {
      goto LABEL_84;
    }
    swift_bridgeObjectRelease();
    sub_5DBC(v193, 0, v265);
LABEL_98:
    v175 = *(void (**)(char *, void))(v244 + 8);
    v176 = v248;
    v177 = &v277;
LABEL_67:
    v175(v176, *(v177 - 32));
    return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v272, v273);
  }
  uint64_t v128 = v73;
  if (v74 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v58 + 96))(v72, v73);
    v129 = sub_141160();
    os_log_type_t v130 = sub_141480();
    if (os_log_type_enabled(v129, v130))
    {
      v131 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v131 = 0;
      _os_log_impl(&dword_0, v129, v130, "Timer domain: Hitting SiriX code path", v131, 2u);
      swift_slowDealloc();
    }

    sub_75824(v265);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v272, v273);
  }
  if (v74 != enum case for Parse.uso(_:))
  {
    v158 = sub_141160();
    os_log_type_t v159 = sub_141470();
    if (os_log_type_enabled(v158, v159))
    {
      v160 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v160 = 0;
      _os_log_impl(&dword_0, v158, v159, "FlowPlugin is unable to consume the timer intent. Exiting the flow.", v160, 2u);
      uint64_t v128 = v95;
      swift_slowDealloc();
    }

    sub_13EAC0();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v272, v273);
    return ((uint64_t (*)(char *, uint64_t))v254)(v72, v128);
  }
  (*(void (**)(char *, uint64_t))(v58 + 96))(v72, v73);
  v138 = v239;
  (*(void (**)(char *, char *, uint64_t))(v240 + 32))(v239, v72, v241);
  v139 = sub_141160();
  os_log_type_t v140 = sub_141480();
  if (os_log_type_enabled(v139, v140))
  {
    v141 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v141 = 0;
    _os_log_impl(&dword_0, v139, v140, "Timer domain Siri X code path hit: received USO parse.", v141, 2u);
    swift_slowDealloc();
  }

  v142 = v231;
  sub_13F400();
  uint64_t v143 = sub_13F450();
  (*(void (**)(char *, uint64_t))(v232 + 8))(v142, v233);
  uint64_t v144 = *(void *)(v143 + 16);
  if (v144)
  {
    v145 = *(void (**)(char *, unint64_t, uint64_t))(v238 + 16);
    unint64_t v146 = v143 + ((*(unsigned __int8 *)(v238 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v238 + 80));
    uint64_t v147 = v143;
    v148 = (void (**)(char *, uint64_t))(v238 + 8);
    uint64_t v149 = *(void *)(v238 + 72);
    v271 = (uint8_t **)v147;
    swift_bridgeObjectRetain();
    uint64_t v150 = v235;
    v151 = v228;
    while (1)
    {
      v145(v151, v146, v150);
      if (sub_13F470()) {
        break;
      }
      (*v148)(v151, v150);
      v146 += v149;
      if (!--v144)
      {
        swift_bridgeObjectRelease();
        uint64_t v152 = 1;
        v138 = v239;
        goto LABEL_58;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v164 = v238;
    uint64_t v165 = (uint64_t)v234;
    (*(void (**)(char *, char *, uint64_t))(v238 + 32))(v234, v151, v150);
    uint64_t v152 = 0;
    v138 = v239;
  }
  else
  {
    uint64_t v152 = 1;
    uint64_t v150 = v235;
LABEL_58:
    uint64_t v164 = v238;
    uint64_t v165 = (uint64_t)v234;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56))(v165, v152, 1, v150);
  swift_bridgeObjectRelease();
  int v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v165, 1, v150);
  uint64_t v167 = v237;
  v168 = v236;
  if (v166 == 1)
  {
    sub_904C(v165, &qword_17D450);
    v171 = sub_141160();
    os_log_type_t v172 = sub_141470();
    if (os_log_type_enabled(v171, v172))
    {
      v174 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v174 = 0;
      _os_log_impl(&dword_0, v171, v172, "Failed to parse userParse. Returning noFlow.", v174, 2u);
      swift_slowDealloc();
    }

    sub_13EAC0();
    goto LABEL_66;
  }
  v169 = v225;
  sub_13F4C0();
  (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v150);
  v170 = v224;
  sub_13F510();
  (*(void (**)(char *, uint64_t))(v226 + 8))(v169, v227);
  (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v168, v170, v229);
  sub_13F5C0();
  unint64_t v188 = sub_13F900();
  unint64_t v189 = v188;
  if (v188 >> 62)
  {
    uint64_t result = sub_1417D0();
    if (result) {
      goto LABEL_76;
    }
LABEL_100:
    swift_bridgeObjectRelease();
    v217 = sub_141160();
    os_log_type_t v218 = sub_141470();
    if (os_log_type_enabled(v217, v218))
    {
      v219 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v219 = 0;
      _os_log_impl(&dword_0, v217, v218, "USO graph has no tasks. Returning noFlow.", v219, 2u);
      swift_slowDealloc();
    }

    sub_13EAC0();
    swift_release();
    goto LABEL_103;
  }
  uint64_t result = *(void *)((char *)&dword_10 + (v188 & 0xFFFFFFFFFFFFFF8));
  if (!result) {
    goto LABEL_100;
  }
LABEL_76:
  if ((v189 & 0xC000000000000001) != 0)
  {
    uint64_t v191 = sub_1416A0();
    uint64_t v190 = v265;
    goto LABEL_79;
  }
  uint64_t v190 = v265;
  if (*(void *)((char *)&dword_10 + (v189 & 0xFFFFFFFFFFFFFF8)))
  {
    uint64_t v191 = *(void *)(v189 + 32);
    swift_retain();
LABEL_79:
    swift_bridgeObjectRelease();
    char v192 = sub_5BFC();
    swift_retain();
    sub_5DBC(v192, v191, v190);
    swift_release();
    swift_release_n();
LABEL_103:
    (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v229);
LABEL_66:
    v175 = *(void (**)(char *, void))(v240 + 8);
    v176 = v138;
    v177 = (unint64_t *)&v273;
    goto LABEL_67;
  }
  __break(1u);
  return result;
}

uint64_t sub_5830(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for TimerNLv3Intent()
{
  uint64_t result = qword_17FE88;
  if (!qword_17FE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_58C0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_5994(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_5B50((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_5B50((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s20HandleIntentStrategyVwxx_1((uint64_t)v12);
  return v7;
}

uint64_t sub_5994(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1415D0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = (uint64_t)sub_644C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1416E0();
  if (!v8)
  {
    sub_1417B0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_141810();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_5B50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t _s20HandleIntentStrategyVwxx_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_5BFC()
{
  sub_140240();
  uint64_t result = sub_CC640();
  if (result == 19)
  {
    if (qword_17B2C0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_141170();
    sub_33D8(v1, (uint64_t)qword_17F5A8);
    swift_retain_n();
    long long v2 = sub_141160();
    os_log_type_t v3 = sub_141470();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      uint64_t v5 = sub_140240();
      sub_58C0(v5, v6, &v7);
      sub_1415C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v2, v3, "Unexpected timer verb: %s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return 13;
  }
  return result;
}

uint64_t sub_5DBC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_141170();
  sub_33D8(v8, (uint64_t)qword_17D320);
  uint64_t v9 = sub_141160();
  os_log_type_t v10 = sub_141480();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = sub_642C(a1);
    v29[0] = sub_58C0(v12, v13, v31);
    sub_1415C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v9, v10, "Routing flow based on verb: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a2)
  {
    swift_retain();
    if (sub_6660())
    {
      if (sub_140DC0())
      {
        sub_7680C();
        swift_release();
        return swift_release();
      }
      swift_release();
    }
    if (sub_68C8())
    {
      uint64_t v15 = sub_141160();
      os_log_type_t v16 = sub_141480();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_0, v15, v16, "TimerFlowFactory: deciding between deleteTimerFlow and dismissTimerFlow based on firing timer info from device context.", v17, 2u);
        swift_slowDealloc();
      }

      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      sub_1D8A0();
      return swift_release();
    }
    swift_release();
  }
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
    case 9:
      return sub_6A1C(a2);
    case 2:
      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      return sub_77A18();
    case 5:
      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      return sub_77A54();
    case 7:
    case 17:
    case 18:
      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      return sub_77ACC();
    case 8:
      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      return sub_77A90();
    case 10:
      uint64_t v18 = sub_141160();
      os_log_type_t v19 = sub_141480();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_0, v18, v19, "TimerFlowFactory: deciding between deleteTimerFlow and dismissTimerFlow based on firing timer info from device context.", v20, 2u);
        swift_slowDealloc();
      }

      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      return sub_1D8A0();
    case 12:
      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      return sub_77B08();
    case 14:
      sub_13FA30();
      sub_8FE8((uint64_t)v31, (uint64_t)v29, &qword_17B9B0);
      if (v30)
      {
        sub_13FC40();
        if (swift_dynamicCast())
        {
          sub_13F5F0();
          if (!v29[0]) {
            goto LABEL_30;
          }
          UsoEntity_common_Timer.duration.getter();
          sub_2FF44();
          Class isa = UsoEntity_common_Timer.isMultiple.getter().super.super.isa;
          Class v22 = sub_141580(0).super.super.isa;
          char v23 = sub_141590();

          swift_release();
          if ((v23 & 1) == 0)
          {
            sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
            sub_77B44(a3);
          }
          else
          {
LABEL_30:
            sub_6A1C(a2);
          }
LABEL_44:
          swift_release();
          return sub_904C((uint64_t)v31, &qword_17B9B0);
        }
      }
      else
      {
        sub_904C((uint64_t)v29, &qword_17B9B0);
      }
      sub_8FE8((uint64_t)v31, (uint64_t)v29, &qword_17B9B0);
      if (v30)
      {
        sub_13FC30();
        if (swift_dynamicCast())
        {
          sub_13F5F0();
          if (v29[0] && (uint64_t v24 = sub_13F990(), swift_release(), v24) && (v25 = sub_13FA70(), swift_release(), v25))
          {
            swift_release();
            sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
            sub_9384();
          }
          else
          {
            sub_13EAC0();
          }
          goto LABEL_44;
        }
      }
      else
      {
        sub_904C((uint64_t)v29, &qword_17B9B0);
      }
      uint64_t v26 = sub_141160();
      os_log_type_t v27 = sub_141470();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_0, v26, v27, "TimerFlowFactory: failed to parse UsoTask_noVerb_common_Timer. Exiting the flow.", v28, 2u);
        swift_slowDealloc();
      }

      sub_13EAC0();
      return sub_904C((uint64_t)v31, &qword_17B9B0);
    default:
      sub_90A8((void *)(v4 + 40), *(void *)(v4 + 64));
      return sub_77B44(a3);
  }
}

uint64_t sub_642C(char a1)
{
  return *(void *)&aCheckexicreate[8 * a1];
}

char *sub_644C(uint64_t a1, unint64_t a2)
{
  long long v2 = (char *)sub_64E4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v2 = sub_2F7D4(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    long long v2 = sub_2F7D4(v3 > 1, v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

void *sub_64E4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2F76C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_141690();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1417B0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1412C0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_141810();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1417B0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_6660()
{
  sub_13FA30();
  sub_8FE8((uint64_t)v10, (uint64_t)v8, &qword_17B9B0);
  if (!v9)
  {
    sub_904C((uint64_t)v8, &qword_17B9B0);
LABEL_8:
    sub_8FE8((uint64_t)v10, (uint64_t)v8, &qword_17B9B0);
    if (v9)
    {
      sub_13FB20();
      if (swift_dynamicCast())
      {
        if (qword_17B2C0 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_141170();
        sub_33D8(v5, (uint64_t)qword_17F5A8);
        uint64_t v1 = sub_141160();
        os_log_type_t v2 = sub_141480();
        if (!os_log_type_enabled(v1, v2)) {
          goto LABEL_15;
        }
        unint64_t v3 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v3 = 0;
        unint64_t v4 = "TimerFlowDelegatePlugin found UsoTask_stop_uso_NoEntity.trigger";
        goto LABEL_14;
      }
    }
    else
    {
      sub_904C((uint64_t)v8, &qword_17B9B0);
    }
    uint64_t v6 = 0;
    goto LABEL_18;
  }
  sub_13FD70();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  if (qword_17B2C0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_141170();
  sub_33D8(v0, (uint64_t)qword_17F5A8);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (!os_log_type_enabled(v1, v2)) {
    goto LABEL_15;
  }
  unint64_t v3 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)unint64_t v3 = 0;
  unint64_t v4 = "TimerFlowDelegatePlugin found UsoTask_stop_common_MediaItem.trigger";
LABEL_14:
  _os_log_impl(&dword_0, v1, v2, v4, v3, 2u);
  swift_slowDealloc();
LABEL_15:

  swift_retain();
  uint64_t v6 = sub_13FFD0();
  swift_release_n();
LABEL_18:
  sub_904C((uint64_t)v10, &qword_17B9B0);
  return v6;
}

uint64_t sub_68C8()
{
  sub_13FA30();
  sub_19914((uint64_t)v5, (uint64_t)v3, &qword_17B9B0);
  if (!v4) {
    goto LABEL_6;
  }
  sub_8FE8((uint64_t)v3, (uint64_t)v2, &qword_17B9B0);
  sub_13FD70();
  if (!swift_dynamicCast())
  {
    sub_13FB20();
    if (!swift_dynamicCast())
    {
      _s20HandleIntentStrategyVwxx_1((uint64_t)v2);
LABEL_6:
      uint64_t v0 = 0;
      goto LABEL_7;
    }
  }
  swift_release();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v2);
  uint64_t v0 = 1;
LABEL_7:
  sub_904C((uint64_t)v3, &qword_17B9B0);
  return v0;
}

uint64_t sub_69B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17B9B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6A1C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 && sub_140230())
  {
    if ((sub_13F980() & 1) == 0)
    {
      if (qword_17B1D8 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_141170();
      sub_33D8(v13, (uint64_t)qword_17D320);
      uint64_t v14 = sub_141160();
      os_log_type_t v15 = sub_141480();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v16 = 0;
        _os_log_impl(&dword_0, v14, v15, "TimerFlowFactory: Found alarm parse with invalid signature for timers – returning .noFlow", v16, 2u);
        swift_slowDealloc();
      }

      sub_13EAC0();
      return swift_release();
    }
    swift_release();
  }
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_141170();
  sub_33D8(v4, (uint64_t)qword_17D320);
  uint64_t v5 = sub_141160();
  os_log_type_t v6 = sub_141480();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "TimerFlowFactory: deciding between createTimerFlow and createAlarmFlow based on user's intent.", v7, 2u);
    swift_slowDealloc();
  }

  if (a1)
  {
    if (sub_6FEC())
    {
      swift_retain_n();
      uint64_t v8 = sub_141160();
      os_log_type_t v9 = sub_141480();
      if (os_log_type_enabled(v8, v9))
      {
        os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v10 = 136315138;
        sub_13FA00();
        swift_retain();
        uint64_t v11 = sub_141260();
        sub_58C0(v11, v12, &v31);
        sub_1415C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v8, v9, "TimerFlowFactory: timerEntity: %s", v10, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      UsoEntity_common_Timer.timerType.getter();
      uint64_t v26 = sub_140F50();
      if (v26 == sub_140F50() && (sub_140DC0() & 1) != 0)
      {
        sub_90A8((void *)(v2 + 40), *(void *)(v2 + 64));
        sub_77958();
      }
      else
      {
        UsoEntity_common_Timer.isRightNow.getter();
        sub_90A8((void *)(v2 + 40), *(void *)(v2 + 64));
        sub_9384();
      }
      return swift_release();
    }
    uint64_t v18 = sub_140240();
    if (v19)
    {
      if (v18 == 0x656C62616E65 && v19 == 0xE600000000000000) {
        goto LABEL_27;
      }
      char v20 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_28:
        char v23 = sub_141160();
        os_log_type_t v24 = sub_141470();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl(&dword_0, v23, v24, "TimerEntity is nil in the uso enable or disable task. Returning no flow.", v25, 2u);
          swift_slowDealloc();
        }

        return sub_13EAC0();
      }
    }
    uint64_t v21 = sub_140240();
    if (v22)
    {
      if (v21 == 0x656C6261736964 && v22 == 0xE700000000000000)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      char v27 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_28;
      }
    }
  }
  uint64_t v28 = sub_141160();
  os_log_type_t v29 = sub_141470();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_0, v28, v29, "TimerEntity is nil in the uso task. Return createTimerFlow anyways.", v30, 2u);
    swift_slowDealloc();
  }

  sub_90A8((void *)(v2 + 40), *(void *)(v2 + 64));
  return sub_9384();
}

uint64_t sub_6FEC()
{
  uint64_t v0 = sub_5830(&qword_17F5C0);
  __chkstk_darwin(v0 - 8);
  v82 = (char *)v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_13F500();
  uint64_t v78 = *(void *)(v2 - 8);
  uint64_t v79 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v74 - v6;
  uint64_t v8 = sub_13FAD0();
  uint64_t v80 = *(void *)(v8 - 8);
  uint64_t v81 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_13FAE0();
  uint64_t v83 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_13F610();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = 0;
  switch(sub_5BFC())
  {
    case 1u:
      sub_13FA30();
      if (v86)
      {
        sub_13FC00();
        if (swift_dynamicCast()) {
          goto LABEL_58;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_141170();
      sub_33D8(v61, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on createTimerTask.";
      goto LABEL_145;
    case 2u:
      sub_13FA30();
      if (v86)
      {
        sub_13FC10();
        if (swift_dynamicCast()) {
          goto LABEL_64;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_141170();
      sub_33D8(v62, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on deleteTimerTask.";
      goto LABEL_145;
    case 3u:
      if (!MSVDeviceIsAppleTV()) {
        return 0;
      }
      sub_13FA30();
      if (!v86)
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
LABEL_136:
        if (qword_17B2C0 != -1) {
          swift_once();
        }
        uint64_t v72 = sub_141170();
        sub_33D8(v72, (uint64_t)qword_17F5A8);
        uint64_t v56 = sub_141160();
        os_log_type_t v57 = sub_141480();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v58 = 0;
          v59 = "Parse entity: disable common setting entity not found on disable common setting task.";
          goto LABEL_145;
        }
        goto LABEL_146;
      }
      sub_13FDD0();
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_136;
      }
      uint64_t v19 = v84;
      sub_140060();
      swift_allocObject();
      uint64_t v77 = sub_140050();
      sub_13FD20();
      swift_allocObject();
      sub_13FD10();
      sub_13F6B0();
      swift_allocObject();
      sub_13F6A0();
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerTypeSleep(_:), v14);
      sub_13F690();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      swift_retain();
      sub_13FCD0();
      swift_release();
      swift_retain();
      uint64_t v20 = sub_140000();
      swift_release();
      if (!v20) {
        goto LABEL_153;
      }
      uint64_t v21 = sub_13FD30();
      swift_release();
      if (!v21) {
        goto LABEL_153;
      }
      uint64_t v22 = sub_13FD90();
      swift_release();
      if (!v22) {
        goto LABEL_153;
      }
      uint64_t v23 = sub_13FA70();
      swift_release();
      if (!v23) {
        goto LABEL_153;
      }
      sub_13FAB0();
      double v25 = v24;
      swift_release();
      double v26 = fabs(v25);
      sub_13FED0();
      swift_allocObject();
      uint64_t v27 = sub_13FEC0();
      uint64_t v28 = v83;
      (*(void (**)(char *, void, uint64_t))(v83 + 104))(v13, enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Second(_:), v11);
      sub_13FEB0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
      sub_13FE20();
      swift_allocObject();
      uint64_t result = sub_13FE10();
      if ((~*(void *)&v26 & 0x7FF0000000000000) == 0) {
        goto LABEL_164;
      }
      uint64_t v83 = v27;
      if (v26 > -9.22337204e18)
      {
        uint64_t v76 = v19;
        if (v26 >= 9.22337204e18) {
          goto LABEL_166;
        }
        uint64_t v30 = result;
        sub_13FE00();
        sub_1401F0();
        swift_allocObject();
        sub_1401E0();
        swift_retain();
        sub_1401C0();
        swift_release();
        swift_retain();
        sub_1401D0();
        swift_release();
        sub_13FEA0();
        swift_allocObject();
        sub_13FE90();
        uint64_t v75 = v30;
        uint64_t v32 = v80;
        uint64_t v31 = v81;
        (*(void (**)(char *, void, uint64_t))(v80 + 104))(v10, enum case for UsoEntity_common_Duration.DefinedValues.common_Duration_TotalDuration(_:), v81);
        sub_13FE80();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v31);
        swift_retain();
        sub_13FE70();
        swift_release();
        swift_retain();
        sub_13FCF0();
        swift_release();
        sub_13FDF0();
        sub_140260();
        uint64_t v33 = sub_13F8E0();
        uint64_t v34 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v82, 1, 1, v33);
        uint64_t v35 = swift_retain();
        sub_DD9C8(v35, v34, (uint64_t)v7);
        swift_release();
        sub_904C(v34, &qword_17F5C0);
        sub_13F480();
        sub_13FA30();
        swift_release();
        if (v86)
        {
          sub_13FC00();
          if (swift_dynamicCast())
          {
            swift_retain();
            sub_13FA20();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release_n();
            (*(void (**)(char *, uint64_t))(v78 + 8))(v7, v79);
            return v85[0];
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          sub_904C((uint64_t)v85, &qword_17B9B0);
        }
        (*(void (**)(char *, uint64_t))(v78 + 8))(v7, v79);
        return 0;
      }
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      return result;
    case 4u:
      if (!MSVDeviceIsAppleTV()) {
        return 0;
      }
      sub_13FA30();
      if (v86)
      {
        sub_13FD50();
        if (swift_dynamicCast())
        {
          uint64_t v77 = v84;
          sub_140060();
          swift_allocObject();
          uint64_t v76 = sub_140050();
          sub_13FD20();
          swift_allocObject();
          uint64_t v36 = sub_13FD10();
          sub_13F6B0();
          swift_allocObject();
          uint64_t v37 = sub_13F6A0();
          (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerTypeSleep(_:), v14);
          sub_13F690();
          (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
          swift_retain();
          uint64_t v75 = v36;
          sub_13FCD0();
          v74[1] = v37;
          swift_release();
          swift_retain();
          uint64_t v38 = sub_140000();
          swift_release();
          if (!v38 || (uint64_t v39 = sub_13FD30(), swift_release(), !v39) || (v40 = sub_13FDA0(), swift_release(), !v40))
          {
            if (!sub_140000()
              || (uint64_t v41 = sub_13FD30(), swift_release(), !v41)
              || (uint64_t v42 = sub_13FD80(), swift_release(), !v42)
              || (uint64_t v43 = sub_13FA70(), swift_release(), !v43))
            {
              if (!sub_140000()
                || (uint64_t v44 = sub_13FD40(), swift_release(), !v44)
                || (uint64_t v45 = sub_13FA70(), swift_release(), !v45))
              {
LABEL_153:
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                return 0;
              }
            }
          }
          sub_13FAB0();
          double v47 = v46;
          swift_release();
          double v48 = fabs(v47);
          sub_13FED0();
          swift_allocObject();
          sub_13FEC0();
          uint64_t v49 = v83;
          (*(void (**)(char *, void, uint64_t))(v83 + 104))(v13, enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Second(_:), v11);
          sub_13FEB0();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v11);
          sub_13FE20();
          swift_allocObject();
          uint64_t result = sub_13FE10();
          if ((~*(void *)&v48 & 0x7FF0000000000000) != 0)
          {
            if (v48 > -9.22337204e18)
            {
              if (v48 < 9.22337204e18)
              {
                sub_13FE00();
                sub_1401F0();
                swift_allocObject();
                sub_1401E0();
                swift_retain();
                sub_1401C0();
                swift_release();
                swift_retain();
                sub_1401D0();
                swift_release();
                sub_13FEA0();
                swift_allocObject();
                sub_13FE90();
                uint64_t v51 = v80;
                uint64_t v50 = v81;
                (*(void (**)(char *, void, uint64_t))(v80 + 104))(v10, enum case for UsoEntity_common_Duration.DefinedValues.common_Duration_TotalDuration(_:), v81);
                sub_13FE80();
                (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v50);
                swift_retain();
                sub_13FE70();
                swift_release();
                swift_retain();
                sub_13FCF0();
                swift_release();
                sub_13FDF0();
                sub_140260();
                uint64_t v52 = sub_13F8E0();
                uint64_t v53 = (uint64_t)v82;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v82, 1, 1, v52);
                uint64_t v54 = swift_retain();
                sub_DD9C8(v54, v53, (uint64_t)v5);
                swift_release();
                sub_904C(v53, &qword_17F5C0);
                sub_13F480();
                sub_13FA30();
                swift_release();
                if (v86)
                {
                  sub_13FC00();
                  if (swift_dynamicCast())
                  {
                    swift_retain();
                    sub_13FA20();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release_n();
                    (*(void (**)(char *, uint64_t))(v78 + 8))(v5, v79);
                    return v85[0];
                  }
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                }
                else
                {
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_904C((uint64_t)v85, &qword_17B9B0);
                }
                (*(void (**)(char *, uint64_t))(v78 + 8))(v5, v79);
                return 0;
              }
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
              goto LABEL_165;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_163;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v73 = sub_141170();
      sub_33D8(v73, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v58 = 0;
        v59 = "Parse entity: enable common setting entity not found on enable common setting task.";
        goto LABEL_145;
      }
LABEL_146:

      return 0;
    case 5u:
      sub_13FA30();
      if (v86)
      {
        sub_13FB60();
        if (swift_dynamicCast()) {
          goto LABEL_64;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_141170();
      sub_33D8(v63, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on pauseTimerTask.";
      goto LABEL_145;
    case 6u:
      sub_13FA30();
      if (v86)
      {
        sub_13FCB0();
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_13FF20();
          swift_release();
          uint64_t v18 = v84;
          if (v84)
          {
            swift_release();
            return v18;
          }
          swift_retain();
          sub_13FF10();
          goto LABEL_150;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_141170();
      sub_33D8(v64, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v58 = 0;
        v59 = "Parse entity: timer entity not found on requestTimerTask.";
        goto LABEL_145;
      }
      goto LABEL_146;
    case 7u:
      sub_13FA30();
      if (v86)
      {
        sub_13FB80();
        if (swift_dynamicCast()) {
          goto LABEL_67;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_141170();
      sub_33D8(v65, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on resetTimerTask.";
      goto LABEL_145;
    case 8u:
      sub_13FA30();
      if (v86)
      {
        sub_13FC70();
        if (swift_dynamicCast()) {
          goto LABEL_64;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_141170();
      sub_33D8(v66, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on resumeTimerTask.";
      goto LABEL_145;
    case 9u:
      sub_13FA30();
      if (v86)
      {
        sub_13FB90();
        if (swift_dynamicCast())
        {
LABEL_58:
          swift_retain();
          sub_13FA20();
          goto LABEL_150;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v67 = sub_141170();
      sub_33D8(v67, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on startTimerTask.";
      goto LABEL_145;
    case 0xAu:
      sub_13FA30();
      if (v86)
      {
        sub_13FB10();
        if (swift_dynamicCast()) {
          goto LABEL_64;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_141170();
      sub_33D8(v68, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on stopTimerTask.";
      goto LABEL_145;
    case 0xBu:
      sub_13FA30();
      if (v86)
      {
        sub_13FDE0();
        if (swift_dynamicCast()) {
          goto LABEL_64;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_141170();
      sub_33D8(v69, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on summariseTimerTask.";
      goto LABEL_145;
    case 0xCu:
      sub_13FA30();
      if (v86)
      {
        sub_13FC90();
        if (swift_dynamicCast())
        {
LABEL_67:
          swift_retain();
          sub_13FF50();
          goto LABEL_150;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_141170();
      sub_33D8(v70, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on updateTimerTask.";
      goto LABEL_145;
    case 0xDu:
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_141170();
      sub_33D8(v55, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141470();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: failed to parse task with unknown verb. Returning nil entity";
      goto LABEL_145;
    case 0xEu:
      sub_13FA30();
      if (v86)
      {
        sub_13FC40();
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_13F5F0();
          goto LABEL_150;
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_141170();
      sub_33D8(v71, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (!os_log_type_enabled(v56, v57)) {
        goto LABEL_146;
      }
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      v59 = "Parse entity: timer entity not found on noVerbTimerTask.";
      goto LABEL_145;
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
      return v18;
    default:
      sub_13FA30();
      if (v86)
      {
        sub_140110();
        if (swift_dynamicCast())
        {
LABEL_64:
          swift_retain();
          sub_13FBC0();
LABEL_150:
          swift_release_n();
          return v85[0];
        }
      }
      else
      {
        sub_904C((uint64_t)v85, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_141170();
      sub_33D8(v60, (uint64_t)qword_17F5A8);
      uint64_t v56 = sub_141160();
      os_log_type_t v57 = sub_141480();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v58 = 0;
        v59 = "Parse entity: timer entity not found on checkExistenceTimerTask.";
LABEL_145:
        _os_log_impl(&dword_0, v56, v57, v59, v58, 2u);
        swift_slowDealloc();
      }
      goto LABEL_146;
  }
}

uint64_t UsoEntity_common_Timer.isRightNow.getter()
{
  uint64_t v0 = sub_13FA90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  double v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_5830(&qword_17DD48);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_5830(&qword_17DD50);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v23 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v23 - v13;
  if (sub_13F9F0())
  {
    sub_13FA80();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v14, 1, 1, v0);
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v12, enum case for UsoEntity_common_DateTime.DefinedValues.common_DateTime_Now(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  uint64_t v15 = (uint64_t)&v5[*(int *)(v3 + 48)];
  sub_8FE8((uint64_t)v14, (uint64_t)v5, &qword_17DD50);
  sub_8FE8((uint64_t)v12, v15, &qword_17DD50);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v16((uint64_t)v5, 1, v0) == 1)
  {
    sub_904C((uint64_t)v12, &qword_17DD50);
    sub_904C((uint64_t)v14, &qword_17DD50);
    int v17 = v16(v15, 1, v0);
    if (v17 == 1) {
      uint64_t v18 = &qword_17DD50;
    }
    else {
      uint64_t v18 = &qword_17DD48;
    }
    if (v17 == 1) {
      char v19 = -1;
    }
    else {
      char v19 = 0;
    }
  }
  else
  {
    sub_8FE8((uint64_t)v5, (uint64_t)v9, &qword_17DD50);
    if (v16(v15, 1, v0) == 1)
    {
      sub_904C((uint64_t)v12, &qword_17DD50);
      sub_904C((uint64_t)v14, &qword_17DD50);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
      char v19 = 0;
      uint64_t v18 = &qword_17DD48;
    }
    else
    {
      uint64_t v20 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v24, v15, v0);
      sub_98684(&qword_17DD58, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_DateTime.DefinedValues);
      char v19 = sub_141230();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v20, v0);
      uint64_t v18 = &qword_17DD50;
      sub_904C((uint64_t)v12, &qword_17DD50);
      sub_904C((uint64_t)v14, &qword_17DD50);
      v21(v9, v0);
    }
  }
  sub_904C((uint64_t)v5, v18);
  return v19 & 1;
}

uint64_t sub_8FE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5830(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_904C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_5830(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_90A8(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_90EC(uint64_t *a1, const char *a2, void (*a3)(unsigned char *), void (*a4)(char *, char *))
{
  double v24 = a2;
  uint64_t v8 = v4;
  uint64_t v9 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(a1);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_141170();
  sub_33D8(v16, (uint64_t)qword_17D320);
  int v17 = sub_141160();
  os_log_type_t v18 = sub_141480();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = v13;
    *(_WORD *)char v19 = 0;
    _os_log_impl(&dword_0, v17, v18, v24, v19, 2u);
    uint64_t v13 = v23;
    swift_slowDealloc();
  }

  sub_3410(v8 + 16, (uint64_t)v25);
  a3(v25);
  uint64_t v20 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  a4(v15, v11);
  sub_904C((uint64_t)v11, &qword_17CD30);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_9384()
{
  return sub_90EC(&qword_17CDB0, "TimerFlowFactory: making createTimerFlow.", (void (*)(unsigned char *))sub_93C0, (void (*)(char *, char *))sub_B1E0);
}

uint64_t sub_93C0(uint64_t a1)
{
  uint64_t v2 = sub_140730();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140CA0();
  sub_140C60();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_5830(&qword_17CDB0);
  sub_13E9E0();
  sub_A0D4();
  sub_13E9B0();
  sub_13EA00();
  _s18NeedsValueStrategyCMa();
  uint64_t v9 = swift_allocObject();
  sub_6C5D8(&qword_17CDC0, (void (*)(uint64_t))_s18NeedsValueStrategyCMa);
  sub_13E940();
  sub_13E9C0();
  _s25NeedsConfirmationStrategyCMa();
  uint64_t v9 = swift_allocObject();
  sub_6C5D8(&qword_17CDC8, (void (*)(uint64_t))_s25NeedsConfirmationStrategyCMa);
  sub_13E980();
  sub_13EA10();
  sub_140720();
  BOOL v6 = sub_1406C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v6)
  {
    sub_6C620();
    sub_13E9A0();
    sub_13E9F0();
  }
  sub_A1C4();
  sub_13E960();
  sub_13E9D0();
  swift_release();
  swift_release();
  return _s20HandleIntentStrategyVwxx_1(a1);
}

uint64_t sub_96B8(uint64_t a1)
{
  sub_140BC0();
  sub_140BE0();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_5830(&qword_17D580);
  sub_13E9E0();
  sub_5830(&qword_17FB68);
  sub_10EED8();
  sub_13E990();
  sub_13EA20();
  sub_3410(a1, (uint64_t)v6);
  sub_10EF34();
  sub_13E940();
  sub_13E9C0();
  sub_3410(a1, (uint64_t)v5);
  sub_10EF88();
  sub_13E980();
  sub_13EA10();
  sub_3410(a1, (uint64_t)v4);
  sub_10EFDC();
  sub_13E9B0();
  sub_13EA00();
  sub_3410(a1, (uint64_t)v3);
  sub_10F030();
  sub_13E960();
  sub_13E9D0();
  _s20HandleIntentStrategyVwxx_1(a1);
  sub_10F084((uint64_t)v3);
  sub_10F0D8((uint64_t)v4);
  sub_10F12C((uint64_t)v5);
  return sub_10F180((uint64_t)v6);
}

uint64_t sub_98A4(uint64_t a1)
{
  sub_140C40();
  sub_140C30();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_5830(&qword_17D5B8);
  sub_13E9E0();
  sub_5830(&qword_17FB80);
  sub_B978(&qword_180960, &qword_17FB80);
  sub_13E990();
  sub_13EA20();
  sub_3410(a1, (uint64_t)v5);
  sub_130DF8();
  sub_13E980();
  sub_13EA10();
  sub_3410(a1, (uint64_t)v4);
  sub_130E4C();
  sub_13E960();
  sub_13E9D0();
  sub_3410(a1, (uint64_t)v3);
  sub_5830(&qword_180978);
  sub_B978(&qword_180980, &qword_180978);
  sub_13E9B0();
  sub_13EA00();
  _s20HandleIntentStrategyVwxx_1(a1);
  sub_130EA0((uint64_t)v3);
  sub_130F00((uint64_t)v4);
  return sub_130F54((uint64_t)v5);
}

uint64_t sub_9AB0(uint64_t a1)
{
  sub_140CD0();
  sub_140CC0();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_5830((uint64_t *)&unk_17D660);
  sub_13E9E0();
  sub_5830(&qword_17FB28);
  sub_B978(&qword_17FB30, &qword_17FB28);
  sub_13E990();
  sub_13EA20();
  sub_3410(a1, (uint64_t)v5);
  sub_F3F80();
  sub_13E980();
  sub_13EA10();
  sub_3410(a1, (uint64_t)v4);
  sub_F3FD4();
  sub_13E960();
  sub_13E9D0();
  sub_3410(a1, (uint64_t)v3);
  sub_5830(&qword_17FB48);
  sub_B978(&qword_17FB50, &qword_17FB48);
  sub_13E9B0();
  sub_13EA00();
  _s20HandleIntentStrategyVwxx_1(a1);
  sub_1E3BC((uint64_t)v3);
  sub_1E420((uint64_t)v4);
  return sub_1E474((uint64_t)v5);
}

uint64_t sub_9CBC(uint64_t a1)
{
  sub_140D00();
  sub_140CF0();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_5830(&qword_17D5F0);
  sub_13E9E0();
  sub_5830(&qword_17F840);
  sub_B978(&qword_17F848, &qword_17F840);
  sub_13E990();
  sub_13EA20();
  sub_3410(a1, (uint64_t)v5);
  sub_EBB18();
  sub_13E980();
  sub_13EA10();
  sub_3410(a1, (uint64_t)v4);
  sub_EBB6C();
  sub_13E960();
  sub_13E9D0();
  sub_3410(a1, (uint64_t)v3);
  sub_5830(&qword_17F860);
  sub_B978(&qword_17F868, &qword_17F860);
  sub_13E9B0();
  sub_13EA00();
  _s20HandleIntentStrategyVwxx_1(a1);
  sub_EBBC0((uint64_t)v3);
  sub_EBC20((uint64_t)v4);
  return sub_EBC74((uint64_t)v5);
}

uint64_t sub_9EC8(uint64_t a1)
{
  sub_140C10();
  sub_140C00();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_5830(&qword_17CFD8);
  sub_13E9E0();
  sub_5830(&qword_17CFE8);
  sub_B978(&qword_17CFF0, &qword_17CFE8);
  sub_13E990();
  sub_13EA20();
  sub_3410(a1, (uint64_t)v5);
  sub_711C4();
  sub_13E980();
  sub_13EA10();
  sub_3410(a1, (uint64_t)v4);
  sub_71218();
  sub_13E960();
  sub_13E9D0();
  sub_3410(a1, (uint64_t)v3);
  sub_5830(&qword_17D008);
  sub_B978(&qword_17D010, &qword_17D008);
  sub_13E9B0();
  sub_13EA00();
  _s20HandleIntentStrategyVwxx_1(a1);
  sub_7126C((uint64_t)v3);
  sub_712CC((uint64_t)v4);
  return sub_71320((uint64_t)v5);
}

unint64_t sub_A0D4()
{
  unint64_t result = qword_17CDB8;
  if (!qword_17CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17CDB8);
  }
  return result;
}

uint64_t _s18NeedsValueStrategyCMa()
{
  return self;
}

uint64_t _s25NeedsConfirmationStrategyCMa()
{
  return self;
}

unint64_t sub_A170()
{
  unint64_t result = qword_17F538[0];
  if (!qword_17F538[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17F538);
  }
  return result;
}

unint64_t sub_A1C4()
{
  unint64_t result = qword_17CDD8;
  if (!qword_17CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17CDD8);
  }
  return result;
}

uint64_t sub_A218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v4 = sub_5830(&qword_17D630);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17CFD8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(&qword_17D638);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v20 - v16;
  sub_3410(v3 + 16, (uint64_t)&v20 - v16);
  sub_8FE8(v20, (uint64_t)&v17[*(int *)(v12 + 36)], &qword_17CD30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_5830(&qword_17D640);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v17, (uint64_t)v15, &qword_17D638);
  sub_B978(&qword_17D648, &qword_17D638);
  swift_retain();
  sub_13EE20();
  uint64_t v18 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v18;
  sub_5830(&qword_17D650);
  sub_B978(&qword_17D658, &qword_17D650);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  swift_release();
  swift_release();
  return sub_904C((uint64_t)v17, &qword_17D638);
}

uint64_t sub_A540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v4 = sub_5830(&qword_17D5C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17D5B8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(&qword_17D5C8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v20 - v16;
  sub_3410(v3 + 16, (uint64_t)&v20 - v16);
  sub_8FE8(v20, (uint64_t)&v17[*(int *)(v12 + 36)], &qword_17CD30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_5830(&qword_17D5D0);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v17, (uint64_t)v15, &qword_17D5C8);
  sub_B978(&qword_17D5D8, &qword_17D5C8);
  swift_retain();
  sub_13EE20();
  uint64_t v18 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v18;
  sub_5830(&qword_17D5E0);
  sub_B978(&qword_17D5E8, &qword_17D5E0);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  swift_release();
  swift_release();
  return sub_904C((uint64_t)v17, &qword_17D5C8);
}

uint64_t sub_A868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v4 = sub_5830(&qword_17CF38);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830((uint64_t *)&unk_17D660);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830((uint64_t *)&unk_17D670);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v20 - v16;
  sub_3410(v3 + 16, (uint64_t)&v20 - v16);
  sub_8FE8(v20, (uint64_t)&v17[*(int *)(v12 + 36)], &qword_17CD30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_5830(&qword_17CF40);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_17D670);
  sub_B978((unint64_t *)&unk_17D680, (uint64_t *)&unk_17D670);
  swift_retain();
  sub_13EE20();
  uint64_t v18 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v18;
  sub_5830(&qword_17CF48);
  sub_B978(&qword_17D690, &qword_17CF48);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  swift_release();
  swift_release();
  return sub_904C((uint64_t)v17, (uint64_t *)&unk_17D670);
}

uint64_t sub_AB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v4 = sub_5830(&qword_17D5F8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17D5F0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(&qword_17D600);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v20 - v16;
  sub_3410(v3 + 16, (uint64_t)&v20 - v16);
  sub_8FE8(v20, (uint64_t)&v17[*(int *)(v12 + 36)], &qword_17CD30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_5830(&qword_17D608);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v17, (uint64_t)v15, &qword_17D600);
  sub_B978(&qword_17D610, &qword_17D600);
  swift_retain();
  sub_13EE20();
  uint64_t v18 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v18;
  sub_5830(&qword_17D618);
  sub_B978((unint64_t *)&unk_17D620, &qword_17D618);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  swift_release();
  swift_release();
  return sub_904C((uint64_t)v17, &qword_17D600);
}

uint64_t sub_AEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v4 = sub_5830(&qword_17C660);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17D528);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(&qword_17D520);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v20 - v16;
  sub_3410(v3 + 16, (uint64_t)&v20 - v16);
  sub_8FE8(v20, (uint64_t)&v17[*(int *)(v12 + 36)], &qword_17CD30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_5830(&qword_17D540);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v17, (uint64_t)v15, &qword_17D520);
  sub_B978((unint64_t *)&unk_17D548, &qword_17D520);
  swift_retain();
  sub_13EE20();
  uint64_t v18 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v18;
  sub_5830(&qword_17D570);
  sub_B978(&qword_17D578, &qword_17D570);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  swift_release();
  swift_release();
  return sub_904C((uint64_t)v17, &qword_17D520);
}

uint64_t sub_B1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v4 = sub_5830((uint64_t *)&unk_17D6B0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17CDB0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(&qword_17CF60);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v20 - v16;
  sub_3410(v3 + 16, (uint64_t)&v20 - v16);
  sub_8FE8(v20, (uint64_t)&v17[*(int *)(v12 + 36)], &qword_17CD30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_5830((uint64_t *)&unk_17D6C0);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v17, (uint64_t)v15, &qword_17CF60);
  sub_B978(&qword_17CF68, &qword_17CF60);
  swift_retain();
  sub_13EE20();
  uint64_t v18 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v18;
  sub_5830((uint64_t *)&unk_17D6D0);
  sub_B978(&qword_17CF70, (uint64_t *)&unk_17D6D0);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  swift_release();
  swift_release();
  return sub_904C((uint64_t)v17, &qword_17CF60);
}

uint64_t sub_B508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v4 = sub_5830(&qword_17D588);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17D580);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(&qword_17D590);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v20 - v16;
  sub_3410(v3 + 16, (uint64_t)&v20 - v16);
  sub_8FE8(v20, (uint64_t)&v17[*(int *)(v12 + 36)], &qword_17CD30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_5830(&qword_17D598);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v17, (uint64_t)v15, &qword_17D590);
  sub_B978(&qword_17D5A0, &qword_17D590);
  swift_retain();
  sub_13EE20();
  uint64_t v18 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v18;
  sub_5830(&qword_17D5A8);
  sub_B978(&qword_17D5B0, &qword_17D5A8);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  swift_release();
  swift_release();
  return sub_904C((uint64_t)v17, &qword_17D590);
}

uint64_t sub_B830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_140980();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_5830(&qword_17CD30);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_B978(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23FA8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_B9BC(uint64_t a1, uint64_t a2)
{
  _s20HandleIntentStrategyVwxx_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_140980();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_BA88(uint64_t a1)
{
  return a1;
}

uint64_t destroy for TimerFlowFactory(uint64_t a1)
{
  _s20HandleIntentStrategyVwxx_1(a1);

  return _s20HandleIntentStrategyVwxx_1(a1 + 40);
}

uint64_t sub_BB14()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_BB50@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B1C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_141170();
  sub_33D8(v11, (uint64_t)qword_17CDE8);
  uint64_t v12 = sub_141160();
  os_log_type_t v13 = sub_141480();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "TimerIntents.FlowStrategy.actionForInput() called.", v14, 2u);
    swift_slowDealloc();
  }

  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = v4 + *(int *)(a2 + 36);
  uint64_t v17 = sub_1407C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  sub_B3658(a1, v16, 0, (void (*)(void, void))v10, v15, a3);
  return sub_904C((uint64_t)v10, (uint64_t *)&unk_17EB90);
}

uint64_t sub_BD10(uint64_t a1, int a2)
{
  int v109 = a2;
  uint64_t v123 = sub_13F380();
  uint64_t v121 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  v120 = &v108[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_13F3C0();
  uint64_t v130 = *(void *)(v4 - 8);
  uint64_t v131 = v4;
  __chkstk_darwin(v4);
  v129 = &v108[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = sub_13F540();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = &v108[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_5830(&qword_17D450);
  __chkstk_darwin(v7 - 8);
  uint64_t v117 = &v108[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v115 = sub_13F430();
  uint64_t v119 = *(void *)(v115 - 8);
  uint64_t v9 = __chkstk_darwin(v115);
  uint64_t v110 = &v108[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v118 = &v108[-v11];
  uint64_t v135 = sub_13F500();
  uint64_t v122 = *(void *)(v135 - 8);
  uint64_t v12 = __chkstk_darwin(v135);
  v114 = &v108[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_type_t v134 = &v108[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  char v132 = &v108[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  v133 = &v108[-v19];
  __chkstk_darwin(v18);
  uint64_t v21 = &v108[-v20];
  uint64_t v124 = sub_13F460();
  uint64_t v126 = *(void *)(v124 - 8);
  uint64_t v22 = __chkstk_darwin(v124);
  uint64_t v116 = &v108[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  double v25 = &v108[-v24];
  uint64_t v26 = sub_13F410();
  uint64_t v127 = *(void *)(v26 - 8);
  uint64_t v128 = v26;
  __chkstk_darwin(v26);
  v125 = &v108[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = sub_13F3E0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  __chkstk_darwin(v30);
  uint64_t v32 = &v108[-v31];
  uint64_t v33 = sub_140280();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = &v108[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_13F370();
  int v37 = (*(uint64_t (**)(unsigned char *, uint64_t))(v29 + 88))(v32, v28);
  if (v37 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v29 + 96))(v32, v28);
LABEL_5:
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 32))(v36, v32, v33);
    char v38 = sub_BAB8C();
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v36, v33);
    return v38 & 1;
  }
  if (v37 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v29 + 96))(v32, v28);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v37 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v29 + 96))(v32, v28);
    uint64_t v41 = v129;
    uint64_t v40 = v130;
    uint64_t v42 = v131;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v130 + 32))(v129, v32, v131);
    char v43 = sub_1408C0();
    (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v41, v42);
    char v38 = v43 ^ 1;
    return v38 & 1;
  }
  if (v37 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v29 + 96))(v32, v28);
    self;
    if (swift_dynamicCastObjCClass()
      || (self, swift_dynamicCastObjCClass())
      || (self, swift_dynamicCastObjCClass())
      || (self, swift_dynamicCastObjCClass()))
    {
      swift_unknownObjectRelease();
      char v38 = 1;
      return v38 & 1;
    }
    swift_getObjectType();
    uint64_t v98 = SIRINLUUserDialogAct.firstUsoTask.getter();
    if (v98)
    {
      uint64_t v99 = v98;
      if (sub_CFA4() & 1) != 0 || (sub_BAF20(v99, v109 & 1))
      {
        swift_unknownObjectRelease();
        swift_release();
        char v38 = 1;
      }
      else
      {
        char v38 = sub_BB710();
        swift_unknownObjectRelease();
        swift_release();
      }
      return v38 & 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v100 = sub_141170();
    sub_33D8(v100, (uint64_t)qword_17EB30);
    id v101 = sub_141160();
    os_log_type_t v102 = sub_141480();
    if (os_log_type_enabled(v101, v102))
    {
      os_log_type_t v103 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v103 = 0;
      _os_log_impl(&dword_0, v101, v102, "NLv4IntentOnly parse received is NOT valid timer input: not able to get timerTask", v103, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
LABEL_49:
    char v38 = 0;
    return v38 & 1;
  }
  if (v37 != enum case for Parse.uso(_:))
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_141170();
    sub_33D8(v66, (uint64_t)qword_17EB30);
    uint64_t v68 = v120;
    uint64_t v67 = v121;
    uint64_t v69 = v123;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v121 + 16))(v120, a1, v123);
    uint64_t v70 = sub_141160();
    os_log_type_t v71 = sub_141480();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v135 = swift_slowAlloc();
      uint64_t v137 = v135;
      *(_DWORD *)uint64_t v72 = 136315138;
      v133 = v72 + 4;
      os_log_type_t v134 = v72;
      sub_13F370();
      uint64_t v73 = sub_141260();
      uint64_t v136 = sub_58C0(v73, v74, &v137);
      sub_1415C0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v68, v123);
      _os_log_impl(&dword_0, v70, v71, "Parse received is NOT valid timer input: %s", v134, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v68, v69);
    }

    (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v32, v28);
    goto LABEL_49;
  }
  (*(void (**)(unsigned char *, uint64_t))(v29 + 96))(v32, v28);
  uint64_t v44 = v125;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v127 + 32))(v125, v32, v128);
  sub_13F400();
  uint64_t v45 = sub_13F450();
  uint64_t v46 = v126 + 8;
  double v47 = *(unsigned char **)(v126 + 8);
  ((void (*)(unsigned char *, uint64_t))v47)(v25, v124);
  uint64_t v48 = *(void *)(v45 + 16);
  if (!v48)
  {
    swift_bridgeObjectRelease();
    uint64_t v65 = v122;
LABEL_33:
    uint64_t v75 = v116;
    sub_13F400();
    uint64_t v76 = sub_13F450();
    ((void (*)(unsigned char *, uint64_t))v47)(v75, v124);
    uint64_t v77 = *(void *)(v76 + 16);
    uint64_t v78 = v135;
    if (v77)
    {
      uint64_t v79 = v65 + 16;
      uint64_t v80 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v65 + 16);
      unint64_t v81 = v76 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
      uint64_t v82 = *(void *)(v79 + 56);
      swift_bridgeObjectRetain();
      uint64_t v83 = v114;
      while (1)
      {
        v80(v83, v81, v78);
        if (sub_13F470()) {
          break;
        }
        (*(void (**)(unsigned char *, uint64_t))(v79 - 8))(v83, v78);
        v81 += v82;
        if (!--v77)
        {
          swift_bridgeObjectRelease();
          uint64_t v84 = 1;
          uint64_t v85 = (uint64_t)v117;
          uint64_t v65 = v122;
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v65 = v122;
      uint64_t v85 = (uint64_t)v117;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v122 + 32))(v117, v83, v78);
      uint64_t v84 = 0;
    }
    else
    {
      uint64_t v84 = 1;
      uint64_t v85 = (uint64_t)v117;
    }
LABEL_40:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v85, v84, 1, v78);
    swift_bridgeObjectRelease();
    int v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v85, 1, v78);
    uint64_t v88 = v118;
    uint64_t v87 = v119;
    if (v86 == 1)
    {
      sub_904C(v85, &qword_17D450);
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v91 = sub_141170();
      sub_33D8(v91, (uint64_t)qword_17EB30);
      uint64_t v92 = sub_141160();
      os_log_type_t v93 = sub_141470();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v94 = 0;
        _os_log_impl(&dword_0, v92, v93, "Failed to parse userParse. Not valid timer input.", v94, 2u);
        swift_slowDealloc();
      }

LABEL_48:
      (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v44, v128);
      goto LABEL_49;
    }
    uint64_t v89 = v111;
    sub_13F4C0();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v85, v78);
    uint64_t v90 = v110;
    sub_13F510();
    (*(void (**)(unsigned char *, uint64_t))(v112 + 8))(v89, v113);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 32))(v88, v90, v115);
    sub_13F5C0();
    unint64_t v95 = sub_13F900();
    unint64_t v96 = v95;
    if (v95 >> 62)
    {
      if (sub_1417D0()) {
        goto LABEL_55;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v95 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_55:
      if ((v96 & 0xC000000000000001) != 0)
      {
        uint64_t v97 = sub_1416A0();
LABEL_58:
        swift_bridgeObjectRelease();
        if (sub_CFA4() & 1) != 0 || (sub_BAF20(v97, v109 & 1)) {
          char v38 = 1;
        }
        else {
          char v38 = sub_BB710();
        }
        swift_release();
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v88, v115);
        (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v44, v128);
        return v38 & 1;
      }
      if (*(void *)((char *)&dword_10 + (v96 & 0xFFFFFFFFFFFFFF8)))
      {
        uint64_t v97 = *(void *)(v96 + 32);
        swift_retain();
        goto LABEL_58;
      }
      __break(1u);
      goto LABEL_80;
    }
    swift_bridgeObjectRelease();
    if (qword_17B270 == -1)
    {
LABEL_75:
      uint64_t v104 = sub_141170();
      sub_33D8(v104, (uint64_t)qword_17EB30);
      uint64_t v105 = sub_141160();
      os_log_type_t v106 = sub_141470();
      if (os_log_type_enabled(v105, v106))
      {
        v107 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v107 = 0;
        _os_log_impl(&dword_0, v105, v106, "USO tasks graph has no tasks. Not valid timer input.", v107, 2u);
        swift_slowDealloc();
      }

      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v88, v115);
      goto LABEL_48;
    }
LABEL_80:
    swift_once();
    goto LABEL_75;
  }
  v129 = v47;
  uint64_t v130 = v45;
  uint64_t v126 = v46;
  uint64_t v49 = *(void (**)(uint8_t *, unint64_t, uint64_t))(v122 + 16);
  unint64_t v50 = v45 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
  uint64_t v51 = (void (**)(uint8_t *, uint64_t))(v122 + 8);
  uint64_t v131 = *(void *)(v122 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v52 = v135;
    v49(v21, v50, v135);
    char v53 = sub_13F490();
    uint64_t v54 = v133;
    v49(v133, (unint64_t)v21, v52);
    char v55 = (v53 & 1) != 0 ? 1 : sub_13F4B0();
    uint64_t v56 = v132;
    os_log_type_t v57 = v54;
    uint64_t v58 = *v51;
    uint64_t v59 = v135;
    (*v51)(v57, v135);
    v49(v56, (unint64_t)v21, v59);
    if (v55) {
      break;
    }
    char v60 = sub_13F4A0();
    uint64_t v61 = v56;
    char v62 = v60;
    v58(v61, v59);
    uint64_t v63 = v134;
    v49(v134, (unint64_t)v21, v59);
    if (v62) {
      goto LABEL_51;
    }
    char v64 = sub_13F4E0();
    v58(v63, v59);
    v58(v21, v59);
    if (v64) {
      goto LABEL_52;
    }
    v50 += v131;
    if (!--v48)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v44 = v125;
      uint64_t v65 = v122;
      double v47 = v129;
      goto LABEL_33;
    }
  }
  v58(v56, v59);
  uint64_t v63 = v134;
  v49(v134, (unint64_t)v21, v59);
LABEL_51:
  v58(v63, v59);
  v58(v21, v59);
LABEL_52:
  swift_bridgeObjectRelease_n();
  (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v125, v128);
  char v38 = 1;
  return v38 & 1;
}

uint64_t sub_CFA4()
{
  sub_13FA30();
  sub_8FE8((uint64_t)v14, (uint64_t)v12, &qword_17B9B0);
  if (v13)
  {
    sub_8FE8((uint64_t)v12, (uint64_t)v11, &qword_17B9B0);
    sub_140110();
    if (swift_dynamicCast()) {
      goto LABEL_15;
    }
    sub_13FC00();
    if (swift_dynamicCast()) {
      goto LABEL_15;
    }
    sub_13FC10();
    if (swift_dynamicCast()) {
      goto LABEL_15;
    }
    sub_13FB60();
    if (swift_dynamicCast()) {
      goto LABEL_15;
    }
    sub_13FCB0();
    if (swift_dynamicCast()) {
      goto LABEL_15;
    }
    sub_13FB80();
    if (swift_dynamicCast()
      || (sub_13FC70(), swift_dynamicCast())
      || (sub_13FB90(), swift_dynamicCast())
      || (sub_13FB10(), swift_dynamicCast())
      || (sub_13FDE0(), swift_dynamicCast())
      || (sub_13FC90(), swift_dynamicCast())
      || (sub_13FC40(), swift_dynamicCast())
      || (sub_13FC50(), swift_dynamicCast()))
    {
LABEL_15:
      sub_904C((uint64_t)v14, &qword_17B9B0);
      swift_release();
      _s20HandleIntentStrategyVwxx_1((uint64_t)v11);
      uint64_t v0 = 1;
      goto LABEL_29;
    }
    _s20HandleIntentStrategyVwxx_1((uint64_t)v11);
  }
  if ((sub_68C8() & 1) != 0 && (uint64_t v1 = sub_6660(), swift_release(), v1))
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_141170();
    sub_33D8(v2, (uint64_t)qword_17EB30);
    uint64_t v3 = sub_141160();
    os_log_type_t v4 = sub_141470();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_0, v3, v4, "Timer flow received non-timer NLv4 parse – but matches acceptable signature for sleep timer", v5, 2u);
      swift_slowDealloc();
    }

    sub_904C((uint64_t)v14, &qword_17B9B0);
    uint64_t v0 = 1;
  }
  else
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_141170();
    sub_33D8(v6, (uint64_t)qword_17EB30);
    uint64_t v7 = sub_141160();
    os_log_type_t v8 = sub_141470();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "Timer flow received non-timer NLv4 parse", v9, 2u);
      swift_slowDealloc();
    }

    sub_904C((uint64_t)v14, &qword_17B9B0);
    uint64_t v0 = 0;
  }
LABEL_29:
  sub_904C((uint64_t)v12, &qword_17B9B0);
  return v0;
}

uint64_t sub_D3F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v70 = sub_13F500();
  uint64_t v63 = *(void *)(v70 - 8);
  uint64_t v1 = __chkstk_darwin(v70);
  char v62 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v69 = (char *)&v61 - v3;
  uint64_t v4 = sub_13F460();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_13F410();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v71 = (void (*)(char *, unint64_t, uint64_t))type metadata accessor for TimerNLv3Intent();
  uint64_t v9 = __chkstk_darwin(v71);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = sub_13F3E0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_140280();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F370();
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v22 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
LABEL_5:
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v23(v21, v17, v18);
    v23(v13, v21, v18);
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_141170();
    sub_33D8(v24, (uint64_t)qword_17EB30);
    sub_303C0((uint64_t)v13, (uint64_t)v11);
    double v25 = sub_141160();
    os_log_type_t v26 = sub_141480();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_1F11C(&qword_17D480, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
      uint64_t v28 = sub_141980();
      uint64_t v73 = sub_58C0(v28, v29, &v74);
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364((uint64_t)v11);
      _os_log_impl(&dword_0, v25, v26, "validateCancellation: %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_30364((uint64_t)v11);
    }

    if (qword_17B340 != -1) {
      swift_once();
    }
    sub_1F11C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    if (v74 - 1 < 2)
    {
      uint64_t v30 = v72;
      sub_13EDC0();
      sub_30364((uint64_t)v13);
LABEL_14:
      uint64_t v31 = sub_13EDF0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    }
    sub_30364((uint64_t)v13);
    goto LABEL_16;
  }
  if (v22 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v22 != enum case for Parse.directInvocation(_:))
  {
    if (v22 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
      self;
      if (swift_dynamicCastObjCClass())
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_141170();
        sub_33D8(v34, (uint64_t)qword_17EB30);
        uint64_t v35 = sub_141160();
        os_log_type_t v36 = sub_141480();
        if (!os_log_type_enabled(v35, v36)) {
          goto LABEL_40;
        }
        int v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v37 = 0;
        char v38 = "validateCancellation: Received UserDialogAct - UserRejected";
LABEL_39:
        _os_log_impl(&dword_0, v35, v36, v38, v37, 2u);
        swift_slowDealloc();
LABEL_40:

        uint64_t v30 = v72;
        sub_13EDC0();
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
      self;
      if (swift_dynamicCastObjCClass())
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v54 = sub_141170();
        sub_33D8(v54, (uint64_t)qword_17EB30);
        uint64_t v35 = sub_141160();
        os_log_type_t v36 = sub_141480();
        if (!os_log_type_enabled(v35, v36)) {
          goto LABEL_40;
        }
        int v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v37 = 0;
        char v38 = "validateCancellation: Received UserDialogAct - UserCancelled";
        goto LABEL_39;
      }
      swift_unknownObjectRelease();
LABEL_16:
      uint64_t v33 = sub_13EDF0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v72, 1, 1, v33);
    }
    if (v22 == enum case for Parse.uso(_:))
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v17, v68);
      sub_13F400();
      uint64_t v39 = sub_13F450();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v6, v65);
      uint64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        os_log_type_t v71 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
        unint64_t v41 = v39 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
        uint64_t v42 = *(void *)(v63 + 72);
        uint64_t v64 = v39;
        uint64_t v65 = v42;
        char v43 = (void (**)(char *, uint64_t))(v63 + 8);
        swift_bridgeObjectRetain();
        unint64_t v44 = v41;
        uint64_t v45 = v40;
        uint64_t v46 = v69;
        uint64_t v47 = v70;
        while (1)
        {
          v71(v46, v44, v47);
          char v48 = sub_13F4A0();
          uint64_t v49 = *v43;
          (*v43)(v46, v47);
          if (v48) {
            break;
          }
          v44 += v65;
          if (!--v45)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            unint64_t v50 = v62;
            uint64_t v51 = v70;
            while (1)
            {
              v71(v50, v41, v51);
              char v52 = sub_13F4B0();
              v49(v50, v51);
              if (v52) {
                break;
              }
              v41 += v65;
              if (!--v40)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_42;
              }
            }
            swift_bridgeObjectRelease_n();
            if (qword_17B270 != -1) {
              swift_once();
            }
            uint64_t v60 = sub_141170();
            sub_33D8(v60, (uint64_t)qword_17EB30);
            uint64_t v56 = sub_141160();
            os_log_type_t v57 = sub_141480();
            if (os_log_type_enabled(v56, v57))
            {
              uint64_t v58 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v58 = 0;
              uint64_t v59 = "validateCancellation: USO parse userDialogActs contains hasCancelled; returning .cancel()";
              goto LABEL_52;
            }
            goto LABEL_53;
          }
        }
        swift_bridgeObjectRelease_n();
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v55 = sub_141170();
        sub_33D8(v55, (uint64_t)qword_17EB30);
        uint64_t v56 = sub_141160();
        os_log_type_t v57 = sub_141480();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v58 = 0;
          uint64_t v59 = "validateCancellation: USO parse userDialogActs contains hasRejected; returning .cancel()";
LABEL_52:
          _os_log_impl(&dword_0, v56, v57, v59, v58, 2u);
          swift_slowDealloc();
        }
LABEL_53:

        uint64_t v30 = v72;
        sub_13EDC0();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
LABEL_42:
      (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
      goto LABEL_16;
    }
  }
  uint64_t v53 = sub_13EDF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v72, 1, 1, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

BOOL sub_E024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v105 = a2;
  uint64_t v106 = a1;
  uint64_t v3 = sub_13F460();
  uint64_t v95 = *(void *)(v3 - 8);
  uint64_t v96 = v3;
  __chkstk_darwin(v3);
  uint64_t v94 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_13F410();
  uint64_t v98 = *(void *)(v5 - 8);
  uint64_t v99 = v5;
  __chkstk_darwin(v5);
  uint64_t v97 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_140900();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_140920();
  uint64_t v100 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_13F3C0();
  uint64_t v102 = *(void *)(v11 - 8);
  uint64_t v103 = v11;
  __chkstk_darwin(v11);
  id v101 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_13F3E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_140280();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v106, v16);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v24 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
LABEL_5:
    double v25 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v25(v23, v19, v20);
    v25(v15, v23, v20);
    uint64_t v26 = v105;
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_1F11C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v27 = (char)v108;
    sub_30364((uint64_t)v15);
    char v28 = byte_144AB0[v27];
    goto LABEL_8;
  }
  if (v24 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v24 != enum case for Parse.directInvocation(_:))
  {
    if (v24 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      swift_getObjectType();
      if (!SIRINLUUserDialogAct.firstUsoTask.getter())
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v71 = sub_141170();
        sub_33D8(v71, (uint64_t)qword_17EB30);
        uint64_t v72 = sub_141160();
        os_log_type_t v73 = sub_141480();
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v74 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v74 = 0;
          _os_log_impl(&dword_0, v72, v73, "No USO task found on input. Deferring to later checks for parse validity.", v74, 2u);
          swift_slowDealloc();
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        return 1;
      }
      char v28 = sub_5BFC();
      if (sub_642C(v28) == 1886352499 && v49 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = v105;
        goto LABEL_55;
      }
      char v75 = sub_141AA0();
      swift_bridgeObjectRelease();
      uint64_t v26 = v105;
      if (v75)
      {
LABEL_55:
        char v76 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v76 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_84:
      swift_release();
      goto LABEL_8;
    }
    if (v24 != enum case for Parse.uso(_:))
    {
      if (v24 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v67 = sub_141170();
        sub_33D8(v67, (uint64_t)qword_17EB30);
        uint64_t v68 = sub_141160();
        os_log_type_t v69 = sub_141480();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v70 = 0;
          _os_log_impl(&dword_0, v68, v69, "Empty parse found while testing valid input. Disallowing empty input.", v70, 2u);
          swift_slowDealloc();
        }

        return 0;
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v77 = sub_141170();
        sub_33D8(v77, (uint64_t)qword_17EB30);
        uint64_t v78 = sub_141160();
        os_log_type_t v79 = sub_141470();
        if (os_log_type_enabled(v78, v79))
        {
          uint64_t v80 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v80 = 0;
          _os_log_impl(&dword_0, v78, v79, "Unknown parse type found while testing input validity. Disallowing unknown input.", v80, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        return 0;
      }
    }
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    char v52 = v97;
    uint64_t v51 = v98;
    uint64_t v53 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v19, v99);
    uint64_t v54 = v94;
    sub_13F400();
    uint64_t v55 = sub_F040();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v54, v96);
    if (!v55)
    {
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v81 = sub_141170();
      sub_33D8(v81, (uint64_t)qword_17EB30);
      uint64_t v82 = sub_141160();
      os_log_type_t v83 = sub_141480();
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v84 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v84 = 0;
        _os_log_impl(&dword_0, v82, v83, "No USO task found on input. Deferring to later checks for parse validity.", v84, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      return 1;
    }
    char v28 = sub_5BFC();
    if (sub_642C(v28) == 1886352499 && v56 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = v105;
    }
    else
    {
      char v85 = sub_141AA0();
      swift_bridgeObjectRelease();
      uint64_t v26 = v105;
      if ((v85 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
        goto LABEL_84;
      }
    }
    char v86 = sub_68C8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    if ((v86 & 1) == 0) {
      goto LABEL_8;
    }
    return 1;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
  uint64_t v39 = v102;
  uint64_t v40 = v101;
  uint64_t v41 = v103;
  (*(void (**)(void))(v102 + 32))();
  uint64_t v42 = sub_13F3A0();
  uint64_t v44 = v43;
  uint64_t v45 = v100;
  (*(void (**)(char *, void, uint64_t))(v100 + 104))(v10, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v8);
  uint64_t v46 = sub_140910();
  uint64_t v48 = v47;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
  if (v42 == v46 && v44 == v48)
  {
    swift_bridgeObjectRelease_n();
    char v28 = 10;
    uint64_t v26 = v105;
LABEL_27:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
LABEL_8:
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_141170();
    sub_33D8(v29, (uint64_t)qword_17EB30);
    uint64_t v30 = sub_141160();
    os_log_type_t v31 = sub_141480();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      *(void *)&long long v108 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v107 = v26;
      swift_getMetatypeMetadata();
      uint64_t v33 = sub_141260();
      uint64_t v107 = sub_58C0(v33, v34, (uint64_t *)&v108);
      sub_1415C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      LOBYTE(v107) = v28;
      uint64_t v35 = sub_141260();
      uint64_t v107 = sub_58C0(v35, v36, (uint64_t *)&v108);
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v30, v31, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    BOOL result = 1;
    switch(v28)
    {
      case 1:
      case 3:
      case 4:
      case 9:
        uint64_t v38 = sub_140CA0();
        goto LABEL_38;
      case 2:
        goto LABEL_36;
      case 5:
        uint64_t v38 = sub_140C10();
        goto LABEL_38;
      case 7:
      case 17:
      case 18:
        uint64_t v38 = sub_140C40();
        goto LABEL_38;
      case 8:
        uint64_t v38 = sub_140D00();
        goto LABEL_38;
      case 10:
        if (sub_140D80() == v26) {
          return 1;
        }
LABEL_36:
        uint64_t v38 = sub_140CD0();
        goto LABEL_38;
      case 12:
        uint64_t v38 = sub_140BC0();
        goto LABEL_38;
      case 13:
      case 14:
        return result;
      default:
        uint64_t v38 = sub_140D40();
LABEL_38:
        BOOL result = v38 == v26;
        break;
    }
    return result;
  }
  char v50 = sub_141AA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v105;
  if (v50)
  {
    char v28 = 10;
    goto LABEL_27;
  }
  uint64_t v57 = sub_13F3B0();
  if (v57)
  {
    uint64_t v58 = v57;
    uint64_t v59 = v92;
    uint64_t v60 = v91;
    uint64_t v61 = v93;
    (*(void (**)(char *, void, uint64_t))(v92 + 104))(v91, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v93);
    uint64_t v62 = sub_1408F0();
    uint64_t v64 = v63;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    if (*(void *)(v58 + 16) && (unint64_t v65 = sub_16F44(v62, v64), (v66 & 1) != 0))
    {
      sub_5B50(*(void *)(v58 + 56) + 32 * v65, (uint64_t)&v108);
    }
    else
    {
      long long v108 = 0u;
      long long v109 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v109 + 1))
    {
      if (swift_dynamicCast())
      {
        char v28 = sub_CC640();
        if (v28 != 19) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      sub_904C((uint64_t)&v108, &qword_17B9B0);
    }
  }
  if (qword_17B270 != -1) {
    swift_once();
  }
  uint64_t v87 = sub_141170();
  sub_33D8(v87, (uint64_t)qword_17EB30);
  uint64_t v88 = sub_141160();
  os_log_type_t v89 = sub_141480();
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v90 = 0;
    _os_log_impl(&dword_0, v88, v89, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v90, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  return 0;
}

uint64_t sub_F040()
{
  uint64_t v0 = sub_13F540();
  uint64_t v48 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_13F500();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17D450);
  __chkstk_darwin(v7 - 8);
  uint64_t v47 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_13F430();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)&v40 - v13;
  uint64_t v14 = sub_13F450();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v41 = v2;
    uint64_t v42 = v0;
    uint64_t v43 = v10;
    uint64_t v44 = v9;
    uint64_t v40 = v4;
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v16 = v4 + 16;
    uint64_t v17 = v18;
    unint64_t v19 = v14 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v20 = *(void *)(v16 + 56);
    while (1)
    {
      v17(v6, v19, v3);
      if (sub_13F470()) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v16 - 8))(v6, v3);
      v19 += v20;
      if (!--v15)
      {
        uint64_t v21 = 1;
        uint64_t v22 = v43;
        uint64_t v23 = v44;
        uint64_t v2 = v41;
        uint64_t v0 = v42;
        uint64_t v25 = (uint64_t)v47;
        uint64_t v24 = v48;
        uint64_t v4 = v40;
        goto LABEL_8;
      }
    }
    uint64_t v4 = v40;
    uint64_t v25 = (uint64_t)v47;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v47, v6, v3);
    uint64_t v21 = 0;
    uint64_t v22 = v43;
    uint64_t v23 = v44;
    uint64_t v2 = v41;
    uint64_t v0 = v42;
    uint64_t v24 = v48;
  }
  else
  {
    uint64_t v21 = 1;
    uint64_t v23 = v9;
    uint64_t v22 = v10;
    uint64_t v25 = (uint64_t)v47;
    uint64_t v24 = v48;
  }
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v25, v21, 1, v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v25, 1, v3) != 1)
  {
    sub_13F4C0();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v25, v3);
    uint64_t v26 = v45;
    sub_13F510();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v2, v0);
    uint64_t v27 = v46;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v46, v26, v23);
    sub_13F5C0();
    unint64_t v34 = sub_13F900();
    unint64_t v35 = v34;
    if (v34 >> 62)
    {
      if (sub_1417D0()) {
        goto LABEL_20;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_20:
      if ((v35 & 0xC000000000000001) != 0)
      {
        uint64_t v32 = sub_1416A0();
        goto LABEL_23;
      }
      if (*(void *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFFF8)))
      {
        uint64_t v32 = *(void *)(v35 + 32);
        swift_retain();
LABEL_23:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v23);
        swift_release();
        return v32;
      }
      __break(1u);
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    if (qword_17B180 == -1)
    {
LABEL_26:
      uint64_t v36 = sub_141170();
      sub_33D8(v36, (uint64_t)qword_17CBA0);
      int v37 = sub_141160();
      os_log_type_t v38 = sub_141470();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl(&dword_0, v37, v38, "USO tasks graph has no tasks. Returning nil intent.", v39, 2u);
        swift_slowDealloc();
      }

      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v23);
      return 0;
    }
LABEL_31:
    swift_once();
    goto LABEL_26;
  }
  sub_904C(v25, &qword_17D450);
  if (qword_17B180 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_141170();
  sub_33D8(v28, (uint64_t)qword_17CBA0);
  uint64_t v29 = sub_141160();
  os_log_type_t v30 = sub_141470();
  if (os_log_type_enabled(v29, v30))
  {
    os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v31 = 0;
    _os_log_impl(&dword_0, v29, v30, "Failed to parse userParse. Returning nil intent.", v31, 2u);
    swift_slowDealloc();
  }

  return 0;
}

unsigned char *initializeBufferWithCopyOfBuffer for TimerSelectorModel.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *BOOL result = *a2;
  return result;
}

uint64_t sub_F690(unsigned __int8 *a1)
{
  return *a1;
}

id sub_F698(uint64_t a1, uint64_t a2)
{
  uint64_t v368 = a1;
  uint64_t v347 = sub_140900();
  uint64_t v352 = *(void *)(v347 - 8);
  uint64_t v3 = __chkstk_darwin(v347);
  v321 = (char *)&v319 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  v322 = (char *)&v319 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  v329 = (char *)&v319 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v323 = (char *)&v319 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v330 = (char *)&v319 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v326 = (char *)&v319 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v324 = (char *)&v319 - v16;
  __chkstk_darwin(v15);
  v344 = (char *)&v319 - v17;
  uint64_t v354 = sub_140920();
  uint64_t v360 = *(void *)(v354 - 8);
  uint64_t v18 = __chkstk_darwin(v354);
  v333 = (char *)&v319 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  v334 = (char *)&v319 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v342 = (char *)&v319 - v23;
  __chkstk_darwin(v22);
  v349 = (char *)&v319 - v24;
  uint64_t v355 = sub_13F3C0();
  uint64_t v25 = *(void *)(v355 - 8);
  uint64_t v26 = __chkstk_darwin(v355);
  v327 = (char *)&v319 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  os_log_type_t v30 = (char *)&v319 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  v343 = (char *)&v319 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v325 = (char *)&v319 - v34;
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v319 - v35;
  uint64_t v336 = sub_13F460();
  uint64_t v335 = *(void *)(v336 - 8);
  __chkstk_darwin(v336);
  v338 = (char *)&v319 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v341 = sub_13F410();
  uint64_t v340 = *(void *)(v341 - 8);
  __chkstk_darwin(v341);
  v339 = (char *)&v319 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_140980();
  uint64_t v367 = *(void *)(v39 - 8);
  uint64_t v40 = __chkstk_darwin(v39);
  v328 = (char *)&v319 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  v348 = (char *)&v319 - v43;
  __chkstk_darwin(v42);
  v357 = (char *)&v319 - v44;
  uint64_t v361 = type metadata accessor for TimerNLv3Intent();
  uint64_t v45 = __chkstk_darwin(v361);
  v359 = (char *)&v319 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v364 = (char *)&v319 - v47;
  uint64_t v48 = sub_140280();
  uint64_t v365 = *(void *)(v48 - 8);
  uint64_t v366 = v48;
  uint64_t v49 = __chkstk_darwin(v48);
  v358 = (char *)&v319 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v363 = (char *)&v319 - v51;
  v371 = (void *)sub_13F3E0();
  uint64_t v369 = *(v371 - 1);
  uint64_t v52 = __chkstk_darwin(v371);
  v331 = (char *)&v319 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v52);
  v337 = (char *)&v319 - v55;
  __chkstk_darwin(v54);
  v370 = (uint64_t *)((char *)&v319 - v56);
  uint64_t v57 = sub_5830(&qword_17CD30);
  uint64_t v58 = __chkstk_darwin(v57);
  uint64_t v332 = (uint64_t)&v319 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v356 = (uint64_t)&v319 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v362 = (uint64_t)&v319 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  char v66 = (char *)&v319 - v65;
  __chkstk_darwin(v64);
  uint64_t v68 = (char *)&v319 - v67;
  if (qword_17B270 != -1) {
    swift_once();
  }
  uint64_t v69 = sub_141170();
  uint64_t v70 = sub_33D8(v69, (uint64_t)qword_17EB30);
  sub_8FE8(a2, (uint64_t)v68, &qword_17CD30);
  uint64_t v353 = v70;
  uint64_t v71 = sub_141160();
  os_log_type_t v72 = sub_141480();
  BOOL v73 = os_log_type_enabled(v71, v72);
  v346 = v30;
  if (v73)
  {
    uint64_t v351 = v39;
    uint64_t v74 = swift_slowAlloc();
    uint64_t v350 = a2;
    char v75 = (uint8_t *)v74;
    uint64_t v76 = swift_slowAlloc();
    uint64_t v345 = v25;
    *(void *)&long long v374 = v76;
    *(_DWORD *)char v75 = 136315138;
    sub_8FE8((uint64_t)v68, (uint64_t)v66, &qword_17CD30);
    uint64_t v77 = sub_141260();
    uint64_t v372 = sub_58C0(v77, v78, (uint64_t *)&v374);
    uint64_t v39 = v351;
    sub_1415C0();
    swift_bridgeObjectRelease();
    sub_904C((uint64_t)v68, &qword_17CD30);
    _os_log_impl(&dword_0, v71, v72, "TimerFlowUtils makeIntentFromParse() called with halInfo: %s", v75, 0xCu);
    swift_arrayDestroy();
    uint64_t v25 = v345;
    swift_slowDealloc();
    a2 = v350;
    swift_slowDealloc();
  }
  else
  {
    sub_904C((uint64_t)v68, &qword_17CD30);
  }

  uint64_t v80 = v369;
  os_log_type_t v79 = v370;
  uint64_t v81 = *(void (**)(uint64_t *, uint64_t, void *))(v369 + 16);
  uint64_t v82 = v368;
  os_log_type_t v83 = v371;
  v81(v370, v368, v371);
  int v84 = (*(uint64_t (**)(uint64_t *, void *))(v80 + 88))(v79, v83);
  if (v84 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t *, void *))(v80 + 96))(v79, v83);
    uint64_t v86 = v365;
    uint64_t v85 = v366;
    uint64_t v87 = v363;
    (*(void (**)(char *, uint64_t *, uint64_t))(v365 + 32))(v363, v79, v366);
    uint64_t v88 = (uint64_t)v364;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v364, v87, v85);
    uint64_t v89 = v362;
    sub_8FE8(a2, v362, &qword_17CD30);
    uint64_t v90 = v367;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48))(v89, 1, v39) == 1)
    {
      sub_904C(v89, &qword_17CD30);
      id v91 = sub_FA0F8();
LABEL_38:
      sub_30364(v88);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v85);
      return v91;
    }
    uint64_t v93 = v357;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v357, v89, v39);
    id v91 = (id)sub_140930();
    if (qword_17B340 != -1) {
      swift_once();
    }
    sub_1F11C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    if (!(_BYTE)v374)
    {
      sub_5595C(0, &qword_17D4F0);
      Class isa = sub_141580(1).super.super.isa;
      [v91 setSkipConfirmation:isa];
    }
    goto LABEL_37;
  }
  if (v84 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(uint64_t *, void *))(v80 + 96))(v79, v83);
    sub_5830((uint64_t *)&unk_17CD00);
    uint64_t v86 = v365;
    uint64_t v85 = v366;
    uint64_t v87 = v358;
    (*(void (**)(char *, uint64_t *, uint64_t))(v365 + 32))(v358, v79, v366);
    uint64_t v88 = (uint64_t)v359;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v359, v87, v85);
    uint64_t v92 = v356;
    sub_8FE8(a2, v356, &qword_17CD30);
    uint64_t v90 = v367;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48))(v92, 1, v39) == 1)
    {
      sub_904C(v92, &qword_17CD30);
      id v91 = (id)sub_13F3D0();
      swift_release();
      goto LABEL_38;
    }
    uint64_t v93 = v348;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v348, v92, v39);
    id v91 = (id)sub_140930();
    if (qword_17B340 != -1) {
      swift_once();
    }
    sub_1F11C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    if ((_BYTE)v374)
    {
      swift_release();
    }
    else
    {
      sub_5595C(0, &qword_17D4F0);
      Class v126 = sub_141580(1).super.super.isa;
      [v91 setSkipConfirmation:v126];
      swift_release();
    }
LABEL_37:
    (*(void (**)(char *, uint64_t))(v90 + 8))(v93, v39);
    goto LABEL_38;
  }
  if (v84 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v350 = a2;
    uint64_t v351 = v39;
    (*(void (**)(uint64_t *, void *))(v80 + 96))(v79, v83);
    (*(void (**)(char *, uint64_t *, uint64_t))(v25 + 32))(v36, v79, v355);
    v320 = v36;
    uint64_t v95 = sub_13F3A0();
    uint64_t v97 = v96;
    uint64_t v98 = v360;
    uint64_t v99 = v349;
    uint64_t v100 = v354;
    v371 = *(void **)(v360 + 104);
    ((void (*)(char *, void, uint64_t))v371)(v349, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v354);
    uint64_t v101 = sub_140910();
    uint64_t v103 = v102;
    uint64_t v104 = *(void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v360 = v98 + 8;
    uint64_t v105 = v104;
    v104(v99, v100);
    if (v95 == v101 && v97 == v103)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_28;
    }
    char v107 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v107)
    {
LABEL_28:
      long long v108 = v320;
      uint64_t v109 = sub_13F3B0();
      if (!v109)
      {
LABEL_57:
        uint64_t v149 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
        uint64_t v150 = v346;
        uint64_t v151 = v355;
        v149(v346, v108, v355);
        uint64_t v152 = sub_141160();
        os_log_type_t v153 = sub_141470();
        if (os_log_type_enabled(v152, v153))
        {
          uint64_t v154 = (uint8_t *)swift_slowAlloc();
          v371 = (void *)swift_slowAlloc();
          *(void *)&long long v374 = v371;
          *(_DWORD *)uint64_t v154 = 136315138;
          v370 = (uint64_t *)(v154 + 4);
          v149(v343, v150, v151);
          uint64_t v155 = sub_141260();
          uint64_t v372 = sub_58C0(v155, v156, (uint64_t *)&v374);
          sub_1415C0();
          swift_bridgeObjectRelease();
          char v157 = *(void (**)(char *, uint64_t))(v25 + 8);
          v157(v150, v151);
          v158 = "Malformed userData for direct invocation: %s";
LABEL_59:
          _os_log_impl(&dword_0, v152, v153, v158, v154, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v157(v320, v151);
          return 0;
        }

        os_log_type_t v159 = *(void (**)(char *, uint64_t))(v25 + 8);
        v159(v150, v151);
        v160 = v108;
        goto LABEL_61;
      }
      uint64_t v110 = v109;
      uint64_t v111 = v352;
      uint64_t v112 = *(void (**)(char *, void, uint64_t))(v352 + 104);
      uint64_t v113 = v344;
      uint64_t v114 = v347;
      v112(v344, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v347);
      uint64_t v115 = sub_1408F0();
      uint64_t v117 = v116;
      uint64_t v118 = *(void (**)(char *, uint64_t))(v111 + 8);
      v118(v113, v114);
      if (*(void *)(v110 + 16) && (unint64_t v119 = sub_16F44(v115, v117), (v120 & 1) != 0))
      {
        sub_5B50(*(void *)(v110 + 56) + 32 * v119, (uint64_t)&v374);
      }
      else
      {
        long long v374 = 0u;
        long long v375 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v375 + 1))
      {
        swift_bridgeObjectRelease();
        sub_904C((uint64_t)&v374, &qword_17B9B0);
        goto LABEL_56;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_46:
        swift_bridgeObjectRelease();
LABEL_56:
        long long v108 = v320;
        goto LABEL_57;
      }
      int v128 = sub_CC640();
      if (v128 == 1)
      {
        v209 = v324;
        uint64_t v210 = v347;
        v112(v324, enum case for DirectInvocationUtils.Timer.UserInfoKey.usoEntity(_:), v347);
        uint64_t v211 = sub_1408F0();
        uint64_t v213 = v212;
        v118(v209, v210);
        if (*(void *)(v110 + 16))
        {
          unint64_t v214 = sub_16F44(v211, v213);
          os_log_type_t v215 = v320;
          uint64_t v216 = v355;
          if (v217)
          {
            sub_5B50(*(void *)(v110 + 56) + 32 * v214, (uint64_t)&v374);
          }
          else
          {
            long long v374 = 0u;
            long long v375 = 0u;
          }
        }
        else
        {
          long long v374 = 0u;
          long long v375 = 0u;
          os_log_type_t v215 = v320;
          uint64_t v216 = v355;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v375 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v240 = v372;
            unint64_t v239 = v373;
            sub_13E3D0();
            swift_allocObject();
            sub_13E3C0();
            sub_140290();
            sub_1F11C((unint64_t *)&unk_17EB50, (void (*)(uint64_t))&type metadata accessor for UsoEntity);
            sub_13E3B0();
            swift_release();
            sub_13FA00();
            swift_retain();
            sub_13FB40();
            swift_release();
            uint64_t v300 = v374;
            if ((void)v374)
            {
              sub_140CA0();
              id v91 = sub_10BDB0(v300, 1);
              sub_34B88(v240, v239);
              swift_release();
              (*(void (**)(char *, uint64_t))(v25 + 8))(v320, v216);
              return v91;
            }
            swift_release();
            sub_34B88(v240, v239);
            os_log_type_t v215 = v320;
          }
        }
        else
        {
          sub_904C((uint64_t)&v374, &qword_17B9B0);
        }
        uint64_t v241 = sub_141160();
        os_log_type_t v242 = sub_141470();
        if (os_log_type_enabled(v241, v242))
        {
          uint64_t v243 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v243 = 0;
          _os_log_impl(&dword_0, v241, v242, "The userData has a malformed or missing usoEntity to create.", v243, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v25 + 8))(v215, v216);
        return 0;
      }
      if (v128 != 2)
      {
        if (v128 != 19)
        {
          swift_bridgeObjectRelease();
          uint64_t v151 = v355;
          v225 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
          uint64_t v226 = v325;
          uint64_t v227 = v320;
          v225(v325, v320, v355);
          uint64_t v152 = sub_141160();
          os_log_type_t v153 = sub_141470();
          if (os_log_type_enabled(v152, v153))
          {
            uint64_t v154 = (uint8_t *)swift_slowAlloc();
            v371 = (void *)swift_slowAlloc();
            *(void *)&long long v374 = v371;
            *(_DWORD *)uint64_t v154 = 136315138;
            v370 = (uint64_t *)(v154 + 4);
            v225(v343, v226, v151);
            uint64_t v228 = sub_141260();
            uint64_t v372 = sub_58C0(v228, v229, (uint64_t *)&v374);
            sub_1415C0();
            swift_bridgeObjectRelease();
            char v157 = *(void (**)(char *, uint64_t))(v25 + 8);
            v157(v226, v151);
            v158 = "Unsupported verb or userData for undo direct invocation: %s";
            goto LABEL_59;
          }

          os_log_type_t v159 = *(void (**)(char *, uint64_t))(v25 + 8);
          v159(v226, v151);
          v160 = v227;
LABEL_61:
          v159(v160, v151);
          return 0;
        }
        goto LABEL_46;
      }
      os_log_type_t v218 = v326;
      uint64_t v219 = v347;
      v112(v326, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v347);
      uint64_t v220 = sub_1408F0();
      uint64_t v222 = v221;
      v118(v218, v219);
      if (*(void *)(v110 + 16) && (unint64_t v223 = sub_16F44(v220, v222), (v224 & 1) != 0))
      {
        sub_5B50(*(void *)(v110 + 56) + 32 * v223, (uint64_t)&v374);
      }
      else
      {
        long long v374 = 0u;
        long long v375 = 0u;
      }
      v230 = v320;
      uint64_t v231 = v355;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v375 + 1))
      {
        if (swift_dynamicCast())
        {
          id v91 = [objc_allocWithZone((Class)sub_140CD0()) init];
          sub_140EA0();
          id v232 = sub_12E4D4();
          [v91 setTargetTimer:v232];

          id v233 = [v91 targetTimer];
          if (v233)
          {
            v234 = v233;
            sub_5595C(0, &qword_17D4F0);
            Class v235 = sub_141570(0).super.super.isa;
            [v234 setShouldMatchAny:v235];
          }
          (*(void (**)(char *, uint64_t))(v25 + 8))(v230, v231);
          return v91;
        }
      }
      else
      {
        sub_904C((uint64_t)&v374, &qword_17B9B0);
      }
      v236 = sub_141160();
      os_log_type_t v237 = sub_141470();
      if (os_log_type_enabled(v236, v237))
      {
        uint64_t v238 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v238 = 0;
        _os_log_impl(&dword_0, v236, v237, "The userData has a malformed or missing timerId to delete.", v238, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v25 + 8))(v230, v231);
      return 0;
    }
    uint64_t v345 = v25;
    uint64_t v129 = sub_13F3A0();
    uint64_t v131 = v130;
    char v132 = v342;
    uint64_t v133 = v354;
    os_log_type_t v134 = (void (*)(char *, void, uint64_t))v371;
    ((void (*)(char *, void, uint64_t))v371)(v342, enum case for DirectInvocationUtils.Timer.URI.disambiguation(_:), v354);
    uint64_t v135 = sub_140910();
    uint64_t v137 = v136;
    v105(v132, v133);
    if (v129 == v135 && v131 == v137)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v138 = v352;
    }
    else
    {
      char v161 = sub_141AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v138 = v352;
      if ((v161 & 1) == 0) {
        goto LABEL_84;
      }
    }
    uint64_t v162 = sub_13F3B0();
    if (v162)
    {
      uint64_t v163 = v162;
      uint64_t v164 = *(uint64_t **)(v138 + 104);
      uint64_t v165 = v330;
      uint64_t v166 = v138;
      uint64_t v167 = v347;
      v370 = v164;
      ((void (*)(char *, void, uint64_t))v164)(v330, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v347);
      uint64_t v168 = sub_1408F0();
      uint64_t v170 = v169;
      uint64_t v369 = *(void *)(v166 + 8);
      ((void (*)(char *, uint64_t))v369)(v165, v167);
      if (*(void *)(v163 + 16) && (unint64_t v171 = sub_16F44(v168, v170), (v172 & 1) != 0))
      {
        sub_5B50(*(void *)(v163 + 56) + 32 * v171, (uint64_t)&v374);
      }
      else
      {
        long long v374 = 0u;
        long long v375 = 0u;
      }
      uint64_t v138 = v352;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((void *)&v375 + 1)) {
        goto LABEL_83;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_84;
      }
      char v176 = sub_CC640();
      if (v176 == 19) {
        goto LABEL_84;
      }
      char v177 = v176;
      uint64_t v178 = sub_13F3B0();
      if (v178)
      {
        uint64_t v179 = v178;
        v180 = v323;
        uint64_t v181 = v347;
        ((void (*)(char *, void, uint64_t))v370)(v323, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v347);
        uint64_t v182 = sub_1408F0();
        uint64_t v184 = v183;
        ((void (*)(char *, uint64_t))v369)(v180, v181);
        if (*(void *)(v179 + 16))
        {
          unint64_t v185 = sub_16F44(v182, v184);
          if (v186)
          {
            sub_5B50(*(void *)(v179 + 56) + 32 * v185, (uint64_t)&v374);
          }
          else
          {
            long long v374 = 0u;
            long long v375 = 0u;
          }
          uint64_t v138 = v352;
        }
        else
        {
          long long v374 = 0u;
          long long v375 = 0u;
          uint64_t v138 = v352;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v375 + 1))
        {
          if (swift_dynamicCast())
          {
            sub_140EA0();
            id v301 = sub_12E4D4();
            id v91 = sub_5E794(v301, v177);

            if (v91)
            {
              v302 = sub_141160();
              os_log_type_t v303 = sub_141450();
              if (os_log_type_enabled(v302, v303))
              {
                v304 = (uint8_t *)swift_slowAlloc();
                *(void *)&long long v374 = swift_slowAlloc();
                *(_DWORD *)v304 = 136315138;
                LOBYTE(v372) = v177;
                uint64_t v305 = sub_141260();
                uint64_t v372 = sub_58C0(v305, v306, (uint64_t *)&v374);
                sub_1415C0();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v302, v303, "Making intent for verb: \"%s\"", v304, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }

              id v307 = v91;
              v308 = sub_141160();
              os_log_type_t v309 = sub_141450();
              if (os_log_type_enabled(v308, v309))
              {
                v310 = (uint8_t *)swift_slowAlloc();
                *(void *)&long long v374 = swift_slowAlloc();
                *(_DWORD *)v310 = 136315138;
                v371 = v310 + 4;
                id v311 = v307;
                id v312 = [v311 description];
                uint64_t v313 = sub_141250();
                unint64_t v315 = v314;

                uint64_t v372 = sub_58C0(v313, v315, (uint64_t *)&v374);
                sub_1415C0();

                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v308, v309, "Intent: %s", v310, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
              }
              (*(void (**)(char *, uint64_t))(v345 + 8))(v320, v355);
              return v91;
            }
            goto LABEL_134;
          }
          goto LABEL_84;
        }
        goto LABEL_83;
      }
    }
    long long v374 = 0u;
    long long v375 = 0u;
LABEL_83:
    sub_904C((uint64_t)&v374, &qword_17B9B0);
LABEL_84:
    uint64_t v187 = sub_13F3A0();
    uint64_t v189 = v188;
    uint64_t v190 = v334;
    uint64_t v191 = v354;
    v134(v334, enum case for DirectInvocationUtils.Timer.URI.handleVerbAction(_:), v354);
    uint64_t v192 = sub_140910();
    uint64_t v194 = v193;
    v105(v190, v191);
    if (v187 == v192 && v189 == v194)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v195 = sub_141AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v195 & 1) == 0) {
        goto LABEL_134;
      }
    }
    uint64_t v196 = sub_13F3B0();
    if (!v196) {
      goto LABEL_132;
    }
    uint64_t v197 = v196;
    uint64_t v198 = *(uint64_t **)(v138 + 104);
    v199 = v329;
    uint64_t v200 = v347;
    v370 = v198;
    ((void (*)(char *, void, uint64_t))v198)(v329, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v347);
    uint64_t v201 = sub_1408F0();
    uint64_t v203 = v202;
    char v204 = *(void (**)(char *, uint64_t))(v352 + 8);
    v352 += 8;
    v204(v199, v200);
    if (*(void *)(v197 + 16) && (unint64_t v205 = sub_16F44(v201, v203), (v206 & 1) != 0))
    {
      sub_5B50(*(void *)(v197 + 56) + 32 * v205, (uint64_t)&v374);
    }
    else
    {
      long long v374 = 0u;
      long long v375 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*((void *)&v375 + 1)) {
      goto LABEL_133;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_134;
    }
    char v207 = sub_CC640();
    if (v207 == 19) {
      goto LABEL_134;
    }
    if (sub_642C(v207) == 0x657461657263 && v208 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v244 = sub_141AA0();
      swift_bridgeObjectRelease();
      if ((v244 & 1) == 0) {
        goto LABEL_134;
      }
    }
    uint64_t v245 = sub_13F3B0();
    if (v245)
    {
      uint64_t v246 = v245;
      uint64_t v247 = v322;
      uint64_t v248 = v347;
      ((void (*)(char *, void, uint64_t))v370)(v322, enum case for DirectInvocationUtils.Timer.UserInfoKey.duration(_:), v347);
      uint64_t v249 = sub_1408F0();
      uint64_t v251 = v250;
      v204(v247, v248);
      if (*(void *)(v246 + 16) && (unint64_t v252 = sub_16F44(v249, v251), (v253 & 1) != 0))
      {
        sub_5B50(*(void *)(v246 + 56) + 32 * v252, (uint64_t)&v374);
      }
      else
      {
        long long v374 = 0u;
        long long v375 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v375 + 1))
      {
        sub_5595C(0, &qword_17D4F0);
        if (swift_dynamicCast())
        {
          v284 = (void *)v372;
          v285 = sub_141160();
          os_log_type_t v286 = sub_141480();
          if (os_log_type_enabled(v285, v286))
          {
            v287 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v287 = 0;
            _os_log_impl(&dword_0, v285, v286, "Timer domain handling create timer action valid duration", v287, 2u);
            swift_slowDealloc();
          }

          v288 = v320;
          uint64_t v289 = sub_13F3B0();
          if (v289)
          {
            uint64_t v290 = v289;
            v291 = v321;
            uint64_t v292 = v347;
            ((void (*)(char *, void, uint64_t))v370)(v321, enum case for DirectInvocationUtils.Timer.UserInfoKey.label(_:), v347);
            uint64_t v293 = sub_1408F0();
            uint64_t v295 = v294;
            v204(v291, v292);
            if (*(void *)(v290 + 16))
            {
              unint64_t v296 = sub_16F44(v293, v295);
              uint64_t v297 = v345;
              uint64_t v298 = v355;
              if (v299)
              {
                sub_5B50(*(void *)(v290 + 56) + 32 * v296, (uint64_t)&v374);
              }
              else
              {
                long long v374 = 0u;
                long long v375 = 0u;
              }
            }
            else
            {
              long long v374 = 0u;
              long long v375 = 0u;
              uint64_t v297 = v345;
              uint64_t v298 = v355;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v288 = v320;
            if (*((void *)&v375 + 1))
            {
              int v316 = swift_dynamicCast();
              if (v316) {
                uint64_t v317 = v372;
              }
              else {
                uint64_t v317 = 0;
              }
              if (v316) {
                uint64_t v318 = v373;
              }
              else {
                uint64_t v318 = 0;
              }
              goto LABEL_182;
            }
          }
          else
          {
            long long v374 = 0u;
            long long v375 = 0u;
            uint64_t v297 = v345;
            uint64_t v298 = v355;
          }
          sub_904C((uint64_t)&v374, &qword_17B9B0);
          uint64_t v317 = 0;
          uint64_t v318 = 0;
LABEL_182:
          sub_140CA0();
          [v284 doubleValue];
          id v91 = sub_10BF24(v317, v318);

          (*(void (**)(char *, uint64_t))(v297 + 8))(v288, v298);
          return v91;
        }
LABEL_134:
        uint64_t v254 = sub_13F3A0();
        uint64_t v256 = v255;
        v257 = v333;
        uint64_t v258 = v354;
        v134(v333, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v354);
        uint64_t v259 = sub_140910();
        uint64_t v261 = v260;
        v105(v257, v258);
        if (v254 == v259 && v256 == v261)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v262 = v345;
          uint64_t v263 = v367;
        }
        else
        {
          char v264 = sub_141AA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v262 = v345;
          uint64_t v263 = v367;
          if ((v264 & 1) == 0)
          {
            uint64_t v273 = *(void (**)(char *, char *, uint64_t))(v345 + 16);
            uint64_t v274 = v327;
            unint64_t v275 = v320;
            uint64_t v276 = v355;
            v273(v327, v320, v355);
            unint64_t v277 = sub_141160();
            os_log_type_t v278 = sub_141470();
            if (os_log_type_enabled(v277, v278))
            {
              long long v279 = (uint8_t *)swift_slowAlloc();
              v371 = (void *)swift_slowAlloc();
              *(void *)&long long v374 = v371;
              *(_DWORD *)long long v279 = 136315138;
              v370 = (uint64_t *)(v279 + 4);
              v273(v343, v274, v276);
              uint64_t v280 = sub_141260();
              uint64_t v372 = sub_58C0(v280, v281, (uint64_t *)&v374);
              sub_1415C0();
              swift_bridgeObjectRelease();
              v282 = *(void (**)(char *, uint64_t))(v262 + 8);
              v282(v274, v276);
              _os_log_impl(&dword_0, v277, v278, "Timer received an unsupported direct invocation: %s", v279, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              v282(v320, v276);
            }
            else
            {

              v283 = *(void (**)(char *, uint64_t))(v262 + 8);
              v283(v274, v276);
              v283(v275, v276);
            }
            return 0;
          }
        }
        uint64_t v265 = v332;
        sub_8FE8(v350, v332, &qword_17CD30);
        uint64_t v266 = v351;
        int v267 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v263 + 48))(v265, 1, v351);
        v268 = v320;
        if (v267 == 1)
        {
          sub_904C(v265, &qword_17CD30);
          uint64_t v269 = sub_141160();
          os_log_type_t v270 = sub_141470();
          if (os_log_type_enabled(v269, v270))
          {
            v271 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v271 = 0;
            _os_log_impl(&dword_0, v269, v270, "TimerToDismiss is empty or remoteDevice is nil, falling back to cancel timer.", v271, 2u);
            swift_slowDealloc();
          }

          id v91 = [objc_allocWithZone((Class)sub_140CD0()) init];
        }
        else
        {
          v272 = v328;
          (*(void (**)(char *, uint64_t, uint64_t))(v263 + 32))(v328, v265, v266);
          id v91 = (id)sub_140930();
          (*(void (**)(char *, uint64_t))(v263 + 8))(v272, v266);
        }
        (*(void (**)(char *, uint64_t))(v262 + 8))(v268, v355);
        return v91;
      }
    }
    else
    {
LABEL_132:
      long long v374 = 0u;
      long long v375 = 0u;
    }
LABEL_133:
    sub_904C((uint64_t)&v374, &qword_17B9B0);
    goto LABEL_134;
  }
  if (v84 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v84 != enum case for Parse.uso(_:))
    {
      v139 = v337;
      v81((uint64_t *)v337, v82, v83);
      os_log_type_t v140 = sub_141160();
      os_log_type_t v141 = sub_141470();
      if (os_log_type_enabled(v140, v141))
      {
        v142 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v374 = swift_slowAlloc();
        *(_DWORD *)v142 = 136315138;
        v81((uint64_t *)v331, (uint64_t)v139, v371);
        uint64_t v143 = sub_141260();
        uint64_t v372 = sub_58C0(v143, v144, (uint64_t *)&v374);
        sub_1415C0();
        swift_bridgeObjectRelease();
        v145 = *(void (**)(char *, void *))(v369 + 8);
        v145(v139, v371);
        _os_log_impl(&dword_0, v140, v141, "Received an unsupported parse: %s", v142, 0xCu);
        swift_arrayDestroy();
        os_log_type_t v83 = v371;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v145 = *(void (**)(char *, void *))(v369 + 8);
        v145(v139, v83);
      }

      v145((char *)v370, v83);
      return 0;
    }
    (*(void (**)(uint64_t *, void *))(v80 + 96))(v79, v83);
    uint64_t v121 = v340;
    uint64_t v122 = v339;
    uint64_t v123 = v341;
    (*(void (**)(char *, uint64_t *, uint64_t))(v340 + 32))(v339, v79, v341);
    uint64_t v124 = v338;
    sub_13F400();
    uint64_t v125 = sub_F040();
    if (v125)
    {
      id v91 = sub_1239C(v125, a2);
      swift_release();
      (*(void (**)(char *, uint64_t))(v335 + 8))(v124, v336);
      if (v91)
      {
        (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v123);
        return v91;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v335 + 8))(v124, v336);
    }
    v173 = sub_141160();
    os_log_type_t v174 = sub_141470();
    if (os_log_type_enabled(v173, v174))
    {
      v175 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v175 = 0;
      _os_log_impl(&dword_0, v173, v174, "Failed to parse timer intent from USO parse", v175, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v123);
    return 0;
  }
  (*(void (**)(uint64_t *, void *))(v80 + 96))(v79, v83);
  id v106 = sub_5E684(*v79, a2);
  if (!v106)
  {
    unint64_t v146 = sub_141160();
    os_log_type_t v147 = sub_141470();
    if (os_log_type_enabled(v146, v147))
    {
      v148 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v148 = 0;
      _os_log_impl(&dword_0, v146, v147, "Failed to parse timer NLv4Intent from userDialogAct", v148, 2u);
      swift_slowDealloc();
    }

    swift_unknownObjectRelease();
    return 0;
  }
  id v91 = v106;
  swift_unknownObjectRelease();
  return v91;
}

id sub_1239C(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a1;
  uint64_t v3 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_140980();
  uint64_t v6 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B180 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_141170();
  uint64_t v10 = sub_33D8(v9, (uint64_t)qword_17CBA0);
  swift_retain_n();
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v44 = v5;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v43 = a2;
    uint64_t v14 = (uint8_t *)v13;
    v49[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    v47[0] = v46;
    sub_140260();
    uint64_t v42 = v10;
    swift_retain();
    uint64_t v15 = sub_141260();
    v47[0] = sub_58C0(v15, v16, v49);
    uint64_t v5 = v44;
    sub_1415C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, v12, "Building SK intent from task: %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v43;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (sub_6660())
  {
    id v17 = sub_5E3D8();
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = sub_141160();
      os_log_type_t v20 = sub_141480();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_0, v19, v20, "TimerFlowDelegatePlugin found trigger in stop task, attempting sleep timer intent creation", v21, 2u);
        swift_slowDealloc();
      }

      swift_release();
      return v18;
    }
    swift_release();
  }
  switch(sub_5BFC())
  {
    case 1u:
    case 9u:
      goto LABEL_19;
    case 2u:
      goto LABEL_24;
    case 3u:
    case 4u:
      uint64_t v22 = sub_140E0();
      if (v22) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = (char *)&_swiftEmptyArrayStorage;
      }
      char v24 = sub_5E310(22100, 0xE200000000000000, v23);
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        return 0;
      }
LABEL_19:
      sub_140CA0();
      swift_retain();
      return sub_12C64();
    case 5u:
      sub_140C10();
      uint64_t v25 = swift_retain();
      return (id)sub_10B5F0(v25);
    case 7u:
    case 0x11u:
    case 0x12u:
      sub_140C40();
      swift_retain();
      return sub_10BBB8();
    case 8u:
      sub_140D00();
      uint64_t v26 = swift_retain();
      return (id)sub_10B5F0(v26);
    case 0xAu:
      sub_8FE8(a2, (uint64_t)v5, &qword_17CD30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v45) == 1)
      {
        sub_904C((uint64_t)v5, &qword_17CD30);
LABEL_24:
        swift_retain();
        id v27 = sub_130874();
        id v18 = [objc_allocWithZone((Class)sub_140CD0()) init];
        [v18 setTargetTimer:v27];
        sub_140E30();
        sub_132AC();
        sub_140E0();
        uint64_t v28 = (void *)sub_140E20();
        [v18 setTargetingInfo:v28];

        swift_release();
      }
      else
      {
        uint64_t v38 = v45;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v5, v45);
        id v18 = (id)sub_140930();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v38);
      }
      return v18;
    case 0xCu:
      sub_140BC0();
      uint64_t v29 = swift_retain();
      return sub_10B720(v29, 0);
    case 0xDu:
      swift_retain_n();
      os_log_type_t v30 = sub_141160();
      os_log_type_t v31 = sub_141470();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        v49[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v33 = sub_140240();
        v47[0] = sub_58C0(v33, v34, v49);
        sub_1415C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v30, v31, "Unexpected timerVerb: %s", v32, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      return 0;
    case 0xEu:
      sub_13FA30();
      sub_8FE8((uint64_t)v49, (uint64_t)v47, &qword_17B9B0);
      if (v48)
      {
        sub_13FC40();
        if (swift_dynamicCast())
        {
          sub_13F5F0();
          if (!v47[0]) {
            goto LABEL_43;
          }
          UsoEntity_common_Timer.duration.getter();
          sub_2FF44();
          Class isa = UsoEntity_common_Timer.isMultiple.getter().super.super.isa;
          Class v36 = sub_141580(0).super.super.isa;
          char v37 = sub_141590();

          swift_release();
          if (v37) {
            goto LABEL_43;
          }
          swift_release();
        }
      }
      else
      {
        sub_904C((uint64_t)v47, &qword_17B9B0);
      }
      sub_8FE8((uint64_t)v49, (uint64_t)v47, &qword_17B9B0);
      if (v48)
      {
        sub_13FC30();
        if (swift_dynamicCast())
        {
          sub_13F5F0();
          if (v47[0])
          {
            uint64_t v39 = sub_13F990();
            swift_release();
            if (v39)
            {
              uint64_t v40 = sub_13FA70();
              swift_release();
              if (v40)
              {
                swift_release();
LABEL_43:
                sub_140CA0();
                swift_retain();
                id v18 = sub_12C64();
                swift_release();
                goto LABEL_47;
              }
            }
          }
          swift_release();
        }
      }
      else
      {
        sub_904C((uint64_t)v47, &qword_17B9B0);
      }
      sub_140D40();
      swift_retain();
      id v18 = sub_10B32C();
LABEL_47:
      sub_904C((uint64_t)v49, &qword_17B9B0);
      return v18;
    default:
      sub_140D40();
      swift_retain();
      return sub_10B32C();
  }
}

id sub_12C64()
{
  uint64_t v1 = sub_6FEC();
  if (v1)
  {
    id v2 = sub_10BDB0(v1, 0);
  }
  else if (sub_140230())
  {
    id v2 = sub_10C718();
    if (!v2) {
      goto LABEL_4;
    }
  }
  else
  {
    id v2 = [objc_allocWithZone(v0) init];
    [v2 setLabel:0];
    [self defaultDuration];
    sub_140C90();
    [v2 setType:1];
  }
  sub_140E30();
  sub_132AC();
  sub_140E0();
  uint64_t v3 = (void *)sub_140E20();
  [v2 setTargetingInfo:v3];

LABEL_4:
  swift_release();
  return v2;
}

double UsoEntity_common_Timer.duration.getter()
{
  uint64_t v0 = sub_5830(&qword_17D4B0);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_13F9D0()
    || (sub_13FAB0(), double v4 = v3, swift_release(), [self minimumDuration], v5 >= v4))
  {
    if (!sub_13F9F0()) {
      goto LABEL_10;
    }
    uint64_t v6 = sub_13FA60();
    swift_release();
    if (!v6) {
      goto LABEL_10;
    }
    swift_retain();
    uint64_t v7 = sub_1405A0();
    swift_release();
    if (!v7)
    {
      swift_release();
      goto LABEL_10;
    }
    sub_1402A0();
    uint64_t v8 = sub_13E500();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) == 1)
    {
      swift_release();
      swift_release();
      sub_904C((uint64_t)v2, &qword_17D4B0);
LABEL_10:
      [self defaultDuration];
      return v13;
    }
    sub_13E4E0();
    double v4 = v10;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v2, v8);
    [self minimumDuration];
    double v12 = v11;
    swift_release();
    swift_release();
    if (v12 >= v4) {
      goto LABEL_10;
    }
  }
  return v4;
}

uint64_t UsoEntity_common_Timer.timerType.getter()
{
  uint64_t v0 = sub_13F610();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  double v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerTypeSleep(_:), v0);
  unint64_t v4 = sub_13F9B0();
  if (!v4) {
    goto LABEL_11;
  }
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  uint64_t v6 = sub_1417D0();
  if (!v6)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    goto LABEL_12;
  }
LABEL_4:
  __chkstk_darwin(v6);
  *(void *)&v17[-16] = v3;
  char v7 = sub_98518((uint64_t (*)(uint64_t *))sub_98664, (uint64_t)&v17[-32], v5);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v7 & 1) == 0)
  {
LABEL_12:
    if (qword_17B208 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_141170();
    sub_33D8(v13, (uint64_t)qword_17DD18);
    uint64_t v9 = sub_141160();
    os_log_type_t v14 = sub_141450();
    if (!os_log_type_enabled(v9, v14))
    {
      uint64_t v11 = 1;
      goto LABEL_18;
    }
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v9, v14, "USO parse does not have sleep timer attribute", v15, 2u);
    uint64_t v11 = 1;
    goto LABEL_16;
  }
  if (qword_17B208 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_141170();
  sub_33D8(v8, (uint64_t)qword_17DD18);
  uint64_t v9 = sub_141160();
  os_log_type_t v10 = sub_141450();
  uint64_t v11 = 2;
  if (os_log_type_enabled(v9, v10))
  {
    double v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v12 = 0;
    _os_log_impl(&dword_0, v9, v10, "USO parse has sleep timer attribute!", v12, 2u);
LABEL_16:
    swift_slowDealloc();
  }
LABEL_18:

  return v11;
}

char *sub_132AC()
{
  uint64_t v0 = 0;
  switch(sub_5BFC())
  {
    case 1u:
      sub_13FA30();
      if (v25)
      {
        sub_13FC00();
        if (swift_dynamicCast()) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_141170();
      sub_33D8(v10, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse createTimerTask. Returning nil entity";
      goto LABEL_122;
    case 2u:
      sub_13FA30();
      if (v25)
      {
        sub_13FC10();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_141170();
      sub_33D8(v11, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse deleteTimerTask. Returning nil entity";
      goto LABEL_122;
    case 3u:
      sub_13FA30();
      if (v25)
      {
        sub_13FDD0();
        if (swift_dynamicCast()) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_141170();
      sub_33D8(v12, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse disableCommonSettingTask. Returning nil entity";
      goto LABEL_122;
    case 4u:
      sub_13FA30();
      if (v25)
      {
        sub_13FD50();
        if (swift_dynamicCast())
        {
LABEL_16:
          swift_retain();
          uint64_t v1 = sub_13FFF0();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_141170();
      sub_33D8(v13, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse enableCommonSettingTask. Returning nil entity";
      goto LABEL_122;
    case 5u:
      sub_13FA30();
      if (v25)
      {
        sub_13FB60();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_141170();
      sub_33D8(v14, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse pauseTimerTask. Returning nil entity";
      goto LABEL_122;
    case 6u:
      sub_13FA30();
      if (v25)
      {
        sub_13FCB0();
        if (swift_dynamicCast())
        {
          swift_retain();
          uint64_t v1 = sub_13FF00();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_141170();
      sub_33D8(v15, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse requestTimerTask. Returning nil entity";
      goto LABEL_122;
    case 7u:
      sub_13FA30();
      if (v25)
      {
        sub_13FB80();
        if (swift_dynamicCast()) {
          goto LABEL_40;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_141170();
      sub_33D8(v16, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse resetTimerTask. Returning nil entity";
      goto LABEL_122;
    case 8u:
      sub_13FA30();
      if (v25)
      {
        sub_13FC70();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_141170();
      sub_33D8(v17, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse resumeTimerTask. Returning nil entity";
      goto LABEL_122;
    case 9u:
      sub_13FA30();
      if (v25)
      {
        sub_13FB90();
        if (swift_dynamicCast())
        {
LABEL_31:
          swift_retain();
          uint64_t v1 = sub_13FA10();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_141170();
      sub_33D8(v18, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse startTimerTask. Returning nil entity";
      goto LABEL_122;
    case 0xAu:
      sub_13FA30();
      if (v25)
      {
        sub_13FB10();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_141170();
      sub_33D8(v19, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse stopTimerTask. Returning nil entity";
      goto LABEL_122;
    case 0xBu:
      sub_13FA30();
      if (v25)
      {
        sub_13FDE0();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_141170();
      sub_33D8(v20, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse summariseTimerTask. Returning nil entity";
      goto LABEL_122;
    case 0xCu:
      sub_13FA30();
      if (v25)
      {
        sub_13FC90();
        if (swift_dynamicCast())
        {
LABEL_40:
          swift_retain();
          uint64_t v1 = sub_13FF30();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_141170();
      sub_33D8(v21, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse updateTimerTask. Returning nil entity";
      goto LABEL_122;
    case 0xDu:
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_141170();
      sub_33D8(v2, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse task with unknown verb. Returning nil entity";
      goto LABEL_122;
    case 0xEu:
      sub_13FA30();
      if (v25)
      {
        sub_13FC40();
        if (swift_dynamicCast())
        {
          swift_retain();
          uint64_t v1 = sub_13F5E0();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_141170();
      sub_33D8(v22, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_123;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse noVerbTimerTask. Returning nil entity";
      goto LABEL_122;
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
      return v0;
    default:
      sub_13FA30();
      if (!v25)
      {
        sub_904C((uint64_t)v24, &qword_17B9B0);
LABEL_53:
        if (qword_17B2C0 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_141170();
        sub_33D8(v9, (uint64_t)qword_17F5A8);
        double v3 = sub_141160();
        os_log_type_t v4 = sub_141470();
        if (os_log_type_enabled(v3, v4))
        {
          unint64_t v5 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v5 = 0;
          uint64_t v6 = "associatedDeviceNames – Parse entity: failed to parse checkExistenceTimerTask. Returning nil entity";
LABEL_122:
          _os_log_impl(&dword_0, v3, v4, v6, v5, 2u);
          swift_slowDealloc();
        }
LABEL_123:

        return 0;
      }
      sub_140110();
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_53;
      }
LABEL_37:
      swift_retain();
      uint64_t v1 = sub_13FBB0();
LABEL_48:
      unint64_t v7 = v1;
      swift_release();
      if (v7)
      {
        uint64_t v0 = sub_DFD48(v7);
        uint64_t v8 = *((void *)v0 + 2);
        swift_bridgeObjectRelease();
        swift_release();
        if (v8) {
          return v0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      return 0;
  }
}

char *sub_140E0()
{
  uint64_t v0 = 0;
  switch(sub_5BFC())
  {
    case 1u:
      sub_13FA30();
      if (v24)
      {
        sub_13FC00();
        if (swift_dynamicCast()) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_141170();
      sub_33D8(v9, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse createTimerTask. Returning nil entity";
      goto LABEL_121;
    case 2u:
      sub_13FA30();
      if (v24)
      {
        sub_13FC10();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_141170();
      sub_33D8(v10, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse deleteTimerTask. Returning nil entity";
      goto LABEL_121;
    case 3u:
      sub_13FA30();
      if (v24)
      {
        sub_13FDD0();
        if (swift_dynamicCast()) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_141170();
      sub_33D8(v11, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse disableCommonSettingTask. Returning nil entity";
      goto LABEL_121;
    case 4u:
      sub_13FA30();
      if (v24)
      {
        sub_13FD50();
        if (swift_dynamicCast())
        {
LABEL_16:
          swift_retain();
          uint64_t v1 = sub_13FFF0();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_141170();
      sub_33D8(v12, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse enableCommonSettingTask. Returning nil entity";
      goto LABEL_121;
    case 5u:
      sub_13FA30();
      if (v24)
      {
        sub_13FB60();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_141170();
      sub_33D8(v13, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse pauseTimerTask. Returning nil entity";
      goto LABEL_121;
    case 6u:
      sub_13FA30();
      if (v24)
      {
        sub_13FCB0();
        if (swift_dynamicCast())
        {
          swift_retain();
          uint64_t v1 = sub_13FF00();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_141170();
      sub_33D8(v14, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse requestTimerTask. Returning nil entity";
      goto LABEL_121;
    case 7u:
      sub_13FA30();
      if (v24)
      {
        sub_13FB80();
        if (swift_dynamicCast()) {
          goto LABEL_40;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_141170();
      sub_33D8(v15, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse resetTimerTask. Returning nil entity";
      goto LABEL_121;
    case 8u:
      sub_13FA30();
      if (v24)
      {
        sub_13FC70();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_141170();
      sub_33D8(v16, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse resumeTimerTask. Returning nil entity";
      goto LABEL_121;
    case 9u:
      sub_13FA30();
      if (v24)
      {
        sub_13FB90();
        if (swift_dynamicCast())
        {
LABEL_31:
          swift_retain();
          uint64_t v1 = sub_13FA10();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_141170();
      sub_33D8(v17, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse startTimerTask. Returning nil entity";
      goto LABEL_121;
    case 0xAu:
      sub_13FA30();
      if (v24)
      {
        sub_13FB10();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_141170();
      sub_33D8(v18, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse stopTimerTask. Returning nil entity";
      goto LABEL_121;
    case 0xBu:
      sub_13FA30();
      if (v24)
      {
        sub_13FDE0();
        if (swift_dynamicCast()) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_141170();
      sub_33D8(v19, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse summariseTimerTask. Returning nil entity";
      goto LABEL_121;
    case 0xCu:
      sub_13FA30();
      if (v24)
      {
        sub_13FC90();
        if (swift_dynamicCast())
        {
LABEL_40:
          swift_retain();
          uint64_t v1 = sub_13FF30();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_141170();
      sub_33D8(v20, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse updateTimerTask. Returning nil entity";
      goto LABEL_121;
    case 0xDu:
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_141170();
      sub_33D8(v2, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse task with unknown verb. Returning nil entity";
      goto LABEL_121;
    case 0xEu:
      sub_13FA30();
      if (v24)
      {
        sub_13FC40();
        if (swift_dynamicCast())
        {
          swift_retain();
          uint64_t v1 = sub_13F5E0();
          goto LABEL_48;
        }
      }
      else
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_141170();
      sub_33D8(v21, (uint64_t)qword_17F5A8);
      double v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_122;
      }
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse noVerbTimerTask. Returning nil entity";
      goto LABEL_121;
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
      return v0;
    default:
      sub_13FA30();
      if (!v24)
      {
        sub_904C((uint64_t)v23, &qword_17B9B0);
LABEL_52:
        if (qword_17B2C0 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_141170();
        sub_33D8(v8, (uint64_t)qword_17F5A8);
        double v3 = sub_141160();
        os_log_type_t v4 = sub_141470();
        if (os_log_type_enabled(v3, v4))
        {
          unint64_t v5 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v5 = 0;
          uint64_t v6 = "associatedDeviceReferences – Parse entity: failed to parse checkExistenceTimerTask. Returning nil entity";
LABEL_121:
          _os_log_impl(&dword_0, v3, v4, v6, v5, 2u);
          swift_slowDealloc();
        }
LABEL_122:

        return 0;
      }
      sub_140110();
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_52;
      }
LABEL_37:
      swift_retain();
      uint64_t v1 = sub_13FBB0();
LABEL_48:
      unint64_t v7 = v1;
      swift_release();
      if (v7)
      {
        uint64_t v0 = sub_DFC3C(v7);
        swift_bridgeObjectRelease();
        swift_release();
        return v0;
      }
      swift_release();
      return 0;
  }
}

uint64_t sub_14F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_17CEC8 + dword_17CEC8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_14FBC;
  return v8(a1, a3);
}

uint64_t sub_14FBC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_150C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_17CED8 + dword_17CED8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  void *v7 = v3;
  v7[1] = sub_15180;
  return v10(a1, a2, v8);
}

uint64_t sub_15180(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1527C()
{
  return sub_141980();
}

uint64_t sub_152A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v54 = a2;
  uint64_t v55 = a1;
  uint64_t v4 = sub_13EB60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_140980();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_5830(&qword_17CD30);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v49 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  if (qword_17B270 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  uint64_t v20 = sub_33D8(v19, (uint64_t)qword_17EB30);
  uint64_t v57 = a3;
  sub_8FE8(a3, (uint64_t)v18, &qword_17CD30);
  uint64_t v56 = v20;
  uint64_t v21 = sub_141160();
  os_log_type_t v22 = sub_141480();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v52 = v7;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v51 = v8;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v49 = v5;
    uint64_t v60 = v25;
    uint64_t v50 = v4;
    *(_DWORD *)uint64_t v24 = 136315138;
    sub_8FE8((uint64_t)v18, (uint64_t)v16, &qword_17CD30);
    uint64_t v26 = sub_141260();
    uint64_t v59 = sub_58C0(v26, v27, &v60);
    uint64_t v7 = v52;
    uint64_t v4 = v50;
    sub_1415C0();
    swift_bridgeObjectRelease();
    sub_904C((uint64_t)v18, &qword_17CD30);
    _os_log_impl(&dword_0, v21, v22, "makeIntentExecutionBehavior: Deciding execution behavior with halInfo: %s", v24, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v49;
    swift_slowDealloc();
    uint64_t v8 = v51;
    swift_slowDealloc();
  }
  else
  {
    sub_904C((uint64_t)v18, &qword_17CD30);
  }

  uint64_t v28 = v58;
  sub_8FE8(v57, (uint64_t)v13, &qword_17CD30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    sub_904C((uint64_t)v13, &qword_17CD30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v28, v13, v7);
    uint64_t v29 = sub_140940();
    if ((v29 & 0xC000000000000001) != 0) {
      uint64_t v30 = sub_141620();
    }
    else {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    swift_bridgeObjectRelease();
    if (v30 && (uint64_t v31 = sub_140870()) != 0)
    {
      uint64_t v32 = (void *)v31;
      sub_140950();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      if (!v34)
      {
        id v43 = v32;
        uint64_t v44 = sub_141160();
        os_log_type_t v45 = sub_141480();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          *(_DWORD *)uint64_t v46 = 136315138;
          uint64_t v47 = sub_141000();
          uint64_t v59 = sub_58C0(v47, v48, &v60);
          sub_1415C0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v44, v45, "makeIntentExecutionBehavior: Handle on target device: %s", v46, 0xCu);
          swift_arrayDestroy();
          uint64_t v28 = v58;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_13EBA0();
        uint64_t v41 = sub_13EB80();

        (*(void (**)(char *, uint64_t))(v8 + 8))(v28, v7);
        return v41;
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v28, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v28, v7);
    }
  }
  uint64_t v35 = sub_141160();
  os_log_type_t v36 = sub_141480();
  if (os_log_type_enabled(v35, v36))
  {
    char v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v37 = 0;
    _os_log_impl(&dword_0, v35, v36, "makeIntentExecutionBehavior: No eligible devices for remote execution found. Continuing local execution.", v37, 2u);
    swift_slowDealloc();
  }

  sub_13EBA0();
  swift_retain();
  uint64_t v38 = v54;
  sub_140E00();
  sub_5595C(0, &qword_17EBA8);
  id v39 = v38;
  uint64_t v40 = v53;
  sub_13EB50();
  uint64_t v41 = sub_13EB90();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v40, v4);
  return v41;
}

uint64_t sub_159A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_15A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_159A4;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_15B5C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_5830(&qword_17CD30);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_15BF0, 0, 0);
}

uint64_t sub_15BF0()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_140980();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t v5 = sub_152A8(v3, v1, v2);
  sub_904C(v2, &qword_17CD30);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_15CC8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_DA8C8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_15DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  void *v5 = v2;
  v5[1] = sub_15CC8;
  return sub_D4DF0(a1, a2);
}

uint64_t sub_15E9C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830(&qword_180518);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v62 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  os_log_type_t v72 = (char *)&v55 - v7;
  uint64_t v8 = sub_5830(&qword_17BF08);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_141200();
  uint64_t v63 = *(void *)(v74 - 8);
  uint64_t v11 = __chkstk_darwin(v74);
  uint64_t v67 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v66 = (char *)&v55 - v13;
  uint64_t v57 = a2;
  sub_13EFE0();
  sub_1411C0();
  swift_allocObject();
  uint64_t v64 = sub_1411B0();
  unint64_t v56 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1417D0();
    uint64_t v14 = result;
    if (!result) {
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (!v14) {
      goto LABEL_31;
    }
  }
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v17 = 0;
  uint64_t v78 = 0;
  unint64_t v75 = a1 & 0xC000000000000001;
  uint64_t v68 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v63 + 32);
  uint64_t v61 = (void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v60 = v63 + 8;
  BOOL v73 = &_swiftEmptyArrayStorage;
  *(void *)&long long v16 = 136315138;
  long long v59 = v16;
  uint64_t v58 = (char *)&type metadata for Any + 8;
  unint64_t v70 = a1;
  uint64_t v71 = v10;
  uint64_t v69 = v14;
  do
  {
    unint64_t v18 = a1;
    if (v75) {
      id v19 = (id)sub_1416A0();
    }
    else {
      id v19 = *(id *)(a1 + 8 * v17 + 32);
    }
    uint64_t v20 = v19;
    uint64_t v21 = sub_1677C();
    if (sub_13FA40())
    {
      swift_release();
      id v22 = [v20 identifier];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = sub_141250();
        uint64_t v26 = v25;
      }
      else
      {
        uint64_t v24 = 0;
        uint64_t v26 = 0;
      }
      uint64_t v76 = v17;
      v79[0] = v24;
      v79[1] = v26;
      sub_5830(&qword_17B570);
      id v77 = (id)sub_141260();
      if (qword_17B230 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_141190();
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
      v35(v72, 1, 1, v34);
      sub_140EA0();
      swift_bridgeObjectRetain();
      swift_retain();
      id v36 = v20;
      uint64_t v37 = (uint64_t)v71;
      id v38 = v36;
      uint64_t v39 = v78;
      sub_1411E0();
      if (v39)
      {
        swift_errorRelease();
        (*v68)(v37, 1, 1, v74);

        swift_release();
        sub_904C(v37, &qword_17BF08);
        uint64_t v78 = 0;
        uint64_t v14 = v69;
        a1 = v70;
        uint64_t v17 = v76;
      }
      else
      {
        id v77 = v38;
        uint64_t v78 = 0;
        uint64_t v40 = v74;
        (*v68)(v37, 0, 1, v74);
        uint64_t v41 = v66;
        uint64_t v42 = *v65;
        (*v65)(v66, v37, v40);
        id v43 = v62;
        sub_1411A0();
        v35(v43, 0, 1, v34);
        sub_1411F0();
        (*v61)(v67, v41, v40);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a1 = v70;
        if (isUniquelyReferenced_nonNull_native) {
          unint64_t v45 = (unint64_t)v73;
        }
        else {
          unint64_t v45 = sub_E0778(0, v73[2] + 1, 1, (unint64_t)v73);
        }
        unint64_t v47 = *(void *)(v45 + 16);
        unint64_t v46 = *(void *)(v45 + 24);
        uint64_t v17 = v76;
        if (v47 >= v46 >> 1) {
          unint64_t v45 = sub_E0778(v46 > 1, v47 + 1, 1, v45);
        }
        *(void *)(v45 + 16) = v47 + 1;
        uint64_t v48 = v63;
        unint64_t v49 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
        BOOL v73 = (void *)v45;
        uint64_t v50 = v74;
        v42((char *)(v45 + v49 + *(void *)(v63 + 72) * v47), (uint64_t)v67, v74);

        swift_release();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v66, v50);
        uint64_t v14 = v69;
      }
    }
    else
    {
      if (qword_17B418 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_180928);
      swift_retain_n();
      uint64_t v28 = sub_141160();
      os_log_type_t v29 = sub_141470();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = v14;
        uint64_t v31 = swift_slowAlloc();
        v79[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = v59;
        v79[2] = v21;
        sub_13FD20();
        swift_retain();
        uint64_t v32 = sub_141260();
        *(void *)(v31 + 4) = sub_58C0(v32, v33, v79);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Fail to build uso entity %s", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v14 = v30;
        swift_slowDealloc();

        swift_release();
      }
      else
      {

        swift_release_n();
      }
      a1 = v18;
    }
    ++v17;
  }
  while (v14 != v17);
LABEL_31:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_13EF40();
  if (!v56)
  {
    uint64_t v51 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    if (v51) {
      goto LABEL_33;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    sub_13EF80();
    sub_11B9E0(a1);
    sub_13EF50();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_1417D0();
  swift_bridgeObjectRelease();
  if (!v51) {
    goto LABEL_41;
  }
LABEL_33:
  v79[0] = (uint64_t)&_swiftEmptyArrayStorage;
  uint64_t result = sub_141730();
  if ((v51 & 0x8000000000000000) == 0)
  {
    uint64_t v52 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v53 = (id)sub_1416A0();
      }
      else {
        id v53 = *(id *)(a1 + 8 * v52 + 32);
      }
      uint64_t v54 = v53;
      ++v52;
      sub_16C08();

      sub_141700();
      sub_141740();
      sub_141750();
      sub_141710();
    }
    while (v51 != v52);
    goto LABEL_41;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1677C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_13FAE0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13FD20();
  swift_allocObject();
  uint64_t v6 = sub_13FD10();
  sub_13FED0();
  swift_allocObject();
  sub_13FEC0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Second(_:), v2);
  sub_13FEB0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v7 = [v0 duration];
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 doubleValue];
    double v10 = v9;

    sub_13FE20();
    swift_allocObject();
    uint64_t result = sub_13FE10();
    if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
    {
      if (v10 > -9.22337204e18)
      {
        if (v10 < 9.22337204e18)
        {
          sub_13FE00();
          sub_1401F0();
          swift_allocObject();
          sub_1401E0();
          swift_retain();
          sub_1401C0();
          swift_release();
          swift_retain();
          sub_1401D0();
          swift_release();
          sub_13FEA0();
          swift_allocObject();
          sub_13FE90();
          swift_retain();
          sub_13FE70();
          swift_release();
          swift_retain();
          sub_13FCF0();
          swift_release();
          swift_release();
          swift_release_n();
          goto LABEL_6;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_6:
  id v12 = [v1 remainingTime];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 doubleValue];
    double v15 = v14;

    sub_13FE20();
    swift_allocObject();
    uint64_t result = sub_13FE10();
    if ((~*(void *)&v15 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          sub_13FE00();
          sub_1401F0();
          swift_allocObject();
          sub_1401E0();
          swift_retain();
          sub_1401C0();
          swift_release();
          swift_retain();
          sub_1401D0();
          swift_release();
          sub_13FEA0();
          swift_allocObject();
          sub_13FE90();
          swift_retain();
          sub_13FE70();
          swift_release();
          swift_retain();
          sub_13FCE0();
          swift_release();
          swift_release();
          swift_release_n();
          goto LABEL_11;
        }
LABEL_23:
        __break(1u);
        return result;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_11:
  id v16 = [v1 label];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_141250();
    unint64_t v20 = v19;

    uint64_t v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0) {
      uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
    }
    if (v21) {
      sub_13FD00();
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  return v6;
}

id sub_16C08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17B520);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [objc_allocWithZone((Class)SATimerObject) init];
  id v6 = [v0 label];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = sub_141250();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (v11) {
      [v5 setTitle:v7];
    }
  }
  id v12 = [v1 duration];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 doubleValue];
    double v15 = v14;

    id v16 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v15];
    [v5 setTimerValue:v16];
  }
  uint64_t v17 = (char *)[v1 state];
  uint64_t v18 = &SATimerStatePausedValue;
  unint64_t v19 = &SATimerStateRunningValue;
  if (v17 != (unsigned char *)&dword_0 + 1) {
    unint64_t v19 = &SATimerStateUndefinedValue;
  }
  if (v17 != (unsigned char *)&dword_0 + 2) {
    uint64_t v18 = v19;
  }
  [v5 setState:*v18];
  id v20 = [v1 identifier];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_141250();
    uint64_t v24 = v23;

    unint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    id v25 = v5;
    sub_141680(25);
    swift_bridgeObjectRelease();
    unint64_t v32 = 0xD000000000000017;
    unint64_t v33 = 0x800000000014ACC0;
    v34._countAndFlagsBits = v22;
    v34._object = v24;
    sub_1412B0(v34);
    swift_bridgeObjectRelease();
    sub_13E4A0();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_13E4B0();
    uint64_t v27 = *(void *)(v26 - 8);
    os_log_type_t v29 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v26) != 1)
    {
      sub_13E480(v28);
      os_log_type_t v29 = v30;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v26);
    }
    [v25 setIdentifier:v29];
  }
  if ([v1 type] == (char *)&dword_0 + 2) {
    [v5 setType:SATimerTypeSleepTimerValue];
  }
  return v5;
}

unint64_t sub_16F44(uint64_t a1, uint64_t a2)
{
  sub_141B50();
  sub_1412A0();
  Swift::Int v4 = sub_141B70();

  return sub_17304(a1, a2, v4);
}

unint64_t sub_16FBC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_141640(*(void *)(v2 + 40));

  return sub_173E8(a1, v4);
}

unint64_t sub_17000(unsigned __int8 a1)
{
  sub_141B50();
  sub_1412A0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_141B70();

  return sub_17100(a1, v2);
}

unint64_t sub_17100(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x8000000000147370;
      unint64_t v8 = 0xD000000000000020;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x73646E6F636573;
          break;
        case 2:
          unint64_t v8 = 0x53736574756E696DLL;
          unint64_t v7 = 0xEE0073646E6F6365;
          break;
        case 3:
          break;
        default:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x746C7561666564;
          break;
      }
      unint64_t v9 = 0x8000000000147370;
      unint64_t v10 = 0xD000000000000020;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x73646E6F636573;
          goto LABEL_11;
        case 2:
          unint64_t v9 = 0xEE0073646E6F6365;
          if (v8 == 0x53736574756E696DLL) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 3:
LABEL_11:
          if (v8 != v10) {
            goto LABEL_15;
          }
          goto LABEL_14;
        default:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x746C7561666564) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_141AA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_17304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_141AA0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_141AA0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_173E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_30478(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_141650();
      sub_304D4((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

_OWORD *sub_174B0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_174C0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v76 = a2;
  uint64_t v69 = sub_1407B0();
  uint64_t v5 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17BE78);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v67 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v70 = (uint64_t)&v66 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v66 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v66 = v19;
  uint64_t v71 = v20;
  if (a1)
  {
    uint64_t v21 = a1;
  }
  else
  {
    type metadata accessor for TimerTimer.Builder(0);
    swift_allocObject();
    uint64_t v21 = sub_17FA8();
  }
  sub_140420();
  swift_allocObject();
  swift_retain();
  sub_140410();
  id v22 = [v2 duration];
  uint64_t v23 = v22;
  if (v22)
  {
    [v22 doubleValue];
  }
  sub_140400();
  swift_release();
  uint64_t v24 = sub_1403F0();
  swift_release();
  id v25 = v76;
  uint64_t v74 = v24;
  sub_1403C0();
  swift_allocObject();
  sub_140410();
  id v26 = [v2 remainingTime];
  uint64_t v27 = v26;
  if (v26)
  {
    [v26 doubleValue];
  }
  sub_140400();
  swift_release();
  uint64_t v28 = sub_1403F0();
  swift_release();
  id v73 = v25;
  sub_1403C0();
  id v29 = [v2 label];
  if (v29)
  {
    uint64_t v30 = v29;
    sub_141250();

    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_140500();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v18, 0, 1, v31);
  }
  else
  {
    uint64_t v31 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v18, 1, 1, v31);
  }
  uint64_t v32 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_label;
  swift_beginAccess();
  sub_1816C((uint64_t)v18, v32);
  swift_endAccess();
  swift_retain();
  sub_904C((uint64_t)v18, &qword_17BE78);
  [v3 type];
  sub_140F40();
  sub_140500();
  unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
  v33(v16, 0, 1, v31);
  uint64_t v34 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_type;
  swift_beginAccess();
  sub_1816C((uint64_t)v16, v34);
  swift_endAccess();
  sub_904C((uint64_t)v16, &qword_17BE78);
  [v3 state];
  sub_140F60();
  unint64_t v75 = v33;
  v33(v16, 0, 1, v31);
  uint64_t v35 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_state;
  swift_beginAccess();
  sub_1816C((uint64_t)v16, v35);
  swift_endAccess();
  sub_904C((uint64_t)v16, &qword_17BE78);
  *(void *)(v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_remainingTime) = v28;
  swift_retain();
  swift_release();
  *(void *)(v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_duration) = v74;
  swift_retain();
  swift_release();
  id v36 = v68;
  uint64_t v37 = v69;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v68, enum case for PunchOutApp.timer(_:), v69);
  sub_140790();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v36, v37);
  uint64_t v38 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_action;
  swift_beginAccess();
  sub_1816C((uint64_t)v16, v38);
  swift_endAccess();
  sub_904C((uint64_t)v16, &qword_17BE78);
  id v39 = [v3 identifier];
  uint64_t v72 = v28;
  if (v39)
  {
    uint64_t v40 = v39;
    sub_141250();
  }
  uint64_t v41 = v71;
  swift_bridgeObjectRetain();
  sub_1404E0();
  v75(v16, 0, 1, v31);
  uint64_t v42 = v70;
  sub_18554((uint64_t)v16, v70);
  uint64_t v43 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_timerIDString;
  swift_beginAccess();
  sub_2D248(v42, v43);
  swift_endAccess();
  swift_bridgeObjectRelease();
  id v44 = [v3 device];
  if (!v44) {
    goto LABEL_29;
  }
  unint64_t v45 = v44;
  id v46 = [v44 roomName];
  if (v46)
  {
    unint64_t v47 = v46;
    sub_141250();

    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v48 = 0;
  }
  else
  {
    uint64_t v48 = 1;
  }
  uint64_t v49 = 1;
  v75((char *)v41, v48, 1, v31);
  uint64_t v50 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_roomName;
  swift_beginAccess();
  sub_1816C(v41, v50);
  swift_endAccess();
  swift_retain();
  sub_904C(v41, &qword_17BE78);
  id v51 = [v45 deviceName];
  if (v51)
  {
    uint64_t v52 = v51;
    sub_141250();

    uint64_t v53 = v66;
    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v53 = v66;
  }
  uint64_t v54 = v75;
  v75((char *)v53, v49, 1, v31);
  uint64_t v55 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_deviceName;
  swift_beginAccess();
  sub_1816C(v53, v55);
  swift_endAccess();
  sub_904C(v53, &qword_17BE78);
  v54(v16, 1, 1, v31);
  swift_beginAccess();
  sub_1816C((uint64_t)v16, v38);
  swift_endAccess();
  sub_904C((uint64_t)v16, &qword_17BE78);
  unint64_t v56 = (char *)[v45 targetMatchType];
  if (v56 == (unsigned char *)&dword_0 + 2)
  {
    uint64_t v57 = (uint64_t)v67;
    goto LABEL_25;
  }
  uint64_t v57 = (uint64_t)v67;
  if (v56 == (unsigned char *)&dword_0 + 1 || !v56)
  {
LABEL_25:
    sub_141270();
    v75((char *)v57, 0, 1, v31);
    uint64_t v58 = v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_targetDeviceType;
    swift_beginAccess();
    sub_1816C(v57, v58);
    swift_endAccess();
    sub_904C(v57, &qword_17BE78);
    id v59 = [v45 isInRespondingRoom];
    if (v59)
    {
      uint64_t v60 = v59;
      unsigned __int8 v61 = [v59 BOOLValue];
    }
    else
    {
      unsigned __int8 v61 = 0;
    }

    *(unsigned char *)(v21 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isInRespondingRoom) = v61;
    swift_release();
LABEL_29:
    type metadata accessor for TimerTimer(0);
    swift_allocObject();
    uint64_t v62 = sub_1822C(v21);
    swift_release();
    swift_release();
    swift_release_n();
    swift_beginAccess();
    uint64_t v63 = *(void **)(v62 + 16);
    *(void *)(v62 + 16) = v76;
    id v64 = v73;

    return v62;
  }
  id v77 = v56;
  uint64_t result = sub_141AD0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TimerTimer.Builder(uint64_t a1)
{
  return sub_181D4(a1, qword_17E740);
}

uint64_t sub_17FA8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_label;
  uint64_t v2 = sub_140500();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_type, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_state, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_remainingTime) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_duration) = 0;
  v3(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_action, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_roomName, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_deviceName, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_targetDeviceType, 1, 1, v2);
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isInRespondingRoom) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueAcrossGroup) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueInRoom) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isOnlyMatchingTimerInRoom) = 0;
  v3(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_timerIDString, 1, 1, v2);
  return v0;
}

uint64_t sub_1816C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_181D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for TimerTimer(uint64_t a1)
{
  return sub_181D4(a1, qword_17E5D8);
}

uint64_t sub_1822C(uint64_t a1)
{
  uint64_t v3 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  uint64_t v6 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_label;
  swift_beginAccess();
  sub_AE204(v6, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_label);
  uint64_t v7 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_type;
  swift_beginAccess();
  sub_AE204(v7, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_type);
  uint64_t v8 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_state;
  swift_beginAccess();
  sub_AE204(v8, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_state);
  *(void *)(v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_remainingTime) = *(void *)(a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_remainingTime);
  *(void *)(v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration) = *(void *)(a1
                                                                                               + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_duration);
  uint64_t v9 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_action;
  swift_beginAccess();
  sub_AE204(v9, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_action);
  uint64_t v10 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_roomName;
  swift_beginAccess();
  sub_AE204(v10, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_roomName);
  uint64_t v11 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_deviceName;
  swift_beginAccess();
  sub_AE204(v11, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_deviceName);
  uint64_t v12 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_targetDeviceType;
  swift_beginAccess();
  sub_AE204(v12, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_targetDeviceType);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isInRespondingRoom) = *(unsigned char *)(a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isInRespondingRoom);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isLabelUniqueAcrossGroup) = *(unsigned char *)(a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueAcrossGroup);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isLabelUniqueInRoom) = *(unsigned char *)(a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueInRoom);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isOnlyMatchingTimerInRoom) = *(unsigned char *)(a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isOnlyMatchingTimerInRoom);
  uint64_t v13 = a1 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_timerIDString;
  swift_beginAccess();
  sub_AE204(v13, (uint64_t)v5);
  sub_18554((uint64_t)v5, v1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_timerIDString);
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_18554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_185BC()
{
  return sub_AD434((void (*)(void))sub_ACEF8);
}

uint64_t sub_185D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1417A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_141790();
  uint64_t v18 = v2;
  uint64_t v19 = &off_175A00;
  uint64_t v6 = sub_187EC(v17);
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v6, v5, v2);
  uint64_t v7 = type metadata accessor for DefaultCircuitBreaker();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = sub_18874((uint64_t)v17, v18);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  *(void *)(v8 + 56) = v2;
  *(void *)(v8 + 64) = &off_175A00;
  uint64_t v13 = sub_187EC((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 32))(v13, v11, v2);
  *(void *)(v8 + 72) = sub_141BD0();
  *(void *)(v8 + 80) = v14;
  *(_OWORD *)(v8 + 16) = xmmword_146CD0;
  _s20HandleIntentStrategyVwxx_1((uint64_t)v17);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  a1[3] = v7;
  a1[4] = (uint64_t)&off_175A10;
  *a1 = v8;
  return result;
}

uint64_t *sub_187EC(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for DefaultCircuitBreaker()
{
  return self;
}

uint64_t sub_18874(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_188C4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v25 = a2;
  uint64_t v26 = a1;
  uint64_t v29 = a3;
  uint64_t v3 = sub_141150();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_141170();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_140680();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1406A0();
  uint64_t v27 = *(void *)(v15 - 8);
  uint64_t v28 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for SiriTimeMeasurement.LogDescription.bobcatTimers(_:), v11);
  if (qword_17B278 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_33D8(v7, (uint64_t)qword_17ED80);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v18, v7);
  mach_absolute_time();
  sub_1406B0();
  sub_1414D0();
  uint64_t v19 = (void *)sub_140E50();
  sub_141140();
  sub_141130();

  uint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v6, v3);
  uint64_t v21 = sub_90A8(v25, v25[3]);
  sub_BE7B4(v26, *v21);
  sub_1414C0();
  id v22 = (void *)sub_140E50();
  sub_141140();
  sub_141130();

  v20(v6, v3);
  sub_140690();
  sub_1404E0();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
}

uint64_t sub_18D10()
{
  uint64_t v0 = sub_1403A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - v5;
  sub_140330();
  sub_140320();
  sub_1402F0();
  swift_release();
  sub_140BB0();
  swift_release();
  sub_140370();
  sub_18EDC(&qword_17EEA0, (void (*)(uint64_t))&type metadata accessor for ResponseMode);
  char v7 = sub_141230();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if ((v7 & 1) == 0) {
    return 1;
  }
  id v9 = [self sharedPreferences];
  id v10 = [v9 siriResponseShouldAlwaysPrint];

  return (uint64_t)v10;
}

uint64_t sub_18EDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_18F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_140730();
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_5830(&qword_17EE98);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_13E5F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 28261 && a3 == 0xE200000000000000)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  }
  else
  {
    char v16 = sub_141AA0();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    if ((v16 & 1) == 0)
    {
LABEL_14:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      goto LABEL_15;
    }
  }
  uint64_t v17 = v6;
  sub_13E5B0();
  uint64_t v18 = sub_13E5A0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18) == 1)
  {
    sub_904C((uint64_t)v11, &qword_17EE98);
    uint64_t v6 = v17;
    goto LABEL_14;
  }
  uint64_t v20 = sub_13E590();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
  uint64_t v6 = v17;
  if (!v22) {
    goto LABEL_14;
  }
  if (v20 == 21333 && v22 == 0xE200000000000000)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_bridgeObjectRelease();
    return 1;
  }
  char v24 = sub_141AA0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_bridgeObjectRelease();
  if (v24) {
    return 1;
  }
LABEL_15:
  sub_140720();
  BOOL v25 = sub_140700();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
  return v25;
}

uint64_t sub_192AC()
{
  sub_90A8((void *)(v0 + 32), *(void *)(v0 + 56));
  sub_1417A0();
  sub_19588();
  swift_beginAccess();
  sub_141BC0();
  swift_endAccess();
  uint64_t result = sub_141BB0();
  if (result)
  {
    if (qword_17B278 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_141170();
    sub_33D8(v2, (uint64_t)qword_17ED80);
    swift_retain_n();
    uint64_t v3 = sub_141160();
    os_log_type_t v4 = sub_141470();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      v10[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315394;
      uint64_t v6 = sub_141BA0();
      sub_58C0(v6, v7, v10);
      sub_1415C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      uint64_t v8 = sub_141BA0();
      sub_58C0(v8, v9, v10);
      sub_1415C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v3, v4, "Exceeded max total time, %s > %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_BF8EC();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_19588()
{
  sub_18EDC(&qword_17EEB0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  uint64_t result = sub_141AF0();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_19620()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_19650()
{
  return sub_19684(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))&dispatch thunk of DialogDuration.seconds.getter, 1);
}

uint64_t sub_19684(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), char a4)
{
  uint64_t v6 = sub_5830(&qword_17EE68);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v7);
  uint64_t v10 = sub_5830(&qword_17BE78);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  return sub_1976C((uint64_t)v9, a4);
}

uint64_t sub_1976C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_5830(&qword_17EE68);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_904C(a1, &qword_17EE68);
    sub_BCD38(a2, (uint64_t)v8);
    return sub_904C((uint64_t)v8, &qword_17EE68);
  }
  else
  {
    sub_19914(a1, (uint64_t)v11, &qword_17BE78);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_BE664((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_19914(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5830(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_19978@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v46 = sub_141170();
  uint64_t v49 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5830(&qword_17EE80);
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v45 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v47 = (unsigned __int8 *)&v45 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(int *)(v4 + 48);
  uint64_t v21 = (uint64_t)&v16[v20];
  uint64_t v22 = (uint64_t)&a1[v20];
  *uint64_t v16 = *a1;
  sub_AE204((uint64_t)&a1[v20], (uint64_t)&v16[v20]);
  sub_19914(v21, (uint64_t)v19, &qword_17BE78);
  uint64_t v23 = sub_140500();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23) == 1)
  {
    sub_904C((uint64_t)v19, &qword_17BE78);
    if (qword_17B278 != -1) {
      swift_once();
    }
    uint64_t v25 = v46;
    uint64_t v26 = sub_33D8(v46, (uint64_t)qword_17ED80);
    uint64_t v28 = v48;
    uint64_t v27 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v26, v25);
    uint64_t v29 = (uint64_t)&v14[*(int *)(v4 + 48)];
    *uint64_t v14 = *a1;
    sub_AE204(v22, v29);
    uint64_t v30 = v47;
    sub_19914((uint64_t)v14, (uint64_t)v47, &qword_17EE80);
    uint64_t v31 = sub_141160();
    os_log_type_t v32 = sub_141470();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = 0xD000000000000020;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v35 = *(int *)(v4 + 48);
      id v36 = v45;
      uint64_t v37 = (uint64_t)&v45[v35];
      uint64_t v38 = (uint64_t)&v30[v35];
      uint64_t v39 = *v30;
      *unint64_t v45 = v39;
      sub_AE204(v38, (uint64_t)&v36[v35]);
      unint64_t v40 = 0x8000000000147370;
      switch(v39)
      {
        case 1:
          unint64_t v40 = 0xE700000000000000;
          uint64_t v33 = 0x73646E6F636573;
          break;
        case 2:
          uint64_t v33 = 0x53736574756E696DLL;
          unint64_t v40 = 0xEE0073646E6F6365;
          break;
        case 3:
          break;
        default:
          unint64_t v40 = 0xE700000000000000;
          uint64_t v33 = 0x746C7561666564;
          break;
      }
      sub_904C(v37, &qword_17BE78);
      uint64_t v51 = sub_58C0(v33, v40, &v52);
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_904C((uint64_t)v47, &qword_17EE80);
      _os_log_impl(&dword_0, v31, v32, "No print value for dialog candidate %s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v25);
    }
    else
    {
      sub_904C((uint64_t)v30, &qword_17EE80);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v25);
    }
    id v44 = (_OWORD *)v50;
    *(void *)(v50 + 32) = 0;
    double result = 0.0;
    *id v44 = 0u;
    v44[1] = 0u;
  }
  else
  {
    uint64_t v48 = (char *)sub_1404F0();
    uint64_t v49 = v41;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v23);
    sub_1410D0();
    swift_allocObject();
    sub_1410C0();
    uint64_t v42 = (uint64_t)&v9[*(int *)(v4 + 48)];
    *uint64_t v9 = *a1;
    sub_AE204(v22, v42);
    sub_141090();
    swift_bridgeObjectRelease();
    swift_release();
    sub_904C(v42, &qword_17BE78);
    sub_1410A0();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1410B0();
    swift_release();
  }
  return result;
}

uint64_t sub_1A004()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1A03C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1A468, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1A198(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_5830(&qword_17BE78);
  v3[5] = swift_task_alloc();
  return _swift_task_switch(sub_1A230, 0, 0);
}

uint64_t sub_1A230()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[6] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142FC0;
  strcpy((char *)(v2 + 32), "createdTimer");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  uint64_t v3 = 0;
  if (v1)
  {
    uint64_t v3 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  *(void *)(v2 + 80) = 0xD000000000000016;
  *(void *)(v2 + 88) = 0x8000000000148520;
  sub_8FE8(v5, v4, &qword_17BE78);
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  uint64_t v9 = v0[5];
  if (v8 == 1)
  {
    swift_retain();
    sub_904C(v9, &qword_17BE78);
    *(_OWORD *)(v2 + 96) = 0u;
    *(_OWORD *)(v2 + 112) = 0u;
  }
  else
  {
    *(void *)(v2 + 120) = v6;
    uint64_t v10 = sub_187EC((uint64_t *)(v2 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v10, v9, v6);
    swift_retain();
  }
  uint64_t v13 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[7] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1A03C;
  return v13(0xD000000000000021, 0x80000000001492D0, v2);
}

uint64_t sub_1A468()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A4D8(void *a1)
{
  return sub_1A4FC(a1);
}

uint64_t sub_1A4FC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_5830(&qword_17EA78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_90A8(a1, a1[3]);
  sub_1AA4C();
  sub_141B90();
  LOBYTE(v13) = 0;
  sub_140500();
  sub_1AAF4(&qword_17EA80, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
  sub_141910();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_141910();
    LOBYTE(v13) = 2;
    sub_141910();
    uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_remainingTime);
    char v12 = 3;
    uint64_t v9 = sub_140430();
    sub_1AAF4(&qword_17EA88, (void (*)(uint64_t))&type metadata accessor for DialogDuration);
    uint64_t v11 = v9;
    sub_141910();
    uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration);
    char v12 = 4;
    sub_141910();
    LOBYTE(v13) = 5;
    sub_141910();
    LOBYTE(v13) = 6;
    sub_141910();
    LOBYTE(v13) = 7;
    sub_141910();
    LOBYTE(v13) = 8;
    sub_141910();
    LOBYTE(v13) = 9;
    sub_141930();
    LOBYTE(v13) = 10;
    sub_141930();
    LOBYTE(v13) = 11;
    sub_141930();
    LOBYTE(v13) = 12;
    sub_141930();
    LOBYTE(v13) = 13;
    sub_141910();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A9A4()
{
  unint64_t result = qword_17EA98;
  if (!qword_17EA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EA98);
  }
  return result;
}

unint64_t sub_1A9F8()
{
  unint64_t result = qword_17EAA0;
  if (!qword_17EAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EAA0);
  }
  return result;
}

unint64_t sub_1AA4C()
{
  unint64_t result = qword_17EA60;
  if (!qword_17EA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EA60);
  }
  return result;
}

unint64_t sub_1AAA0()
{
  unint64_t result = qword_17EA90;
  if (!qword_17EA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EA90);
  }
  return result;
}

uint64_t sub_1AAF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TimerTimer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TimerTimer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unint64_t sub_1AC98()
{
  return sub_1ACA0(*v0);
}

unint64_t sub_1ACA0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6574617473;
      break;
    case 3:
      unint64_t result = 0x6E696E69616D6572;
      break;
    case 4:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 5:
      unint64_t result = 0x6E6F69746361;
      break;
    case 6:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 7:
      unint64_t result = 0x614E656369766564;
      break;
    case 8:
      return result;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0xD000000000000019;
      break;
    case 13:
      unint64_t result = 0x53444972656D6974;
      break;
    default:
      unint64_t result = 0x6C6562616CLL;
      break;
  }
  return result;
}

uint64_t sub_1AE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1AE2C(a1, a2, a3);
}

uint64_t sub_1AE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v74 = a3;
  uint64_t v5 = sub_5830(&qword_17BE78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v72 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v71 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v71 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v71 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v71 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v71 - v26;
  if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_141AA0() & 1) != 0)
  {
    sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_label, (uint64_t)v27);
    uint64_t v28 = sub_140500();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      uint64_t v30 = (uint64_t)v27;
LABEL_6:
      uint64_t result = sub_AE1A4(v30);
LABEL_7:
      os_log_type_t v32 = v74;
      *(_OWORD *)uint64_t v74 = 0u;
      *((_OWORD *)v32 + 1) = 0u;
      return result;
    }
    uint64_t v33 = v74;
    v74[3] = v28;
    uint64_t v34 = sub_187EC(v33);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v29 + 32))(v34, v27, v28);
  }
  if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_141AA0() & 1) != 0)
  {
    sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_type, (uint64_t)v25);
    uint64_t v35 = sub_140500();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v25, 1, v35) == 1)
    {
      uint64_t v30 = (uint64_t)v25;
      goto LABEL_6;
    }
    uint64_t v37 = v74;
    v74[3] = v35;
    uint64_t v38 = sub_187EC(v37);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v36 + 32))(v38, v25, v35);
  }
  if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (uint64_t result = sub_141AA0(), (result & 1) != 0))
  {
    sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_state, (uint64_t)v22);
    uint64_t v39 = sub_140500();
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v22, 1, v39) == 1)
    {
      uint64_t v30 = (uint64_t)v22;
      goto LABEL_6;
    }
    uint64_t v41 = v74;
    v74[3] = v39;
    uint64_t v42 = sub_187EC(v41);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v40 + 32))(v42, v22, v39);
  }
  if (a1 == 0x6E696E69616D6572 && a2 == 0xED0000656D695467 || (uint64_t result = sub_141AA0(), (result & 1) != 0))
  {
    uint64_t v43 = OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_remainingTime;
LABEL_26:
    uint64_t v44 = *(void *)(v73 + v43);
    if (!v44) {
      goto LABEL_7;
    }
    uint64_t v45 = sub_140430();
    uint64_t v46 = v74;
    v74[3] = v45;
    *uint64_t v46 = v44;
    return swift_retain();
  }
  if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (uint64_t result = sub_141AA0(), (result & 1) != 0))
  {
    uint64_t v43 = OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration;
    goto LABEL_26;
  }
  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_141AA0() & 1) != 0)
  {
    sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_action, (uint64_t)v19);
    uint64_t v47 = sub_140500();
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v19, 1, v47) == 1)
    {
      uint64_t v30 = (uint64_t)v19;
      goto LABEL_6;
    }
    uint64_t v49 = v74;
    v74[3] = v47;
    uint64_t v50 = sub_187EC(v49);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v48 + 32))(v50, v19, v47);
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_141AA0() & 1) != 0)
  {
    sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_roomName, (uint64_t)v16);
    uint64_t v51 = sub_140500();
    uint64_t v52 = *(void *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v16, 1, v51) == 1)
    {
      uint64_t v30 = (uint64_t)v16;
      goto LABEL_6;
    }
    uint64_t v53 = v74;
    v74[3] = v51;
    uint64_t v54 = sub_187EC(v53);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v52 + 32))(v54, v16, v51);
  }
  else if (a1 == 0x614E656369766564 && a2 == 0xEA0000000000656DLL || (sub_141AA0() & 1) != 0)
  {
    sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_deviceName, (uint64_t)v13);
    uint64_t v55 = sub_140500();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v13, 1, v55) == 1)
    {
      uint64_t v30 = (uint64_t)v13;
      goto LABEL_6;
    }
    uint64_t v57 = v74;
    v74[3] = v55;
    uint64_t v58 = sub_187EC(v57);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v56 + 32))(v58, v13, v55);
  }
  else
  {
    if ((a1 != 0xD000000000000010 || a2 != 0x8000000000147420) && (sub_141AA0() & 1) == 0)
    {
      uint64_t result = 0xD000000000000012;
      if (a1 == 0xD000000000000012 && a2 == 0x8000000000147440 || (uint64_t result = sub_141AA0(), (result & 1) != 0))
      {
        uint64_t v63 = OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isInRespondingRoom;
      }
      else
      {
        uint64_t result = 0xD000000000000018;
        if (a1 == 0xD000000000000018 && a2 == 0x8000000000147460 || (uint64_t result = sub_141AA0(), (result & 1) != 0))
        {
          uint64_t v63 = OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isLabelUniqueAcrossGroup;
        }
        else
        {
          uint64_t result = 0xD000000000000013;
          if (a1 == 0xD000000000000013 && a2 == 0x8000000000147480 || (uint64_t result = sub_141AA0(), (result & 1) != 0))
          {
            uint64_t v63 = OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isLabelUniqueInRoom;
          }
          else
          {
            uint64_t result = 0xD000000000000019;
            if (a1 != 0xD000000000000019 || a2 != 0x80000000001474A0)
            {
              uint64_t result = sub_141AA0();
              if ((result & 1) == 0)
              {
                if (a1 != 0x53444972656D6974 || a2 != 0xED0000676E697274)
                {
                  uint64_t result = sub_141AA0();
                  if ((result & 1) == 0) {
                    goto LABEL_7;
                  }
                }
                uint64_t v66 = v72;
                sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_timerIDString, v72);
                uint64_t v67 = sub_140500();
                uint64_t v68 = *(void *)(v67 - 8);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67) == 1)
                {
                  uint64_t v30 = v72;
                  goto LABEL_6;
                }
                uint64_t v69 = v74;
                v74[3] = v67;
                uint64_t v70 = sub_187EC(v69);
                return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v68 + 32))(v70, v72, v67);
              }
            }
            uint64_t v63 = OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isOnlyMatchingTimerInRoom;
          }
        }
      }
      id v64 = v74;
      char v65 = *(unsigned char *)(v73 + v63);
      v74[3] = (uint64_t)&type metadata for Bool;
      *(unsigned char *)id v64 = v65;
      return result;
    }
    sub_AE204(v73 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_targetDeviceType, (uint64_t)v10);
    uint64_t v59 = sub_140500();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v10, 1, v59) == 1)
    {
      uint64_t v30 = (uint64_t)v10;
      goto LABEL_6;
    }
    unsigned __int8 v61 = v74;
    v74[3] = v59;
    uint64_t v62 = sub_187EC(v61);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v60 + 32))(v62, v10, v59);
  }
}

uint64_t sub_1B94C@<X0>(void *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = sub_5830(&qword_17B520);
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1407B0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_5830(&qword_17B528);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [v1 identifier];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_141250();
    uint64_t v36 = v15;
    uint64_t v37 = v14;
  }
  else
  {
    uint64_t v36 = 0xE000000000000000;
    uint64_t v37 = 0;
  }
  uint64_t v16 = sub_13F3C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  id v17 = [v1 label];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v34 = sub_141250();
    uint64_t v35 = v19;
  }
  else
  {
    uint64_t v34 = 0x72656D6954;
    uint64_t v35 = 0xE500000000000000;
  }
  id v20 = [v1 duration];
  uint64_t v21 = v20;
  if (v20)
  {
    [v20 doubleValue];
    uint64_t v23 = v22;

    uint64_t v33 = v23;
  }
  else
  {
    uint64_t v33 = 0;
  }
  id v24 = objc_msgSend(v1, "remainingTime", v33);
  uint64_t v25 = v24;
  uint64_t v26 = (uint64_t)v11;
  if (v24)
  {
    [v24 doubleValue];
    uint64_t v28 = v27;

    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v29 = 0;
  }
  unsigned __int8 v30 = v25 == 0;
  [v1 state];
  uint64_t v31 = sub_140F70();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for PunchOutApp.timer(_:), v5);
  sub_1407A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return SiriTimerSnippetModel.init(timerIdentifier:directInvocation:label:duration:remainingTime:state:punchoutURL:)(v37, v36, v26, v34, v35, v33, v21 == 0, v29, v38, v30, v31, 0, (uint64_t)v4);
}

uint64_t sub_1BC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17B9B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SiriTimePluginModel(uint64_t a1)
{
  return sub_181D4(a1, qword_17B670);
}

unint64_t sub_1BD1C()
{
  unint64_t result = qword_17C348;
  if (!qword_17C348)
  {
    type metadata accessor for SiriTimePluginModel(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17C348);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SiriTimePluginModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *(int *)(type metadata accessor for TimerSelectorModel(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_5830(&qword_17B5B0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithCopy for SiriTimePluginModel(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(int *)(type metadata accessor for TimerSelectorModel(0) + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_5830(&qword_17B5B0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t destroy for SiriTimePluginModel(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for TimerSelectorModel(0) + 20);
    uint64_t v5 = sub_5830(&qword_17B5B0);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

uint64_t sub_1C014(void *a1)
{
  return SiriTimePluginModel.encode(to:)(a1);
}

uint64_t SiriTimePluginModel.encode(to:)(void *a1)
{
  uint64_t v2 = sub_5830(&qword_17B488);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v25 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for TimerSelectorModel(0);
  __chkstk_darwin(v23);
  uint64_t v24 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_5830(&qword_17B490);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SiriTimePluginModel(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_5830(&qword_17B498);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_90A8(a1, a1[3]);
  sub_1C548();
  sub_141B90();
  sub_240CC(v28, (uint64_t)v10, type metadata accessor for SiriTimePluginModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v24;
    sub_1FDE8((uint64_t)v10, v24, type metadata accessor for TimerSelectorModel);
    char v31 = 1;
    sub_1F678();
    uint64_t v16 = v25;
    sub_141900();
    sub_1FDA0(&qword_17B4B0, (void (*)(uint64_t))type metadata accessor for TimerSelectorModel);
    uint64_t v17 = v27;
    sub_141960();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v17);
    sub_1F6CC(v15, type metadata accessor for TimerSelectorModel);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v19 = *v10;
    char v30 = 0;
    sub_1C750();
    sub_141900();
    uint64_t v29 = v19;
    sub_1F72C();
    uint64_t v20 = v22;
    sub_141960();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return swift_bridgeObjectRelease();
  }
}

ValueMetadata *type metadata accessor for TimerSnippetModel()
{
  return &type metadata for TimerSnippetModel;
}

unint64_t sub_1C4A0()
{
  unint64_t result = qword_17B800;
  if (!qword_17B800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B800);
  }
  return result;
}

unint64_t sub_1C4F4()
{
  unint64_t result = qword_17B888;
  if (!qword_17B888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B888);
  }
  return result;
}

unint64_t sub_1C548()
{
  unint64_t result = qword_17B4A0;
  if (!qword_17B4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B4A0);
  }
  return result;
}

unint64_t sub_1C59C()
{
  unint64_t result = qword_17B880;
  if (!qword_17B880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B880);
  }
  return result;
}

uint64_t sub_1C5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SiriTimePluginModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C654()
{
  unint64_t result = qword_17B7F8;
  if (!qword_17B7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B7F8);
  }
  return result;
}

unint64_t sub_1C6A8()
{
  unint64_t result = qword_17B860;
  if (!qword_17B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B860);
  }
  return result;
}

unint64_t sub_1C6FC()
{
  unint64_t result = qword_17B868;
  if (!qword_17B868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B868);
  }
  return result;
}

unint64_t sub_1C750()
{
  unint64_t result = qword_17B4B8;
  if (!qword_17B4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B4B8);
  }
  return result;
}

uint64_t sub_1C7A8()
{
  return sub_1F3AC(*v0);
}

uint64_t sub_1C7C0(void *a1)
{
  return TimerSnippetModel.encode(to:)(a1, *v1);
}

uint64_t TimerSnippetModel.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17B4F8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_90A8(a1, a1[3]);
  sub_1CA60();
  sub_141B90();
  v9[1] = a2;
  sub_5830(&qword_17B508);
  sub_2422C(&qword_17B510, &qword_17B518);
  sub_141960();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C964()
{
  unint64_t result = qword_17B808;
  if (!qword_17B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B808);
  }
  return result;
}

unint64_t sub_1C9B8()
{
  unint64_t result = qword_17B850;
  if (!qword_17B850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B850);
  }
  return result;
}

unint64_t sub_1CA0C()
{
  unint64_t result = qword_17B858;
  if (!qword_17B858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B858);
  }
  return result;
}

unint64_t sub_1CA60()
{
  unint64_t result = qword_17B500;
  if (!qword_17B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B500);
  }
  return result;
}

unsigned char *_s23TimerFlowDelegatePlugin17TimerSnippetModelV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        break;
      case 2:
        *(_WORD *)unint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = 0;
        break;
      case 2:
        *(_WORD *)unint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)unint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CircuitBreakerError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

void *initializeWithCopy for SiriTimerSnippetModel(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  uint64_t v7 = a3[7];
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_13E4B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_5830(&qword_17B520);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (char *)a1 + v14;
  uint64_t v19 = (char *)a2 + v14;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = (char *)a1 + v21;
  uint64_t v25 = (char *)a2 + v21;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CD68(void *a1)
{
  return SiriTimerSnippetModel.encode(to:)(a1);
}

uint64_t SiriTimerSnippetModel.encode(to:)(void *a1)
{
  uint64_t v3 = sub_5830(&qword_17B560);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_5830(&qword_17B568);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_90A8(a1, a1[3]);
  sub_1D24C();
  sub_141B90();
  LOBYTE(v28) = 0;
  uint64_t v10 = v27;
  sub_141920();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v24 = v5;
  uint64_t v27 = v7;
  long long v28 = *(_OWORD *)(v1 + 16);
  char v29 = 1;
  sub_5830(&qword_17B570);
  sub_1D4A4(&qword_17B578, &qword_17B570);
  sub_141960();
  uint64_t v23 = (int *)type metadata accessor for SiriTimerSnippetModel(0);
  long long v28 = *(_OWORD *)(v1 + v23[8]);
  char v29 = 3;
  sub_141960();
  uint64_t v12 = v27;
  uint64_t v13 = (uint64_t *)(v1 + v23[9]);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((unsigned char *)v13 + 8);
  *(void *)&long long v28 = v14;
  BYTE8(v28) = (_BYTE)v13;
  char v29 = 4;
  sub_5830(&qword_17B580);
  sub_1D4A4(&qword_17B588, &qword_17B580);
  sub_141960();
  uint64_t v15 = (uint64_t *)(v1 + v23[10]);
  uint64_t v16 = *v15;
  LOBYTE(v15) = *((unsigned char *)v15 + 8);
  *(void *)&long long v28 = v16;
  BYTE8(v28) = (_BYTE)v15;
  char v29 = 5;
  sub_141960();
  uint64_t v17 = (uint64_t *)(v1 + v23[11]);
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((unsigned char *)v17 + 8);
  *(void *)&long long v28 = v18;
  BYTE8(v28) = (_BYTE)v17;
  char v29 = 6;
  sub_5830(&qword_17B590);
  sub_1D4A4(&qword_17B598, &qword_17B590);
  sub_141960();
  LOBYTE(v28) = 7;
  sub_5830(&qword_17B520);
  sub_24134();
  sub_141960();
  uint64_t v19 = *(void *)(v1 + 32);
  if (!v19) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v6);
  }
  sub_90A8(a1, a1[3]);
  sub_24078();
  uint64_t v20 = v9;
  uint64_t v21 = (uint64_t)v24;
  sub_141B90();
  sub_21B0C(v21, v19);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v6);
}

unint64_t sub_1D24C()
{
  unint64_t result = qword_17B548;
  if (!qword_17B548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B548);
  }
  return result;
}

unint64_t sub_1D2A0()
{
  unint64_t result = qword_17B848;
  if (!qword_17B848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B848);
  }
  return result;
}

unint64_t sub_1D2F4()
{
  unint64_t result = qword_17B810;
  if (!qword_17B810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B810);
  }
  return result;
}

unint64_t sub_1D348()
{
  unint64_t result = qword_17B840;
  if (!qword_17B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B840);
  }
  return result;
}

unint64_t sub_1D39C()
{
  return sub_1D3A4(*v0);
}

unint64_t sub_1D3A4(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x6C6562616CLL;
      break;
    case 4:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 5:
      unint64_t result = 0x6E696E69616D6572;
      break;
    case 6:
      unint64_t result = 0x6574617473;
      break;
    case 7:
      unint64_t result = 0x74756F68636E7570;
      break;
    default:
      unint64_t result = 0x65644972656D6974;
      break;
  }
  return result;
}

uint64_t sub_1D4A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23FA8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SiriTimerSnippetModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SiriTimerSnippetModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t destroy for SiriTimerSnippetModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_13E4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t static SiriTimePluginModel.bundleName.getter()
{
  if (qword_17B110 != -1) {
    swift_once();
  }
  uint64_t v0 = static SiriTimePluginModel.bundleName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1D7B8()
{
  return sub_AD434((void (*)(void))sub_1D7D0);
}

uint64_t sub_1D7D0()
{
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_label);
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_type);
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_state);
  swift_release();
  swift_release();
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_action);
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_roomName);
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_deviceName);
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_targetDeviceType);
  sub_AE1A4(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_timerIDString);
  return v0;
}

uint64_t sub_1D890()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D8A0()
{
  return sub_7892C("TimerFlowFactory: making decideDismissOrDeleteTimerFlow");
}

uint64_t sub_1D8C0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D95C;
  return sub_1D960(a1, v1);
}

uint64_t sub_1D960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D95C;
  return sub_1DFB8(a1, v4);
}

uint64_t sub_1DA00()
{
  if (qword_17B1C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  *(void *)(v0 + 240) = sub_33D8(v1, (uint64_t)qword_17CEE0);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "decideDismissOrDeleteTimerFlow.execute()", v4, 2u);
    swift_slowDealloc();
  }

  sub_140BA0();
  sub_140740();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v5;
  void *v5 = v0;
  v5[1] = sub_1E1F0;
  return SiriTimeDeviceContextProvider.fetchTimerContexts()();
}

uint64_t sub_1DB6C()
{
  uint64_t v1 = sub_141340();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[20];
  if (*(void *)(v1 + 16))
  {
    (*(void (**)(void, unint64_t, void))(v2 + 16))(v0[29], v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v0[20]);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    uint64_t v6 = v3;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    uint64_t v6 = v0[29];
    uint64_t v7 = 1;
  }
  uint64_t v41 = v5;
  v5(v6, v7, 1, v4);
  uint64_t v9 = v0[28];
  uint64_t v8 = v0[29];
  uint64_t v10 = v0[20];
  uint64_t v11 = v0[21];
  swift_bridgeObjectRelease();
  sub_8FE8(v8, v9, &qword_17CD30);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_904C(v0[28], &qword_17CD30);
    uint64_t v12 = sub_141160();
    os_log_type_t v13 = sub_141480();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_0, v12, v13, "DecideDismissOrDeleteTimerFlow: Didn't get a valid halInfo for timer. Running delete timer flow", v14, 2u);
      swift_slowDealloc();
    }
    uint64_t v15 = v0 + 16;
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[27];
    uint64_t v18 = v0[20];
    uint64_t v20 = (uint64_t *)v0[12];
    uint64_t v19 = v0[13];

    sub_3410(v19, (uint64_t)(v0 + 2));
    sub_9AB0((uint64_t)(v0 + 2));
    v41(v17, 1, 1, v18);
    sub_6F5DC(v16, v17, v19, v20);
    sub_904C(v17, &qword_17CD30);
    uint64_t v21 = v0 + 15;
    uint64_t v22 = v0 + 14;
  }
  else
  {
    uint64_t v40 = (uint64_t)(v0 + 7);
    uint64_t v15 = v0 + 23;
    (*(void (**)(void, void, void))(v0[21] + 32))(v0[23], v0[28], v0[20]);
    uint64_t v23 = sub_141160();
    os_log_type_t v24 = sub_141450();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "DecideDismissOrDeleteTimerFlow: Running dismissTimerFlow.", v25, 2u);
      swift_slowDealloc();
    }
    uint64_t v26 = v0[27];
    uint64_t v27 = v0[22];
    uint64_t v28 = v0[23];
    uint64_t v30 = v0[20];
    uint64_t v29 = v0[21];
    uint64_t v31 = v0[19];
    uint64_t v38 = v0[18];
    uint64_t v39 = v0[17];
    uint64_t v32 = v0[13];
    uint64_t v37 = (uint64_t *)v0[12];

    sub_3410(v32, v40);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    v33(v27, v28, v30);
    sub_10F1D4(v40, v27);
    v33(v26, v28, v30);
    v41(v26, 0, 1, v30);
    sub_6F0A0(v31, v26, v32, v37);
    sub_904C(v26, &qword_17CD30);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v31, v39);
    uint64_t v22 = v0 + 20;
    uint64_t v21 = v0 + 21;
  }
  uint64_t v34 = v0[29];
  (*(void (**)(void, void))(*v21 + 8))(*v15, *v22);
  sub_904C(v34, &qword_17CD30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_1DFB8(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_5830((uint64_t *)&unk_17D660);
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v4 = sub_5830(&qword_17CF00);
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v5 = sub_140980();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  uint64_t v6 = sub_140770();
  v2[24] = v6;
  v2[25] = *(void *)(v6 - 8);
  v2[26] = swift_task_alloc();
  sub_5830(&qword_17CD30);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  return _swift_task_switch(sub_1DA00, 0, 0);
}

uint64_t sub_1E1F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 208);
  uint64_t v3 = *(void *)(*(void *)v1 + 200);
  uint64_t v4 = *(void *)(*(void *)v1 + 192);
  *(void *)(*(void *)v1 + 256) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1DB6C, 0, 0);
}

uint64_t _s20HandleIntentStrategyVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

__n128 _s20HandleIntentStrategyVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1E3BC(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17FB48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E420(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E474(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E4C8()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_140980();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t v5 = sub_152A8(v3, v1, v2);
  sub_3358C(v2);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_1E598(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_5830(&qword_17CD30);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1E4C8, 0, 0);
}

uint64_t sub_1E62C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_33048, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1E760(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  void *v5 = v2;
  v5[1] = sub_1E62C;
  return sub_30AF0(a1, a2);
}

uint64_t sub_1E808(void *a1)
{
  type metadata accessor for TimerTimer.Builder(0);
  swift_allocObject();
  uint64_t v2 = sub_17FA8();
  id v3 = [a1 device];
  if (v3 && (uint64_t v4 = v3, v5 = [v3 roomID], v4, v5))
  {
    uint64_t v6 = sub_141250();
    uint64_t v8 = v7;

    id v9 = a1;
    unint64_t v10 = swift_bridgeObjectRetain();
    unint64_t v11 = (unint64_t)sub_529B8(v10, v6, v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  }
  id v12 = [a1 label];
  if (v12)
  {
    os_log_type_t v13 = v12;
    uint64_t v14 = sub_141250();
    unint64_t v16 = v15;

    swift_bridgeObjectRelease();
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (v17)
    {
      id v18 = a1;
      unint64_t v19 = swift_bridgeObjectRetain();
      char v20 = sub_52EE8(v19, v18);
      swift_bridgeObjectRelease();

      *(unsigned char *)(v2 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueInRoom) = (v20 & 1) == 0;
      id v21 = v18;
      unint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_52CA8(v22, v21);
      swift_bridgeObjectRelease();

      id v24 = v21;
      char v25 = sub_52EE8((unint64_t)v23, v24);
      swift_bridgeObjectRelease();

      *(unsigned char *)(v2 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueAcrossGroup) = (v25 & 1) == 0;
    }
  }
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isOnlyMatchingTimerInRoom) = v26 == 0;
  uint64_t v27 = swift_retain();
  uint64_t v28 = sub_174C0(v27, 0);
  swift_release_n();
  return v28;
}

uint64_t sub_1EA94()
{
  sub_1677C();
  uint64_t v0 = sub_13FA40();
  if (v0)
  {
    swift_release();
  }
  else
  {
    if (qword_17B418 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_141170();
    sub_33D8(v1, (uint64_t)qword_180928);
    swift_retain_n();
    uint64_t v2 = sub_141160();
    os_log_type_t v3 = sub_141470();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      sub_13FD20();
      swift_retain();
      uint64_t v5 = sub_141260();
      sub_58C0(v5, v6, &v8);
      sub_1415C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v2, v3, "Fail to build uso entity %s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release_n();
    }
  }
  return v0;
}

uint64_t sub_1EC84@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v42 = a2;
  uint64_t v43 = a3;
  uint64_t v39 = sub_140900();
  uint64_t v4 = *(void *)(v39 - 8);
  uint64_t v5 = __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v35 - v8;
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = sub_140920();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13E400();
  swift_allocObject();
  sub_13E3F0();
  uint64_t v44 = a1;
  sub_140290();
  sub_1F0C4();
  uint64_t v36 = sub_13E3E0();
  unint64_t v16 = v15;
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v11);
  uint64_t v38 = sub_140910();
  uint64_t v37 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_5830(&qword_17BFE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142FB0;
  unint64_t v19 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  uint64_t v20 = v39;
  v19(v10, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v39);
  uint64_t v21 = sub_1408F0();
  uint64_t v23 = v22;
  id v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24(v10, v20);
  uint64_t v35 = v24;
  *(void *)(inited + 32) = v21;
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = 0x657461657263;
  *(void *)(inited + 56) = 0xE600000000000000;
  char v25 = v40;
  v19(v40, enum case for DirectInvocationUtils.Timer.UserInfoKey.usoEntity(_:), v20);
  uint64_t v26 = sub_1408F0();
  uint64_t v28 = v27;
  v24(v25, v20);
  *(void *)(inited + 80) = v26;
  *(void *)(inited + 88) = v28;
  *(void *)(inited + 120) = sub_5830(&qword_17C030);
  uint64_t v29 = v36;
  *(void *)(inited + 96) = v36;
  *(void *)(inited + 104) = v16;
  uint64_t v30 = v41;
  v19(v41, enum case for DirectInvocationUtils.Timer.UserInfoKey.paused(_:), v20);
  sub_34B08(v29, v16);
  uint64_t v31 = sub_1408F0();
  uint64_t v33 = v32;
  v35(v30, v20);
  *(void *)(inited + 128) = v31;
  *(void *)(inited + 136) = v33;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = v42 & 1;
  sub_335EC(inited);
  sub_13F390();
  return sub_34B74(v29, v16);
}

unint64_t sub_1F0C4()
{
  unint64_t result = qword_17C028;
  if (!qword_17C028)
  {
    sub_140290();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17C028);
  }
  return result;
}

uint64_t sub_1F11C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1F164(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1F1AC()
{
  *(_WORD *)&algn_180E38[6] = -4864;
}

uint64_t *SiriTimePluginModel.bundleName.unsafeMutableAddressor()
{
  if (qword_17B110 != -1) {
    swift_once();
  }
  return &static SiriTimePluginModel.bundleName;
}

uint64_t SiriTimePluginModel.snippetHidden(for:idiom:)()
{
  uint64_t v1 = sub_140350();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SiriTimePluginModel(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240CC(v0, (uint64_t)v7, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DeviceIdiom.car(_:), v1);
  char v8 = sub_140340();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1F6CC((uint64_t)v7, type metadata accessor for SiriTimePluginModel);
  return v8 & 1;
}

uint64_t sub_1F3AC(char a1)
{
  if (a1) {
    return 0x6C655372656D6974;
  }
  else {
    return 0x6C754D72656D6974;
  }
}

BOOL sub_1F3F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_1F410()
{
  sub_141B60(*v0);
}

uint64_t sub_1F440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23C70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.remainingTime()
{
  return 0;
}

void sub_1F474(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1F480(uint64_t a1)
{
  unint64_t v2 = sub_1C548();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F4BC(uint64_t a1)
{
  unint64_t v2 = sub_1C548();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1F4F8()
{
  return 1;
}

void sub_1F504()
{
}

uint64_t sub_1F530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23D88(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_1F55C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1F568(uint64_t a1)
{
  unint64_t v2 = sub_1C750();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F5A4(uint64_t a1)
{
  unint64_t v2 = sub_1C750();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1F5E0(uint64_t a1)
{
  unint64_t v2 = sub_1F678();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F61C(uint64_t a1)
{
  unint64_t v2 = sub_1F678();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t type metadata accessor for TimerSelectorModel(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17B7B0);
}

unint64_t sub_1F678()
{
  unint64_t result = qword_17B4A8;
  if (!qword_17B4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B4A8);
  }
  return result;
}

uint64_t sub_1F6CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1F72C()
{
  unint64_t result = qword_17B4C0;
  if (!qword_17B4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B4C0);
  }
  return result;
}

uint64_t SiriTimePluginModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_5830(&qword_17B4C8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_5830(&qword_17B4D0);
  uint64_t v41 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17B4D8);
  uint64_t v44 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SiriTimePluginModel(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  unint64_t v16 = (char *)&v37 - v15;
  __chkstk_darwin(v14);
  id v18 = (char *)&v37 - v17;
  uint64_t v19 = a1[3];
  uint64_t v48 = a1;
  sub_90A8(a1, v19);
  sub_1C548();
  uint64_t v20 = v49;
  sub_141B80();
  if (v20) {
    return _s20HandleIntentStrategyVwxx_1((uint64_t)v48);
  }
  uint64_t v37 = v16;
  uint64_t v38 = v18;
  uint64_t v39 = v13;
  uint64_t v21 = v45;
  uint64_t v22 = v46;
  uint64_t v23 = v47;
  uint64_t v49 = v10;
  uint64_t v24 = sub_1418D0();
  char v25 = v9;
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v31 = sub_1416D0();
    swift_allocError();
    uint64_t v33 = v32;
    sub_5830(&qword_17B4E0);
    *uint64_t v33 = v49;
    sub_141850();
    sub_1416C0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, enum case for DecodingError.typeMismatch(_:), v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v7);
    return _s20HandleIntentStrategyVwxx_1((uint64_t)v48);
  }
  if (*(unsigned char *)(v24 + 32))
  {
    char v52 = 1;
    sub_1F678();
    uint64_t v26 = v23;
    sub_141840();
    type metadata accessor for TimerSelectorModel(0);
    sub_1FDA0(&qword_17B4E8, (void (*)(uint64_t))type metadata accessor for TimerSelectorModel);
    uint64_t v27 = (uint64_t)v39;
    uint64_t v28 = v42;
    sub_1418C0();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v7);
    uint64_t v29 = (uint64_t)v48;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = v27;
  }
  else
  {
    char v51 = 0;
    sub_1C750();
    sub_141840();
    sub_1FE50();
    sub_1418C0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v7);
    uint64_t v29 = (uint64_t)v48;
    uint64_t v35 = v37;
    *uint64_t v37 = v50;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t)v35;
  }
  uint64_t v36 = (uint64_t)v38;
  sub_1FDE8(v30, (uint64_t)v38, type metadata accessor for SiriTimePluginModel);
  sub_1FDE8(v36, v40, type metadata accessor for SiriTimePluginModel);
  return _s20HandleIntentStrategyVwxx_1(v29);
}

uint64_t sub_1FDA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1FDE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1FE50()
{
  unint64_t result = qword_17B4F0;
  if (!qword_17B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B4F0);
  }
  return result;
}

uint64_t sub_1FEA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SiriTimePluginModel.init(from:)(a1, a2);
}

uint64_t TimerSelectorModel.timers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *TimerSelectorModel.timers.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

void *TimerSnippetModel.init(from:)(void *a1)
{
  return sub_23DF8(a1);
}

Swift::Int sub_1FF28()
{
  return sub_141B70();
}

Swift::Int sub_1FF6C()
{
  return sub_141B70();
}

uint64_t sub_1FFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25FCC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1FFD8(uint64_t a1)
{
  unint64_t v2 = sub_1CA60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20014(uint64_t a1)
{
  unint64_t v2 = sub_1CA60();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_20050@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_23DF8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t SiriTimerSnippetModel.timerIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriTimerSnippetModel.timerIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.timerIdToChange()
{
  return 0;
}

uint64_t SiriTimerSnippetModel.directInvocationUri.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriTimerSnippetModel.directInvocationUri.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *SiriTimerSnippetModel.directInvocationUri.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t variable initialization expression of SiriTimerSnippetModel.directInvocationPayload()
{
  return 0;
}

uint64_t SiriTimerSnippetModel.directInvocationPayload.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriTimerSnippetModel.directInvocationPayload.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *SiriTimerSnippetModel.directInvocationPayload.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t variable initialization expression of SiriTimerSnippetModel.punchoutURL@<X0>(uint64_t a1@<X8>)
{
  return sub_23A84((uint64_t (*)(void))&type metadata accessor for URL, a1);
}

uint64_t SiriTimerSnippetModel.punchoutURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SiriTimerSnippetModel(0);
  return sub_8FE8(v1 + *(int *)(v3 + 28), a1, &qword_17B520);
}

uint64_t SiriTimerSnippetModel.punchoutURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SiriTimerSnippetModel(0) + 28);

  return sub_24010(a1, v3);
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *SiriTimerSnippetModel.punchoutURL.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t SiriTimerSnippetModel.label.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SiriTimerSnippetModel(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriTimerSnippetModel.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SiriTimerSnippetModel(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *SiriTimerSnippetModel.label.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t SiriTimerSnippetModel.duration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SiriTimerSnippetModel(0) + 36));
}

uint64_t SiriTimerSnippetModel.duration.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SiriTimerSnippetModel(0);
  uint64_t v6 = v2 + *(int *)(result + 36);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *SiriTimerSnippetModel.duration.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t SiriTimerSnippetModel.remainingTime.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SiriTimerSnippetModel(0) + 40));
}

uint64_t SiriTimerSnippetModel.remainingTime.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SiriTimerSnippetModel(0);
  uint64_t v6 = v2 + *(int *)(result + 40);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *SiriTimerSnippetModel.remainingTime.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t SiriTimerSnippetModel.state.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SiriTimerSnippetModel(0) + 44));
}

uint64_t SiriTimerSnippetModel.state.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SiriTimerSnippetModel(0);
  uint64_t v6 = v2 + *(int *)(result + 44);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *SiriTimerSnippetModel.state.modify())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t SiriTimerSnippetModel.init(timerIdentifier:directInvocation:label:duration:remainingTime:state:punchoutURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, unsigned __int8 a10, uint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v58 = a8;
  int v57 = a7;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v53 = a13;
  uint64_t v54 = a4;
  uint64_t v17 = sub_5830(&qword_17B528);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = &v44[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v22 = &v44[-v21];
  uint64_t v23 = (int *)type metadata accessor for SiriTimerSnippetModel(0);
  a9[3] = 0;
  a9[4] = 0;
  a9[2] = 0;
  uint64_t v24 = (uint64_t)a9 + v23[7];
  uint64_t v25 = sub_13E4B0();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v51 = v24;
  v26(v24, 1, 1, v25);
  uint64_t v27 = (void *)((char *)a9 + v23[8]);
  *uint64_t v27 = 0;
  v27[1] = 0;
  uint64_t v28 = (char *)a9 + v23[9];
  *(void *)uint64_t v28 = 0;
  uint64_t v50 = v28;
  v28[8] = 1;
  uint64_t v29 = (char *)a9 + v23[10];
  *(void *)uint64_t v29 = 0;
  uint64_t v49 = v29;
  v29[8] = 1;
  uint64_t v30 = (char *)a9 + v23[11];
  *(void *)uint64_t v30 = 0;
  uint64_t v48 = v30;
  v30[8] = 1;
  *a9 = a1;
  a9[1] = a2;
  uint64_t v52 = a3;
  sub_8FE8(a3, (uint64_t)v22, &qword_17B528);
  uint64_t v31 = sub_13F3C0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v22, 1, v31) == 1)
  {
    sub_904C((uint64_t)v22, &qword_17B528);
    uint64_t v34 = 0;
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v34 = sub_13F3A0();
    uint64_t v35 = v36;
    (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v22, v31);
  }
  int v47 = a12;
  uint64_t v46 = a11;
  int v45 = a10;
  swift_bridgeObjectRelease();
  a9[2] = v34;
  a9[3] = v35;
  uint64_t v37 = v52;
  sub_8FE8(v52, (uint64_t)v20, &qword_17B528);
  if (v33(v20, 1, v31) == 1)
  {
    sub_904C(v37, &qword_17B528);
    sub_904C((uint64_t)v20, &qword_17B528);
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = sub_13F3B0();
    sub_904C(v37, &qword_17B528);
    (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v20, v31);
  }
  swift_bridgeObjectRelease();
  a9[4] = v38;
  sub_24010(v53, v51);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v40 = v55;
  *uint64_t v27 = v54;
  v27[1] = v40;
  uint64_t v41 = v50;
  *uint64_t v50 = v56;
  *((unsigned char *)v41 + 8) = v57 & 1;
  uint64_t v42 = v49;
  *uint64_t v49 = v58;
  *((unsigned char *)v42 + 8) = v45 & 1;
  uint64_t v43 = v48;
  void *v48 = v46;
  *((unsigned char *)v43 + 8) = v47 & 1;
  return result;
}

uint64_t SiriTimerSnippetModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_5830(&qword_17B530);
  __chkstk_darwin(v3 - 8);
  uint64_t v53 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_5830(&qword_17B538);
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17B520);
  __chkstk_darwin(v7 - 8);
  uint64_t v58 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_5830(&qword_17B540);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SiriTimerSnippetModel(0);
  uint64_t v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14[3] = 0;
  v14[4] = 0;
  v14[2] = 0;
  uint64_t v15 = (uint64_t)v14 + v12[9];
  uint64_t v16 = sub_13E4B0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v60 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v18 = (uint64_t *)((char *)v14 + v12[10]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v62 = v14;
  uint64_t v63 = v18;
  uint64_t v19 = (char *)v14 + v12[11];
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  uint64_t v20 = (char *)v14 + v12[12];
  *(void *)uint64_t v20 = 0;
  v20[8] = 1;
  uint64_t v21 = (uint64_t *)((char *)v14 + v12[13]);
  *uint64_t v21 = 0;
  *((unsigned char *)v21 + 8) = 1;
  uint64_t v22 = a1[3];
  unsigned __int8 v61 = a1;
  sub_90A8(a1, v22);
  sub_1D24C();
  uint64_t v23 = v64;
  sub_141B80();
  if (v23)
  {
    _s20HandleIntentStrategyVwxx_1((uint64_t)v61);
    uint64_t v30 = v60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_904C(v30, &qword_17B520);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = v19;
    uint64_t v51 = v21;
    uint64_t v64 = v16;
    uint64_t v25 = v57;
    uint64_t v26 = (uint64_t)v58;
    char v71 = 0;
    uint64_t v27 = v10;
    uint64_t v28 = sub_141860();
    if (v29) {
      uint64_t v32 = v28;
    }
    else {
      uint64_t v32 = 0;
    }
    unint64_t v33 = 0xE000000000000000;
    if (v29) {
      unint64_t v33 = v29;
    }
    uint64_t v34 = v62;
    *uint64_t v62 = v32;
    v34[1] = v33;
    char v70 = 1;
    uint64_t v35 = sub_141860();
    uint64_t v36 = v63;
    v34[2] = v35;
    v34[3] = v37;
    char v69 = 3;
    *uint64_t v36 = sub_141860();
    v36[1] = v38;
    char v68 = 4;
    *(void *)uint64_t v24 = sub_141880();
    v24[8] = v39 & 1;
    char v67 = 5;
    *(void *)uint64_t v20 = sub_141880();
    v20[8] = v40 & 1;
    char v66 = 6;
    uint64_t v41 = sub_141890();
    uint64_t v42 = v51;
    *uint64_t v51 = v41;
    *((unsigned char *)v42 + 8) = v43 & 1;
    char v65 = 7;
    sub_1FDA0(&qword_17B550, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_1418A0();
    uint64_t v44 = v25;
    uint64_t v64 = (uint64_t)v27;
    sub_24010(v26, v60);
    int v45 = v61;
    sub_90A8(v61, v61[3]);
    sub_24078();
    uint64_t v46 = v53;
    sub_141B80();
    uint64_t v48 = v54;
    uint64_t v47 = v55;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v46, 0, 1, v55);
    uint64_t v49 = (uint64_t)v52;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v52, v46, v47);
    uint64_t v50 = sub_20FE4(v49);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v64, v59);
    swift_bridgeObjectRelease();
    v34[4] = v50;
    sub_240CC((uint64_t)v34, v56, type metadata accessor for SiriTimerSnippetModel);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v45);
    return sub_1F6CC((uint64_t)v34, type metadata accessor for SiriTimerSnippetModel);
  }
}

uint64_t sub_20FE4(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17B530);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_5830(&qword_17B538);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v95 = (char *)v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = (void *)sub_335EC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v98 = v5;
  uint64_t v8 = sub_1418D0();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
LABEL_62:
    swift_bridgeObjectRelease();
    return (uint64_t)v101;
  }
  uint64_t v97 = v4;
  uint64_t v96 = (void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v94 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v93 = (void (**)(char *, uint64_t))(v6 + 8);
  v92[1] = v8;
  uint64_t v10 = (unsigned char *)(v8 + 56);
  uint64_t v99 = a1;
  while (1)
  {
    uint64_t v12 = *((void *)v10 - 3);
    uint64_t v13 = *((void *)v10 - 2);
    uint64_t v14 = *((void *)v10 - 1);
    char v15 = *v10;
    *(void *)&long long v104 = v12;
    *((void *)&v104 + 1) = v13;
    uint64_t v105 = v14;
    LOBYTE(v106) = v15;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_141890();
    if ((v17 & 1) == 0) {
      break;
    }
    *(void *)&long long v104 = v12;
    *((void *)&v104 + 1) = v13;
    uint64_t v105 = v14;
    LOBYTE(v106) = v15;
    uint64_t v28 = sub_141880();
    if ((v29 & 1) == 0)
    {
      id v106 = &type metadata for Double;
      *(void *)&long long v104 = v28;
      sub_174B0(&v104, &v103);
      uint64_t v30 = v101;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v102 = v30;
      unint64_t v21 = sub_16F44(v12, v13);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        goto LABEL_66;
      }
      char v36 = v32;
      if (v30[3] >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_BDA4C();
        }
      }
      else
      {
        sub_BCEC8(v35, isUniquelyReferenced_nonNull_native);
        unint64_t v37 = sub_16F44(v12, v13);
        if ((v36 & 1) != (v38 & 1)) {
          goto LABEL_73;
        }
        unint64_t v21 = v37;
      }
      unint64_t v75 = v102;
      uint64_t v101 = v102;
      if ((v36 & 1) == 0)
      {
        v102[(v21 >> 6) + 8] |= 1 << v21;
        uint64_t v87 = (uint64_t *)(v101[6] + 16 * v21);
        uint64_t *v87 = v12;
        v87[1] = v13;
        sub_174B0(&v103, (_OWORD *)(v101[7] + 32 * v21));
        id v77 = v101;
        uint64_t v88 = v101[2];
        BOOL v79 = __OFADD__(v88, 1);
        uint64_t v80 = v88 + 1;
        if (v79) {
          goto LABEL_71;
        }
        goto LABEL_61;
      }
      goto LABEL_3;
    }
    *(void *)&long long v104 = v12;
    *((void *)&v104 + 1) = v13;
    uint64_t v105 = v14;
    LOBYTE(v106) = v15;
    uint64_t v39 = sub_141860();
    if (v40)
    {
      id v106 = &type metadata for String;
      *(void *)&long long v104 = v39;
      *((void *)&v104 + 1) = v40;
      sub_174B0(&v104, &v103);
      uint64_t v42 = v101;
      char v43 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v102 = v42;
      unint64_t v21 = sub_16F44(v12, v13);
      uint64_t v45 = v42[2];
      BOOL v46 = (v44 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46)) {
        goto LABEL_64;
      }
      char v48 = v44;
      if (v42[3] >= v47)
      {
        if ((v43 & 1) == 0) {
          sub_BDA4C();
        }
      }
      else
      {
        sub_BCEC8(v47, v43);
        unint64_t v49 = sub_16F44(v12, v13);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_73;
        }
        unint64_t v21 = v49;
      }
      unint64_t v75 = v102;
      uint64_t v101 = v102;
      if ((v48 & 1) == 0)
      {
        v102[(v21 >> 6) + 8] |= 1 << v21;
        uint64_t v81 = (uint64_t *)(v101[6] + 16 * v21);
        *uint64_t v81 = v12;
        v81[1] = v13;
        sub_174B0(&v103, (_OWORD *)(v101[7] + 32 * v21));
        id v77 = v101;
        uint64_t v82 = v101[2];
        BOOL v79 = __OFADD__(v82, 1);
        uint64_t v80 = v82 + 1;
        if (v79) {
          goto LABEL_69;
        }
        goto LABEL_61;
      }
LABEL_3:
      uint64_t v11 = (_OWORD *)(v75[7] + 32 * v21);
      _s20HandleIntentStrategyVwxx_1((uint64_t)v11);
      sub_174B0(&v103, v11);
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    *(void *)&long long v104 = v12;
    *((void *)&v104 + 1) = v13;
    uint64_t v105 = v14;
    LOBYTE(v106) = v15;
    char v41 = sub_141870();
    if (v41 != 2)
    {
      id v106 = &type metadata for Bool;
      LOBYTE(v104) = v41 & 1;
      sub_174B0(&v104, &v103);
      char v66 = v101;
      char v67 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v102 = v66;
      unint64_t v21 = sub_16F44(v12, v13);
      uint64_t v69 = v66[2];
      BOOL v70 = (v68 & 1) == 0;
      uint64_t v71 = v69 + v70;
      if (__OFADD__(v69, v70)) {
        goto LABEL_67;
      }
      char v72 = v68;
      if (v66[3] >= v71)
      {
        if ((v67 & 1) == 0) {
          sub_BDA4C();
        }
      }
      else
      {
        sub_BCEC8(v71, v67);
        unint64_t v73 = sub_16F44(v12, v13);
        if ((v72 & 1) != (v74 & 1)) {
          goto LABEL_73;
        }
        unint64_t v21 = v73;
      }
      unint64_t v75 = v102;
      uint64_t v101 = v102;
      if ((v72 & 1) == 0)
      {
        v102[(v21 >> 6) + 8] |= 1 << v21;
        uint64_t v89 = (uint64_t *)(v101[6] + 16 * v21);
        *uint64_t v89 = v12;
        v89[1] = v13;
        sub_174B0(&v103, (_OWORD *)(v101[7] + 32 * v21));
        id v77 = v101;
        uint64_t v90 = v101[2];
        BOOL v79 = __OFADD__(v90, 1);
        uint64_t v80 = v90 + 1;
        if (v79) {
          goto LABEL_72;
        }
        goto LABEL_61;
      }
      goto LABEL_3;
    }
    uint64_t v100 = v9;
    *(void *)&long long v104 = v12;
    *((void *)&v104 + 1) = v13;
    uint64_t v105 = v14;
    LOBYTE(v106) = v15;
    sub_24078();
    uint64_t v51 = v97;
    uint64_t v52 = v98;
    sub_141840();
    (*v96)(v51, 0, 1, v52);
    uint64_t v53 = v95;
    (*v94)(v95, v51, v52);
    uint64_t v54 = sub_20FE4(v53);
    id v106 = (void *)sub_5830(&qword_17B9C0);
    *(void *)&long long v104 = v54;
    sub_174B0(&v104, &v103);
    uint64_t v55 = v101;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v102 = v55;
    unint64_t v58 = sub_16F44(v12, v13);
    uint64_t v59 = v55[2];
    BOOL v60 = (v57 & 1) == 0;
    uint64_t v61 = v59 + v60;
    if (__OFADD__(v59, v60)) {
      goto LABEL_65;
    }
    char v62 = v57;
    uint64_t v63 = v52;
    if (v55[3] >= v61)
    {
      uint64_t v9 = v100;
      if ((v56 & 1) == 0) {
        sub_BDA4C();
      }
    }
    else
    {
      sub_BCEC8(v61, v56);
      unint64_t v64 = sub_16F44(v12, v13);
      uint64_t v9 = v100;
      if ((v62 & 1) != (v65 & 1)) {
        goto LABEL_73;
      }
      unint64_t v58 = v64;
    }
    uint64_t v101 = v102;
    if (v62)
    {
      os_log_type_t v83 = (_OWORD *)(v102[7] + 32 * v58);
      _s20HandleIntentStrategyVwxx_1((uint64_t)v83);
      sub_174B0(&v103, v83);
    }
    else
    {
      v102[(v58 >> 6) + 8] |= 1 << v58;
      int v84 = (uint64_t *)(v101[6] + 16 * v58);
      *int v84 = v12;
      v84[1] = v13;
      sub_174B0(&v103, (_OWORD *)(v101[7] + 32 * v58));
      uint64_t v85 = v101[2];
      BOOL v79 = __OFADD__(v85, 1);
      uint64_t v86 = v85 + 1;
      if (v79) {
        goto LABEL_70;
      }
      v101[2] = v86;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v93)(v95, v63);
LABEL_5:
    v10 += 32;
    if (!--v9) {
      goto LABEL_62;
    }
  }
  id v106 = &type metadata for Int;
  *(void *)&long long v104 = v16;
  sub_174B0(&v104, &v103);
  uint64_t v18 = v101;
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v102 = v18;
  unint64_t v21 = sub_16F44(v12, v13);
  uint64_t v22 = v18[2];
  BOOL v23 = (v20 & 1) == 0;
  uint64_t v24 = v22 + v23;
  if (!__OFADD__(v22, v23))
  {
    char v25 = v20;
    if (v18[3] >= v24)
    {
      if ((v19 & 1) == 0) {
        sub_BDA4C();
      }
    }
    else
    {
      sub_BCEC8(v24, v19);
      unint64_t v26 = sub_16F44(v12, v13);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_73;
      }
      unint64_t v21 = v26;
    }
    unint64_t v75 = v102;
    uint64_t v101 = v102;
    if (v25) {
      goto LABEL_3;
    }
    v102[(v21 >> 6) + 8] |= 1 << v21;
    id v76 = (uint64_t *)(v101[6] + 16 * v21);
    uint64_t *v76 = v12;
    v76[1] = v13;
    sub_174B0(&v103, (_OWORD *)(v101[7] + 32 * v21));
    id v77 = v101;
    uint64_t v78 = v101[2];
    BOOL v79 = __OFADD__(v78, 1);
    uint64_t v80 = v78 + 1;
    if (v79) {
      goto LABEL_68;
    }
LABEL_61:
    v77[2] = v80;
    swift_bridgeObjectRetain();
    goto LABEL_4;
  }
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  uint64_t result = sub_141AE0();
  __break(1u);
  return result;
}

uint64_t sub_21B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v32 = sub_5830(&qword_17B560);
  __chkstk_darwin(v32);
  uint64_t v28 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  char v27 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v30 = (char *)&type metadata for Any + 8;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_23:
    char v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    if (*(void *)(a2 + 16))
    {
      swift_bridgeObjectRetain_n();
      unint64_t v20 = sub_16F44(v18, v19);
      if (v21)
      {
        sub_5B50(*(void *)(a2 + 56) + 32 * v20, (uint64_t)&v41);
      }
      else
      {
        long long v41 = 0u;
        long long v42 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
      swift_bridgeObjectRetain();
    }
    sub_8FE8((uint64_t)&v41, (uint64_t)&v37, &qword_17B9B0);
    if (v40)
    {
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_34;
      }
      uint64_t v37 = v18;
      uint64_t v38 = v19;
      uint64_t v39 = 0;
      LOBYTE(v40) = 1;
      sub_141920();
      if (v2)
      {
        swift_bridgeObjectRelease();
LABEL_65:
        sub_904C((uint64_t)&v41, &qword_17B9B0);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      sub_904C((uint64_t)&v41, &qword_17B9B0);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      sub_904C((uint64_t)&v37, &qword_17B9B0);
LABEL_34:
      sub_8FE8((uint64_t)&v41, (uint64_t)&v37, &qword_17B9B0);
      if (v40)
      {
        if (swift_dynamicCast())
        {
          uint64_t v37 = v18;
          uint64_t v38 = v19;
          uint64_t v39 = 0;
          LOBYTE(v40) = 1;
          sub_141950();
          if (v2) {
            goto LABEL_65;
          }
          goto LABEL_5;
        }
      }
      else
      {
        sub_904C((uint64_t)&v37, &qword_17B9B0);
      }
      sub_8FE8((uint64_t)&v41, (uint64_t)&v37, &qword_17B9B0);
      if (v40)
      {
        if (swift_dynamicCast())
        {
          uint64_t v37 = v18;
          uint64_t v38 = v19;
          uint64_t v39 = 0;
          LOBYTE(v40) = 1;
          sub_141940();
          if (v2) {
            goto LABEL_65;
          }
          goto LABEL_5;
        }
      }
      else
      {
        sub_904C((uint64_t)&v37, &qword_17B9B0);
      }
      sub_8FE8((uint64_t)&v41, (uint64_t)&v37, &qword_17B9B0);
      if (!v40)
      {
        sub_904C((uint64_t)&v37, &qword_17B9B0);
        goto LABEL_48;
      }
      if (swift_dynamicCast())
      {
        uint64_t v37 = v18;
        uint64_t v38 = v19;
        uint64_t v39 = 0;
        LOBYTE(v40) = 1;
        sub_141930();
        if (v2) {
          goto LABEL_65;
        }
LABEL_5:
        sub_904C((uint64_t)&v41, &qword_17B9B0);
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
LABEL_48:
        sub_8FE8((uint64_t)&v41, (uint64_t)&v37, &qword_17B9B0);
        if (v40)
        {
          sub_5830(&qword_17B9C0);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_53;
          }
          uint64_t v22 = v6;
          uint64_t v29 = v33;
          uint64_t v37 = v18;
          uint64_t v38 = v19;
          uint64_t v39 = 0;
          LOBYTE(v40) = 1;
          sub_24078();
          BOOL v23 = v28;
          uint64_t v24 = v32;
          sub_141900();
          swift_bridgeObjectRelease();
          sub_21B0C(v23, v29);
          swift_bridgeObjectRelease();
          (*v27)(v23, v24);
          uint64_t result = sub_904C((uint64_t)&v41, &qword_17B9B0);
          if (v2) {
            return swift_release();
          }
          uint64_t v6 = v22;
        }
        else
        {
          sub_904C((uint64_t)&v37, &qword_17B9B0);
LABEL_53:
          sub_8FE8((uint64_t)&v41, (uint64_t)&v37, &qword_17B9B0);
          if (!v40)
          {
            sub_904C((uint64_t)&v37, &qword_17B9B0);
            goto LABEL_58;
          }
          sub_5830(&qword_17B9B8);
          if (swift_dynamicCast())
          {
            uint64_t v25 = v33;
            uint64_t v33 = v18;
            uint64_t v34 = v19;
            uint64_t v35 = 0;
            char v36 = 1;
            sub_1418F0();
            swift_bridgeObjectRelease();
            sub_2220C((uint64_t)&v37, v25);
            swift_bridgeObjectRelease();
            _s20HandleIntentStrategyVwxx_1((uint64_t)&v37);
            uint64_t result = sub_904C((uint64_t)&v41, &qword_17B9B0);
            if (v2) {
              return swift_release();
            }
          }
          else
          {
LABEL_58:
            uint64_t v37 = v18;
            uint64_t v38 = v19;
            uint64_t v39 = 0;
            LOBYTE(v40) = 1;
            sub_141970();
            sub_904C((uint64_t)&v41, &qword_17B9B0);
            uint64_t result = swift_bridgeObjectRelease();
            if (v2) {
              return swift_release();
            }
          }
        }
      }
    }
  }
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_68;
  }
  if (v11 >= v31) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15)
  {
LABEL_22:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_23;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v31) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v11 + 5;
  if (v11 + 5 >= v31) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_21:
    int64_t v11 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_2220C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_5830(&qword_17B560);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    return result;
  }
  uint64_t v19 = result;
  unint64_t v20 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + 32;
  uint64_t v18 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v21 = a2;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_5B50(v11, (uint64_t)v24);
    sub_5B50((uint64_t)v24, (uint64_t)v22);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_18874(a1, *(void *)(a1 + 24));
    sub_141A40();
    if (v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    _s20HandleIntentStrategyVwxx_1((uint64_t)v24);
    swift_bridgeObjectRelease();
LABEL_5:
    v11 += 32;
    if (!--v10) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_5B50((uint64_t)v24, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    sub_18874(a1, *(void *)(a1 + 24));
    uint64_t v12 = v3;
    sub_141A70();
    goto LABEL_4;
  }
  sub_5B50((uint64_t)v24, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    sub_18874(a1, *(void *)(a1 + 24));
    uint64_t v12 = v3;
    sub_141A60();
    goto LABEL_4;
  }
  sub_5B50((uint64_t)v24, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    sub_18874(a1, *(void *)(a1 + 24));
    uint64_t v12 = v3;
    sub_141A50();
LABEL_4:
    uint64_t v3 = v12;
    _s20HandleIntentStrategyVwxx_1((uint64_t)v24);
    if (v12) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_5;
  }
  sub_5B50((uint64_t)v24, (uint64_t)v22);
  sub_5830(&qword_17B9C0);
  if (swift_dynamicCast())
  {
    uint64_t v13 = v23;
    uint64_t v14 = *(void *)(a1 + 24);
    uint64_t v17 = *(void *)(a1 + 32);
    sub_18874(a1, v14);
    sub_24078();
    unint64_t v15 = v20;
    sub_141A20();
    sub_21B0C(v15, v13);
    if (v3)
    {
      swift_bridgeObjectRelease();
      (*v18)(v15, v19);
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    (*v18)(v15, v19);
    goto LABEL_21;
  }
  sub_5B50((uint64_t)v24, (uint64_t)v22);
  sub_5830(&qword_17B9B8);
  if (!swift_dynamicCast())
  {
    sub_18874(a1, *(void *)(a1 + 24));
    sub_141A80();
    if (v3) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  uint64_t v16 = v23;
  sub_18874(a1, *(void *)(a1 + 24));
  sub_141A30();
  sub_2220C(v22, v16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    _s20HandleIntentStrategyVwxx_1((uint64_t)v22);
LABEL_21:
    _s20HandleIntentStrategyVwxx_1((uint64_t)v24);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v22);
LABEL_23:
  _s20HandleIntentStrategyVwxx_1((uint64_t)v24);
  return swift_bridgeObjectRelease();
}

void *sub_226AC(void *a1)
{
  uint64_t v2 = sub_5830(&qword_17B530);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_5830(&qword_17B538);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_90A8(a1, a1[3]);
  if ((sub_141A00() & 1) == 0)
  {
    uint64_t v11 = (void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v24 = (void (**)(char *, uint64_t))(v6 + 8);
    while (1)
    {
      sub_18874((uint64_t)a1, a1[3]);
      uint64_t v12 = sub_1419C0();
      if (v13)
      {
        char v27 = &type metadata for String;
        *(void *)&long long v26 = v12;
        *((void *)&v26 + 1) = v13;
      }
      else
      {
        sub_18874((uint64_t)a1, a1[3]);
        uint64_t v14 = sub_1419F0();
        if ((v15 & 1) == 0)
        {
          uint64_t v16 = &type metadata for Int;
LABEL_14:
          char v27 = v16;
          *(void *)&long long v26 = v14;
          goto LABEL_22;
        }
        sub_18874((uint64_t)a1, a1[3]);
        uint64_t v14 = sub_1419E0();
        if ((v17 & 1) == 0)
        {
          uint64_t v16 = &type metadata for Double;
          goto LABEL_14;
        }
        sub_18874((uint64_t)a1, a1[3]);
        char v18 = sub_1419D0();
        if (v18 == 2)
        {
          sub_18874((uint64_t)a1, a1[3]);
          sub_24078();
          sub_1419A0();
          (*v11)(v4, 0, 1, v5);
          (*v25)(v8, v4, v5);
          uint64_t v19 = sub_20FE4(v8);
          char v27 = (void *)sub_5830(&qword_17B9C0);
          *(void *)&long long v26 = v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_E0270(0, v9[2] + 1, 1, v9);
          }
          unint64_t v21 = v9[2];
          unint64_t v20 = v9[3];
          if (v21 >= v20 >> 1) {
            uint64_t v9 = sub_E0270((void *)(v20 > 1), v21 + 1, 1, v9);
          }
          void v9[2] = v21 + 1;
          sub_174B0(&v26, &v9[4 * v21 + 4]);
          (*v24)(v8, v5);
          goto LABEL_5;
        }
        char v27 = &type metadata for Bool;
        LOBYTE(v26) = v18 & 1;
      }
LABEL_22:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_E0270(0, v9[2] + 1, 1, v9);
      }
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      if (v23 >= v22 >> 1) {
        uint64_t v9 = sub_E0270((void *)(v22 > 1), v23 + 1, 1, v9);
      }
      void v9[2] = v23 + 1;
      sub_174B0(&v26, &v9[4 * v23 + 4]);
LABEL_5:
      sub_90A8(a1, a1[3]);
      if (sub_141A00()) {
        return v9;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

BOOL sub_22CB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_22CCC()
{
  Swift::UInt v1 = *v0;
  sub_141B50();
  sub_141B60(v1);
  return sub_141B70();
}

Swift::Int sub_22D14()
{
  Swift::UInt v1 = *v0;
  sub_141B50();
  sub_141B60(v1);
  return sub_141B70();
}

uint64_t sub_22D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26060(a1, a2);
  *a3 = result;
  return result;
}

void sub_22D80(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_22D8C(uint64_t a1)
{
  unint64_t v2 = sub_1D24C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22DC8(uint64_t a1)
{
  unint64_t v2 = sub_1D24C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_22E04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SiriTimerSnippetModel.init(from:)(a1, a2);
}

uint64_t sub_22E1C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_22E30()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_22E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_141980();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = a1;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_22E98(uint64_t a1)
{
  unint64_t v2 = sub_24078();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22ED4(uint64_t a1)
{
  unint64_t v2 = sub_24078();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TimerSelectorModel.timers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t property wrapper backing initializer of TimerSelectorModel.header()
{
  return sub_13E660();
}

uint64_t TimerSelectorModel.header.getter()
{
  type metadata accessor for TimerSelectorModel(0);
  sub_5830(&qword_17B5B0);
  sub_13E680();
  return v1;
}

uint64_t TimerSelectorModel.header.setter()
{
  return sub_13E690();
}

void (*TimerSelectorModel.header.modify(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for TimerSelectorModel(0);
  sub_5830(&qword_17B5B0);
  v2[4] = sub_13E670();
  return sub_23060;
}

void sub_23060(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t TimerSelectorModel.init(timers:header:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for TimerSelectorModel(0);
  return sub_13E660();
}

uint64_t sub_2310C(char a1)
{
  if (a1) {
    return 0x726564616568;
  }
  else {
    return 0x7372656D6974;
  }
}

uint64_t sub_23134()
{
  return sub_2310C(*v0);
}

uint64_t sub_2313C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_263A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23164(uint64_t a1)
{
  unint64_t v2 = sub_241D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_231A0(uint64_t a1)
{
  unint64_t v2 = sub_241D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TimerSelectorModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_5830(&qword_17B5B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_90A8(a1, a1[3]);
  sub_241D8();
  sub_141B90();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_5830(&qword_17B508);
  sub_2422C(&qword_17B510, &qword_17B518);
  sub_141960();
  if (!v2)
  {
    type metadata accessor for TimerSelectorModel(0);
    v10[6] = 1;
    sub_5830(&qword_17B5B0);
    sub_242C0(&qword_17B5C8);
    sub_141960();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TimerSelectorModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_5830(&qword_17B5B0);
  uint64_t v22 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_5830(&qword_17B5D0);
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TimerSelectorModel(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_90A8(a1, a1[3]);
  sub_241D8();
  sub_141B80();
  if (v2) {
    return _s20HandleIntentStrategyVwxx_1((uint64_t)a1);
  }
  unint64_t v21 = a1;
  uint64_t v11 = v10;
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  sub_5830(&qword_17B508);
  char v28 = 0;
  sub_2422C(&qword_17B5D8, &qword_17B5E0);
  uint64_t v14 = v26;
  sub_1418C0();
  uint64_t v19 = v11;
  uint64_t v20 = v29;
  *(void *)uint64_t v11 = v29;
  char v27 = 1;
  sub_242C0(&qword_17B5E8);
  sub_1418C0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  uint64_t v15 = *(int *)(v8 + 20);
  uint64_t v16 = (uint64_t)v19;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v19[v15], v5, v12);
  sub_240CC(v16, v23, type metadata accessor for TimerSelectorModel);
  _s20HandleIntentStrategyVwxx_1((uint64_t)v21);
  return sub_1F6CC(v16, type metadata accessor for TimerSelectorModel);
}

uint64_t sub_23768@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TimerSelectorModel.init(from:)(a1, a2);
}

uint64_t sub_23780(void *a1)
{
  return TimerSelectorModel.encode(to:)(a1);
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.pauseCatFamilySimple()
{
  return sub_239E0((void (*)(void))type metadata accessor for PauseTimerCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.pauseCatFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for PauseTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.resumeCatFamilySimple()
{
  return sub_239E0((void (*)(void))type metadata accessor for ResumeTimerCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.resumeCatFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for ResumeTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.pausePatternFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for PauseTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.resumePatternFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for ResumeTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.genericPatternFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for TimerBaseCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.followupPluginAction@<X0>(uint64_t a1@<X8>)
{
  return sub_23A84((uint64_t (*)(void))&type metadata accessor for PluginAction, a1);
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.operation()
{
  return 8;
}

uint64_t variable initialization expression of UndoTimerChangeStateFlow.failureReason@<X0>(uint64_t a1@<X8>)
{
  return sub_23A84((uint64_t (*)(void))&type metadata accessor for SiriTimeEventSender.ReasonDescription, a1);
}

uint64_t variable initialization expression of UndoCreateTimerFlow.catFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for DeleteTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of UndoCreateTimerFlow.patternFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for DeleteTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of RecreateDeletedTimerFlow.catFamilySimple()
{
  return sub_239E0((void (*)(void))type metadata accessor for CreateTimerCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of RecreateDeletedTimerFlow.catFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for CreateTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t variable initialization expression of RecreateDeletedTimerFlow.patternFamily()
{
  return sub_239E0((void (*)(void))type metadata accessor for CreateTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:));
}

uint64_t sub_239E0(void (*a1)(void), uint64_t (*a2)(char *, void))
{
  uint64_t v4 = sub_140590();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(0);
  sub_140580();
  return a2(v6, 0);
}

uint64_t variable initialization expression of RecreateDeletedTimerFlow.shouldPause()
{
  return 0;
}

uint64_t sub_23A84@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

_OWORD *sub_23AF8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_16F44(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a4 & 1) == 0)
  {
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_BDA4C();
      goto LABEL_7;
    }
    sub_BCEC8(v17, a4 & 1);
    unint64_t v23 = sub_16F44(a2, a3);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_141AE0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    sub_174B0((_OWORD *)(v20[7] + 32 * v14), a5);
    unint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
    return sub_174B0(a1, v21);
  }
LABEL_13:
  sub_BD938(v14, a2, a3, a1, v20);
  *a5 = 0u;
  a5[1] = 0u;

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_23C70(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C754D72656D6974 && a2 == 0xEA00000000006974;
  if (v3 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C655372656D6974 && a2 == 0xED0000726F746365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_141AA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23D7C()
{
  return 12383;
}

uint64_t sub_23D88(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_141AA0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void *sub_23DF8(void *a1)
{
  uint64_t v3 = sub_5830((uint64_t *)&unk_17B9D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_90A8(a1, a1[3]);
  sub_1CA60();
  sub_141B80();
  if (v1)
  {
    _s20HandleIntentStrategyVwxx_1((uint64_t)a1);
  }
  else
  {
    sub_5830(&qword_17B508);
    sub_2422C(&qword_17B5D8, &qword_17B5E0);
    sub_1418C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    _s20HandleIntentStrategyVwxx_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_23FA8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for SiriTimerSnippetModel(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17B700);
}

uint64_t sub_24010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17B520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24078()
{
  unint64_t result = qword_17B558;
  if (!qword_17B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B558);
  }
  return result;
}

uint64_t sub_240CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24134()
{
  unint64_t result = qword_17B5A0;
  if (!qword_17B5A0)
  {
    sub_23FA8(&qword_17B520);
    sub_1FDA0(&qword_17B5A8, (void (*)(uint64_t))&type metadata accessor for URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B5A0);
  }
  return result;
}

unint64_t sub_241D8()
{
  unint64_t result = qword_17B5C0;
  if (!qword_17B5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B5C0);
  }
  return result;
}

uint64_t sub_2422C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23FA8(&qword_17B508);
    sub_1FDA0(a2, (void (*)(uint64_t))type metadata accessor for SiriTimerSnippetModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23FA8(&qword_17B5B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24328()
{
  return sub_1FDA0(&qword_17B5F0, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
}

uint64_t sub_24370()
{
  return sub_1FDA0(&qword_17B5F8, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
}

uint64_t sub_243C0()
{
  return sub_1FDA0(&qword_17B4E8, (void (*)(uint64_t))type metadata accessor for TimerSelectorModel);
}

uint64_t sub_24408()
{
  return sub_1FDA0(&qword_17B4B0, (void (*)(uint64_t))type metadata accessor for TimerSelectorModel);
}

void *assignWithCopy for SiriTimePluginModel(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1F6CC((uint64_t)a1, type metadata accessor for SiriTimePluginModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(int *)(type metadata accessor for TimerSelectorModel(0) + 20);
      char v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_5830(&qword_17B5B0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for SiriTimePluginModel(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for TimerSelectorModel(0) + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_5830(&qword_17B5B0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for SiriTimePluginModel(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1F6CC((uint64_t)a1, type metadata accessor for SiriTimePluginModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for TimerSelectorModel(0) + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_5830(&qword_17B5B0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriTimePluginModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SiriTimePluginModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24770()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24780()
{
  uint64_t result = type metadata accessor for TimerSelectorModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SiriTimerSnippetModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[7];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    uint64_t v11 = sub_13E4B0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v10, 1, v11))
    {
      uint64_t v13 = sub_5830(&qword_17B520);
      memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    char v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (char *)v4 + v16;
    unint64_t v21 = (char *)a2 + v16;
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = a3[10];
    uint64_t v23 = a3[11];
    char v24 = (char *)v4 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = (char *)v4 + v23;
    char v27 = (char *)a2 + v23;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for SiriTimerSnippetModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_13E4B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17B520);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  char v24 = (char *)a2 + v22;
  LOBYTE(v21) = v24[8];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v21;
  uint64_t v25 = a3[11];
  uint64_t v26 = (char *)a1 + v25;
  char v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  return a1;
}

uint64_t initializeWithTake for SiriTimerSnippetModel(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_13E4B0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_5830(&qword_17B520);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  uint64_t v16 = a3[10];
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  return a1;
}

void *assignWithTake for SiriTimerSnippetModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_13E4B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_5830(&qword_17B520);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  char v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *(void *)char v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  char v27 = (char *)a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[11];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriTimerSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_25048);
}

uint64_t sub_25048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17B520);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SiriTimerSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_25110);
}

uint64_t sub_25110(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17B520);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_251BC()
{
  sub_25278();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25278()
{
  if (!qword_17B710)
  {
    sub_13E4B0();
    unint64_t v0 = sub_1415B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_17B710);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TimerSelectorModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_5830(&qword_17B5B0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t destroy for TimerSelectorModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_5830(&qword_17B5B0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for TimerSelectorModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_5830(&qword_17B5B0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for TimerSelectorModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_5830(&qword_17B5B0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for TimerSelectorModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_5830(&qword_17B5B0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for TimerSelectorModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_5830(&qword_17B5B0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimerSelectorModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_25658);
}

uint64_t sub_25658(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17B5B0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TimerSelectorModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_25720);
}

void *sub_25720(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17B5B0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_257CC()
{
  sub_25868();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25868()
{
  if (!qword_17B7C0)
  {
    unint64_t v0 = sub_13E6A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_17B7C0);
    }
  }
}

ValueMetadata *type metadata accessor for TimerSelectorModel.CodingKeys()
{
  return &type metadata for TimerSelectorModel.CodingKeys;
}

unsigned char *sub_258F8(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriTimerSnippetModel.CodingKeys()
{
  return &type metadata for SiriTimerSnippetModel.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONCodingKeys(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for JSONCodingKeys()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSONCodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSONCodingKeys(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 initializeWithTake for JSONCodingKeys(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSONCodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONCodingKeys(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONCodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONCodingKeys()
{
  return &type metadata for JSONCodingKeys;
}

ValueMetadata *type metadata accessor for TimerSnippetModel.CodingKeys()
{
  return &type metadata for TimerSnippetModel.CodingKeys;
}

uint64_t _s23TimerFlowDelegatePlugin18TimerSelectorModelV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23TimerFlowDelegatePlugin18TimerSelectorModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25C50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25C78(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SiriTimePluginModel.CodingKeys()
{
  return &type metadata for SiriTimePluginModel.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriTimePluginModel.TimerMultiCodingKeys()
{
  return &type metadata for SiriTimePluginModel.TimerMultiCodingKeys;
}

ValueMetadata *type metadata accessor for SiriTimePluginModel.TimerSelectorCodingKeys()
{
  return &type metadata for SiriTimePluginModel.TimerSelectorCodingKeys;
}

unint64_t sub_25CE0()
{
  unint64_t result = qword_17B7F0;
  if (!qword_17B7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B7F0);
  }
  return result;
}

unint64_t sub_25D48()
{
  unint64_t result = qword_17B818;
  if (!qword_17B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B818);
  }
  return result;
}

unint64_t sub_25DA0()
{
  unint64_t result = qword_17B820;
  if (!qword_17B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B820);
  }
  return result;
}

unint64_t sub_25DF8()
{
  unint64_t result = qword_17B828;
  if (!qword_17B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B828);
  }
  return result;
}

unint64_t sub_25E50()
{
  unint64_t result = qword_17B830;
  if (!qword_17B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B830);
  }
  return result;
}

unint64_t sub_25EA8()
{
  unint64_t result = qword_17B838;
  if (!qword_17B838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B838);
  }
  return result;
}

unint64_t sub_25F18()
{
  unint64_t result = qword_17B870;
  if (!qword_17B870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B870);
  }
  return result;
}

unint64_t sub_25F70()
{
  unint64_t result = qword_17B878;
  if (!qword_17B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17B878);
  }
  return result;
}

uint64_t sub_25FCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7372656D6974 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_141AA0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2604C()
{
  return 0x7372656D6974;
}

uint64_t sub_26060(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65644972656D6974 && a2 == 0xEF7265696669746ELL;
  if (v3 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000001476B0 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000000001476D0 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E696E69616D6572 && a2 == 0xED0000656D695467 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74756F68636E7570 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_141AA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_263A8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7372656D6974 && a2 == 0xE600000000000000;
  if (v3 || (sub_141AA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_141AA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_26484()
{
  if (*(void *)(v0 + 40)) {
    _s20HandleIntentStrategyVwxx_1(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_264DC()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17BD40);
  sub_33D8(v0, (uint64_t)qword_17BD40);
  return sub_140E60();
}

uint64_t sub_26528@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B118 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17BD40);
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "CreateTimer.NeedsConfirmationStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = enum case for DecideAction.PromptExpectation.confirmation(_:);
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_5EE54(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_267A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_5830((uint64_t *)&unk_17CCE0);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_13F0B0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  sub_5830(&qword_17F3E0);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v6 = sub_13F0C0();
  v3[15] = v6;
  v3[16] = *(void *)(v6 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v7 = sub_13F3E0();
  v3[18] = v7;
  v3[19] = *(void *)(v7 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v8 = sub_13F3C0();
  v3[21] = v8;
  v3[22] = *(void *)(v8 - 8);
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_26A30, 0, 0);
}

uint64_t sub_26A30()
{
  uint64_t v50 = v0;
  if (qword_17B118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17BD40);
  int v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "CreateTimer.NeedsConfirmationStrategy.parseConfirmationResponse() called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 144);

  sub_13F370();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7) == enum case for Parse.directInvocation(_:))
  {
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 112);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 152) + 96))(v11, *(void *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v11, v10);
    sub_1408D0();
    int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 168);
    if (v15 != 1)
    {
      uint64_t v41 = *(void *)(v0 + 128);
      uint64_t v40 = *(void *)(v0 + 136);
      uint64_t v42 = *(void *)(v0 + 120);
      uint64_t v43 = *(void *)(v0 + 104);
      (*(void (**)(uint64_t, void, uint64_t))(v41 + 32))(v40, *(void *)(v0 + 112), v42);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v43, v40, v42);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v42);
      sub_13F1F0();
      sub_140CA0();
      sub_13F190();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
      goto LABEL_14;
    }
    uint64_t v19 = *(void *)(v0 + 112);
    (*(void (**)(void, void))(v17 + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
    sub_904C(v19, &qword_17F3E0);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
  }
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v21 = *(void *)(v0 + 72);
  uint64_t v22 = *(void *)(v0 + 80);
  sub_13F210();
  uint64_t v23 = sub_13F0A0();
  uint64_t v25 = v24;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v26(v20, v21);
  v27._rawValue = &off_173C98;
  v52._countAndFlagsBits = v23;
  v52._object = v25;
  unint64_t v28 = sub_141820(v27, v52);
  swift_bridgeObjectRelease();
  if (v28 > 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 16))(*(void *)(v0 + 64), *(void *)(v0 + 40), *(void *)(v0 + 48));
    uint64_t v32 = sub_141160();
    os_log_type_t v33 = sub_141470();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = *(void *)(v0 + 88);
      uint64_t v48 = *(void *)(v0 + 72);
      uint64_t v35 = *(void *)(v0 + 56);
      uint64_t v46 = *(void *)(v0 + 64);
      uint64_t v47 = *(void *)(v0 + 48);
      char v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)char v36 = 136315138;
      sub_13F210();
      uint64_t v37 = sub_13F0A0();
      unint64_t v39 = v38;
      v26(v34, v48);
      *(void *)(v0 + 16) = sub_58C0(v37, v39, &v49);
      sub_1415C0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v46, v47);
      _os_log_impl(&dword_0, v32, v33, "Received unsupported parameter name: %s", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    }
    *(unsigned char *)(v0 + 192) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
    swift_allocError();
    sub_140830();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v44 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_17;
  }
  uint64_t v29 = *(void *)(v0 + 120);
  uint64_t v30 = *(void *)(v0 + 128);
  uint64_t v31 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v31, enum case for ConfirmationResponse.confirmed(_:), v29);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
  sub_13F1F0();
  sub_140CA0();
  sub_13F190();
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v44 = *(uint64_t (**)(void))(v0 + 8);
LABEL_17:
  return v44();
}

uint64_t sub_27110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a1;
  v3[28] = a3;
  sub_140590();
  v3[29] = swift_task_alloc();
  sub_5830(&qword_17BE70);
  v3[30] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  uint64_t v4 = sub_13F040();
  v3[34] = v4;
  v3[35] = *(void *)(v4 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  unsigned char v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[42] = v5;
  v3[43] = *(void *)(v5 - 8);
  v3[44] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v3[45] = v6;
  v3[46] = *(void *)(v6 - 8);
  v3[47] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v3[48] = v7;
  v3[49] = *(void *)(v7 - 8);
  v3[50] = swift_task_alloc();
  uint64_t v8 = sub_140730();
  v3[51] = v8;
  v3[52] = *(void *)(v8 - 8);
  v3[53] = swift_task_alloc();
  uint64_t v9 = sub_13EFF0();
  v3[54] = v9;
  v3[55] = *(void *)(v9 - 8);
  v3[56] = swift_task_alloc();
  uint64_t v10 = sub_13F0B0();
  v3[57] = v10;
  v3[58] = *(void *)(v10 - 8);
  v3[59] = swift_task_alloc();
  uint64_t v11 = sub_13ECE0();
  v3[60] = v11;
  v3[61] = *(void *)(v11 - 8);
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  return _swift_task_switch(sub_2754C, 0, 0);
}

uint64_t sub_2754C()
{
  uint64_t v102 = v0;
  if (qword_17B118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[42], (uint64_t)qword_17BD40);
  int v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "CreateTimer.NeedsConfirmationStrategy.makePromptForConfirmation() called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[58];
  uint64_t v6 = v0[59];
  uint64_t v7 = v0[57];

  sub_13EC60();
  sub_5830((uint64_t *)&unk_17CCE0);
  sub_13F210();
  uint64_t v8 = sub_13F0A0();
  uint64_t v10 = v9;
  v0[64] = v9;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  sub_11838C(1);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  uint64_t v98 = v8;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    v101[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    v0[26] = sub_58C0(v8, (unint64_t)v10, v101);
    sub_1415C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v11, v12, "Parameter name: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v15 = v0[52];
  uint64_t v14 = v0[53];
  uint64_t v16 = v0[51];
  sub_140720();
  BOOL v17 = sub_140710();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  if (!v17)
  {
    v38._rawValue = &off_173C98;
    v105._countAndFlagsBits = v8;
    v105._object = v10;
    Swift::Int v39 = sub_141820(v38, v105);
    swift_bridgeObjectRelease();
    if (v39 == 1)
    {
      if (qword_17B198 != -1) {
        swift_once();
      }
      uint64_t v47 = (void *)sub_13F1F0();
      id v48 = [v47 label];

      uint64_t v49 = v0[31];
      if (v48)
      {
        sub_1414A0();

        uint64_t v50 = sub_140500();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
      }
      else
      {
        uint64_t v77 = sub_140500();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v49, 1, 1, v77);
      }
      uint64_t v78 = (void *)swift_task_alloc();
      v0[85] = v78;
      *uint64_t v78 = v0;
      v78[1] = sub_2A4C0;
      uint64_t v79 = v0[37];
      uint64_t v80 = v0[31];
      return sub_7090C(v79, v80);
    }
    if (v39)
    {
      uint64_t v51 = sub_141160();
      os_log_type_t v52 = sub_141480();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v53 = 0;
        _os_log_impl(&dword_0, v51, v52, "Parameter name is not supported.", v53, 2u);
        swift_slowDealloc();
      }
      uint64_t v55 = v0[62];
      uint64_t v54 = v0[63];
      uint64_t v56 = v0[60];
      uint64_t v57 = v0[61];

      sub_13EC80();
      unint64_t v58 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v0[91] = v58;
      v0[92] = (v57 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v58(v54, v56);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v54, v55, v56);
      type metadata accessor for TimerBaseCATs_Async();
      sub_140580();
      v0[93] = sub_140470();
      uint64_t v99 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
      uint64_t v59 = (void *)swift_task_alloc();
      v0[94] = v59;
      void *v59 = v0;
      v59[1] = sub_2B688;
      uint64_t v60 = v0[36];
      unint64_t v61 = 0xD000000000000029;
      char v62 = "timerBase#intentHandledIncompleteResponse";
    }
    else
    {
      uint64_t v40 = (void *)sub_13F1F0();
      [v40 type];

      uint64_t v41 = sub_140F50();
      if (v41 == sub_140F50())
      {
        if (qword_17B198 != -1) {
          swift_once();
        }
        uint64_t v42 = v0[33];
        sub_141270();
        uint64_t v43 = sub_140500();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
        char v44 = (void *)swift_task_alloc();
        v0[79] = v44;
        *char v44 = v0;
        v44[1] = sub_29418;
        uint64_t v45 = v0[40];
        uint64_t v46 = v0[33];
LABEL_63:
        return sub_70CD0(v45, v46);
      }
      sub_1408B0();
      sub_1408A0();
      sub_140890();
      swift_release();
      sub_90A8(v0 + 12, v0[15]);
      char v73 = sub_13EC20();
      _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 12));
      if ((v73 & 1) == 0)
      {
        if (qword_17B198 != -1) {
          swift_once();
        }
        uint64_t v92 = v0[32];
        uint64_t v93 = sub_140500();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v92, 1, 1, v93);
        uint64_t v94 = (void *)swift_task_alloc();
        v0[83] = v94;
        *uint64_t v94 = v0;
        v94[1] = sub_29FE8;
        uint64_t v45 = v0[38];
        uint64_t v46 = v0[32];
        goto LABEL_63;
      }
      if (qword_17B198 != -1) {
        swift_once();
      }
      uint64_t v99 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
      char v74 = (void *)swift_task_alloc();
      v0[81] = v74;
      *char v74 = v0;
      v74[1] = sub_298EC;
      uint64_t v60 = v0[39];
      unint64_t v61 = 0xD000000000000018;
      char v62 = "createTimer#confirmSleep";
    }
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v99)(v60, v61, (unint64_t)(v62 - 32) | 0x8000000000000000, _swiftEmptyArrayStorage);
  }
  uint64_t v18 = (void *)sub_13F050();

  uint64_t v20 = sub_1415A0();
  uint64_t v22 = v21;

  v0[65] = v22;
  if (v22)
  {
    uint64_t v23 = (void *)sub_13F050();
    uint64_t v25 = v24;

    uint64_t v26 = sub_1415A0();
    uint64_t v28 = v27;

    v0[66] = v28;
    if (v28)
    {
      uint64_t v96 = v26;
      uint64_t v29 = v0[44];
      uint64_t v31 = v0[42];
      uint64_t v30 = v0[43];
      (*(void (**)(void, void, void))(v0[46] + 104))(v0[47], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[45]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v1, v31);
      mach_absolute_time();
      sub_1406B0();
      swift_bridgeObjectRetain();
      v32._rawValue = &off_173C98;
      v104._countAndFlagsBits = v98;
      v104._object = v10;
      Swift::Int v33 = sub_141820(v32, v104);
      swift_bridgeObjectRelease();
      if (v33)
      {
        swift_bridgeObjectRelease();
        if (v33 == 1)
        {
          if (qword_17B1A0 != -1) {
            swift_once();
          }
          uint64_t v34 = v0[28];
          uint64_t v35 = (void *)swift_task_alloc();
          v0[69] = v35;
          v35[2] = v34;
          v35[3] = v96;
          v35[4] = v28;
          v35[5] = v20;
          v35[6] = v22;
          char v36 = (void *)swift_task_alloc();
          v0[70] = v36;
          *char v36 = v0;
          v36[1] = sub_28AD4;
          return sub_5886C((uint64_t)sub_2D238, (uint64_t)v35);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = sub_141160();
          os_log_type_t v82 = sub_141480();
          if (os_log_type_enabled(v81, v82))
          {
            os_log_type_t v83 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v83 = 0;
            _os_log_impl(&dword_0, v81, v82, "Parameter name or type is not supported.", v83, 2u);
            swift_slowDealloc();
          }
          uint64_t v85 = v0[62];
          uint64_t v84 = v0[63];
          uint64_t v86 = v0[60];
          uint64_t v87 = v0[61];

          sub_13EC80();
          (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v84, v86);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v84, v85, v86);
          if (qword_17B1A0 != -1) {
            swift_once();
          }
          uint64_t v88 = sub_140560();
          sub_1408B0();
          sub_1408A0();
          sub_140890();
          swift_release();
          uint64_t v89 = sub_140550();
          v0[72] = v89;
          sub_5830(&qword_17F3D0);
          uint64_t v90 = swift_allocObject();
          *(void *)(v90 + 32) = 0x656369766564;
          *(void *)(v90 + 40) = 0xE600000000000000;
          *(void *)(v90 + 72) = v88;
          uint64_t v100 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
          v0[73] = v90;
          *(_OWORD *)(v90 + 16) = xmmword_142D50;
          *(void *)(v90 + 48) = v89;
          swift_retain();
          id v91 = (void *)swift_task_alloc();
          v0[74] = v91;
          void *v91 = v0;
          v91[1] = sub_28CCC;
          return v100(0xD000000000000011, 0x8000000000147810, v90);
        }
      }
      else
      {
        if (qword_17B1A0 != -1) {
          swift_once();
        }
        uint64_t v75 = qword_180F00;
        uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_17C7F8 + dword_17C7F8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v76 = (void *)swift_task_alloc();
        v0[67] = v76;
        void *v76 = v0;
        v76[1] = sub_28664;
        return v97(v75, v98, v10, v96, v28, v20, v22);
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = sub_141160();
  os_log_type_t v64 = sub_141470();
  if (os_log_type_enabled(v63, v64))
  {
    char v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v65 = 0;
    _os_log_impl(&dword_0, v63, v64, "Could not create direct invocation for confirm or reject actions.", v65, 2u);
    swift_slowDealloc();
  }

  sub_5830((uint64_t *)&unk_17F3C0);
  sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
  swift_allocError();
  unsigned char *v66 = 0;
  swift_willThrow();
  uint64_t v67 = v0[63];
  uint64_t v68 = v0[61];
  uint64_t v95 = v0[60];
  uint64_t v70 = v0[55];
  uint64_t v69 = v0[56];
  uint64_t v71 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v95);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v72 = (uint64_t (*)(void))v0[1];
  return v72();
}

uint64_t sub_28664(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 544) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (v1)
  {
    return _swift_task_switch(sub_28870, 0, 0);
  }
  else
  {
    v4[76] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[77] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_29134;
    uint64_t v7 = v4[63];
    uint64_t v8 = v4[56];
    uint64_t v9 = v4[50];
    uint64_t v10 = v4[27];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_28870()
{
  (*(void (**)(void, void))(v0[49] + 8))(v0[50], v0[48]);
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_28AD4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 568) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_2BC00, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[76] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[77] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_29134;
    uint64_t v7 = v4[63];
    uint64_t v8 = v4[56];
    uint64_t v9 = v4[50];
    uint64_t v10 = v4[27];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_28CCC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[17] = v2;
  v3[18] = a1;
  v3[19] = v1;
  v3[75] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_28EC0;
  }
  else {
    uint64_t v4 = sub_28E08;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_28E08()
{
  swift_release();
  v0[76] = v0[18];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[77] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_29134;
  uint64_t v2 = v0[63];
  uint64_t v3 = v0[56];
  uint64_t v4 = v0[50];
  uint64_t v5 = v0[27];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_28EC0()
{
  uint64_t v2 = v0[49];
  uint64_t v1 = v0[50];
  uint64_t v3 = v0[48];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[63];
  uint64_t v5 = v0[61];
  uint64_t v11 = v0[60];
  uint64_t v7 = v0[55];
  uint64_t v6 = v0[56];
  uint64_t v8 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_29134()
{
  *(void *)(*(void *)v1 + 624) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2BE64;
  }
  else {
    uint64_t v2 = sub_29248;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_29248()
{
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 448);
  uint64_t v6 = *(void *)(v0 + 432);
  uint64_t v8 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 400);
  uint64_t v9 = *(void *)(v0 + 384);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_29418()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 640) = v0;
  swift_task_dealloc();
  sub_904C(*(void *)(v2 + 264), &qword_17BE78);
  if (v0) {
    uint64_t v3 = sub_2C0D8;
  }
  else {
    uint64_t v3 = sub_29554;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_29554()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 320), *(void *)(v0 + 272));
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  if (sub_13EC30())
  {
    uint64_t v1 = *(void *)(v0 + 504);
    uint64_t v2 = *(void *)(v0 + 488);
    uint64_t v15 = *(void *)(v0 + 480);
    uint64_t v4 = *(void *)(v0 + 440);
    uint64_t v3 = *(void *)(v0 + 448);
    uint64_t v5 = *(void *)(v0 + 432);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 280);
    sub_53A58(v1, (unint64_t)_swiftEmptyArrayStorage, v3, *(uint64_t **)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v15);
    _s20HandleIntentStrategyVwxx_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  if (sub_13F020() == 0xD000000000000018 && v11 == 0x80000000001477F0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_141AA0();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 712) = v13;
      void *v13 = v0;
      uint64_t v14 = sub_2B010;
      goto LABEL_11;
    }
  }
  uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDA0 + dword_17DDA0);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 696) = v13;
  void *v13 = v0;
  uint64_t v14 = sub_2A998;
LABEL_11:
  v13[1] = v14;
  return v16(1);
}

uint64_t sub_298EC()
{
  *(void *)(*(void *)v1 + 656) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_29D9C;
  }
  else {
    uint64_t v2 = sub_29A00;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_29A00()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 312), *(void *)(v0 + 272));
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  if (sub_13EC30())
  {
    uint64_t v1 = *(void *)(v0 + 504);
    uint64_t v2 = *(void *)(v0 + 488);
    uint64_t v15 = *(void *)(v0 + 480);
    uint64_t v4 = *(void *)(v0 + 440);
    uint64_t v3 = *(void *)(v0 + 448);
    uint64_t v5 = *(void *)(v0 + 432);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 280);
    sub_53A58(v1, (unint64_t)_swiftEmptyArrayStorage, v3, *(uint64_t **)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v15);
    _s20HandleIntentStrategyVwxx_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  if (sub_13F020() == 0xD000000000000018 && v11 == 0x80000000001477F0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_141AA0();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 712) = v13;
      void *v13 = v0;
      uint64_t v14 = sub_2B010;
      goto LABEL_11;
    }
  }
  uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDA0 + dword_17DDA0);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 696) = v13;
  void *v13 = v0;
  uint64_t v14 = sub_2A998;
LABEL_11:
  v13[1] = v14;
  return v16(1);
}

uint64_t sub_29D9C()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_29FE8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 672) = v0;
  swift_task_dealloc();
  sub_904C(*(void *)(v2 + 256), &qword_17BE78);
  if (v0) {
    uint64_t v3 = sub_2C324;
  }
  else {
    uint64_t v3 = sub_2A124;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_2A124()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 304), *(void *)(v0 + 272));
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  if (sub_13EC30())
  {
    uint64_t v1 = *(void *)(v0 + 504);
    uint64_t v2 = *(void *)(v0 + 488);
    uint64_t v15 = *(void *)(v0 + 480);
    uint64_t v4 = *(void *)(v0 + 440);
    uint64_t v3 = *(void *)(v0 + 448);
    uint64_t v5 = *(void *)(v0 + 432);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 280);
    sub_53A58(v1, (unint64_t)_swiftEmptyArrayStorage, v3, *(uint64_t **)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v15);
    _s20HandleIntentStrategyVwxx_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  if (sub_13F020() == 0xD000000000000018 && v11 == 0x80000000001477F0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_141AA0();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 712) = v13;
      void *v13 = v0;
      uint64_t v14 = sub_2B010;
      goto LABEL_11;
    }
  }
  uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDA0 + dword_17DDA0);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 696) = v13;
  void *v13 = v0;
  uint64_t v14 = sub_2A998;
LABEL_11:
  v13[1] = v14;
  return v16(1);
}

uint64_t sub_2A4C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 688) = v0;
  swift_task_dealloc();
  sub_904C(*(void *)(v2 + 248), &qword_17BE78);
  if (v0) {
    uint64_t v3 = sub_2C570;
  }
  else {
    uint64_t v3 = sub_2A5FC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_2A5FC()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 296), *(void *)(v0 + 272));
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  if (sub_13EC30())
  {
    uint64_t v1 = *(void *)(v0 + 504);
    uint64_t v2 = *(void *)(v0 + 488);
    uint64_t v15 = *(void *)(v0 + 480);
    uint64_t v4 = *(void *)(v0 + 440);
    uint64_t v3 = *(void *)(v0 + 448);
    uint64_t v5 = *(void *)(v0 + 432);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 280);
    sub_53A58(v1, (unint64_t)_swiftEmptyArrayStorage, v3, *(uint64_t **)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v15);
    _s20HandleIntentStrategyVwxx_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  if (sub_13F020() == 0xD000000000000018 && v11 == 0x80000000001477F0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_141AA0();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 712) = v13;
      void *v13 = v0;
      uint64_t v14 = sub_2B010;
      goto LABEL_11;
    }
  }
  uint64_t v16 = (uint64_t (*)(char))((char *)&dword_17DDA0 + dword_17DDA0);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 696) = v13;
  void *v13 = v0;
  uint64_t v14 = sub_2A998;
LABEL_11:
  v13[1] = v14;
  return v16(1);
}

uint64_t sub_2A998(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[20] = v2;
  v3[21] = a1;
  v3[22] = v1;
  v3[88] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2ADA0;
  }
  else {
    uint64_t v4 = sub_2AAB4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_2AAB4()
{
  uint64_t v13 = *(void *)(v0 + 480);
  uint64_t v14 = *(void *)(v0 + 504);
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v10 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v11 = *(void *)(v0 + 272);
  uint64_t v12 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(uint64_t **)(v0 + 216);
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_13EBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v5, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v5, 0, 1, v3);
  uint64_t v7 = sub_13F420();
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  v6[3] = v7;
  v6[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_187EC(v6);
  sub_13EE90();
  swift_bridgeObjectRelease();
  sub_904C(v0 + 56, &qword_17BE88);
  sub_904C(v5, &qword_17BE70);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2ADA0()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[41], v0[34]);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2B010(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[23] = v2;
  unsigned char v3[24] = a1;
  v3[25] = v1;
  v3[90] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2B418;
  }
  else {
    uint64_t v4 = sub_2B12C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_2B12C()
{
  uint64_t v13 = *(void *)(v0 + 480);
  uint64_t v14 = *(void *)(v0 + 504);
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v10 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v11 = *(void *)(v0 + 272);
  uint64_t v12 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(uint64_t **)(v0 + 216);
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_13EBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v5, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v5, 0, 1, v3);
  uint64_t v7 = sub_13F420();
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  v6[3] = v7;
  v6[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_187EC(v6);
  sub_13EE90();
  swift_bridgeObjectRelease();
  sub_904C(v0 + 56, &qword_17BE88);
  sub_904C(v5, &qword_17BE70);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2B418()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[41], v0[34]);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2B688()
{
  *(void *)(*(void *)v1 + 760) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2B9AC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_2B7A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_2B7A4()
{
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[91];
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  uint64_t v6 = v0[41];
  uint64_t v7 = v0[35];
  uint64_t v8 = v0[34];
  uint64_t v9 = (uint64_t *)v0[27];
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v6, v0[36], v8);
  sub_53A58(v1, (unint64_t)_swiftEmptyArrayStorage, v3, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v12(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2B9AC()
{
  swift_release();
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2BC00()
{
  (*(void (**)(void, void))(v0[49] + 8))(v0[50], v0[48]);
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2BE64()
{
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 384);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 504);
  uint64_t v5 = *(void *)(v0 + 488);
  uint64_t v11 = *(void *)(v0 + 480);
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v8 = *(void *)(v0 + 432);
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_2C0D8()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2C324()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2C570()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[61];
  uint64_t v8 = v0[60];
  uint64_t v4 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v5 = v0[54];
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2C7BC(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17BE78);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - v6;
  sub_5830((uint64_t *)&unk_17CCE0);
  uint64_t v8 = (void *)sub_13F1F0();
  id v9 = [v8 label];

  if (v9)
  {
    sub_1414A0();

    uint64_t v10 = sub_140500();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
  }
  else
  {
    uint64_t v10 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  }
  uint64_t TimerPromptConfirmSlotLabelParameters = type metadata accessor for CreateTimerPromptConfirmSlotLabelParameters(0);
  sub_2D248((uint64_t)v7, a1 + *(int *)(TimerPromptConfirmSlotLabelParameters + 24));
  swift_bridgeObjectRetain();
  sub_1404D0();
  sub_140500();
  uint64_t v12 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v12(v5, 0, 1, v10);
  sub_2D248((uint64_t)v5, a1);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v12(v5, 0, 1, v10);
  return sub_2D248((uint64_t)v5, a1 + *(int *)(TimerPromptConfirmSlotLabelParameters + 20));
}

uint64_t sub_2C9F8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26528(a1, a2);
}

uint64_t sub_2CA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1D95C;
  return sub_267A8(a1, a2, a3);
}

uint64_t sub_2CAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v8 = v4;
  v8[1] = sub_15180;
  return NeedsConfirmationFlowStrategyAsync.shouldRequestUnlockForConfirmation(itemToConfirm:resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_2CB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_159A4;
  return sub_27110(a1, v6, a3);
}

uint64_t sub_2CC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v10 = v5;
  v10[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:resolveRecord:)(a1, a2, a3, v11, a5);
}

uint64_t sub_2CCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v10 = v5;
  v10[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:resolveRecord:)(a1, a2, a3, v11, a5);
}

uint64_t sub_2CDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v8 = v4;
  v8[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_2CE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v8 = v4;
  v8[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_2CF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v12 = v6;
  v12[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_2D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v12 = v6;
  v12[1] = sub_1D95C;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_2D0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t v15 = _s25NeedsConfirmationStrategyCMa();
  *uint64_t v14 = v7;
  v14[1] = sub_1D95C;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v15, a7);
}

unint64_t sub_2D1E4()
{
  unint64_t result = qword_17BE28[0];
  if (!qword_17BE28[0])
  {
    _s25NeedsConfirmationStrategyCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17BE28);
  }
  return result;
}

uint64_t sub_2D238(uint64_t a1)
{
  return sub_2C7BC(a1);
}

uint64_t sub_2D248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2D2B0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t type metadata accessor for ResetTimerCATsSimple()
{
  uint64_t result = qword_17BE90;
  if (!qword_17BE90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2D360()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2D3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_2D524(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_2D634()
{
  sub_140540();

  return swift_deallocClassInstance();
}

uint64_t sub_2D664()
{
  return type metadata accessor for ResetTimerCATsSimple();
}

uint64_t sub_2D66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17B520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2D6D4(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17B520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2D734()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17BEE0);
  sub_33D8(v0, (uint64_t)qword_17BEE0);
  return sub_140E40();
}

uint64_t static TimerResponseDisambiguationUtils.parsePromptResult<A>(input:items:intentType:)(uint64_t a1, uint64_t a2)
{
  v2[11] = a1;
  v2[12] = a2;
  uint64_t v3 = sub_140900();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_13F3C0();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v5 = sub_13F460();
  v2[19] = v5;
  v2[20] = *(void *)(v5 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_13F410();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  type metadata accessor for TimerNLv3Intent();
  v2[26] = swift_task_alloc();
  uint64_t v7 = sub_13F3E0();
  v2[27] = v7;
  v2[28] = *(void *)(v7 - 8);
  v2[29] = swift_task_alloc();
  uint64_t v8 = sub_140280();
  v2[30] = v8;
  v2[31] = *(void *)(v8 - 8);
  unsigned char v2[32] = swift_task_alloc();
  return _swift_task_switch(sub_2DA48, 0, 0);
}

uint64_t sub_2DA48()
{
  uint64_t v123 = v0;
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  sub_13F370();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 224) + 96))(*(void *)(v0 + 232), *(void *)(v0 + 216));
LABEL_5:
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 248) + 32);
    v9(v5, *(void *)(v0 + 232), v6);
    v9(v7, v5, v6);
    id v10 = sub_F9728();
    char v11 = sub_F9F00();
    uint64_t v12 = sub_2FACC(v10, v8, v11 & 1);

    sub_30364(v7);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v13(v12);
  }
  if (v4 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 224) + 96))(*(void *)(v0 + 232), *(void *)(v0 + 216));
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v4 != enum case for Parse.directInvocation(_:))
  {
    if (v4 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void, void))(*(void *)(v0 + 224) + 96))(*(void *)(v0 + 232), *(void *)(v0 + 216));
      swift_getObjectType();
      if (SIRINLUUserDialogAct.firstUsoTask.getter())
      {
        uint64_t v40 = sub_2FF84();
        if (v40)
        {
          uint64_t v41 = v40;
          sub_5830(&qword_17BF00);
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = xmmword_142E80;
          *(void *)(v42 + 32) = v41;
          v122[0] = v42;
          sub_141330();
          uint64_t v12 = v122[0];
LABEL_56:
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_6;
        }
        swift_release();
      }
      if (SIRINLUUserDialogAct.firstUsoTask.getter())
      {
        if (sub_DB9F8())
        {
          sub_140EA0();
          uint64_t v73 = swift_retain();
          id v74 = sub_12DCDC(v73);
          if (qword_17B120 != -1) {
            swift_once();
          }
          uint64_t v75 = sub_141170();
          sub_33D8(v75, (uint64_t)qword_17BEE0);
          id v76 = v74;
          uint64_t v77 = sub_141160();
          os_log_type_t v78 = sub_141480();
          char v120 = v76;
          if (os_log_type_enabled(v77, v78))
          {
            log = v77;
            os_log_type_t type = v78;
            uint64_t v79 = (uint8_t *)swift_slowAlloc();
            v122[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v79 = 136315138;
            id v80 = v76;
            id v81 = [v80 description];
            uint64_t v82 = sub_141250();
            unint64_t v84 = v83;

            *(void *)(v0 + 72) = sub_58C0(v82, v84, v122);
            sub_1415C0();
            swift_bridgeObjectRelease();

            uint64_t v77 = log;
            _os_log_impl(&dword_0, log, type, "Converted timer from UsoEntity_common_Timer: %s", v79, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v85 = *(void *)(v0 + 96);
          sub_2FF44();
          Class isa = UsoEntity_common_Timer.isMultiple.getter().super.super.isa;
          Class v87 = sub_141570(1).super.super.isa;
          char v88 = sub_141590();

          uint64_t v12 = sub_2FACC(v120, v85, v88 & 1);
          swift_release();
          goto LABEL_56;
        }
        swift_unknownObjectRelease();
        goto LABEL_66;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      if (v4 != enum case for Parse.uso(_:))
      {
        if (qword_17B120 != -1) {
          swift_once();
        }
        uint64_t v66 = sub_141170();
        sub_33D8(v66, (uint64_t)qword_17BEE0);
        uint64_t v67 = sub_141160();
        os_log_type_t v68 = sub_141470();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v69 = 0;
          _os_log_impl(&dword_0, v67, v68, "Unhandled unknown case", v69, 2u);
          swift_slowDealloc();
        }
        uint64_t v71 = *(void *)(v0 + 224);
        uint64_t v70 = *(void *)(v0 + 232);
        uint64_t v72 = *(void *)(v0 + 216);

        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
        goto LABEL_67;
      }
      uint64_t v43 = *(void *)(v0 + 232);
      uint64_t v45 = *(void *)(v0 + 192);
      uint64_t v44 = *(void *)(v0 + 200);
      uint64_t v47 = *(void *)(v0 + 176);
      uint64_t v46 = *(void *)(v0 + 184);
      uint64_t v49 = *(void *)(v0 + 152);
      uint64_t v48 = *(void *)(v0 + 160);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 224) + 96))(v43, *(void *)(v0 + 216));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v44, v43, v46);
      sub_13F400();
      uint64_t v50 = sub_13F440();
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v51(v47, v49);
      if (v50)
      {
        uint64_t v52 = sub_2FF84();
        if (v52)
        {
          uint64_t v53 = v52;
          uint64_t v55 = *(void *)(v0 + 192);
          uint64_t v54 = *(void *)(v0 + 200);
          uint64_t v56 = *(void *)(v0 + 184);
          sub_5830(&qword_17BF00);
          uint64_t v57 = swift_allocObject();
          *(_OWORD *)(v57 + 16) = xmmword_142E80;
          *(void *)(v57 + 32) = v53;
          v122[0] = v57;
          sub_141330();
          uint64_t v12 = v122[0];
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
          goto LABEL_6;
        }
        swift_release();
      }
      uint64_t v89 = *(void *)(v0 + 168);
      uint64_t v90 = *(void *)(v0 + 152);
      sub_13F400();
      uint64_t v91 = sub_13F440();
      v51(v89, v90);
      if (v91)
      {
        if (sub_DB9F8())
        {
          sub_140EA0();
          uint64_t v92 = swift_retain();
          id v93 = sub_12DCDC(v92);
          if (qword_17B120 != -1) {
            swift_once();
          }
          uint64_t v94 = sub_141170();
          sub_33D8(v94, (uint64_t)qword_17BEE0);
          id v95 = v93;
          uint64_t v96 = sub_141160();
          os_log_type_t v97 = sub_141480();
          uint64_t v121 = v95;
          if (os_log_type_enabled(v96, v97))
          {
            loga = v96;
            os_log_type_t typea = v97;
            uint64_t v98 = (uint8_t *)swift_slowAlloc();
            v122[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v98 = 136315138;
            buf = v98;
            id v99 = v95;
            id v100 = [v99 description];
            uint64_t v101 = sub_141250();
            unint64_t v103 = v102;

            *(void *)(v0 + 80) = sub_58C0(v101, v103, v122);
            sub_1415C0();
            swift_bridgeObjectRelease();

            uint64_t v96 = loga;
            _os_log_impl(&dword_0, loga, typea, "Converted timer from UsoEntity_common_Timer: %s", buf, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v104 = *(void *)(v0 + 192);
          os_log_t logb = *(os_log_t *)(v0 + 200);
          uint64_t v105 = *(void *)(v0 + 184);
          uint64_t v106 = *(void *)(v0 + 96);
          sub_2FF44();
          Class v107 = UsoEntity_common_Timer.isMultiple.getter().super.super.isa;
          Class v108 = sub_141570(1).super.super.isa;
          char v109 = sub_141590();

          uint64_t v12 = sub_2FACC(v121, v106, v109 & 1);
          swift_release();

          swift_release();
          (*(void (**)(os_log_t, uint64_t))(v104 + 8))(logb, v105);
          goto LABEL_6;
        }
        (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
LABEL_66:
        swift_release();
        goto LABEL_67;
      }
      (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
    }
LABEL_67:
    uint64_t v12 = 0;
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v0 + 232);
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 224) + 96))(v15, *(void *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v15, v18);
  if (qword_17B120 != -1) {
    swift_once();
  }
  id v19 = (_OWORD *)(v0 + 16);
  uint64_t v20 = sub_141170();
  sub_33D8(v20, (uint64_t)qword_17BEE0);
  uint64_t v21 = sub_141160();
  os_log_type_t v22 = sub_141480();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_0, v21, v22, "Received directInvocation in ResponseSimpleDisambiguationStrategy.parseDisambiguationResult", v23, 2u);
    swift_slowDealloc();
  }

  uint64_t v24 = sub_13F3B0();
  if (!v24)
  {
    *id v19 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    goto LABEL_34;
  }
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v0 + 112);
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v28 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v27, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v28);
  uint64_t v29 = sub_1408F0();
  uint64_t v31 = v30;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
  if (!*(void *)(v25 + 16) || (unint64_t v32 = sub_16F44(v29, v31), (v33 & 1) == 0))
  {
    *id v19 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  sub_5B50(*(void *)(v25 + 56) + 32 * v32, v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
LABEL_34:
    sub_904C(v0 + 16, &qword_17B9B0);
    goto LABEL_35;
  }
  if (swift_dynamicCast())
  {
    uint64_t v35 = *(void *)(v0 + 48);
    unint64_t v34 = *(void *)(v0 + 56);
    uint64_t v36 = HIBYTE(v34) & 0xF;
    if ((v34 & 0x2000000000000000) == 0) {
      uint64_t v36 = v35 & 0xFFFFFFFFFFFFLL;
    }
    if (v36)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v37 = sub_141160();
      os_log_type_t v38 = sub_141450();
      if (os_log_type_enabled(v37, v38))
      {
        Swift::Int v39 = (uint8_t *)swift_slowAlloc();
        v122[0] = swift_slowAlloc();
        *(_DWORD *)Swift::Int v39 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 64) = sub_58C0(v35, v34, v122);
        sub_1415C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v37, v38, "Direct invocation timer ID: %s", v39, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v111 = *(void *)(v0 + 136);
      uint64_t v110 = *(void *)(v0 + 144);
      uint64_t v112 = *(void *)(v0 + 128);
      unint64_t v113 = swift_bridgeObjectRetain();
      uint64_t v12 = (uint64_t)sub_2FD88(v113, v35, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v112);
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
LABEL_35:
  unint64_t v58 = sub_141160();
  os_log_type_t v59 = sub_141470();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v60 = 0;
    _os_log_impl(&dword_0, v58, v59, "There's no timerId in direct invocation", v60, 2u);
    swift_slowDealloc();
  }
  uint64_t v62 = *(void *)(v0 + 136);
  uint64_t v61 = *(void *)(v0 + 144);
  uint64_t v63 = *(void *)(v0 + 128);

  sub_5830((uint64_t *)&unk_17F3C0);
  sub_2F710();
  swift_allocError();
  unsigned char *v64 = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v65 = *(uint64_t (**)(void))(v0 + 8);
  return v65();
}

uint64_t static TimerResponseDisambiguationUtils.determineWindowInputType(input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = sub_13F380();
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  __chkstk_darwin(v3);
  uint64_t v77 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_140900();
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  __chkstk_darwin(v5);
  id v80 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_13F3C0();
  uint64_t v85 = *(uint8_t **)(v83 - 8);
  __chkstk_darwin(v83);
  unint64_t v84 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F460();
  uint64_t v75 = *(void *)(v8 - 8);
  uint64_t v76 = v8;
  __chkstk_darwin(v8);
  uint64_t v72 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_13F410();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v71 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for TimerNLv3Intent();
  uint64_t v11 = __chkstk_darwin(v86);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v70 - v14;
  uint64_t v16 = sub_13F3E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v70 - v19;
  uint64_t v21 = sub_140280();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F370();
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v25 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v25 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
      sub_5830((uint64_t *)&unk_17CD00);
      swift_release();
      goto LABEL_5;
    }
    if (v25 != enum case for Parse.directInvocation(_:))
    {
      if (v25 == enum case for Parse.NLv4IntentOnly(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        sub_1409A0();
        return swift_unknownObjectRelease();
      }
      if (v25 == enum case for Parse.uso(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        uint64_t v51 = v73;
        uint64_t v52 = v71;
        uint64_t v53 = v74;
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v71, v20, v74);
        uint64_t v54 = v72;
        sub_13F400();
        sub_13F450();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v54, v76);
        sub_140990();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      }
      if (qword_17B120 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_141170();
      sub_33D8(v61, (uint64_t)qword_17BEE0);
      uint64_t v63 = v77;
      uint64_t v62 = v78;
      uint64_t v64 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, a1, v79);
      char v65 = sub_141160();
      os_log_type_t v66 = sub_141470();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        *(void *)&long long v90 = v86;
        *(_DWORD *)uint64_t v67 = 136315138;
        unint64_t v84 = (char *)(v67 + 4);
        uint64_t v85 = v67;
        sub_13F370();
        uint64_t v68 = sub_141260();
        uint64_t v88 = sub_58C0(v68, v69, (uint64_t *)&v90);
        sub_1415C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v79);
        _os_log_impl(&dword_0, v65, v66, "TimerDisambiguation.determineInputType(input:) Received an unsupported parse for disambiguation window prompt: %s", v85, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      return sub_13F2F0();
    }
    (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
    unint64_t v34 = v84;
    char v33 = v85;
    uint64_t v35 = v83;
    (*((void (**)(char *, char *, uint64_t))v85 + 4))(v84, v20, v83);
    if (qword_17B120 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_141170();
    sub_33D8(v36, (uint64_t)qword_17BEE0);
    uint64_t v37 = sub_141160();
    os_log_type_t v38 = sub_141480();
    if (os_log_type_enabled(v37, v38))
    {
      Swift::Int v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v39 = 0;
      _os_log_impl(&dword_0, v37, v38, "TimerDisambiguation.determineInputType(input:) Received directInvocation", v39, 2u);
      swift_slowDealloc();
    }

    uint64_t v40 = sub_13F3B0();
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v43 = v80;
      uint64_t v42 = v81;
      uint64_t v44 = v82;
      (*(void (**)(char *, void, uint64_t))(v81 + 104))(v80, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v82);
      uint64_t v45 = sub_1408F0();
      uint64_t v47 = v46;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
      if (*(void *)(v41 + 16) && (unint64_t v48 = sub_16F44(v45, v47), (v49 & 1) != 0))
      {
        sub_5B50(*(void *)(v41 + 56) + 32 * v48, (uint64_t)&v90);
      }
      else
      {
        long long v90 = 0u;
        long long v91 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v91 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v56 = v88;
          unint64_t v55 = v89;
          uint64_t v57 = HIBYTE(v89) & 0xF;
          if ((v89 & 0x2000000000000000) == 0) {
            uint64_t v57 = v88 & 0xFFFFFFFFFFFFLL;
          }
          if (v57)
          {
            swift_bridgeObjectRetain();
            unint64_t v58 = sub_141160();
            os_log_type_t v59 = sub_141450();
            if (os_log_type_enabled(v58, v59))
            {
              uint64_t v60 = (uint8_t *)swift_slowAlloc();
              *(void *)&long long v90 = swift_slowAlloc();
              *(_DWORD *)uint64_t v60 = 136315138;
              swift_bridgeObjectRetain();
              uint64_t v88 = sub_58C0(v56, v55, (uint64_t *)&v90);
              unint64_t v34 = v84;
              sub_1415C0();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_0, v58, v59, "TimerDisambiguation.determineInputType(input:) Direct invocation Timer ID: %s", v60, 0xCu);
              swift_arrayDestroy();
              char v33 = v85;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            sub_13F310();
            return (*((uint64_t (**)(char *, uint64_t))v33 + 1))(v34, v35);
          }
          (*((void (**)(char *, uint64_t))v33 + 1))(v34, v35);
          swift_bridgeObjectRelease();
          return sub_13F2F0();
        }
LABEL_40:
        (*((void (**)(char *, uint64_t))v33 + 1))(v34, v35);
        return sub_13F2F0();
      }
    }
    else
    {
      long long v90 = 0u;
      long long v91 = 0u;
    }
    sub_904C((uint64_t)&v90, &qword_17B9B0);
    goto LABEL_40;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
LABEL_5:
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v26(v24, v20, v21);
  v26(v15, v24, v21);
  if (qword_17B120 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_141170();
  sub_33D8(v27, (uint64_t)qword_17BEE0);
  sub_303C0((uint64_t)v15, (uint64_t)v13);
  uint64_t v28 = sub_141160();
  os_log_type_t v29 = sub_141480();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    sub_30424(&qword_17D480);
    uint64_t v31 = sub_141980();
    uint64_t v88 = sub_58C0(v31, v32, (uint64_t *)&v90);
    sub_1415C0();
    swift_bridgeObjectRelease();
    sub_30364((uint64_t)v13);
    _os_log_impl(&dword_0, v28, v29, "TimerDisambiguation.determineInputType(input:) TimerNLIntent: %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_30364((uint64_t)v13);
  }

  if (qword_17B340 != -1) {
    swift_once();
  }
  sub_30424((unint64_t *)&qword_17CD20);
  sub_13F940();
  switch((char)v90)
  {
    case 1:
      sub_13F300();
      break;
    case 2:
      sub_13F320();
      break;
    default:
      sub_13F310();
      break;
  }
  return sub_30364((uint64_t)v15);
}

unint64_t sub_2F710()
{
  unint64_t result = qword_17CCF0;
  if (!qword_17CCF0)
  {
    sub_23FA8((uint64_t *)&unk_17F3C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17CCF0);
  }
  return result;
}

void *sub_2F76C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_5830(&qword_17BF10);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_2F7D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_5830(&qword_17BF10);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((a1 & 1) == 0)
  {
    if (v13 >= &v12[v8] || v12 >= &v13[v8])
    {
      memcpy(v12, v13, v8);
      goto LABEL_28;
    }
LABEL_30:
    sub_141810();
    __break(1u);
    JUMPOUT(0x2F924);
  }
  if (v10 != a4 || v12 >= &v13[v8]) {
    memmove(v12, v13, v8);
  }
  *((void *)a4 + 2) = 0;
LABEL_28:
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_2F954(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)sub_1416A0();
LABEL_9:
        unint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        if (sub_140E90())
        {
          sub_141700();
          sub_141740();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_141750();
          sub_141710();
        }
        else
        {
        }
        ++v3;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_1417D0();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_2FACC(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_2F954(v5);
  swift_bridgeObjectRelease();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v7 < 2) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
    if (v7 < 2) {
      goto LABEL_9;
    }
  }
  if (a3)
  {
    if (qword_17B120 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_141170();
    sub_33D8(v8, (uint64_t)qword_17BEE0);
    int64_t v9 = sub_141160();
    os_log_type_t v10 = sub_141480();
    if (os_log_type_enabled(v9, v10))
    {
      size_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)size_t v11 = 0;
      uint64_t v12 = "Found multiple matching timers and multiple quantifier was specified. Using filteredTimers for result.";
LABEL_14:
      _os_log_impl(&dword_0, v9, v10, v12, v11, 2u);
LABEL_19:
      swift_slowDealloc();
      goto LABEL_21;
    }
    goto LABEL_21;
  }
LABEL_9:
  if (v7 != 1)
  {
    swift_bridgeObjectRelease();
    if (qword_17B120 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_141170();
    sub_33D8(v14, (uint64_t)qword_17BEE0);
    int64_t v9 = sub_141160();
    os_log_type_t v15 = sub_141480();
    if (!os_log_type_enabled(v9, v15))
    {
      unint64_t v6 = 0;
      goto LABEL_21;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v9, v15, "Found multiple matching timers for disambiguation input. Re-prompting for input.", v16, 2u);
    unint64_t v6 = 0;
    goto LABEL_19;
  }
  if (qword_17B120 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_141170();
  sub_33D8(v13, (uint64_t)qword_17BEE0);
  int64_t v9 = sub_141160();
  os_log_type_t v10 = sub_141480();
  if (os_log_type_enabled(v9, v10))
  {
    size_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)size_t v11 = 0;
    uint64_t v12 = "Found single matching timer for disambiguation input. Using as result.";
    goto LABEL_14;
  }
LABEL_21:

  return v6;
}

void *sub_2FD88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)sub_1416A0();
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_22;
        }
        id v10 = [v7 identifier];
        if (v10)
        {
          size_t v11 = v10;
          uint64_t v12 = sub_141250();
          uint64_t v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            sub_141700();
            sub_141740();
            sub_141750();
            sub_141710();
            goto LABEL_5;
          }
          char v16 = sub_141AA0();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_18;
          }
        }

LABEL_5:
        ++v6;
        if (v9 == v5) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8))) {
        break;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      uint64_t v5 = sub_1417D0();
      if (!v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_2FF44()
{
  unint64_t result = qword_17D4F0;
  if (!qword_17D4F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_17D4F0);
  }
  return result;
}

uint64_t sub_2FF84()
{
  uint64_t v0 = sub_140610();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5830(&qword_17BF08);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13FA30();
  if (!v17)
  {
    sub_904C((uint64_t)&v16, &qword_17B9B0);
    if (qword_17B120 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_141170();
    sub_33D8(v9, (uint64_t)qword_17BEE0);
    id v10 = sub_141160();
    os_log_type_t v11 = sub_141470();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "NLv4TranslationParse: Dialog act is not a UsoTask_noVerb_common_Timer or has no target, cannot support input", v12, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  sub_174B0(&v16, v18);
  sub_5B50((uint64_t)v18, (uint64_t)&v16);
  sub_13FC50();
  if ((swift_dynamicCast() & 1) == 0)
  {
    _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
    return 0;
  }
  swift_retain();
  sub_13F5F0();
  swift_release();
  if (!(void)v16)
  {
    _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
    swift_release();
    return 0;
  }
  sub_140600();
  swift_retain();
  sub_13F740();
  swift_release();
  sub_1405F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_141200();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
    swift_release();
    swift_release();
    sub_904C((uint64_t)v6, &qword_17BF08);
    return 0;
  }
  sub_140EA0();
  uint64_t v14 = sub_1411D0();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  if (!v14) {
    return 0;
  }
  return v14;
}

uint64_t sub_30364(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimerNLv3Intent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_303C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimerNLv3Intent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_30424(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TimerNLv3Intent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerResponseDisambiguationUtils()
{
  return &type metadata for TimerResponseDisambiguationUtils;
}

uint64_t sub_30478(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_304D4(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for ResetTimerCATs_Async()
{
  uint64_t result = qword_17BF18;
  if (!qword_17BF18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_30574()
{
  return swift_initClassMetadata2();
}

uint64_t sub_305B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_30738()
{
  sub_140480();

  return swift_deallocClassInstance();
}

uint64_t sub_30768()
{
  return type metadata accessor for ResetTimerCATs_Async();
}

uint64_t *_s20HandleIntentStrategyVwca(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *sub_30798(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t _s20HandleIntentStrategyVwta(uint64_t a1, uint64_t a2)
{
  _s20HandleIntentStrategyVwxx_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s20HandleIntentStrategyVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s20HandleIntentStrategyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s20HandleIntentStrategyVMa()
{
  return &_s20HandleIntentStrategyVN;
}

uint64_t sub_30AA4()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17BF68);
  sub_33D8(v0, (uint64_t)qword_17BF68);
  return sub_140E60();
}

uint64_t sub_30AF0(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_141170();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v6 = sub_13F3C0();
  v2[14] = v6;
  v2[15] = *(void *)(v6 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v7 = sub_13ECE0();
  v2[17] = v7;
  v2[18] = *(void *)(v7 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v2[20] = v8;
  v2[21] = *(void *)(v8 - 8);
  v2[22] = swift_task_alloc();
  return _swift_task_switch(sub_30D7C, 0, 0);
}

uint64_t sub_30D7C()
{
  if (qword_17B128 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[5], (uint64_t)qword_17BF68);
  unint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "DeleteTimer.HandleIntentStrategy.makeIntentHandledResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17BFD8);
  uint64_t v5 = (void *)sub_13F140();
  id v6 = [v5 deletedTimers];

  if (!v6)
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v20 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  sub_140EA0();
  unint64_t v7 = sub_141310();

  sub_13EFE0();
  sub_13EC50();
  unint64_t v8 = swift_bridgeObjectRetain();
  unint64_t v9 = (unint64_t)sub_5311C(v8);
  v0[23] = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v22 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1417D0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_8;
      }
    }
  }
  else if (*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)) == 1)
  {
LABEL_8:
    if ((v7 & 0xC000000000000001) != 0)
    {
      id v11 = (id)sub_1416A0();
    }
    else
    {
      if (!*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)))
      {
        __break(1u);
        return result;
      }
      id v11 = *(id *)(v7 + 32);
    }
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1EA94();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v16 = v0[15];
      uint64_t v15 = v0[16];
      uint64_t v17 = v0[14];
      [v12 state];
      uint64_t v18 = sub_140F70();
      BOOL v19 = v18 == sub_140F70();
      sub_1EC84(v14, v19, v15);
      sub_13EF30();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    }
    else
    {
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v24 = v0[7];
  uint64_t v25 = v0[5];
  uint64_t v26 = v0[6];
  (*(void (**)(void, void, void))(v0[9] + 104))(v0[10], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v1, v25);
  mach_absolute_time();
  sub_1406B0();
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v28 == 1) {
      goto LABEL_22;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8)) == 1)
  {
LABEL_22:
    if (qword_17B3F0 != -1) {
      swift_once();
    }
    uint64_t v27 = (void *)swift_task_alloc();
    v0[24] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_31334;
    return sub_A6B7C(v9);
  }
  swift_bridgeObjectRelease();
  if (qword_17B3F0 != -1) {
    swift_once();
  }
  uint64_t v30 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  os_log_type_t v29 = (void *)swift_task_alloc();
  v0[26] = v29;
  *os_log_type_t v29 = v0;
  v29[1] = sub_314F0;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v30)(0xD000000000000018, 0x8000000000147C70, _swiftEmptyArrayStorage);
}

uint64_t sub_31334(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 200) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    return _swift_task_switch(sub_319C4, 0, 0);
  }
  else
  {
    v4[28] = a1;
    id v6 = (void *)swift_task_alloc();
    v4[29] = v6;
    *id v6 = v5;
    v6[1] = sub_31790;
    uint64_t v7 = v4[22];
    uint64_t v8 = v4[19];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v8, v7, v9, 0);
  }
}

uint64_t sub_314F0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_3168C, 0, 0);
  }
  else
  {
    v4[28] = a1;
    id v6 = (void *)swift_task_alloc();
    v4[29] = v6;
    *id v6 = v5;
    v6[1] = sub_31790;
    uint64_t v7 = v4[22];
    uint64_t v8 = v4[19];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v8, v7, v9, 0);
  }
}

uint64_t sub_3168C()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_31790()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_31AC8;
  }
  else {
    uint64_t v2 = sub_318A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_318A4()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_319C4()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_31AC8()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_31BEC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_141170();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  sub_140590();
  v2[13] = swift_task_alloc();
  uint64_t v6 = sub_13EFF0();
  v2[14] = v6;
  v2[15] = *(void *)(v6 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v7 = sub_13ECE0();
  v2[17] = v7;
  v2[18] = *(void *)(v7 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_31E58, 0, 0);
}

uint64_t sub_31E58()
{
  if (qword_17B128 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_33D8(v0[4], (uint64_t)qword_17BF68);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "DeleteTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse() called", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[5];
  uint64_t v23 = v0[4];

  sub_13EC50();
  sub_13EFE0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[21] = sub_140470();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v24, v23);
  mach_absolute_time();
  sub_1406B0();
  sub_5830(&qword_17BFD8);
  uint64_t v9 = (void *)sub_13F140();
  uint64_t v10 = sub_140CB0();

  if (v10 == 100)
  {
    uint64_t v25 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[25] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_323F8;
    unint64_t v16 = 0x8000000000147BE0;
    unint64_t v17 = 0xD000000000000012;
  }
  else
  {
    if (v10 == 101)
    {
      uint64_t v11 = v0[3];
      uint64_t v12 = swift_task_alloc();
      v0[22] = v12;
      *(void *)(v12 + 16) = v11;
      uint64_t v13 = (void *)swift_task_alloc();
      v0[23] = v13;
      void *v13 = v0;
      v13[1] = sub_3224C;
      return sub_11DBA8((uint64_t)sub_33584, v12);
    }
    uint64_t v19 = v0[19];
    uint64_t v18 = v0[20];
    uint64_t v20 = v0[17];
    uint64_t v21 = v0[18];
    sub_13EC80();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v18, v19, v20);
    uint64_t v25 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v22 = (void *)swift_task_alloc();
    v0[27] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_326C4;
    unint64_t v17 = 0x73614272656D6974;
    unint64_t v16 = 0xEF726F7272652365;
  }
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v25)(v17, v16, _swiftEmptyArrayStorage);
}

uint64_t sub_3224C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_32BD8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[29] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_32990;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_323F8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_32594, 0, 0);
  }
  else
  {
    v4[29] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_32990;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_32594()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_326C4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_32860, 0, 0);
  }
  else
  {
    v4[29] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_32990;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_32860()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_32990()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_32D08;
  }
  else {
    uint64_t v2 = sub_32AA4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_32AA4()
{
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_32BD8()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_32D08()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_32E40(uint64_t a1)
{
  sub_5830(&qword_17BFD8);
  uint64_t v4 = (void *)sub_13F160();
  sub_140CD0();
  sub_140F90();
  uint64_t v3 = v2;

  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_32EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_32F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_33048()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_33108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_331CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_33290(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  void *v5 = v2;
  v5[1] = sub_33338;
  return sub_31BEC(a1, a2);
}

uint64_t sub_33338()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_3346C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_3346C()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_33530()
{
  unint64_t result = qword_17BF88[0];
  if (!qword_17BF88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17BF88);
  }
  return result;
}

void sub_33584(uint64_t a1)
{
}

uint64_t sub_3358C(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17CD30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_335EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5830(&qword_17BFF0);
  uint64_t v2 = sub_141800();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_8FE8(v6, (uint64_t)&v15, &qword_17BFF8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_16F44(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_174B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_33724(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5830(&qword_17C008);
  uint64_t v2 = sub_141800();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_8FE8(v6, (uint64_t)v15, &qword_17C010);
    unint64_t result = sub_16FBC((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_174B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_33868(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_5830(&qword_17C018);
  uint64_t v2 = sub_141800();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_8FE8(v6, (uint64_t)&v15, &qword_17C020);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_16F44(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_34AF0(v17, (_OWORD *)(v3[7] + 48 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 64;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_339AC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  int v30 = a1;
  uint64_t v33 = a4;
  uint64_t v4 = sub_140900();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)v29 - v9;
  uint64_t v11 = sub_140920();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DirectInvocationUtils.Timer.URI.disambiguation(_:), v11);
  v29[2] = sub_140910();
  v29[1] = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_5830(&qword_17BFE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142FC0;
  long long v17 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v17(v10, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v4);
  uint64_t v18 = sub_1408F0();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v10, v4);
  *(void *)(inited + 32) = v18;
  *(void *)(inited + 40) = v20;
  uint64_t v22 = sub_642C(v30);
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = v23;
  v17(v8, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v4);
  uint64_t v24 = sub_1408F0();
  uint64_t v26 = v25;
  v21(v8, v4);
  *(void *)(inited + 80) = v24;
  *(void *)(inited + 88) = v26;
  *(void *)(inited + 120) = &type metadata for String;
  uint64_t v27 = v32;
  *(void *)(inited + 96) = v31;
  *(void *)(inited + 104) = v27;
  swift_bridgeObjectRetain();
  sub_335EC(inited);
  return sub_13F390();
}

uint64_t sub_33C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_33C84(a1, a2, 0x6574656C6564, a3);
}

uint64_t sub_33C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_33C84(a1, a2, 0x656D75736572, a3);
}

uint64_t sub_33C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a4;
  uint64_t v4 = sub_140900();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)v27 - v9;
  uint64_t v11 = sub_140920();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v11);
  v27[2] = sub_140910();
  v27[1] = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_5830(&qword_17BFE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142FC0;
  long long v17 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v17(v10, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v4);
  uint64_t v18 = sub_1408F0();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v10, v4);
  *(void *)(inited + 32) = v18;
  *(void *)(inited + 40) = v20;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v28;
  *(void *)(inited + 56) = 0xE600000000000000;
  v17(v8, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v4);
  uint64_t v22 = sub_1408F0();
  uint64_t v24 = v23;
  v21(v8, v4);
  *(void *)(inited + 80) = v22;
  *(void *)(inited + 88) = v24;
  *(void *)(inited + 120) = &type metadata for String;
  uint64_t v25 = v30;
  *(void *)(inited + 96) = v29;
  *(void *)(inited + 104) = v25;
  swift_bridgeObjectRetain();
  sub_335EC(inited);
  return sub_13F390();
}

uint64_t sub_33F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v37 = a2;
  uint64_t v36 = a1;
  uint64_t v38 = a3;
  uint64_t v5 = sub_140900();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v35 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v34 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v34 - v12;
  uint64_t v14 = sub_140920();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v14);
  v34[2] = sub_140910();
  v34[1] = v18;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_5830(&qword_17BFE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142FB0;
  uint64_t v20 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  v20(v13, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v5);
  uint64_t v21 = sub_1408F0();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24(v13, v5);
  *(void *)(inited + 32) = v21;
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = 0x6573756170;
  *(void *)(inited + 56) = 0xE500000000000000;
  v20(v11, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v5);
  uint64_t v25 = sub_1408F0();
  uint64_t v27 = v26;
  v24(v11, v5);
  *(void *)(inited + 80) = v25;
  *(void *)(inited + 88) = v27;
  *(void *)(inited + 120) = &type metadata for String;
  uint64_t v28 = v37;
  *(void *)(inited + 96) = v36;
  *(void *)(inited + 104) = v28;
  uint64_t v29 = v35;
  v20(v35, enum case for DirectInvocationUtils.Timer.UserInfoKey.duration(_:), v5);
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1408F0();
  uint64_t v32 = v31;
  v24(v29, v5);
  *(void *)(inited + 128) = v30;
  *(void *)(inited + 136) = v32;
  *(void *)(inited + 168) = &type metadata for Double;
  *(double *)(inited + 144) = a4;
  sub_335EC(inited);
  return sub_13F390();
}

id sub_342B4(int a1, int a2)
{
  int v41 = a2;
  int v40 = a1;
  uint64_t v2 = sub_140900();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::Int v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_140920();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DirectInvocationUtils.Timer.URI.buttonPress(_:), v8);
  sub_140910();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v12 = objc_allocWithZone((Class)SKIDirectInvocationPayload);
  NSString v13 = sub_141240();
  swift_bridgeObjectRelease();
  id v38 = [v12 initWithIdentifier:v13];

  sub_5830(&qword_17C000);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142FC0;
  uint64_t v15 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v15(v7, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v2);
  uint64_t v16 = sub_1408F0();
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v7, v2);
  uint64_t v42 = v16;
  uint64_t v43 = v18;
  sub_141660();
  uint64_t v20 = sub_642C(v40);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v20;
  *(void *)(inited + 80) = v21;
  uint64_t v22 = v39;
  v15(v39, enum case for DirectInvocationUtils.Timer.UserInfoKey.buttonPressed(_:), v2);
  uint64_t v23 = v22;
  uint64_t v24 = sub_1408F0();
  uint64_t v26 = v25;
  v19(v23, v2);
  uint64_t v42 = v24;
  uint64_t v43 = v26;
  sub_141660();
  BOOL v27 = (v41 & 1) == 0;
  uint64_t v28 = 7562617;
  if (v41) {
    uint64_t v28 = 0x6C65636E6163;
  }
  unint64_t v29 = 0xE600000000000000;
  *(void *)(inited + 168) = &type metadata for String;
  if (v27) {
    unint64_t v29 = 0xE300000000000000;
  }
  *(void *)(inited + 144) = v28;
  *(void *)(inited + 152) = v29;
  sub_33724(inited);
  Class isa = sub_141210().super.isa;
  swift_bridgeObjectRelease();
  id v31 = v38;
  [v38 setUserData:isa];

  uint64_t v32 = self;
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(&v42, v44);
  uint64_t v33 = (void *)sub_13EC40();
  id v34 = [v32 runSiriKitExecutorCommandWithContext:v33 payload:v31];

  _s20HandleIntentStrategyVwxx_1((uint64_t)&v42);
  id v35 = [v32 wrapCommandInStartLocalRequest:v34];

  return v35;
}

id sub_3473C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v35 = a2;
  int v34 = a1;
  uint64_t v3 = sub_140900();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_140920();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.disambiguation(_:), v9);
  sub_140910();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v13 = objc_allocWithZone((Class)SKIDirectInvocationPayload);
  NSString v14 = sub_141240();
  swift_bridgeObjectRelease();
  id v32 = [v13 initWithIdentifier:v14];

  sub_5830(&qword_17C000);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142FC0;
  uint64_t v16 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v16(v8, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v3);
  uint64_t v17 = sub_1408F0();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v8, v3);
  uint64_t v37 = v17;
  uint64_t v38 = v19;
  sub_141660();
  uint64_t v21 = sub_642C(v34);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v21;
  *(void *)(inited + 80) = v22;
  uint64_t v23 = v33;
  v16(v33, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v3);
  uint64_t v24 = v23;
  uint64_t v25 = sub_1408F0();
  uint64_t v27 = v26;
  v20(v24, v3);
  uint64_t v37 = v25;
  uint64_t v38 = v27;
  sub_141660();
  *(void *)(inited + 168) = &type metadata for String;
  uint64_t v28 = v36;
  *(void *)(inited + 144) = v35;
  *(void *)(inited + 152) = v28;
  swift_bridgeObjectRetain();
  sub_33724(inited);
  Class isa = sub_141210().super.isa;
  swift_bridgeObjectRelease();
  id v30 = v32;
  [v32 setUserData:isa];

  return v30;
}

_OWORD *sub_34AF0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_34B08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_34B1C(a1, a2);
  }
  return a1;
}

uint64_t sub_34B1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_34B74(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_34B88(a1, a2);
  }
  return a1;
}

uint64_t sub_34B88(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t destroy for UnsupportedDateTimerFlow()
{
  swift_release();

  return swift_release();
}

void *_s23TimerFlowDelegatePlugin24UnsupportedDateTimerFlowVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for UnsupportedDateTimerFlow(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for UnsupportedDateTimerFlow(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for UnsupportedDateTimerFlow(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UnsupportedDateTimerFlow(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnsupportedDateTimerFlow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedDateTimerFlow()
{
  return &type metadata for UnsupportedDateTimerFlow;
}

uint64_t sub_34D98()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17C038);
  sub_33D8(v0, (uint64_t)qword_17C038);
  return sub_140E60();
}

uint64_t sub_34DE4()
{
  uint64_t v0 = sub_140660();
  sub_2D2B0(v0, qword_180E60);
  uint64_t v1 = sub_33D8(v0, (uint64_t)qword_180E60);
  uint64_t v2 = enum case for SiriTimeEventSender.TaskType.createTimerIntent(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_34E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a1;
  v3[5] = a3;
  uint64_t v4 = sub_13EFF0();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_13ECE0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v6 = sub_141170();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v7 = sub_140680();
  v3[15] = v7;
  v3[16] = *(void *)(v7 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v8 = sub_1406A0();
  v3[18] = v8;
  v3[19] = *(void *)(v8 - 8);
  v3[20] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v3[21] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v3[22] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v3[23] = swift_task_alloc();
  uint64_t v9 = sub_13ED60();
  unsigned char v3[24] = v9;
  v3[25] = *(void *)(v9 - 8);
  v3[26] = swift_task_alloc();
  return _swift_task_switch(sub_35188, 0, 0);
}

uint64_t sub_35188()
{
  if (qword_17B130 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[12], (uint64_t)qword_17C038);
  v0[27] = v1;
  uint64_t v30 = v1;
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "In UnsupportedDateTimerFlow execute()", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[24];

  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v6, enum case for ActivityType.failed(_:), v7);
  if (qword_17B138 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[25];
  uint64_t v9 = v0[23];
  uint64_t v24 = v0[26];
  uint64_t v25 = v0[24];
  uint64_t v11 = v0[21];
  uint64_t v10 = v0[22];
  uint64_t v12 = v0[16];
  uint64_t v26 = v0[17];
  uint64_t v27 = v0[15];
  uint64_t v13 = v0[13];
  uint64_t v28 = v0[14];
  uint64_t v29 = v0[12];
  uint64_t v14 = sub_140660();
  sub_33D8(v14, (uint64_t)qword_180E60);
  uint64_t v15 = enum case for SiriKitReliabilityCodes.unsupportedParameter(_:);
  uint64_t v16 = sub_13EB70();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(v9, v15, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  uint64_t v18 = sub_140670();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = enum case for SiriTimeEventSender.ReasonDescription.timerDurationTooLong(_:);
  uint64_t v20 = sub_140650();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v11, v19, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
  sub_140640();
  sub_904C(v11, &qword_17C068);
  sub_904C(v10, &qword_17C070);
  sub_904C(v9, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v26, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v28, v30, v29);
  mach_absolute_time();
  sub_1406B0();
  id v31 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[28] = (uint64_t)v22;
  *uint64_t v22 = v0;
  v22[1] = sub_355C8;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v31)(0xD000000000000020, 0x8000000000147C90, _swiftEmptyArrayStorage);
}

uint64_t sub_355C8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_35A68;
  }
  else
  {
    *(void *)(v4 + 240) = a1;
    uint64_t v5 = sub_356F0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_356F0()
{
  sub_13EC50();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[31] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_357AC;
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[4];
  return PatternExecutionResult.generateFlowPatternResponse(phase:contextUpdate:measure:)(v5, v3, v4, v2);
}

uint64_t sub_357AC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 240);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  uint64_t v4 = *(void *)(*(void *)v0 + 72);
  uint64_t v5 = *(void *)(*(void *)v0 + 64);
  uint64_t v6 = *(void *)(*(void *)v0 + 56);
  uint64_t v7 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_35980, 0, 0);
}

uint64_t sub_35980()
{
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_35A68()
{
  uint64_t v11 = v0;
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141470();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[29];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[2] = v3;
    swift_errorRetain();
    sub_5830(&qword_17BFD0);
    uint64_t v6 = sub_141260();
    v0[3] = sub_58C0(v6, v7, &v10);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Failed to execute DialogEngine: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_35CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_15180;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_35D7C()
{
  return sub_13EA80();
}

uint64_t sub_35DB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_159A4;
  return sub_34E6C(a1, v5, v4);
}

uint64_t sub_35E58()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17C080);
  sub_33D8(v0, (uint64_t)qword_17C080);
  return sub_140E60();
}

id sub_35EA4()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = [self bundleForClass:ObjCClassFromMetadata];

  return v1;
}

uint64_t sub_35F20(void *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (uint8_t *)(v5 + 16);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  *(void *)(v5 + 72) = 0xD00000000000001CLL;
  *(void *)(v5 + 80) = 0x8000000000147E00;
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_141170();
  sub_33D8(v13, (uint64_t)qword_17C080);
  uint64_t v14 = sub_141160();
  os_log_type_t v15 = sub_141480();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v14, v15, "SearchTimer.ResultSetProvider init", v12, 2u);
    swift_slowDealloc();
  }

  *(void *)(v6 + 64) = a1;
  *(unsigned char *)(v6 + 112) = a2 & 1;
  if (a4 >> 62)
  {
    id v22 = a1;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1417D0();
    if (v16) {
      goto LABEL_7;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    a2 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  uint64_t v16 = *(void *)((char *)&dword_10 + (a4 & 0xFFFFFFFFFFFFFF8));
  id v17 = a1;
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_18;
  }
LABEL_7:
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v43 = a5;
  uint64_t v44 = a1;
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((a4 & 0xC000000000000001) != 0) {
      id v19 = (id)sub_1416A0();
    }
    else {
      id v19 = *(id *)(a4 + 8 * i + 32);
    }
    uint64_t v20 = v19;
    objc_msgSend(v19, "state", v43, v44);
    uint64_t v21 = sub_140F70();
    if (v21 == sub_140F70())
    {
      sub_141700();
      sub_141740();
      sub_141750();
      sub_141710();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  a2 = (unint64_t)_swiftEmptyArrayStorage;
  a5 = v43;
  a1 = v44;
LABEL_19:
  *(void *)(v6 + 104) = a5;
  swift_bridgeObjectRetain();
  id v23 = [a1 includeRemoteTimers];
  sub_2FF44();
  v24.super.super.Class isa = sub_141570(1).super.super.isa;
  Class isa = v24.super.super.isa;
  if (v23)
  {
    id v26 = v23;
    char v27 = sub_141590();

    if (v27)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 134217984;
        if (a5 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_1417D0();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Using %ld remote timers for matched timers", v30, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *(void *)(v6 + 88) = a5;
      *(void *)(v6 + 104) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v6 + 56) = a5;

      *(void *)(v6 + 96) = _swiftEmptyArrayStorage;
      return v6;
    }
  }
  else
  {
  }
  uint64_t v12 = (uint8_t *)(a3 >> 62);
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_28;
    }
  }
  else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    swift_bridgeObjectRetain_n();
    id v31 = sub_141160();
    os_log_type_t v32 = sub_141480();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 134217984;
      if (v12)
      {
        swift_bridgeObjectRetain();
        sub_1417D0();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v31, v32, "Using %ld matched for results", v33, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(void *)(v6 + 56) = a3;
    *(void *)(v6 + 88) = a3;
    *(void *)(v6 + 96) = a2;
    swift_bridgeObjectRetain();
    return v6;
  }
  if (a5 >> 62)
  {
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v38 == 1) {
      goto LABEL_41;
    }
    goto LABEL_47;
  }
  if (*(void *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFFF8)) == 1)
  {
LABEL_41:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_141160();
    os_log_type_t v36 = sub_141480();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 134217984;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v35, v36, "Matched are empty; single otherRemoteTimers – using %ld remote timers for results",
        v37,
        0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    *(void *)(v6 + 56) = a5;
    *(void *)(v6 + 88) = a5;
    swift_bridgeObjectRetain();

    *(void *)(v6 + 96) = _swiftEmptyArrayStorage;
    return v6;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  swift_retain_n();
  Swift::Int v39 = sub_141160();
  os_log_type_t v40 = sub_141480();
  if (os_log_type_enabled(v39, v40))
  {
    int v41 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v41 = 134217984;
    if ((a2 & 0x8000000000000000) != 0 || (a2 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1417D0();
      swift_release();
    }
    swift_release();
    sub_1415C0();
    swift_release();
    _os_log_impl(&dword_0, v39, v40, "Matched are empty; using %ld unmatchedRunningTimers for results", v41, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v6 + 56) = a2;
  swift_retain();

  *(void *)(v6 + 88) = _swiftEmptyArrayStorage;
  *(void *)(v6 + 96) = a2;
  return v6;
}

void *sub_36730()
{
  id v1 = [*(id *)(v0 + 64) duration];
  uint64_t v2 = v1;
  if (v1)
  {
    [v1 doubleValue];
    double v4 = v3;

    [self defaultDuration];
    if (v4 == v5)
    {
      return 0;
    }
    else
    {
      sub_140420();
      swift_allocObject();
      sub_140410();
      sub_140400();
      swift_release();
      uint64_t v2 = (void *)sub_1403F0();
      swift_release();
    }
  }
  return v2;
}

uint64_t sub_3680C()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_3682C, 0, 0);
}

uint64_t sub_3682C()
{
  uint64_t v1 = v0[4];
  sub_13F170();
  sub_13F010();
  swift_allocObject();
  sub_13F000();
  uint64_t v2 = sub_13E910();
  swift_allocObject();
  uint64_t v3 = sub_13E900();
  v0[5] = v3;
  v0[2] = v3;
  v0[3] = v1;
  double v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = _s17ResultSetProviderCMa();
  uint64_t v7 = sub_48398((unint64_t *)&unk_17C360, v6, (void (*)(uint64_t))_s17ResultSetProviderCMa);
  *double v4 = v0;
  v4[1] = sub_3699C;
  return PatternFlowProviding.makeResultSetFlow<A>(provider:)(v0 + 3, v2, v5, &protocol witness table for PatternFlowProvider, v7);
}

uint64_t sub_3699C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 56) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    return _swift_task_switch(sub_36B00, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_36B00()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_36B18()
{
  v1[12] = v0;
  uint64_t v2 = sub_13F1E0();
  v1[13] = v2;
  v1[14] = *(void *)(v2 - 8);
  v1[15] = swift_task_alloc();
  uint64_t v3 = sub_13EFF0();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  uint64_t v4 = sub_13ECE0();
  v1[19] = v4;
  v1[20] = *(void *)(v4 - 8);
  v1[21] = swift_task_alloc();
  sub_140590();
  v1[22] = swift_task_alloc();
  uint64_t v5 = sub_140730();
  v1[23] = v5;
  v1[24] = *(void *)(v5 - 8);
  v1[25] = swift_task_alloc();
  uint64_t v6 = sub_141170();
  v1[26] = v6;
  v1[27] = *(void *)(v6 - 8);
  v1[28] = swift_task_alloc();
  uint64_t v7 = sub_140680();
  v1[29] = v7;
  v1[30] = *(void *)(v7 - 8);
  v1[31] = swift_task_alloc();
  uint64_t v8 = sub_1406A0();
  v1[32] = v8;
  v1[33] = *(void *)(v8 - 8);
  v1[34] = swift_task_alloc();
  return _swift_task_switch(sub_36E2C, 0, 0);
}

uint64_t sub_36E2C()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_33D8(v0[26], (uint64_t)qword_17C080);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "SearchTimer.ResultSetProvider makeEmptyResultSetFlow", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[30];
  uint64_t v4 = v0[31];
  uint64_t v7 = v0[28];
  uint64_t v6 = v0[29];
  uint64_t v9 = v0[26];
  uint64_t v8 = v0[27];
  uint64_t v10 = v0[24];
  uint64_t v11 = v0[25];
  uint64_t v19 = v0[23];

  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v20, v9);
  mach_absolute_time();
  sub_1406B0();
  sub_140720();
  LOBYTE(v8) = sub_1406E0();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v19);
  if (v8)
  {
    unint64_t v12 = *(void *)(v0[12] + 104);
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1417D0();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_8;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_8:
      type metadata accessor for TimerBaseCATsSimple();
      sub_140580();
      v0[35] = sub_140530();
      uint64_t v21 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
          + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      uint64_t v13 = (void *)swift_task_alloc();
      v0[36] = v13;
      void *v13 = v0;
      v13[1] = sub_371AC;
      return ((uint64_t (*)(unint64_t, unint64_t, void *))v21)(0xD000000000000016, 0x8000000000147EA0, _swiftEmptyArrayStorage);
    }
  }
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  uint64_t v16 = sub_140470();
  v0[40] = v16;
  id v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1805A8 + dword_1805A8);
  swift_retain();
  id v17 = (void *)swift_task_alloc();
  v0[41] = v17;
  *id v17 = v0;
  v17[1] = sub_3779C;
  uint64_t v18 = v0[12];
  return v22(v16, v18);
}

uint64_t sub_371AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 296) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_376AC;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 304) = a1;
    uint64_t v5 = sub_372DC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_372DC()
{
  sub_13EC50();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[39] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_373B4;
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[18];
  return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v0 + 7, v3, v4, v2, 0, 0, 0, 0);
}

uint64_t sub_373B4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 304);
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  uint64_t v3 = *(void *)(*(void *)v0 + 160);
  uint64_t v4 = *(void *)(*(void *)v0 + 152);
  uint64_t v5 = *(void *)(*(void *)v0 + 144);
  uint64_t v6 = *(void *)(*(void *)v0 + 136);
  uint64_t v7 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_37588, 0, 0);
}

uint64_t sub_37588()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  sub_90A8(v0 + 7, v0[10]);
  uint64_t v4 = sub_13F3F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_376AC()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_3779C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 336) = v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v1)
  {
    uint64_t v5 = sub_37B78;
  }
  else
  {
    *(void *)(v4 + 344) = a1;
    uint64_t v5 = sub_37904;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_37904()
{
  sub_13EC50();
  sub_13F1B0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[44] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_379E8;
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[15];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v0 + 2, v3, v2);
}

uint64_t sub_379E8()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 344);
  uint64_t v3 = *(void *)(*(void *)v1 + 120);
  uint64_t v4 = *(void *)(*(void *)v1 + 112);
  uint64_t v5 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  if (v0) {
    uint64_t v6 = sub_37D80;
  }
  else {
    uint64_t v6 = sub_37C5C;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_37B78()
{
  (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_37C5C()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v3 = v0[32];
  sub_90A8(v0 + 2, v0[5]);
  uint64_t v4 = sub_13F3F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_37D80()
{
  (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_37E64()
{
  v1[74] = v0;
  uint64_t v2 = sub_13F1E0();
  v1[75] = v2;
  v1[76] = *(void *)(v2 - 8);
  v1[77] = swift_task_alloc();
  v1[78] = type metadata accessor for SiriTimePluginModel(0);
  v1[79] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v1[80] = swift_task_alloc();
  v1[81] = swift_task_alloc();
  v1[82] = swift_task_alloc();
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  v1[85] = swift_task_alloc();
  v1[86] = swift_task_alloc();
  v1[87] = swift_task_alloc();
  v1[88] = swift_task_alloc();
  uint64_t v3 = sub_141170();
  v1[89] = v3;
  v1[90] = *(void *)(v3 - 8);
  v1[91] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v1[92] = v4;
  v1[93] = *(void *)(v4 - 8);
  v1[94] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v1[95] = v5;
  v1[96] = *(void *)(v5 - 8);
  v1[97] = swift_task_alloc();
  v1[98] = swift_task_alloc();
  v1[99] = swift_task_alloc();
  v1[100] = swift_task_alloc();
  uint64_t v6 = sub_140730();
  v1[101] = v6;
  v1[102] = *(void *)(v6 - 8);
  v1[103] = swift_task_alloc();
  uint64_t v7 = sub_13EFF0();
  v1[104] = v7;
  v1[105] = *(void *)(v7 - 8);
  v1[106] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v1[107] = v8;
  v1[108] = *(void *)(v8 - 8);
  v1[109] = swift_task_alloc();
  v1[110] = swift_task_alloc();
  return _swift_task_switch(sub_38248, 0, 0);
}

uint64_t sub_38248()
{
  unint64_t v2 = *(void *)(*(void *)(v1 + 592) + 56);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1417D0())
    {
LABEL_3:
      if ((v2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)sub_1416A0();
      }
      else
      {
        if (!*(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
        {
          __break(1u);
          goto LABEL_52;
        }
        id v4 = *(id *)(v2 + 32);
      }
      uint64_t v0 = v4;
      *(void *)(v1 + 888) = v4;
      swift_bridgeObjectRelease();
      if (qword_17B140 == -1)
      {
LABEL_7:
        uint64_t v5 = sub_33D8(*(void *)(v1 + 712), (uint64_t)qword_17C080);
        *(void *)(v1 + 896) = v5;
        uint64_t v6 = sub_141160();
        os_log_type_t v7 = sub_141480();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl(&dword_0, v6, v7, "SearchTimer.ResultSetProvider makeSingleItemFlow", v8, 2u);
          swift_slowDealloc();
        }
        uint64_t v9 = *(void *)(v1 + 848);
        uint64_t v10 = *(void *)(v1 + 592);

        sub_13EC50();
        sub_5830(&qword_17BF00);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_142E80;
        *(void *)(inited + 32) = v0;
        unint64_t v59 = inited;
        sub_141330();
        id v12 = v0;
        sub_15E9C(v59, v9);
        swift_bridgeObjectRelease();
        unint64_t v13 = *(void *)(v10 + 88);
        if (v13 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = sub_1417D0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v14 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
        }
        uint64_t v15 = sub_141160();
        os_log_type_t v16 = sub_141480();
        BOOL v17 = os_log_type_enabled(v15, v16);
        if (v14)
        {
          if (v17)
          {
            uint64_t v18 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v18 = 0;
            _os_log_impl(&dword_0, v15, v16, "SearchTimer.ResultSetProvider makeSingleItemFlow for matched timer", v18, 2u);
            swift_slowDealloc();
          }
          uint64_t v19 = *(void *)(v1 + 824);
          uint64_t v20 = *(void *)(v1 + 816);
          uint64_t v21 = *(void *)(v1 + 808);

          sub_140720();
          BOOL v22 = sub_1406C0();
          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
          if (v22)
          {
            uint64_t v23 = sub_141160();
            os_log_type_t v24 = sub_141480();
            if (os_log_type_enabled(v23, v24))
            {
              uint64_t v25 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v25 = 0;
              _os_log_impl(&dword_0, v23, v24, "[SearchTimer.ResultSetProvider.makeSingleItemFlow] Using multi-timer RF 2.0 path.", v25, 2u);
              swift_slowDealloc();
            }

            sub_140DF0();
            sub_140DE0();
            uint64_t v26 = *(void *)(v1 + 120);
            uint64_t v27 = *(void *)(v1 + 128);
            sub_90A8((void *)(v1 + 96), v26);
            id v28 = [v12 identifier];
            if (v28)
            {
              os_log_type_t v29 = v28;
              uint64_t v30 = sub_141250();
              uint64_t v32 = v31;
            }
            else
            {
              uint64_t v30 = 0;
              uint64_t v32 = 0;
            }
            *(void *)(v1 + 1040) = v32;
            uint64_t v54 = (void *)swift_task_alloc();
            *(void *)(v1 + 1048) = v54;
            *uint64_t v54 = v1;
            unint64_t v55 = sub_3A6BC;
          }
          else
          {
            sub_140DF0();
            sub_140DE0();
            uint64_t v26 = *(void *)(v1 + 80);
            uint64_t v27 = *(void *)(v1 + 88);
            sub_90A8((void *)(v1 + 56), v26);
            id v44 = [v12 identifier];
            if (v44)
            {
              uint64_t v45 = v44;
              uint64_t v30 = sub_141250();
              uint64_t v32 = v46;
            }
            else
            {
              uint64_t v30 = 0;
              uint64_t v32 = 0;
            }
            *(void *)(v1 + 1200) = v32;
            uint64_t v54 = (void *)swift_task_alloc();
            *(void *)(v1 + 1208) = v54;
            *uint64_t v54 = v1;
            unint64_t v55 = sub_3C67C;
          }
        }
        else
        {
          if (v17)
          {
            uint64_t v33 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v33 = 0;
            _os_log_impl(&dword_0, v15, v16, "SearchTimer.ResultSetProvider makeSingleItemFlow for unmatched timer", v33, 2u);
            swift_slowDealloc();
          }
          uint64_t v34 = *(void *)(v1 + 824);
          uint64_t v35 = *(void *)(v1 + 816);
          uint64_t v36 = *(void *)(v1 + 808);

          sub_140720();
          BOOL v37 = sub_1406C0();
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
          if (!v37)
          {
            id v47 = [*(id *)(*(void *)(v1 + 592) + 64) allAvailableTargets];
            if (v47)
            {
              sub_140D90();
              unint64_t v48 = sub_141310();

              if (v48 >> 62)
              {
                swift_bridgeObjectRetain();
                sub_1417D0();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
            }
            uint64_t v49 = *(void *)(v1 + 728);
            uint64_t v50 = *(void *)(v1 + 720);
            uint64_t v51 = *(void *)(v1 + 712);
            (*(void (**)(void, void, void))(*(void *)(v1 + 744) + 104))(*(void *)(v1 + 752), enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), *(void *)(v1 + 736));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v5, v51);
            mach_absolute_time();
            sub_1406B0();
            if (qword_17B438 != -1) {
              swift_once();
            }
            unint64_t v52 = swift_bridgeObjectRetain();
            *(void *)(v1 + 992) = sub_5311C(v52);
            swift_bridgeObjectRelease();
            unint64_t v58 = (char *)&dword_17EF30 + dword_17EF30;
            swift_retain();
            uint64_t v53 = (void *)swift_task_alloc();
            *(void *)(v1 + 1000) = v53;
            *uint64_t v53 = v1;
            v53[1] = sub_39FB8;
            __asm { BR              X8; sub_C094C }
          }
          uint64_t v38 = sub_141160();
          os_log_type_t v39 = sub_141480();
          if (os_log_type_enabled(v38, v39))
          {
            os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v40 = 0;
            _os_log_impl(&dword_0, v38, v39, "[SearchTimer.ResultSetProvider.makeSingleItemFlow] Using multi-timer RF 2.0 path", v40, 2u);
            swift_slowDealloc();
          }

          sub_140DF0();
          sub_140DE0();
          uint64_t v26 = *(void *)(v1 + 480);
          uint64_t v27 = *(void *)(v1 + 488);
          sub_90A8((void *)(v1 + 456), v26);
          id v41 = [v12 identifier];
          if (v41)
          {
            uint64_t v42 = v41;
            uint64_t v30 = sub_141250();
            uint64_t v32 = v43;
          }
          else
          {
            uint64_t v30 = 0;
            uint64_t v32 = 0;
          }
          *(void *)(v1 + 904) = v32;
          uint64_t v54 = (void *)swift_task_alloc();
          *(void *)(v1 + 912) = v54;
          *uint64_t v54 = v1;
          unint64_t v55 = sub_38CF4;
        }
        v54[1] = v55;
        return dispatch thunk of SessionManaging.sessionIDString(for:)(v30, v32, v26, v27);
      }
LABEL_52:
      swift_once();
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 1272) = 0;
  sub_5830((uint64_t *)&unk_17F3C0);
  sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v56 = *(uint64_t (**)(void))(v1 + 8);
  return v56();
}

uint64_t sub_38CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 920) = a1;
  *(void *)(v3 + 928) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_38E18, 0, 0);
}

uint64_t sub_38E18()
{
  uint64_t v1 = v0[112];
  uint64_t v2 = v0[94];
  uint64_t v3 = v0[93];
  uint64_t v4 = v0[92];
  uint64_t v5 = v0[91];
  uint64_t v6 = v0[90];
  uint64_t v7 = v0[89];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 57));
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v1, v7);
  mach_absolute_time();
  sub_1406B0();
  if (qword_17B430 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[74];
  unint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_5311C(v9);
  v0[117] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)(v8 + 64);
  id v12 = [v11 label];
  uint64_t v13 = v0[88];
  if (v12)
  {
    uint64_t v14 = v12;
    sub_141250();

    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_140500();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = sub_140500();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  uint64_t v16 = v0[87];
  uint64_t v17 = v0[86];
  uint64_t v18 = v0[74];
  uint64_t v19 = sub_36730();
  v0[118] = v19;
  [v11 type];
  sub_140F40();
  sub_140500();
  uint64_t v20 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v20(v16, 0, 1, v15);
  [v11 state];
  sub_140F60();
  v20(v17, 0, 1, v15);
  unint64_t v21 = *(void *)(v18 + 56);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v23 = (void *)swift_task_alloc();
  v0[119] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_39184;
  uint64_t v24 = v0[88];
  uint64_t v25 = v0[87];
  uint64_t v26 = v0[86];
  return sub_5680C((uint64_t)v10, v24, (uint64_t)v19, v25, v26, COERCE__INT64((double)v22), 0, 0);
}

uint64_t sub_39184(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[120] = a1;
  v3[121] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[88];
    uint64_t v5 = v3[87];
    uint64_t v6 = v3[86];
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_904C(v6, &qword_17BE78);
    sub_904C(v5, &qword_17BE78);
    sub_904C(v4, &qword_17BE78);
    uint64_t v7 = sub_3D158;
  }
  else
  {
    uint64_t v8 = v3[88];
    uint64_t v9 = v3[87];
    uint64_t v10 = v3[86];
    swift_bridgeObjectRelease();
    swift_release();
    sub_904C(v10, &qword_17BE78);
    sub_904C(v9, &qword_17BE78);
    sub_904C(v8, &qword_17BE78);
    uint64_t v7 = sub_39370;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_39370()
{
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "[SearchTimer.ResultSetProvider.makeSingleItemFlow] Creating response using ResponseFactory...", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[116];

  if (v4)
  {
    unint64_t v5 = v0[116];
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = v0[115];
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      v0[73] = sub_58C0(v8, v5, &v33);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v6, v7, "[SearchTimer.ResultSetProvider.makeSingleItemFlow] We have a live activity: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v0[20] = v0[78];
    v0[21] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v26 = sub_187EC(v0 + 17);
    sub_5830(&qword_17C358);
    uint64_t v27 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
    unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_142D50;
    sub_1B94C((void *)(v29 + v28));
    *uint64_t v26 = v29;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (void *)swift_task_alloc();
    v0[122] = (uint64_t)v30;
    *uint64_t v30 = v0;
    v30[1] = sub_398EC;
    uint64_t v25 = v0[116];
    uint64_t v24 = v0[115];
    uint64_t v19 = v0[110];
    uint64_t v20 = v0[106];
    uint64_t v21 = v0[100];
    uint64_t v22 = v0 + 42;
    uint64_t v23 = v0 + 17;
  }
  else
  {
    uint64_t v10 = sub_141160();
    os_log_type_t v11 = sub_141480();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "[SearchTimer.ResultSetProvider.makeSingleItemFlow] Using multi-timer snippet model for single unmatched timer instead.", v12, 2u);
      swift_slowDealloc();
    }
    uint64_t v13 = v0[78];

    v0[50] = v13;
    v0[51] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v14 = sub_187EC(v0 + 47);
    sub_5830(&qword_17C358);
    uint64_t v15 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_142D50;
    sub_1B94C((void *)(v17 + v16));
    *uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[123] = (uint64_t)v18;
    *uint64_t v18 = v0;
    v18[1] = sub_39C60;
    uint64_t v19 = v0[110];
    uint64_t v20 = v0[106];
    uint64_t v21 = v0[100];
    uint64_t v22 = v0 + 52;
    uint64_t v23 = v0 + 47;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v22, v19, v20, v23, v21, v24, v25, 0xD00000000000001DLL);
}

uint64_t sub_398EC()
{
  uint64_t v1 = *v0 + 136;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_39A18, 0, 0);
}

uint64_t sub_39A18()
{
  uint64_t v1 = (void *)v0[120];
  uint64_t v2 = v0[108];
  uint64_t v9 = (void *)v0[111];
  uint64_t v10 = v0[107];
  uint64_t v13 = v0[106];
  uint64_t v3 = v0[105];
  uint64_t v11 = v0[110];
  uint64_t v12 = v0[104];
  uint64_t v4 = v0[100];
  uint64_t v5 = v0[96];
  uint64_t v6 = v0[95];
  sub_90A8(v0 + 42, v0[45]);
  uint64_t v14 = sub_13F3F0();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 42));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v14);
}

uint64_t sub_39C60()
{
  uint64_t v1 = *v0 + 376;
  swift_task_dealloc();
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_39D70, 0, 0);
}

uint64_t sub_39D70()
{
  uint64_t v1 = (void *)v0[120];
  uint64_t v2 = v0[108];
  uint64_t v9 = (void *)v0[111];
  uint64_t v10 = v0[107];
  uint64_t v13 = v0[106];
  uint64_t v3 = v0[105];
  uint64_t v11 = v0[110];
  uint64_t v12 = v0[104];
  uint64_t v4 = v0[100];
  uint64_t v5 = v0[96];
  uint64_t v6 = v0[95];
  sub_90A8(v0 + 52, v0[55]);
  uint64_t v14 = sub_13F3F0();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 52));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v14);
}

uint64_t sub_39FB8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 1008) = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    return _swift_task_switch(sub_3A4B4, 0, 0);
  }
  else
  {
    v4[127] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[128] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_3A18C;
    uint64_t v7 = v4[106];
    uint64_t v8 = v4[99];
    uint64_t v9 = v4[110];
    return PatternExecutionResult.generateFlow(phase:contextUpdate:measure:)(v9, v7, v8);
  }
}

uint64_t sub_3A18C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 1016);
  *(void *)(*(void *)v1 + 1032) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_3A2A8, 0, 0);
}

uint64_t sub_3A2A8()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 864);
  uint64_t v3 = *(void *)(v0 + 856);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 840);
  uint64_t v6 = *(void *)(v0 + 832);
  uint64_t v7 = *(void *)(v0 + 792);
  uint64_t v8 = *(void *)(v0 + 768);
  uint64_t v9 = *(void *)(v0 + 760);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v12 = *(void *)(v0 + 1032);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v12);
}

uint64_t sub_3A4B4()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 864);
  uint64_t v3 = *(void *)(v0 + 856);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 840);
  uint64_t v6 = *(void *)(v0 + 832);
  uint64_t v7 = *(void *)(v0 + 792);
  uint64_t v8 = *(void *)(v0 + 768);
  uint64_t v9 = *(void *)(v0 + 760);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_3A6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1056) = a1;
  *(void *)(v3 + 1064) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_3A7E0, 0, 0);
}

uint64_t sub_3A7E0()
{
  uint64_t v1 = (uint64_t *)v0[79];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 12));
  sub_5830(&qword_17C358);
  uint64_t v2 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_142D50;
  sub_1B94C((void *)(v4 + v3));
  *uint64_t v1 = v4;
  swift_storeEnumTagMultiPayload();
  sub_140EA0();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_141360();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_3DAA4(v5);
  swift_bridgeObjectRelease();
  uint64_t v69 = v6;
  v0[134] = v6;
  unint64_t v7 = *(void *)(v0[74] + 88);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
  }
  if (v8)
  {
    unint64_t v9 = swift_bridgeObjectRetain();
    unint64_t v10 = (unint64_t)sub_5311C(v9);
    v0[141] = v10;
    swift_bridgeObjectRelease();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1417D0();
      if (v11) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v11)
      {
LABEL_6:
        if (v11 >= 1)
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0)
            {
              uint64_t v13 = sub_1416A0();
            }
            else
            {
              uint64_t v13 = *(void *)(v10 + 8 * i + 32);
              swift_retain();
            }
            if (*(unsigned char *)(v13 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isInRespondingRoom) == 1)
            {
              sub_141700();
              sub_141740();
              sub_141750();
              sub_141710();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_30;
        }
        __break(1u);
LABEL_53:
        swift_bridgeObjectRetain();
        uint64_t result = sub_1417D0();
        uint64_t v15 = result;
        if (!result) {
          goto LABEL_54;
        }
LABEL_18:
        if (v15 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t j = 0; j != v15; ++j)
        {
          if ((v10 & 0xC000000000000001) != 0)
          {
            uint64_t v18 = sub_1416A0();
          }
          else
          {
            uint64_t v18 = *(void *)(v10 + 8 * j + 32);
            swift_retain();
          }
          if (*(unsigned char *)(v18 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isInRespondingRoom) == 1)
          {
            sub_141700();
            sub_141740();
            sub_141750();
            sub_141710();
          }
          else
          {
            swift_release();
          }
        }
        goto LABEL_54;
      }
    }
LABEL_30:
    swift_bridgeObjectRelease();
    v0[142] = _swiftEmptyArrayStorage;
    unint64_t v19 = *(void *)(v0[74] + 88);
    if (v19 >> 62) {
      goto LABEL_50;
    }
    uint64_t v20 = *(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
    for (; v20; uint64_t v20 = sub_1417D0())
    {
      uint64_t v21 = 0;
      while (1)
      {
        id v22 = (v19 & 0xC000000000000001) != 0 ? (id)sub_1416A0() : *(id *)(v19 + 8 * v21 + 32);
        uint64_t v23 = v22;
        uint64_t v24 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        [v22 type];
        uint64_t v25 = sub_140F50();
        if (v25 == sub_140F50())
        {
          swift_bridgeObjectRelease_n();
          uint64_t v26 = sub_174C0(0, 0);

          goto LABEL_41;
        }

        ++v21;
        if (v24 == v20) {
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_50:
      swift_bridgeObjectRetain_n();
    }
LABEL_39:
    swift_bridgeObjectRelease_n();
    uint64_t v26 = 0;
LABEL_41:
    v0[143] = v26;
    uint64_t v27 = v0[112];
    uint64_t v28 = v0[91];
    uint64_t v29 = v0[90];
    uint64_t v30 = v0[89];
    (*(void (**)(void, void, void))(v0[93] + 104))(v0[94], enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v0[92]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v27, v30);
    mach_absolute_time();
    sub_1406B0();
    if (qword_17B430 != -1) {
      swift_once();
    }
    uint64_t v31 = *(void **)(v0[74] + 64);
    id v32 = objc_msgSend(v31, "label", qword_1812F8);
    uint64_t v33 = v0[82];
    if (v32)
    {
      uint64_t v34 = v32;
      sub_141250();

      sub_141270();
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_140500();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 0, 1, v35);
    }
    else
    {
      uint64_t v35 = sub_140500();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 1, 1, v35);
    }
    uint64_t v36 = v0[81];
    uint64_t v37 = v0[80];
    uint64_t v38 = sub_36730();
    v0[144] = v38;
    [v31 type];
    sub_140F40();
    sub_140500();
    os_log_type_t v39 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    v39(v36, 0, 1, v35);
    [v31 state];
    sub_140F60();
    v39(v37, 0, 1, v35);
    os_log_type_t v40 = (void *)swift_task_alloc();
    v0[145] = v40;
    *os_log_type_t v40 = v0;
    v40[1] = sub_3B960;
    uint64_t v41 = v0[82];
    uint64_t v42 = v0[81];
    uint64_t v43 = v0[80];
    return sub_55A24(v41, (uint64_t)v38, v42, v43, v10, v26, (uint64_t)_swiftEmptyArrayStorage, v69);
  }
  unint64_t v14 = swift_bridgeObjectRetain();
  unint64_t v10 = (unint64_t)sub_5311C(v14);
  v0[135] = v10;
  swift_bridgeObjectRelease();
  if (v10 >> 62) {
    goto LABEL_53;
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
  uint64_t result = swift_bridgeObjectRetain();
  if (v15) {
    goto LABEL_18;
  }
LABEL_54:
  swift_bridgeObjectRelease();
  v0[136] = _swiftEmptyArrayStorage;
  unint64_t v44 = *(void *)(v0[74] + 88);
  if (v44 >> 62) {
    goto LABEL_74;
  }
  uint64_t v45 = *(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n();
  for (; v45; uint64_t v45 = sub_1417D0())
  {
    uint64_t v46 = 0;
    while (1)
    {
      id v47 = (v44 & 0xC000000000000001) != 0 ? (id)sub_1416A0() : *(id *)(v44 + 8 * v46 + 32);
      unint64_t v48 = v47;
      uint64_t v49 = v46 + 1;
      if (__OFADD__(v46, 1)) {
        break;
      }
      [v47 type];
      uint64_t v50 = sub_140F50();
      if (v50 == sub_140F50())
      {
        swift_bridgeObjectRelease_n();
        uint64_t v51 = sub_174C0(0, 0);

        goto LABEL_65;
      }

      ++v46;
      if (v49 == v45) {
        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_74:
    swift_bridgeObjectRetain_n();
  }
LABEL_63:
  swift_bridgeObjectRelease_n();
  uint64_t v51 = 0;
LABEL_65:
  v0[137] = v51;
  uint64_t v52 = v0[112];
  uint64_t v53 = v0[91];
  uint64_t v54 = v0[90];
  uint64_t v55 = v0[89];
  (*(void (**)(void, void, void))(v0[93] + 104))(v0[94], enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v0[92]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v52, v55);
  mach_absolute_time();
  sub_1406B0();
  if (qword_17B430 != -1) {
    swift_once();
  }
  uint64_t v56 = *(void **)(v0[74] + 64);
  id v57 = objc_msgSend(v56, "label", qword_1812F8);
  uint64_t v58 = v0[85];
  if (v57)
  {
    unint64_t v59 = v57;
    sub_141250();

    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_140500();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v58, 0, 1, v60);
  }
  else
  {
    uint64_t v60 = sub_140500();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v58, 1, 1, v60);
  }
  uint64_t v61 = v0[84];
  uint64_t v62 = v0[83];
  uint64_t v63 = sub_36730();
  v0[138] = v63;
  [v56 type];
  sub_140F40();
  sub_140500();
  uint64_t v64 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56);
  v64(v61, 0, 1, v60);
  [v56 state];
  sub_140F60();
  v64(v62, 0, 1, v60);
  char v65 = (void *)swift_task_alloc();
  v0[139] = v65;
  *char v65 = v0;
  v65[1] = sub_3B364;
  uint64_t v66 = v0[85];
  uint64_t v67 = v0[84];
  uint64_t v68 = v0[83];
  return sub_5615C(v66, (uint64_t)v63, v67, v68, v10, v51, (uint64_t)_swiftEmptyArrayStorage, v69);
}

uint64_t sub_3B364(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  v3[62] = v2;
  v3[63] = a1;
  v3[64] = v1;
  v3[140] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[85];
    uint64_t v5 = v3[84];
    uint64_t v6 = v3[83];
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_904C(v6, &qword_17BE78);
    sub_904C(v5, &qword_17BE78);
    sub_904C(v4, &qword_17BE78);
    unint64_t v7 = sub_3D360;
  }
  else
  {
    uint64_t v8 = v3[85];
    uint64_t v9 = v3[84];
    uint64_t v10 = v3[83];
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_904C(v10, &qword_17BE78);
    sub_904C(v9, &qword_17BE78);
    sub_904C(v8, &qword_17BE78);
    unint64_t v7 = sub_3B570;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_3B570()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[133];
  swift_release();
  v0[147] = v1;
  if (v2)
  {
    unint64_t v3 = v0[133];
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_141160();
    os_log_type_t v5 = sub_141480();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = v0[132];
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)unint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      v0[71] = sub_58C0(v6, v3, &v27);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v4, v5, "[SearchTimer.ResultSetProvider.makeIntentHandledResponse] We have a live activity: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v22 = v0[79];
    v0[40] = v0[78];
    v0[41] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v23 = sub_187EC(v0 + 37);
    sub_1C5F0(v22, (uint64_t)v23);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[148] = (uint64_t)v24;
    *uint64_t v24 = v0;
    v24[1] = sub_3BF60;
    uint64_t v21 = v0[133];
    uint64_t v20 = v0[132];
    uint64_t v15 = v0[110];
    uint64_t v16 = v0[106];
    uint64_t v17 = v0[98];
    uint64_t v18 = v0 + 32;
    unint64_t v19 = v0 + 37;
  }
  else
  {
    uint64_t v8 = sub_141160();
    uint64_t v9 = sub_141480();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, (os_log_type_t)v9, "[SearchTimer.ResultSetProvider.makeIntentHandledResponse] Using multi-timer snippet model for single matched timer instead.", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = v0[79];
    uint64_t v12 = v0[78];

    v0[30] = v12;
    v0[31] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v13 = sub_187EC(v0 + 27);
    sub_1C5F0(v11, (uint64_t)v13);
    unint64_t v14 = (void *)swift_task_alloc();
    v0[149] = (uint64_t)v14;
    *unint64_t v14 = v0;
    v14[1] = sub_3C2FC;
    uint64_t v15 = v0[110];
    uint64_t v16 = v0[106];
    uint64_t v17 = v0[98];
    uint64_t v18 = v0 + 22;
    unint64_t v19 = v0 + 27;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v18, v15, v16, v19, v17, v20, v21, 0xD00000000000001DLL);
}

uint64_t sub_3B960(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  v3[65] = v2;
  v3[66] = a1;
  v3[67] = v1;
  v3[146] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[82];
    uint64_t v5 = v3[81];
    uint64_t v6 = v3[80];
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_904C(v6, &qword_17BE78);
    sub_904C(v5, &qword_17BE78);
    sub_904C(v4, &qword_17BE78);
    unint64_t v7 = sub_3D5AC;
  }
  else
  {
    uint64_t v8 = v3[82];
    uint64_t v9 = v3[81];
    uint64_t v10 = v3[80];
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_904C(v10, &qword_17BE78);
    sub_904C(v9, &qword_17BE78);
    sub_904C(v8, &qword_17BE78);
    unint64_t v7 = sub_3BB70;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_3BB70()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[133];
  swift_release();
  v0[147] = v1;
  if (v2)
  {
    unint64_t v3 = v0[133];
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_141160();
    os_log_type_t v5 = sub_141480();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = v0[132];
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)unint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      v0[71] = sub_58C0(v6, v3, &v27);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v4, v5, "[SearchTimer.ResultSetProvider.makeIntentHandledResponse] We have a live activity: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v22 = v0[79];
    v0[40] = v0[78];
    v0[41] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v23 = sub_187EC(v0 + 37);
    sub_1C5F0(v22, (uint64_t)v23);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[148] = (uint64_t)v24;
    *uint64_t v24 = v0;
    v24[1] = sub_3BF60;
    uint64_t v21 = v0[133];
    uint64_t v20 = v0[132];
    uint64_t v15 = v0[110];
    uint64_t v16 = v0[106];
    uint64_t v17 = v0[98];
    uint64_t v18 = v0 + 32;
    unint64_t v19 = v0 + 37;
  }
  else
  {
    uint64_t v8 = sub_141160();
    uint64_t v9 = sub_141480();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, (os_log_type_t)v9, "[SearchTimer.ResultSetProvider.makeIntentHandledResponse] Using multi-timer snippet model for single matched timer instead.", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = v0[79];
    uint64_t v12 = v0[78];

    v0[30] = v12;
    v0[31] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v13 = sub_187EC(v0 + 27);
    sub_1C5F0(v11, (uint64_t)v13);
    unint64_t v14 = (void *)swift_task_alloc();
    v0[149] = (uint64_t)v14;
    *unint64_t v14 = v0;
    v14[1] = sub_3C2FC;
    uint64_t v15 = v0[110];
    uint64_t v16 = v0[106];
    uint64_t v17 = v0[98];
    uint64_t v18 = v0 + 22;
    unint64_t v19 = v0 + 27;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v18, v15, v16, v19, v17, v20, v21, 0xD00000000000001DLL);
}

uint64_t sub_3BF60()
{
  uint64_t v1 = *v0 + 296;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_3C08C, 0, 0);
}

uint64_t sub_3C08C()
{
  uint64_t v1 = (void *)v0[147];
  uint64_t v2 = (void *)v0[111];
  uint64_t v3 = v0[108];
  uint64_t v11 = v0[107];
  uint64_t v14 = v0[106];
  uint64_t v4 = v0[105];
  uint64_t v12 = v0[110];
  uint64_t v13 = v0[104];
  uint64_t v5 = v0[98];
  uint64_t v6 = v0[96];
  uint64_t v7 = v0[95];
  uint64_t v10 = v0[79];
  sub_90A8(v0 + 32, v0[35]);
  uint64_t v15 = sub_13F3F0();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_4832C(v10, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v13);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 32));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v15);
}

uint64_t sub_3C2FC()
{
  uint64_t v1 = *v0 + 216;
  swift_task_dealloc();
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_3C40C, 0, 0);
}

uint64_t sub_3C40C()
{
  uint64_t v1 = (void *)v0[147];
  uint64_t v2 = (void *)v0[111];
  uint64_t v3 = v0[108];
  uint64_t v11 = v0[107];
  uint64_t v14 = v0[106];
  uint64_t v4 = v0[105];
  uint64_t v12 = v0[110];
  uint64_t v13 = v0[104];
  uint64_t v5 = v0[98];
  uint64_t v6 = v0[96];
  uint64_t v7 = v0[95];
  uint64_t v10 = v0[79];
  sub_90A8(v0 + 22, v0[25]);
  uint64_t v15 = sub_13F3F0();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_4832C(v10, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v13);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 22));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v15);
}

uint64_t sub_3C67C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1216) = a1;
  *(void *)(v3 + 1224) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_3C7A0, 0, 0);
}

uint64_t sub_3C7A0()
{
  uint64_t v1 = v0[112];
  uint64_t v2 = v0[94];
  uint64_t v3 = v0[93];
  uint64_t v4 = v0[92];
  uint64_t v5 = v0[91];
  uint64_t v6 = v0[90];
  uint64_t v7 = v0[89];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v1, v7);
  mach_absolute_time();
  sub_1406B0();
  if (qword_17B438 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)v0[111];
  uint64_t v9 = qword_181300;
  uint64_t v10 = *(unsigned __int8 *)(v0[74] + 112);
  [v8 type];
  uint64_t v11 = sub_140F50();
  BOOL v12 = v11 == sub_140F50();
  uint64_t v17 = (uint64_t (*)(uint64_t, BOOL, uint64_t, uint64_t))((char *)&dword_17EF38 + dword_17EF38);
  id v13 = v8;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[154] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_3C960;
  uint64_t v15 = v0[111];
  return v17(v10, v12, v9, v15);
}

uint64_t sub_3C960(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1240) = v1;
  swift_task_dealloc();

  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_3CF50;
  }
  else
  {
    *(void *)(v4 + 1248) = a1;
    uint64_t v5 = sub_3CAA0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_3CAA0()
{
  uint64_t v1 = v0[153];
  uint64_t v2 = v0[152];
  uint64_t v3 = v0[106];
  (*(void (**)(void, void, void))(v0[108] + 16))(v0[109], v0[110], v0[107]);
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[157] = v5;
  void *v5 = v0;
  v5[1] = sub_3CBCC;
  uint64_t v6 = v0[97];
  uint64_t v7 = v0[77];
  return PatternExecutionResult.generateFlow(manifest:measure:)(v7, v6);
}

uint64_t sub_3CBCC(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 1248);
  uint64_t v3 = *(void *)(*(void *)v1 + 616);
  uint64_t v4 = *(void *)(*(void *)v1 + 608);
  uint64_t v5 = *(void *)(*(void *)v1 + 600);
  *(void *)(*(void *)v1 + 1264) = a1;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_3CD44, 0, 0);
}

uint64_t sub_3CD44()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 864);
  uint64_t v3 = *(void *)(v0 + 856);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 840);
  uint64_t v6 = *(void *)(v0 + 832);
  uint64_t v7 = *(void *)(v0 + 776);
  uint64_t v8 = *(void *)(v0 + 768);
  uint64_t v9 = *(void *)(v0 + 760);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v12 = *(void *)(v0 + 1264);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v12);
}

uint64_t sub_3CF50()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 864);
  uint64_t v3 = *(void *)(v0 + 856);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 840);
  uint64_t v6 = *(void *)(v0 + 832);
  uint64_t v7 = *(void *)(v0 + 776);
  uint64_t v8 = *(void *)(v0 + 768);
  uint64_t v9 = *(void *)(v0 + 760);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_3D158()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 864);
  uint64_t v3 = *(void *)(v0 + 856);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 840);
  uint64_t v6 = *(void *)(v0 + 832);
  uint64_t v7 = *(void *)(v0 + 800);
  uint64_t v8 = *(void *)(v0 + 768);
  uint64_t v9 = *(void *)(v0 + 760);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_3D360()
{
  uint64_t v10 = *(void *)(v0 + 880);
  uint64_t v1 = *(void *)(v0 + 864);
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v12 = *(void *)(v0 + 848);
  uint64_t v3 = *(void *)(v0 + 840);
  uint64_t v11 = *(void *)(v0 + 832);
  uint64_t v4 = *(void *)(v0 + 784);
  uint64_t v5 = *(void *)(v0 + 768);
  uint64_t v6 = *(void *)(v0 + 760);
  uint64_t v7 = *(void *)(v0 + 632);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_4832C(v7, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v10, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_3D5AC()
{
  uint64_t v10 = *(void *)(v0 + 880);
  uint64_t v1 = *(void *)(v0 + 864);
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v12 = *(void *)(v0 + 848);
  uint64_t v3 = *(void *)(v0 + 840);
  uint64_t v11 = *(void *)(v0 + 832);
  uint64_t v4 = *(void *)(v0 + 784);
  uint64_t v5 = *(void *)(v0 + 768);
  uint64_t v6 = *(void *)(v0 + 760);
  uint64_t v7 = *(void *)(v0 + 632);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_4832C(v7, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v10, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_3D7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = *(void **)(a2 + 64);
  id v11 = [v10 label];
  if (v11)
  {
    uint64_t v12 = v11;
    sub_141250();

    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_140500();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  uint64_t v14 = (int *)type metadata accessor for SearchForTimersHandledOtherMultiParameters(0);
  sub_2D248((uint64_t)v9, a1 + v14[16]);
  uint64_t v15 = sub_36730();
  uint64_t v16 = v14[15];
  swift_release();
  *(void *)(a1 + v16) = v15;
  [v10 type];
  sub_140F40();
  sub_140500();
  uint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v17(v7, 0, 1, v13);
  sub_2D248((uint64_t)v7, a1 + v14[17]);
  [v10 state];
  sub_140F60();
  v17(v7, 0, 1, v13);
  sub_2D248((uint64_t)v7, a1 + v14[14]);
  unint64_t v18 = *(void *)(a2 + 56);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v20 = a1 + v14[18];
  *(double *)uint64_t v20 = (double)v19;
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t result = swift_release();
  *(void *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_3DAA4(uint64_t a1)
{
  uint64_t v2 = sub_140E10();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TimerTimerGrouping.Builder();
  uint64_t inited = swift_initStackObject();
  *(_DWORD *)(inited + 16) = 0;
  *(_DWORD *)(inited + 19) = 0;
  *(unsigned char *)(inited + 16) = *(void *)(a1 + 16) == 0;
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v7(v5, enum case for TimerGrouping.statePaused(_:), v2);
  char v8 = sub_4735C((uint64_t)v5, a1);
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  *(unsigned char *)(inited + 21) = v8 & 1;
  v7(v5, enum case for TimerGrouping.stateRunning(_:), v2);
  char v10 = sub_4735C((uint64_t)v5, a1);
  v9(v5, v2);
  *(unsigned char *)(inited + 20) = v10 & 1;
  v7(v5, enum case for TimerGrouping.device(_:), v2);
  char v11 = sub_4735C((uint64_t)v5, a1);
  v9(v5, v2);
  *(unsigned char *)(inited + 19) = v11 & 1;
  v7(v5, enum case for TimerGrouping.room(_:), v2);
  char v12 = sub_4735C((uint64_t)v5, a1);
  v9(v5, v2);
  *(unsigned char *)(inited + 18) = v12 & 1;
  v7(v5, enum case for TimerGrouping.label(_:), v2);
  char v13 = sub_4735C((uint64_t)v5, a1);
  v9(v5, v2);
  *(unsigned char *)(inited + 17) = v13 & 1;
  v7(v5, enum case for TimerGrouping.duration(_:), v2);
  LOBYTE(a1) = sub_4735C((uint64_t)v5, a1);
  v9(v5, v2);
  *(unsigned char *)(inited + 22) = a1 & 1;
  type metadata accessor for TimerTimerGrouping();
  swift_allocObject();
  return sub_A62E4((unsigned char *)inited);
}

uint64_t sub_3DD84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13EFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_13F1C0();
  swift_bridgeObjectRetain();
  return sub_13F1D0();
}

uint64_t sub_3DEA8()
{
  v1[25] = v0;
  uint64_t v2 = sub_13F1E0();
  v1[26] = v2;
  v1[27] = *(void *)(v2 - 8);
  v1[28] = swift_task_alloc();
  uint64_t v3 = sub_13F2C0();
  v1[29] = v3;
  v1[30] = *(void *)(v3 - 8);
  v1[31] = swift_task_alloc();
  uint64_t v4 = sub_13ECE0();
  v1[32] = v4;
  v1[33] = *(void *)(v4 - 8);
  v1[34] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v1[41] = v5;
  v1[42] = *(void *)(v5 - 8);
  v1[43] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v1[44] = v6;
  v1[45] = *(void *)(v6 - 8);
  v1[46] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v1[47] = v7;
  v1[48] = *(void *)(v7 - 8);
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  v1[52] = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  v1[53] = swift_task_alloc();
  v1[54] = type metadata accessor for SiriTimePluginModel(0);
  v1[55] = swift_task_alloc();
  uint64_t v8 = sub_140730();
  v1[56] = v8;
  v1[57] = *(void *)(v8 - 8);
  v1[58] = swift_task_alloc();
  uint64_t v9 = sub_13EFF0();
  v1[59] = v9;
  v1[60] = *(void *)(v9 - 8);
  v1[61] = swift_task_alloc();
  return _swift_task_switch(sub_3E300, 0, 0);
}

uint64_t sub_3E300()
{
  uint64_t v120 = v0;
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(*(void *)(v0 + 328), (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.ResultSetProvider makeAllResultsFlow", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 200);

  unint64_t v6 = *(void *)(v5 + 56);
  if (!(v6 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_7;
    }
LABEL_13:
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_3F440;
    return sub_36B18();
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1417D0();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_13;
  }
LABEL_7:
  unint64_t v7 = *(void *)(v5 + 56);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v12 == 1) {
      goto LABEL_9;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)) == 1)
  {
LABEL_9:
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 504) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_3F780;
    return sub_37E64();
  }
  unint64_t v13 = *(void *)(v5 + 56);
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1417D0();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v0 + 488);
    if (v17) {
      goto LABEL_19;
    }
LABEL_21:
    sub_13EFE0();
    goto LABEL_22;
  }
  uint64_t v14 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
  uint64_t v15 = *(void *)(v0 + 488);
  if (!v14) {
    goto LABEL_21;
  }
LABEL_19:
  unint64_t v16 = swift_bridgeObjectRetain();
  sub_15E9C(v16, v15);
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v18 = *(void *)(v0 + 456);
  uint64_t v19 = *(void *)(v0 + 464);
  uint64_t v20 = *(void *)(v0 + 448);
  sub_140720();
  BOOL v21 = sub_1406C0();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  if (!v21)
  {
    uint64_t v36 = *(void *)(v0 + 344);
    uint64_t v38 = *(void *)(v0 + 328);
    uint64_t v37 = *(void *)(v0 + 336);
    (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 104))(*(void *)(v0 + 368), enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), *(void *)(v0 + 352));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v1, v38);
    mach_absolute_time();
    sub_1406B0();
    sub_13F270();
    uint64_t v39 = *(void *)(v5 + 56);
    *(void *)(v0 + 656) = v39;
    swift_bridgeObjectRetain();
    os_log_type_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 664) = v40;
    *os_log_type_t v40 = v0;
    v40[1] = sub_408EC;
    uint64_t v41 = *(void *)(v0 + 248);
    uint64_t v42 = *(void *)(v0 + 200);
    v40[10] = v39;
    v40[11] = v42;
    v40[9] = v41;
    uint64_t v43 = (uint64_t)sub_43CA0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    return _swift_task_switch(v43, v44, v45);
  }
  uint64_t v22 = sub_141160();
  os_log_type_t v23 = sub_141480();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "[SearchTimer.ResultSetProvider.makeAllResultsFlow] Using multi-timer RF 2.0 path", v24, 2u);
    swift_slowDealloc();
  }

  unint64_t v25 = *(void *)(v5 + 56);
  if (v25 >> 62) {
    goto LABEL_56;
  }
  uint64_t v26 = *(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v116 = v1;
    if (v26)
    {
      unint64_t v119 = _swiftEmptyArrayStorage;
      unint64_t v27 = (unint64_t)&v119;
      sub_470FC(0, v26 & ~(v26 >> 63), 0);
      if (v26 < 0)
      {
        __break(1u);
        goto LABEL_71;
      }
      uint64_t v28 = 0;
      uint64_t v29 = *(void *)(v0 + 416);
      uint64_t v30 = v119;
      do
      {
        if ((v25 & 0xC000000000000001) != 0) {
          id v31 = (id)sub_1416A0();
        }
        else {
          id v31 = *(id *)(v25 + 8 * v28 + 32);
        }
        id v32 = v31;
        sub_1B94C(*(void **)(v0 + 424));

        unint64_t v119 = v30;
        unint64_t v34 = v30[2];
        unint64_t v33 = v30[3];
        if (v34 >= v33 >> 1)
        {
          sub_470FC(v33 > 1, v34 + 1, 1);
          uint64_t v30 = v119;
        }
        uint64_t v35 = *(void *)(v0 + 424);
        ++v28;
        v30[2] = v34 + 1;
        sub_482C8(v35, (uint64_t)v30+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v34);
      }
      while (v26 != v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = _swiftEmptyArrayStorage;
    }
    uint64_t v1 = *(void *)(v0 + 200);
    **(void **)(v0 + 440) = v30;
    swift_storeEnumTagMultiPayload();
    unint64_t v46 = *(void *)(v1 + 88);
    if (v46 >> 62) {
      break;
    }
    if (!*(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_58;
    }
LABEL_43:
    sub_140EA0();
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_141360();
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_3DAA4(v47);
    swift_bridgeObjectRelease();
    uint64_t v114 = v48;
    *(void *)(v0 + 584) = v48;
    unint64_t v27 = *(void *)(v1 + 88);
    uint64_t v26 = v116;
    if (!(v27 >> 62))
    {
      unint64_t v25 = *(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain_n();
      if (!v25) {
        goto LABEL_72;
      }
      goto LABEL_45;
    }
LABEL_71:
    swift_bridgeObjectRetain_n();
    unint64_t v25 = sub_1417D0();
    if (!v25)
    {
LABEL_72:
      swift_bridgeObjectRelease_n();
      uint64_t v54 = 0;
LABEL_73:
      *(void *)(v0 + 592) = v54;
      unint64_t v61 = swift_bridgeObjectRetain();
      unint64_t v62 = (unint64_t)sub_5311C(v61);
      swift_bridgeObjectRelease();
      unint64_t v119 = _swiftEmptyArrayStorage;
      if (!(v62 >> 62))
      {
        uint64_t v63 = *(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFFF8));
        uint64_t v113 = v54;
        if (v63) {
          goto LABEL_75;
        }
LABEL_86:
        swift_bridgeObjectRelease();
        uint64_t v66 = _swiftEmptyArrayStorage;
LABEL_87:
        uint64_t v117 = (uint64_t)v66;
        *(void *)(v0 + 600) = v66;
        uint64_t v67 = *(void *)(v0 + 344);
        uint64_t v69 = *(void *)(v0 + 328);
        uint64_t v68 = *(void *)(v0 + 336);
        (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 104))(*(void *)(v0 + 368), enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), *(void *)(v0 + 352));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v67, v26, v69);
        mach_absolute_time();
        sub_1406B0();
        if (qword_17B430 != -1) {
          swift_once();
        }
        uint64_t v70 = *(void **)(*(void *)(v0 + 200) + 64);
        id v71 = objc_msgSend(v70, "label", qword_1812F8);
        uint64_t v72 = *(void *)(v0 + 296);
        if (v71)
        {
          uint64_t v73 = v71;
          sub_141250();

          sub_141270();
          swift_bridgeObjectRelease();
          uint64_t v74 = sub_140500();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v72, 0, 1, v74);
        }
        else
        {
          uint64_t v74 = sub_140500();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v72, 1, 1, v74);
        }
        uint64_t v76 = *(void *)(v0 + 280);
        uint64_t v75 = *(void *)(v0 + 288);
        uint64_t v77 = sub_36730();
        *(void *)(v0 + 608) = v77;
        [v70 type];
        sub_140F40();
        sub_140500();
        uint64_t v78 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
        v78(v75, 0, 1, v74);
        [v70 state];
        sub_140F60();
        v78(v76, 0, 1, v74);
        unint64_t v79 = swift_bridgeObjectRetain();
        id v80 = sub_5311C(v79);
        *(void *)(v0 + 616) = v80;
        swift_bridgeObjectRelease();
        uint64_t v81 = (void *)swift_task_alloc();
        *(void *)(v0 + 624) = v81;
        *uint64_t v81 = v0;
        v81[1] = sub_401CC;
        uint64_t v82 = *(void *)(v0 + 288);
        uint64_t v83 = *(void *)(v0 + 296);
        uint64_t v84 = *(void *)(v0 + 280);
        return sub_55A24(v83, (uint64_t)v77, v82, v84, (uint64_t)v80, v113, v117, v114);
      }
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1417D0();
      swift_bridgeObjectRelease();
      uint64_t v113 = v54;
      if (!v63) {
        goto LABEL_86;
      }
LABEL_75:
      if (v63 >= 1)
      {
        for (uint64_t i = 0; i != v63; ++i)
        {
          if ((v62 & 0xC000000000000001) != 0)
          {
            uint64_t v65 = sub_1416A0();
          }
          else
          {
            uint64_t v65 = *(void *)(v62 + 8 * i + 32);
            swift_retain();
          }
          if (*(unsigned char *)(v65 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isInRespondingRoom) == 1)
          {
            sub_141700();
            sub_141740();
            sub_141750();
            sub_141710();
          }
          else
          {
            swift_release();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v26 = v116;
        uint64_t v66 = v119;
        goto LABEL_87;
      }
      __break(1u);
LABEL_96:
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1417D0();
      uint64_t v57 = v43;
      uint64_t v115 = v26;
      if (!v43) {
        goto LABEL_97;
      }
      goto LABEL_60;
    }
LABEL_45:
    uint64_t v49 = 0;
    while (1)
    {
      uint64_t v50 = (v27 & 0xC000000000000001) != 0 ? (void *)sub_1416A0() : *(id *)(v27 + 8 * v49 + 32);
      uint64_t v51 = v50;
      uint64_t v52 = v49 + 1;
      if (__OFADD__(v49, 1)) {
        break;
      }
      [v50 type];
      uint64_t v53 = sub_140F50();
      if (v53 == sub_140F50())
      {
        swift_bridgeObjectRelease_n();
        uint64_t v54 = sub_174C0(0, 0);

        goto LABEL_54;
      }

      ++v49;
      if (v52 == v25)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v54 = 0;
LABEL_54:
        uint64_t v26 = v116;
        goto LABEL_73;
      }
    }
    __break(1u);
LABEL_56:
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1417D0();
  }
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_1417D0();
  swift_bridgeObjectRelease();
  if (v55) {
    goto LABEL_43;
  }
LABEL_58:
  uint64_t v54 = *(void *)(v0 + 200);
  unint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v26 = (uint64_t)sub_5311C(v56);
  uint64_t v113 = 0;
  *(void *)(v0 + 512) = v26;
  swift_bridgeObjectRelease();
  unint64_t v119 = _swiftEmptyArrayStorage;
  if ((unint64_t)v26 >> 62) {
    goto LABEL_96;
  }
  uint64_t v57 = *(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8));
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v115 = v26;
  if (!v57)
  {
LABEL_97:
    swift_bridgeObjectRelease();
    uint64_t v60 = _swiftEmptyArrayStorage;
    goto LABEL_98;
  }
LABEL_60:
  if (v57 < 1)
  {
    __break(1u);
    return _swift_task_switch(v43, v44, v45);
  }
  for (uint64_t j = 0; j != v57; ++j)
  {
    if ((v26 & 0xC000000000000001) != 0)
    {
      uint64_t v59 = sub_1416A0();
    }
    else
    {
      uint64_t v59 = *(void *)(v26 + 8 * j + 32);
      swift_retain();
    }
    if (*(unsigned char *)(v59 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isInRespondingRoom) == 1)
    {
      sub_141700();
      sub_141740();
      sub_141750();
      sub_141710();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v60 = v119;
LABEL_98:
  uint64_t v112 = (uint64_t)v60;
  *(void *)(v0 + 520) = v60;
  unint64_t v85 = *(void *)(v54 + 96);
  uint64_t v86 = v116;
  if (v85 >> 62) {
    goto LABEL_111;
  }
  uint64_t v87 = *(void *)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n();
  for (; v87; uint64_t v87 = sub_1417D0())
  {
    uint64_t v88 = 0;
    while (1)
    {
      id v89 = (v85 & 0xC000000000000001) != 0 ? (id)sub_1416A0() : *(id *)(v85 + 8 * v88 + 32);
      long long v90 = v89;
      uint64_t v86 = v88 + 1;
      if (__OFADD__(v88, 1)) {
        break;
      }
      [v89 type];
      uint64_t v91 = sub_140F50();
      if (v91 == sub_140F50())
      {
        swift_bridgeObjectRelease_n();
        uint64_t v92 = sub_174C0(0, 0);

        goto LABEL_109;
      }

      ++v88;
      if (v86 == v87)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v92 = 0;
LABEL_109:
        uint64_t v86 = v116;
        goto LABEL_113;
      }
    }
    __break(1u);
LABEL_111:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease_n();
  uint64_t v92 = 0;
LABEL_113:
  uint64_t v118 = v92;
  *(void *)(v0 + 528) = v92;
  sub_140EA0();
  swift_bridgeObjectRetain();
  uint64_t v93 = sub_141360();
  if (v113)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    uint64_t v94 = 0;
  }
  else
  {
    uint64_t v95 = v93;
    swift_bridgeObjectRelease();
    uint64_t v94 = sub_3DAA4(v95);
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 536) = v94;
  uint64_t v96 = *(void *)(v0 + 344);
  uint64_t v98 = *(void *)(v0 + 328);
  uint64_t v97 = *(void *)(v0 + 336);
  (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 104))(*(void *)(v0 + 368), enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), *(void *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v96, v86, v98);
  mach_absolute_time();
  sub_1406B0();
  if (qword_17B430 != -1) {
    swift_once();
  }
  id v99 = *(void **)(*(void *)(v0 + 200) + 64);
  id v100 = [v99 label];
  uint64_t v101 = *(void *)(v0 + 320);
  if (v100)
  {
    unint64_t v102 = v100;
    sub_141250();

    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v103 = sub_140500();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v101, 0, 1, v103);
  }
  else
  {
    uint64_t v103 = sub_140500();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v101, 1, 1, v103);
  }
  uint64_t v105 = *(void *)(v0 + 304);
  uint64_t v104 = *(void *)(v0 + 312);
  uint64_t v106 = sub_36730();
  *(void *)(v0 + 544) = v106;
  [v99 type];
  sub_140F40();
  sub_140500();
  Class v107 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56);
  v107(v104, 0, 1, v103);
  [v99 state];
  sub_140F60();
  v107(v105, 0, 1, v103);
  Class v108 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v108;
  *Class v108 = v0;
  v108[1] = sub_3FAC0;
  uint64_t v109 = *(void *)(v0 + 312);
  uint64_t v110 = *(void *)(v0 + 320);
  uint64_t v111 = *(void *)(v0 + 304);
  return sub_5615C(v110, (uint64_t)v106, v109, v111, v115, v118, v112, v94);
}

uint64_t sub_3F440(uint64_t a1)
{
  uint64_t v7 = *v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = swift_task_dealloc();
  os_log_type_t v3 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v6) {
    uint64_t v2 = a1;
  }
  return v3(v2);
}

uint64_t sub_3F780(uint64_t a1)
{
  uint64_t v7 = *v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = swift_task_dealloc();
  os_log_type_t v3 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v6) {
    uint64_t v2 = a1;
  }
  return v3(v2);
}

uint64_t sub_3FAC0(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  v3[70] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[40];
  uint64_t v5 = v3[39];
  uint64_t v6 = v3[38];
  swift_release();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_904C(v6, &qword_17BE78);
    sub_904C(v5, &qword_17BE78);
    sub_904C(v4, &qword_17BE78);
    uint64_t v7 = sub_40EA8;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3[71] = a1;
    swift_release();
    sub_904C(v6, &qword_17BE78);
    sub_904C(v5, &qword_17BE78);
    sub_904C(v4, &qword_17BE78);
    uint64_t v7 = sub_3FD00;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_3FD00()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[55];
  sub_13EC50();
  v0[20] = v1;
  v0[21] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
  os_log_type_t v3 = sub_187EC(v0 + 17);
  sub_1C5F0(v2, (uint64_t)v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[72] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_3FE34;
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[51];
  uint64_t v7 = v0[34];
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v0 + 12, v7, v5, v0 + 17, v6, 0, 0, 0);
}

uint64_t sub_3FE34()
{
  uint64_t v1 = *(void *)v0 + 136;
  uint64_t v2 = *(void **)(*(void *)v0 + 568);
  uint64_t v3 = *(void *)(*(void *)v0 + 272);
  uint64_t v4 = *(void *)(*(void *)v0 + 264);
  uint64_t v5 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_3FFC0, 0, 0);
}

uint64_t sub_3FFC0()
{
  uint64_t v1 = v0[60];
  uint64_t v8 = v0[59];
  uint64_t v9 = v0[61];
  uint64_t v7 = v0[55];
  uint64_t v2 = v0[51];
  uint64_t v4 = v0[47];
  uint64_t v3 = v0[48];
  sub_90A8(v0 + 12, v0[15]);
  uint64_t v10 = sub_13F3F0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_4832C(v7, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v8);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 12));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v10);
}

uint64_t sub_401CC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[79] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[37];
  uint64_t v5 = v3[36];
  uint64_t v6 = v3[35];
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_904C(v6, &qword_17BE78);
    sub_904C(v5, &qword_17BE78);
    sub_904C(v4, &qword_17BE78);
    uint64_t v7 = sub_4107C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    v3[80] = a1;
    swift_release();
    sub_904C(v6, &qword_17BE78);
    sub_904C(v5, &qword_17BE78);
    sub_904C(v4, &qword_17BE78);
    uint64_t v7 = sub_4040C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_4040C()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[55];
  sub_13EC50();
  v0[5] = v1;
  v0[6] = sub_48398((unint64_t *)&qword_17C348, 255, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
  uint64_t v3 = sub_187EC(v0 + 2);
  sub_1C5F0(v2, (uint64_t)v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[81] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_40554;
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[50];
  uint64_t v7 = v0[34];
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v0 + 7, v7, v5, v0 + 2, v6, 0, 0, 0xD00000000000001CLL);
}

uint64_t sub_40554()
{
  uint64_t v1 = *(void *)v0 + 16;
  uint64_t v2 = *(void **)(*(void *)v0 + 640);
  uint64_t v3 = *(void *)(*(void *)v0 + 272);
  uint64_t v4 = *(void *)(*(void *)v0 + 264);
  uint64_t v5 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_406E0, 0, 0);
}

uint64_t sub_406E0()
{
  uint64_t v1 = v0[60];
  uint64_t v8 = v0[59];
  uint64_t v9 = v0[61];
  uint64_t v7 = v0[55];
  uint64_t v2 = v0[50];
  uint64_t v4 = v0[47];
  uint64_t v3 = v0[48];
  sub_90A8(v0 + 7, v0[10]);
  uint64_t v10 = sub_13F3F0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_4832C(v7, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v8);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v10);
}

uint64_t sub_408EC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 240);
  v4[84] = v1;
  swift_task_dealloc();
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = v4[31];
  uint64_t v8 = v4[29];
  if (v1)
  {
    (*v6)(v7, v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_41250;
  }
  else
  {
    v4[85] = a1;
    (*v6)(v7, v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_40A9C;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_40A9C()
{
  uint64_t v1 = v0[61];
  sub_13EC50();
  *(void *)(swift_task_alloc() + 16) = v1;
  sub_13F1B0();
  swift_task_dealloc();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[86] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_40B94;
  uint64_t v3 = v0[49];
  uint64_t v4 = v0[28];
  return PatternExecutionResult.generateFlow(manifest:measure:)(v4, v3);
}

uint64_t sub_40B94(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 680);
  uint64_t v3 = *(void *)(*(void *)v1 + 224);
  uint64_t v4 = *(void *)(*(void *)v1 + 216);
  uint64_t v5 = *(void *)(*(void *)v1 + 208);
  *(void *)(*(void *)v1 + 696) = a1;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_40D0C, 0, 0);
}

uint64_t sub_40D0C()
{
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  uint64_t v3 = v0[59];
  (*(void (**)(void, void))(v0[48] + 8))(v0[49], v0[47]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = v0[87];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_40EA8()
{
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  uint64_t v3 = v0[59];
  uint64_t v4 = v0[55];
  uint64_t v5 = v0[51];
  uint64_t v6 = v0[47];
  uint64_t v7 = v0[48];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  sub_4832C(v4, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_4107C()
{
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  uint64_t v3 = v0[59];
  uint64_t v4 = v0[55];
  uint64_t v5 = v0[50];
  uint64_t v6 = v0[47];
  uint64_t v7 = v0[48];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  sub_4832C(v4, type metadata accessor for SiriTimePluginModel);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_41250()
{
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  uint64_t v3 = v0[59];
  (*(void (**)(void, void))(v0[48] + 8))(v0[49], v0[47]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_413E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13EFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  return sub_13F1C0();
}

uint64_t sub_414E8(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  uint64_t v4 = sub_13F2C0();
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  v3[9] = *(void *)(v5 + 64);
  v3[10] = swift_task_alloc();
  uint64_t v6 = sub_13ECE0();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v7 = sub_13F1E0();
  v3[14] = v7;
  v3[15] = *(void *)(v7 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v3[18] = v8;
  v3[19] = *(void *)(v8 - 8);
  v3[20] = swift_task_alloc();
  return _swift_task_switch(sub_416D8, 0, 0);
}

uint64_t sub_416D8()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.ResultSetProvider makeWindowFlow", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[17];
  uint64_t v27 = v0[19];
  uint64_t v28 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v26 = v0[20];
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[14];
  uint64_t v10 = v0[11];
  uint64_t v9 = v0[12];
  uint64_t v11 = v0[8];
  uint64_t v21 = v0[10];
  uint64_t v22 = v0[9];
  uint64_t v20 = v0[7];
  uint64_t v23 = v0[6];
  uint64_t v24 = v0[5];
  uint64_t v18 = v0[16];
  uint64_t v19 = v0[4];

  sub_11838C(11);
  sub_13EC70();
  uint64_t v25 = v5;
  sub_13F1A0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v18, v5, v8);
  sub_13F010();
  swift_allocObject();
  sub_13F000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v21, v19, v20);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v23;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v13 + v12, v21, v20);
  *(void *)(v13 + ((v22 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
  sub_140A10();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_140A00();
  sub_13F170();
  swift_allocObject();
  sub_13F000();
  sub_13E910();
  swift_allocObject();
  v0[2] = sub_13E900();
  sub_48398(&qword_17C330, 255, (void (*)(uint64_t))&type metadata accessor for YesNoSearchWindowStrategy);
  uint64_t v14 = sub_13E920();
  swift_release();
  v0[3] = v14;
  sub_5830(&qword_17C338);
  sub_B978(&qword_17C340, &qword_17C338);
  uint64_t v15 = sub_13EA70();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v25, v8);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
  return v16(v15);
}

uint64_t sub_41BB8(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_13EFF0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_13ECE0();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_41CD4, 0, 0);
}

uint64_t sub_41CD4()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.ResultSetProvider window prompt producing rejection output", v4, 2u);
    swift_slowDealloc();
  }

  sub_13ECC0();
  sub_13EFE0();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  void *v5 = v0;
  v5[1] = sub_41E44;
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[2];
  return sub_544B8(v8, v6, v7);
}

uint64_t sub_41E44()
{
  uint64_t v2 = *(void *)(*v1 + 64);
  uint64_t v3 = *(void *)(*v1 + 56);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v6 = *(void *)(*v1 + 32);
  uint64_t v7 = *(void *)(*v1 + 24);
  uint64_t v8 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_4846C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v8 + 8);
    return v9();
  }
}

uint64_t sub_42070(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_13EFF0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_13ECE0();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_4218C, 0, 0);
}

uint64_t sub_4218C()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.ResultSetProvider window prompt producing cancel output", v4, 2u);
    swift_slowDealloc();
  }

  sub_13ECC0();
  sub_13EFE0();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  void *v5 = v0;
  v5[1] = sub_422FC;
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[2];
  return sub_544B8(v8, v6, v7);
}

uint64_t sub_422FC()
{
  uint64_t v2 = *(void *)(*v1 + 64);
  uint64_t v3 = *(void *)(*v1 + 56);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v6 = *(void *)(*v1 + 32);
  uint64_t v7 = *(void *)(*v1 + 24);
  uint64_t v8 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_42528, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v8 + 8);
    return v9();
  }
}

uint64_t sub_42528()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_42598(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v2);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_141170();
  sub_33D8(v5, (uint64_t)qword_17C080);
  uint64_t v6 = sub_141160();
  os_log_type_t v7 = sub_141480();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "SearchTimer.ResultSetProvider Window prompt parsing nlv3 ActionForInput", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t v9 = sub_140280();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v4, a1, v9);
  if (qword_17B340 != -1) {
    swift_once();
  }
  sub_48398((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  if (v11[15] == 3) {
    sub_13EDE0();
  }
  else {
    sub_13EDD0();
  }
  return sub_4832C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TimerNLv3Intent);
}

uint64_t sub_427DC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_5830(&qword_17F3E0);
  v2[4] = swift_task_alloc();
  v2[5] = type metadata accessor for TimerNLv3Intent();
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_428A0, 0, 0);
}

uint64_t sub_428A0()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.ResultSetProvider Window prompt parsing nlv3 window action", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 24);

  uint64_t v7 = sub_140280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  if (qword_17B340 != -1) {
    swift_once();
  }
  sub_48398((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  if (*(unsigned __int8 *)(v0 + 56) - 1 < 2)
  {
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v9 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
LABEL_11:
    uint64_t v10 = *v9;
    uint64_t v11 = sub_13F0C0();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
    uint64_t v13 = 0;
    goto LABEL_13;
  }
  if (!*(unsigned char *)(v0 + 56))
  {
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v9 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
    goto LABEL_11;
  }
  uint64_t v11 = sub_13F0C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = 1;
LABEL_13:
  uint64_t v14 = *(void *)(v0 + 48);
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v12 + 56))(*(void *)(v0 + 32), v13, 1, v11);
  sub_13F340();
  sub_4832C(v14, (uint64_t (*)(void))type metadata accessor for TimerNLv3Intent);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_42BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_14FBC;
  v7[10] = a3;
  v7[11] = a1;
  v7[9] = a2;
  return _swift_task_switch(sub_43CA0, 0, 0);
}

uint64_t sub_42C94(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_13ECE0();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v3[14] = v7;
  v3[15] = *(void *)(v7 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v3[17] = v8;
  v3[18] = *(void *)(v8 - 8);
  v3[19] = swift_task_alloc();
  return _swift_task_switch(sub_42EC8, 0, 0);
}

uint64_t sub_42EC8()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(*(void *)(v0 + 64), (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.ResultSetProvider makeFinalWindowFlow", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 32);

  unint64_t v6 = *(void *)(v5 + 56);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v12 == 1) {
      goto LABEL_7;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)) == 1)
  {
LABEL_7:
    uint64_t v7 = sub_141160();
    os_log_type_t v8 = sub_141480();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "SearchTimer.ResultSetProvider Bypassing windowing flow for single item presentation", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_431E8;
    return sub_37E64();
  }
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 72);
  sub_15E9C(*(void *)(v0 + 24), *(void *)(v0 + 152));
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v1, v17);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 168) = v19;
  *(void *)uint64_t v19 = v0;
  *(void *)(v19 + 8) = sub_43394;
  long long v20 = *(_OWORD *)(v0 + 16);
  *(void *)(v19 + 88) = *(void *)(v0 + 32);
  *(_OWORD *)(v19 + 72) = v20;
  return _swift_task_switch(sub_43CA0, 0, 0);
}

uint64_t sub_431E8(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v5 = a1;
  }
  return v6(v5);
}

uint64_t sub_43394(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_437C0;
  }
  else
  {
    *(void *)(v4 + 184) = a1;
    uint64_t v5 = sub_434BC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_434BC()
{
  sub_13EC50();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[24] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_43568;
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[7];
  return PatternExecutionResult.generateFlow(phase:contextUpdate:measure:)(v4, v2, v3);
}

uint64_t sub_43568(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 184);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_436E0, 0, 0);
}

uint64_t sub_436E0()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[25];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_437C0()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_43898(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  sub_5830(&qword_17C2E8);
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_1403A0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_43998, 0, 0);
}

uint64_t sub_43998()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  sub_140330();
  sub_140320();
  sub_1402F0();
  swift_release();
  sub_140BB0();
  swift_release();
  sub_140390();
  char v5 = sub_140380();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  v6(v1, v3);
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_141170();
  sub_33D8(v7, (uint64_t)qword_17C080);
  uint64_t v8 = sub_141160();
  os_log_type_t v9 = sub_141480();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109120;
    *(_DWORD *)(v0 + 80) = v5 & 1;
    sub_1415C0();
    _os_log_impl(&dword_0, v8, v9, "[ResultSetProvider.makeWindowingConfiguration] Using windowing configuration = %{BOOL}d", v10, 8u);
    swift_slowDealloc();
  }

  if (v5)
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 32);
    sub_5830(&qword_17C2F8);
    _s17ResultSetProviderCMa();
    sub_48398(&qword_17C300, v11, (void (*)(uint64_t))_s17ResultSetProviderCMa);
    sub_13E8F0();
    sub_13F180();
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 1;
  }
  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v14 = sub_5830(&qword_17C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, v12, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_43C7C(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  return _swift_task_switch(sub_43CA0, 0, 0);
}

void sub_43CA0()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.ResultSetProvider executePatternForWindow", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[11];

  id v6 = [*(id *)(v5 + 64) allAvailableTargets];
  if (v6)
  {
    sub_140D90();
    unint64_t v7 = sub_141310();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1417D0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0[11] + 104) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1417D0();
    swift_bridgeObjectRelease();
  }
  unint64_t v8 = swift_bridgeObjectRetain();
  v0[12] = sub_5311C(v8);
  swift_bridgeObjectRelease();
  sub_140EA0();
  uint64_t v9 = sub_141360();
  uint64_t v10 = sub_3DAA4(v9);
  swift_bridgeObjectRelease();
  v0[13] = v10;
  unint64_t v11 = *(void *)(v0[11] + 88);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
  }
  if (v12)
  {
    if (qword_17B438 != -1) {
      swift_once();
    }
    sub_13F290();
    sub_13F2B0();
    sub_13F2A0();
    sub_13F260();
    uint64_t v15 = (char *)&dword_17EF20 + dword_17EF20;
    swift_retain();
    swift_retain();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[16] = v13;
    void *v13 = v0;
    v13[1] = sub_443C0;
    __asm { BR              X8; sub_C15C0 }
  }
  if (qword_17B438 != -1) {
    swift_once();
  }
  sub_13F290();
  sub_13F2B0();
  sub_13F2A0();
  sub_13F260();
  uint64_t v16 = (char *)&dword_17EF18 + dword_17EF18;
  swift_retain();
  swift_retain();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[14] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_44174;
  __asm { BR              X8 }
}

uint64_t sub_44174(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v3[15] = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (v1) {
    uint64_t v4 = sub_4435C;
  }
  else {
    uint64_t v4 = sub_442F0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_442F0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_4435C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_443C0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  v3[17] = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (v1) {
    uint64_t v4 = sub_445A8;
  }
  else {
    uint64_t v4 = sub_4453C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_4453C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_445A8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4460C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = *(void **)(a2 + 64);
  id v13 = [v12 label];
  if (v13)
  {
    uint64_t v14 = v13;
    sub_141250();

    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_140500();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 1, 1, v15);
  }
  uint64_t v16 = (int *)type metadata accessor for SearchForTimersHandledOtherMultiParameters(0);
  sub_2D248((uint64_t)v11, a1 + v16[16]);
  uint64_t v17 = sub_36730();
  uint64_t v18 = v16[15];
  swift_release();
  *(void *)(a1 + v18) = v17;
  [v12 type];
  sub_140F40();
  sub_140500();
  uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v19(v9, 0, 1, v15);
  sub_2D248((uint64_t)v9, a1 + v16[17]);
  [v12 state];
  sub_140F60();
  v19(v9, 0, 1, v15);
  sub_2D248((uint64_t)v9, a1 + v16[14]);
  unint64_t v20 = *(void *)(a2 + 56);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v22 = a1 + v16[18];
  *(double *)uint64_t v22 = (double)v21;
  *(unsigned char *)(v22 + 8) = 0;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a1 + 24) = a3;
  return result;
}

uint64_t sub_448C8()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s17ResultSetProviderCMa()
{
  return self;
}

uint64_t sub_44954()
{
  return swift_bridgeObjectRetain();
}

id sub_44960()
{
  return sub_35EA4();
}

uint64_t sub_44984()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_449B8()
{
  uint64_t v1 = sub_13EA50();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return sub_4501C(v2, v0, v1);
}

uint64_t sub_44A3C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_48468;
  return sub_36B18();
}

uint64_t sub_44ACC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_48468;
  return sub_37E64();
}

uint64_t sub_44B5C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_48468;
  return sub_3DEA8();
}

uint64_t sub_44BEC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_159A4;
  return sub_43898(a1);
}

uint64_t sub_44C88(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  void *v5 = v2;
  v5[1] = sub_44D30;
  return sub_42C94(a1, v4);
}

uint64_t sub_44D30(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_44E6C, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_44E6C()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_44F2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_48468;
  return sub_414E8(a1, v4);
}

uint64_t sub_44FD4(uint64_t a1, uint64_t a2)
{
  return sub_48398(qword_17C2A0, a2, (void (*)(uint64_t))_s17ResultSetProviderCMa);
}

uint64_t sub_4501C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_45030(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_45054, 0, 0);
}

uint64_t sub_45054()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17C080);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SearchTimer.HandleIntentStrategy.makeIntentHandledResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = sub_141160();
  os_log_type_t v6 = sub_141450();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "Timers #response enabled – allowing ResultSet output to handle rendering", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_45210;
  uint64_t v9 = *(void *)(v0 + 24);
  return sub_45380(v9);
}

uint64_t sub_45210()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_4530C, 0, 0);
}

uint64_t sub_4530C()
{
  sub_13ED20();
  sub_13ED10();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_45380(uint64_t a1)
{
  v1[19] = a1;
  uint64_t v2 = sub_140500();
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v3 = sub_141170();
  v1[23] = v3;
  v1[24] = *(void *)(v3 - 8);
  v1[25] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v1[26] = v4;
  v1[27] = *(void *)(v4 - 8);
  v1[28] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v1[29] = v5;
  v1[30] = *(void *)(v5 - 8);
  v1[31] = swift_task_alloc();
  return _swift_task_switch(sub_45554, 0, 0);
}

uint64_t sub_45554()
{
  uint64_t v33 = v0;
  sub_13EBB0();
  sub_90A8((void *)(v0 + 112), *(void *)(v0 + 136));
  uint64_t v1 = sub_13F120();
  *(void *)(v0 + 256) = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v7 = *(void *)(v0 + 208);
    _s20HandleIntentStrategyVwxx_1(v0 + 112);
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v6, enum case for SiriTimeMeasurement.LogDescription.siriSuggestionsDonation(_:), v7);
    if (qword_17B140 != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = sub_33D8(v10, (uint64_t)qword_17C080);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v11, v10);
    mach_absolute_time();
    sub_1406B0();
    sub_5830(&qword_17C3B8);
    uint64_t v12 = (void *)sub_13F160();
    id v13 = [v12 label];

    uint64_t v14 = &_swiftEmptyDictionarySingleton;
    if (v13)
    {
      uint64_t v15 = *(void *)(v0 + 168);
      uint64_t v16 = *(void *)(v0 + 176);
      uint64_t v17 = v3;
      uint64_t v18 = *(void *)(v0 + 160);
      sub_141250();

      sub_141270();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1404F0();
      uint64_t v21 = v20;
      uint64_t v22 = v18;
      uint64_t v3 = v17;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v22);
      *(void *)(v0 + 40) = &type metadata for String;
      *(void *)(v0 + 48) = &protocol witness table for String;
      *(void *)(v0 + 56) = &protocol witness table for String;
      *(void *)(v0 + 16) = v19;
      *(void *)(v0 + 24) = v21;
      sub_34AF0((long long *)(v0 + 16), (_OWORD *)(v0 + 64));
      LOBYTE(v19) = swift_isUniquelyReferenced_nonNull_native();
      id v32 = &_swiftEmptyDictionarySingleton;
      uint64_t v23 = *(void *)(v0 + 88);
      uint64_t v24 = sub_18874(v0 + 64, v23);
      uint64_t v25 = *(void *)(v23 - 8);
      uint64_t v26 = (uint64_t *)swift_task_alloc();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 16))(v26, v24, v23);
      sub_47578(*v26, v26[1], 0x62614C72656D6974, 0xEA00000000006C65, v19, &v32);
      _s20HandleIntentStrategyVwxx_1(v0 + 64);
      swift_task_dealloc();
      uint64_t v14 = v32;
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 264) = v14;
    unint64_t v27 = sub_33868((uint64_t)_swiftEmptyArrayStorage);
    *(void *)(v0 + 272) = v27;
    id v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_180D10
                                                                                       + dword_180D10);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_45970;
    return v31(v3, v4, 0xD00000000000005ELL, 0x8000000000147EC0, (uint64_t)v14, v27);
  }
  else
  {
    _s20HandleIntentStrategyVwxx_1(v0 + 112);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
}

uint64_t sub_45970()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_45AC8, 0, 0);
}

uint64_t sub_45AC8()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  sub_140690();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_45B78(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_141170();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  sub_140590();
  v2[13] = swift_task_alloc();
  uint64_t v6 = sub_13EFF0();
  v2[14] = v6;
  v2[15] = *(void *)(v6 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v7 = sub_13ECE0();
  v2[17] = v7;
  v2[18] = *(void *)(v7 - 8);
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_45DD4, 0, 0);
}

uint64_t sub_45DD4()
{
  if (qword_17B140 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_33D8(v0[4], (uint64_t)qword_17C080);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "SearchTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse() called", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v23 = v0[7];
  uint64_t v7 = v0[5];
  uint64_t v24 = v0[4];

  sub_13EC80();
  sub_13EFE0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[20] = sub_140470();
  sub_5830(&qword_17C3B8);
  uint64_t v8 = (void *)sub_13F140();
  v0[21] = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v25, v24);
  mach_absolute_time();
  sub_1406B0();
  id v9 = [v8 matchedTimers];
  if (v9)
  {
    sub_140EA0();
    unint64_t v10 = sub_141310();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      id v9 = (id)sub_1417D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v9 = *(id *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
  }
  id v11 = [v8 unmatchedTimers];
  if (!v11)
  {
    if (!v9) {
      goto LABEL_20;
    }
LABEL_16:
    uint64_t v26 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[27] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_466E8;
    unint64_t v17 = 0x73614272656D6974;
    unint64_t v16 = 0xEF726F7272652365;
    goto LABEL_17;
  }
  uint64_t v12 = v11;
  sub_140EA0();
  unint64_t v13 = sub_141310();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_16;
  }
  if (v14)
  {
    uint64_t v26 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[25] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_4641C;
    unint64_t v16 = 0x8000000000147BE0;
    unint64_t v17 = 0xD000000000000012;
LABEL_17:
    return ((uint64_t (*)(unint64_t, unint64_t, void *))v26)(v17, v16, _swiftEmptyArrayStorage);
  }
LABEL_20:
  uint64_t v20 = v0[3];
  uint64_t v21 = swift_task_alloc();
  v0[22] = v21;
  *(void *)(v21 + 16) = v20;
  uint64_t v22 = (void *)swift_task_alloc();
  v0[23] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_46270;
  return sub_11DBA8((uint64_t)sub_48460, v21);
}

uint64_t sub_46270(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_46BFC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[29] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_469B4;
    uint64_t v7 = v4[19];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_4641C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_465B8, 0, 0);
  }
  else
  {
    v4[29] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_469B4;
    uint64_t v7 = v4[19];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_465B8()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_466E8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_46884, 0, 0);
  }
  else
  {
    v4[29] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_469B4;
    uint64_t v7 = v4[19];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_46884()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_469B4()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_46D2C;
  }
  else {
    uint64_t v2 = sub_46AC8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_46AC8()
{
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_46BFC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_46D2C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_46E64(uint64_t a1)
{
  sub_5830(&qword_17C3B8);
  uint64_t v4 = (void *)sub_13F160();
  sub_140D40();
  sub_140F90();
  uint64_t v3 = v2;

  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_46EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, a3, a4);
}

uint64_t sub_46FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_1D95C;
  v6[2] = a1;
  return _swift_task_switch(sub_45054, 0, 0);
}

uint64_t sub_4705C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D95C;
  return sub_45B78(a1, a2);
}

uint64_t sub_470FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4711C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_4711C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_5830(&qword_17C358);
  uint64_t v10 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

uint64_t sub_4735C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140E10();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_48398(&qword_17C2D8, 255, (void (*)(uint64_t))&type metadata accessor for TimerGrouping),
        uint64_t v7 = sub_141220(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    unint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    size_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_48398(&qword_17C2E0, 255, (void (*)(uint64_t))&type metadata accessor for TimerGrouping);
      char v15 = sub_141230();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

_OWORD *sub_47578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v28 = &type metadata for String;
  uint64_t v29 = &protocol witness table for String;
  uint64_t v30 = &protocol witness table for String;
  *(void *)&long long v27 = a1;
  *((void *)&v27 + 1) = a2;
  uint64_t v10 = (void *)*a6;
  unint64_t v12 = sub_16F44(a3, a4);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (_OWORD *)(v18[7] + 48 * v12);
      _s20HandleIntentStrategyVwxx_1((uint64_t)v19);
      return sub_34AF0(&v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a5 & 1) == 0)
  {
    sub_BDC34();
    goto LABEL_7;
  }
  sub_BD1C8(v15, a5 & 1);
  unint64_t v21 = sub_16F44(a3, a4);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_141AE0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a6;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = sub_18874((uint64_t)&v27, (uint64_t)&type metadata for String);
  __chkstk_darwin(v23);
  uint64_t v25 = (uint64_t *)((char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_47D60(v12, a3, a4, *v25, v25[1], v18);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_47774(uint64_t a1, uint64_t a2, char a3, void *a4, double a5)
{
  *(double *)&long long v26 = a5;
  long long v27 = &type metadata for Double;
  uint64_t v28 = &protocol witness table for Double;
  uint64_t v29 = &protocol witness table for Double;
  unint64_t v9 = (void *)*a4;
  unint64_t v11 = sub_16F44(a1, a2);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 >= v14 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = (void *)*a4;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = (_OWORD *)(v17[7] + 48 * v11);
      _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
      return sub_34AF0(&v26, v18);
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_BDC34();
    goto LABEL_7;
  }
  sub_BD1C8(v14, a3 & 1);
  unint64_t v20 = sub_16F44(a1, a2);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_141AE0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = (void *)*a4;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_18874((uint64_t)&v26, (uint64_t)&type metadata for Double);
  __chkstk_darwin(v22);
  uint64_t v24 = (double *)((char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *))(v25 + 16))(v24);
  sub_47F34(v11, a1, a2, v17, *v24);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v26);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_47968(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  *(void *)&long long v26 = a1;
  long long v27 = &type metadata for Int;
  uint64_t v28 = &protocol witness table for Int;
  uint64_t v29 = &protocol witness table for Int;
  unint64_t v9 = (void *)*a5;
  unint64_t v11 = sub_16F44(a2, a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 >= v14 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = (void *)*a5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = (_OWORD *)(v17[7] + 48 * v11);
      _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
      return sub_34AF0(&v26, v18);
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_BDC34();
    goto LABEL_7;
  }
  sub_BD1C8(v14, a4 & 1);
  unint64_t v20 = sub_16F44(a2, a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_141AE0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = (void *)*a5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_18874((uint64_t)&v26, (uint64_t)&type metadata for Int);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  sub_47E98(v11, a2, a3, *v24, v17);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v26);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_47B64(char a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  LOBYTE(v26) = a1;
  long long v27 = &type metadata for Bool;
  uint64_t v28 = &protocol witness table for Bool;
  uint64_t v29 = &protocol witness table for Bool;
  unint64_t v9 = (void *)*a5;
  unint64_t v11 = sub_16F44(a2, a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 >= v14 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = (void *)*a5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = (_OWORD *)(v17[7] + 48 * v11);
      _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
      return sub_34AF0(&v26, v18);
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_BDC34();
    goto LABEL_7;
  }
  sub_BD1C8(v14, a4 & 1);
  unint64_t v20 = sub_16F44(a2, a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_141AE0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = (void *)*a5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_18874((uint64_t)&v26, (uint64_t)&type metadata for Bool);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v24);
  sub_47DFC(v11, a2, a3, *v24, v17);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v26);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_47D60(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  BOOL v13 = &type metadata for String;
  uint64_t v14 = &protocol witness table for String;
  char v15 = &protocol witness table for String;
  *(void *)&long long v12 = a4;
  *((void *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = (void *)(a6[6] + 16 * a1);
  void *v7 = a2;
  v7[1] = a3;
  uint64_t result = sub_34AF0(&v12, (_OWORD *)(a6[7] + 48 * a1));
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

_OWORD *sub_47DFC(unint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  LOBYTE(v11) = a4;
  long long v12 = &type metadata for Bool;
  BOOL v13 = &protocol witness table for Bool;
  uint64_t v14 = &protocol witness table for Bool;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_34AF0(&v11, (_OWORD *)(a5[7] + 48 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_47E98(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)&long long v11 = a4;
  long long v12 = &type metadata for Int;
  BOOL v13 = &protocol witness table for Int;
  uint64_t v14 = &protocol witness table for Int;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_34AF0(&v11, (_OWORD *)(a5[7] + 48 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_47F34(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  *(double *)&long long v11 = a5;
  long long v12 = &type metadata for Double;
  BOOL v13 = &protocol witness table for Double;
  uint64_t v14 = &protocol witness table for Double;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a4[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_34AF0(&v11, (_OWORD *)(a4[7] + 48 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_47FD0()
{
  uint64_t v1 = sub_13F2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_480B8()
{
  uint64_t v2 = *(void *)(sub_13F2C0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  void *v7 = v1;
  v7[1] = sub_481C4;
  return sub_42BD4(v4, v5, v6);
}

uint64_t sub_481C4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_482C0(uint64_t a1)
{
  return sub_413E8(a1, *(void *)(v1 + 16));
}

uint64_t sub_482C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SiriTimerSnippetModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4832C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_4838C(uint64_t a1)
{
  return sub_3DD84(a1, *(void *)(v1 + 16));
}

uint64_t sub_48398(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s20HandleIntentStrategyVwxx_0(uint64_t a1)
{
  return _s20HandleIntentStrategyVwxx_1(a1);
}

ValueMetadata *_s20HandleIntentStrategyVMa_0()
{
  return &_s20HandleIntentStrategyVN_0;
}

unint64_t sub_4840C()
{
  unint64_t result = qword_17C370[0];
  if (!qword_17C370[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17C370);
  }
  return result;
}

void sub_48460(uint64_t a1)
{
}

uint64_t sub_48470(uint64_t a1)
{
  return sub_4850C(a1, (void (*)(void))type metadata accessor for PauseTimerCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:), &qword_180E78);
}

uint64_t sub_484A4(uint64_t a1)
{
  return sub_4850C(a1, (void (*)(void))type metadata accessor for PauseTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_180E80);
}

uint64_t sub_484D8(uint64_t a1)
{
  return sub_4850C(a1, (void (*)(void))type metadata accessor for PauseTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_180E88);
}

uint64_t sub_4850C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(char *, void), uint64_t *a4)
{
  uint64_t v7 = sub_140590();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  sub_140580();
  uint64_t result = a3(v9, 0);
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for SetTimerAttributeCATsSimple()
{
  uint64_t result = qword_17C3D0;
  if (!qword_17C3D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_485FC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4863C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_48660, 0, 0);
}

uint64_t sub_48660()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[5] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142FC0;
  *(void *)(v2 + 32) = 0x6954746567726174;
  *(void *)(v2 + 40) = 0xEB0000000072656DLL;
  if (v1)
  {
    uint64_t v3 = type metadata accessor for TimerTimer(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  uint64_t v5 = v0[3];
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 72) = v3;
  strcpy((char *)(v2 + 80), "updatedTimer");
  *(unsigned char *)(v2 + 93) = 0;
  *(_WORD *)(v2 + 94) = -5120;
  uint64_t v6 = 0;
  if (v5)
  {
    uint64_t v6 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 120) = v6;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_retain();
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[6] = v7;
  void *v7 = v0;
  v7[1] = sub_487FC;
  return v9(0xD000000000000027, 0x8000000000147F60, v2);
}

uint64_t sub_487FC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_48954, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_48954()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_489B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_48B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_48C4C()
{
  return type metadata accessor for SetTimerAttributeCATsSimple();
}

ValueMetadata *_s20HandleIntentStrategyVMa_1()
{
  return &_s20HandleIntentStrategyVN_1;
}

uint64_t sub_48C64()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17C428);
  sub_33D8(v0, (uint64_t)qword_17C428);
  return sub_140E60();
}

uint64_t sub_48CB0(uint64_t a1, uint64_t a2)
{
  v2[33] = a1;
  v2[34] = a2;
  uint64_t v3 = sub_13F1E0();
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v2[38] = swift_task_alloc();
  v2[39] = type metadata accessor for SetTimerAttributeHandledOnWatchParameters(0);
  v2[40] = swift_task_alloc();
  sub_5830(&qword_17C4A0);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  uint64_t v4 = sub_140730();
  v2[43] = v4;
  v2[44] = *(void *)(v4 - 8);
  v2[45] = swift_task_alloc();
  uint64_t v5 = sub_13EFF0();
  v2[46] = v5;
  v2[47] = *(void *)(v5 - 8);
  v2[48] = swift_task_alloc();
  uint64_t v6 = sub_13ECE0();
  v2[49] = v6;
  v2[50] = *(void *)(v6 - 8);
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  uint64_t v7 = sub_141170();
  v2[53] = v7;
  v2[54] = *(void *)(v7 - 8);
  v2[55] = swift_task_alloc();
  uint64_t v8 = sub_140680();
  v2[56] = v8;
  v2[57] = *(void *)(v8 - 8);
  v2[58] = swift_task_alloc();
  uint64_t v9 = sub_1406A0();
  v2[59] = v9;
  v2[60] = *(void *)(v9 - 8);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  return _swift_task_switch(sub_49084, 0, 0);
}

uint64_t sub_49084()
{
  if (qword_17B160 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[53], (uint64_t)qword_17C428);
  v0[63] = v1;
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "SetTimerAttribute.HandleIntentStrategy.makeIntentHandledResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  v0[64] = sub_5830(&qword_17C490);
  uint64_t v5 = (void *)sub_13F140();
  id v6 = [v5 updatedTimer];
  v0[65] = v6;

  if (v6)
  {
    sub_13EBB0();
    sub_90A8(v0 + 2, v0[5]);
    uint64_t v7 = sub_13F120();
    v0[66] = v8;
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v43 = v7;
      uint64_t v10 = v0[57];
      uint64_t v11 = v0[58];
      uint64_t v13 = v0[55];
      uint64_t v12 = v0[56];
      uint64_t v15 = v0[53];
      uint64_t v14 = v0[54];
      _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
      (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v11, enum case for SiriTimeMeasurement.LogDescription.siriSuggestionsDonation(_:), v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v1, v15);
      mach_absolute_time();
      sub_1406B0();
      unint64_t v16 = sub_33868((uint64_t)_swiftEmptyArrayStorage);
      v0[67] = v16;
      unint64_t v17 = sub_33868((uint64_t)_swiftEmptyArrayStorage);
      v0[68] = v17;
      uint64_t v18 = dword_180D10;
      uint64_t v19 = (void *)swift_task_alloc();
      v0[69] = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_496E0;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_180D10 + v18))(v43, v9, 0xD000000000000064, 0x80000000001480D0, v16, v17);
    }
    else
    {
      _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
      long long v26 = (void *)v0[65];
      uint64_t v27 = v0[48];
      uint64_t v28 = (void *)sub_13F160();
      v0[70] = v28;
      sub_13EC50();
      v0[71] = sub_5830(&qword_17BF00);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_142E80;
      *(void *)(inited + 32) = v26;
      unint64_t v44 = inited;
      sub_141330();
      id v30 = v26;
      sub_15E9C(v44, v27);
      swift_bridgeObjectRelease();
      id v31 = [v28 targetTimer];
      if (v31)
      {
        id v32 = v31;
        uint64_t v33 = sub_174C0(0, 0);
      }
      else
      {
        uint64_t v33 = 0;
      }
      v0[72] = v33;
      uint64_t v34 = (void *)v0[65];
      v0[73] = sub_174C0(0, 0);
      sub_140DF0();
      sub_140DE0();
      uint64_t v35 = v0[15];
      uint64_t v36 = v0[16];
      sub_90A8(v0 + 12, v35);
      id v37 = [v34 identifier];
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v39 = sub_141250();
        uint64_t v41 = v40;
      }
      else
      {
        uint64_t v39 = 0;
        uint64_t v41 = 0;
      }
      v0[74] = v41;
      uint64_t v42 = (void *)swift_task_alloc();
      v0[75] = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_49AAC;
      return dispatch thunk of SessionManaging.sessionIDString(for:)(v39, v41, v35, v36);
    }
  }
  else
  {
    char v21 = sub_141160();
    os_log_type_t v22 = sub_141470();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "Intent Handled dialog called but no timer was updated", v23, 2u);
      swift_slowDealloc();
    }

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v24 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_496E0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_49864, 0, 0);
}

uint64_t sub_49864()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[59];
  uint64_t v3 = v0[60];
  sub_140690();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = (void *)v0[65];
  uint64_t v5 = v0[48];
  id v6 = (void *)sub_13F160();
  v0[70] = v6;
  sub_13EC50();
  v0[71] = sub_5830(&qword_17BF00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142E80;
  *(void *)(inited + 32) = v4;
  unint64_t v22 = inited;
  sub_141330();
  id v8 = v4;
  sub_15E9C(v22, v5);
  swift_bridgeObjectRelease();
  id v9 = [v6 targetTimer];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_174C0(0, 0);
  }
  else
  {
    uint64_t v11 = 0;
  }
  v0[72] = v11;
  uint64_t v12 = (void *)v0[65];
  v0[73] = sub_174C0(0, 0);
  sub_140DF0();
  sub_140DE0();
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[16];
  sub_90A8(v0 + 12, v13);
  id v15 = [v12 identifier];
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v17 = sub_141250();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  v0[74] = v19;
  unint64_t v20 = (void *)swift_task_alloc();
  v0[75] = v20;
  *unint64_t v20 = v0;
  v20[1] = sub_49AAC;
  return dispatch thunk of SessionManaging.sessionIDString(for:)(v17, v19, v13, v14);
}

uint64_t sub_49AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 608) = a1;
  *(void *)(v3 + 616) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_49BFC, 0, 0);
}

uint64_t sub_49BFC()
{
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v74 = *(void *)(v0 + 616);
  uint64_t v77 = *(void *)(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v80 = *(void *)(v0 + 424);
  uint64_t v81 = *(void *)(v0 + 504);
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  int v5 = sub_13EC10() & (v74 != 0);
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v2, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v77);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v81, v80);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 176), *(void *)(v0 + 200));
  char v6 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 176);
  if ((v6 & 1) == 0 || v5)
  {
    uint64_t v36 = *(void *)(v0 + 352);
    uint64_t v35 = *(void *)(v0 + 360);
    uint64_t v37 = *(void *)(v0 + 344);
    sub_140720();
    BOOL v38 = sub_1406C0();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    if (!v38)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = sub_141160();
      os_log_type_t v42 = sub_141480();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl(&dword_0, v41, v42, "[SetTimerAttribute.HandleIntentStrategy.makeIntentHandledResponse] Using non-watchOS pattern", v43, 2u);
        swift_slowDealloc();
      }

      if (qword_17B268 != -1) {
        swift_once();
      }
      uint64_t v44 = qword_181118;
      uint64_t v45 = dword_17DB98;
      swift_retain();
      swift_retain();
      unint64_t v46 = (void *)swift_task_alloc();
      *(void *)(v0 + 688) = v46;
      *unint64_t v46 = v0;
      v46[1] = sub_4B170;
      uint64_t v33 = *(void *)(v0 + 584);
      unint64_t v31 = *(void *)(v0 + 576);
      id v30 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&dword_17DB98 + v45);
      unint64_t v32 = v44;
      return v30(v32, v31, v33);
    }
    if (v5)
    {
      uint64_t v39 = *(void *)(v0 + 336);
      uint64_t v40 = type metadata accessor for SiriTimePluginModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    }
    else
    {
      unint64_t v56 = *(uint64_t **)(v0 + 336);
      sub_5830(&qword_17C358);
      uint64_t v57 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
      unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_142D50;
      sub_1B94C((void *)(v59 + v58));
      *unint64_t v56 = v59;
      uint64_t v60 = type metadata accessor for SiriTimePluginModel(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v56, 0, 1, v60);
      if (!v74)
      {
        if (qword_17B260 != -1) {
          swift_once();
        }
        uint64_t v61 = *(void *)(v0 + 584);
        swift_retain();
        unint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 656) = v62;
        *unint64_t v62 = v0;
        uint64_t v63 = sub_4AB44;
        goto LABEL_29;
      }
    }
    if (qword_17B260 != -1) {
      swift_once();
    }
    uint64_t v61 = *(void *)(v0 + 584);
    swift_retain();
    unint64_t v62 = (void *)swift_task_alloc();
    *(void *)(v0 + 624) = v62;
    *unint64_t v62 = v0;
    uint64_t v63 = sub_4A7C8;
LABEL_29:
    v62[1] = v63;
    uint64_t v64 = *(void *)(v0 + 576);
    return sub_4863C(v64, v61);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141480();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "[SetTimerAttribute.HandleIntentStrategy.makeIntentHandledResponse] Using watchOS pattern", v9, 2u);
    swift_slowDealloc();
  }
  uint64_t v10 = *(void **)(v0 + 520);

  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_142E80;
  *(void *)(v11 + 32) = v10;
  unint64_t v89 = v11;
  sub_141330();
  id v12 = v10;
  id v13 = sub_79174(v89, 13);
  *(void *)(v0 + 728) = v13;
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v14 = self;
    *(void *)(v0 + 256) = 0;
    id v15 = [v14 archivedDataWithRootObject:v13 requiringSecureCoding:1 error:v0 + 256];
    id v16 = *(id *)(v0 + 256);
    if (v15)
    {
      uint64_t v17 = sub_13E4D0();
      unint64_t v19 = v18;

      *(void *)(v0 + 736) = v17;
      *(void *)(v0 + 744) = v19;
      if (qword_17B268 != -1) {
        swift_once();
      }
      uint64_t v20 = *(void *)(v0 + 576);
      uint64_t v22 = *(void *)(v0 + 312);
      char v21 = *(void **)(v0 + 320);
      uint64_t v23 = *(void *)(v0 + 304);
      uint64_t v86 = *(void *)(v0 + 584);
      swift_retain();
      swift_retain();
      sub_34B1C(v17, v19);
      *char v21 = 0;
      v21[1] = 0;
      uint64_t v24 = (uint64_t)v21 + *(int *)(v22 + 24);
      uint64_t v25 = sub_140500();
      long long v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      v26(v24, 1, 1, v25);
      sub_13E4C0(0);
      sub_1404D0();
      v26(v23, 0, 1, v25);
      sub_2D248(v23, v24);
      swift_retain();
      swift_release();
      *char v21 = v20;
      swift_retain();
      swift_release();
      v21[1] = v86;
      uint64_t v27 = sub_91A98();
      *(void *)(v0 + 752) = v27;
      uint64_t v28 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 760) = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_4B87C;
      id v30 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                                + v28);
      unint64_t v31 = 0x80000000001480A0;
      unint64_t v32 = 0xD000000000000020;
      uint64_t v33 = v27;
      return v30(v32, v31, v33);
    }
    uint64_t v65 = v16;
    uint64_t v66 = *(void **)(v0 + 560);
    uint64_t v67 = *(void **)(v0 + 520);
    uint64_t v68 = *(void *)(v0 + 480);
    uint64_t v73 = *(void *)(v0 + 472);
    uint64_t v69 = *(void *)(v0 + 400);
    uint64_t v76 = *(void *)(v0 + 488);
    uint64_t v79 = *(void *)(v0 + 392);
    uint64_t v70 = *(void *)(v0 + 376);
    uint64_t v88 = *(void *)(v0 + 384);
    uint64_t v83 = *(void *)(v0 + 416);
    uint64_t v85 = *(void *)(v0 + 368);
    sub_13E460();

    swift_willThrow();
    swift_release();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v76, v73);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v83, v79);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v88, v85);
  }
  else
  {
    uint64_t v47 = sub_141160();
    uint64_t v48 = sub_141480();
    if (os_log_type_enabled(v47, (os_log_type_t)v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl(&dword_0, v47, (os_log_type_t)v48, "[SetTimerAttribute.HandleIntentStrategy.makeIntentHandledResponse] Could not get timer action from timer.", v49, 2u);
      swift_slowDealloc();
    }
    uint64_t v50 = *(void **)(v0 + 560);
    uint64_t v51 = *(void **)(v0 + 520);
    uint64_t v52 = *(void *)(v0 + 480);
    uint64_t v72 = *(void *)(v0 + 472);
    uint64_t v75 = *(void *)(v0 + 488);
    uint64_t v53 = *(void *)(v0 + 400);
    uint64_t v78 = *(void *)(v0 + 392);
    uint64_t v54 = *(void *)(v0 + 376);
    uint64_t v87 = *(void *)(v0 + 384);
    uint64_t v82 = *(void *)(v0 + 416);
    uint64_t v84 = *(void *)(v0 + 368);

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v55 = 1;
    swift_willThrow();

    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v75, v72);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v82, v78);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v87, v84);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v71 = *(uint64_t (**)(void))(v0 + 8);
  return v71();
}

uint64_t sub_4A7C8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  int v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 632) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_4C118, 0, 0);
  }
  else
  {
    swift_release();
    v4[80] = a1;
    char v6 = (void *)swift_task_alloc();
    v4[81] = v6;
    *char v6 = v5;
    v6[1] = sub_4A9E0;
    uint64_t v7 = v4[77];
    uint64_t v8 = v4[76];
    uint64_t v9 = v4[61];
    uint64_t v10 = v4[52];
    uint64_t v11 = v4[48];
    uint64_t v12 = v4[33];
    return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v12, v10, v11, v9, v8, v7, 0, 0);
  }
}

uint64_t sub_4A9E0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 640);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_4EE4C, 0, 0);
}

uint64_t sub_4AB44(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 664) = a1;
  *(void *)(v3 + 672) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1) {
    uint64_t v4 = sub_4C2F4;
  }
  else {
    uint64_t v4 = sub_4ACB0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_4ACB0()
{
  uint64_t v1 = (_OWORD *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 328);
  sub_4ED1C(*(void *)(v0 + 336), v2);
  uint64_t v3 = type metadata accessor for SiriTimePluginModel(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = *(void *)(v0 + 328);
  if (v4 == 1)
  {
    sub_904C(*(void *)(v0 + 328), &qword_17C4A0);
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    *(void *)(v0 + 248) = 0;
  }
  else
  {
    *(void *)(v0 + 240) = v3;
    *(void *)(v0 + 248) = sub_1BD1C();
    uint64_t v6 = sub_187EC((uint64_t *)(v0 + 216));
    sub_4ED84(v5, (uint64_t)v6);
  }
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 680) = v7;
  void *v7 = v0;
  v7[1] = sub_4AE40;
  uint64_t v8 = *(void *)(v0 + 488);
  uint64_t v9 = *(void *)(v0 + 416);
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v11 = *(void *)(v0 + 264);
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v11, v9, v10, v1, v8, 0, 0, 0);
}

uint64_t sub_4AE40()
{
  uint64_t v1 = *(void *)v0 + 216;
  uint64_t v2 = *(void **)(*(void *)v0 + 664);
  swift_task_dealloc();

  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_4AF9C, 0, 0);
}

uint64_t sub_4AF9C()
{
  uint64_t v1 = *(void **)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 336);

  swift_release();
  swift_release();
  sub_904C(v2, &qword_17C4A0);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v8 = *(void *)(v0 + 368);
  (*(void (**)(void, void))(*(void *)(v0 + 480) + 8))(*(void *)(v0 + 488), *(void *)(v0 + 472));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_4B170(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[87] = a1;
  v3[88] = v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v1)
  {
    return _swift_task_switch(sub_4B4F0, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v3[89] = v5;
    void *v5 = v4;
    v5[1] = sub_4B390;
    uint64_t v6 = v3[61];
    uint64_t v7 = v3[52];
    uint64_t v8 = v3[48];
    uint64_t v9 = v3[33];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v9, v7, v8, v6, 0);
  }
}

uint64_t sub_4B390()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 720) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_4C4D0;
  }
  else {
    uint64_t v3 = sub_4B6BC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_4B4F0()
{
  uint64_t v1 = *(void **)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 384);
  uint64_t v10 = *(void *)(v0 + 416);
  uint64_t v11 = *(void *)(v0 + 368);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_4B6BC()
{
  uint64_t v1 = *(void **)(v0 + 520);

  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 368);
  (*(void (**)(void, void))(*(void *)(v0 + 480) + 8))(*(void *)(v0 + 488), *(void *)(v0 + 472));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_4B87C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 768) = a1;
  *(void *)(v3 + 776) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_4BD2C;
  }
  else {
    uint64_t v4 = sub_4B9E8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_4B9E8()
{
  unint64_t v1 = v0[93];
  uint64_t v2 = v0[92];
  uint64_t v4 = v0[51];
  uint64_t v3 = v0[52];
  uint64_t v5 = v0[49];
  uint64_t v6 = v0[50];
  uint64_t v7 = v0[48];
  sub_4EDE8(v0[40]);
  swift_release();
  swift_release();
  sub_34B88(v2, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  *(void *)(swift_task_alloc() + 16) = v7;
  sub_13F1B0();
  swift_task_dealloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[98] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_4BB78;
  uint64_t v9 = v0[61];
  uint64_t v10 = v0[37];
  uint64_t v11 = v0[33];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v11, v10, v9);
}

uint64_t sub_4BB78()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 792) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[96];
  (*(void (**)(void, void))(v2[36] + 8))(v2[37], v2[35]);

  if (v0) {
    uint64_t v4 = sub_4C69C;
  }
  else {
    uint64_t v4 = sub_4BF3C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_4BD2C()
{
  unint64_t v1 = v0[93];
  uint64_t v2 = v0[92];
  uint64_t v3 = (void *)v0[91];
  uint64_t v4 = (void *)v0[70];
  uint64_t v5 = v0[60];
  uint64_t v10 = (void *)v0[65];
  uint64_t v11 = v0[59];
  uint64_t v6 = v0[50];
  uint64_t v12 = v0[61];
  uint64_t v13 = v0[49];
  uint64_t v7 = v0[47];
  uint64_t v16 = v0[48];
  uint64_t v14 = v0[52];
  uint64_t v15 = v0[46];
  sub_4EDE8(v0[40]);
  swift_release();
  swift_release();
  sub_34B88(v2, v1);

  swift_release();
  sub_34B88(v2, v1);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_4BF3C()
{
  unint64_t v1 = *(void *)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 736);
  uint64_t v3 = *(void **)(v0 + 728);
  uint64_t v4 = *(void **)(v0 + 520);

  swift_release();
  sub_34B88(v2, v1);
  swift_release();

  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v9 = *(void *)(v0 + 376);
  uint64_t v8 = *(void *)(v0 + 384);
  uint64_t v10 = *(void *)(v0 + 368);
  (*(void (**)(void, void))(*(void *)(v0 + 480) + 8))(*(void *)(v0 + 488), *(void *)(v0 + 472));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_4C118()
{
  unint64_t v1 = *(void **)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v10 = *(void *)(v0 + 392);
  uint64_t v11 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v13 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 336);

  swift_release();
  swift_release();
  sub_904C(v7, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_4C2F4()
{
  unint64_t v1 = *(void **)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v10 = *(void *)(v0 + 392);
  uint64_t v11 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v13 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 336);

  swift_release();
  swift_release();
  sub_904C(v7, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_4C4D0()
{
  unint64_t v1 = *(void **)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 384);
  uint64_t v10 = *(void *)(v0 + 416);
  uint64_t v11 = *(void *)(v0 + 368);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_4C69C()
{
  unint64_t v1 = *(void *)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 736);
  uint64_t v3 = *(void **)(v0 + 728);
  uint64_t v4 = *(void **)(v0 + 520);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v10 = *(void *)(v0 + 472);
  uint64_t v11 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v12 = *(void *)(v0 + 392);
  uint64_t v13 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v14 = *(void *)(v0 + 368);
  uint64_t v15 = *(void *)(v0 + 384);

  swift_release();
  sub_34B88(v2, v1);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_4C880(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13EFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  return sub_13F1C0();
}

uint64_t sub_4C980(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_141170();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  sub_140590();
  v2[14] = swift_task_alloc();
  uint64_t v6 = sub_13EFF0();
  v2[15] = v6;
  v2[16] = *(void *)(v6 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v7 = sub_13ECE0();
  v2[18] = v7;
  v2[19] = *(void *)(v7 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_4CBEC, 0, 0);
}

uint64_t sub_4CBEC()
{
  if (qword_17B160 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_33D8(v0[5], (uint64_t)qword_17C428);
  unint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "SetTimerAttribute.HandleIntentStrategy.makeFailureHandlingIntentResponse() called", v3, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17C490);
  uint64_t v4 = (void *)sub_13F160();
  v0[22] = v4;
  id v35 = v4;
  id v5 = [v4 toDuration];
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 doubleValue];
    double v8 = v7;

    BOOL v36 = v8 > 86400.0;
  }
  else
  {
    BOOL v36 = 0;
  }
  uint64_t v9 = v0[9];
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v13 = v0[5];
  uint64_t v14 = v0[6];
  sub_13EC80();
  sub_13EFE0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[23] = sub_140470();
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v10, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v37, v13);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v15 = (void *)sub_13F140();
  uint64_t v16 = sub_140BD0();

  if (v16 <= 99)
  {
    if ((unint64_t)v16 < 7)
    {
      BOOL v38 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v17 = (void *)swift_task_alloc();
      v0[36] = v17;
      *uint64_t v17 = v0;
      unint64_t v18 = sub_4DF7C;
LABEL_11:
      v17[1] = v18;
      unint64_t v19 = 0x73614272656D6974;
      unint64_t v20 = 0xEF726F7272652365;
LABEL_12:
      return ((uint64_t (*)(unint64_t, unint64_t, void *))v38)(v19, v20, _swiftEmptyArrayStorage);
    }
LABEL_24:
    v0[2] = v16;
    return sub_141AD0();
  }
  if (v16 == 100)
  {
    BOOL v38 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v25 = (void *)swift_task_alloc();
    v0[27] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_4D43C;
    unint64_t v20 = 0x8000000000147BE0;
    unint64_t v19 = 0xD000000000000012;
    goto LABEL_12;
  }
  if (v16 == 102)
  {
    if (v36)
    {
      type metadata accessor for CreateTimerCATPatternsExecutor(0);
      sub_140580();
      v0[29] = sub_140470();
      BOOL v38 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      long long v26 = (void *)swift_task_alloc();
      v0[30] = v26;
      *long long v26 = v0;
      v26[1] = sub_4D708;
      unint64_t v27 = 0xD000000000000020;
      uint64_t v28 = "createTimer#errorDurationTooLong";
    }
    else
    {
      id v29 = [v35 toLabel];

      if (!v29)
      {
        BOOL v38 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
        uint64_t v17 = (void *)swift_task_alloc();
        v0[34] = v17;
        *uint64_t v17 = v0;
        unint64_t v18 = sub_4DCB0;
        goto LABEL_11;
      }
      uint64_t v30 = v0[20];
      uint64_t v31 = v0[21];
      uint64_t v32 = v0[18];
      uint64_t v33 = v0[19];
      sub_13EC50();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v31, v30, v32);
      if (qword_17B268 != -1) {
        swift_once();
      }
      BOOL v38 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v34 = (void *)swift_task_alloc();
      v0[32] = v34;
      *uint64_t v34 = v0;
      v34[1] = sub_4D9E4;
      unint64_t v27 = 0xD00000000000001ELL;
      uint64_t v28 = "setTimerAttribute#cannotRename";
    }
    unint64_t v20 = (unint64_t)(v28 - 32) | 0x8000000000000000;
    unint64_t v19 = v27;
    goto LABEL_12;
  }
  if (v16 != 101) {
    goto LABEL_24;
  }
  uint64_t v22 = v0[4];
  uint64_t v23 = swift_task_alloc();
  v0[24] = v23;
  *(void *)(v23 + 16) = v22;
  uint64_t v24 = (void *)swift_task_alloc();
  v0[25] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_4D27C;
  return sub_11DBA8((uint64_t)sub_4ED14, v23);
}

uint64_t sub_4D27C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  id v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_4E4A0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_4E248;
    uint64_t v7 = v4[21];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_4D43C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  id v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_4D5D8, 0, 0);
  }
  else
  {
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_4E248;
    uint64_t v7 = v4[21];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_4D5D8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_4D708(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_4D8AC, 0, 0);
  }
  else
  {
    swift_release();
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_4E248;
    uint64_t v7 = v4[21];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_4D8AC()
{
  uint64_t v1 = (void *)v0[22];
  swift_release();

  swift_release();
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v6 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v7 = v0[15];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_4D9E4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_4DB80, 0, 0);
  }
  else
  {
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_4E248;
    uint64_t v7 = v4[21];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_4DB80()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_4DCB0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_4DE4C, 0, 0);
  }
  else
  {
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_4E248;
    uint64_t v7 = v4[21];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_4DE4C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_4DF7C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 296) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_4E118, 0, 0);
  }
  else
  {
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_4E248;
    uint64_t v7 = v4[21];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_4E118()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_4E248()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_4E5D0;
  }
  else {
    uint64_t v2 = sub_4E35C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_4E35C()
{
  uint64_t v1 = *(void **)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 96);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_4E4A0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_4E5D0()
{
  uint64_t v1 = *(void **)(v0 + 304);

  swift_release();
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

void sub_4E708(uint64_t a1)
{
  sub_5830(&qword_17C490);
  uint64_t v4 = (void *)sub_13F160();
  sub_140BC0();
  sub_140F90();
  uint64_t v3 = v2;

  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_4E784(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  void *v5 = v2;
  v5[1] = sub_4E82C;
  return sub_48CB0(a1, a2);
}

uint64_t sub_4E82C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_4E960, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_4E960()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_4EA20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  void *v5 = v2;
  v5[1] = sub_4EAC8;
  return sub_4C980(a1, a2);
}

uint64_t sub_4EAC8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_4EBFC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_4EBFC()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_4ECC0()
{
  unint64_t result = qword_17C448[0];
  if (!qword_17C448[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17C448);
  }
  return result;
}

void sub_4ED14(uint64_t a1)
{
}

uint64_t sub_4ED1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4ED84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SiriTimePluginModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4EDE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SetTimerAttributeHandledOnWatchParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4EE44(uint64_t a1)
{
  return sub_4C880(a1, *(void *)(v1 + 16));
}

uint64_t sub_4EE4C()
{
  return sub_4AF9C();
}

uint64_t type metadata accessor for ResumeTimerCATsSimple()
{
  uint64_t result = qword_17C4A8;
  if (!qword_17C4A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4EF0C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4EF4C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_4EF6C, 0, 0);
}

uint64_t sub_4EF6C()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  *(void *)(v2 + 32) = 0x72656D6974;
  *(void *)(v2 + 40) = 0xE500000000000000;
  uint64_t v3 = 0;
  if (v1)
  {
    uint64_t v3 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  uint64_t v6 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_4F0A4;
  return v6(0xD000000000000021, 0x8000000000148180, v2);
}

uint64_t sub_4F0A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_4F1FC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_4F1FC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4F260(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_4F280, 0, 0);
}

uint64_t sub_4F280()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  strcpy((char *)(v2 + 32), "resumedTimers");
  *(_WORD *)(v2 + 46) = -4864;
  *(void *)(v2 + 72) = sub_5830(&qword_17C508);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_4F0A4;
  return v5(0xD000000000000021, 0x80000000001481B0, v2);
}

uint64_t sub_4F3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_4F540(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_4F650()
{
  return type metadata accessor for ResumeTimerCATsSimple();
}

uint64_t type metadata accessor for TimerBaseCATs_Async()
{
  uint64_t result = qword_17C510;
  if (!qword_17C510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4F6A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4F6E4(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 72) = a2;
  *(void *)(v4 + 16) = a1;
  sub_5830(&qword_17BE78);
  *(void *)(v4 + 40) = swift_task_alloc();
  return _swift_task_switch(sub_4F780, 0, 0);
}

uint64_t sub_4F780()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 72);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 48) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_142FC0;
  *(void *)(v4 + 32) = 0x6C6174736E497369;
  *(void *)(v4 + 40) = 0xE90000000000006CLL;
  *(unsigned char *)(v4 + 48) = v3;
  uint64_t v5 = (uint64_t *)(v4 + 96);
  *(void *)(v4 + 72) = &type metadata for Bool;
  *(void *)(v4 + 80) = 0x65707954707061;
  *(void *)(v4 + 88) = 0xE700000000000000;
  sub_8FE8(v2, v1, &qword_17BE78);
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1, 1, v6);
  uint64_t v9 = *(void *)(v0 + 40);
  if (v8 == 1)
  {
    sub_904C(*(void *)(v0 + 40), &qword_17BE78);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 112) = 0u;
  }
  else
  {
    *(void *)(v4 + 120) = v6;
    uint64_t v10 = sub_187EC(v5);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v10, v9, v6);
  }
  uint64_t v14 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_4F990;
  uint64_t v12 = *(void *)(v0 + 16);
  return v14(v12, 0xD000000000000017, 0x8000000000148220, v4);
}

uint64_t sub_4F990()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1A468, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_4FAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_4FC70()
{
  return type metadata accessor for TimerBaseCATs_Async();
}

uint64_t sub_4FC78()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17C568);
  sub_33D8(v0, (uint64_t)qword_17C568);
  return sub_140E40();
}

uint64_t sub_4FCC4(long long *a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v1 + 16) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(v1 + 80) = 0;
  if (qword_17B168 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_141170();
  sub_33D8(v4, (uint64_t)qword_17C568);
  uint64_t v5 = sub_141160();
  os_log_type_t v6 = sub_141480();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "RemoteTimerContinuationFlow.init", v7, 2u);
    swift_slowDealloc();
  }

  sub_3498(a1, v2 + 24);
  return v2;
}

uint64_t sub_4FDD0(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_13EDF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v60 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v14 - 8);
  uint64_t v69 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_13F3E0();
  uint64_t v67 = *(void *)(v16 - 8);
  uint64_t v68 = v16;
  __chkstk_darwin(v16);
  uint64_t v66 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B168 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_141170();
  uint64_t v19 = sub_33D8(v18, (uint64_t)qword_17C568);
  swift_retain_n();
  unint64_t v20 = sub_141160();
  os_log_type_t v21 = sub_141480();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v65 = v5;
    uint64_t v22 = swift_slowAlloc();
    unint64_t v61 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    unint64_t v62 = v8;
    v71[0] = v24;
    uint64_t v63 = v4;
    uint64_t v64 = v19;
    *(_DWORD *)uint64_t v23 = 136315138;
    LOBYTE(v70) = *(unsigned char *)(v2 + 16);
    uint64_t v25 = sub_141260();
    uint64_t v70 = sub_58C0(v25, v26, v71);
    uint64_t v4 = v63;
    sub_1415C0();
    swift_release_n();
    uint64_t v5 = v65;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v20, v21, "RemoteTimerContinuationFlow.on(input:) state %s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v8 = v62;
    swift_slowDealloc();
    a1 = v61;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  switch(*(unsigned char *)(v2 + 16))
  {
    case 1:
      id v35 = sub_141160();
      os_log_type_t v36 = sub_141480();
      if (!os_log_type_enabled(v35, v36)) {
        goto LABEL_22;
      }
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      BOOL v38 = "RemoteTimerContinuationFlow return false for shouldPromptRemote";
      goto LABEL_21;
    case 2:
      id v35 = sub_141160();
      os_log_type_t v36 = sub_141480();
      if (!os_log_type_enabled(v35, v36)) {
        goto LABEL_22;
      }
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      BOOL v38 = "RemoteTimerContinuationFlow return false for waitingOnPromptResponse";
      goto LABEL_21;
    case 3:
      sub_B6610(a1, 0, (uint64_t)v13);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v13, v4);
      sub_13EDD0();
      sub_53284();
      char v39 = sub_141230();
      uint64_t v40 = *(void (**)(char *, uint64_t))(v5 + 8);
      v40(v8, v4);
      if (v39)
      {
        v40(v11, v4);
        uint64_t v41 = sub_141160();
        os_log_type_t v42 = sub_141480();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v43 = 0;
          _os_log_impl(&dword_0, v41, v42, "RemoteTimerContinuationFlow: Confirming to report back remote timers", v43, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        uint64_t v44 = *(void **)(v2 + 64);
        if (v44)
        {
          swift_endAccess();
          sub_2FF44();
          id v45 = v44;
          uint64_t v33 = 1;
          Class isa = sub_141570(1).super.super.isa;
          [v45 setIncludeRemoteTimers:isa];

          v40(v13, v4);
          return v33;
        }
        goto LABEL_33;
      }
      sub_13EDC0();
      char v51 = sub_141230();
      v40(v8, v4);
      v40(v11, v4);
      uint64_t v52 = sub_141160();
      os_log_type_t v53 = sub_141480();
      BOOL v54 = os_log_type_enabled(v52, v53);
      if (v51)
      {
        if (v54)
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v55 = 0;
          _os_log_impl(&dword_0, v52, v53, "RemoteTimerContinuationFlow: Confirming to stop here and only have read out first response", v55, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        unint64_t v56 = *(void **)(v2 + 64);
        if (v56)
        {
          swift_endAccess();
          sub_2FF44();
          id v57 = v56;
          Class v58 = sub_141570(0).super.super.isa;
          [v57 setIncludeRemoteTimers:v58];

          v40(v13, v4);
          return 1;
        }
LABEL_33:
        v40(v13, v4);
        swift_endAccess();
        return 1;
      }
      if (v54)
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v59 = 0;
        _os_log_impl(&dword_0, v52, v53, "RemoteTimerContinuationFlow: Default case return false for reportRemote", v59, 2u);
        swift_slowDealloc();
      }

      v40(v13, v4);
      return 0;
    case 4:
      id v35 = sub_141160();
      os_log_type_t v36 = sub_141480();
      if (!os_log_type_enabled(v35, v36)) {
        goto LABEL_22;
      }
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      BOOL v38 = "RemoteTimerContinuationFlow: return false for complete";
LABEL_21:
      _os_log_impl(&dword_0, v35, v36, v38, v37, 2u);
      swift_slowDealloc();
LABEL_22:

      return 0;
    default:
      uint64_t v27 = (uint64_t)v66;
      sub_13F370();
      uint64_t v28 = sub_140980();
      uint64_t v29 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v69, 1, 1, v28);
      id v30 = sub_F698(v27, v29);
      sub_3358C(v29);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v27, v68);
      if (v30 && (sub_140D40(), (uint64_t v31 = swift_dynamicCastClass()) != 0))
      {
        uint64_t v32 = v31;
        uint64_t v33 = 1;
        swift_beginAccess();
        uint64_t v34 = *(void **)(v2 + 64);
        *(void *)(v2 + 64) = v32;
      }
      else
      {
        uint64_t v48 = sub_141160();
        os_log_type_t v49 = sub_141470();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v50 = 0;
          _os_log_impl(&dword_0, v48, v49, "RemoteTimerContinuationFlow didn't receive valid SearchTimerIntent parse", v50, 2u);
          swift_slowDealloc();
        }

        uint64_t v33 = 0;
        *(unsigned char *)(v2 + 16) = 4;
      }
      return v33;
  }
}

uint64_t sub_50710(uint64_t a1)
{
  v2[44] = a1;
  v2[45] = v1;
  uint64_t v3 = sub_13ECE0();
  v2[46] = v3;
  v2[47] = *(void *)(v3 - 8);
  v2[48] = swift_task_alloc();
  sub_140590();
  v2[49] = swift_task_alloc();
  uint64_t v4 = sub_141170();
  v2[50] = v4;
  v2[51] = *(void *)(v4 - 8);
  v2[52] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v2[53] = v5;
  v2[54] = *(void *)(v5 - 8);
  v2[55] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v2[56] = v6;
  v2[57] = *(void *)(v6 - 8);
  v2[58] = swift_task_alloc();
  uint64_t v7 = sub_13EFF0();
  v2[59] = v7;
  v2[60] = *(void *)(v7 - 8);
  v2[61] = swift_task_alloc();
  uint64_t v8 = sub_5830(&qword_17C660);
  v2[62] = v8;
  v2[63] = *(void *)(v8 - 8);
  v2[64] = swift_task_alloc();
  return _swift_task_switch(sub_509CC, 0, 0);
}

uint64_t sub_509CC()
{
  uint64_t v68 = v0;
  if (qword_17B168 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(*(void *)(v0 + 400), (uint64_t)qword_17C568);
  *(void *)(v0 + 520) = v1;
  swift_retain_n();
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 360);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    *(unsigned char *)(v0 + 592) = *(unsigned char *)(v5 + 16);
    uint64_t v7 = sub_141260();
    *(void *)(v0 + 344) = sub_58C0(v7, v8, &v67);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v2, v3, "RemoteTimerContinuationFlow.execute() state %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v9 = *(void *)(v0 + 360);
  swift_beginAccess();
  uint64_t v10 = *(void **)(v9 + 64);
  *(void *)(v0 + 528) = v10;
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 360);
    switch(*(unsigned char *)(v11 + 16))
    {
      case 1:
        id v26 = v10;
        uint64_t v27 = sub_141160();
        os_log_type_t v28 = sub_141480();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v29 = 0;
          _os_log_impl(&dword_0, v27, v28, "RemoteTimerContinuationFlow: in shouldPromptRemote", v29, 2u);
          swift_slowDealloc();
        }
        uint64_t v31 = *(void *)(v0 + 432);
        uint64_t v30 = *(void *)(v0 + 440);
        uint64_t v32 = *(void *)(v0 + 416);
        uint64_t v64 = *(void *)(v0 + 424);
        uint64_t v33 = *(void *)(v0 + 408);
        uint64_t v65 = *(void *)(v0 + 400);

        *(unsigned char *)(v11 + 16) = 2;
        sub_11838C(11);
        unint64_t v34 = swift_bridgeObjectRetain();
        id v35 = sub_5311C(v34);
        *(void *)(v0 + 536) = v35;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, void, uint64_t))(v31 + 104))(v30, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v64);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v1, v65);
        mach_absolute_time();
        sub_1406B0();
        type metadata accessor for SearchForTimersCATsSimple();
        sub_140580();
        *(void *)(v0 + 544) = sub_140530();
        sub_5830(&qword_17F3D0);
        uint64_t v36 = swift_allocObject();
        *(void *)(v0 + 552) = v36;
        *(_OWORD *)(v36 + 16) = xmmword_142D50;
        *(void *)(v36 + 32) = 0x7372656D6974;
        *(void *)(v36 + 40) = 0xE600000000000000;
        *(void *)(v36 + 72) = sub_5830(&qword_17C508);
        *(void *)(v36 + 48) = v35;
        uint64_t v66 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                                  + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
        swift_bridgeObjectRetain();
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 560) = v37;
        *uint64_t v37 = v0;
        v37[1] = sub_51458;
        return v66(0xD000000000000028, 0x80000000001482D0, v36);
      case 2:
        id v39 = v10;
        uint64_t v40 = sub_141160();
        os_log_type_t v41 = sub_141480();
        if (os_log_type_enabled(v40, v41))
        {
          os_log_type_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v42 = 0;
          _os_log_impl(&dword_0, v40, v41, "RemoteTimerContinuationFlow: in waitingOnPromptResponse", v42, 2u);
          swift_slowDealloc();
        }

        *(unsigned char *)(v11 + 16) = 3;
        sub_13EEC0();

        goto LABEL_36;
      case 3:
        id v43 = v10;
        uint64_t v44 = sub_141160();
        os_log_type_t v45 = sub_141480();
        if (os_log_type_enabled(v44, v45))
        {
          unint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v46 = 0;
          _os_log_impl(&dword_0, v44, v45, "RemoteTimerContinuationFlow: in needsPromptRemoteResponse", v46, 2u);
          swift_slowDealloc();
        }

        id v47 = [v43 includeRemoteTimers];
        sub_2FF44();
        v48.super.super.Class isa = sub_141570(1).super.super.isa;
        Class isa = v48.super.super.isa;
        if (v47)
        {
          id v50 = v47;
          char v51 = sub_141590();

          if (v51)
          {
            uint64_t v52 = *(void *)(v0 + 512);
            uint64_t v53 = *(void *)(v0 + 360);
            *(unsigned char *)(v11 + 16) = 3;
            sub_3410(v53 + 24, v0 + 16);
            sub_1408B0();
            sub_1408A0();
            sub_140890();
            swift_release();
            uint64_t v54 = type metadata accessor for TimerFlowProvider();
            uint64_t v55 = swift_allocObject();
            sub_3498((long long *)(v0 + 176), v55 + 16);
            *(void *)(v0 + 56) = v55;
            *(void *)(v0 + 80) = v54;
            *(void *)(v0 + 88) = &off_175250;
            sub_90A8((void *)(v0 + 56), v54);
            sub_78058(*(unsigned char *)(v53 + 80), v52);
            if (qword_17B240 != -1) {
              swift_once();
            }
            uint64_t v57 = *(void *)(v0 + 504);
            uint64_t v56 = *(void *)(v0 + 512);
            uint64_t v58 = *(void *)(v0 + 496);
            sub_13EE10();
            sub_13EEF0();

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
            sub_BA88(v0 + 16);
            goto LABEL_36;
          }
        }
        else
        {
        }
        *(unsigned char *)(v11 + 16) = 4;
        sub_13EF00();

        goto LABEL_36;
      case 4:
        id v59 = v10;
        uint64_t v60 = sub_141160();
        os_log_type_t v61 = sub_141480();
        if (os_log_type_enabled(v60, v61))
        {
          unint64_t v62 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v62 = 0;
          _os_log_impl(&dword_0, v60, v61, "RemoteTimerContinuationFlow: complete", v62, 2u);
          swift_slowDealloc();
        }

        sub_13EF00();
        goto LABEL_36;
      default:
        id v12 = v10;
        uint64_t v13 = sub_141160();
        os_log_type_t v14 = sub_141480();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_0, v13, v14, "RemoteTimerContinuationFlow: in begin", v15, 2u);
          swift_slowDealloc();
        }
        uint64_t v16 = *(void *)(v0 + 512);
        uint64_t v17 = *(void *)(v0 + 360);

        sub_3410(v17 + 24, v0 + 96);
        sub_1408B0();
        sub_1408A0();
        sub_140890();
        swift_release();
        uint64_t v18 = type metadata accessor for TimerFlowProvider();
        uint64_t v19 = swift_allocObject();
        sub_3498((long long *)(v0 + 216), v19 + 16);
        *(void *)(v0 + 136) = v19;
        *(void *)(v0 + 160) = v18;
        *(void *)(v0 + 168) = &off_175250;
        sub_90A8((void *)(v0 + 136), v18);
        sub_78058(0, v16);
        if (qword_17B240 != -1) {
          swift_once();
        }
        uint64_t v21 = *(void *)(v0 + 504);
        uint64_t v20 = *(void *)(v0 + 512);
        uint64_t v22 = *(void *)(v0 + 496);
        sub_13EE10();
        swift_retain();
        sub_13EED0();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
        sub_BA88(v0 + 96);
        goto LABEL_36;
    }
  }
  uint64_t v23 = sub_141160();
  os_log_type_t v24 = sub_141470();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_0, v23, v24, "Unable to parse intent", v25, 2u);
    swift_slowDealloc();
  }

  sub_13EF00();
LABEL_36:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v63 = *(uint64_t (**)(void))(v0 + 8);
  return v63();
}

uint64_t sub_51458(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 568) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_51928;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v4 + 576) = a1;
    uint64_t v5 = sub_515A0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_515A0()
{
  sub_13EC60();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[73] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_51664;
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[58];
  uint64_t v4 = v0[48];
  return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v0 + 32, v4, v2, v3, 0, 0, 0, 0);
}

uint64_t sub_51664()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 576);
  uint64_t v2 = *(void *)(*(void *)v0 + 384);
  uint64_t v3 = *(void *)(*(void *)v0 + 376);
  uint64_t v4 = *(void *)(*(void *)v0 + 368);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_517D4, 0, 0);
}

uint64_t sub_517D4()
{
  uint64_t v1 = (void *)v0[66];
  uint64_t v2 = v0[60];
  uint64_t v3 = v0[58];
  uint64_t v8 = v0[59];
  uint64_t v9 = v0[61];
  uint64_t v5 = v0[56];
  uint64_t v4 = v0[57];
  sub_90A8(v0 + 32, v0[35]);
  sub_13F3F0();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 32));
  sub_13EEE0();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v9, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_51928()
{
  uint64_t v17 = v0;
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  uint64_t v4 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v6 = v0[56];
  uint64_t v5 = v0[57];
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[71];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    v0[41] = v9;
    swift_errorRetain();
    sub_5830(&qword_17BFD0);
    uint64_t v11 = sub_141260();
    v0[40] = sub_58C0(v11, v12, &v16);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v7, v8, "RemoteTimerContinuationFlow: Error outputting prompt confirmation: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v13 = (void *)v0[66];
  *(unsigned char *)(v0[45] + 16) = 4;
  sub_13EF00();
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

void sub_51BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17C668);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v9 = (void *)v7[1];
    uint64_t v10 = v7[2];
    swift_release();
    swift_beginAccess();
    uint64_t v11 = *(void **)(a2 + 64);
    *(void *)(a2 + 64) = v9;
    unint64_t v12 = v9;

    id v13 = [v10 matchedTimers];
    if (v13)
    {
      os_log_type_t v14 = v13;
      sub_140EA0();
      unint64_t v15 = sub_141310();
    }
    else
    {
      unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
    }
    id v26 = [v10 remoteTimers];
    if (v26)
    {
      uint64_t v27 = v26;
      sub_140EA0();
      unint64_t v28 = sub_141310();

      if (!(v15 >> 62))
      {
LABEL_17:
        uint64_t v29 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
        goto LABEL_18;
      }
    }
    else
    {
      unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
      if (!(v15 >> 62)) {
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1417D0();
    swift_bridgeObjectRelease();
LABEL_18:
    *(unsigned char *)(a2 + 80) = v29 != 0;
    unint64_t v30 = v28 >> 62;
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1417D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    if (!v31)
    {
      swift_bridgeObjectRelease();
      if (v29)
      {
        if (qword_17B168 != -1) {
          swift_once();
        }
        uint64_t v43 = sub_141170();
        sub_33D8(v43, (uint64_t)qword_17C568);
        uint64_t v44 = sub_141160();
        os_log_type_t v45 = sub_141480();
        if (!os_log_type_enabled(v44, v45)) {
          goto LABEL_60;
        }
        unint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v46 = 0;
        id v47 = "RemoteTimerContinuationFlow: should have already read remote timers – setting state .complete";
      }
      else
      {
        if (qword_17B168 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_141170();
        sub_33D8(v53, (uint64_t)qword_17C568);
        uint64_t v44 = sub_141160();
        os_log_type_t v45 = sub_141480();
        if (!os_log_type_enabled(v44, v45)) {
          goto LABEL_60;
        }
        unint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v46 = 0;
        id v47 = "RemoteTimerContinuationFlow: No timers found at all – setting state .complete";
      }
LABEL_59:
      _os_log_impl(&dword_0, v44, v45, v47, v46, 2u);
      swift_slowDealloc();
      uint64_t v55 = v12;
LABEL_61:

      goto LABEL_62;
    }
    if (v29) {
      goto LABEL_22;
    }
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1417D0();
      swift_bridgeObjectRelease();
      if (v57 >= 2) {
        goto LABEL_65;
      }
    }
    else if (*(uint64_t *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8)) >= 2)
    {
LABEL_65:
      if (qword_17B168 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_141170();
      sub_33D8(v58, (uint64_t)qword_17C568);
      id v39 = sub_141160();
      os_log_type_t v40 = sub_141480();
      if (os_log_type_enabled(v39, v40))
      {
        os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v41 = 0;
        os_log_type_t v42 = "RemoteTimerContinuationFlow: no local matched timers with matched remote timers – setting state .shouldPromptRemote";
        goto LABEL_69;
      }
LABEL_70:
      id v59 = v39;
      id v39 = v10;
      uint64_t v10 = v12;
      goto LABEL_71;
    }
LABEL_22:
    id v32 = [v12 associatedDeviceTarget];

    if (!v32) {
      goto LABEL_25;
    }
    id v33 = [v12 associatedDeviceTarget];
    id v34 = [v33 isInRespondingRoom];

    sub_2FF44();
    v35.super.super.Class isa = sub_141580(1).super.super.isa;
    if (!v34)
    {
      swift_bridgeObjectRelease();

LABEL_55:
      if (qword_17B168 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_141170();
      sub_33D8(v54, (uint64_t)qword_17C568);
      uint64_t v44 = sub_141160();
      os_log_type_t v45 = sub_141480();
      if (os_log_type_enabled(v44, v45))
      {
        unint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v46 = 0;
        id v47 = "RemoteTimerContinuationFlow: associatedDeviceTarget was not in responding room (do not read other remote t"
              "imers) - setting state .complete";
        goto LABEL_59;
      }
LABEL_60:
      uint64_t v55 = v44;
      uint64_t v44 = v10;
      uint64_t v10 = v12;
      goto LABEL_61;
    }
    id v36 = v34;
    char v37 = sub_141590();

    if (v37)
    {
LABEL_25:
      if (v30)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1417D0();
        swift_bridgeObjectRelease();
        if (v52 >= 2)
        {
LABEL_27:
          if (qword_17B168 != -1) {
            swift_once();
          }
          uint64_t v38 = sub_141170();
          sub_33D8(v38, (uint64_t)qword_17C568);
          id v39 = sub_141160();
          os_log_type_t v40 = sub_141480();
          if (os_log_type_enabled(v39, v40))
          {
            os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v41 = 0;
            os_log_type_t v42 = "RemoteTimerContinuationFlow: has both local and remote timers to respond – setting state .shouldPromptRemote";
LABEL_69:
            _os_log_impl(&dword_0, v39, v40, v42, v41, 2u);
            swift_slowDealloc();
            id v59 = v12;
LABEL_71:

            *(void *)(a2 + 72) = v28;
            swift_bridgeObjectRelease();
            char v56 = 1;
            goto LABEL_63;
          }
          goto LABEL_70;
        }
      }
      else if (*(uint64_t *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8)) >= 2)
      {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  if (v8 == enum case for RCHFlowResult.error<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v16 = *v7;
    if (qword_17B168 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_141170();
    sub_33D8(v17, (uint64_t)qword_17C568);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = sub_141160();
    os_log_type_t v19 = sub_141470();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v61 = v16;
      swift_errorRetain();
      sub_5830(&qword_17BFD0);
      uint64_t v21 = sub_141260();
      uint64_t v61 = sub_58C0(v21, v22, v60);
      sub_1415C0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v18, v19, "RemoteTimerContinuationFlow: Error handling base search flow: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
LABEL_62:
      char v56 = 4;
LABEL_63:
      *(unsigned char *)(a2 + 16) = v56;
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_39:

    goto LABEL_62;
  }
  if (v8 == enum case for RCHFlowResult.cancelled<A, B>(_:))
  {
    if (qword_17B168 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_141170();
    sub_33D8(v23, (uint64_t)qword_17C568);
    uint64_t v18 = sub_141160();
    os_log_type_t v24 = sub_141480();
    if (os_log_type_enabled(v18, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v18, v24, "RemoteTimerContinuationFlow: Parent flow returned .cancelled – setting state .complete", v25, 2u);
      swift_slowDealloc();
    }
    goto LABEL_39;
  }
  if (qword_17B168 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_141170();
  sub_33D8(v48, (uint64_t)qword_17C568);
  os_log_type_t v49 = sub_141160();
  os_log_type_t v50 = sub_141470();
  if (os_log_type_enabled(v49, v50))
  {
    char v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v51 = 0;
    _os_log_impl(&dword_0, v49, v50, "RemoteTimerContinuationFlow: Unknown state response in RemoteTimerContinuationFlow (state .begin)", v51, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(a2 + 16) = 4;
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_52668()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 24);

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteTimerContinuationFlow()
{
  return self;
}

uint64_t getEnumTagSinglePayload for RemoteTimerContinuationFlow.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteTimerContinuationFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x52830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteTimerContinuationFlow.State()
{
  return &type metadata for RemoteTimerContinuationFlow.State;
}

unint64_t sub_5286C()
{
  unint64_t result = qword_17C640[0];
  if (!qword_17C640[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17C640);
  }
  return result;
}

uint64_t sub_528C0(unint64_t a1)
{
  return sub_4FDD0(a1) & 1;
}

uint64_t sub_528E8()
{
  return sub_13EA80();
}

uint64_t sub_5291C(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_159A4;
  return sub_50710(a1);
}

void *sub_529B8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v7)
  {
    while (1)
    {
      unint64_t v33 = v6;
      unint64_t v8 = 0;
      uint64_t v37 = v6 & 0xFFFFFFFFFFFFFF8;
      unint64_t v38 = v6 & 0xC000000000000001;
      uint64_t v34 = a2;
      uint64_t v36 = v7;
      while (v38)
      {
        id v9 = (id)sub_1416A0();
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_39;
        }
        id v12 = [v9 device];
        if (v12
          && (v13 = v12, id v14 = [v12 roomID], v13, v14))
        {
          uint64_t v15 = sub_141250();
          uint64_t v17 = v16;

          if (v15 == a2 && v17 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_19:
            id v20 = [v10 identifier];
            if (v20)
            {
              uint64_t v21 = v20;
              uint64_t v22 = sub_141250();
              uint64_t v24 = v23;
            }
            else
            {
              uint64_t v22 = 0;
              uint64_t v24 = 0;
            }
            uint64_t v25 = a3;
            id v26 = [a4 identifier];
            if (v26)
            {
              uint64_t v27 = v26;
              uint64_t v28 = sub_141250();
              uint64_t v30 = v29;

              if (v24)
              {
                if (v30)
                {
                  if (v22 == v28 && v24 == v30)
                  {

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
LABEL_35:
                    a3 = v25;
                    unint64_t v6 = v33;
                    a2 = v34;
                    uint64_t v7 = v36;
                    goto LABEL_5;
                  }
                  char v31 = sub_141AA0();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v31)
                  {
LABEL_34:

                    goto LABEL_35;
                  }
LABEL_32:
                  sub_141700();
                  sub_141740();
                  sub_141750();
                  sub_141710();
                  goto LABEL_35;
                }
              }
              else if (!v30)
              {
                goto LABEL_34;
              }
            }
            else if (!v24)
            {
              goto LABEL_34;
            }
            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
          char v19 = sub_141AA0();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_19;
          }

          uint64_t v7 = v36;
        }
        else
        {
        }
LABEL_5:
        ++v8;
        if (v11 == v7) {
          return &_swiftEmptyArrayStorage;
        }
      }
      if (v8 < *(void *)(v37 + 16)) {
        break;
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      uint64_t v7 = sub_1417D0();
      if (!v7) {
        return &_swiftEmptyArrayStorage;
      }
    }
    id v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
  return &_swiftEmptyArrayStorage;
}

void *sub_52CA8(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_30;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v5)
  {
    while (1)
    {
      uint64_t v23 = v3;
      uint64_t v24 = v5;
      unint64_t v6 = 0;
      uint64_t v26 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v27 = v4 & 0xC000000000000001;
      uint64_t v7 = (SEL *)&unk_17A000;
      unint64_t v25 = v4;
      while (v27)
      {
        id v9 = (id)sub_1416A0();
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_29;
        }
        id v12 = [v9 v7[125]];
        if (v12)
        {
          uint64_t v3 = (uint64_t)v12;
          uint64_t v13 = sub_141250();
          uint64_t v15 = v14;
        }
        else
        {
          uint64_t v13 = 0;
          uint64_t v15 = 0;
        }
        uint64_t v16 = v7;
        id v17 = objc_msgSend(a2, v7[125], v23);
        if (v17)
        {
          uint64_t v18 = v17;
          uint64_t v3 = sub_141250();
          uint64_t v20 = v19;

          if (v15)
          {
            uint64_t v21 = v24;
            if (!v20) {
              goto LABEL_22;
            }
            if (v13 == v3 && v15 == v20)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_5;
            }
            uint64_t v3 = sub_141AA0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v3 & 1) == 0) {
              goto LABEL_23;
            }
          }
          else
          {
            uint64_t v21 = v24;
            if (v20)
            {
LABEL_22:
              swift_bridgeObjectRelease();
LABEL_23:
              sub_141700();
              uint64_t v3 = *((void *)&_swiftEmptyArrayStorage + 2);
              sub_141740();
              sub_141750();
              sub_141710();
              goto LABEL_5;
            }
          }
        }
        else
        {
          uint64_t v21 = v24;
          if (v15) {
            goto LABEL_22;
          }
        }

LABEL_5:
        ++v6;
        BOOL v8 = v11 == v21;
        uint64_t v7 = v16;
        unint64_t v4 = v25;
        if (v8) {
          return &_swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)(v26 + 16)) {
        break;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      uint64_t v5 = sub_1417D0();
      if (!v5) {
        return &_swiftEmptyArrayStorage;
      }
    }
    id v9 = *(id *)(v4 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_52EE8(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1417D0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v21 = v3;
      uint64_t v22 = v5;
      unint64_t v23 = v4;
      unint64_t v24 = v4 & 0xC000000000000001;
      uint64_t v6 = 4;
      uint64_t v7 = (SEL *)&unk_17A000;
      while (1)
      {
        if (v24) {
          id v8 = (id)sub_1416A0();
        }
        else {
          id v8 = *(id *)(v4 + 8 * v6);
        }
        id v9 = v8;
        uint64_t v10 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        id v11 = [v8 v7[122]];
        if (v11)
        {
          uint64_t v3 = (uint64_t)v11;
          uint64_t v12 = sub_141250();
          uint64_t v14 = v13;
        }
        else
        {
          uint64_t v12 = 0;
          uint64_t v14 = 0;
        }
        uint64_t v15 = v7;
        id v16 = objc_msgSend(a2, v7[122], v21);
        if (!v16) {
          break;
        }
        uint64_t v3 = (uint64_t)v16;
        uint64_t v17 = sub_141250();
        uint64_t v19 = v18;

        if (!v14)
        {
          if (!v19)
          {
LABEL_24:
            swift_bridgeObjectRelease();

            return 1;
          }
          goto LABEL_5;
        }
        if (!v19) {
          goto LABEL_5;
        }
        if (v12 == v17 && v14 == v19)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
LABEL_26:
          swift_bridgeObjectRelease();
          return 1;
        }
        uint64_t v3 = sub_141AA0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v4 = v23;
        uint64_t v7 = v15;
        if (v3) {
          goto LABEL_26;
        }
LABEL_6:
        ++v6;
        if (v10 == v22) {
          goto LABEL_30;
        }
      }
      if (!v14) {
        goto LABEL_24;
      }
LABEL_5:

      swift_bridgeObjectRelease();
      unint64_t v4 = v23;
      uint64_t v7 = v15;
      goto LABEL_6;
    }
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_5311C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v3) {
      break;
    }
    unint64_t result = (void *)sub_141730();
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_1416A0();
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      sub_1E808(v6);

      if (v1) {
        return (void *)swift_release();
      }
      ++v5;
      sub_141700();
      sub_141740();
      sub_141750();
      sub_141710();
      if (v3 == v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_5327C(uint64_t a1)
{
  sub_51BD0(a1, v1);
}

unint64_t sub_53284()
{
  unint64_t result = qword_17EBA0;
  if (!qword_17EBA0)
  {
    sub_13EDF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EBA0);
  }
  return result;
}

uint64_t type metadata accessor for DismissTimerCATs_Async()
{
  uint64_t result = qword_17C670;
  if (!qword_17C670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_53328()
{
  return swift_initClassMetadata2();
}

uint64_t sub_53368(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = v5;
  *(unsigned char *)(v6 + 89) = a3;
  *(unsigned char *)(v6 + 88) = a2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a4;
  sub_5830(&qword_17BE78);
  *(void *)(v6 + 48) = swift_task_alloc();
  *(void *)(v6 + 56) = swift_task_alloc();
  return _swift_task_switch(sub_53418, 0, 0);
}

uint64_t sub_53418()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 89);
  char v4 = *(unsigned char *)(v0 + 88);
  sub_5830(&qword_17F3D0);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 64) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1434E0;
  *(void *)(v5 + 32) = 0x6E6F737265507369;
  *(void *)(v5 + 40) = 0xEA00000000006C61;
  *(unsigned char *)(v5 + 48) = v4;
  *(void *)(v5 + 72) = &type metadata for Bool;
  *(void *)(v5 + 80) = 0x6E756D6D6F437369;
  *(void *)(v5 + 88) = 0xEA00000000006C61;
  *(unsigned char *)(v5 + 96) = v3;
  uint64_t v6 = (uint64_t *)(v5 + 144);
  *(void *)(v5 + 120) = &type metadata for Bool;
  *(void *)(v5 + 128) = 0x614E656369766564;
  *(void *)(v5 + 136) = 0xEA0000000000656DLL;
  sub_8FE8(v2, v1, &qword_17BE78);
  uint64_t v7 = sub_140500();
  uint64_t v8 = *(void *)(v7 - 8);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v1, 1, v7);
  uint64_t v11 = *(void *)(v0 + 56);
  if (v10 == 1)
  {
    sub_904C(*(void *)(v0 + 56), &qword_17BE78);
    *(_OWORD *)uint64_t v6 = 0u;
    *(_OWORD *)(v5 + 160) = 0u;
  }
  else
  {
    *(void *)(v5 + 168) = v7;
    uint64_t v12 = sub_187EC(v6);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 32))(v12, v11, v7);
  }
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 32);
  *(void *)(v5 + 176) = 0x656D614E6D6F6F72;
  *(void *)(v5 + 184) = 0xE800000000000000;
  sub_8FE8(v14, v13, &qword_17BE78);
  int v15 = v9(v13, 1, v7);
  uint64_t v16 = *(void *)(v0 + 48);
  if (v15 == 1)
  {
    sub_904C(*(void *)(v0 + 48), &qword_17BE78);
    *(_OWORD *)(v5 + 192) = 0u;
    *(_OWORD *)(v5 + 208) = 0u;
  }
  else
  {
    *(void *)(v5 + 216) = v7;
    uint64_t v17 = sub_187EC((uint64_t *)(v5 + 192));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 32))(v17, v16, v7);
  }
  uint64_t v21 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_536EC;
  uint64_t v19 = *(void *)(v0 + 16);
  return v21(v19, 0xD000000000000025, 0x8000000000148340, v5);
}

uint64_t sub_536EC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_53840, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_53840()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_538B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_53A50()
{
  return type metadata accessor for DismissTimerCATs_Async();
}

uint64_t sub_53A58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v56 = a3;
  uint64_t v57 = a4;
  uint64_t v8 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_13ECE0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  int v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v55 - v16;
  if (qword_17B178 != -1) {
    swift_once();
  }
  sub_D1F50(a2, v4, a1);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a1, v11);
  sub_13EC70();
  sub_55904();
  char v18 = sub_141230();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  if (v18)
  {
    v19(v17, v11);
    sub_90A8(v61, v62);
    sub_13EBD0();
    uint64_t v20 = sub_13EFF0();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v10, v56, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v10, 0, 1, v20);
    uint64_t v22 = sub_13F420();
    long long v58 = 0u;
    long long v59 = 0u;
    uint64_t v60 = 0;
    unint64_t v23 = v57;
    v57[3] = v22;
    v23[4] = (uint64_t)&protocol witness table for AceOutput;
    sub_187EC(v23);
    sub_13EEA0();
  }
  else
  {
    v55[0] = v5;
    v55[1] = a2;
    sub_13ECA0();
    char v24 = sub_141230();
    v19(v15, v11);
    if (v24 & 1) != 0 || (sub_13EC90(), char v25 = sub_141230(), v19(v15, v11), (v25))
    {
      v19(v17, v11);
      sub_90A8(v61, v62);
      sub_13EBD0();
      uint64_t v26 = sub_13EFF0();
      uint64_t v27 = *(void *)(v26 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v10, v56, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v10, 0, 1, v26);
      uint64_t v28 = sub_13F420();
      long long v58 = 0u;
      long long v59 = 0u;
      uint64_t v60 = 0;
      uint64_t v29 = v57;
      v57[3] = v28;
      v29[4] = (uint64_t)&protocol witness table for AceOutput;
      sub_187EC(v29);
      sub_13EE50();
    }
    else
    {
      sub_13EC60();
      char v33 = sub_141230();
      v19(v15, v11);
      if (v33)
      {
        v19(v17, v11);
        sub_90A8(v61, v62);
        sub_13EBD0();
        uint64_t v34 = sub_13EFF0();
        uint64_t v35 = *(void *)(v34 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v10, v56, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v10, 0, 1, v34);
        uint64_t v36 = sub_13F420();
        long long v58 = 0u;
        long long v59 = 0u;
        uint64_t v60 = 0;
        uint64_t v37 = v57;
        v57[3] = v36;
        v37[4] = (uint64_t)&protocol witness table for AceOutput;
        sub_187EC(v37);
        sub_13EE90();
      }
      else
      {
        sub_13EC80();
        char v38 = sub_141230();
        v19(v15, v11);
        if (v38)
        {
          v19(v17, v11);
          sub_90A8(v61, v62);
          sub_13EBD0();
          uint64_t v39 = sub_13EFF0();
          uint64_t v40 = *(void *)(v39 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v10, v56, v39);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v10, 0, 1, v39);
          uint64_t v41 = sub_13F420();
          long long v58 = 0u;
          long long v59 = 0u;
          uint64_t v60 = 0;
          os_log_type_t v42 = v57;
          v57[3] = v41;
          v42[4] = (uint64_t)&protocol witness table for AceOutput;
          sub_187EC(v42);
          sub_13EEB0();
        }
        else
        {
          sub_13ECD0();
          char v43 = sub_141230();
          v19(v15, v11);
          if (v43)
          {
            v19(v17, v11);
            sub_90A8(v61, v62);
            sub_13EBD0();
            uint64_t v44 = sub_13EFF0();
            uint64_t v45 = *(void *)(v44 - 8);
            (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v10, v56, v44);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v10, 0, 1, v44);
            uint64_t v46 = sub_13F420();
            long long v58 = 0u;
            long long v59 = 0u;
            uint64_t v60 = 0;
            id v47 = v57;
            v57[3] = v46;
            v47[4] = (uint64_t)&protocol witness table for AceOutput;
            sub_187EC(v47);
            sub_13EE60();
          }
          else
          {
            sub_13ECC0();
            char v48 = sub_141230();
            v19(v15, v11);
            v19(v17, v11);
            sub_90A8(v61, v62);
            sub_13EBD0();
            if (v48)
            {
              uint64_t v49 = sub_13F420();
              long long v58 = 0u;
              long long v59 = 0u;
              uint64_t v60 = 0;
              os_log_type_t v50 = v57;
              v57[3] = v49;
              v50[4] = (uint64_t)&protocol witness table for AceOutput;
              sub_187EC(v50);
              sub_13EE80();
              uint64_t v30 = &qword_17BE88;
              char v31 = (char *)&v58;
              goto LABEL_9;
            }
            uint64_t v51 = sub_13EFF0();
            uint64_t v52 = *(void *)(v51 - 8);
            (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v10, v56, v51);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v10, 0, 1, v51);
            uint64_t v53 = sub_13F420();
            long long v58 = 0u;
            long long v59 = 0u;
            uint64_t v60 = 0;
            uint64_t v54 = v57;
            v57[3] = v53;
            v54[4] = (uint64_t)&protocol witness table for AceOutput;
            sub_187EC(v54);
            sub_13EE70();
          }
        }
      }
    }
  }
  sub_904C((uint64_t)&v58, &qword_17BE88);
  uint64_t v30 = &qword_17BE70;
  char v31 = v10;
LABEL_9:
  sub_904C((uint64_t)v31, v30);
  return _s20HandleIntentStrategyVwxx_1((uint64_t)v61);
}

uint64_t sub_544B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_140590();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_141170();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  return _swift_task_switch(sub_54660, 0, 0);
}

uint64_t sub_54660()
{
  (*(void (**)(void, void, void))(v0[10] + 104))(v0[11], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[9]);
  if (qword_17B170 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = sub_33D8(v3, (uint64_t)qword_17C6C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  mach_absolute_time();
  sub_1406B0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[15] = sub_140470();
  uint64_t v7 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
     + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  void *v5 = v0;
  v5[1] = sub_54804;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v7)(0xD000000000000013, 0x8000000000148370, _swiftEmptyArrayStorage);
}

uint64_t sub_54804(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_54AD0, 0, 0);
  }
  else
  {
    v4[18] = a1;
    swift_release();
    uint64_t v6 = (void *)swift_task_alloc();
    v4[19] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_549A4;
    uint64_t v7 = v4[14];
    uint64_t v8 = v4[3];
    uint64_t v9 = v4[4];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v8, v9, v7, 0);
  }
}

uint64_t sub_549A4()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 144);
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_54C30;
  }
  else {
    uint64_t v3 = sub_54B88;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_54AD0()
{
  swift_release();
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_54B88()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_54C30()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_54CE0()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17C6C8);
  sub_33D8(v0, (uint64_t)qword_17C6C8);
  return sub_140E60();
}

uint64_t sub_54D2C()
{
  type metadata accessor for TimerAnalyticsServiceImpl();
  uint64_t result = swift_initStaticObject();
  qword_17C6E0 = result;
  return result;
}

uint64_t sub_54D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return _swift_task_switch(sub_54D80, 0, 0);
}

uint64_t sub_54D80()
{
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v0 + 2, v0[5]);
  sub_13EBD0();
  sub_13ED50();
  swift_allocObject();
  sub_13ED30();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  unint64_t v1 = sub_13ED40();
  swift_release();
  id v2 = [objc_allocWithZone((Class)SAUIAddViews) init];
  v0[16] = v2;
  if (v1 >> 62)
  {
    sub_5595C(0, &qword_17C700);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1417C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_141AB0();
    sub_5595C(0, &qword_17C700);
    uint64_t v3 = v1;
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = swift_bridgeObjectRetain();
  sub_11B600(v4);
  sub_5595C(0, &qword_17C700);
  Class isa = sub_1412F0().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, "setViews:", isa, v3);

  sub_13ECB0();
  NSString v6 = sub_141240();
  swift_bridgeObjectRelease();
  [v2 setDialogPhase:v6];

  sub_13EBB0();
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  sub_90A8(v0 + 7, v7);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[17] = v9;
  uint64_t v10 = sub_5595C(0, &qword_17C708);
  *uint64_t v9 = v0;
  v9[1] = sub_55058;
  return AceServiceInvokerAsync.submit<A>(_:)(v2, v7, v10, v8);
}

uint64_t sub_55058(void *a1)
{
  *(void *)(*(void *)v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = sub_552E0;
  }
  else
  {

    unint64_t v4 = sub_55174;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_55174()
{
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  if (qword_17B170 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17C6C8);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "generateCustomFlowOutput completed successfully.", v4, 2u);
    swift_slowDealloc();
  }

  if (qword_17B178 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)v0[16];
  sub_D1F50(v0[13], v0[15], v0[14]);
  sub_13EF00();

  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_552E0()
{
  uint64_t v1 = *(void **)(v0 + 128);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_5535C(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 112) = v3;
  *(unsigned char *)(v4 + 144) = a2;
  *(void *)(v4 + 96) = a1;
  return _swift_task_switch(sub_55384, 0, 0);
}

uint64_t sub_55384()
{
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v0 + 2, v0[5]);
  sub_13EBD0();
  sub_13ED50();
  swift_allocObject();
  sub_13ED30();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  unint64_t v1 = sub_13ED40();
  swift_release();
  if (qword_17B178 == -1)
  {
    unint64_t v2 = v1 >> 62;
    if (!(v1 >> 62))
    {
LABEL_3:
      swift_bridgeObjectRetain();
      sub_141AB0();
      sub_5595C(0, &qword_17C700);
      unint64_t v3 = v1;
      goto LABEL_4;
    }
  }
  else
  {
    swift_once();
    unint64_t v2 = v1 >> 62;
    if (!(v1 >> 62)) {
      goto LABEL_3;
    }
  }
  sub_5595C(0, &qword_17C700);
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_1417C0();
  swift_bridgeObjectRelease();
LABEL_4:
  sub_D1F50(v3, v0[14], v0[13]);
  swift_bridgeObjectRelease();
  id v4 = [objc_allocWithZone((Class)SAUIAddViews) init];
  v0[15] = v4;
  if (v2)
  {
    sub_5595C(0, &qword_17C700);
    swift_bridgeObjectRetain();
    sub_1417C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_141AB0();
    sub_5595C(0, &qword_17C700);
  }
  swift_bridgeObjectRelease();
  sub_5595C(0, &qword_17C700);
  Class isa = sub_1412F0().super.isa;
  swift_bridgeObjectRelease();
  [v4 setViews:isa];

  sub_13ECB0();
  NSString v6 = sub_141240();
  swift_bridgeObjectRelease();
  [v4 setDialogPhase:v6];

  sub_13EBB0();
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  sub_90A8(v0 + 7, v7);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[16] = v9;
  uint64_t v10 = sub_5595C(0, &qword_17C708);
  *uint64_t v9 = v0;
  v9[1] = sub_55700;
  return AceServiceInvokerAsync.submit<A>(_:)(v4, v7, v10, v8);
}

uint64_t sub_55700(void *a1)
{
  *(void *)(*(void *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_55894;
  }
  else
  {

    id v4 = sub_5581C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_5581C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  sub_13EF00();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_55894()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_55904()
{
  unint64_t result = qword_17C6F0;
  if (!qword_17C6F0)
  {
    sub_13ECE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_17C6F0);
  }
  return result;
}

uint64_t sub_5595C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for SearchForTimersCATsSimple()
{
  uint64_t result = qword_17C718;
  if (!qword_17C718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_559E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_55A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  void v9[2] = a1;
  sub_5830(&qword_17BE78);
  v9[11] = swift_task_alloc();
  v9[12] = swift_task_alloc();
  v9[13] = swift_task_alloc();
  return _swift_task_switch(sub_55AE4, 0, 0);
}

uint64_t sub_55AE4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v3 = swift_allocObject();
  v0[14] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_143520;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  *(void *)(v3 + 32) = 0xD000000000000013;
  *(void *)(v3 + 40) = 0x80000000001483D0;
  sub_8FE8(v2, v1, &qword_17BE78);
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(v1, 1, v5);
  uint64_t v9 = v0[13];
  if (v8 == 1)
  {
    sub_904C(v0[13], &qword_17BE78);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v5;
    uint64_t v10 = sub_187EC(v4);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v10, v9, v5);
  }
  uint64_t v11 = v0[3];
  *(void *)(v3 + 80) = 0xD000000000000016;
  *(void *)(v3 + 88) = 0x80000000001483F0;
  uint64_t v12 = 0;
  if (v11)
  {
    uint64_t v12 = sub_140430();
  }
  else
  {
    *(void *)(v3 + 104) = 0;
    *(void *)(v3 + 112) = 0;
  }
  uint64_t v13 = v0[12];
  uint64_t v14 = v0[4];
  *(void *)(v3 + 96) = v11;
  *(void *)(v3 + 120) = v12;
  strcpy((char *)(v3 + 128), "requestedType");
  *(_WORD *)(v3 + 142) = -4864;
  sub_8FE8(v14, v13, &qword_17BE78);
  int v15 = v7(v13, 1, v5);
  uint64_t v16 = v0[12];
  if (v15 == 1)
  {
    swift_retain();
    sub_904C(v16, &qword_17BE78);
    *(_OWORD *)(v3 + 144) = 0u;
    *(_OWORD *)(v3 + 160) = 0u;
  }
  else
  {
    *(void *)(v3 + 168) = v5;
    uint64_t v17 = sub_187EC((uint64_t *)(v3 + 144));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v17, v16, v5);
    swift_retain();
  }
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[5];
  strcpy((char *)(v3 + 176), "requestedState");
  *(unsigned char *)(v3 + 191) = -18;
  sub_8FE8(v19, v18, &qword_17BE78);
  int v20 = v7(v18, 1, v5);
  uint64_t v21 = v0[11];
  if (v20 == 1)
  {
    sub_904C(v0[11], &qword_17BE78);
    *(_OWORD *)(v3 + 192) = 0u;
    *(_OWORD *)(v3 + 208) = 0u;
  }
  else
  {
    *(void *)(v3 + 216) = v5;
    uint64_t v22 = sub_187EC((uint64_t *)(v3 + 192));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v22, v21, v5);
  }
  uint64_t v24 = v0[6];
  uint64_t v23 = v0[7];
  strcpy((char *)(v3 + 224), "matchedTimers");
  *(_WORD *)(v3 + 238) = -4864;
  uint64_t v25 = sub_5830(&qword_17C508);
  *(void *)(v3 + 240) = v24;
  *(void *)(v3 + 264) = v25;
  *(void *)(v3 + 272) = 0x6D69547065656C73;
  *(void *)(v3 + 280) = 0xEA00000000007265;
  if (v23)
  {
    uint64_t v26 = type metadata accessor for TimerTimer(0);
    uint64_t v27 = v23;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v26 = 0;
    *(void *)(v3 + 296) = 0;
    *(void *)(v3 + 304) = 0;
  }
  uint64_t v29 = v0[8];
  uint64_t v28 = v0[9];
  *(void *)(v3 + 288) = v27;
  *(void *)(v3 + 312) = v26;
  *(void *)(v3 + 320) = 0xD00000000000001DLL;
  *(void *)(v3 + 328) = 0x80000000001484A0;
  *(void *)(v3 + 336) = v29;
  *(void *)(v3 + 360) = v25;
  *(void *)(v3 + 368) = 0x676E6970756F7267;
  *(void *)(v3 + 376) = 0xE800000000000000;
  uint64_t v30 = 0;
  if (v28)
  {
    uint64_t v30 = type metadata accessor for TimerTimerGrouping();
  }
  else
  {
    *(void *)(v3 + 392) = 0;
    *(void *)(v3 + 400) = 0;
  }
  *(void *)(v3 + 384) = v28;
  *(void *)(v3 + 408) = v30;
  char v33 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  char v31 = (void *)swift_task_alloc();
  v0[15] = v31;
  *char v31 = v0;
  v31[1] = sub_55F64;
  return v33(0xD00000000000001ELL, 0x80000000001484C0, v3);
}

uint64_t sub_55F64(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_560D4, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_560D4()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_5615C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  void v9[2] = a1;
  sub_5830(&qword_17BE78);
  v9[11] = swift_task_alloc();
  v9[12] = swift_task_alloc();
  v9[13] = swift_task_alloc();
  return _swift_task_switch(sub_5621C, 0, 0);
}

uint64_t sub_5621C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v3 = swift_allocObject();
  v0[14] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_143520;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  *(void *)(v3 + 32) = 0xD000000000000013;
  *(void *)(v3 + 40) = 0x80000000001483D0;
  sub_8FE8(v2, v1, &qword_17BE78);
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(v1, 1, v5);
  uint64_t v9 = v0[13];
  if (v8 == 1)
  {
    sub_904C(v0[13], &qword_17BE78);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v5;
    uint64_t v10 = sub_187EC(v4);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v10, v9, v5);
  }
  uint64_t v11 = v0[3];
  *(void *)(v3 + 80) = 0xD000000000000016;
  *(void *)(v3 + 88) = 0x80000000001483F0;
  uint64_t v12 = 0;
  if (v11)
  {
    uint64_t v12 = sub_140430();
  }
  else
  {
    *(void *)(v3 + 104) = 0;
    *(void *)(v3 + 112) = 0;
  }
  uint64_t v13 = v0[12];
  uint64_t v14 = v0[4];
  *(void *)(v3 + 96) = v11;
  *(void *)(v3 + 120) = v12;
  strcpy((char *)(v3 + 128), "requestedType");
  *(_WORD *)(v3 + 142) = -4864;
  sub_8FE8(v14, v13, &qword_17BE78);
  int v15 = v7(v13, 1, v5);
  uint64_t v16 = v0[12];
  if (v15 == 1)
  {
    swift_retain();
    sub_904C(v16, &qword_17BE78);
    *(_OWORD *)(v3 + 144) = 0u;
    *(_OWORD *)(v3 + 160) = 0u;
  }
  else
  {
    *(void *)(v3 + 168) = v5;
    uint64_t v17 = sub_187EC((uint64_t *)(v3 + 144));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v17, v16, v5);
    swift_retain();
  }
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[5];
  strcpy((char *)(v3 + 176), "requestedState");
  *(unsigned char *)(v3 + 191) = -18;
  sub_8FE8(v19, v18, &qword_17BE78);
  int v20 = v7(v18, 1, v5);
  uint64_t v21 = v0[11];
  if (v20 == 1)
  {
    sub_904C(v0[11], &qword_17BE78);
    *(_OWORD *)(v3 + 192) = 0u;
    *(_OWORD *)(v3 + 208) = 0u;
  }
  else
  {
    *(void *)(v3 + 216) = v5;
    uint64_t v22 = sub_187EC((uint64_t *)(v3 + 192));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v22, v21, v5);
  }
  uint64_t v24 = v0[6];
  uint64_t v23 = v0[7];
  *(void *)(v3 + 224) = 0x65686374616D6E75;
  *(void *)(v3 + 232) = 0xEF7372656D695464;
  uint64_t v25 = sub_5830(&qword_17C508);
  *(void *)(v3 + 240) = v24;
  *(void *)(v3 + 264) = v25;
  *(void *)(v3 + 272) = 0x6D69547065656C73;
  *(void *)(v3 + 280) = 0xEA00000000007265;
  if (v23)
  {
    uint64_t v26 = type metadata accessor for TimerTimer(0);
    uint64_t v27 = v23;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v26 = 0;
    *(void *)(v3 + 296) = 0;
    *(void *)(v3 + 304) = 0;
  }
  uint64_t v29 = v0[8];
  uint64_t v28 = v0[9];
  *(void *)(v3 + 288) = v27;
  *(void *)(v3 + 312) = v26;
  *(void *)(v3 + 320) = 0xD000000000000019;
  *(void *)(v3 + 328) = 0x8000000000148450;
  *(void *)(v3 + 336) = v29;
  *(void *)(v3 + 360) = v25;
  *(void *)(v3 + 368) = 0x676E6970756F7267;
  *(void *)(v3 + 376) = 0xE800000000000000;
  uint64_t v30 = 0;
  if (v28)
  {
    uint64_t v30 = type metadata accessor for TimerTimerGrouping();
  }
  else
  {
    *(void *)(v3 + 392) = 0;
    *(void *)(v3 + 400) = 0;
  }
  *(void *)(v3 + 384) = v28;
  *(void *)(v3 + 408) = v30;
  char v33 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  char v31 = (void *)swift_task_alloc();
  v0[15] = v31;
  *char v31 = v0;
  v31[1] = sub_5669C;
  return v33(0xD000000000000020, 0x8000000000148470, v3);
}

uint64_t sub_5669C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_571C0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_5680C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v9 + 64) = a8;
  *(void *)(v9 + 72) = v8;
  *(unsigned char *)(v9 + 128) = a7;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = a6;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_5830(&qword_17BE78);
  *(void *)(v9 + 80) = swift_task_alloc();
  *(void *)(v9 + 88) = swift_task_alloc();
  *(void *)(v9 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_568CC, 0, 0);
}

uint64_t sub_568CC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 104) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_143530;
  *(void *)(v4 + 32) = 0x736D657469;
  *(void *)(v4 + 40) = 0xE500000000000000;
  uint64_t v5 = sub_5830(&qword_17C508);
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 72) = v5;
  *(void *)(v4 + 80) = 0xD000000000000013;
  *(void *)(v4 + 88) = 0x80000000001483D0;
  sub_8FE8(v2, v1, &qword_17BE78);
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(v1, 1, v6);
  uint64_t v10 = *(void *)(v0 + 96);
  if (v9 == 1)
  {
    swift_bridgeObjectRetain();
    sub_904C(v10, &qword_17BE78);
    *(_OWORD *)(v4 + 96) = 0u;
    *(_OWORD *)(v4 + 112) = 0u;
  }
  else
  {
    *(void *)(v4 + 120) = v6;
    uint64_t v11 = sub_187EC((uint64_t *)(v4 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v11, v10, v6);
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = *(void *)(v0 + 32);
  *(void *)(v4 + 128) = 0xD000000000000016;
  *(void *)(v4 + 136) = 0x80000000001483F0;
  uint64_t v13 = 0;
  if (v12)
  {
    uint64_t v13 = sub_140430();
  }
  else
  {
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0;
  }
  uint64_t v14 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 40);
  *(void *)(v4 + 144) = v12;
  *(void *)(v4 + 168) = v13;
  strcpy((char *)(v4 + 176), "requestedType");
  *(_WORD *)(v4 + 190) = -4864;
  sub_8FE8(v15, v14, &qword_17BE78);
  int v16 = v8(v14, 1, v6);
  uint64_t v17 = *(void *)(v0 + 88);
  if (v16 == 1)
  {
    swift_retain();
    sub_904C(v17, &qword_17BE78);
    *(_OWORD *)(v4 + 192) = 0u;
    *(_OWORD *)(v4 + 208) = 0u;
  }
  else
  {
    *(void *)(v4 + 216) = v6;
    uint64_t v18 = sub_187EC((uint64_t *)(v4 + 192));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v18, v17, v6);
    swift_retain();
  }
  uint64_t v19 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 48);
  strcpy((char *)(v4 + 224), "requestedState");
  *(unsigned char *)(v4 + 239) = -18;
  sub_8FE8(v20, v19, &qword_17BE78);
  int v21 = v8(v19, 1, v6);
  uint64_t v22 = *(void *)(v0 + 80);
  if (v21 == 1)
  {
    sub_904C(*(void *)(v0 + 80), &qword_17BE78);
    *(_OWORD *)(v4 + 240) = 0u;
    *(_OWORD *)(v4 + 256) = 0u;
  }
  else
  {
    *(void *)(v4 + 264) = v6;
    uint64_t v23 = sub_187EC((uint64_t *)(v4 + 240));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v23, v22, v6);
  }
  char v24 = *(unsigned char *)(v0 + 128);
  *(void *)(v4 + 272) = 0x6574496C61746F74;
  *(void *)(v4 + 280) = 0xEA0000000000736DLL;
  if (v24)
  {
    uint64_t v26 = 0;
    uint64_t v25 = 0;
    *(void *)(v4 + 296) = 0;
    *(void *)(v4 + 304) = 0;
  }
  else
  {
    uint64_t v25 = *(void *)(v0 + 56);
    uint64_t v26 = &type metadata for Double;
  }
  uint64_t v27 = *(void *)(v0 + 64);
  *(void *)(v4 + 288) = v25;
  *(void *)(v4 + 312) = v26;
  *(void *)(v4 + 320) = 0x676E6970756F7267;
  *(void *)(v4 + 328) = 0xE800000000000000;
  uint64_t v28 = 0;
  if (v27)
  {
    uint64_t v28 = type metadata accessor for TimerTimerGrouping();
  }
  else
  {
    *(void *)(v4 + 344) = 0;
    *(void *)(v4 + 352) = 0;
  }
  *(void *)(v4 + 336) = v27;
  *(void *)(v4 + 360) = v28;
  char v31 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_retain();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_56D18;
  return v31(0xD00000000000003CLL, 0x8000000000148410, v4);
}

uint64_t sub_56D18(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_56E88, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_56E88()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_56F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_570A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_571B8()
{
  return type metadata accessor for SearchForTimersCATsSimple();
}

uint64_t type metadata accessor for CreateTimerCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17C780);
}

uint64_t sub_571E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_57224()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_142FB0;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  strcpy((char *)(v7 + 32), "cancelAction");
  *(unsigned char *)(v7 + 45) = 0;
  *(_WORD *)(v7 + 46) = -5120;
  sub_8FE8(v0, (uint64_t)v6, &qword_17BE78);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v6, 1, v9) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    uint64_t v12 = sub_187EC(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v12, v6, v9);
  }
  strcpy((char *)(v7 + 80), "confirmAction");
  *(_WORD *)(v7 + 94) = -4864;
  uint64_t TimerConfirmReplaceParameters = type metadata accessor for CreateTimerConfirmReplaceParameters(0);
  sub_8FE8(v0 + *(int *)(TimerConfirmReplaceParameters + 20), (uint64_t)v4, &qword_17BE78);
  if (v11(v4, 1, v9) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17BE78);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v9;
    uint64_t v14 = sub_187EC((uint64_t *)(v7 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v14, v4, v9);
  }
  *(void *)(v7 + 128) = 0x72656D6974;
  *(void *)(v7 + 136) = 0xE500000000000000;
  uint64_t v15 = *(void *)(v0 + *(int *)(TimerConfirmReplaceParameters + 24));
  if (v15)
  {
    uint64_t v16 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(v7 + 152) = 0;
    *(void *)(v7 + 160) = 0;
  }
  *(void *)(v7 + 144) = v15;
  *(void *)(v7 + 168) = v16;
  swift_retain();
  return v7;
}

uint64_t sub_574C4()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v23 = (uint64_t)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - v4;
  sub_5830(&qword_17F3D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1434E0;
  *(void *)(v6 + 32) = 7368801;
  *(void *)(v6 + 40) = 0xE300000000000000;
  uint64_t v7 = *v0;
  if (*v0)
  {
    uint64_t v8 = sub_1404A0();
    uint64_t v9 = v7;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    *(void *)(v6 + 56) = 0;
    *(void *)(v6 + 64) = 0;
  }
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 72) = v8;
  strcpy((char *)(v6 + 80), "createdTimer");
  *(unsigned char *)(v6 + 93) = 0;
  *(_WORD *)(v6 + 94) = -5120;
  uint64_t v10 = v0[1];
  v22[1] = v7;
  if (v10)
  {
    uint64_t v11 = type metadata accessor for TimerTimer(0);
    uint64_t v12 = v10;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    *(void *)(v6 + 104) = 0;
    *(void *)(v6 + 112) = 0;
  }
  *(void *)(v6 + 96) = v12;
  *(void *)(v6 + 120) = v11;
  *(void *)(v6 + 128) = 0xD000000000000016;
  *(void *)(v6 + 136) = 0x8000000000148520;
  uint64_t TimerHandledOnWatchParameters = type metadata accessor for CreateTimerHandledOnWatchParameters(0);
  uint64_t v14 = *(int *)(TimerHandledOnWatchParameters + 24);
  char v24 = v0;
  sub_8FE8((uint64_t)v0 + v14, (uint64_t)v5, &qword_17BE78);
  uint64_t v15 = sub_140500();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v5, 1, v15) == 1)
  {
    swift_retain();
    swift_retain();
    sub_904C((uint64_t)v5, &qword_17BE78);
    *(_OWORD *)(v6 + 144) = 0u;
    *(_OWORD *)(v6 + 160) = 0u;
  }
  else
  {
    *(void *)(v6 + 168) = v15;
    uint64_t v18 = sub_187EC((uint64_t *)(v6 + 144));
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(v18, v5, v15);
    swift_retain();
    swift_retain();
  }
  *(void *)(v6 + 176) = 0x6174614477656976;
  *(void *)(v6 + 184) = 0xE800000000000000;
  uint64_t v19 = v23;
  sub_8FE8((uint64_t)v24 + *(int *)(TimerHandledOnWatchParameters + 28), v23, &qword_17BE78);
  if (v17((char *)v19, 1, v15) == 1)
  {
    sub_904C(v19, &qword_17BE78);
    *(_OWORD *)(v6 + 192) = 0u;
    *(_OWORD *)(v6 + 208) = 0u;
  }
  else
  {
    *(void *)(v6 + 216) = v15;
    uint64_t v20 = sub_187EC((uint64_t *)(v6 + 192));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 32))(v20, v19, v15);
  }
  return v6;
}

uint64_t sub_577D0(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v27 = a2;
  uint64_t v5 = sub_5830(&qword_17BE78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v26 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  sub_5830(&qword_17F3D0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_142FB0;
  uint64_t v15 = (uint64_t *)(v14 + 48);
  strcpy((char *)(v14 + 32), "cancelAction");
  *(unsigned char *)(v14 + 45) = 0;
  *(_WORD *)(v14 + 46) = -5120;
  uint64_t v28 = v3;
  sub_8FE8(v3, (uint64_t)v13, &qword_17BE78);
  uint64_t v16 = sub_140500();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v13, 1, v16) == 1)
  {
    sub_904C((uint64_t)v13, &qword_17BE78);
    *(_OWORD *)uint64_t v15 = 0u;
    *(_OWORD *)(v14 + 64) = 0u;
  }
  else
  {
    *(void *)(v14 + 72) = v16;
    uint64_t v19 = sub_187EC(v15);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(v19, v13, v16);
  }
  strcpy((char *)(v14 + 80), "confirmAction");
  *(_WORD *)(v14 + 94) = -4864;
  uint64_t v20 = a1(0);
  uint64_t v21 = v28;
  sub_8FE8(v28 + *(int *)(v20 + 20), (uint64_t)v11, &qword_17BE78);
  if (v18(v11, 1, v16) == 1)
  {
    sub_904C((uint64_t)v11, &qword_17BE78);
    *(_OWORD *)(v14 + 96) = 0u;
    *(_OWORD *)(v14 + 112) = 0u;
  }
  else
  {
    *(void *)(v14 + 120) = v16;
    uint64_t v22 = sub_187EC((uint64_t *)(v14 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(v22, v11, v16);
  }
  uint64_t v23 = v29;
  *(void *)(v14 + 128) = v27;
  *(void *)(v14 + 136) = v23;
  sub_8FE8(v21 + *(int *)(v20 + 24), (uint64_t)v8, &qword_17BE78);
  if (v18(v8, 1, v16) == 1)
  {
    sub_904C((uint64_t)v8, &qword_17BE78);
    *(_OWORD *)(v14 + 144) = 0u;
    *(_OWORD *)(v14 + 160) = 0u;
  }
  else
  {
    *(void *)(v14 + 168) = v16;
    char v24 = sub_187EC((uint64_t *)(v14 + 144));
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(v24, v8, v16);
  }
  return v14;
}

uint64_t sub_57AF4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_5830(&qword_17BE78);
  v2[4] = swift_task_alloc();
  v2[5] = type metadata accessor for CreateTimerHandledParameters(0);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_57BB8, 0, 0);
}

uint64_t sub_57BB8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = (uint64_t *)v0[3];
  uint64_t v4 = v0[4];
  *uint64_t v2 = 0;
  uint64_t v5 = (uint64_t)v2 + *(int *)(v1 + 20);
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = *v3;
  *uint64_t v2 = v8;
  sub_5830(&qword_17F3D0);
  uint64_t v9 = swift_allocObject();
  v0[7] = v9;
  *(_OWORD *)(v9 + 16) = xmmword_142FC0;
  strcpy((char *)(v9 + 32), "createdTimer");
  *(unsigned char *)(v9 + 45) = 0;
  *(_WORD *)(v9 + 46) = -5120;
  uint64_t v10 = type metadata accessor for TimerTimer(0);
  *(void *)(v9 + 48) = v8;
  *(void *)(v9 + 72) = v10;
  *(void *)(v9 + 80) = 0xD000000000000016;
  *(void *)(v9 + 88) = 0x8000000000148520;
  sub_8FE8(v5, v4, &qword_17BE78);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  uint64_t v12 = v0[4];
  if (v11 == 1)
  {
    swift_retain_n();
    sub_904C(v12, &qword_17BE78);
    *(_OWORD *)(v9 + 96) = 0u;
    *(_OWORD *)(v9 + 112) = 0u;
  }
  else
  {
    *(void *)(v9 + 120) = v6;
    uint64_t v13 = sub_187EC((uint64_t *)(v9 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v13, v12, v6);
    swift_retain_n();
  }
  uint64_t v16 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v14 = (void *)swift_task_alloc();
  v0[8] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_57E24;
  return v16(0xD000000000000013, 0x8000000000148540, v9);
}

uint64_t sub_57E24(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_58004;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_57F70;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_57F70()
{
  sub_594BC(v0[6], type metadata accessor for CreateTimerHandledParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

uint64_t sub_58004()
{
  sub_594BC(*(void *)(v0 + 48), type metadata accessor for CreateTimerHandledParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_58094(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for CreateTimerHandledOnWatchParameters(0);
  v3[6] = swift_task_alloc();
  return _swift_task_switch(sub_5812C, 0, 0);
}

uint64_t sub_5812C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (char *)v0[6];
  uint64_t v3 = (void (*)(char *))v0[2];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v4 = &v1[*(int *)(v2 + 24)];
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(&v1[*(int *)(v2 + 28)], 1, 1, v5);
  v3(v1);
  uint64_t v7 = sub_574C4();
  v0[7] = v7;
  uint64_t v10 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_5829C;
  return v10(0xD00000000000001ALL, 0x8000000000148650, v7);
}

uint64_t sub_5829C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_58470;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_583E8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_583E8()
{
  sub_594BC(v0[6], type metadata accessor for CreateTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

uint64_t sub_58470()
{
  sub_594BC(*(void *)(v0 + 48), type metadata accessor for CreateTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_584F4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_58514, 0, 0);
}

uint64_t sub_58514()
{
  uint64_t v1 = (uint64_t *)v0[3];
  uint64_t v2 = *v1;
  v0[4] = *v1;
  sub_5830(&qword_17F3D0);
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_142D50;
  strcpy((char *)(v3 + 32), "createdTimer");
  *(unsigned char *)(v3 + 45) = 0;
  *(_WORD *)(v3 + 46) = -5120;
  *(void *)(v3 + 72) = type metadata accessor for TimerTimer(0);
  *(void *)(v3 + 48) = v2;
  uint64_t v6 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain_n();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_58654;
  return v6(0xD000000000000018, 0x8000000000148560, v3);
}

uint64_t sub_58654(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_58808;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_587A0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_587A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 64);
  return v1(v2);
}

uint64_t sub_58808()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_5886C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for CreateTimerPromptConfirmSlotLabelParameters(0);
  v3[6] = swift_task_alloc();
  return _swift_task_switch(sub_58904, 0, 0);
}

uint64_t sub_58904()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  v5(v1 + *(int *)(v2 + 20), 1, 1, v4);
  v5(v1 + *(int *)(v2 + 24), 1, 1, v4);
  v3(v1);
  uint64_t v6 = sub_577D0(type metadata accessor for CreateTimerPromptConfirmSlotLabelParameters, 0x62614C72656D6974, 0xEA00000000006C65);
  v0[7] = v6;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  void *v7 = v0;
  v7[1] = sub_58AB0;
  return v9(0xD000000000000022, 0x8000000000148620, v6);
}

uint64_t sub_58AB0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_58C84;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_58BFC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_58BFC()
{
  sub_594BC(v0[6], type metadata accessor for CreateTimerPromptConfirmSlotLabelParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

uint64_t sub_58C84()
{
  sub_594BC(*(void *)(v0 + 48), type metadata accessor for CreateTimerPromptConfirmSlotLabelParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_58D08(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_5830(&qword_17BE78);
  v3[5] = swift_task_alloc();
  v3[6] = type metadata accessor for CreateTimerPromptLabelDuplicateParameters(0);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_58DD0, 0, 0);
}

uint64_t sub_58DD0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (uint64_t *)v0[7];
  uint64_t v3 = (void (*)(uint64_t *))v0[2];
  *uint64_t v2 = 0;
  uint64_t v4 = (uint64_t)v2 + *(int *)(v1 + 20);
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v3(v2);
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  v0[8] = v7;
  *(_OWORD *)(v7 + 16) = xmmword_142FC0;
  *(void *)(v7 + 32) = 0x6E6F697461727564;
  *(void *)(v7 + 40) = 0xE800000000000000;
  uint64_t v8 = *v2;
  if (v8)
  {
    uint64_t v9 = sub_140430();
    uint64_t v10 = v8;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    *(void *)(v7 + 56) = 0;
    *(void *)(v7 + 64) = 0;
  }
  uint64_t v11 = v0[5];
  *(void *)(v7 + 48) = v10;
  *(void *)(v7 + 72) = v9;
  *(void *)(v7 + 80) = 0x62614C72656D6974;
  *(void *)(v7 + 88) = 0xEA00000000006C65;
  sub_8FE8(v4, v11, &qword_17BE78);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  uint64_t v13 = v0[5];
  if (v12 == 1)
  {
    swift_retain();
    sub_904C(v13, &qword_17BE78);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v5;
    uint64_t v14 = sub_187EC((uint64_t *)(v7 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v14, v13, v5);
    swift_retain();
  }
  uint64_t v17 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v15 = (void *)swift_task_alloc();
  v0[9] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_5904C;
  return v17(0xD000000000000020, 0x80000000001485A0, v7);
}

uint64_t sub_5904C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_5922C;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_59198;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_59198()
{
  sub_594BC(v0[7], type metadata accessor for CreateTimerPromptLabelDuplicateParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[11];
  return v1(v2);
}

uint64_t sub_5922C()
{
  sub_594BC(*(void *)(v0 + 56), type metadata accessor for CreateTimerPromptLabelDuplicateParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_592BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_59454()
{
  return type metadata accessor for CreateTimerCATPatternsExecutor(0);
}

uint64_t type metadata accessor for CreateTimerHandledOnWatchParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17CAB0);
}

uint64_t type metadata accessor for CreateTimerHandledParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17CA20);
}

uint64_t type metadata accessor for CreateTimerPromptLabelDuplicateParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17C990);
}

uint64_t sub_594BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CreateTimerPromptConfirmSlotLabelParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17C8F8);
}

uint64_t sub_5953C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  sub_5830(&qword_17BE78);
  v7[9] = swift_task_alloc();
  v7[10] = type metadata accessor for CreateTimerPromptConfirmSlotTypeParameters(0);
  v7[11] = swift_task_alloc();
  return _swift_task_switch(sub_5960C, 0, 0);
}

uint64_t sub_5960C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(void))(*(void *)(v4 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(v1, 1, 1, v4);
  uint64_t v10 = v1 + *(int *)(v2 + 20);
  v5();
  uint64_t v6 = v1 + *(int *)(v2 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(v6, 1, 1, v4);
  sub_141270();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v5)(v3, 0, 1, v4);
  sub_2D248(v3, v6);
  swift_bridgeObjectRetain();
  sub_1404D0();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v5)(v3, 0, 1, v4);
  sub_2D248(v3, v1);
  swift_bridgeObjectRetain();
  sub_1404D0();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v5)(v3, 0, 1, v4);
  sub_2D248(v3, v10);
  uint64_t v7 = sub_577D0(type metadata accessor for CreateTimerPromptConfirmSlotTypeParameters, 0x70795472656D6974, 0xE900000000000065);
  v0[12] = v7;
  uint64_t v11 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[13] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_59888;
  return v11(0xD000000000000021, 0x80000000001485F0, v7);
}

uint64_t sub_59888(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_59A68;
  }
  else
  {
    *(void *)(v4 + 120) = a1;
    uint64_t v5 = sub_599D4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_599D4()
{
  sub_594BC(v0[11], type metadata accessor for CreateTimerPromptConfirmSlotTypeParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[15];
  return v1(v2);
}

uint64_t sub_59A68()
{
  sub_594BC(*(void *)(v0 + 88), type metadata accessor for CreateTimerPromptConfirmSlotTypeParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for CreateTimerPromptConfirmSlotTypeParameters(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17C858);
}

uint64_t sub_59B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_59B44);
}

uint64_t sub_59B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_59B5C);
}

void sub_59B64()
{
  if (!qword_17C868)
  {
    sub_140500();
    unint64_t v0 = sub_1415B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_17C868);
    }
  }
}

uint64_t *sub_59BBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_140500();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_5830(&qword_17BE78);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_5830(&qword_17BE78);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)v18, 1, v7))
    {
      uint64_t v19 = sub_5830(&qword_17BE78);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_59E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v7, 1, v4);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v4);
  }
  return result;
}

char *sub_59FDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(v16, 1, v6))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *sub_5A240(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

char *sub_5A5C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(v16, 1, v6))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *sub_5A824(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

uint64_t sub_5ABA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5ABB8);
}

uint64_t sub_5ABBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_5AC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5AC40);
}

uint64_t sub_5AC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_5ACB8()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_5AD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5AD74);
}

uint64_t sub_5AD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5AD8C);
}

uint64_t *sub_5AD94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_140500();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_retain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_5830(&qword_17BE78);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_5AF18(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_140500();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_5AFE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_140500();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_retain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_5830(&qword_17BE78);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_5B10C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *sub_5B29C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_140500();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_5B3B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_5B538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5B54C);
}

uint64_t sub_5B550(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    int v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_5B610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5B624);
}

void *sub_5B628(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_5B6D4()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_5B76C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_140500();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_retain();
    swift_retain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_5830(&qword_17BE78);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(a3 + 28);
    int v15 = (char *)v7 + v14;
    int v16 = (char *)a2 + v14;
    if (v12(v16, 1, v10))
    {
      uint64_t v17 = sub_5830(&qword_17BE78);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
    }
  }
  return v7;
}

uint64_t sub_5B9A8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_140500();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_5BAD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  swift_retain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_5830(&qword_17BE78);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (char *)a1 + v13;
  int v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_5830(&qword_17BE78);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *sub_5BCC0(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_5830(&qword_17BE78);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *sub_5BF6C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_5830(&qword_17BE78);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *sub_5C134(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_release();
  *((void *)a1 + 1) = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_5830(&qword_17BE78);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_5C3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5C3E4);
}

uint64_t sub_5C3E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    int v12 = (char *)a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_5C4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5C4B8);
}

void *sub_5C4B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_5C564()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_5C5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_5830(&qword_17BE78);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for CreateTimerConfirmReplaceParameters(0);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_5C6C8, 0, 0);
}

uint64_t sub_5C6C8()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[3];
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = v1 + *(int *)(v2 + 20);
  v6(v7, 1, 1, v5);
  *(void *)(v1 + *(int *)(v2 + 24)) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1404D0();
  v6(v3, 0, 1, v5);
  sub_2D248(v3, v1);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v6(v3, 0, 1, v5);
  sub_2D248(v3, v7);
  uint64_t v8 = sub_57224();
  v0[11] = v8;
  uint64_t v11 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[12] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_5C8C8;
  return v11(0xD00000000000001ALL, 0x8000000000148670, v8);
}

uint64_t sub_5C8C8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_5CAA8;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_5CA14;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_5CA14()
{
  sub_594BC(v0[10], type metadata accessor for CreateTimerConfirmReplaceParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[14];
  return v1(v2);
}

uint64_t sub_5CAA8()
{
  sub_594BC(*(void *)(v0 + 80), type metadata accessor for CreateTimerConfirmReplaceParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for CreateTimerConfirmReplaceParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17CB60);
}

uint64_t sub_5CB58(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  sub_5830(&qword_17BE78);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for CreateTimerHandledParameters(0);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(sub_5CC2C, 0, 0);
}

uint64_t sub_5CC2C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (uint64_t *)v0[12];
  uint64_t v3 = v0[8];
  *uint64_t v2 = 0;
  uint64_t v4 = (uint64_t)v2 + *(int *)(v1 + 20);
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v7(v4, 1, 1, v5);
  *uint64_t v2 = v3;
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration);
  if (v8)
  {
    uint64_t v9 = v0[10];
    swift_retain();
    sub_185D4(v0 + 2);
    sub_188C4(v8, v0 + 2, v9);
    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
    v7(v9, 0, 1, v5);
  }
  else
  {
    v7(v0[10], 1, 1, v5);
    swift_retain();
  }
  uint64_t v10 = (uint64_t *)v0[12];
  sub_2D248(v0[10], v4);
  sub_5830(&qword_17F3D0);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  *(_OWORD *)(v11 + 16) = xmmword_142FC0;
  strcpy((char *)(v11 + 32), "createdTimer");
  *(unsigned char *)(v11 + 45) = 0;
  *(_WORD *)(v11 + 46) = -5120;
  uint64_t v12 = *v10;
  if (v12)
  {
    uint64_t v13 = type metadata accessor for TimerTimer(0);
    uint64_t v14 = v12;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    *(void *)(v11 + 56) = 0;
    *(void *)(v11 + 64) = 0;
  }
  uint64_t v15 = v0[9];
  *(void *)(v11 + 48) = v14;
  *(void *)(v11 + 72) = v13;
  *(void *)(v11 + 80) = 0xD000000000000016;
  *(void *)(v11 + 88) = 0x8000000000148520;
  sub_8FE8(v4, v15, &qword_17BE78);
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5);
  uint64_t v17 = v0[9];
  if (v16 == 1)
  {
    swift_retain();
    sub_904C(v17, &qword_17BE78);
    *(_OWORD *)(v11 + 96) = 0u;
    *(_OWORD *)(v11 + 112) = 0u;
  }
  else
  {
    *(void *)(v11 + 120) = v5;
    int v18 = sub_187EC((uint64_t *)(v11 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v18, v17, v5);
    swift_retain();
  }
  int v21 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  int v19 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v19;
  *int v19 = v0;
  v19[1] = sub_5CF48;
  return v21(0xD000000000000013, 0x8000000000148540, v11);
}

uint64_t sub_5CF48(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_5D138;
  }
  else
  {
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_5D094;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_5D094()
{
  sub_594BC(v0[12], type metadata accessor for CreateTimerHandledParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[16];
  return v1(v2);
}

uint64_t sub_5D138()
{
  sub_594BC(*(void *)(v0 + 96), type metadata accessor for CreateTimerHandledParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_5D1D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_5D1F8, 0, 0);
}

uint64_t sub_5D1F8()
{
  uint64_t v1 = v0[3];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  strcpy((char *)(v2 + 32), "createdTimer");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  *(void *)(v2 + 72) = type metadata accessor for TimerTimer(0);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_5D32C;
  return v5(0xD000000000000018, 0x8000000000148560, v2);
}

uint64_t sub_5D32C(uint64_t a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t *sub_5D450(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_140500();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_5830(&qword_17BE78);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_5830(&qword_17BE78);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t sub_5D674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }

  return swift_release();
}

char *sub_5D790(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  return a1;
}

char *sub_5D968(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_5DC08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_5DDDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_5E074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5E088);
}

uint64_t sub_5E088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_5E158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5E16C);
}

uint64_t sub_5E16C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_5E22C()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_5E2C4()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17CBA0);
  sub_33D8(v0, (uint64_t)qword_17CBA0);
  return sub_140E60();
}

uint64_t sub_5E310(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_141AA0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_141AA0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_5E3D8()
{
  if (!sub_13FD40()) {
    return 0;
  }
  id v0 = (id)sub_13FA70();
  if (v0)
  {
    sub_13FAB0();
    double v2 = v1;
    swift_release();
    if (v2 > 0.0)
    {
      if (qword_17B180 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_141170();
      sub_33D8(v3, (uint64_t)qword_17CBA0);
      uint64_t v4 = sub_141160();
      os_log_type_t v5 = sub_141480();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        sub_1415C0();
        _os_log_impl(&dword_0, v4, v5, "makeSleepTimersIntent found valid parameters to create sleep timer for seconds: %f", v6, 0xCu);
        swift_slowDealloc();
      }

      id v0 = [objc_allocWithZone((Class)sub_140CA0()) init];
      [v0 setLabel:0];
      sub_140C90();
      [v0 setType:2];
      goto LABEL_9;
    }
    if (qword_17B180 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_141170();
    sub_33D8(v7, (uint64_t)qword_17CBA0);
    uint64_t v8 = sub_141160();
    os_log_type_t v9 = sub_141470();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "TimerFlowDelegatePlugin was presented a sleep timer ontology, but with a duration of zero seconds.", v10, 2u);
      swift_slowDealloc();
    }

    swift_release();
    return 0;
  }
LABEL_9:
  swift_release();
  return v0;
}

id sub_5E684(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v3 = SIRINLUUserDialogAct.firstUsoTask.getter();
  if (v3)
  {
    id v4 = sub_1239C(v3, a2);
    swift_release();
    return v4;
  }
  else
  {
    if (qword_17B180 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_141170();
    sub_33D8(v6, (uint64_t)qword_17CBA0);
    uint64_t v7 = sub_141160();
    os_log_type_t v8 = sub_141470();
    if (os_log_type_enabled(v7, v8))
    {
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "No firstUsoTask contained in userDialogAct. Returning nil intent.", v9, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
}

id sub_5E794(void *a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 3:
    case 4:
      if (qword_17B180 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_141170();
      sub_33D8(v9, (uint64_t)qword_17CBA0);
      id v4 = sub_141160();
      os_log_type_t v10 = sub_141470();
      if (!os_log_type_enabled(v4, v10)) {
        goto LABEL_29;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      BOOL v12 = "Calling .create for disambiguation item selection is invalid";
      goto LABEL_27;
    case 2:
    case 10:
      id v15 = [objc_allocWithZone((Class)sub_140CD0()) init];
      [v15 setTargetTimer:a1];
      id v16 = [v15 targetTimer];
      if (!v16) {
        return v15;
      }
      id v13 = v16;
      sub_2FF44();
      v14.super.super.Class isa = sub_141570(0).super.super.isa;
      [v13 setShouldMatchAny:v14.super.super.isa];
      goto LABEL_17;
    case 5:
      sub_2FF44();
      id v17 = a1;
      v14.super.super.Class isa = sub_141570(0).super.super.isa;
      int v18 = (objc_class *)sub_140C10();
      goto LABEL_16;
    case 7:
    case 17:
    case 18:
      sub_2FF44();
      id v13 = a1;
      v14.super.super.Class isa = sub_141570(0).super.super.isa;
      id v15 = [objc_allocWithZone((Class)sub_140C40()) init];
      [v13 setShouldMatchAny:v14.super.super.isa];
      [v15 setTargetTimer:v13];
      [v15 setToTimer:0];

      goto LABEL_17;
    case 8:
    case 9:
      sub_2FF44();
      id v17 = a1;
      v14.super.super.Class isa = sub_141570(0).super.super.isa;
      int v18 = (objc_class *)sub_140D00();
LABEL_16:
      id v15 = [objc_allocWithZone(v18) init];
      [v17 setShouldMatchAny:v14.super.super.isa];
      id v13 = v17;
      [v15 setTargetTimer:v13];

LABEL_17:
      return v15;
    case 12:
      [self defaultDuration];
      Class isa = sub_1413D0().super.super.isa;
      id v20 = objc_allocWithZone((Class)sub_140BC0());
      id v21 = a1;
      id v15 = [v20 init];
      [v15 setTargetTimer:v21];
      [v15 setToDuration:isa];
      [v15 setToLabel:0];

      return v15;
    case 13:
      if (qword_17B180 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_141170();
      sub_33D8(v22, (uint64_t)qword_17CBA0);
      id v4 = sub_141160();
      os_log_type_t v23 = sub_141470();
      if (!os_log_type_enabled(v4, v23)) {
        goto LABEL_29;
      }
      char v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)char v24 = 136315138;
      uint64_t v25 = sub_141260();
      sub_58C0(v25, v26, &v29);
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v4, v23, "Unexpected timerVerb: %s", v24, 0xCu);
      swift_arrayDestroy();
      goto LABEL_6;
    case 14:
      if (qword_17B180 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17CBA0);
      id v4 = sub_141160();
      os_log_type_t v10 = sub_141470();
      if (!os_log_type_enabled(v4, v10)) {
        goto LABEL_29;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      BOOL v12 = "Calling .noVerb for disambiguation item selection is invalid";
LABEL_27:
      _os_log_impl(&dword_0, v4, v10, v12, v11, 2u);
      goto LABEL_28;
    default:
      if (qword_17B180 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_141170();
      sub_33D8(v3, (uint64_t)qword_17CBA0);
      id v4 = sub_141160();
      os_log_type_t v5 = sub_141470();
      if (!os_log_type_enabled(v4, v5)) {
        goto LABEL_29;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v7 = sub_141260();
      sub_58C0(v7, v8, &v29);
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v4, v5, "Calling verb \"%s\" for disambiguation selection is invalid", v6, 0xCu);
      swift_arrayDestroy();
LABEL_6:
      swift_slowDealloc();
LABEL_28:
      swift_slowDealloc();
LABEL_29:

      return 0;
  }
}

void sub_5EE54(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_5EE98(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_5EEDC(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t (*a5)(char *)@<X4>, void (*a6)(void)@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>)
{
  unint64_t v292 = a8;
  uint64_t v291 = a7;
  uint64_t v294 = a6;
  v308 = a5;
  int v289 = a3;
  uint64_t v301 = a2;
  unint64_t v332 = a1;
  uint64_t v328 = a9;
  uint64_t v283 = sub_13F460();
  uint64_t v282 = *(void *)(v283 - 8);
  __chkstk_darwin(v283);
  unint64_t v281 = (char *)&v277 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = type metadata accessor for TimerNLv3Intent();
  uint64_t v11 = __chkstk_darwin(v293);
  char v299 = (char *)&v277 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v305 = (char *)&v277 - v13;
  uint64_t v286 = sub_13F380();
  uint64_t v285 = *(void *)(v286 - 8);
  __chkstk_darwin(v286);
  v284 = (char *)&v277 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v313 = sub_13F410();
  uint64_t v290 = *(void *)(v313 - 8);
  uint64_t v15 = __chkstk_darwin(v313);
  long long v279 = (char *)&v277 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v280 = (char *)&v277 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v288 = (char *)&v277 - v20;
  __chkstk_darwin(v19);
  v287 = (char *)&v277 - v21;
  uint64_t v298 = sub_140280();
  uint64_t v296 = *(void *)(v298 - 8);
  __chkstk_darwin(v298);
  uint64_t v297 = (char *)&v277 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v311 = sub_13F3E0();
  uint64_t v307 = *(void *)(v311 - 8);
  uint64_t v23 = __chkstk_darwin(v311);
  v302 = (uint64_t *)((char *)&v277 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  v310 = (char *)&v277 - v25;
  uint64_t v321 = sub_13EDF0();
  uint64_t v315 = *(void *)(v321 - 8);
  __chkstk_darwin(v321);
  uint64_t v300 = (char *)&v277 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = sub_5830(&qword_17CD38);
  __chkstk_darwin(v312);
  uint64_t v320 = (uint64_t)&v277 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_5830(&qword_17CD40);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v306 = (uint64_t)&v277 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v318 = (uint64_t)&v277 - v32;
  __chkstk_darwin(v31);
  uint64_t v319 = (uint64_t)&v277 - v33;
  uint64_t v34 = sub_1407C0();
  uint64_t v35 = *(void **)(v34 - 8);
  __chkstk_darwin(v34);
  v325 = (char *)&v277 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_5830(&qword_17CD48);
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v304 = (uint64_t)&v277 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v317 = (uint64_t)&v277 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v323 = (char *)&v277 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v339 = (uint64_t *)((char *)&v277 - v45);
  __chkstk_darwin(v44);
  id v47 = (char *)&v277 - v46;
  uint64_t v48 = sub_5830((uint64_t *)&unk_17EB90);
  uint64_t v49 = __chkstk_darwin(v48 - 8);
  uint64_t v295 = (uint64_t)&v277 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  os_log_type_t v303 = (uint8_t *)&v277 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v55 = (char *)&v277 - v54;
  uint64_t v56 = __chkstk_darwin(v53);
  uint64_t v309 = (uint64_t)&v277 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  int v316 = (uint8_t *)&v277 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v322 = (uint8_t *)&v277 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v330 = (uint64_t)&v277 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v314 = (uint64_t)&v277 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v338 = (uint8_t *)&v277 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v70 = (char *)&v277 - v69;
  __chkstk_darwin(v68);
  uint64_t v72 = (char *)&v277 - v71;
  uint64_t v73 = (void (*)(void))v35[13];
  unsigned int v326 = enum case for DecideAction.PromptExpectation.roomConfirmation(_:);
  v333 = (void (*)(uint8_t *, void, uint64_t))v73;
  v334 = v35 + 13;
  v73((char *)&v277 - v71);
  uint64_t v335 = (void (*)(char *, void, uint64_t, uint64_t))v35[7];
  uint64_t v336 = v35 + 7;
  v335(v72, 0, 1, v34);
  v337 = (uint8_t *)v37;
  uint64_t v74 = (uint64_t)&v47[*(int *)(v37 + 48)];
  uint64_t v327 = a4;
  sub_8FE8(a4, (uint64_t)v47, (uint64_t *)&unk_17EB90);
  sub_8FE8((uint64_t)v72, v74, (uint64_t *)&unk_17EB90);
  v331 = v35;
  uint64_t v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35[6];
  uint64_t v75 = v35 + 6;
  uint64_t v76 = v77;
  int v78 = v77((uint64_t)v47, 1, v34);
  v329 = v77;
  if (v78 == 1)
  {
    sub_904C((uint64_t)v72, (uint64_t *)&unk_17EB90);
    int v79 = v76(v74, 1, v34);
    if (v79 == 1) {
      uint64_t v80 = (uint64_t *)&unk_17EB90;
    }
    else {
      uint64_t v80 = &qword_17CD48;
    }
    if (v79 == 1) {
      char v81 = -1;
    }
    else {
      char v81 = 0;
    }
  }
  else
  {
    sub_8FE8((uint64_t)v47, (uint64_t)v70, (uint64_t *)&unk_17EB90);
    if (v76(v74, 1, v34) == 1)
    {
      sub_904C((uint64_t)v72, (uint64_t *)&unk_17EB90);
      ((void (*)(char *, uint64_t))v331[1])(v70, v34);
      char v81 = 0;
      uint64_t v80 = &qword_17CD48;
    }
    else
    {
      uint64_t v82 = v331;
      uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))v331[4];
      v324 = v75;
      uint64_t v84 = v325;
      v83(v325, v74, v34);
      sub_6C534((unint64_t *)&unk_17CD60, 255, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
      char v81 = sub_141230();
      uint64_t v85 = (void (*)(char *, uint64_t))v82[1];
      uint64_t v86 = v84;
      uint64_t v75 = v324;
      v85(v86, v34);
      uint64_t v80 = (uint64_t *)&unk_17EB90;
      sub_904C((uint64_t)v72, (uint64_t *)&unk_17EB90);
      v85(v70, v34);
    }
  }
  unint64_t v87 = v332;
  uint64_t v88 = (uint64_t)v339;
  sub_904C((uint64_t)v47, v80);
  char v89 = sub_BD10(v87, v81 & 1);
  uint64_t v90 = v330;
  uint64_t v91 = v338;
  if ((v89 & 1) == 0)
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v98 = sub_141170();
    sub_33D8(v98, (uint64_t)qword_17EB30);
    id v99 = sub_141160();
    os_log_type_t v100 = sub_141480();
    if (!os_log_type_enabled(v99, v100)) {
      goto LABEL_20;
    }
    uint64_t v101 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v101 = 0;
    unint64_t v102 = "decideActionForInput(input:type:halInfo: ... no valid timer input";
    goto LABEL_19;
  }
  v333(v338, enum case for DecideAction.PromptExpectation.confirmation(_:), v34);
  v335((char *)v91, 0, 1, v34);
  uint64_t v92 = v88 + *((int *)v337 + 12);
  uint64_t v93 = v327;
  sub_8FE8(v327, v88, (uint64_t *)&unk_17EB90);
  sub_8FE8((uint64_t)v91, v92, (uint64_t *)&unk_17EB90);
  uint64_t v94 = v329;
  int v95 = v329(v88, 1, v34);
  v324 = v75;
  if (v95 == 1)
  {
    sub_904C((uint64_t)v91, (uint64_t *)&unk_17EB90);
    int v96 = v94(v92, 1, v34);
    uint64_t v97 = (uint64_t)v323;
    if (v96 == 1)
    {
      sub_904C((uint64_t)v339, (uint64_t *)&unk_17EB90);
      sub_8FE8(v93, v90, (uint64_t *)&unk_17EB90);
LABEL_28:
      sub_904C(v90, (uint64_t *)&unk_17EB90);
LABEL_29:
      uint64_t v110 = (uint64_t)v316;
      v333(v316, v326, v34);
      v335((char *)v110, 0, 1, v34);
      uint64_t v111 = v317;
      uint64_t v112 = v317 + *((int *)v337 + 12);
      uint64_t v113 = (uint64_t *)&unk_17EB90;
      sub_8FE8(v93, v317, (uint64_t *)&unk_17EB90);
      sub_8FE8(v110, v112, (uint64_t *)&unk_17EB90);
      uint64_t v114 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v329;
      if (v329(v111, 1, v34) == 1)
      {
        sub_904C(v110, (uint64_t *)&unk_17EB90);
        if (v114(v112, 1, v34) == 1)
        {
          char v115 = -1;
        }
        else
        {
          uint64_t v113 = &qword_17CD48;
          char v115 = 0;
        }
      }
      else
      {
        uint64_t v127 = v309;
        sub_8FE8(v111, v309, (uint64_t *)&unk_17EB90);
        if (v114(v112, 1, v34) == 1)
        {
          sub_904C(v110, (uint64_t *)&unk_17EB90);
          ((void (*)(uint64_t, uint64_t))v331[1])(v127, v34);
          char v115 = 0;
          uint64_t v113 = &qword_17CD48;
        }
        else
        {
          uint64_t v143 = v331;
          unint64_t v144 = v325;
          ((void (*)(char *, uint64_t, uint64_t))v331[4])(v325, v112, v34);
          sub_6C534((unint64_t *)&unk_17CD60, 255, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
          char v115 = sub_141230();
          v145 = (void (*)(char *, uint64_t))v143[1];
          v145(v144, v34);
          uint64_t v113 = (uint64_t *)&unk_17EB90;
          sub_904C(v110, (uint64_t *)&unk_17EB90);
          v145((char *)v127, v34);
        }
      }
      sub_904C(v111, v113);
      sub_B6610(v87, v115 & 1, v328);
      return;
    }
    goto LABEL_23;
  }
  uint64_t v103 = v314;
  sub_8FE8(v88, v314, (uint64_t *)&unk_17EB90);
  if (v94(v92, 1, v34) == 1)
  {
    sub_904C((uint64_t)v338, (uint64_t *)&unk_17EB90);
    ((void (*)(uint64_t, uint64_t))v331[1])(v103, v34);
    uint64_t v97 = (uint64_t)v323;
LABEL_23:
    os_log_type_t v278 = v55;
    sub_904C((uint64_t)v339, &qword_17CD48);
    sub_8FE8(v93, v90, (uint64_t *)&unk_17EB90);
    goto LABEL_25;
  }
  os_log_type_t v278 = v55;
  uint64_t v104 = v331;
  uint64_t v105 = v325;
  ((void (*)(char *, uint64_t, uint64_t))v331[4])(v325, v92, v34);
  sub_6C534((unint64_t *)&unk_17CD60, 255, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
  char v106 = sub_141230();
  Class v107 = (void (*)(char *, uint64_t))v104[1];
  v107(v105, v34);
  sub_904C((uint64_t)v338, (uint64_t *)&unk_17EB90);
  v107((char *)v103, v34);
  uint64_t v94 = v329;
  uint64_t v93 = v327;
  sub_904C(v88, (uint64_t *)&unk_17EB90);
  sub_8FE8(v93, v90, (uint64_t *)&unk_17EB90);
  uint64_t v97 = (uint64_t)v323;
  if (v106) {
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v108 = (uint64_t)v322;
  v333(v322, v326, v34);
  v335((char *)v108, 0, 1, v34);
  uint64_t v109 = v97 + *((int *)v337 + 12);
  sub_8FE8(v90, v97, (uint64_t *)&unk_17EB90);
  sub_8FE8(v108, v109, (uint64_t *)&unk_17EB90);
  if (v94(v97, 1, v34) == 1)
  {
    sub_904C(v108, (uint64_t *)&unk_17EB90);
    sub_904C(v90, (uint64_t *)&unk_17EB90);
    if (v94(v109, 1, v34) == 1)
    {
      uint64_t v90 = v97;
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  uint64_t v116 = (uint64_t)v278;
  sub_8FE8(v97, (uint64_t)v278, (uint64_t *)&unk_17EB90);
  if (v94(v109, 1, v34) == 1)
  {
    sub_904C((uint64_t)v322, (uint64_t *)&unk_17EB90);
    sub_904C(v90, (uint64_t *)&unk_17EB90);
    ((void (*)(uint64_t, uint64_t))v331[1])(v116, v34);
LABEL_35:
    sub_904C(v97, &qword_17CD48);
    uint64_t v117 = v321;
    uint64_t v118 = v319;
    uint64_t v119 = v318;
    goto LABEL_36;
  }
  uint64_t v137 = v116;
  uint64_t v138 = v331;
  v139 = v325;
  ((void (*)(char *, uint64_t, uint64_t))v331[4])(v325, v109, v34);
  sub_6C534((unint64_t *)&unk_17CD60, 255, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
  char v140 = sub_141230();
  uint64_t v141 = v97;
  v142 = (void (*)(char *, uint64_t))v138[1];
  v142(v139, v34);
  sub_904C((uint64_t)v322, (uint64_t *)&unk_17EB90);
  sub_904C(v330, (uint64_t *)&unk_17EB90);
  v142((char *)v137, v34);
  sub_904C(v141, (uint64_t *)&unk_17EB90);
  uint64_t v117 = v321;
  uint64_t v118 = v319;
  uint64_t v119 = v318;
  if (v140) {
    goto LABEL_29;
  }
LABEL_36:
  sub_D3F0(v118);
  sub_13EDC0();
  uint64_t v120 = v315;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v315 + 56))(v119, 0, 1, v117);
  uint64_t v121 = v320;
  uint64_t v122 = v320 + *(int *)(v312 + 48);
  sub_8FE8(v118, v320, &qword_17CD40);
  uint64_t v123 = v321;
  sub_8FE8(v119, v122, &qword_17CD40);
  uint64_t v124 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
  if (v124(v121, 1, v123) == 1)
  {
    sub_904C(v119, &qword_17CD40);
    sub_904C(v118, &qword_17CD40);
    int v125 = v124(v122, 1, v123);
    uint64_t v126 = v313;
    if (v125 == 1)
    {
      sub_904C(v320, &qword_17CD40);
      goto LABEL_56;
    }
    goto LABEL_43;
  }
  uint64_t v128 = v306;
  sub_8FE8(v121, v306, &qword_17CD40);
  if (v124(v122, 1, v123) == 1)
  {
    sub_904C(v318, &qword_17CD40);
    uint64_t v126 = v313;
    sub_904C(v319, &qword_17CD40);
    (*(void (**)(uint64_t, uint64_t))(v315 + 8))(v128, v123);
LABEL_43:
    sub_904C(v320, &qword_17CD38);
    uint64_t v129 = v311;
    goto LABEL_44;
  }
  uint64_t v147 = v121;
  uint64_t v148 = v315;
  uint64_t v149 = v300;
  (*(void (**)(char *, uint64_t, uint64_t))(v315 + 32))(v300, v122, v123);
  sub_6C534((unint64_t *)&qword_17EBA0, 255, (void (*)(uint64_t))&type metadata accessor for ActionForInput);
  char v150 = sub_141230();
  uint64_t v151 = *(void (**)(char *, uint64_t))(v148 + 8);
  v151(v149, v123);
  sub_904C(v318, &qword_17CD40);
  sub_904C(v319, &qword_17CD40);
  v151((char *)v128, v123);
  sub_904C(v147, &qword_17CD40);
  uint64_t v129 = v311;
  uint64_t v126 = v313;
  if (v150)
  {
LABEL_56:
    uint64_t v152 = (uint64_t)v303;
    v333(v303, enum case for DecideAction.PromptExpectation.slot(_:), v34);
    v335((char *)v152, 0, 1, v34);
    uint64_t v153 = v304;
    uint64_t v154 = v304 + *((int *)v337 + 12);
    sub_8FE8(v93, v304, (uint64_t *)&unk_17EB90);
    sub_8FE8(v152, v154, (uint64_t *)&unk_17EB90);
    uint64_t v155 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v329;
    if (v329(v153, 1, v34) == 1)
    {
      sub_904C(v152, (uint64_t *)&unk_17EB90);
      if (v155(v154, 1, v34) == 1)
      {
        sub_904C(v153, (uint64_t *)&unk_17EB90);
LABEL_77:
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v178 = sub_141170();
        sub_33D8(v178, (uint64_t)qword_17EB30);
        uint64_t v179 = sub_141160();
        os_log_type_t v180 = sub_141480();
        if (os_log_type_enabled(v179, v180))
        {
          uint64_t v181 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v181 = 0;
          _os_log_impl(&dword_0, v179, v180, "Received cancel input slot prompt input – .cancel()", v181, 2u);
          swift_slowDealloc();
        }

        sub_13EDC0();
        return;
      }
    }
    else
    {
      uint64_t v156 = v295;
      sub_8FE8(v153, v295, (uint64_t *)&unk_17EB90);
      if (v155(v154, 1, v34) != 1)
      {
        os_log_type_t v174 = v331;
        v175 = v325;
        ((void (*)(char *, uint64_t, uint64_t))v331[4])(v325, v154, v34);
        sub_6C534((unint64_t *)&unk_17CD60, 255, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
        char v176 = sub_141230();
        char v177 = (void (*)(char *, uint64_t))v174[1];
        v177(v175, v34);
        sub_904C(v152, (uint64_t *)&unk_17EB90);
        v177((char *)v156, v34);
        sub_904C(v153, (uint64_t *)&unk_17EB90);
        if (v176) {
          goto LABEL_77;
        }
        goto LABEL_62;
      }
      sub_904C(v152, (uint64_t *)&unk_17EB90);
      ((void (*)(uint64_t, uint64_t))v331[1])(v156, v34);
    }
    sub_904C(v153, &qword_17CD48);
LABEL_62:
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v157 = sub_141170();
    sub_33D8(v157, (uint64_t)qword_17EB30);
    id v99 = sub_141160();
    os_log_type_t v100 = sub_141480();
    if (!os_log_type_enabled(v99, v100)) {
      goto LABEL_20;
    }
    uint64_t v101 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v101 = 0;
    unint64_t v102 = "Received cancel input on non-confirmation, non-slot prompt input – .ignore()";
LABEL_19:
    _os_log_impl(&dword_0, v99, v100, v102, v101, 2u);
    swift_slowDealloc();
LABEL_20:

    sub_13EDE0();
    return;
  }
LABEL_44:
  uint64_t v130 = v310;
  unint64_t v131 = v332;
  sub_13F370();
  char v132 = v308(v130);
  uint64_t v133 = v307;
  os_log_type_t v134 = *(void (**)(char *, uint64_t))(v307 + 8);
  v134(v130, v129);
  if ((v132 & 1) == 0)
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v146 = sub_141170();
    sub_33D8(v146, (uint64_t)qword_17EB30);
    id v99 = sub_141160();
    os_log_type_t v100 = sub_141480();
    if (!os_log_type_enabled(v99, v100)) {
      goto LABEL_20;
    }
    uint64_t v101 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v101 = 0;
    unint64_t v102 = "Disallowing timer input based on allowed input types for current stack state.";
    goto LABEL_19;
  }
  uint64_t v135 = v302;
  sub_13F370();
  int v136 = (*(uint64_t (**)(uint64_t *, uint64_t))(v133 + 88))(v135, v129);
  if (v136 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v133 + 96))(v135, v129);
LABEL_68:
    v158 = *(void (**)(char *, uint64_t *, uint64_t))(v296 + 32);
    os_log_type_t v159 = v297;
    v160 = v135;
    uint64_t v161 = v298;
    v158(v297, v160, v298);
    uint64_t v162 = (uint64_t)v305;
    v158(v305, (uint64_t *)v159, v161);
    uint64_t v163 = (uint64_t)v299;
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v164 = sub_141170();
    uint64_t v165 = sub_33D8(v164, (uint64_t)qword_17EB30);
    sub_303C0(v162, v163);
    uint64_t v166 = sub_141160();
    os_log_type_t v167 = sub_141480();
    if (os_log_type_enabled(v166, v167))
    {
      uint64_t v168 = (uint8_t *)swift_slowAlloc();
      uint64_t v169 = swift_slowAlloc();
      v339 = (uint64_t *)v165;
      uint64_t v341 = (void (*)(void, void))v169;
      *(_DWORD *)uint64_t v168 = 136315138;
      sub_6C534(&qword_17D480, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
      uint64_t v170 = sub_141980();
      uint64_t v340 = sub_58C0(v170, v171, (uint64_t *)&v341);
      uint64_t v162 = (uint64_t)v305;
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364(v163);
      _os_log_impl(&dword_0, v166, v167, "TimerNLIntent: %s", v168, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_30364(v163);
    }

    uint64_t v172 = (uint64_t)v310;
    sub_13F370();
    id v173 = sub_F698(v172, v301);
    v134((char *)v172, v311);
    if (v173)
    {
      v294(0);
      if (swift_dynamicCastClass())
      {
        sub_13EDD0();
      }
      else
      {
        id v185 = v173;
        char v186 = sub_141160();
        os_log_type_t v187 = sub_141470();
        if (os_log_type_enabled(v186, v187))
        {
          uint64_t v188 = swift_slowAlloc();
          uint64_t v341 = (void (*)(void, void))swift_slowAlloc();
          *(_DWORD *)uint64_t v188 = 136315394;
          uint64_t v340 = sub_58C0(v291, v292, (uint64_t *)&v341);
          sub_1415C0();
          *(_WORD *)(v188 + 12) = 2080;
          v339 = (uint64_t *)(v188 + 14);
          id v189 = v185;
          id v190 = [v189 description];
          uint64_t v191 = sub_141250();
          unint64_t v193 = v192;

          uint64_t v194 = v191;
          uint64_t v162 = (uint64_t)v305;
          uint64_t v340 = sub_58C0(v194, v193, (uint64_t *)&v341);
          sub_1415C0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v186, v187, "Flows stack receives unexpected from input. Expecting: %s, Generated: %s", (uint8_t *)v188, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_13EDE0();
      }
    }
    else
    {
      uint64_t v182 = sub_141160();
      uint64_t v183 = sub_141470();
      if (os_log_type_enabled(v182, (os_log_type_t)v183))
      {
        uint64_t v184 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v184 = 0;
        _os_log_impl(&dword_0, v182, (os_log_type_t)v183, "Unable to parse intent from parse", v184, 2u);
        swift_slowDealloc();
      }

      sub_13EDE0();
    }
    sub_30364(v162);
    return;
  }
  if (v136 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v133 + 96))(v135, v129);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_68;
  }
  if (v136 == enum case for Parse.directInvocation(_:))
  {
    sub_13EDD0();
LABEL_87:
    v134((char *)v135, v129);
    return;
  }
  if (v136 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v136 != enum case for Parse.uso(_:))
    {
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v209 = sub_141170();
      sub_33D8(v209, (uint64_t)qword_17EB30);
      uint64_t v210 = v285;
      uint64_t v211 = v284;
      uint64_t v212 = v286;
      (*(void (**)(char *, unint64_t, uint64_t))(v285 + 16))(v284, v131, v286);
      uint64_t v213 = sub_141160();
      os_log_type_t v214 = sub_141470();
      if (os_log_type_enabled(v213, v214))
      {
        os_log_type_t v215 = (uint8_t *)swift_slowAlloc();
        v339 = (uint64_t *)swift_slowAlloc();
        uint64_t v341 = (void (*)(void, void))v339;
        *(_DWORD *)os_log_type_t v215 = 136315138;
        v338 = v215 + 4;
        sub_13F370();
        uint64_t v216 = sub_141260();
        uint64_t v340 = sub_58C0(v216, v217, (uint64_t *)&v341);
        sub_1415C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v210 + 8))(v211, v286);
        _os_log_impl(&dword_0, v213, v214, "Received unsupported parse in decideActionForInput: %s", v215, 0xCu);
        swift_arrayDestroy();
        uint64_t v129 = v311;
        swift_slowDealloc();
        uint64_t v135 = v302;
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v210 + 8))(v211, v212);
      }

      sub_13EDE0();
      goto LABEL_87;
    }
    (*(void (**)(uint64_t *, uint64_t))(v133 + 96))(v135, v129);
    uint64_t v198 = v290;
    v199 = v287;
    (*(void (**)(char *, uint64_t *, uint64_t))(v290 + 32))(v287, v135, v126);
    uint64_t v200 = *(uint8_t **)(v198 + 16);
    uint64_t v201 = v288;
    ((void (*)(char *, char *, uint64_t))v200)(v288, v199, v126);
    if ((v289 & 1) != 0
      && (uint64_t v202 = v281,
          sub_13F400(),
          uint64_t v203 = sub_13F440(),
          char v204 = v202,
          uint64_t v201 = v288,
          (*(void (**)(char *, uint64_t))(v282 + 8))(v204, v283),
          v203))
    {
      v338 = v200;
      char v205 = sub_5BFC();
      swift_release();
      if (sub_642C(v205) == 0x627265566F6ELL && v206 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        char v207 = *(uint64_t **)(v290 + 8);
        uint64_t v208 = v126;
        ((void (*)(char *, uint64_t))v207)(v288, v126);
LABEL_145:
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v268 = sub_141170();
        sub_33D8(v268, (uint64_t)qword_17EB30);
        uint64_t v269 = v280;
        os_log_type_t v270 = v338;
        ((void (*)(char *, char *, uint64_t))v338)(v280, v287, v208);
        uint64_t v271 = v208;
        v272 = sub_141160();
        os_log_type_t v273 = sub_141480();
        if (os_log_type_enabled(v272, v273))
        {
          v339 = v207;
          uint64_t v274 = (uint8_t *)swift_slowAlloc();
          uint64_t v341 = (void (*)(void, void))swift_slowAlloc();
          *(_DWORD *)uint64_t v274 = 136315138;
          v337 = v274 + 4;
          ((void (*)(char *, char *, uint64_t))v270)(v279, v269, v271);
          char v207 = v339;
          uint64_t v275 = sub_141260();
          uint64_t v340 = sub_58C0(v275, v276, (uint64_t *)&v341);
          sub_1415C0();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v207)(v269, v271);
          _os_log_impl(&dword_0, v272, v273, "decideActionForInput decide handle disambiguation UsoParse: %s", v274, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          ((void (*)(char *, uint64_t))v207)(v269, v271);
        }

        sub_13EDD0();
        ((void (*)(char *, uint64_t))v207)(v287, v271);
        return;
      }
      char v267 = sub_141AA0();
      swift_bridgeObjectRelease();
      char v207 = *(uint64_t **)(v290 + 8);
      uint64_t v208 = v126;
      ((void (*)(char *, uint64_t))v207)(v288, v126);
      if (v267) {
        goto LABEL_145;
      }
    }
    else
    {
      char v207 = *(uint64_t **)(v290 + 8);
      ((void (*)(char *, uint64_t))v207)(v201, v126);
    }
    uint64_t v218 = (uint64_t)v310;
    sub_13F370();
    id v219 = sub_F698(v218, v301);
    v134((char *)v218, v129);
    if (v219 && (v294(0), (uint64_t v220 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v221 = (void *)v220;
      uint64_t v222 = qword_17B270;
      id v223 = v219;
      if (v222 != -1) {
        swift_once();
      }
      uint64_t v224 = sub_141170();
      sub_33D8(v224, (uint64_t)qword_17EB30);
      id v225 = v223;
      uint64_t v226 = sub_141160();
      os_log_type_t v227 = sub_141480();
      if (os_log_type_enabled(v226, v227))
      {
        uint64_t v228 = (uint8_t *)swift_slowAlloc();
        v339 = (uint64_t *)swift_slowAlloc();
        uint64_t v341 = (void (*)(void, void))v339;
        *(_DWORD *)uint64_t v228 = 136315138;
        v337 = v228 + 4;
        v338 = v228;
        id v229 = v225;
        id v230 = [v221 description];
        uint64_t v231 = v207;
        uint64_t v232 = sub_141250();
        unint64_t v234 = v233;

        uint64_t v235 = v232;
        char v207 = v231;
        uint64_t v340 = sub_58C0(v235, v234, (uint64_t *)&v341);
        sub_1415C0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v226, v227, "Handling action for intent: %s", v338, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_13EDD0();
    }
    else
    {
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v236 = sub_141170();
      sub_33D8(v236, (uint64_t)qword_17EB30);
      id v225 = v219;
      os_log_type_t v237 = sub_141160();
      os_log_type_t v238 = sub_141470();
      if (os_log_type_enabled(v237, v238))
      {
        uint64_t v239 = swift_slowAlloc();
        uint64_t v240 = swift_slowAlloc();
        v339 = v207;
        uint64_t v341 = (void (*)(void, void))v240;
        *(_DWORD *)uint64_t v239 = 136315394;
        uint64_t v340 = sub_58C0(v291, v292, (uint64_t *)&v341);
        sub_1415C0();
        *(_WORD *)(v239 + 12) = 2080;
        uint64_t v340 = (uint64_t)v219;
        id v241 = v225;
        sub_5830((uint64_t *)&unk_17CD50);
        uint64_t v242 = sub_141260();
        uint64_t v340 = sub_58C0(v242, v243, (uint64_t *)&v341);
        sub_1415C0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v237, v238, "decideActionForInput: Intent from parse does not match IntentType. Expected %s, received %s", (uint8_t *)v239, 0x16u);
        swift_arrayDestroy();
        char v207 = v339;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_13EDE0();
    }

    ((void (*)(char *, uint64_t))v207)(v287, v126);
    return;
  }
  (*(void (**)(uint64_t *, uint64_t))(v133 + 96))(v135, v129);
  uint64_t v195 = *v135;
  if (v289)
  {
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v196 = sub_5BFC();
      swift_release();
      if (sub_642C(v196) == 0x627265566F6ELL && v197 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_123:
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v245 = sub_141170();
        sub_33D8(v245, (uint64_t)qword_17EB30);
        swift_unknownObjectRetain_n();
        uint64_t v246 = sub_141160();
        os_log_type_t v247 = sub_141480();
        if (os_log_type_enabled(v246, v247))
        {
          uint64_t v248 = (uint8_t *)swift_slowAlloc();
          uint64_t v249 = swift_slowAlloc();
          uint64_t v340 = v195;
          uint64_t v341 = (void (*)(void, void))v249;
          *(_DWORD *)uint64_t v248 = 136315138;
          swift_unknownObjectRetain();
          sub_5830(&qword_17EB60);
          uint64_t v250 = sub_141260();
          uint64_t v340 = sub_58C0(v250, v251, (uint64_t *)&v341);
          sub_1415C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v246, v247, "decideActionForInput decide handle disambiguation userDialogAct: %s", v248, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        sub_13EDD0();
        swift_unknownObjectRelease();
        return;
      }
      char v244 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v244) {
        goto LABEL_123;
      }
    }
  }
  uint64_t v252 = (uint64_t)v310;
  sub_13F370();
  id v253 = sub_F698(v252, v301);
  v134((char *)v252, v129);
  if (v253 && (v294(0), swift_dynamicCastClass()))
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v254 = sub_141170();
    sub_33D8(v254, (uint64_t)qword_17EB30);
    uint64_t v255 = sub_141160();
    os_log_type_t v256 = sub_141480();
    if (os_log_type_enabled(v255, v256))
    {
      v257 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v257 = 0;
      _os_log_impl(&dword_0, v255, v256, "decideActionForInput: Handling action for intent", v257, 2u);
      swift_slowDealloc();
    }

    sub_13EDD0();
    swift_unknownObjectRelease();
  }
  else
  {
    unint64_t v258 = v292;
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v259 = sub_141170();
    sub_33D8(v259, (uint64_t)qword_17EB30);
    id v260 = v253;
    uint64_t v261 = sub_141160();
    os_log_type_t v262 = sub_141470();
    if (os_log_type_enabled(v261, v262))
    {
      uint64_t v263 = swift_slowAlloc();
      uint64_t v341 = (void (*)(void, void))swift_slowAlloc();
      *(_DWORD *)uint64_t v263 = 136315394;
      uint64_t v340 = sub_58C0(v291, v258, (uint64_t *)&v341);
      sub_1415C0();
      *(_WORD *)(v263 + 12) = 2080;
      uint64_t v340 = (uint64_t)v253;
      id v264 = v260;
      sub_5830((uint64_t *)&unk_17CD50);
      uint64_t v265 = sub_141260();
      uint64_t v340 = sub_58C0(v265, v266, (uint64_t *)&v341);
      sub_1415C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v261, v262, "decideActionForInput: Intent from parse does not match IntentType. Expected %s, received %s", (uint8_t *)v263, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_13EDE0();
    swift_unknownObjectRelease();
  }
}

void sub_61E24(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_61E68(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_61EAC(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_61EF0(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

void sub_61F34(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

uint64_t sub_61F78()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17CBC0);
  sub_33D8(v0, (uint64_t)qword_17CBC0);
  return sub_140E60();
}

uint64_t sub_61FC4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B188 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17CBC0);
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "CreateTimer.NeedsValueStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = enum case for DecideAction.PromptExpectation.slot(_:);
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_5EEDC(a1, (uint64_t)v9, 0, (uint64_t)v6, (uint64_t (*)(char *))sub_6549C, (void (*)(void))&type metadata accessor for CreateTimerIntent, 0xD000000000000011, 0x8000000000148740, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_62284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  uint64_t v4 = sub_13F540();
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  uint64_t v5 = sub_13F500();
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v6 = sub_13F460();
  v3[23] = v6;
  unsigned char v3[24] = *(void *)(v6 - 8);
  v3[25] = swift_task_alloc();
  sub_5830(&qword_17D450);
  v3[26] = swift_task_alloc();
  uint64_t v7 = sub_13F430();
  v3[27] = v7;
  v3[28] = *(void *)(v7 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  uint64_t v8 = sub_13F410();
  v3[31] = v8;
  v3[32] = *(void *)(v8 - 8);
  v3[33] = swift_task_alloc();
  uint64_t v9 = sub_13F380();
  v3[34] = v9;
  v3[35] = *(void *)(v9 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = type metadata accessor for TimerNLv3Intent();
  unsigned char v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  uint64_t v10 = sub_13F3E0();
  v3[42] = v10;
  v3[43] = *(void *)(v10 - 8);
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  uint64_t v11 = sub_140280();
  v3[46] = v11;
  v3[47] = *(void *)(v11 - 8);
  v3[48] = swift_task_alloc();
  return _swift_task_switch(sub_62678, 0, 0);
}

uint64_t sub_62678()
{
  unint64_t v234 = v0;
  double v1 = v0;
  uint64_t v220 = v0 + 11;
  id v223 = v0 + 4;
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[43];
  uint64_t v4 = v1[42];
  sub_5830((uint64_t *)&unk_17CCE0);
  uint64_t v5 = (void *)sub_13F1F0();
  sub_13F370();
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4);
  id v230 = v1;
  if (v6 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(void, void))(v1[43] + 96))(v1[45], v1[42]);
LABEL_5:
    uint64_t v226 = v5;
    uint64_t v7 = v1[48];
    uint64_t v8 = v1[46];
    uint64_t v9 = v1[41];
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1[47] + 32);
    v10(v7, v1[45], v8);
    v10(v9, v7, v8);
    id v11 = sub_6C120();
    if (qword_17B188 != -1) {
      swift_once();
    }
    uint64_t v12 = v1[40];
    uint64_t v13 = v1[41];
    uint64_t v14 = sub_141170();
    sub_33D8(v14, (uint64_t)qword_17CBC0);
    sub_303C0(v13, v12);
    uint64_t v15 = sub_141160();
    os_log_type_t v16 = sub_141480();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v1[40];
    if (v17)
    {
      id v215 = v11;
      uint64_t v19 = v1;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v232 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_6C534(&qword_17D480, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
      uint64_t v21 = sub_141980();
      v19[10] = sub_58C0(v21, v22, (uint64_t *)&v232);
      id v11 = v215;
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364(v18);
      _os_log_impl(&dword_0, v15, v16, "NLIntent:%s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_30364(v1[40]);
    }

    id v23 = v11;
    uint64_t v24 = sub_141160();
    os_log_type_t v25 = sub_141480();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v232 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      id v27 = v23;
      id v28 = [v27 description];
      uint64_t v29 = sub_141250();
      unint64_t v31 = v30;

      uint64_t *v223 = sub_58C0(v29, v31, (uint64_t *)&v232);
      sub_1415C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v24, v25, "Updated SK intent:%s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v32 = v230[41];
    long long v232 = 0u;
    long long v233 = 0u;
    id v33 = v23;
    sub_141560();

    sub_140CA0();
    uint64_t v34 = v230;
    sub_13F080();

    sub_30364(v32);
    goto LABEL_14;
  }
  if (v6 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void, void))(v1[43] + 96))(v1[45], v1[42]);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v6 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(void, void))(v1[43] + 96))(v1[45], v1[42]);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      sub_140CA0();
      swift_retain();
      id v39 = sub_12C64();
      if (v39)
      {
        uint64_t v40 = v39;
        if (qword_17B188 != -1) {
          swift_once();
        }
        uint64_t v41 = sub_141170();
        sub_33D8(v41, (uint64_t)qword_17CBC0);
        id v42 = v5;
        uint64_t v43 = sub_141160();
        os_log_type_t v44 = sub_141480();
        uint64_t v212 = v42;
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = v1 + 6;
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v232 = swift_slowAlloc();
          *(_DWORD *)uint64_t v46 = 136315138;
          id v47 = v42;
          id v48 = [v47 description];
          uint64_t v49 = sub_141250();
          unint64_t v51 = v50;

          *uint64_t v45 = sub_58C0(v49, v51, (uint64_t *)&v232);
          sub_1415C0();
          swift_bridgeObjectRelease();

          double v1 = v230;
          _os_log_impl(&dword_0, v43, v44, "Current SK intent %s", v46, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v101 = v1 + 12;
        unint64_t v102 = (void *)sub_13F1F0();
        sub_140C80();
        sub_140C90();
        id v103 = v40;
        uint64_t v104 = sub_141160();
        os_log_type_t v105 = sub_141480();
        id v219 = v103;
        if (os_log_type_enabled(v104, v105))
        {
          char v106 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v232 = swift_slowAlloc();
          *(_DWORD *)char v106 = 136315138;
          id v107 = v103;
          id v108 = [v107 description];
          uint64_t v109 = sub_141250();
          unint64_t v111 = v110;

          uint64_t *v220 = sub_58C0(v109, v111, (uint64_t *)&v232);
          sub_1415C0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_0, v104, v105, "UsoGraph createTimerIntent:%s", v106, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        id v112 = v102;
        uint64_t v113 = sub_141160();
        os_log_type_t v114 = sub_141480();
        if (os_log_type_enabled(v113, v114))
        {
          char v115 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v232 = swift_slowAlloc();
          uint64_t v116 = v101;
          *(_DWORD *)char v115 = 136315138;
          id v117 = v112;
          id v118 = [v117 description];
          uint64_t v119 = sub_141250();
          unint64_t v121 = v120;

          *uint64_t v116 = sub_58C0(v119, v121, (uint64_t *)&v232);
          sub_1415C0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_0, v113, v114, "Updated SK intent:%s", v115, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v34 = v230;
        long long v232 = 0u;
        long long v233 = 0u;
        id v122 = v112;
        sub_141560();

        sub_13F080();
        swift_release();

        swift_unknownObjectRelease();
        goto LABEL_14;
      }
      swift_release();
    }
    if (qword_17B188 != -1) {
      swift_once();
    }
    uint64_t v231 = v1 + 49;
    uint64_t v89 = v1[38];
    uint64_t v90 = v1[34];
    uint64_t v91 = v1[35];
    uint64_t v88 = v1;
    uint64_t v92 = v1[15];
    uint64_t v93 = sub_141170();
    sub_33D8(v93, (uint64_t)qword_17CBC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v89, v92, v90);
    uint64_t v94 = sub_141160();
    os_log_type_t v95 = sub_141470();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = v88[38];
      uint64_t v97 = v88[35];
      uint64_t v221 = v88[34];
      uint64_t v228 = v5;
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v232 = swift_slowAlloc();
      *(_DWORD *)uint64_t v98 = 136315138;
      sub_13F370();
      uint64_t v99 = sub_141260();
      v88[13] = sub_58C0(v99, v100, (uint64_t *)&v232);
      sub_1415C0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v221);
      _os_log_impl(&dword_0, v94, v95, "Failed to parse userDialogAct into createTimerIntent: %s", v98, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v5 = v228;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v88[35] + 8))(v88[38], v88[34]);
    }

    unsigned char *v231 = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();

    swift_unknownObjectRelease();
LABEL_65:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = (uint64_t (*)(void))v88[1];
    goto LABEL_15;
  }
  if (v6 != enum case for Parse.uso(_:))
  {
    if (qword_17B188 != -1) {
      swift_once();
    }
    uint64_t v73 = v1[35];
    uint64_t v72 = v1[36];
    uint64_t v74 = v1[34];
    uint64_t v75 = v1;
    uint64_t v76 = v1[15];
    uint64_t v77 = sub_141170();
    sub_33D8(v77, (uint64_t)qword_17CBC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v72, v76, v74);
    int v78 = sub_141160();
    os_log_type_t v79 = sub_141470();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v81 = v75[35];
      uint64_t v80 = v75[36];
      uint64_t v218 = v75[34];
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v232 = swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 136315138;
      sub_13F370();
      uint64_t v83 = sub_141260();
      v75[3] = sub_58C0(v83, v84, (uint64_t *)&v232);
      sub_1415C0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v218);
      _os_log_impl(&dword_0, v78, v79, "Received unsupported parse: %s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v75[35] + 8))(v75[36], v75[34]);
    }

    uint64_t v85 = v75[45];
    uint64_t v86 = v75[43];
    uint64_t v87 = v230[42];
    *((unsigned char *)v230 + 396) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();

    uint64_t v88 = v230;
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
    goto LABEL_65;
  }
  uint64_t v216 = v1 + 7;
  uint64_t v52 = v1[45];
  uint64_t v54 = v1[32];
  uint64_t v53 = v1[33];
  uint64_t v55 = v1[31];
  (*(void (**)(uint64_t, void))(v1[43] + 96))(v52, v1[42]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v53, v52, v55);
  if (qword_17B188 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_141170();
  sub_33D8(v56, (uint64_t)qword_17CBC0);
  uint64_t v57 = sub_141160();
  os_log_type_t v58 = sub_141480();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v59 = 0;
    _os_log_impl(&dword_0, v57, v58, "Received an USO parse in CreateTimer.parseResponseValue().", v59, 2u);
    swift_slowDealloc();
  }
  uint64_t v61 = v1[24];
  uint64_t v60 = v1[25];
  uint64_t v62 = v1[23];

  sub_13F400();
  uint64_t v63 = sub_13F450();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  uint64_t v64 = *(void *)(v63 + 16);
  os_log_type_t v227 = v5;
  if (v64)
  {
    uint64_t v65 = v1[21];
    uint64_t v68 = *(void (**)(void, unint64_t, void))(v65 + 16);
    uint64_t v66 = v65 + 16;
    uint64_t v67 = v68;
    unint64_t v69 = v63 + ((*(unsigned __int8 *)(v66 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 64));
    uint64_t v70 = *(void *)(v66 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v67(v1[22], v69, v1[20]);
      if (sub_13F470()) {
        break;
      }
      (*(void (**)(void, void))(v66 - 8))(v1[22], v1[20]);
      v69 += v70;
      if (!--v64)
      {
        swift_bridgeObjectRelease();
        uint64_t v71 = 1;
        goto LABEL_58;
      }
    }
    uint64_t v123 = v1[26];
    uint64_t v125 = v1[21];
    uint64_t v124 = v1[22];
    uint64_t v126 = v1[20];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v123, v124, v126);
    uint64_t v71 = 0;
  }
  else
  {
    uint64_t v71 = 1;
  }
LABEL_58:
  uint64_t v127 = v1[26];
  uint64_t v128 = v1[20];
  uint64_t v129 = v1[21];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v127, v71, 1, v128);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128) == 1)
  {
    sub_904C(v1[26], &qword_17D450);
    (*(void (**)(void, void, void))(v1[35] + 16))(v1[37], v1[15], v1[34]);
    char v140 = sub_141160();
    os_log_type_t v141 = sub_141470();
    if (os_log_type_enabled(v140, v141))
    {
      uint64_t v143 = v1[37];
      uint64_t v144 = v1[35];
      uint64_t v224 = v1[34];
      v145 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v232 = swift_slowAlloc();
      *(_DWORD *)v145 = 136315138;
      sub_13F370();
      uint64_t v146 = sub_141260();
      v1[5] = sub_58C0(v146, v147, (uint64_t *)&v232);
      sub_1415C0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v143, v224);
      _os_log_impl(&dword_0, v140, v141, "Failed to parse userParse from parse: %s.", v145, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v1[35] + 8))(v1[37], v1[34]);
    }

    uint64_t v149 = v1[32];
    uint64_t v148 = v1[33];
    uint64_t v150 = v1[31];
    *((unsigned char *)v1 + 395) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v148, v150);
    uint64_t v88 = v1;
    goto LABEL_65;
  }
  uint64_t v131 = v1[29];
  uint64_t v130 = v1[30];
  uint64_t v132 = v1[27];
  uint64_t v133 = v1[28];
  uint64_t v134 = v1[26];
  uint64_t v135 = v1;
  uint64_t v136 = v1[21];
  uint64_t v138 = v135[19];
  uint64_t v137 = v135[20];
  uint64_t v139 = v135[18];
  uint64_t v213 = v135[17];
  uint64_t v214 = v132;
  sub_13F4C0();
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v134, v137);
  sub_13F510();
  (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v213);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v130, v131, v214);
  sub_13F5C0();
  unint64_t v151 = sub_13F900();
  unint64_t v152 = v151;
  if (v151 >> 62) {
    uint64_t result = sub_1417D0();
  }
  else {
    uint64_t result = *(void *)((char *)&dword_10 + (v151 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v153 = v230;
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v166 = sub_141160();
    os_log_type_t v167 = sub_141470();
    if (os_log_type_enabled(v166, v167))
    {
      uint64_t v168 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v168 = 0;
      _os_log_impl(&dword_0, v166, v167, "USO graph has no tasks.", v168, 2u);
      uint64_t v153 = v230;
      swift_slowDealloc();
    }
    uint64_t v170 = v153[32];
    uint64_t v169 = v153[33];
    uint64_t v171 = v230[31];
    uint64_t v172 = v230[30];
    uint64_t v173 = v230[28];
    uint64_t v174 = v230[27];

    *((unsigned char *)v230 + 393) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v172, v174);
    uint64_t v88 = v230;
    (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v169, v171);
    goto LABEL_65;
  }
  if ((v152 & 0xC000000000000001) != 0)
  {
    sub_1416A0();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (v152 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_140CA0();
  swift_retain();
  id v154 = sub_12C64();
  if (!v154)
  {
    swift_retain_n();
    v175 = sub_141160();
    os_log_type_t v176 = sub_141470();
    if (os_log_type_enabled(v175, v176))
    {
      char v177 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v232 = swift_slowAlloc();
      *(_DWORD *)char v177 = 136315138;
      uint64_t v178 = sub_140240();
      uint64_t *v216 = sub_58C0(v178, v179, (uint64_t *)&v232);
      sub_1415C0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v175, v176, "Could not create IntentType from given task: %s", v177, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v88 = v230;
    uint64_t v207 = v230[32];
    uint64_t v225 = v230[33];
    uint64_t v209 = v230[30];
    uint64_t v208 = v230[31];
    uint64_t v211 = v230[27];
    uint64_t v210 = v230[28];
    *((unsigned char *)v230 + 394) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();
    swift_release();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v209, v211);
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v225, v208);
    goto LABEL_65;
  }
  uint64_t v155 = v154;
  id v156 = v227;
  uint64_t v157 = sub_141160();
  os_log_type_t v158 = sub_141480();
  id v229 = v156;
  if (os_log_type_enabled(v157, v158))
  {
    os_log_type_t v159 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v232 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v159 = 136315138;
    id v160 = v156;
    id v161 = [v160 description];
    os_log_type_t v162 = v158;
    uint64_t v163 = sub_141250();
    unint64_t v165 = v164;

    v230[2] = sub_58C0(v163, v165, (uint64_t *)&v232);
    sub_1415C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v157, v162, "Current SK intent %s", v159, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  os_log_type_t v180 = (void *)sub_13F1F0();
  sub_140C80();
  sub_140C90();
  id v181 = v155;
  uint64_t v182 = sub_141160();
  os_log_type_t v183 = sub_141480();
  uint64_t v222 = v181;
  if (os_log_type_enabled(v182, v183))
  {
    unint64_t v217 = v180;
    uint64_t v184 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v232 = swift_slowAlloc();
    *(_DWORD *)uint64_t v184 = 136315138;
    id v185 = v181;
    id v186 = [v185 description];
    uint64_t v187 = sub_141250();
    unint64_t v189 = v188;

    v230[9] = sub_58C0(v187, v189, (uint64_t *)&v232);
    sub_1415C0();
    swift_bridgeObjectRelease();

    os_log_type_t v180 = v217;
    _os_log_impl(&dword_0, v182, v183, "UsoGraph createTimerIntent:%s", v184, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v190 = v180;
  uint64_t v191 = sub_141160();
  os_log_type_t v192 = sub_141480();
  if (os_log_type_enabled(v191, v192))
  {
    unint64_t v193 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v232 = swift_slowAlloc();
    *(_DWORD *)unint64_t v193 = 136315138;
    id v194 = v190;
    id v195 = [v194 description];
    uint64_t v196 = sub_141250();
    unint64_t v198 = v197;

    v230[8] = sub_58C0(v196, v198, (uint64_t *)&v232);
    sub_1415C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v191, v192, "Updated SK intent:%s", v193, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v153 = v230;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v200 = v153[32];
  uint64_t v199 = v153[33];
  uint64_t v201 = v230[31];
  uint64_t v202 = v230[30];
  uint64_t v203 = v230[28];
  uint64_t v204 = v230[27];
  long long v232 = 0u;
  long long v233 = 0u;
  id v205 = v190;
  sub_141560();

  sub_13F080();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v202, v204);
  uint64_t v206 = v201;
  uint64_t v34 = v230;
  (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v199, v206);
LABEL_14:
  uint64_t v35 = v34[14];
  uint64_t v36 = sub_5830(&qword_17CCF8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v34[1];
LABEL_15:
  return v37();
}

uint64_t sub_645D8(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_141170();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_140680();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v4 = sub_1406A0();
  v1[9] = v4;
  v1[10] = *(void *)(v4 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v5 = sub_13EFF0();
  v1[12] = v5;
  v1[13] = *(void *)(v5 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v6 = sub_13ECE0();
  v1[15] = v6;
  v1[16] = *(void *)(v6 - 8);
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_64808, 0, 0);
}

uint64_t sub_64808()
{
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  sub_13EC70();
  sub_11877C(v1);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v4);
  if (qword_17B188 != -1) {
    swift_once();
  }
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[3];
  uint64_t v8 = sub_33D8(v7, (uint64_t)qword_17CBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  mach_absolute_time();
  sub_1406B0();
  if (qword_17B1A0 != -1) {
    swift_once();
  }
  id v11 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[18] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_649D4;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v11)(0xD00000000000001DLL, 0x80000000001485D0, _swiftEmptyArrayStorage);
}

uint64_t sub_649D4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_64C9C, 0, 0);
  }
  else
  {
    v4[20] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[21] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_64B70;
    uint64_t v7 = v4[17];
    uint64_t v8 = v4[14];
    uint64_t v9 = v4[11];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_64B70()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 160);
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_64EA4;
  }
  else {
    uint64_t v3 = sub_64DA4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_64C9C()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_64DA4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_64EA4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_64FAC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_61FC4(a1, a2);
}

uint64_t sub_64FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1D95C;
  return sub_62284(a1, a2, a3);
}

uint64_t sub_65074(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_159A4;
  return sub_645D8(a1);
}

uint64_t sub_6510C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = _s18NeedsValueStrategyCMa();
  *uint64_t v8 = v4;
  v8[1] = sub_1D95C;
  return NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_651D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = _s18NeedsValueStrategyCMa();
  *uint64_t v8 = v4;
  v8[1] = sub_1D95C;
  return NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_65294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = _s18NeedsValueStrategyCMa();
  *uint64_t v12 = v6;
  v12[1] = sub_1D95C;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_65370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t v15 = _s18NeedsValueStrategyCMa();
  *uint64_t v14 = v7;
  v14[1] = sub_1D95C;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t sub_65454(uint64_t a1, uint64_t a2)
{
  return sub_6C534(qword_17CCB0, a2, (void (*)(uint64_t))_s18NeedsValueStrategyCMa);
}

uint64_t sub_6549C(uint64_t a1)
{
  uint64_t v2 = sub_140900();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2);
  uint64_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v103);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F460();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F410();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_140920();
  uint64_t v98 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F3C0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_13F3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_140280();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_140CA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
LABEL_5:
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
    v24(v5, v22, v19);
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v25 = (char)v105;
    sub_30364((uint64_t)v5);
    char v26 = byte_1437D2[v25];
    goto LABEL_8;
  }
  if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v23 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v18, v101);
    uint64_t v39 = sub_13F3A0();
    uint64_t v41 = v40;
    uint64_t v42 = v98;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v10);
    uint64_t v43 = sub_140910();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      char v26 = 10;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_8:
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17EB30);
      id v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v105 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v104 = v102;
        sub_5830((uint64_t *)&unk_17CD70);
        uint64_t v31 = sub_141260();
        uint64_t v104 = sub_58C0(v31, v32, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v104) = v26;
        uint64_t v33 = sub_141260();
        uint64_t v104 = sub_58C0(v33, v34, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (0x621Au >> v26) & 1;
    }
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
    uint64_t v54 = sub_13F3B0();
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v57 = v90;
      uint64_t v56 = v91;
      os_log_type_t v58 = v89;
      (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v91);
      uint64_t v59 = sub_1408F0();
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      if (*(void *)(v55 + 16) && (unint64_t v62 = sub_16F44(v59, v61), (v63 & 1) != 0))
      {
        sub_5B50(*(void *)(v55 + 56) + 32 * v62, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v106 + 1))
      {
        if (swift_dynamicCast())
        {
          char v26 = sub_CC640();
          if (v26 != 19) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_904C((uint64_t)&v105, &qword_17B9B0);
      }
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_141170();
    sub_33D8(v84, (uint64_t)qword_17EB30);
    uint64_t v85 = sub_141160();
    os_log_type_t v86 = sub_141480();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    return 0;
  }
  if (v23 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v46 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      char v72 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_46:
        char v73 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v73 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_77:
      swift_release();
      goto LABEL_8;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_141170();
    sub_33D8(v68, (uint64_t)qword_17EB30);
    unint64_t v69 = sub_141160();
    os_log_type_t v70 = sub_141480();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_0, v69, v70, "No USO task found on input. Deferring to later checks for parse validity.", v71, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return 1;
  }
  else
  {
    if (v23 != enum case for Parse.uso(_:))
    {
      if (v23 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_141170();
        sub_33D8(v64, (uint64_t)qword_17EB30);
        uint64_t v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Empty parse found while testing valid input. Disallowing empty input.", v67, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_141170();
        sub_33D8(v74, (uint64_t)qword_17EB30);
        uint64_t v75 = sub_141160();
        os_log_type_t v76 = sub_141470();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl(&dword_0, v75, v76, "Unknown parse type found while testing input validity. Disallowing unknown input.", v77, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    uint64_t v50 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v18, v97);
    unint64_t v51 = v92;
    sub_13F400();
    uint64_t v52 = sub_F040();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
    if (v52)
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v53 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v82 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
          goto LABEL_77;
        }
      }
      char v83 = sub_68C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      if ((v83 & 1) == 0) {
        goto LABEL_8;
      }
      return 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_141170();
    sub_33D8(v78, (uint64_t)qword_17EB30);
    os_log_type_t v79 = sub_141160();
    os_log_type_t v80 = sub_141480();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "No USO task found on input. Deferring to later checks for parse validity.", v81, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    return 1;
  }
}

uint64_t sub_6641C(uint64_t a1)
{
  uint64_t v2 = sub_140900();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2);
  uint64_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v103);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F460();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F410();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_140920();
  uint64_t v98 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F3C0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_13F3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_140280();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_140CD0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
LABEL_5:
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
    v24(v5, v22, v19);
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v25 = (char)v105;
    sub_30364((uint64_t)v5);
    char v26 = byte_1437D2[v25];
    goto LABEL_8;
  }
  if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v23 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v18, v101);
    uint64_t v39 = sub_13F3A0();
    uint64_t v41 = v40;
    uint64_t v42 = v98;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v10);
    uint64_t v43 = sub_140910();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      char v26 = 10;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_8:
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17EB30);
      id v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v105 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v104 = v102;
        sub_5830(&qword_17CD88);
        uint64_t v31 = sub_141260();
        uint64_t v104 = sub_58C0(v31, v32, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v104) = v26;
        uint64_t v33 = sub_141260();
        uint64_t v104 = sub_58C0(v33, v34, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (0x6404u >> v26) & 1;
    }
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
    uint64_t v54 = sub_13F3B0();
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v57 = v90;
      uint64_t v56 = v91;
      os_log_type_t v58 = v89;
      (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v91);
      uint64_t v59 = sub_1408F0();
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      if (*(void *)(v55 + 16) && (unint64_t v62 = sub_16F44(v59, v61), (v63 & 1) != 0))
      {
        sub_5B50(*(void *)(v55 + 56) + 32 * v62, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v106 + 1))
      {
        if (swift_dynamicCast())
        {
          char v26 = sub_CC640();
          if (v26 != 19) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_904C((uint64_t)&v105, &qword_17B9B0);
      }
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_141170();
    sub_33D8(v84, (uint64_t)qword_17EB30);
    uint64_t v85 = sub_141160();
    os_log_type_t v86 = sub_141480();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    return 0;
  }
  if (v23 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v46 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      char v72 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_46:
        char v73 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v73 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_77:
      swift_release();
      goto LABEL_8;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_141170();
    sub_33D8(v68, (uint64_t)qword_17EB30);
    unint64_t v69 = sub_141160();
    os_log_type_t v70 = sub_141480();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_0, v69, v70, "No USO task found on input. Deferring to later checks for parse validity.", v71, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return 1;
  }
  else
  {
    if (v23 != enum case for Parse.uso(_:))
    {
      if (v23 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_141170();
        sub_33D8(v64, (uint64_t)qword_17EB30);
        uint64_t v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Empty parse found while testing valid input. Disallowing empty input.", v67, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_141170();
        sub_33D8(v74, (uint64_t)qword_17EB30);
        uint64_t v75 = sub_141160();
        os_log_type_t v76 = sub_141470();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl(&dword_0, v75, v76, "Unknown parse type found while testing input validity. Disallowing unknown input.", v77, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    uint64_t v50 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v18, v97);
    unint64_t v51 = v92;
    sub_13F400();
    uint64_t v52 = sub_F040();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
    if (v52)
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v53 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v82 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
          goto LABEL_77;
        }
      }
      char v83 = sub_68C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      if ((v83 & 1) == 0) {
        goto LABEL_8;
      }
      return 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_141170();
    sub_33D8(v78, (uint64_t)qword_17EB30);
    os_log_type_t v79 = sub_141160();
    os_log_type_t v80 = sub_141480();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "No USO task found on input. Deferring to later checks for parse validity.", v81, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    return 1;
  }
}

uint64_t sub_6739C(uint64_t a1)
{
  uint64_t v2 = sub_140900();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2);
  uint64_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v103);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F460();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F410();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_140920();
  uint64_t v98 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F3C0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_13F3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_140280();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_140D00();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
LABEL_5:
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
    v24(v5, v22, v19);
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v25 = (char)v105;
    sub_30364((uint64_t)v5);
    char v26 = byte_1437D2[v25];
    goto LABEL_8;
  }
  if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v23 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v18, v101);
    uint64_t v39 = sub_13F3A0();
    uint64_t v41 = v40;
    uint64_t v42 = v98;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v10);
    uint64_t v43 = sub_140910();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      char v26 = 10;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_8:
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17EB30);
      id v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v105 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v104 = v102;
        sub_5830(&qword_17CDA0);
        uint64_t v31 = sub_141260();
        uint64_t v104 = sub_58C0(v31, v32, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v104) = v26;
        uint64_t v33 = sub_141260();
        uint64_t v104 = sub_58C0(v33, v34, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (0x6100u >> v26) & 1;
    }
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
    uint64_t v54 = sub_13F3B0();
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v57 = v90;
      uint64_t v56 = v91;
      os_log_type_t v58 = v89;
      (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v91);
      uint64_t v59 = sub_1408F0();
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      if (*(void *)(v55 + 16) && (unint64_t v62 = sub_16F44(v59, v61), (v63 & 1) != 0))
      {
        sub_5B50(*(void *)(v55 + 56) + 32 * v62, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v106 + 1))
      {
        if (swift_dynamicCast())
        {
          char v26 = sub_CC640();
          if (v26 != 19) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_904C((uint64_t)&v105, &qword_17B9B0);
      }
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_141170();
    sub_33D8(v84, (uint64_t)qword_17EB30);
    uint64_t v85 = sub_141160();
    os_log_type_t v86 = sub_141480();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    return 0;
  }
  if (v23 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v46 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      char v72 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_46:
        char v73 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v73 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_77:
      swift_release();
      goto LABEL_8;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_141170();
    sub_33D8(v68, (uint64_t)qword_17EB30);
    unint64_t v69 = sub_141160();
    os_log_type_t v70 = sub_141480();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_0, v69, v70, "No USO task found on input. Deferring to later checks for parse validity.", v71, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return 1;
  }
  else
  {
    if (v23 != enum case for Parse.uso(_:))
    {
      if (v23 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_141170();
        sub_33D8(v64, (uint64_t)qword_17EB30);
        uint64_t v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Empty parse found while testing valid input. Disallowing empty input.", v67, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_141170();
        sub_33D8(v74, (uint64_t)qword_17EB30);
        uint64_t v75 = sub_141160();
        os_log_type_t v76 = sub_141470();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl(&dword_0, v75, v76, "Unknown parse type found while testing input validity. Disallowing unknown input.", v77, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    uint64_t v50 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v18, v97);
    unint64_t v51 = v92;
    sub_13F400();
    uint64_t v52 = sub_F040();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
    if (v52)
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v53 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v82 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
          goto LABEL_77;
        }
      }
      char v83 = sub_68C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      if ((v83 & 1) == 0) {
        goto LABEL_8;
      }
      return 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_141170();
    sub_33D8(v78, (uint64_t)qword_17EB30);
    os_log_type_t v79 = sub_141160();
    os_log_type_t v80 = sub_141480();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "No USO task found on input. Deferring to later checks for parse validity.", v81, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    return 1;
  }
}

uint64_t sub_6831C(uint64_t a1)
{
  uint64_t v2 = sub_140900();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2);
  uint64_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v103);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F460();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F410();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_140920();
  uint64_t v98 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F3C0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_13F3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_140280();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_140C40();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
LABEL_5:
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
    v24(v5, v22, v19);
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v25 = (char)v105;
    sub_30364((uint64_t)v5);
    char v26 = byte_1437D2[v25];
    goto LABEL_8;
  }
  if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v23 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v18, v101);
    uint64_t v39 = sub_13F3A0();
    uint64_t v41 = v40;
    uint64_t v42 = v98;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v10);
    uint64_t v43 = sub_140910();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      char v26 = 10;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_8:
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17EB30);
      id v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v105 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v104 = v102;
        sub_5830(&qword_17CD98);
        uint64_t v31 = sub_141260();
        uint64_t v104 = sub_58C0(v31, v32, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v104) = v26;
        uint64_t v33 = sub_141260();
        uint64_t v104 = sub_58C0(v33, v34, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (0x66080u >> v26) & 1;
    }
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
    uint64_t v54 = sub_13F3B0();
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v57 = v90;
      uint64_t v56 = v91;
      os_log_type_t v58 = v89;
      (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v91);
      uint64_t v59 = sub_1408F0();
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      if (*(void *)(v55 + 16) && (unint64_t v62 = sub_16F44(v59, v61), (v63 & 1) != 0))
      {
        sub_5B50(*(void *)(v55 + 56) + 32 * v62, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v106 + 1))
      {
        if (swift_dynamicCast())
        {
          char v26 = sub_CC640();
          if (v26 != 19) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_904C((uint64_t)&v105, &qword_17B9B0);
      }
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_141170();
    sub_33D8(v84, (uint64_t)qword_17EB30);
    uint64_t v85 = sub_141160();
    os_log_type_t v86 = sub_141480();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    return 0;
  }
  if (v23 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v46 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      char v72 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_46:
        char v73 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v73 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_77:
      swift_release();
      goto LABEL_8;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_141170();
    sub_33D8(v68, (uint64_t)qword_17EB30);
    unint64_t v69 = sub_141160();
    os_log_type_t v70 = sub_141480();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_0, v69, v70, "No USO task found on input. Deferring to later checks for parse validity.", v71, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return 1;
  }
  else
  {
    if (v23 != enum case for Parse.uso(_:))
    {
      if (v23 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_141170();
        sub_33D8(v64, (uint64_t)qword_17EB30);
        uint64_t v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Empty parse found while testing valid input. Disallowing empty input.", v67, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_141170();
        sub_33D8(v74, (uint64_t)qword_17EB30);
        uint64_t v75 = sub_141160();
        os_log_type_t v76 = sub_141470();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl(&dword_0, v75, v76, "Unknown parse type found while testing input validity. Disallowing unknown input.", v77, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    uint64_t v50 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v18, v97);
    unint64_t v51 = v92;
    sub_13F400();
    uint64_t v52 = sub_F040();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
    if (v52)
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v53 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v82 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
          goto LABEL_77;
        }
      }
      char v83 = sub_68C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      if ((v83 & 1) == 0) {
        goto LABEL_8;
      }
      return 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_141170();
    sub_33D8(v78, (uint64_t)qword_17EB30);
    os_log_type_t v79 = sub_141160();
    os_log_type_t v80 = sub_141480();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "No USO task found on input. Deferring to later checks for parse validity.", v81, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    return 1;
  }
}

uint64_t sub_692A0(uint64_t a1)
{
  uint64_t v2 = sub_140900();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2);
  uint64_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v103);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F460();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F410();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_140920();
  uint64_t v98 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F3C0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_13F3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_140280();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_140D80();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
LABEL_5:
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
    v24(v5, v22, v19);
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v25 = (char)v105;
    sub_30364((uint64_t)v5);
    char v26 = byte_1437D2[v25];
    goto LABEL_8;
  }
  if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v23 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v18, v101);
    uint64_t v39 = sub_13F3A0();
    uint64_t v41 = v40;
    uint64_t v42 = v98;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v10);
    uint64_t v43 = sub_140910();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      char v26 = 10;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_8:
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17EB30);
      id v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v105 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v104 = v102;
        sub_5830(&qword_17CD80);
        uint64_t v31 = sub_141260();
        uint64_t v104 = sub_58C0(v31, v32, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v104) = v26;
        uint64_t v33 = sub_141260();
        uint64_t v104 = sub_58C0(v33, v34, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (0x6400u >> v26) & 1;
    }
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
    uint64_t v54 = sub_13F3B0();
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v57 = v90;
      uint64_t v56 = v91;
      os_log_type_t v58 = v89;
      (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v91);
      uint64_t v59 = sub_1408F0();
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      if (*(void *)(v55 + 16) && (unint64_t v62 = sub_16F44(v59, v61), (v63 & 1) != 0))
      {
        sub_5B50(*(void *)(v55 + 56) + 32 * v62, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v106 + 1))
      {
        if (swift_dynamicCast())
        {
          char v26 = sub_CC640();
          if (v26 != 19) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_904C((uint64_t)&v105, &qword_17B9B0);
      }
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_141170();
    sub_33D8(v84, (uint64_t)qword_17EB30);
    uint64_t v85 = sub_141160();
    os_log_type_t v86 = sub_141480();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    return 0;
  }
  if (v23 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v46 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      char v72 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_46:
        char v73 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v73 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_77:
      swift_release();
      goto LABEL_8;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_141170();
    sub_33D8(v68, (uint64_t)qword_17EB30);
    unint64_t v69 = sub_141160();
    os_log_type_t v70 = sub_141480();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_0, v69, v70, "No USO task found on input. Deferring to later checks for parse validity.", v71, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return 1;
  }
  else
  {
    if (v23 != enum case for Parse.uso(_:))
    {
      if (v23 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_141170();
        sub_33D8(v64, (uint64_t)qword_17EB30);
        uint64_t v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Empty parse found while testing valid input. Disallowing empty input.", v67, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_141170();
        sub_33D8(v74, (uint64_t)qword_17EB30);
        uint64_t v75 = sub_141160();
        os_log_type_t v76 = sub_141470();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl(&dword_0, v75, v76, "Unknown parse type found while testing input validity. Disallowing unknown input.", v77, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    uint64_t v50 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v18, v97);
    unint64_t v51 = v92;
    sub_13F400();
    uint64_t v52 = sub_F040();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
    if (v52)
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v53 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v82 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
          goto LABEL_77;
        }
      }
      char v83 = sub_68C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      if ((v83 & 1) == 0) {
        goto LABEL_8;
      }
      return 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_141170();
    sub_33D8(v78, (uint64_t)qword_17EB30);
    os_log_type_t v79 = sub_141160();
    os_log_type_t v80 = sub_141480();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "No USO task found on input. Deferring to later checks for parse validity.", v81, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    return 1;
  }
}

uint64_t sub_6A220(uint64_t a1)
{
  uint64_t v2 = sub_140900();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2);
  uint64_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v103);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F460();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F410();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_140920();
  uint64_t v98 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F3C0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_13F3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_140280();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_140BC0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
LABEL_5:
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
    v24(v5, v22, v19);
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v25 = (char)v105;
    sub_30364((uint64_t)v5);
    char v26 = byte_1437D2[v25];
    goto LABEL_8;
  }
  if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v23 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v18, v101);
    uint64_t v39 = sub_13F3A0();
    uint64_t v41 = v40;
    uint64_t v42 = v98;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v10);
    uint64_t v43 = sub_140910();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      char v26 = 10;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_8:
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17EB30);
      id v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v105 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v104 = v102;
        sub_5830(&qword_17CD90);
        uint64_t v31 = sub_141260();
        uint64_t v104 = sub_58C0(v31, v32, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v104) = v26;
        uint64_t v33 = sub_141260();
        uint64_t v104 = sub_58C0(v33, v34, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (0x7000u >> v26) & 1;
    }
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
    uint64_t v54 = sub_13F3B0();
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v57 = v90;
      uint64_t v56 = v91;
      os_log_type_t v58 = v89;
      (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v91);
      uint64_t v59 = sub_1408F0();
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      if (*(void *)(v55 + 16) && (unint64_t v62 = sub_16F44(v59, v61), (v63 & 1) != 0))
      {
        sub_5B50(*(void *)(v55 + 56) + 32 * v62, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v106 + 1))
      {
        if (swift_dynamicCast())
        {
          char v26 = sub_CC640();
          if (v26 != 19) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_904C((uint64_t)&v105, &qword_17B9B0);
      }
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_141170();
    sub_33D8(v84, (uint64_t)qword_17EB30);
    uint64_t v85 = sub_141160();
    os_log_type_t v86 = sub_141480();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    return 0;
  }
  if (v23 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v46 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      char v72 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_46:
        char v73 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v73 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_77:
      swift_release();
      goto LABEL_8;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_141170();
    sub_33D8(v68, (uint64_t)qword_17EB30);
    unint64_t v69 = sub_141160();
    os_log_type_t v70 = sub_141480();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_0, v69, v70, "No USO task found on input. Deferring to later checks for parse validity.", v71, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return 1;
  }
  else
  {
    if (v23 != enum case for Parse.uso(_:))
    {
      if (v23 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_141170();
        sub_33D8(v64, (uint64_t)qword_17EB30);
        uint64_t v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Empty parse found while testing valid input. Disallowing empty input.", v67, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_141170();
        sub_33D8(v74, (uint64_t)qword_17EB30);
        uint64_t v75 = sub_141160();
        os_log_type_t v76 = sub_141470();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl(&dword_0, v75, v76, "Unknown parse type found while testing input validity. Disallowing unknown input.", v77, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    uint64_t v50 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v18, v97);
    unint64_t v51 = v92;
    sub_13F400();
    uint64_t v52 = sub_F040();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
    if (v52)
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v53 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v82 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
          goto LABEL_77;
        }
      }
      char v83 = sub_68C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      if ((v83 & 1) == 0) {
        goto LABEL_8;
      }
      return 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_141170();
    sub_33D8(v78, (uint64_t)qword_17EB30);
    os_log_type_t v79 = sub_141160();
    os_log_type_t v80 = sub_141480();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "No USO task found on input. Deferring to later checks for parse validity.", v81, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    return 1;
  }
}

uint64_t sub_6B1A0(uint64_t a1)
{
  uint64_t v2 = sub_140900();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2);
  uint64_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v103);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F460();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F410();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v95 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_140920();
  uint64_t v98 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F3C0();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_13F3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_140280();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_140C10();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v23 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
LABEL_5:
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v22, v18, v19);
    v24(v5, v22, v19);
    if (qword_17B2F8 != -1) {
      swift_once();
    }
    sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    uint64_t v25 = (char)v105;
    sub_30364((uint64_t)v5);
    char v26 = byte_1437D2[v25];
    goto LABEL_8;
  }
  if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_5;
  }
  if (v23 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v18, v101);
    uint64_t v39 = sub_13F3A0();
    uint64_t v41 = v40;
    uint64_t v42 = v98;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v12, enum case for DirectInvocationUtils.Timer.URI.stopTimer(_:), v10);
    uint64_t v43 = sub_140910();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      char v26 = 10;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
LABEL_8:
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_141170();
      sub_33D8(v27, (uint64_t)qword_17EB30);
      id v28 = sub_141160();
      os_log_type_t v29 = sub_141480();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v105 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v104 = v102;
        sub_5830(&qword_17CDA8);
        uint64_t v31 = sub_141260();
        uint64_t v104 = sub_58C0(v31, v32, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v104) = v26;
        uint64_t v33 = sub_141260();
        uint64_t v104 = sub_58C0(v33, v34, (uint64_t *)&v105);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v28, v29, "Testing currentIntentType \"%s\" against input verb \"%s\"", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (0x6020u >> v26) & 1;
    }
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
    uint64_t v54 = sub_13F3B0();
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v57 = v90;
      uint64_t v56 = v91;
      os_log_type_t v58 = v89;
      (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v91);
      uint64_t v59 = sub_1408F0();
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      if (*(void *)(v55 + 16) && (unint64_t v62 = sub_16F44(v59, v61), (v63 & 1) != 0))
      {
        sub_5B50(*(void *)(v55 + 56) + 32 * v62, (uint64_t)&v105);
      }
      else
      {
        long long v105 = 0u;
        long long v106 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v106 + 1))
      {
        if (swift_dynamicCast())
        {
          char v26 = sub_CC640();
          if (v26 != 19) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_904C((uint64_t)&v105, &qword_17B9B0);
      }
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_141170();
    sub_33D8(v84, (uint64_t)qword_17EB30);
    uint64_t v85 = sub_141160();
    os_log_type_t v86 = sub_141480();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "Unknown direct invocation payload (missing/unknown timer verb). Disallowing input.", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    return 0;
  }
  if (v23 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v46 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      char v72 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_46:
        char v73 = sub_68C8();
        swift_unknownObjectRelease();
        swift_release();
        if ((v73 & 1) == 0) {
          goto LABEL_8;
        }
        return 1;
      }
      swift_unknownObjectRelease();
LABEL_77:
      swift_release();
      goto LABEL_8;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_141170();
    sub_33D8(v68, (uint64_t)qword_17EB30);
    unint64_t v69 = sub_141160();
    os_log_type_t v70 = sub_141480();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_0, v69, v70, "No USO task found on input. Deferring to later checks for parse validity.", v71, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return 1;
  }
  else
  {
    if (v23 != enum case for Parse.uso(_:))
    {
      if (v23 == enum case for Parse.empty(_:))
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_141170();
        sub_33D8(v64, (uint64_t)qword_17EB30);
        uint64_t v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Empty parse found while testing valid input. Disallowing empty input.", v67, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_141170();
        sub_33D8(v74, (uint64_t)qword_17EB30);
        uint64_t v75 = sub_141160();
        os_log_type_t v76 = sub_141470();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl(&dword_0, v75, v76, "Unknown parse type found while testing input validity. Disallowing unknown input.", v77, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v49 = v95;
    uint64_t v48 = v96;
    uint64_t v50 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v18, v97);
    unint64_t v51 = v92;
    sub_13F400();
    uint64_t v52 = sub_F040();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
    if (v52)
    {
      char v26 = sub_5BFC();
      if (sub_642C(v26) == 1886352499 && v53 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v82 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
          goto LABEL_77;
        }
      }
      char v83 = sub_68C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      if ((v83 & 1) == 0) {
        goto LABEL_8;
      }
      return 1;
    }
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_141170();
    sub_33D8(v78, (uint64_t)qword_17EB30);
    os_log_type_t v79 = sub_141160();
    os_log_type_t v80 = sub_141480();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "No USO task found on input. Deferring to later checks for parse validity.", v81, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    return 1;
  }
}

id sub_6C120()
{
  uint64_t v0 = sub_5830(&qword_17CD10);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_5830(&qword_17CD18);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B320 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_6C534((unint64_t *)&qword_17CD20, 255, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  uint64_t v6 = sub_13F7E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v2, 1, v6) == 1)
  {
    uint64_t v8 = &qword_17CD10;
    uint64_t v9 = (uint64_t)v2;
LABEL_7:
    sub_904C(v9, v8);
LABEL_8:
    [self defaultDuration];
    goto LABEL_9;
  }
  sub_13F7C0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v2, v6);
  uint64_t v10 = sub_13F860();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    uint64_t v8 = &qword_17CD18;
    uint64_t v9 = (uint64_t)v5;
    goto LABEL_7;
  }
  sub_13F850();
  char v19 = v18;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
  if (v19) {
    goto LABEL_8;
  }
LABEL_9:
  if (qword_17B308 != -1) {
    swift_once();
  }
  sub_13F940();
  if (v20[1])
  {
    id v12 = objc_allocWithZone((Class)INSpeakableString);
    NSString v13 = sub_141240();
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithSpokenPhrase:v13];
  }
  else
  {
    id v14 = 0;
  }
  if (qword_17B318 != -1) {
    swift_once();
  }
  sub_13F940();
  if (LOBYTE(v20[0])) {
    uint64_t v15 = 1;
  }
  else {
    uint64_t v15 = 2;
  }
  id v16 = [objc_allocWithZone((Class)sub_140CA0()) init];
  [v16 setLabel:v14];
  sub_140C90();
  [v16 setType:v15];

  return v16;
}

uint64_t sub_6C534(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_6C57C()
{
  sub_5830(&qword_17CDE0);
  uint64_t v0 = (void *)sub_13F140();
  sub_140C50();

  uint64_t v1 = sub_140C70();
  return v1 == sub_140C70();
}

uint64_t sub_6C5D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_6C620()
{
  unint64_t result = qword_17CDD0;
  if (!qword_17CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17CDD0);
  }
  return result;
}

uint64_t sub_6C674(uint64_t a1)
{
  return sub_6C710(a1, (void (*)(void))type metadata accessor for CreateTimerCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:), &qword_180EF0);
}

uint64_t sub_6C6A8(uint64_t a1)
{
  return sub_6C710(a1, (void (*)(void))type metadata accessor for CreateTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_180EF8);
}

uint64_t sub_6C6DC(uint64_t a1)
{
  return sub_6C710(a1, (void (*)(void))type metadata accessor for CreateTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_180F00);
}

uint64_t sub_6C710(uint64_t a1, void (*a2)(void), uint64_t (*a3)(char *, void), uint64_t *a4)
{
  uint64_t v7 = sub_140590();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  sub_140580();
  uint64_t result = a3(v9, 0);
  *a4 = result;
  return result;
}

uint64_t sub_6C7B4(uint64_t a1)
{
  return sub_6C850(a1, (void (*)(void))type metadata accessor for ResetTimerCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:), &qword_180F08);
}

uint64_t sub_6C7E8(uint64_t a1)
{
  return sub_6C850(a1, (void (*)(void))type metadata accessor for ResetTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_180F10);
}

uint64_t sub_6C81C(uint64_t a1)
{
  return sub_6C850(a1, (void (*)(void))type metadata accessor for ResetTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_180F18);
}

uint64_t sub_6C850(uint64_t a1, void (*a2)(void), uint64_t (*a3)(char *, void), uint64_t *a4)
{
  uint64_t v7 = sub_140590();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  sub_140580();
  uint64_t result = a3(v9, 0);
  *a4 = result;
  return result;
}

uint64_t sub_6C8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void sub_6C8FC()
{
  sub_6D0F8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_6C994(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_140980();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_5830(&qword_17CD30);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t *sub_6CB34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_30798(a1, a2);
  uint64_t v6 = *(int *)(a3 + 36);
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140980();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17CD30);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_6CCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)(a1 + v5);
  long long v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_140980();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_5830(&qword_17CD30);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_6CDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s20HandleIntentStrategyVwxx_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_140980();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_5830(&qword_17CD30);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_6CF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6CF6C);
}

uint64_t sub_6CF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17CD30);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_6D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6D034);
}

uint64_t sub_6D034(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17CD30);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s17FlowStrategyAsyncVMa()
{
  return sub_6F024();
}

void sub_6D0F8()
{
  if (!qword_17CE80[0])
  {
    sub_140980();
    unint64_t v0 = sub_1415B0();
    if (!v1) {
      atomic_store(v0, qword_17CE80);
    }
  }
}

uint64_t sub_6D150()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17CDE8);
  sub_33D8(v0, (uint64_t)qword_17CDE8);
  return sub_140E60();
}

uint64_t sub_6D19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  uint64_t v6 = sub_13EFF0();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  uint64_t v7 = sub_13ECE0();
  v5[8] = v7;
  v5[9] = *(void *)(v7 - 8);
  v5[10] = swift_task_alloc();
  sub_140590();
  v5[11] = swift_task_alloc();
  uint64_t v8 = sub_141170();
  v5[12] = v8;
  v5[13] = *(void *)(v8 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v9 = sub_140680();
  v5[15] = v9;
  v5[16] = *(void *)(v9 - 8);
  v5[17] = swift_task_alloc();
  uint64_t v10 = sub_1406A0();
  v5[18] = v10;
  v5[19] = *(void *)(v10 - 8);
  v5[20] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v5[21] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v5[22] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v5[23] = swift_task_alloc();
  uint64_t v11 = sub_140660();
  v5[24] = v11;
  v5[25] = *(void *)(v11 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v12 = sub_13ED60();
  v5[27] = v12;
  v5[28] = *(void *)(v12 - 8);
  v5[29] = swift_task_alloc();
  return _swift_task_switch(sub_6D544, 0, 0);
}

uint64_t sub_6D544()
{
  if (qword_17B1C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(*(void *)(v0 + 96), (uint64_t)qword_17CDE8);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "TimerIntents.FlowStrategy.makeFailureConfirmingIntentResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_140C60();
  if (swift_dynamicCastClass())
  {
    id v5 = *(id *)(v0 + 24);
    if (sub_140C50() == 101)
    {
      uint64_t v6 = *(void *)(v0 + 224);
      uint64_t v7 = *(void *)(v0 + 208);
      uint64_t v29 = v7;
      uint64_t v30 = *(void *)(v0 + 232);
      uint64_t v9 = *(void *)(v0 + 192);
      uint64_t v8 = *(void *)(v0 + 200);
      uint64_t v31 = v9;
      uint64_t v32 = *(void *)(v0 + 216);
      uint64_t v11 = *(void *)(v0 + 176);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v12 = *(void *)(v0 + 168);
      (*(void (**)(void))(v6 + 104))();
      (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, enum case for SiriTimeEventSender.TaskType.createTimerIntent(_:), v9);
      uint64_t v13 = enum case for SiriKitReliabilityCodes.unsupportedParameter(_:);
      uint64_t v14 = sub_13EB70();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(v10, v13, v14);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
      uint64_t v16 = sub_140670();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
      uint64_t v17 = enum case for SiriTimeEventSender.ReasonDescription.sleepUnavailable(_:);
      uint64_t v18 = sub_140650();
      uint64_t v19 = *(void *)(v18 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(v12, v17, v18);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
      sub_140640();
      sub_904C(v12, &qword_17C068);
      sub_904C(v11, &qword_17C070);
      sub_904C(v10, &qword_17C078);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v29, v31);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v30, v32);
    }
    uint64_t v20 = *(void *)(v0 + 112);
    uint64_t v21 = *(void *)(v0 + 96);
    uint64_t v22 = *(void *)(v0 + 104);
    (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 104))(*(void *)(v0 + 136), enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), *(void *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v1, v21);
    mach_absolute_time();
    sub_1406B0();
    type metadata accessor for CreateTimerCATPatternsExecutor(0);
    sub_140580();
    *(void *)(v0 + 240) = sub_140470();
    uint64_t v33 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    int v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v23;
    *int v23 = v0;
    v23[1] = sub_6DB88;
    return ((uint64_t (*)(unint64_t, unint64_t, void *))v33)(0xD00000000000001CLL, 0x8000000000148580, _swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v25 = sub_141160();
    os_log_type_t v26 = sub_141470();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "TimerIntents.FlowStrategy.makeFailureConfirmingIntentResponse was called with an unexpected response type", v27, 2u);
      swift_slowDealloc();
    }

    *(unsigned char *)(v0 + 288) = 4;
    type metadata accessor for TimerIntents.FlowError();
    swift_getWitnessTable();
    swift_allocError();
    sub_140830();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_6DB88(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = sub_6DF50;
  }
  else
  {
    swift_release();
    unint64_t v4 = sub_6DCA4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_6DCA4()
{
  sub_13EC50();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[34] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_6DD64;
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[2];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_6DD64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = *(void *)(v2 + 40);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v9 = sub_6E19C;
  }
  else {
    uint64_t v9 = sub_6E078;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_6DF50()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = (void *)v0[3];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_6E078()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_6E19C()
{
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_6E2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t sub_6E380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D95C;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_6E44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D95C;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_6E518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D95C;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_6E5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_159A4;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_6E6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D95C;
  return sub_6D19C(a1, v9, v10, a4, a5);
}

uint64_t sub_6E770()
{
  return swift_getWitnessTable();
}

uint64_t sub_6E78C()
{
  return swift_getWitnessTable();
}

uint64_t sub_6E7A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_6E7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  sub_5830(&qword_17CD30);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_6E85C, 0, 0);
}

uint64_t sub_6E85C()
{
  uint64_t v19 = v0;
  if (qword_17B1C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_141170();
  sub_33D8(v2, (uint64_t)qword_17CDE8);
  id v3 = v1;
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141480();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[5];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[2] = v6;
    swift_getWitnessTable();
    uint64_t v8 = sub_1527C();
    v0[3] = sub_58C0(v8, v9, &v18);
    sub_1415C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v4, v5, "TimerIntents.FlowStrategy.makeIntentExecutionBehavior(app:intent:) called with intent %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = (void *)v0[5];
  }
  uint64_t v11 = v0[7];
  uint64_t v13 = v0[4];
  uint64_t v12 = (void *)v0[5];
  uint64_t v14 = sub_140980();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  uint64_t v15 = sub_152A8(v13, v12, v11);
  sub_904C(v11, &qword_17CD30);
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
  return v16(v15);
}

uint64_t sub_6EAE0(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_140630();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_6EBA4, 0, 0);
}

uint64_t sub_6EBA4()
{
  uint64_t v34 = v0;
  if (qword_17B1C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17CDE8);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "TimerIntents.FlowStrategy.makeIntentFromParse() called.", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);

  id v8 = sub_F698(v5, v6 + *(int *)(v7 + 36));
  if (v8)
  {
    unint64_t v9 = v8;
    uint64_t v10 = swift_dynamicCastUnknownClass();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      id v12 = objc_allocWithZone((Class)_INPBIntentMetadata);
      id v13 = v9;
      id v14 = [v12 init];
      [v11 _setMetadata:v14];

      id v15 = [v11 _metadata];
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v18 = *(void *)(v0 + 56);
        uint64_t v17 = *(void *)(v0 + 64);
        uint64_t v19 = *(void *)(v0 + 48);
        (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, enum case for SiriTimeAppBundleId.timerExtension(_:), v19);
        sub_140620();
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
        NSString v20 = sub_141240();
        swift_bridgeObjectRelease();
        [v16 setSystemExtensionBundleId:v20];
      }
      id v21 = v13;
      uint64_t v22 = (void *)sub_141560();

      uint64_t v23 = sub_141550();
      swift_task_dealloc();
      uint64_t v24 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v24(v23);
    }
  }
  os_log_type_t v26 = sub_141160();
  os_log_type_t v27 = sub_141470();
  if (os_log_type_enabled(v26, v27))
  {
    id v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)id v28 = 136315138;
    uint64_t v33 = v29;
    uint64_t v30 = sub_141C00();
    *(void *)(v0 + 16) = sub_58C0(v30, v31, &v33);
    sub_1415C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v26, v27, "Intent is nil or cannot cast converted intent to IntentType %s", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  *(unsigned char *)(v0 + 72) = 0;
  type metadata accessor for TimerIntents.FlowError();
  swift_getWitnessTable();
  swift_allocError();
  sub_140830();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_6F024()
{
  return swift_getGenericMetadata();
}

uint64_t sub_6F054()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17CEE0);
  sub_33D8(v0, (uint64_t)qword_17CEE0);
  return sub_140E60();
}

uint64_t sub_6F0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v44 = a4;
  uint64_t v5 = sub_5830(&qword_17CF08);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CF10);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v40 = (uint64_t)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = sub_5830(&qword_17CF00);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v33 - v17;
  if (qword_17B1C8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_17CEE0);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v45(v18, a1, v12);
  NSString v20 = sub_141160();
  os_log_type_t v21 = sub_141450();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v36 = v7;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = v11;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v47 = v34;
    uint64_t v35 = a1;
    *(_DWORD *)uint64_t v23 = 136315138;
    v33[1] = v23 + 4;
    v45(v16, (uint64_t)v18, v12);
    uint64_t v24 = sub_141260();
    uint64_t v46 = sub_58C0(v24, v25, &v47);
    a1 = v35;
    sub_1415C0();
    uint64_t v7 = v36;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    _os_log_impl(&dword_0, v20, v21, "Initializing next flow: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v37;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }

  sub_3410(v38, (uint64_t)v11);
  sub_8FE8(v39, (uint64_t)&v11[*(int *)(v7 + 36)], &qword_17CD30);
  v45(v16, a1, v12);
  sub_5830(&qword_17CF18);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v11, v40, &qword_17CF10);
  sub_B978(&qword_17CF20, &qword_17CF10);
  swift_retain();
  os_log_type_t v26 = v41;
  sub_13EE20();
  uint64_t v27 = v43;
  uint64_t v28 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
  uint64_t v47 = v28;
  sub_5830(&qword_17CF28);
  sub_B978(&qword_17CF30, &qword_17CF28);
  uint64_t v29 = sub_13EA60();
  swift_release();
  uint64_t v30 = sub_13E8E0();
  unint64_t v31 = v44;
  v44[3] = v30;
  uint64_t v31[4] = (uint64_t)&protocol witness table for AnyFlow;
  swift_release();
  *unint64_t v31 = v29;
  return sub_904C((uint64_t)v11, &qword_17CF10);
}

uint64_t sub_6F5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v44 = a4;
  uint64_t v5 = sub_5830(&qword_17CF38);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830((uint64_t *)&unk_17D670);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v40 = (uint64_t)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = sub_5830((uint64_t *)&unk_17D660);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v33 - v17;
  if (qword_17B1C8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_17CEE0);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v45(v18, a1, v12);
  NSString v20 = sub_141160();
  os_log_type_t v21 = sub_141450();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v36 = v7;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = v11;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v47 = v34;
    uint64_t v35 = a1;
    *(_DWORD *)uint64_t v23 = 136315138;
    v33[1] = v23 + 4;
    v45(v16, (uint64_t)v18, v12);
    uint64_t v24 = sub_141260();
    uint64_t v46 = sub_58C0(v24, v25, &v47);
    a1 = v35;
    sub_1415C0();
    uint64_t v7 = v36;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    _os_log_impl(&dword_0, v20, v21, "Initializing next flow: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v37;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }

  sub_3410(v38, (uint64_t)v11);
  sub_8FE8(v39, (uint64_t)&v11[*(int *)(v7 + 36)], &qword_17CD30);
  v45(v16, a1, v12);
  sub_5830(&qword_17CF40);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v11, v40, (uint64_t *)&unk_17D670);
  sub_B978((unint64_t *)&unk_17D680, (uint64_t *)&unk_17D670);
  swift_retain();
  os_log_type_t v26 = v41;
  sub_13EE20();
  uint64_t v27 = v43;
  uint64_t v28 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
  uint64_t v47 = v28;
  sub_5830(&qword_17CF48);
  sub_B978(&qword_17D690, &qword_17CF48);
  uint64_t v29 = sub_13EA60();
  swift_release();
  uint64_t v30 = sub_13E8E0();
  unint64_t v31 = v44;
  v44[3] = v30;
  uint64_t v31[4] = (uint64_t)&protocol witness table for AnyFlow;
  swift_release();
  *unint64_t v31 = v29;
  return sub_904C((uint64_t)v11, (uint64_t *)&unk_17D670);
}

uint64_t sub_6FB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v44 = a4;
  uint64_t v5 = sub_5830((uint64_t *)&unk_17D6B0);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CF60);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v40 = (uint64_t)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = sub_5830(&qword_17CDB0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v33 - v17;
  if (qword_17B1C8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_17CEE0);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v45(v18, a1, v12);
  NSString v20 = sub_141160();
  os_log_type_t v21 = sub_141450();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v36 = v7;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = v11;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v47 = v34;
    uint64_t v35 = a1;
    *(_DWORD *)uint64_t v23 = 136315138;
    v33[1] = v23 + 4;
    v45(v16, (uint64_t)v18, v12);
    uint64_t v24 = sub_141260();
    uint64_t v46 = sub_58C0(v24, v25, &v47);
    a1 = v35;
    sub_1415C0();
    uint64_t v7 = v36;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    _os_log_impl(&dword_0, v20, v21, "Initializing next flow: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v37;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }

  sub_3410(v38, (uint64_t)v11);
  sub_8FE8(v39, (uint64_t)&v11[*(int *)(v7 + 36)], &qword_17CD30);
  v45(v16, a1, v12);
  sub_5830((uint64_t *)&unk_17D6C0);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v11, v40, &qword_17CF60);
  sub_B978(&qword_17CF68, &qword_17CF60);
  swift_retain();
  os_log_type_t v26 = v41;
  sub_13EE20();
  uint64_t v27 = v43;
  uint64_t v28 = sub_13EE00();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
  uint64_t v47 = v28;
  sub_5830((uint64_t *)&unk_17D6D0);
  sub_B978(&qword_17CF70, (uint64_t *)&unk_17D6D0);
  uint64_t v29 = sub_13EA60();
  swift_release();
  uint64_t v30 = sub_13E8E0();
  unint64_t v31 = v44;
  v44[3] = v30;
  uint64_t v31[4] = (uint64_t)&protocol witness table for AnyFlow;
  swift_release();
  *unint64_t v31 = v29;
  return sub_904C((uint64_t)v11, &qword_17CF60);
}

uint64_t sub_70054(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  sub_5830(&qword_17CD30);
  v2[11] = swift_task_alloc();
  uint64_t v3 = sub_5830(&qword_17CDB0);
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  sub_140590();
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_140770();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  return _swift_task_switch(sub_701D0, 0, 0);
}

uint64_t sub_701D0()
{
  sub_90A8(*(void **)(v0 + 80), *(void *)(*(void *)(v0 + 80) + 24));
  if (sub_13EC30())
  {
    if (qword_17B1C8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_141170();
    *(void *)(v0 + 152) = sub_33D8(v1, (uint64_t)qword_17CEE0);
    uint64_t v2 = sub_141160();
    os_log_type_t v3 = sub_141480();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_0, v2, v3, "decideCreateSleepTimerFlow.execute()", v4, 2u);
      swift_slowDealloc();
    }

    sub_140BA0();
    sub_140740();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v5;
    void *v5 = v0;
    v5[1] = sub_70478;
    return SiriTimeDeviceContextProvider.isNothingPlaying.getter();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v11 = *(uint64_t **)(v0 + 72);
    uint64_t v10 = *(void *)(v0 + 80);
    sub_3410(v10, v0 + 16);
    sub_93C0(v0 + 16);
    uint64_t v12 = sub_140980();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    sub_6FB18(v6, v9, v10, v11);
    sub_904C(v9, &qword_17CD30);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_70478(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  uint64_t v3 = *(void *)(*(void *)v1 + 136);
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  *(unsigned char *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_705D8, 0, 0);
}

uint64_t sub_705D8()
{
  if (*(unsigned char *)(v0 + 168) == 1)
  {
    uint64_t v1 = *(uint64_t **)(v0 + 72);
    type metadata accessor for CreateTimerCATs_Async();
    sub_140580();
    uint64_t v2 = sub_140470();
    type metadata accessor for CreateTimerCATPatternsExecutor(0);
    sub_140580();
    uint64_t v3 = sub_140470();
    *(void *)(v0 + 56) = v2;
    *(void *)(v0 + 64) = v3;
    sub_7082C();
    uint64_t v4 = sub_13EA60();
    swift_release();
    swift_release();
    v1[3] = sub_13E8E0();
    v1[4] = (uint64_t)&protocol witness table for AnyFlow;
    *uint64_t v1 = v4;
  }
  else
  {
    uint64_t v5 = sub_141160();
    os_log_type_t v6 = sub_141480();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_0, v5, v6, "Device has media playing; allowing sleep timer creation", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v13 = *(uint64_t **)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 80);
    sub_3410(v12, v0 + 16);
    sub_93C0(v0 + 16);
    uint64_t v14 = sub_140980();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    sub_6FB18(v8, v11, v12, v13);
    sub_904C(v11, &qword_17CD30);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

unint64_t sub_7082C()
{
  unint64_t result = qword_17CF58;
  if (!qword_17CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17CF58);
  }
  return result;
}

uint64_t type metadata accessor for CreateTimerCATs_Async()
{
  uint64_t result = qword_17CF78;
  if (!qword_17CF78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_708CC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_7090C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_5830(&qword_17BE78);
  v3[5] = swift_task_alloc();
  return _swift_task_switch(sub_709A4, 0, 0);
}

uint64_t sub_709A4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  sub_5830(&qword_17F3D0);
  uint64_t v3 = swift_allocObject();
  v0[6] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_142D50;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  *(void *)(v3 + 32) = 0x62614C72656D6974;
  *(void *)(v3 + 40) = 0xEA00000000006C65;
  sub_8FE8(v2, v1, &qword_17BE78);
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  uint64_t v8 = v0[5];
  if (v7 == 1)
  {
    sub_904C(v0[5], &qword_17BE78);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v5;
    uint64_t v9 = sub_187EC(v4);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v9, v8, v5);
  }
  uint64_t v13 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[7] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_70B88;
  uint64_t v11 = v0[2];
  return v13(v11, 0xD000000000000018, 0x8000000000148970, v3);
}

uint64_t sub_70B88()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_710EC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_70CD0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_5830(&qword_17BE78);
  v3[5] = swift_task_alloc();
  return _swift_task_switch(sub_70D68, 0, 0);
}

uint64_t sub_70D68()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  sub_5830(&qword_17F3D0);
  uint64_t v3 = swift_allocObject();
  v0[6] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_142D50;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  *(void *)(v3 + 32) = 0x70795472656D6974;
  *(void *)(v3 + 40) = 0xE900000000000065;
  sub_8FE8(v2, v1, &qword_17BE78);
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  uint64_t v8 = v0[5];
  if (v7 == 1)
  {
    sub_904C(v0[5], &qword_17BE78);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v5;
    uint64_t v9 = sub_187EC(v4);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 32))(v9, v8, v5);
  }
  uint64_t v13 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[7] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_4F990;
  uint64_t v11 = v0[2];
  return v13(v11, 0xD000000000000017, 0x8000000000148950, v3);
}

uint64_t sub_70F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_710E4()
{
  return type metadata accessor for CreateTimerCATs_Async();
}

uint64_t sub_710F0(void *a1, uint64_t a2)
{
  *a1 = sub_F32D4(a2);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_71374(v3);
}

unint64_t sub_711C4()
{
  unint64_t result = qword_17CFF8;
  if (!qword_17CFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17CFF8);
  }
  return result;
}

unint64_t sub_71218()
{
  unint64_t result = qword_17D000;
  if (!qword_17D000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17D000);
  }
  return result;
}

uint64_t sub_7126C(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17D008);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_712CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_71320(uint64_t a1)
{
  return a1;
}

uint64_t sub_71374(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t type metadata accessor for ResetTimerCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17D018);
}

uint64_t sub_713A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_713E0()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_142FB0;
  *(void *)(v4 + 32) = 7368801;
  *(void *)(v4 + 40) = 0xE300000000000000;
  uint64_t v5 = *v0;
  if (*v0)
  {
    uint64_t v6 = sub_1404A0();
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    *(void *)(v4 + 56) = 0;
    *(void *)(v4 + 64) = 0;
  }
  *(void *)(v4 + 48) = v7;
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = 0x6D69547465736572;
  *(void *)(v4 + 88) = 0xEB00000000737265;
  uint64_t v8 = v0[1];
  uint64_t v9 = sub_5830(&qword_17C508);
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 120) = v9;
  *(void *)(v4 + 128) = 0x6174614477656976;
  *(void *)(v4 + 136) = 0xE800000000000000;
  uint64_t v10 = type metadata accessor for ResetTimerHandledOnWatchParameters(0);
  sub_8FE8((uint64_t)v0 + *(int *)(v10 + 24), (uint64_t)v3, &qword_17BE78);
  uint64_t v11 = sub_140500();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_904C((uint64_t)v3, &qword_17BE78);
    *(_OWORD *)(v4 + 144) = 0u;
    *(_OWORD *)(v4 + 160) = 0u;
  }
  else
  {
    *(void *)(v4 + 168) = v11;
    uint64_t v13 = sub_187EC((uint64_t *)(v4 + 144));
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v13, v3, v11);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_715FC()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_142FB0;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  strcpy((char *)(v7 + 32), "cancelAction");
  *(unsigned char *)(v7 + 45) = 0;
  *(_WORD *)(v7 + 46) = -5120;
  sub_8FE8(v0, (uint64_t)v6, &qword_17BE78);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v6, 1, v9) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    uint64_t v12 = sub_187EC(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v12, v6, v9);
  }
  strcpy((char *)(v7 + 80), "confirmAction");
  *(_WORD *)(v7 + 94) = -4864;
  uint64_t v13 = type metadata accessor for ResetTimerPromptExistingTimerParameters(0);
  sub_8FE8(v0 + *(int *)(v13 + 20), (uint64_t)v4, &qword_17BE78);
  if (v11(v4, 1, v9) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17BE78);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v9;
    uint64_t v14 = sub_187EC((uint64_t *)(v7 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v14, v4, v9);
  }
  strcpy((char *)(v7 + 128), "speakableTimer");
  *(unsigned char *)(v7 + 143) = -18;
  uint64_t v15 = *(void *)(v0 + *(int *)(v13 + 24));
  if (v15)
  {
    uint64_t v16 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(v7 + 152) = 0;
    *(void *)(v7 + 160) = 0;
  }
  *(void *)(v7 + 144) = v15;
  *(void *)(v7 + 168) = v16;
  swift_retain();
  return v7;
}

uint64_t sub_718AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17BE78);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  sub_5830(&qword_17F3D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_142FC0;
  uint64_t v9 = (uint64_t *)(v8 + 48);
  strcpy((char *)(v8 + 32), "cancelAction");
  *(unsigned char *)(v8 + 45) = 0;
  *(_WORD *)(v8 + 46) = -5120;
  sub_8FE8(v1, (uint64_t)v7, &qword_17BE78);
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v7, 1, v10) == 1)
  {
    sub_904C((uint64_t)v7, &qword_17BE78);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }
  else
  {
    *(void *)(v8 + 72) = v10;
    uint64_t v13 = sub_187EC(v9);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v13, v7, v10);
  }
  strcpy((char *)(v8 + 80), "confirmAction");
  *(_WORD *)(v8 + 94) = -4864;
  uint64_t v14 = type metadata accessor for ResetTimerPromptResetAllParameters(0);
  sub_8FE8(v1 + *(int *)(v14 + 20), (uint64_t)v5, &qword_17BE78);
  if (v12(v5, 1, v10) == 1)
  {
    sub_904C((uint64_t)v5, &qword_17BE78);
    *(_OWORD *)(v8 + 96) = 0u;
    *(_OWORD *)(v8 + 112) = 0u;
  }
  else
  {
    *(void *)(v8 + 120) = v10;
    uint64_t v15 = sub_187EC((uint64_t *)(v8 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v15, v5, v10);
  }
  return v8;
}

uint64_t sub_71B08(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_71B28, 0, 0);
}

uint64_t sub_71B28()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  *(void *)(v2 + 32) = 0x6D69547465736572;
  *(void *)(v2 + 40) = 0xEB00000000737265;
  *(void *)(v2 + 72) = sub_5830(&qword_17C508);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_4F0A4;
  return v5(0xD000000000000017, 0x8000000000148A10, v2);
}

uint64_t sub_71C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for ResetTimerHandledOnWatchParameters(0);
  v4[7] = swift_task_alloc();
  return _swift_task_switch(sub_71CF8, 0, 0);
}

uint64_t sub_71CF8()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void (*)(void *))v0[3];
  uint64_t v3 = v0[2];
  uint64_t v4 = (char *)v1 + *(int *)(v0[6] + 24);
  uint64_t v5 = sub_140500();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *uint64_t v1 = 0;
  v1[1] = v3;
  swift_bridgeObjectRetain();
  v2(v1);
  uint64_t v6 = sub_713E0();
  v0[8] = v6;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  void *v7 = v0;
  v7[1] = sub_71E44;
  return v9(0xD000000000000019, 0x80000000001489F0, v6);
}

uint64_t sub_71E44(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_72018;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_71F90;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_71F90()
{
  sub_734B4(v0[7], type metadata accessor for ResetTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[11];
  return v1(v2);
}

uint64_t sub_72018()
{
  sub_734B4(*(void *)(v0 + 56), type metadata accessor for ResetTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7209C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_720BC, 0, 0);
}

uint64_t sub_720BC()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  *(void *)(v2 + 32) = 0x6D69547465736572;
  *(void *)(v2 + 40) = 0xEB00000000737265;
  *(void *)(v2 + 72) = sub_5830(&qword_17C508);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_721F4;
  return v5(0xD000000000000018, 0x80000000001489D0, v2);
}

uint64_t sub_721F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_744B0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_7234C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_724E4()
{
  return type metadata accessor for ResetTimerCATPatternsExecutor(0);
}

uint64_t type metadata accessor for ResetTimerHandledOnWatchParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17D0D8);
}

uint64_t *sub_7250C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_140500();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_5830(&qword_17BE78);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_72694(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_140500();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_7276C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_140500();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_728A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *sub_72A48(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_140500();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_5830(&qword_17BE78);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_72B5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_72CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_72D08);
}

uint64_t sub_72D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17BE78);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_72DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_72DD0);
}

uint64_t sub_72DD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_72E7C()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for ResetTimerPromptResetAllParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17D210);
}

uint64_t sub_72F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_5830(&qword_17BE78);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for ResetTimerPromptExistingTimerParameters(0);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_7300C, 0, 0);
}

uint64_t sub_7300C()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  uint64_t v6 = v1 + *(int *)(v2 + 20);
  v5(v6, 1, 1, v4);
  uint64_t v7 = *(int *)(v2 + 24);
  *(void *)(v1 + v7) = 0;
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v6);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v1);
  uint64_t v8 = sub_174C0(0, 0);
  swift_release();
  *(void *)(v1 + v7) = v8;
  uint64_t v9 = sub_715FC();
  v0[11] = v9;
  int v12 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[12] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_73224;
  return v12(0xD00000000000001ELL, 0x8000000000148A30, v9);
}

uint64_t sub_73224(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_73404;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_73370;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_73370()
{
  sub_734B4(v0[10], type metadata accessor for ResetTimerPromptExistingTimerParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[14];
  return v1(v2);
}

uint64_t sub_73404()
{
  sub_734B4(*(void *)(v0 + 80), type metadata accessor for ResetTimerPromptExistingTimerParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for ResetTimerPromptExistingTimerParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17D178);
}

uint64_t sub_734B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_73514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_73528);
}

uint64_t sub_73528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_735F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7360C);
}

uint64_t sub_7360C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_736CC()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_73764(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_140500();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_5830(&qword_17BE78);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      uint64_t v15 = sub_5830(&qword_17BE78);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_73974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v9 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

char *sub_73AA0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_73C60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *sub_73EDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_7409C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t sub_74318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7432C);
}

uint64_t sub_7432C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_7439C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_743B0);
}

uint64_t sub_743B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_74424()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_744B4()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17D248);
  sub_33D8(v0, (uint64_t)qword_17D248);
  return sub_140E40();
}

uint64_t type metadata accessor for TimerFlowDelegatePlugin()
{
  return self;
}

void sub_74524(uint64_t *a1@<X8>)
{
  type metadata accessor for TimerFlowDelegatePlugin();
  uint64_t v2 = swift_allocObject();
  sub_1404C0();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = [self bundleForClass:ObjCClassFromMetadata];
  sub_1404B0();

  *a1 = v2;
}

uint64_t sub_745E8(uint64_t a1, uint64_t a2)
{
  return sub_748D8(&qword_17D308, a2, (void (*)(uint64_t))type metadata accessor for TimerFlowDelegatePlugin);
}

uint64_t sub_74630(uint64_t a1)
{
  uint64_t v2 = sub_13EB00();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B1D0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_141170();
  sub_33D8(v6, (uint64_t)qword_17D248);
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141480();
  if (os_log_type_enabled(v7, v8))
  {
    int v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "TimerFlowDelegatePlugin: called makeFlowFor()", v9, 2u);
    swift_slowDealloc();
  }

  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_1408A0();
  sub_140890();
  swift_release();
  uint64_t v10 = type metadata accessor for TimerFlowProvider();
  uint64_t v11 = swift_allocObject();
  sub_3498(&v15, v11 + 16);
  v16[8] = v10;
  v16[9] = &off_175250;
  v16[5] = v11;
  sub_34B0(a1, (uint64_t)v5);
  sub_BA88((uint64_t)v16);
  uint64_t v12 = sub_13EAD0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v12)
  {
    sub_140AA0();
    swift_allocObject();
    v16[0] = sub_140A90();
    sub_748D8((unint64_t *)&qword_17D310, 255, (void (*)(uint64_t))&type metadata accessor for NoOpFlow);
    uint64_t v12 = sub_13EA60();
    swift_release();
  }
  return v12;
}

uint64_t sub_748D8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for TimerFlowFactory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for TimerFlowFactory(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 initializeWithTake for TimerFlowFactory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for TimerFlowFactory(uint64_t a1, uint64_t a2)
{
  _s20HandleIntentStrategyVwxx_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s20HandleIntentStrategyVwxx_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimerFlowFactory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimerFlowFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerFlowFactory()
{
  return &type metadata for TimerFlowFactory;
}

uint64_t sub_74B48()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17D320);
  sub_33D8(v0, (uint64_t)qword_17D320);
  return sub_140E60();
}

uint64_t sub_74B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_5830(&qword_17CD10);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v33);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_141170();
  uint64_t v12 = sub_33D8(v11, (uint64_t)qword_17D320);
  sub_303C0(a1, (uint64_t)v10);
  uint64_t v13 = sub_141160();
  os_log_type_t v14 = sub_141480();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v32 = v2;
    int v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v35 = v17;
    *(_DWORD *)int v16 = 136315138;
    uint64_t v30 = v12;
    sub_7908C(&qword_17D480, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    uint64_t v18 = sub_141980();
    uint64_t v34 = sub_58C0(v18, v19, &v35);
    sub_1415C0();
    swift_bridgeObjectRelease();
    sub_30364((uint64_t)v10);
    _os_log_impl(&dword_0, v13, v14, "Routing flow based on nlv3 intent: %s", v16, 0xCu);
    swift_arrayDestroy();
    a1 = v31;
    swift_slowDealloc();
    uint64_t v3 = v32;
    swift_slowDealloc();
  }
  else
  {
    sub_30364((uint64_t)v10);
  }

  if (qword_17B2F8 != -1) {
    swift_once();
  }
  sub_7908C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  switch((char)v35)
  {
    case 1:
      os_log_type_t v21 = sub_141160();
      os_log_type_t v22 = sub_141480();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_0, v21, v22, "TimerFlowFactory: deciding between deleteTimerFlow and dismissTimerFlow based on firing timer info from device context.", v23, 2u);
        swift_slowDealloc();
      }

      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      return sub_1D8A0();
    case 2:
      goto LABEL_30;
    case 3:
      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      return sub_77ACC();
    case 4:
      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      return sub_77A54();
    case 5:
      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      return sub_77A90();
    case 6:
      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      return sub_77B08();
    case 7:
      uint64_t v24 = sub_141160();
      os_log_type_t v25 = sub_141470();
      if (!os_log_type_enabled(v24, v25)) {
        goto LABEL_26;
      }
      os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v26 = 0;
      uint64_t v27 = "TimerFlow doen't support nlv3 intent verb: add. Returning noFlow";
      goto LABEL_25;
    case 8:
      uint64_t v24 = sub_141160();
      os_log_type_t v25 = sub_141470();
      if (!os_log_type_enabled(v24, v25)) {
        goto LABEL_26;
      }
      os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v26 = 0;
      uint64_t v27 = "TimerFlow doen't support nlv3 intent verb: substract. Returning noFlow";
LABEL_25:
      _os_log_impl(&dword_0, v24, v25, v27, v26, 2u);
      swift_slowDealloc();
LABEL_26:

      uint64_t result = sub_13EAC0();
      break;
    case 9:
      if (qword_17B320 != -1) {
        swift_once();
      }
      sub_13F940();
      uint64_t v28 = sub_13F7E0();
      int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v8, 1, v28);
      sub_904C((uint64_t)v8, &qword_17CD10);
      if (v29 != 1) {
        goto LABEL_31;
      }
LABEL_30:
      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      uint64_t result = sub_77B44(a2);
      break;
    default:
      if (qword_17B318 != -1) {
        swift_once();
      }
      sub_13F940();
      if ((v35 & 1) != 0 || (sub_140DC0() & 1) == 0)
      {
LABEL_31:
        uint64_t result = sub_75B24(a1, a2);
      }
      else
      {
        sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
        uint64_t result = sub_77958();
      }
      break;
  }
  return result;
}

void sub_7521C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_141170();
  sub_33D8(v6, (uint64_t)qword_17D320);
  id v7 = a1;
  os_log_type_t v8 = sub_141160();
  os_log_type_t v9 = sub_141480();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v33 = a2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    v34[0] = (uint64_t)v7;
    id v12 = v7;
    sub_1415C0();
    *uint64_t v11 = v7;

    uint64_t v3 = v2;
    _os_log_impl(&dword_0, v8, v9, "Routing flow based on SiriKit intent: %@", v10, 0xCu);
    sub_5830(&qword_17D478);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v33;
    swift_slowDealloc();
  }
  else
  {
  }
  sub_140CA0();
  uint64_t v13 = swift_dynamicCastClass();
  if (v13)
  {
    os_log_type_t v14 = (void *)v13;
    id v15 = v7;
    [v14 type];
    uint64_t v16 = sub_140F50();
    if (v16 == sub_140F50() && (sub_140DC0() & 1) != 0)
    {
      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      sub_77958();
    }
    else
    {
      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      sub_9384();
    }
  }
  else
  {
    sub_140CD0();
    if (swift_dynamicCastClass())
    {
      uint64_t v17 = sub_141160();
      os_log_type_t v18 = sub_141480();
      if (os_log_type_enabled(v17, v18))
      {
        unint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v19 = 0;
        _os_log_impl(&dword_0, v17, v18, "TimerFlowFactory: deciding between deleteTimerFlow and dismissTimerFlow based on firing timer info from device context.", v19, 2u);
        swift_slowDealloc();
      }

      sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
      sub_1D8A0();
    }
    else
    {
      sub_140C10();
      if (swift_dynamicCastClass())
      {
        sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
        sub_77A54();
      }
      else
      {
        sub_140C40();
        if (swift_dynamicCastClass())
        {
          sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
          sub_77ACC();
        }
        else
        {
          sub_140D00();
          if (swift_dynamicCastClass())
          {
            sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
            sub_77A90();
          }
          else
          {
            sub_140D40();
            if (swift_dynamicCastClass())
            {
              sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
              sub_77B44(a2);
            }
            else
            {
              sub_140BC0();
              if (swift_dynamicCastClass())
              {
                sub_90A8((void *)(v3 + 40), *(void *)(v3 + 64));
                sub_77B08();
              }
              else
              {
                id v20 = v7;
                os_log_type_t v21 = sub_141160();
                os_log_type_t v22 = sub_141470();
                if (os_log_type_enabled(v21, v22))
                {
                  uint64_t v23 = (uint8_t *)swift_slowAlloc();
                  v34[0] = swift_slowAlloc();
                  *(_DWORD *)uint64_t v23 = 136315138;
                  id v24 = v20;
                  id v25 = [v24 description];
                  uint64_t v26 = sub_141250();
                  unint64_t v28 = v27;

                  sub_58C0(v26, v28, v34);
                  sub_1415C0();

                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_0, v21, v22, "FlowPlugin is unable to consume the SiriKit intent %s. Exiting the flow.", v23, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                }
                uint64_t v29 = sub_140AB0();
                void v34[3] = v29;
                v34[4] = (uint64_t)&protocol witness table for ABCReport;
                uint64_t v30 = sub_187EC(v34);
                *uint64_t v30 = swift_getObjectType();
                uint64_t v31 = enum case for UnhandledAbortSubtype.unknownIntent(_:);
                uint64_t v32 = sub_1409E0();
                (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
                (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v30, enum case for ABCReport.unhandledAbort(_:), v29);
                sub_140820();
                _s20HandleIntentStrategyVwxx_1((uint64_t)v34);
                sub_13EAC0();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_75824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_141170();
  sub_33D8(v4, (uint64_t)qword_17D320);
  swift_unknownObjectRetain_n();
  long long v5 = sub_141160();
  os_log_type_t v6 = sub_141480();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v17 = v2;
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)id v7 = 136315138;
    swift_unknownObjectRetain();
    sub_5830(&qword_17EB60);
    uint64_t v8 = sub_141260();
    sub_58C0(v8, v9, &v18);
    sub_1415C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v6, "Routing flow based on nlv4 intent: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v17;
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  swift_getObjectType();
  uint64_t v10 = SIRINLUUserDialogAct.firstUsoTask.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    char v12 = sub_5BFC();
    swift_retain();
    sub_5DBC(v12, v11, a1);
    return swift_release_n();
  }
  else
  {
    os_log_type_t v14 = sub_141160();
    os_log_type_t v15 = sub_141470();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "UsoTask is empty! Calling createTimerFlow anyways", v16, 2u);
      swift_slowDealloc();
    }

    sub_90A8((void *)(v2 + 40), *(void *)(v2 + 64));
    return sub_9384();
  }
}

uint64_t sub_75B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v89 = a1;
  uint64_t v87 = a2;
  uint64_t v4 = sub_5830(&qword_17D488);
  __chkstk_darwin(v4 - 8);
  uint64_t v75 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F110();
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v77 = v6;
  __chkstk_darwin(v6);
  uint64_t v74 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17D490);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_5830(&qword_17D498);
  __chkstk_darwin(v11 - 8);
  char v83 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_13F890();
  uint64_t v84 = *(void *)(v13 - 8);
  uint64_t v85 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v71 - v17;
  uint64_t v19 = sub_140590();
  __chkstk_darwin(v19 - 8);
  os_log_type_t v80 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_5830(&qword_17CD10);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v81 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v71 - v25;
  __chkstk_darwin(v24);
  unint64_t v28 = (char *)&v71 - v27;
  uint64_t v29 = sub_5830(&qword_17D4A0);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_141170();
  uint64_t v86 = sub_33D8(v32, (uint64_t)qword_17D320);
  uint64_t v33 = sub_141160();
  os_log_type_t v34 = sub_141480();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_0, v33, v34, "TimerFlowFactory: deciding between createTimerFlow and createAlarmFlow based on user's NLv3 intent.", v35, 2u);
    swift_slowDealloc();
  }
  char v82 = v10;
  uint64_t v78 = v16;
  os_log_type_t v79 = v18;
  uint64_t v88 = v3;

  if (qword_17B320 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_7908C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  uint64_t v36 = sub_13F7E0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v38(v28, 1, v36) == 1)
  {
    sub_904C((uint64_t)v28, &qword_17CD10);
    uint64_t v39 = sub_13F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v31, 1, 1, v39);
LABEL_10:
    sub_904C((uint64_t)v31, &qword_17D4A0);
    uint64_t v42 = sub_141160();
    os_log_type_t v43 = sub_141480();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_0, v42, v43, "No startTime found in timerIntent. Returning createTimerFlow", v44, 2u);
      swift_slowDealloc();
    }

    uint64_t v45 = v88 + 5;
    uint64_t v46 = v88[8];
    goto LABEL_13;
  }
  char v73 = v38;
  sub_13F7A0();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v28, v36);
  uint64_t v41 = sub_13F840();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v31, 1, v41) == 1) {
    goto LABEL_10;
  }
  char v72 = v40;
  sub_904C((uint64_t)v31, &qword_17D4A0);
  sub_13F940();
  if (v73(v26, 1, v36) == 1)
  {
    sub_904C((uint64_t)v26, &qword_17CD10);
  }
  else
  {
    uint64_t v48 = sub_13F7B0();
    v72(v26, v36);
    if (v48)
    {
      if (qword_17B318 != -1) {
        swift_once();
      }
      sub_13F940();
      if (v90)
      {
        sub_76AD8(v48, v87);
        return swift_release();
      }
      swift_release();
    }
  }
  if (qword_17B318 != -1) {
    swift_once();
  }
  sub_13F940();
  uint64_t v49 = v88;
  if (v90 & 1) == 0 && (sub_140DC0())
  {
    sub_90A8(v49 + 5, v49[8]);
    return sub_77958();
  }
  sub_13F940();
  if (v90 == 1)
  {
    sub_90A8(v49, v49[3]);
    if (sub_13EC20())
    {
      type metadata accessor for CreateTimerCATs_Async();
      sub_140580();
      uint64_t v50 = sub_140470();
      type metadata accessor for CreateTimerCATPatternsExecutor(0);
      sub_140580();
      uint64_t v51 = sub_140470();
      uint64_t v90 = v50;
      uint64_t v91 = v51;
      sub_78AE8();
      sub_13EA60();
      swift_release();
      swift_release();
      sub_13EAE0();
      return swift_release();
    }
  }
  if (qword_17B348 != -1) {
    swift_once();
  }
  uint64_t v52 = (uint64_t)v81;
  sub_13F940();
  unsigned int v53 = v73((char *)v52, 1, v36);
  uint64_t v55 = v84;
  uint64_t v54 = v85;
  if (v53 == 1)
  {
    sub_904C(v52, &qword_17CD10);
    uint64_t v56 = sub_13F800();
    uint64_t v57 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v82, 1, 1, v56);
    uint64_t v58 = (uint64_t)v83;
LABEL_35:
    sub_904C(v57, &qword_17D490);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v58, 1, 1, v54);
LABEL_36:
    sub_904C(v58, &qword_17D498);
    uint64_t v45 = v49 + 5;
    uint64_t v46 = v49[8];
LABEL_13:
    sub_90A8(v45, v46);
    return sub_9384();
  }
  uint64_t v57 = (uint64_t)v82;
  sub_13F790();
  v72((char *)v52, v36);
  uint64_t v59 = sub_13F800();
  uint64_t v60 = *(void *)(v59 - 8);
  int v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v57, 1, v59);
  uint64_t v58 = (uint64_t)v83;
  if (v61 == 1) {
    goto LABEL_35;
  }
  sub_13F7F0();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v57, v59);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v58, 1, v54) == 1) {
    goto LABEL_36;
  }
  unint64_t v62 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v79, v58, v54);
  char v63 = v78;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v78, v62, v54);
  if ((*(unsigned int (**)(char *, uint64_t))(v55 + 88))(v63, v54) == enum case for TerminalElement.Qualifier.every(_:))
  {
    uint64_t v64 = sub_141160();
    os_log_type_t v65 = sub_141480();
    if (os_log_type_enabled(v64, v65))
    {
      os_log_type_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v66 = 0;
      _os_log_impl(&dword_0, v64, v65, "Found startTime with recurrence qualifier in timerIntent. Transforming to alarm flow", v66, 2u);
      swift_slowDealloc();
    }

    sub_13F3E0();
    sub_140360();
    uint64_t v67 = v74;
    sub_13F100();
    sub_13EAF0();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v67, v77);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v62, v54);
  }
  else
  {
    type metadata accessor for CreateTimerCATs_Async();
    sub_140580();
    uint64_t v68 = sub_140470();
    type metadata accessor for CreateTimerCATPatternsExecutor(0);
    sub_140580();
    uint64_t v69 = sub_140470();
    uint64_t v90 = v68;
    uint64_t v91 = v69;
    sub_78AE8();
    sub_13EA60();
    swift_release();
    swift_release();
    sub_13EAE0();
    swift_release();
    os_log_type_t v70 = *(void (**)(char *, uint64_t))(v55 + 8);
    v70(v62, v54);
    return ((uint64_t (*)(char *, uint64_t))v70)(v63, v54);
  }
}

uint64_t sub_7680C()
{
  if (sub_13FD40())
  {
    if (!sub_13FA70() || (unint64_t v1 = sub_13FAC0(), swift_release(), !v1))
    {
      sub_13EAC0();
      return swift_release();
    }
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1417D0();
      if (v2) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v2)
      {
LABEL_6:
        if (v2 < 1)
        {
          __break(1u);
          goto LABEL_30;
        }
        uint64_t v3 = 0;
        double v4 = 0.0;
        do
        {
          if ((v1 & 0xC000000000000001) != 0) {
            sub_1416A0();
          }
          else {
            swift_retain();
          }
          sub_13F8B0();
          if (v12)
          {
            sub_140040();
            double v5 = v6;
            swift_release();
            swift_release();
          }
          else
          {
            swift_release();
            double v5 = 0.0;
          }
          ++v3;
          double v4 = v4 + v5;
        }
        while (v2 != v3);
        swift_bridgeObjectRelease_n();
        if (v4 > 0.0)
        {
          sub_90A8((void *)(v0 + 40), *(void *)(v0 + 64));
          sub_77958();
          return swift_release();
        }
LABEL_25:
        if (qword_17B1D8 == -1)
        {
LABEL_26:
          uint64_t v8 = sub_141170();
          sub_33D8(v8, (uint64_t)qword_17D320);
          uint64_t v9 = sub_141160();
          os_log_type_t v10 = sub_141470();
          if (os_log_type_enabled(v9, v10))
          {
            uint64_t v11 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v11 = 0;
            _os_log_impl(&dword_0, v9, v10, "TimerFlowDelegatePlugin was presented a sleep timer ontology, but with a duration of zero seconds.", v11, 2u);
            swift_slowDealloc();
          }

          sub_13EAC0();
          return swift_release();
        }
LABEL_30:
        swift_once();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }

  return sub_13EAC0();
}

uint64_t sub_76AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_140590();
  __chkstk_darwin(v4 - 8);
  uint64_t v102 = (char *)v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_5830(&qword_17D4B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_13E440();
  uint64_t v115 = *(void *)(v117 - 8);
  uint64_t v9 = __chkstk_darwin(v117);
  uint64_t v103 = (char *)v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v110 = (char *)v89 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  long long v105 = (char *)v89 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  long long v106 = (char *)v89 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  id v107 = (char *)v89 - v18;
  __chkstk_darwin(v17);
  os_log_type_t v114 = (char *)v89 - v19;
  uint64_t v20 = sub_13E650();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_13E500();
  uint64_t v24 = *(void *)(v118 - 8);
  uint64_t v25 = __chkstk_darwin(v118);
  uint64_t v104 = (char *)v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v119 = (char *)v89 - v27;
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_141170();
  uint64_t v29 = sub_33D8(v28, (uint64_t)qword_17D320);
  swift_retain_n();
  uint64_t v111 = v29;
  uint64_t v30 = sub_141160();
  os_log_type_t v31 = sub_141480();
  BOOL v32 = os_log_type_enabled(v30, v31);
  id v108 = v8;
  if (v32)
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v113 = v20;
    uint64_t v101 = (char *)v34;
    uint64_t v120 = a1;
    v121[0] = v34;
    uint64_t v109 = v24;
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v112 = a2;
    uint64_t v100 = v33 + 4;
    sub_1402E0();
    sub_7908C(&qword_17D4C8, (void (*)(uint64_t))&type metadata accessor for DateTime);
    uint64_t v35 = sub_141980();
    uint64_t v120 = sub_58C0(v35, v36, v121);
    a2 = v112;
    uint64_t v24 = v109;
    sub_1415C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "TimerFlowFactory: In createTimerOrReformToAlarm with %s", v33, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v113;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v37 = v119;
  sub_13E4F0();
  sub_13E630();
  if (!sub_1402D0() || (uint64_t v38 = sub_1405A0()) == 0)
  {
    sub_90A8((void *)(v116 + 40), *(void *)(v116 + 64));
    sub_9384();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v37, v118);
  }
  uint64_t v101 = v23;
  uint64_t v112 = a2;
  uint64_t v100 = (uint8_t *)v21;
  uint64_t v113 = v20;
  uint64_t v39 = v38;
  uint64_t v40 = sub_5830(&qword_17D4B8);
  uint64_t v41 = sub_13E640();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(void *)(v42 + 72);
  uint64_t v44 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v45 = (v44 + 32) & ~v44;
  uint64_t v97 = v40;
  uint64_t v94 = v44 | 7;
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_143B30;
  uint64_t v96 = v45;
  uint64_t v47 = v46 + v45;
  uint64_t v48 = *(void (**)(void))(v42 + 104);
  ((void (*)(uint64_t, void, uint64_t))v48)(v47, enum case for Calendar.Component.year(_:), v41);
  ((void (*)(uint64_t, void, uint64_t))v48)(v47 + v43, enum case for Calendar.Component.month(_:), v41);
  ((void (*)(uint64_t, void, uint64_t))v48)(v47 + 2 * v43, enum case for Calendar.Component.day(_:), v41);
  uint64_t v95 = v43;
  unsigned int v93 = enum case for Calendar.Component.hour(_:);
  v48(v47 + 3 * v43);
  ((void (*)(uint64_t, void, uint64_t))v48)(v47 + 4 * v43, enum case for Calendar.Component.minute(_:), v41);
  uint64_t v99 = sub_78B54(v46);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v49 = v114;
  uint64_t v98 = v39;
  sub_1405B0();
  uint64_t v50 = v115;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
  uint64_t v52 = v107;
  uint64_t v92 = v115 + 16;
  uint64_t v91 = v51;
  v51(v107, v49, v117);
  unsigned int v53 = sub_141160();
  os_log_type_t v54 = sub_141480();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v109 = v24;
    uint64_t v56 = (uint8_t *)v55;
    uint64_t v90 = swift_slowAlloc();
    v121[0] = v90;
    uint64_t v57 = v52;
    uint64_t v58 = v117;
    *(_DWORD *)uint64_t v56 = 136315138;
    v89[1] = v56 + 4;
    sub_7908C(&qword_17D4C0, (void (*)(uint64_t))&type metadata accessor for DateComponents);
    uint64_t v59 = sub_141980();
    uint64_t v120 = sub_58C0(v59, v60, v121);
    sub_1415C0();
    swift_bridgeObjectRelease();
    uint64_t v61 = v116;
    id v107 = *(char **)(v115 + 8);
    ((void (*)(char *, uint64_t))v107)(v57, v58);
    _os_log_impl(&dword_0, v53, v54, "TimerFlowFactory: reference date from utterance: %s", v56, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v24 = v109;
    swift_slowDealloc();

    uint64_t v62 = (uint64_t)v108;
  }
  else
  {
    id v107 = *(char **)(v50 + 8);
    ((void (*)(char *, uint64_t))v107)(v52, v117);

    uint64_t v62 = (uint64_t)v108;
    uint64_t v61 = v116;
  }
  uint64_t v64 = v114;
  os_log_type_t v65 = v101;
  sub_13E620();
  int v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v62, 1, v118);
  uint64_t v37 = v119;
  if (v66 == 1)
  {
    swift_bridgeObjectRelease();
    sub_904C(v62, &qword_17D4B0);
    sub_90A8((void *)(v61 + 40), *(void *)(v61 + 64));
    sub_9384();
    swift_release();
    ((void (*)(char *, uint64_t))v107)(v64, v117);
    (*((void (**)(char *, uint64_t))v100 + 1))(v65, v113);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v37, v118);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v104, v62, v118);
  sub_13E610();
  sub_13E610();
  swift_bridgeObjectRelease();
  uint64_t v67 = v96;
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_142D50;
  ((void (*)(uint64_t, void, uint64_t))v48)(v68 + v67, v93, v41);
  sub_78B54(v68);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v69 = v110;
  sub_13E600();
  swift_bridgeObjectRelease();
  os_log_type_t v70 = v103;
  v91(v103, v69, v117);
  uint64_t v71 = sub_141160();
  os_log_type_t v72 = sub_141480();
  if (os_log_type_enabled(v71, v72))
  {
    char v73 = (uint8_t *)swift_slowAlloc();
    v121[0] = swift_slowAlloc();
    uint64_t v74 = v117;
    *(_DWORD *)char v73 = 136315138;
    sub_7908C(&qword_17D4C0, (void (*)(uint64_t))&type metadata accessor for DateComponents);
    uint64_t v75 = sub_141980();
    uint64_t v120 = sub_58C0(v75, v76, v121);
    uint64_t v77 = v101;
    sub_1415C0();
    swift_bridgeObjectRelease();
    uint64_t v78 = v74;
    os_log_type_t v79 = (void (*)(char *, uint64_t))v107;
    ((void (*)(char *, uint64_t))v107)(v70, v78);
    _os_log_impl(&dword_0, v71, v72, "TimerFlowFactory: deltaComponments: %s", v73, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v77 = v65;
    os_log_type_t v79 = (void (*)(char *, uint64_t))v107;
    ((void (*)(char *, uint64_t))v107)(v70, v117);
  }

  unint64_t v80 = sub_13E420();
  uint64_t v81 = v113;
  char v82 = v100;
  if ((v83 & 1) != 0 || v80 < 0x18)
  {
    sub_90A8((void *)(v116 + 40), *(void *)(v116 + 64));
    sub_9384();
  }
  else
  {
    type metadata accessor for CreateTimerCATs_Async();
    sub_140580();
    uint64_t v84 = sub_140470();
    type metadata accessor for CreateTimerCATPatternsExecutor(0);
    sub_140580();
    uint64_t v85 = sub_140470();
    v121[0] = v84;
    v121[1] = v85;
    sub_78AE8();
    sub_13EA60();
    swift_release();
    swift_release();
    sub_13EAE0();
    swift_release();
  }
  swift_release();
  uint64_t v86 = v117;
  v79(v110, v117);
  v79(v105, v86);
  v79(v106, v86);
  uint64_t v87 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v88 = v118;
  v87(v104, v118);
  v79(v114, v86);
  (*((void (**)(char *, uint64_t))v82 + 1))(v77, v81);
  return ((uint64_t (*)(char *, uint64_t))v87)(v119, v88);
}

uint64_t sub_77958()
{
  return sub_7892C("TimerFlowFactory: making createTimerFlow for sleep timer.");
}

uint64_t sub_77978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D95C;
  return sub_70054(a1, v4);
}

uint64_t sub_77A18()
{
  return sub_90EC((uint64_t *)&unk_17D660, "TimerFlowFactory: making deleteTimerFlow.", (void (*)(unsigned char *))sub_9AB0, (void (*)(char *, char *))sub_A868);
}

uint64_t sub_77A54()
{
  return sub_90EC(&qword_17CFD8, "TimerFlowFactory: making pauseTimerFlow.", (void (*)(unsigned char *))sub_9EC8, (void (*)(char *, char *))sub_A218);
}

uint64_t sub_77A90()
{
  return sub_90EC(&qword_17D5F0, "TimerFlowFactory: making resumeTimerFlow.", (void (*)(unsigned char *))sub_9CBC, (void (*)(char *, char *))sub_AB90);
}

uint64_t sub_77ACC()
{
  return sub_90EC(&qword_17D5B8, "TimerFlowFactory: making resetTimerFlow.", (void (*)(unsigned char *))sub_98A4, (void (*)(char *, char *))sub_A540);
}

uint64_t sub_77B08()
{
  return sub_90EC(&qword_17D580, "TimerFlowFactory: making setTimerAttributeFlow.", (void (*)(unsigned char *))sub_96B8, (void (*)(char *, char *))sub_B508);
}

uint64_t sub_77B44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5830(&qword_17D528);
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_140730();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_141170();
  sub_33D8(v11, (uint64_t)qword_17D320);
  uint64_t v12 = sub_141160();
  os_log_type_t v13 = sub_141480();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "TimerFlowFactory: making searchTimerFlow.", v14, 2u);
    swift_slowDealloc();
  }

  sub_140720();
  BOOL v15 = sub_1406E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v15)
  {
    uint64_t v16 = sub_141160();
    os_log_type_t v17 = sub_141480();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v25;
    if (v18)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_0, v16, v17, "Using RemoteTimerContinuationFlow for Cross-Device Flow", v20, 2u);
      swift_slowDealloc();
    }

    sub_3410(v19 + 16, (uint64_t)v28);
    type metadata accessor for RemoteTimerContinuationFlow();
    swift_allocObject();
    *(void *)&v28[0] = sub_4FCC4(v28);
    sub_7908C((unint64_t *)&unk_17D560, (void (*)(uint64_t))type metadata accessor for RemoteTimerContinuationFlow);
    sub_13EA60();
    swift_release();
    sub_13EAE0();
    return swift_release();
  }
  else
  {
    sub_3410(v25 + 16, (uint64_t)v28);
    sub_140D40();
    sub_140D20();
    sub_13EA30();
    if (qword_17B240 != -1) {
      swift_once();
    }
    sub_13E970();
    sub_13E9E0();
    sub_3410((uint64_t)v28, (uint64_t)v27);
    *(unsigned char *)(swift_allocObject() + 16) = 0;
    sub_78F28();
    sub_13E950();
    swift_release();
    sub_13E9D0();
    _s20HandleIntentStrategyVwxx_1((uint64_t)v28);
    sub_78F7C((uint64_t)v27);
    uint64_t v22 = sub_140980();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v3, 1, 1, v22);
    sub_AEB8((uint64_t)v6, (uint64_t)v3, v26);
    sub_904C((uint64_t)v3, &qword_17CD30);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  }
}

uint64_t sub_78058@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  v19[0] = sub_5830(&qword_17D520);
  uint64_t v4 = __chkstk_darwin(v19[0]);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  uint64_t v9 = sub_5830(&qword_17D528);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  BOOL v15 = (char *)v19 - v14;
  sub_3410(v2 + 16, (uint64_t)v21);
  sub_140D40();
  sub_140D20();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_13E9E0();
  sub_3410((uint64_t)v21, (uint64_t)v20);
  *(unsigned char *)(swift_allocObject() + 16) = a1 & 1;
  sub_78F28();
  sub_13E950();
  swift_release();
  sub_13E9D0();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v21);
  sub_78F7C((uint64_t)v20);
  sub_3410(v2 + 16, (uint64_t)v8);
  uint64_t v16 = &v8[*(int *)(v19[0] + 36)];
  uint64_t v17 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  sub_5830(&qword_17D540);
  swift_allocObject();
  sub_13EA40();
  sub_8FE8((uint64_t)v8, (uint64_t)v6, &qword_17D520);
  sub_B978((unint64_t *)&unk_17D548, &qword_17D520);
  sub_13EE20();
  sub_904C((uint64_t)v8, &qword_17D520);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_783E0()
{
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_141170();
  sub_33D8(v0, (uint64_t)qword_17D320);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "TimerFlowFactory: making recreateDeletedTimerFlow.", v3, 2u);
    swift_slowDealloc();
  }

  sub_140F30();
  swift_allocObject();
  uint64_t v4 = sub_140F20();
  id v5 = [objc_allocWithZone((Class)MTTimerManager) init];
  type metadata accessor for RecreateDeletedTimerFlow();
  uint64_t v6 = swift_allocObject();
  sub_129CD0(v4, (uint64_t)v5, v6);
  sub_7908C(&qword_17D518, (void (*)(uint64_t))type metadata accessor for RecreateDeletedTimerFlow);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  return swift_release();
}

uint64_t sub_78594()
{
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_141170();
  sub_33D8(v0, (uint64_t)qword_17D320);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "TimerFlowFactory: making undoCreateTimerFlow", v3, 2u);
    swift_slowDealloc();
  }

  sub_140F30();
  swift_allocObject();
  uint64_t v4 = sub_140F20();
  id v5 = [objc_allocWithZone((Class)MTTimerManager) init];
  type metadata accessor for UndoCreateTimerFlow();
  uint64_t v6 = (void *)swift_allocObject();
  sub_115118(v4, (uint64_t)v5, v6);
  sub_7908C(&qword_17D510, (void (*)(uint64_t))type metadata accessor for UndoCreateTimerFlow);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  return swift_release();
}

uint64_t sub_78748()
{
  uint64_t v1 = v0;
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_141170();
  sub_33D8(v2, (uint64_t)qword_17D320);
  uint64_t v3 = sub_141160();
  os_log_type_t v4 = sub_141480();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "TimerFlowFactory: making undoTimerChangeStateFlow", v5, 2u);
    swift_slowDealloc();
  }

  sub_3410(v1 + 16, (uint64_t)v12);
  sub_140F30();
  swift_allocObject();
  uint64_t v6 = sub_140F20();
  id v7 = [objc_allocWithZone((Class)MTTimerManager) init];
  sub_3410((uint64_t)v12, (uint64_t)v11);
  type metadata accessor for UndoTimerChangeStateFlow();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = sub_8F410(v6, (uint64_t)v7, v11, v8);
  _s20HandleIntentStrategyVwxx_1((uint64_t)v12);
  v12[0] = v9;
  sub_7908C(&qword_17D508, (void (*)(uint64_t))type metadata accessor for UndoTimerChangeStateFlow);
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  return swift_release();
}

uint64_t sub_7892C(const char *a1)
{
  if (qword_17B1D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_141170();
  sub_33D8(v2, (uint64_t)qword_17D320);
  uint64_t v3 = sub_141160();
  os_log_type_t v4 = sub_141480();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_0, v3, v4, a1, v5, 2u);
    swift_slowDealloc();
  }

  sub_13E7F0();
  swift_allocObject();
  swift_retain();
  sub_13E800();
  sub_13EA60();
  swift_release();
  sub_13EAE0();
  return swift_release();
}

unint64_t sub_78A94()
{
  unint64_t result = qword_17D460;
  if (!qword_17D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17D460);
  }
  return result;
}

unint64_t sub_78AE8()
{
  unint64_t result = qword_17D4A8;
  if (!qword_17D4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17D4A8);
  }
  return result;
}

uint64_t sub_78B3C@<X0>(NSObject *a1@<X0>, char *a2@<X8>)
{
  return sub_12AA80(a1, a2);
}

void *sub_78B54(uint64_t a1)
{
  uint64_t v2 = sub_13E640();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_5830(&qword_17D4D0);
    uint64_t v9 = sub_141670();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    BOOL v15 = (void (**)(char *, uint64_t))(v11 - 8);
    os_log_type_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_7908C(&qword_17D4D8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_141220();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_7908C((unint64_t *)&unk_17D4E0, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_141230();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_78E6C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_78E7C(uint64_t a1, uint64_t a2)
{
  char v6 = *(unsigned char *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_79170;
  return sub_7A02C(a1, a2, v6);
}

unint64_t sub_78F28()
{
  unint64_t result = qword_17D538;
  if (!qword_17D538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17D538);
  }
  return result;
}

uint64_t sub_78F7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_78FD0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_78FE0(uint64_t a1, uint64_t a2)
{
  char v6 = *(unsigned char *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_481C4;
  return sub_7A02C(a1, a2, v6);
}

uint64_t sub_7908C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_790D4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_159A4;
  return sub_77978(a1, v1);
}

id sub_79174(unint64_t a1, int a2)
{
  unint64_t v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (v4)
  {
    if (qword_17B1E0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_141170();
    sub_33D8(v5, (uint64_t)qword_17D6E0);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141450();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134217984;
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1417D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v9 = *(NSObject **)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease();
      v37[0] = v9;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v6, v7, "Converting [SiriTimer] to [STTimerShowTimerAndPerformAction]: %ld timers", v8, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v4 >= 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      uint64_t v16 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v18 = (id)sub_1416A0();
        }
        else {
          id v18 = *(id *)(a1 + 8 * v15 + 32);
        }
        unint64_t v19 = v18;
        id v38 = v18;
        sub_796F0(&v38, a2, v37);

        uint64_t v20 = v37[0];
        if (v37[0])
        {
          uint64_t v21 = v37[1];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = sub_E07AC(0, *((void *)v16 + 2) + 1, 1, v16);
          }
          unint64_t v23 = *((void *)v16 + 2);
          unint64_t v22 = *((void *)v16 + 3);
          if (v23 >= v22 >> 1) {
            uint64_t v16 = sub_E07AC((char *)(v22 > 1), v23 + 1, 1, v16);
          }
          *((void *)v16 + 2) = v23 + 1;
          uint64_t v17 = &v16[16 * v23];
          *((void *)v17 + 4) = v20;
          *((void *)v17 + 5) = v21;
        }
        ++v15;
      }
      while (v4 != v15);
      swift_bridgeObjectRelease();
      id v24 = [objc_allocWithZone((Class)STTimerShowTimerAndPerformAction) init];
      uint64_t v25 = *((void *)v16 + 2);
      if (v25)
      {
        v37[0] = &_swiftEmptyArrayStorage;
        sub_141730();
        uint64_t v26 = (void **)(v16 + 32);
        do
        {
          uint64_t v27 = *v26;
          v26 += 2;
          id v28 = v27;
          sub_141700();
          sub_141740();
          sub_141750();
          sub_141710();
          --v25;
        }
        while (v25);
      }
      sub_5595C(0, &qword_17D6F8);
      v29.super.Class isa = sub_1412F0().super.isa;
      swift_bridgeObjectRelease();
      v37[0] = &_swiftEmptyArrayStorage;
      uint64_t v30 = *((void *)v16 + 2);
      if (v30)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = 40;
        do
        {
          uint64_t v32 = *(void **)&v16[v31];
          if (v32)
          {
            id v33 = v32;
            sub_1412E0();
            if (*(void *)((char *)&dword_10 + ((unint64_t)v37[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)v37[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
              sub_141350();
            }
            sub_141380();
            sub_141330();
          }
          v31 += 16;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_5595C(0, (unint64_t *)&unk_17D700);
      Class isa = sub_1412F0().super.isa;
      swift_bridgeObjectRelease();
      id v14 = [v24 _initWithTimers:v29.super.isa templateActions:isa timerAction:qword_143BB0[(char)a2]];

      return v14;
    }
    __break(1u);
    goto LABEL_43;
  }
  if (qword_17B1E0 != -1) {
LABEL_43:
  }
    swift_once();
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17D6E0);
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "getSTTimerAction received an empty array of timers: returning nil.", v13, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_796A4()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17D6E0);
  sub_33D8(v0, (uint64_t)qword_17D6E0);
  return sub_140E60();
}

void sub_796F0(id *a1@<X0>, int a2@<W1>, NSObject **a3@<X8>)
{
  id v5 = *a1;
  id v6 = [*a1 identifier];
  if (!v6) {
    goto LABEL_11;
  }
  os_log_type_t v7 = v6;
  uint64_t v8 = sub_141250();
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_17B1E0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_141170();
    sub_33D8(v26, (uint64_t)qword_17D6E0);
    id v27 = v5;
    id v28 = sub_141160();
    os_log_type_t v29 = sub_141480();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      v52[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      id v31 = v27;
      id v32 = [v31 description];
      uint64_t v33 = sub_141250();
      unint64_t v35 = v34;

      uint64_t v53 = sub_58C0(v33, v35, v52);
      sub_1415C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v28, v29, "Timer ID was nil! %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_17;
  }
  sub_5595C(0, &qword_17D6F8);
  os_log_type_t v12 = sub_79D60(v5);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  uint64_t v13 = v12;
  if (qword_17B1E0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_141170();
  sub_33D8(v14, (uint64_t)qword_17D6E0);
  uint64_t v15 = v13;
  uint64_t v16 = sub_141160();
  os_log_type_t v17 = sub_141480();
  log = v16;
  uint64_t v49 = v8;
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t type = v17;
    id v18 = (uint8_t *)swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)id v18 = 136315138;
    unint64_t v19 = v15;
    id v20 = [v19 description];
    uint64_t v21 = a3;
    uint64_t v22 = sub_141250();
    unint64_t v24 = v23;

    uint64_t v25 = v22;
    a3 = v21;
    uint64_t v53 = sub_58C0(v25, v24, v52);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, log, type, "STTimer: %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (sub_642C(a2) == 0x6E776F6E6B6E75 && v36 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    *a3 = v13;
    a3[1] = 0;
    return;
  }
  char v37 = sub_141AA0();
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0 || a2 > 0x12u || ((1 << a2) & 0x611A4) == 0) {
    goto LABEL_23;
  }
  int v38 = a2;
  uint64_t v39 = [objc_allocWithZone((Class)SASTCommandTemplateAction) init];
  sub_5830(&qword_17BF00);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_142E80;
  id v41 = sub_3473C(v38, v49, v10);
  os_log_t loga = v13;
  uint64_t v42 = self;
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  uint64_t v43 = a3;
  sub_90A8(v52, v52[3]);
  uint64_t v44 = (void *)sub_13EC40();
  id v45 = [v42 runSiriKitExecutorCommandWithContext:v44 payload:v41];

  _s20HandleIntentStrategyVwxx_1((uint64_t)v52);
  id v46 = [v42 wrapCommandInStartLocalRequest:v45];
  swift_bridgeObjectRelease();

  *(void *)(v40 + 32) = v46;
  v52[0] = v40;
  sub_141330();
  sub_5830((uint64_t *)&unk_17D710);
  Class isa = sub_1412F0().super.isa;
  swift_bridgeObjectRelease();
  [v39 setCommands:isa];

  *uint64_t v43 = loga;
  v43[1] = v39;
}

id sub_79D60(void *a1)
{
  id v2 = [a1 identifier];
  if (v2)
  {
    unint64_t v3 = v2;
    uint64_t v4 = sub_141250();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      id v8 = [a1 duration];
      if (v8)
      {
        unint64_t v9 = v8;
        id v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
        [v10 setIdentifier:v3];

        id v11 = [a1 remainingTime];
        [v10 setValue:v11];

        return v10;
      }
    }
  }
  if (qword_17B1E0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_141170();
  sub_33D8(v12, (uint64_t)qword_17D6E0);
  id v13 = a1;
  uint64_t v14 = sub_141160();
  os_log_type_t v15 = sub_141480();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    id v13 = v13;
    id v17 = [v13 description];
    uint64_t v18 = sub_141250();
    unint64_t v20 = v19;

    sub_58C0(v18, v20, &v22);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v15, "STTimer(siriTimer:) Timer ID or duration was nil! %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_7A02C(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 64) = a3;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  return _swift_task_switch(sub_7A050, 0, 0);
}

uint64_t sub_7A050()
{
  sub_140D10();
  uint64_t v1 = sub_140D30();
  if (v1 == sub_140D30())
  {
    sub_140AA0();
    swift_allocObject();
    *(void *)(v0 + 16) = sub_140A90();
    sub_7A46C();
    uint64_t v2 = sub_13EA60();
    swift_release();
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    id v5 = [*(id *)(v0 + 32) matchedTimers];
    if (v5)
    {
      unint64_t v6 = v5;
      sub_140EA0();
      uint64_t v7 = (void *)sub_141310();
    }
    else
    {
      uint64_t v7 = _swiftEmptyArrayStorage;
    }
    id v8 = [*(id *)(v0 + 32) unmatchedTimers];
    if (v8)
    {
      unint64_t v9 = v8;
      sub_140EA0();
      id v10 = (void *)sub_141310();
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
    }
    id v11 = [*(id *)(v0 + 32) remoteTimers];
    if (v11)
    {
      uint64_t v12 = v11;
      sub_140EA0();
      id v13 = (void *)sub_141310();
    }
    else
    {
      id v13 = _swiftEmptyArrayStorage;
    }
    unint64_t v14 = *(unsigned __int8 *)(v0 + 64);
    os_log_type_t v15 = *(void **)(v0 + 24);
    _s17ResultSetProviderCMa();
    swift_allocObject();
    *(void *)(v0 + 40) = sub_35F20(v15, v14, (unint64_t)v7, (unint64_t)v10, (unint64_t)v13);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_7A2B0;
    return sub_3680C();
  }
}

uint64_t sub_7A2B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_7A408, 0, 0);
  }
  else
  {
    swift_release();
    id v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_7A408()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_7A46C()
{
  unint64_t result = qword_17D310;
  if (!qword_17D310)
  {
    sub_140AA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17D310);
  }
  return result;
}

void *UndoTimerChangeStateFlow.__allocating_init(deviceState:)(uint64_t a1)
{
  sub_140F30();
  swift_allocObject();
  uint64_t v2 = sub_140F20();
  id v3 = [objc_allocWithZone((Class)MTTimerManager) init];
  sub_3410(a1, (uint64_t)v7);
  type metadata accessor for UndoTimerChangeStateFlow();
  uint64_t v4 = (void *)swift_allocObject();
  id v5 = sub_8F410(v2, (uint64_t)v3, v7, v4);
  _s20HandleIntentStrategyVwxx_1(a1);
  return v5;
}

uint64_t type metadata accessor for UndoTimerChangeStateFlow()
{
  uint64_t result = qword_17D7F0;
  if (!qword_17D7F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_7A5C0()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17D728);
  sub_33D8(v0, (uint64_t)qword_17D728);
  return sub_140E60();
}

uint64_t sub_7A60C(uint64_t a1)
{
  return sub_7A65C(a1, (uint64_t (*)(void))&type metadata accessor for SiriTimeEventSender.TaskType, qword_180F40, &enum case for SiriTimeEventSender.TaskType.undoModifyTimer(_:));
}

uint64_t sub_7A634(uint64_t a1)
{
  return sub_7A65C(a1, (uint64_t (*)(void))&type metadata accessor for SiriTimeEventSender.Attribute, qword_180F58, &enum case for SiriTimeEventSender.Attribute.corrections(_:));
}

uint64_t sub_7A65C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6 = a2(0);
  sub_2D2B0(v6, a3);
  uint64_t v7 = sub_33D8(v6, (uint64_t)a3);
  uint64_t v8 = *a4;
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v9(v7, v8, v6);
}

uint64_t UndoTimerChangeStateFlow.on(input:)()
{
  uint64_t v0 = sub_5830(&qword_17D740);
  __chkstk_darwin(v0 - 8);
  uint64_t v80 = (uint64_t)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_140920();
  uint64_t v82 = *(void *)(v2 - 8);
  uint64_t v83 = v2;
  __chkstk_darwin(v2);
  uint64_t v81 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_140900();
  uint64_t v4 = *(void *)(v86 - 8);
  uint64_t v5 = __chkstk_darwin(v86);
  uint64_t v85 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v73 - v8;
  __chkstk_darwin(v7);
  id v11 = (char *)&v73 - v10;
  uint64_t v12 = sub_13F3C0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_13F3E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F370();
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v19, v16) != enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v19, v12);
  uint64_t v20 = sub_13F3B0();
  uint64_t v21 = v15;
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  uint64_t v22 = v20;
  uint64_t v78 = v12;
  os_log_type_t v79 = v21;
  uint64_t v23 = v4;
  unint64_t v24 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  uint64_t v25 = v86;
  uint64_t v77 = v24;
  v24(v11, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v86);
  uint64_t v26 = sub_1408F0();
  uint64_t v28 = v27;
  os_log_type_t v29 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v76 = v23 + 8;
  v29(v11, v25);
  if (*(void *)(v22 + 16) && (unint64_t v30 = sub_16F44(v26, v28), (v31 & 1) != 0))
  {
    sub_5B50(*(void *)(v22 + 56) + 32 * v30, (uint64_t)&v89);
  }
  else
  {
    long long v89 = 0u;
    long long v90 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v90 + 1)) {
    goto LABEL_35;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_41;
  }
  int v32 = sub_CC640();
  if (v32 == 19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v79, v78);
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  int v75 = v32;
  v77(v9, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v25);
  uint64_t v33 = sub_1408F0();
  uint64_t v35 = v34;
  v29(v9, v25);
  if (*(void *)(v22 + 16) && (unint64_t v36 = sub_16F44(v33, v35), (v37 & 1) != 0))
  {
    sub_5B50(*(void *)(v22 + 56) + 32 * v36, (uint64_t)&v89);
  }
  else
  {
    long long v89 = 0u;
    long long v90 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v90 + 1)) {
    goto LABEL_35;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v38 = v88;
  uint64_t v74 = v87;
  if (sub_642C(v75) == 0x6573756170 && v39 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  char v40 = sub_141AA0();
  swift_bridgeObjectRelease();
  if (v40)
  {
LABEL_24:
    id v41 = v85;
    v77(v85, enum case for DirectInvocationUtils.Timer.UserInfoKey.duration(_:), v25);
    uint64_t v42 = sub_1408F0();
    uint64_t v44 = v43;
    v29(v41, v25);
    if (*(void *)(v22 + 16) && (unint64_t v45 = sub_16F44(v42, v44), (v46 & 1) != 0))
    {
      sub_5B50(*(void *)(v22 + 56) + 32 * v45, (uint64_t)&v89);
    }
    else
    {
      long long v89 = 0u;
      long long v90 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v90 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v47 = v84 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_remainingTime;
        *(void *)uint64_t v47 = v87;
        *(unsigned char *)(v47 + 8) = 0;
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
    sub_904C((uint64_t)&v89, &qword_17B9B0);
LABEL_42:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v79, v78);
    return 0;
  }
LABEL_31:
  uint64_t v86 = v38;
  uint64_t v48 = v79;
  uint64_t v49 = sub_13F3A0();
  uint64_t v51 = v50;
  uint64_t v52 = v81;
  uint64_t v53 = v82;
  uint64_t v54 = v83;
  (*(void (**)(char *, void, uint64_t))(v82 + 104))(v81, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v83);
  uint64_t v55 = sub_140910();
  uint64_t v57 = v56;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
  if (v49 == v55 && v51 == v57)
  {
    swift_bridgeObjectRelease_n();
    char v58 = v75;
  }
  else
  {
    char v59 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v58 = v75;
    if ((v59 & 1) == 0) {
      goto LABEL_53;
    }
  }
  if (sub_642C(v58) != 0x6573756170 || v60 != 0xE500000000000000)
  {
    char v62 = sub_141AA0();
    swift_bridgeObjectRelease();
    if (v62) {
      goto LABEL_48;
    }
    if (sub_642C(v58) != 0x656D75736572 || v63 != 0xE600000000000000)
    {
      char v64 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v64) {
        goto LABEL_48;
      }
LABEL_53:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v48, v78);
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_48:
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_141170();
  sub_33D8(v65, (uint64_t)qword_17D728);
  int v66 = sub_141160();
  os_log_type_t v67 = sub_141480();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl(&dword_0, v66, v67, "UndoTimerChangeStateFlow: accepting input.", v68, 2u);
    swift_slowDealloc();
  }

  uint64_t v69 = v84;
  uint64_t v70 = v86;
  *(void *)(v84 + 120) = v74;
  *(void *)(v69 + 128) = v70;
  swift_bridgeObjectRelease();
  uint64_t v71 = v80;
  sub_10EA70(v22, v80);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v48, v78);
  uint64_t v72 = v69 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_followupPluginAction;
  swift_beginAccess();
  sub_90C18(v71, v72, &qword_17D740);
  swift_endAccess();
  *(unsigned char *)(v69 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_operation) = v58;
  return 1;
}

uint64_t UndoTimerChangeStateFlow.execute(completion:)()
{
  return sub_13EA80();
}

uint64_t UndoTimerChangeStateFlow.execute()(uint64_t a1)
{
  v2[146] = v1;
  v2[145] = a1;
  sub_5830(&qword_17D740);
  v2[147] = swift_task_alloc();
  uint64_t v3 = sub_13ED80();
  v2[148] = v3;
  v2[149] = *(void *)(v3 - 8);
  v2[150] = swift_task_alloc();
  v2[151] = type metadata accessor for ResumeTimerHandledOnWatchParameters(0);
  v2[152] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v2[153] = swift_task_alloc();
  v2[154] = type metadata accessor for PauseTimerHandledOnWatchParameters(0);
  v2[155] = swift_task_alloc();
  uint64_t v4 = sub_13F1E0();
  v2[156] = v4;
  v2[157] = *(void *)(v4 - 8);
  v2[158] = swift_task_alloc();
  v2[159] = swift_task_alloc();
  v2[160] = swift_task_alloc();
  v2[161] = swift_task_alloc();
  v2[162] = type metadata accessor for SiriTimePluginModel(0);
  v2[163] = swift_task_alloc();
  v2[164] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v2[165] = v5;
  v2[166] = *(void *)(v5 - 8);
  v2[167] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v2[168] = v6;
  v2[169] = *(void *)(v6 - 8);
  v2[170] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v2[171] = v7;
  v2[172] = *(void *)(v7 - 8);
  v2[173] = swift_task_alloc();
  v2[174] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[175] = v8;
  v2[176] = *(void *)(v8 - 8);
  v2[177] = swift_task_alloc();
  v2[178] = swift_task_alloc();
  v2[179] = swift_task_alloc();
  v2[180] = swift_task_alloc();
  v2[181] = swift_task_alloc();
  v2[182] = swift_task_alloc();
  uint64_t v9 = sub_13EFF0();
  v2[183] = v9;
  v2[184] = *(void *)(v9 - 8);
  v2[185] = swift_task_alloc();
  v2[186] = swift_task_alloc();
  uint64_t v10 = sub_140650();
  v2[187] = v10;
  v2[188] = *(void *)(v10 - 8);
  v2[189] = swift_task_alloc();
  uint64_t v11 = sub_140730();
  v2[190] = v11;
  v2[191] = *(void *)(v11 - 8);
  v2[192] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v2[193] = swift_task_alloc();
  v2[194] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v2[195] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v2[196] = swift_task_alloc();
  uint64_t v12 = sub_140660();
  v2[197] = v12;
  v2[198] = *(void *)(v12 - 8);
  v2[199] = swift_task_alloc();
  uint64_t v13 = sub_13ED60();
  v2[200] = v13;
  v2[201] = *(void *)(v13 - 8);
  v2[202] = swift_task_alloc();
  return _swift_task_switch(sub_7B7D0, 0, 0);
}

uint64_t sub_7B7D0()
{
  (*(void (**)(void, void, void))(v0[201] + 104))(v0[202], enum case for ActivityType.correction(_:), v0[200]);
  if (qword_17B1F0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[199];
  uint64_t v2 = v0[198];
  uint64_t v3 = v0[197];
  uint64_t v4 = v0[196];
  uint64_t v5 = sub_33D8(v3, (uint64_t)qword_180F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v6 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_17B1F8 != -1) {
    swift_once();
  }
  uint64_t v91 = v0[202];
  uint64_t v7 = v0[201];
  uint64_t v94 = v0[200];
  uint64_t v90 = v0[199];
  uint64_t v8 = v0[198];
  uint64_t v9 = v0[196];
  uint64_t v10 = v0[195];
  uint64_t v11 = v0[194];
  uint64_t v12 = v0[188];
  uint64_t v13 = v0[187];
  uint64_t v92 = v0[197];
  uint64_t v93 = v0[146];
  uint64_t v14 = sub_140670();
  uint64_t v15 = sub_33D8(v14, (uint64_t)qword_180F58);
  uint64_t v16 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v10, v15, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v14);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v0[203] = v17;
  v0[204] = (v12 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v17(v11, 1, 1, v13);
  sub_140640();
  sub_904C(v11, &qword_17C068);
  sub_904C(v10, &qword_17C070);
  sub_904C(v9, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v90, v92);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v91, v94);
  v0[205] = *(void *)(v93 + 120);
  uint64_t v18 = *(void *)(v93 + 128);
  v0[206] = v18;
  if (!v18)
  {
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v22 = sub_141160();
    os_log_type_t v23 = sub_141470();
    if (os_log_type_enabled(v22, v23))
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "UndoTimerChangeStateFlow: No timer id to operate on! This should never happen.", v24, 2u);
      swift_slowDealloc();
    }
    uint64_t v25 = v0[189];
    uint64_t v26 = v0[188];
    uint64_t v27 = v0[187];

    (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v25, enum case for SiriTimeEventSender.ReasonDescription.noTimerToUndo(_:), v27);
    uint64_t v28 = (void *)swift_task_alloc();
    v0[320] = v28;
    *uint64_t v28 = v0;
    os_log_type_t v29 = sub_87FF8;
    goto LABEL_21;
  }
  uint64_t v19 = v0[146];
  uint64_t v20 = OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_operation;
  if (sub_642C(*(unsigned char *)(v19 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_operation)) == 0x6573756170
    && v21 == 0xE500000000000000)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = sub_141AA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      if (sub_642C(*(unsigned char *)(v19 + v20)) == 0x656D75736572 && v58 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v63 = sub_141AA0();
        swift_bridgeObjectRelease();
        if ((v63 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v81 = v0[146];
          sub_13EF00();
          sub_903C8(v81);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v82 = (uint64_t (*)(void))v0[1];
          return v82();
        }
      }
      uint64_t v64 = v0[192];
      uint64_t v65 = v0[191];
      uint64_t v66 = v0[190];
      sub_140720();
      BOOL v67 = sub_1406C0();
      uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v0[267] = v68;
      v0[268] = (v65 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v68(v64, v66);
      if (v67)
      {
        uint64_t v69 = *(void **)(v0[146] + 112);
        v0[269] = v69;
        v69;
        uint64_t v70 = (void *)swift_task_alloc();
        v0[270] = v70;
        *uint64_t v70 = v0;
        v70[1] = sub_82178;
        return sub_E0FFC();
      }
      sub_3410(v0[146] + 72, (uint64_t)(v0 + 2));
      uint64_t v59 = v0[5];
      uint64_t v60 = v0[6];
      sub_90A8(v0 + 2, v59);
      uint64_t v61 = (void *)swift_task_alloc();
      v0[279] = v61;
      void *v61 = v0;
      char v62 = sub_8312C;
LABEL_40:
      v61[1] = v62;
      return dispatch thunk of SiriTimerManagerIOS.currentTimer()(v59, v60);
    }
  }
  uint64_t v31 = v0[146] + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_remainingTime;
  if (*(unsigned char *)(v31 + 8))
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    int v32 = sub_141160();
    os_log_type_t v33 = sub_141470();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "UndoTimerChangeStateFlow: undoing a resume timer, need to know the remaining time to go back to.", v34, 2u);
      swift_slowDealloc();
    }
    uint64_t v35 = v0[189];
    uint64_t v36 = v0[188];
    uint64_t v37 = v0[187];

    (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))(v35, enum case for SiriTimeEventSender.ReasonDescription.timerMissingInputRemainingTime(_:), v37);
    uint64_t v28 = (void *)swift_task_alloc();
    v0[266] = v28;
    *uint64_t v28 = v0;
    os_log_type_t v29 = sub_81FF4;
LABEL_21:
    v28[1] = v29;
    uint64_t v38 = v0[189];
    uint64_t v39 = v0[145];
    return sub_8BA40(v39, v38);
  }
  uint64_t v41 = v0[192];
  uint64_t v42 = v0[191];
  uint64_t v43 = v0[190];
  v0[207] = *(void *)v31;
  sub_140720();
  BOOL v44 = sub_1406C0();
  unint64_t v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v0[208] = v45;
  v0[209] = (v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v45(v41, v43);
  if (!v44)
  {
    sub_3410(v0[146] + 72, (uint64_t)(v0 + 92));
    uint64_t v59 = v0[95];
    uint64_t v60 = v0[96];
    sub_90A8(v0 + 92, v59);
    uint64_t v61 = (void *)swift_task_alloc();
    v0[223] = v61;
    void *v61 = v0;
    char v62 = sub_7DE08;
    goto LABEL_40;
  }
  char v46 = *(void **)(v0[146] + 112);
  v0[210] = v46;
  id v47 = v46;
  id v48 = [v47 timers];
  v0[211] = v48;
  if (v48)
  {
    id v49 = v48;
    uint64_t v50 = swift_task_alloc();
    v0[212] = v50;
    *(void *)(v50 + 16) = v49;
    uint64_t v51 = (void *)swift_task_alloc();
    v0[213] = v51;
    uint64_t v52 = sub_5830(&qword_17D7A8);
    *uint64_t v51 = v0;
    v51[1] = sub_7C7DC;
    uint64_t v53 = (void *)v52;
    uint64_t v54 = v0 + 142;
    unint64_t v55 = 0x8000000000148C70;
    uint64_t v56 = sub_90D78;
    unint64_t v57 = 0xD000000000000010;
LABEL_27:
    return withCheckedContinuation<A>(isolation:function:_:)(v54, 0, 0, v57, v55, v56, v50, v53);
  }

  uint64_t v71 = v0[206];
  uint64_t v72 = v0[205];
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_8F698((unint64_t)_swiftEmptyArrayStorage, v72, v71);
  v0[214] = v73;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v73)
  {
    if ([v73 state] != (char *)&dword_0 + 2)
    {
      uint64_t v88 = v0[146];
      uint64_t v50 = swift_task_alloc();
      v0[217] = v50;
      *(void *)(v50 + 16) = v73;
      *(void *)(v50 + 24) = v88;
      long long v89 = (void *)swift_task_alloc();
      v0[218] = v89;
      *long long v89 = v0;
      v89[1] = sub_7CEA8;
      uint64_t v54 = (void *)((char *)v0 + 2571);
      unint64_t v57 = 0xD000000000000017;
      unint64_t v55 = 0x8000000000148C50;
      uint64_t v53 = &type metadata for Bool;
      uint64_t v56 = sub_90D70;
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v74 = sub_141160();
    os_log_type_t v75 = sub_141480();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v76 = 0;
      _os_log_impl(&dword_0, v74, v75, "UndoTimerChangeStateFlow: Attempting to pause a paused timer: returning .failureTimerAlreadyPaused", v76, 2u);
      swift_slowDealloc();
    }

    sub_140EA0();
    uint64_t v77 = v73;
    uint64_t v78 = sub_140E70();
    v0[215] = v78;
    os_log_type_t v79 = (void *)swift_task_alloc();
    v0[216] = v79;
    void *v79 = v0;
    v79[1] = sub_7CD68;
    uint64_t v80 = v0[145];
    return sub_8D224(v80, v78);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v83 = sub_141160();
    os_log_type_t v84 = sub_141470();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v85 = 0;
      _os_log_impl(&dword_0, v83, v84, "UndoTimerChangeStateFlow: mtTimerManager.timersSync returned no timer with matching timerID: no timer to change.", v85, 2u);
      swift_slowDealloc();
    }

    uint64_t v86 = (void *)swift_task_alloc();
    v0[222] = v86;
    void *v86 = v0;
    v86[1] = sub_7DA98;
    uint64_t v87 = v0[145];
    return sub_8C244(v87);
  }
}

uint64_t sub_7C7DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_7C920, 0, 0);
}

uint64_t sub_7C920()
{
  uint64_t v1 = *(void **)(v0 + 1680);

  unint64_t v2 = *(void *)(v0 + 1136);
  uint64_t v3 = *(void *)(v0 + 1648);
  uint64_t v4 = *(void *)(v0 + 1640);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_8F698(v2, v4, v3);
  *(void *)(v0 + 1712) = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    if ([v5 state] == (char *)&dword_0 + 2)
    {
      swift_bridgeObjectRelease();
      if (qword_17B1E8 != -1) {
        swift_once();
      }
      sub_33D8(*(void *)(v0 + 1320), (uint64_t)qword_17D728);
      uint64_t v6 = sub_141160();
      os_log_type_t v7 = sub_141480();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_0, v6, v7, "UndoTimerChangeStateFlow: Attempting to pause a paused timer: returning .failureTimerAlreadyPaused", v8, 2u);
        swift_slowDealloc();
      }

      sub_140EA0();
      uint64_t v9 = v5;
      uint64_t v10 = sub_140E70();
      *(void *)(v0 + 1720) = v10;
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 1728) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_7CD68;
      uint64_t v12 = *(void *)(v0 + 1160);
      return sub_8D224(v12, v10);
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 1168);
      uint64_t v20 = swift_task_alloc();
      *(void *)(v0 + 1736) = v20;
      *(void *)(v20 + 16) = v5;
      *(void *)(v20 + 24) = v19;
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1744) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_7CEA8;
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2571, 0, 0, 0xD000000000000017, 0x8000000000148C50, sub_90D70, v20, &type metadata for Bool);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 1320), (uint64_t)qword_17D728);
    uint64_t v14 = sub_141160();
    os_log_type_t v15 = sub_141470();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "UndoTimerChangeStateFlow: mtTimerManager.timersSync returned no timer with matching timerID: no timer to change.", v16, 2u);
      swift_slowDealloc();
    }

    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 1776) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_7DA98;
    uint64_t v18 = *(void *)(v0 + 1160);
    return sub_8C244(v18);
  }
}

uint64_t sub_7CD68()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 1720);
  swift_task_dealloc();

  return _swift_task_switch(sub_91510, 0, 0);
}

uint64_t sub_7CEA8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_7CFEC, 0, 0);
}

uint64_t sub_7CFEC()
{
  if (*(unsigned char *)(v0 + 2571) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 1712);
    unint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 1752) = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_7D26C;
    uint64_t v3 = *(void *)(v0 + 1656);
    v2[4] = *(void *)(v0 + 1168);
    v2[3] = v3;
    v2[2] = v1;
    return _swift_task_switch(sub_8E164, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 1320), (uint64_t)qword_17D728);
    uint64_t v4 = sub_141160();
    os_log_type_t v5 = sub_141470();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_0, v4, v5, "UndoTimerChangeStateFlow: Failed to pause mtTimer", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 1512);
    uint64_t v8 = *(void *)(v0 + 1504);
    uint64_t v9 = *(void *)(v0 + 1496);

    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, enum case for SiriTimeEventSender.ReasonDescription.failedToPauseTimer(_:), v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 1768) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_7D6C0;
    uint64_t v11 = *(void *)(v0 + 1512);
    uint64_t v12 = *(void *)(v0 + 1160);
    return sub_8BA40(v12, v11);
  }
}

uint64_t sub_7D26C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1760) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_7D398, 0, 0);
}

uint64_t sub_7D398()
{
  if (*(void *)(v0 + 1760))
  {

    uint64_t v1 = *(void **)(v0 + 1760);
    *(void *)(v0 + 1880) = v1;
    uint64_t v2 = *(void *)(v0 + 1488);
    id v3 = v1;
    *(void *)(v0 + 1888) = sub_5830(&qword_17BF00);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_142E80;
    *(void *)(v4 + 32) = v3;
    unint64_t v20 = v4;
    sub_141330();
    v3;
    sub_15E9C(v20, v2);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1896) = sub_174C0(0, 0);
    sub_13EC50();
    sub_140DF0();
    sub_140DE0();
    uint64_t v5 = *(void *)(v0 + 880);
    uint64_t v6 = *(void *)(v0 + 888);
    sub_90A8((void *)(v0 + 856), v5);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 1904) = v7;
    void *v7 = v0;
    v7[1] = sub_7F460;
    uint64_t v8 = *(void *)(v0 + 1648);
    uint64_t v9 = *(void *)(v0 + 1640);
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v9, v8, v5, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 1320), (uint64_t)qword_17D728);
    uint64_t v10 = sub_141160();
    os_log_type_t v11 = sub_141470();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "UndoTimerChangeStateFlow: Failed to pause mtTimer", v12, 2u);
      swift_slowDealloc();
    }
    uint64_t v13 = *(void *)(v0 + 1512);
    uint64_t v14 = *(void *)(v0 + 1504);
    uint64_t v15 = *(void *)(v0 + 1496);

    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, enum case for SiriTimeEventSender.ReasonDescription.failedToPauseTimer(_:), v15);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 1768) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_7D6C0;
    uint64_t v17 = *(void *)(v0 + 1512);
    uint64_t v18 = *(void *)(v0 + 1160);
    return sub_8BA40(v18, v17);
  }
}

uint64_t sub_7D6C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1504);
  uint64_t v3 = *(void *)(*(void *)v0 + 1496);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_7D844, 0, 0);
}

uint64_t sub_7D844()
{
  uint64_t v1 = *(void *)(v0 + 1168);

  sub_903C8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_7DA98()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_7DBC0, 0, 0);
}

uint64_t sub_7DBC0()
{
  sub_903C8(*(void *)(v0 + 1168));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7DE08(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1792) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_7DF34, 0, 0);
}

uint64_t sub_7DF34()
{
  uint64_t v1 = (uint64_t)(v0 + 92);
  uint64_t v2 = (void *)v0[224];
  if (v2)
  {
    _s20HandleIntentStrategyVwxx_1(v1);
    [v2 state];
    uint64_t v3 = sub_140F70();
    if (v3 == sub_140F70())
    {
      swift_bridgeObjectRelease();
      if (qword_17B1E8 != -1) {
        swift_once();
      }
      sub_33D8(v0[165], (uint64_t)qword_17D728);
      uint64_t v4 = sub_141160();
      os_log_type_t v5 = sub_141480();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl(&dword_0, v4, v5, "UndoTimerChangeStateFlow: Attempting to pause a paused timer: returning .failureTimerAlreadyPaused", v6, 2u);
        swift_slowDealloc();
      }

      uint64_t v7 = (void *)swift_task_alloc();
      v0[225] = v7;
      void *v7 = v0;
      v7[1] = sub_7E1D8;
      uint64_t v8 = v0[145];
      return sub_8D224(v8, (uint64_t)v2);
    }
  }
  else
  {
    _s20HandleIntentStrategyVwxx_1(v1);
  }
  uint64_t v10 = (void *)swift_task_alloc();
  v0[226] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_7E554;
  uint64_t v11 = v0[146];
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 2572, 0, 0, 0xD000000000000011, 0x8000000000148BD0, sub_90C7C, v11, &type metadata for Bool);
}

uint64_t sub_7E1D8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_7E300, 0, 0);
}

uint64_t sub_7E300()
{
  uint64_t v1 = *(void *)(v0 + 1168);

  sub_903C8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_7E554()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_7E67C, 0, 0);
}

uint64_t sub_7E67C()
{
  if (*(unsigned char *)(v0 + 2572) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 1656);
    uint64_t v2 = *(void *)(v0 + 1168);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 1816) = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 1824) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_7E880;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2568, 0, 0, 0xD00000000000001DLL, 0x8000000000148C30, sub_90D04, v3, &type metadata for Bool);
  }
  else
  {
    *(unsigned char *)(v0 + 2573) = 0;
    sub_3410(*(void *)(v0 + 1168) + 72, v0 + 816);
    uint64_t v5 = *(void *)(v0 + 840);
    uint64_t v6 = *(void *)(v0 + 848);
    sub_90A8((void *)(v0 + 816), v5);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 1864) = v7;
    void *v7 = v0;
    v7[1] = sub_7F0B0;
    return dispatch thunk of SiriTimerManagerIOS.currentTimer()(v5, v6);
  }
}

uint64_t sub_7E880()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_7E9C4, 0, 0);
}

uint64_t sub_7E9C4()
{
  if (*(unsigned char *)(v0 + 2568) == 1)
  {
    sub_3410(*(void *)(v0 + 1168) + 72, v0 + 56);
    uint64_t v1 = *(void *)(v0 + 80);
    uint64_t v2 = *(void *)(v0 + 88);
    sub_90A8((void *)(v0 + 56), v1);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 1832) = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_7EB3C;
  }
  else
  {
    *(unsigned char *)(v0 + 2573) = 0;
    sub_3410(*(void *)(v0 + 1168) + 72, v0 + 816);
    uint64_t v1 = *(void *)(v0 + 840);
    uint64_t v2 = *(void *)(v0 + 848);
    sub_90A8((void *)(v0 + 816), v1);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 1864) = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_7F0B0;
  }
  v3[1] = v4;
  return dispatch thunk of SiriTimerManagerIOS.currentTimer()(v1, v2);
}

uint64_t sub_7EB3C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1840) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_7EC68, 0, 0);
}

uint64_t sub_7EC68()
{
  uint64_t v1 = v0 + 56;
  uint64_t v2 = *(void *)(v0 + 1840);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 1168);
    _s20HandleIntentStrategyVwxx_1(v1);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 1848) = v4;
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 1856) = v5;
    void *v5 = v0;
    v5[1] = sub_7EE64;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2570, 0, 0, 0x6D69546573756170, 0xEE00293A5F287265, sub_90D10, v4, &type metadata for Bool);
  }
  else
  {
    _s20HandleIntentStrategyVwxx_1(v1);
    *(unsigned char *)(v0 + 2573) = 0;
    sub_3410(*(void *)(v0 + 1168) + 72, v0 + 816);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v7 = *(void *)(v0 + 848);
    sub_90A8((void *)(v0 + 816), v6);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 1864) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_7F0B0;
    return dispatch thunk of SiriTimerManagerIOS.currentTimer()(v6, v7);
  }
}

uint64_t sub_7EE64()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_7EFA8, 0, 0);
}

uint64_t sub_7EFA8()
{
  char v1 = *(unsigned char *)(v0 + 2570);

  *(unsigned char *)(v0 + 2573) = v1;
  sub_3410(*(void *)(v0 + 1168) + 72, v0 + 816);
  uint64_t v2 = *(void *)(v0 + 840);
  uint64_t v3 = *(void *)(v0 + 848);
  sub_90A8((void *)(v0 + 816), v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1864) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_7F0B0;
  return dispatch thunk of SiriTimerManagerIOS.currentTimer()(v2, v3);
}

uint64_t sub_7F0B0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1872) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_7F1DC, 0, 0);
}

uint64_t sub_7F1DC()
{
  uint64_t v1 = *(void *)(v0 + 1872);
  int v2 = *(unsigned __int8 *)(v0 + 2573);
  _s20HandleIntentStrategyVwxx_1(v0 + 816);
  if (v2 != 1 || v1 == 0)
  {
    uint64_t v4 = *(void *)(v0 + 1512);
    uint64_t v5 = *(void *)(v0 + 1504);
    uint64_t v6 = *(void *)(v0 + 1496);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for SiriTimeEventSender.ReasonDescription.failedToPauseTimer(_:), v6);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 2120) = v7;
    void *v7 = v0;
    v7[1] = sub_81C1C;
    uint64_t v8 = *(void *)(v0 + 1512);
    uint64_t v9 = *(void *)(v0 + 1160);
    return sub_8BA40(v9, v8);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 1872);
    *(void *)(v0 + 1880) = v11;
    uint64_t v12 = *(void *)(v0 + 1488);
    id v13 = v11;
    *(void *)(v0 + 1888) = sub_5830(&qword_17BF00);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_142E80;
    *(void *)(v14 + 32) = v13;
    unint64_t v20 = v14;
    sub_141330();
    v13;
    sub_15E9C(v20, v12);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1896) = sub_174C0(0, 0);
    sub_13EC50();
    sub_140DF0();
    sub_140DE0();
    uint64_t v15 = *(void *)(v0 + 880);
    uint64_t v16 = *(void *)(v0 + 888);
    sub_90A8((void *)(v0 + 856), v15);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 1904) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_7F460;
    uint64_t v18 = *(void *)(v0 + 1648);
    uint64_t v19 = *(void *)(v0 + 1640);
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v19, v18, v15, v16);
  }
}

uint64_t sub_7F460(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1912) = a1;
  *(void *)(v3 + 1920) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_7F5B0, 0, 0);
}

uint64_t sub_7F5B0()
{
  os_log_type_t v79 = (void *)(v0 + 976);
  uint64_t v1 = *(void *)(v0 + 1920);
  uint64_t v2 = *(void *)(v0 + 1360);
  uint64_t v3 = *(void *)(v0 + 1352);
  uint64_t v4 = *(void *)(v0 + 1344);
  _s20HandleIntentStrategyVwxx_1(v0 + 856);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 896), *(void *)(v0 + 920));
  char v5 = sub_13EC10();
  *(unsigned char *)(v0 + 2574) = v5 & 1;
  char v6 = v5 & (v1 != 0);
  _s20HandleIntentStrategyVwxx_1(v0 + 896);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v4);
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 1336);
  uint64_t v8 = *(void *)(v0 + 1328);
  uint64_t v9 = *(void *)(v0 + 1320);
  uint64_t v10 = sub_33D8(v9, (uint64_t)qword_17D728);
  *(void *)(v0 + 1928) = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v79, *(void *)(v0 + 1000));
  char v11 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v79);
  if (v6 & 1 | ((v11 & 1) == 0))
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 1664);
    uint64_t v13 = *(void *)(v0 + 1536);
    uint64_t v14 = *(void *)(v0 + 1520);
    sub_140720();
    BOOL v15 = sub_1406C0();
    v12(v13, v14);
    uint64_t v16 = *(void *)(v0 + 1896);
    if (v15)
    {
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_142E80;
      *(void *)(v17 + 32) = v16;
      uint64_t v81 = v17;
      sub_141330();
      *(void *)(v0 + 1936) = v81;
      swift_retain();
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 1944) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_801A8;
      return sub_10C9F4(v81);
    }
    else
    {
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_142E80;
      *(void *)(v44 + 32) = v16;
      uint64_t v84 = v44;
      sub_141330();
      *(void *)(v0 + 1976) = v84;
      swift_retain();
      unint64_t v45 = (void *)swift_task_alloc();
      *(void *)(v0 + 1984) = v45;
      *unint64_t v45 = v0;
      v45[1] = sub_807F0;
      return sub_1353D8(v84);
    }
  }
  unint64_t v20 = *(void **)(v0 + 1880);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_142E80;
  *(void *)(v21 + 32) = v20;
  unint64_t v82 = v21;
  sub_141330();
  id v22 = v20;
  id v23 = sub_79174(v82, 13);
  *(void *)(v0 + 2024) = v23;
  swift_bridgeObjectRelease();
  if (v23)
  {
    unint64_t v24 = self;
    *(void *)(v0 + 1144) = 0;
    id v25 = [v24 archivedDataWithRootObject:v23 requiringSecureCoding:1 error:v0 + 1144];
    uint64_t v26 = *(void **)(v0 + 1144);
    if (v25)
    {
      uint64_t v27 = v25;
      uint64_t v28 = *(void *)(v0 + 1896);
      os_log_type_t v29 = *(void **)(v0 + 1240);
      uint64_t v77 = *(void *)(v0 + 1232);
      uint64_t v30 = *(void *)(v0 + 1224);
      id v31 = v26;
      uint64_t v32 = sub_13E4D0();
      unint64_t v34 = v33;

      *(void *)(v0 + 2032) = v32;
      *(void *)(v0 + 2040) = v34;
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_142E80;
      *(void *)(v35 + 32) = v28;
      uint64_t v83 = v35;
      sub_141330();
      *(void *)(v0 + 2048) = v83;
      swift_retain();
      sub_34B1C(v32, v34);
      uint64_t v36 = (uint64_t)v29 + *(int *)(v77 + 24);
      uint64_t v37 = sub_140500();
      uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
      v38(v36, 1, 1, v37);
      *os_log_type_t v29 = 0;
      v29[1] = v83;
      swift_bridgeObjectRetain();
      sub_13E4C0(0);
      sub_1404D0();
      v38(v30, 0, 1, v37);
      sub_90C18(v30, v36, &qword_17BE78);
      sub_1404A0();
      if (qword_17B240 != -1) {
        swift_once();
      }
      uint64_t v39 = *(uint64_t **)(v0 + 1240);
      swift_retain();
      uint64_t v40 = sub_140490();
      swift_release();
      *uint64_t v39 = v40;
      uint64_t v41 = sub_134874();
      *(void *)(v0 + 2056) = v41;
      uint64_t v42 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v43 = (void *)swift_task_alloc();
      *(void *)(v0 + 2064) = v43;
      *uint64_t v43 = v0;
      v43[1] = sub_80D84;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                                  + v42))(0xD000000000000019, 0x8000000000148C10, v41);
    }
    id v57 = v26;
    swift_bridgeObjectRelease();
    sub_13E460();

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v46 = sub_141160();
    os_log_type_t v47 = sub_141480();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v48 = 0;
      _os_log_impl(&dword_0, v46, v47, "Could not get timer action from timer.", v48, 2u);
      swift_slowDealloc();
    }
    id v49 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
    uint64_t v50 = *(void *)(v0 + 1552);
    uint64_t v51 = *(void *)(v0 + 1544);
    uint64_t v52 = *(void *)(v0 + 1504);
    uint64_t v53 = *(void *)(v0 + 1496);
    uint64_t v54 = *(void *)(v0 + 1168);

    (*(void (**)(uint64_t, void, uint64_t))(v52 + 104))(v50, enum case for SiriTimeEventSender.ReasonDescription.failedToCastTimer(_:), v53);
    v49(v50, 0, 1, v53);
    sub_19914(v50, v51, &qword_17C068);
    uint64_t v55 = v54 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
    swift_beginAccess();
    sub_90C18(v51, v55, &qword_17C068);
    swift_endAccess();
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v56 = 1;
    swift_willThrow();
  }
  uint64_t v58 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
  uint64_t v59 = *(void *)(v0 + 1552);
  uint64_t v60 = *(void *)(v0 + 1544);
  uint64_t v61 = *(void *)(v0 + 1496);
  uint64_t v62 = *(void *)(v0 + 1168);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1504) + 104))(v59, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v61);
  v58(v59, 0, 1, v61);
  sub_19914(v59, v60, &qword_17C068);
  uint64_t v63 = v62 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v60, v63, &qword_17C068);
  swift_endAccess();
  uint64_t v64 = sub_141160();
  os_log_type_t v65 = sub_141470();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v66 = 0;
    _os_log_impl(&dword_0, v64, v65, "UndoTimerChangeStateFlow: Error publishing Success output.", v66, 2u);
    swift_slowDealloc();
  }
  BOOL v67 = *(void **)(v0 + 1880);
  uint64_t v68 = *(void *)(v0 + 1472);
  uint64_t v78 = *(void *)(v0 + 1464);
  uint64_t v80 = *(void *)(v0 + 1488);
  uint64_t v76 = *(void *)(v0 + 1456);
  uint64_t v69 = *(void *)(v0 + 1408);
  uint64_t v70 = *(void *)(v0 + 1400);
  uint64_t v71 = *(void *)(v0 + 1392);
  uint64_t v72 = *(void *)(v0 + 1376);
  uint64_t v73 = *(void *)(v0 + 1368);
  swift_errorRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v76, v70);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v80, v78);
  uint64_t v74 = *(void *)(v0 + 1168);
  sub_13EF00();
  sub_903C8(v74);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v75 = *(uint64_t (**)(void))(v0 + 8);
  return v75();
}

uint64_t sub_801A8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1952) = a1;
  *(void *)(v3 + 1960) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_8817C;
  }
  else
  {
    uint64_t v4 = sub_8032C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_8032C()
{
  uint64_t v1 = (_OWORD *)(v0 + 616);
  if (*(unsigned char *)(v0 + 2574) != 1 || *(void *)(v0 + 1920) == 0)
  {
    uint64_t v3 = *(uint64_t **)(v0 + 1312);
    uint64_t v4 = *(void *)(v0 + 1296);
    sub_5830(&qword_17C358);
    uint64_t v5 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
    unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_142D50;
    sub_1B94C((void *)(v7 + v6));
    *uint64_t v3 = v7;
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 640) = v4;
    *(void *)(v0 + 648) = sub_91184((unint64_t *)&qword_17C348, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v8 = sub_187EC((uint64_t *)(v0 + 616));
    sub_4ED84((uint64_t)v3, (uint64_t)v8);
  }
  else
  {
    *(void *)(v0 + 648) = 0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 632) = 0u;
  }
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 1968) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_80568;
  uint64_t v10 = *(void *)(v0 + 1920);
  uint64_t v11 = *(void *)(v0 + 1912);
  uint64_t v12 = *(void *)(v0 + 1488);
  uint64_t v13 = *(void *)(v0 + 1456);
  uint64_t v14 = *(void *)(v0 + 1392);
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v0 + 336, v13, v12, v1, v14, v11, v10, 0xD000000000000018);
}

uint64_t sub_80568()
{
  uint64_t v1 = *(void *)v0 + 616;
  uint64_t v2 = *(void **)(*(void *)v0 + 1952);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_806E0, 0, 0);
}

uint64_t sub_806E0()
{
  sub_3498((long long *)(v0 + 336), v0 + 936);
  sub_13F170();
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 528);
  sub_90A8((void *)(v0 + 496), v1);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 2104) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_817EC;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 936, v1, v2);
}

uint64_t sub_807F0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1992) = a1;
  *(void *)(v3 + 2000) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_88580;
  }
  else
  {
    uint64_t v4 = sub_80974;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_80974()
{
  uint64_t v1 = v0[240];
  uint64_t v2 = v0[239];
  uint64_t v3 = v0[186];
  sub_13EC50();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[251] = v5;
  void *v5 = v0;
  v5[1] = sub_80AC0;
  uint64_t v6 = v0[174];
  uint64_t v7 = v0[161];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v0 + 97, v7, v6);
}

uint64_t sub_80AC0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2016) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[249];
  (*(void (**)(void, void))(v2[157] + 8))(v2[161], v2[156]);

  if (v0) {
    uint64_t v4 = sub_88984;
  }
  else {
    uint64_t v4 = sub_80C74;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_80C74()
{
  sub_3498((long long *)(v0 + 776), v0 + 936);
  sub_13F170();
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 528);
  sub_90A8((void *)(v0 + 496), v1);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 2104) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_817EC;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 936, v1, v2);
}

uint64_t sub_80D84(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2072) = a1;
  *(void *)(v3 + 2080) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_8125C;
  }
  else {
    uint64_t v4 = sub_80EF0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_80EF0()
{
  unint64_t v1 = v0[255];
  uint64_t v2 = v0[254];
  uint64_t v3 = v0[240];
  uint64_t v4 = v0[186];
  uint64_t v5 = v0[182];
  uint64_t v6 = v0[180];
  uint64_t v7 = v0[176];
  uint64_t v8 = v0[175];
  uint64_t v14 = v0[239];
  sub_90CA4(v0[155], type metadata accessor for PauseTimerHandledOnWatchParameters);
  sub_34B88(v2, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
  uint64_t v9 = (void *)swift_task_alloc();
  void v9[2] = v4;
  v9[3] = v14;
  v9[4] = v3;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[261] = (uint64_t)v10;
  *uint64_t v10 = v0;
  v10[1] = sub_810A8;
  uint64_t v11 = v0[174];
  uint64_t v12 = v0[160];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v0 + 82, v12, v11);
}

uint64_t sub_810A8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2096) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[259];
  (*(void (**)(void, void))(v2[157] + 8))(v2[160], v2[156]);

  if (v0) {
    uint64_t v4 = sub_88D88;
  }
  else {
    uint64_t v4 = sub_816BC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_8125C()
{
  unint64_t v1 = v0[255];
  uint64_t v2 = v0[254];
  uint64_t v3 = (void *)v0[253];
  sub_90CA4(v0[155], type metadata accessor for PauseTimerHandledOnWatchParameters);
  sub_34B88(v2, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_34B88(v2, v1);
  uint64_t v4 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v5 = v0[194];
  uint64_t v6 = v0[193];
  uint64_t v7 = v0[187];
  uint64_t v8 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v5, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v7);
  v4(v5, 0, 1, v7);
  sub_19914(v5, v6, &qword_17C068);
  uint64_t v9 = v8 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v6, v9, &qword_17C068);
  swift_endAccess();
  uint64_t v10 = sub_141160();
  os_log_type_t v11 = sub_141470();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "UndoTimerChangeStateFlow: Error publishing Success output.", v12, 2u);
    swift_slowDealloc();
  }
  uint64_t v13 = (void *)v0[235];
  uint64_t v14 = v0[184];
  uint64_t v24 = v0[183];
  uint64_t v25 = v0[186];
  uint64_t v23 = v0[182];
  uint64_t v15 = v0[176];
  uint64_t v16 = v0[175];
  uint64_t v17 = v0[174];
  uint64_t v18 = v0[172];
  uint64_t v19 = v0[171];
  swift_errorRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v23, v16);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v25, v24);
  uint64_t v20 = v0[146];
  sub_13EF00();
  sub_903C8(v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_816BC()
{
  unint64_t v1 = *(void *)(v0 + 2040);
  uint64_t v2 = *(void *)(v0 + 2032);

  sub_34B88(v2, v1);
  sub_3498((long long *)(v0 + 656), v0 + 936);
  sub_13F170();
  uint64_t v3 = *(void *)(v0 + 520);
  uint64_t v4 = *(void *)(v0 + 528);
  sub_90A8((void *)(v0 + 496), v3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 2104) = v5;
  void *v5 = v0;
  v5[1] = sub_817EC;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 936, v3, v4);
}

uint64_t sub_817EC()
{
  *(void *)(*(void *)v1 + 2112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_891A8;
  }
  else {
    uint64_t v2 = sub_8192C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_8192C()
{
  uint64_t v1 = (void *)v0[235];
  uint64_t v13 = v0[186];
  uint64_t v2 = v0[184];
  uint64_t v12 = v0[183];
  uint64_t v3 = v0[182];
  uint64_t v4 = v0[176];
  uint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  uint64_t v7 = v0[172];
  uint64_t v8 = v0[171];
  swift_release();

  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 117));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 62));
  uint64_t v9 = v0[146];
  sub_13EF00();
  sub_903C8(v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_81C1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1504);
  uint64_t v3 = *(void *)(*(void *)v0 + 1496);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_81DA0, 0, 0);
}

uint64_t sub_81DA0()
{
  uint64_t v1 = *(void *)(v0 + 1168);

  sub_903C8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_81FF4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1504);
  uint64_t v3 = *(void *)(*(void *)v0 + 1496);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_91670, 0, 0);
}

uint64_t sub_82178(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 2152);
  *(void *)(*(void *)v1 + 2168) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_822C0, 0, 0);
}

uint64_t sub_822C0()
{
  unint64_t v1 = v0[271];
  uint64_t v2 = v0[206];
  uint64_t v3 = v0[205];
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_8F698(v1, v3, v2);
  v0[272] = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    if ([v4 state] == (char *)&dword_0 + 3)
    {
      swift_bridgeObjectRelease();
      if (qword_17B1E8 != -1) {
        swift_once();
      }
      sub_33D8(v0[165], (uint64_t)qword_17D728);
      uint64_t v5 = sub_141160();
      os_log_type_t v6 = sub_141480();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_0, v5, v6, "UndoTimerChangeStateFlow: Attempting to resume a running timer: returning .failureTimerAlreadyRunning", v7, 2u);
        swift_slowDealloc();
      }

      sub_140EA0();
      uint64_t v8 = v4;
      uint64_t v9 = sub_140E70();
      v0[273] = v9;
      uint64_t v10 = (void *)swift_task_alloc();
      v0[274] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_826BC;
      uint64_t v11 = v0[145];
      return sub_8CA48(v11, v9);
    }
    else
    {
      uint64_t v18 = (void *)swift_task_alloc();
      v0[275] = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_82A50;
      uint64_t v19 = v0[146];
      v18[8] = 3;
      v18[9] = v19;
      v18[7] = v4;
      return _swift_task_switch(sub_8DA18, 0, 0);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v13 = sub_141160();
    os_log_type_t v14 = sub_141470();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "UndoTimerChangeStateFlow: mtTimerManager.timersSync returned no timer with matching timerID: no timer to change.", v15, 2u);
      swift_slowDealloc();
    }

    uint64_t v16 = (void *)swift_task_alloc();
    v0[278] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_83004;
    uint64_t v17 = v0[145];
    return sub_8C244(v17);
  }
}

uint64_t sub_826BC()
{
  unint64_t v1 = *(void **)(*(void *)v0 + 2184);
  swift_task_dealloc();

  return _swift_task_switch(sub_827FC, 0, 0);
}

uint64_t sub_827FC()
{
  uint64_t v1 = *(void *)(v0 + 1168);

  sub_903C8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_82A50(uint64_t a1)
{
  *(void *)(*(void *)v1 + 2208) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_82B7C, 0, 0);
}

uint64_t sub_82B7C()
{
  uint64_t v1 = *(void **)(v0 + 2208);
  if (v1)
  {

    *(void *)(v0 + 2320) = *(void *)(v0 + 2208);
    *(void *)(v0 + 2312) = v1;
    uint64_t v2 = *(void *)(v0 + 1480);
    id v3 = v1;
    *(void *)(v0 + 2328) = sub_5830(&qword_17BF00);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_142E80;
    *(void *)(v4 + 32) = v3;
    unint64_t v21 = v4;
    sub_141330();
    id v5 = v3;
    sub_15E9C(v21, v2);
    swift_bridgeObjectRelease();
    sub_140DF0();
    sub_140DE0();
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 168);
    sub_90A8((void *)(v0 + 136), v6);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 2336) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_845D0;
    uint64_t v9 = *(void *)(v0 + 1648);
    uint64_t v10 = *(void *)(v0 + 1640);
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v10, v9, v6, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 1320), (uint64_t)qword_17D728);
    uint64_t v11 = sub_141160();
    os_log_type_t v12 = sub_141470();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v11, v12, "UndoTimerChangeStateFlow: Failed to resume mtTimer", v13, 2u);
      swift_slowDealloc();
    }
    uint64_t v14 = *(void *)(v0 + 1512);
    uint64_t v15 = *(void *)(v0 + 1504);
    uint64_t v16 = *(void *)(v0 + 1496);

    (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v14, enum case for SiriTimeEventSender.ReasonDescription.failedToResumeTimer(_:), v16);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 2216) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_82E80;
    uint64_t v18 = *(void *)(v0 + 1512);
    uint64_t v19 = *(void *)(v0 + 1160);
    return sub_8BA40(v19, v18);
  }
}

uint64_t sub_82E80()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1504);
  uint64_t v3 = *(void *)(*(void *)v0 + 1496);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_91584, 0, 0);
}

uint64_t sub_83004()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_91670, 0, 0);
}

uint64_t sub_8312C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 2240) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_83258, 0, 0);
}

uint64_t sub_83258()
{
  uint64_t v1 = (void *)v0[280];
  if (!v1)
  {
    swift_bridgeObjectRelease();
    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v8 = sub_141160();
    os_log_type_t v9 = sub_141470();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "UndoTimerChangeStateFlow: siriTimerManager.currentTimerSync get nil result: no timers to operate on.", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = (void *)swift_task_alloc();
    v0[288] = v6;
    *uint64_t v6 = v0;
    uint64_t v7 = sub_844A8;
    goto LABEL_24;
  }
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  [v1 state];
  uint64_t v2 = sub_140F70();
  if (v2 == sub_140F70())
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v3 = sub_141160();
    os_log_type_t v4 = sub_141480();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_0, v3, v4, "UndoTimerChangeStateFlow: Timer has an unknown state (meaning there's no timer set on phone): No timers to operate on.", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = (void *)swift_task_alloc();
    v0[287] = v6;
    *uint64_t v6 = v0;
    uint64_t v7 = sub_84380;
LABEL_24:
    v6[1] = v7;
    uint64_t v23 = v0[145];
    return sub_8C244(v23);
  }
  id v11 = [v1 identifier];
  if (!v11)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v20 = sub_141160();
    os_log_type_t v21 = sub_141470();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "UndoTimerChangeStateFlow: UndoTimerChangeState target timer id does not match current timer id.", v22, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = (void *)swift_task_alloc();
    v0[286] = v6;
    *uint64_t v6 = v0;
    uint64_t v7 = sub_84258;
    goto LABEL_24;
  }
  os_log_type_t v12 = v11;
  uint64_t v13 = v0[206];
  uint64_t v14 = v0[205];
  uint64_t v15 = sub_141250();
  uint64_t v17 = v16;

  if (v15 == v14 && v13 == v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_141AA0();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      goto LABEL_19;
    }
  }
  [v1 state];
  uint64_t v25 = sub_140F70();
  if (v25 == sub_140F70())
  {
    swift_bridgeObjectRelease();
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    sub_33D8(v0[165], (uint64_t)qword_17D728);
    uint64_t v26 = sub_141160();
    os_log_type_t v27 = sub_141480();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "UndoTimerChangeStateFlow: Attempting to resume a running timer: returning .failureTimerAlreadyRunning", v28, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v29 = (void *)swift_task_alloc();
    v0[281] = v29;
    *os_log_type_t v29 = v0;
    v29[1] = sub_83904;
    uint64_t v30 = v0[145];
    return sub_8CA48(v30, (uint64_t)v1);
  }
  else
  {
    uint64_t v31 = v0[146];
    uint64_t v32 = swift_task_alloc();
    v0[282] = v32;
    *(void *)(v32 + 16) = v31;
    *(void *)(v32 + 24) = v1;
    unint64_t v33 = (void *)swift_task_alloc();
    v0[283] = v33;
    *unint64_t v33 = v0;
    v33[1] = sub_83C80;
    return withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 2569, 0, 0, 0x6954656D75736572, 0xEF293A5F2872656DLL, sub_90BB8, v32, &type metadata for Bool);
  }
}

uint64_t sub_83904()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_83A2C, 0, 0);
}

uint64_t sub_83A2C()
{
  uint64_t v1 = *(void *)(v0 + 1168);

  sub_903C8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_83C80()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_83DC4, 0, 0);
}

uint64_t sub_83DC4()
{
  uint64_t v1 = *(void *)(v0 + 1168) + 72;
  *(unsigned char *)(v0 + 2575) = *(unsigned char *)(v0 + 2569);
  sub_3410(v1, v0 + 96);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_90A8((void *)(v0 + 96), v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 2272) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_83EC0;
  return dispatch thunk of SiriTimerManagerIOS.currentTimer()(v2, v3);
}

uint64_t sub_83EC0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 2280) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_83FEC, 0, 0);
}

uint64_t sub_83FEC()
{
  uint64_t v1 = *(void *)(v0 + 2280);
  int v2 = *(unsigned __int8 *)(v0 + 2575);

  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  if (v2 != 1 || v1 == 0)
  {
    uint64_t v4 = *(void *)(v0 + 1512);
    uint64_t v5 = *(void *)(v0 + 1504);
    uint64_t v6 = *(void *)(v0 + 1496);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for SiriTimeEventSender.ReasonDescription.failedToResumeTimer(_:), v6);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 2552) = v7;
    void *v7 = v0;
    v7[1] = sub_87C20;
    uint64_t v8 = *(void *)(v0 + 1512);
    uint64_t v9 = *(void *)(v0 + 1160);
    return sub_8BA40(v9, v8);
  }
  else
  {
    id v11 = *(void **)(v0 + 2280);
    *(void *)(v0 + 2320) = v11;
    *(void *)(v0 + 2312) = v11;
    uint64_t v12 = *(void *)(v0 + 1480);
    id v13 = v11;
    *(void *)(v0 + 2328) = sub_5830(&qword_17BF00);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_142E80;
    *(void *)(v14 + 32) = v13;
    unint64_t v21 = v14;
    sub_141330();
    id v15 = v13;
    sub_15E9C(v21, v12);
    swift_bridgeObjectRelease();
    sub_140DF0();
    sub_140DE0();
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v17 = *(void *)(v0 + 168);
    sub_90A8((void *)(v0 + 136), v16);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 2336) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_845D0;
    uint64_t v19 = *(void *)(v0 + 1648);
    uint64_t v20 = *(void *)(v0 + 1640);
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v20, v19, v16, v17);
  }
}

uint64_t sub_84258()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_915F8, 0, 0);
}

uint64_t sub_84380()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_915F8, 0, 0);
}

uint64_t sub_844A8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_91670, 0, 0);
}

uint64_t sub_845D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2344) = a1;
  *(void *)(v3 + 2352) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_84720, 0, 0);
}

uint64_t sub_84720()
{
  uint64_t v77 = (void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 2352);
  uint64_t v2 = *(void *)(v0 + 1360);
  uint64_t v3 = *(void *)(v0 + 1352);
  uint64_t v4 = *(void *)(v0 + 1344);
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 176), *(void *)(v0 + 200));
  char v5 = sub_13EC10();
  *(unsigned char *)(v0 + 2576) = v5 & 1;
  char v6 = v5 & (v1 != 0);
  _s20HandleIntentStrategyVwxx_1(v0 + 176);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v4);
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 1336);
  uint64_t v8 = *(void *)(v0 + 1328);
  uint64_t v9 = *(void *)(v0 + 1320);
  uint64_t v10 = sub_33D8(v9, (uint64_t)qword_17D728);
  *(void *)(v0 + 2360) = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v77, *(void *)(v0 + 280));
  char v11 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v77);
  if (v6 & 1 | ((v11 & 1) == 0))
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 2136);
    uint64_t v13 = *(void *)(v0 + 1536);
    uint64_t v14 = *(void *)(v0 + 1520);
    sub_140720();
    BOOL v15 = sub_1406C0();
    v12(v13, v14);
    if (v15)
    {
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_142E80;
      *(void *)(v16 + 32) = sub_174C0(0, 0);
      sub_141330();
      *(void *)(v0 + 2368) = v16;
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 2376) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_852F0;
      return sub_4F260(v16);
    }
    else
    {
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_142E80;
      *(void *)(v43 + 32) = sub_174C0(0, 0);
      sub_141330();
      *(void *)(v0 + 2408) = v43;
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 2416) = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_85E34;
      return sub_CA79C(v43);
    }
  }
  uint64_t v19 = *(void **)(v0 + 2312);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_142E80;
  *(void *)(v20 + 32) = v19;
  unint64_t v78 = v20;
  sub_141330();
  id v21 = v19;
  id v22 = sub_79174(v78, 13);
  *(void *)(v0 + 2456) = v22;
  swift_bridgeObjectRelease();
  if (v22)
  {
    uint64_t v23 = self;
    *(void *)(v0 + 1152) = 0;
    id v24 = [v23 archivedDataWithRootObject:v22 requiringSecureCoding:1 error:v0 + 1152];
    uint64_t v25 = *(void **)(v0 + 1152);
    if (v24)
    {
      uint64_t v26 = v24;
      uint64_t v27 = *(void *)(v0 + 1224);
      uint64_t v28 = *(void **)(v0 + 1216);
      uint64_t v76 = *(void *)(v0 + 1208);
      id v29 = v25;
      uint64_t v30 = sub_13E4D0();
      unint64_t v32 = v31;

      *(void *)(v0 + 2464) = v30;
      *(void *)(v0 + 2472) = v32;
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_142E80;
      *(void *)(v33 + 32) = sub_174C0(0, 0);
      sub_141330();
      uint64_t v34 = v33;
      *(void *)(v0 + 2480) = v33;
      sub_34B1C(v30, v32);
      uint64_t v35 = (uint64_t)v28 + *(int *)(v76 + 24);
      uint64_t v36 = sub_140500();
      uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
      v37(v35, 1, 1, v36);
      *uint64_t v28 = 0;
      v28[1] = v34;
      swift_bridgeObjectRetain();
      sub_13E4C0(0);
      sub_1404D0();
      v37(v27, 0, 1, v36);
      sub_90C18(v27, v35, &qword_17BE78);
      sub_1404A0();
      if (qword_17B240 != -1) {
        swift_once();
      }
      uint64_t v38 = *(uint64_t **)(v0 + 1216);
      swift_retain();
      uint64_t v39 = sub_140490();
      swift_release();
      *uint64_t v38 = v39;
      uint64_t v40 = sub_C9C44();
      *(void *)(v0 + 2488) = v40;
      uint64_t v41 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 2496) = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_86858;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                                  + v41))(0xD00000000000001ALL, 0x8000000000148BB0, v40);
    }
    id v56 = v25;
    swift_bridgeObjectRelease();
    sub_13E460();

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v45 = sub_141160();
    os_log_type_t v46 = sub_141480();
    if (os_log_type_enabled(v45, v46))
    {
      os_log_type_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v47 = 0;
      _os_log_impl(&dword_0, v45, v46, "Could not get timer action from timer.", v47, 2u);
      swift_slowDealloc();
    }
    id v48 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
    uint64_t v49 = *(void *)(v0 + 1552);
    uint64_t v50 = *(void *)(v0 + 1544);
    uint64_t v51 = *(void *)(v0 + 1504);
    uint64_t v52 = *(void *)(v0 + 1496);
    uint64_t v53 = *(void *)(v0 + 1168);

    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v49, enum case for SiriTimeEventSender.ReasonDescription.failedToCastTimer(_:), v52);
    v48(v49, 0, 1, v52);
    sub_19914(v49, v50, &qword_17C068);
    uint64_t v54 = v53 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
    swift_beginAccess();
    sub_90C18(v50, v54, &qword_17C068);
    swift_endAccess();
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v55 = 1;
    swift_willThrow();
  }
  id v57 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
  uint64_t v58 = *(void *)(v0 + 1552);
  uint64_t v59 = *(void *)(v0 + 1544);
  uint64_t v60 = *(void *)(v0 + 1496);
  uint64_t v61 = *(void *)(v0 + 1168);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1504) + 104))(v58, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v60);
  v57(v58, 0, 1, v60);
  sub_19914(v58, v59, &qword_17C068);
  uint64_t v62 = v61 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v59, v62, &qword_17C068);
  swift_endAccess();
  uint64_t v63 = sub_141160();
  os_log_type_t v64 = sub_141470();
  if (os_log_type_enabled(v63, v64))
  {
    os_log_type_t v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v65 = 0;
    _os_log_impl(&dword_0, v63, v64, "UndoTimerChangeStateFlow: Error publishing Success output.", v65, 2u);
    swift_slowDealloc();
  }
  uint64_t v66 = *(void **)(v0 + 2320);
  BOOL v67 = *(void **)(v0 + 2312);
  uint64_t v68 = *(void *)(v0 + 1480);
  uint64_t v69 = *(void *)(v0 + 1472);
  uint64_t v70 = *(void *)(v0 + 1464);
  uint64_t v71 = *(void *)(v0 + 1384);
  uint64_t v72 = *(void *)(v0 + 1376);
  uint64_t v73 = *(void *)(v0 + 1368);
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
  uint64_t v74 = *(void *)(v0 + 1168);
  sub_13EF00();
  sub_903C8(v74);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v75 = *(uint64_t (**)(void))(v0 + 8);
  return v75();
}

uint64_t sub_852F0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2384) = a1;
  *(void *)(v3 + 2392) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_895C0;
  }
  else
  {
    uint64_t v4 = sub_85474;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_85474()
{
  uint64_t v1 = (_OWORD *)(v0 + 576);
  int v2 = *(unsigned __int8 *)(v0 + 2576);
  uint64_t v3 = *(void *)(v0 + 2352);
  sub_13EC50();
  if (v2 != 1 || v3 == 0)
  {
    char v5 = *(uint64_t **)(v0 + 1304);
    uint64_t v6 = *(void *)(v0 + 1296);
    sub_5830(&qword_17C358);
    uint64_t v7 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_142D50;
    sub_1B94C((void *)(v9 + v8));
    uint64_t *v5 = v9;
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 600) = v6;
    *(void *)(v0 + 608) = sub_91184((unint64_t *)&qword_17C348, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v10 = sub_187EC((uint64_t *)(v0 + 576));
    sub_4ED84((uint64_t)v5, (uint64_t)v10);
  }
  else
  {
    *(void *)(v0 + 608) = 0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 592) = 0u;
  }
  char v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 2400) = v11;
  *char v11 = v0;
  v11[1] = sub_856B8;
  uint64_t v12 = *(void *)(v0 + 2352);
  uint64_t v13 = *(void *)(v0 + 2344);
  uint64_t v14 = *(void *)(v0 + 1480);
  uint64_t v15 = *(void *)(v0 + 1432);
  uint64_t v16 = *(void *)(v0 + 1384);
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v0 + 536, v15, v14, v1, v16, v13, v12, 0xD000000000000019);
}

uint64_t sub_856B8()
{
  uint64_t v1 = *(void *)v0 + 576;
  int v2 = *(void **)(*(void *)v0 + 2384);
  uint64_t v3 = *(void *)(*(void *)v0 + 1432);
  uint64_t v4 = *(void *)(*(void *)v0 + 1408);
  uint64_t v5 = *(void *)(*(void *)v0 + 1400);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_85894, 0, 0);
}

uint64_t sub_85894()
{
  sub_19914(v0 + 536, v0 + 216, &qword_17D780);
  sub_8FE8(v0 + 216, v0 + 416, &qword_17D780);
  if (*(void *)(v0 + 440))
  {
    sub_3498((long long *)(v0 + 416), v0 + 376);
    sub_13F170();
    uint64_t v1 = *(void *)(v0 + 480);
    uint64_t v2 = *(void *)(v0 + 488);
    sub_90A8((void *)(v0 + 456), v1);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 2536) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_876DC;
    return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 376, v1, v2);
  }
  else
  {
    sub_904C(v0 + 416, &qword_17D780);
    uint64_t v4 = sub_141160();
    os_log_type_t v5 = sub_141470();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_0, v4, v5, "[UndoTimerChangeStateFlow] Generated Success output via RF, but it was nil!", v6, 2u);
      swift_slowDealloc();
    }

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v7 = 6;
    swift_willThrow();
    sub_904C(v0 + 216, &qword_17D780);
    unint64_t v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
    uint64_t v9 = *(void *)(v0 + 1552);
    uint64_t v10 = *(void *)(v0 + 1544);
    uint64_t v11 = *(void *)(v0 + 1496);
    uint64_t v12 = *(void *)(v0 + 1168);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1504) + 104))(v9, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v11);
    v8(v9, 0, 1, v11);
    sub_19914(v9, v10, &qword_17C068);
    uint64_t v13 = v12 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
    swift_beginAccess();
    sub_90C18(v10, v13, &qword_17C068);
    swift_endAccess();
    uint64_t v14 = sub_141160();
    os_log_type_t v15 = sub_141470();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "UndoTimerChangeStateFlow: Error publishing Success output.", v16, 2u);
      swift_slowDealloc();
    }
    uint64_t v17 = *(void **)(v0 + 2320);
    uint64_t v18 = *(void **)(v0 + 2312);
    uint64_t v19 = *(void *)(v0 + 1480);
    uint64_t v20 = *(void *)(v0 + 1472);
    uint64_t v21 = *(void *)(v0 + 1464);
    uint64_t v22 = *(void *)(v0 + 1384);
    uint64_t v23 = *(void *)(v0 + 1376);
    uint64_t v24 = *(void *)(v0 + 1368);
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t v25 = *(void *)(v0 + 1168);
    sub_13EF00();
    sub_903C8(v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

uint64_t sub_85E34(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2424) = a1;
  *(void *)(v3 + 2432) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_89994;
  }
  else
  {
    uint64_t v4 = sub_85FB8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_85FB8()
{
  uint64_t v1 = v0[294];
  uint64_t v2 = v0[293];
  uint64_t v3 = v0[185];
  sub_13EC50();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  os_log_type_t v5 = (void *)swift_task_alloc();
  v0[305] = v5;
  void *v5 = v0;
  v5[1] = sub_86104;
  uint64_t v6 = v0[173];
  uint64_t v7 = v0[159];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v0 + 37, v7, v6);
}

uint64_t sub_86104()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2448) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[303];
  (*(void (**)(void, void))(v2[157] + 8))(v2[159], v2[156]);

  if (v0) {
    uint64_t v4 = sub_89D68;
  }
  else {
    uint64_t v4 = sub_862B8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_862B8()
{
  sub_19914(v0 + 296, v0 + 216, &qword_17D780);
  sub_8FE8(v0 + 216, v0 + 416, &qword_17D780);
  if (*(void *)(v0 + 440))
  {
    sub_3498((long long *)(v0 + 416), v0 + 376);
    sub_13F170();
    uint64_t v1 = *(void *)(v0 + 480);
    uint64_t v2 = *(void *)(v0 + 488);
    sub_90A8((void *)(v0 + 456), v1);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 2536) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_876DC;
    return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 376, v1, v2);
  }
  else
  {
    sub_904C(v0 + 416, &qword_17D780);
    uint64_t v4 = sub_141160();
    os_log_type_t v5 = sub_141470();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_0, v4, v5, "[UndoTimerChangeStateFlow] Generated Success output via RF, but it was nil!", v6, 2u);
      swift_slowDealloc();
    }

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v7 = 6;
    swift_willThrow();
    sub_904C(v0 + 216, &qword_17D780);
    unint64_t v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
    uint64_t v9 = *(void *)(v0 + 1552);
    uint64_t v10 = *(void *)(v0 + 1544);
    uint64_t v11 = *(void *)(v0 + 1496);
    uint64_t v12 = *(void *)(v0 + 1168);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1504) + 104))(v9, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v11);
    v8(v9, 0, 1, v11);
    sub_19914(v9, v10, &qword_17C068);
    uint64_t v13 = v12 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
    swift_beginAccess();
    sub_90C18(v10, v13, &qword_17C068);
    swift_endAccess();
    uint64_t v14 = sub_141160();
    os_log_type_t v15 = sub_141470();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "UndoTimerChangeStateFlow: Error publishing Success output.", v16, 2u);
      swift_slowDealloc();
    }
    uint64_t v17 = *(void **)(v0 + 2320);
    uint64_t v18 = *(void **)(v0 + 2312);
    uint64_t v19 = *(void *)(v0 + 1480);
    uint64_t v20 = *(void *)(v0 + 1472);
    uint64_t v21 = *(void *)(v0 + 1464);
    uint64_t v22 = *(void *)(v0 + 1384);
    uint64_t v23 = *(void *)(v0 + 1376);
    uint64_t v24 = *(void *)(v0 + 1368);
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t v25 = *(void *)(v0 + 1168);
    sub_13EF00();
    sub_903C8(v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

uint64_t sub_86858(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2504) = a1;
  *(void *)(v3 + 2512) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_86CE8;
  }
  else {
    uint64_t v4 = sub_869C4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_869C4()
{
  unint64_t v1 = v0[309];
  uint64_t v2 = v0[308];
  uint64_t v3 = v0[294];
  uint64_t v4 = v0[293];
  uint64_t v5 = v0[185];
  sub_90CA4(v0[152], type metadata accessor for ResumeTimerHandledOnWatchParameters);
  sub_34B88(v2, v1);
  swift_bridgeObjectRelease();
  sub_13EC50();
  uint64_t v6 = (void *)swift_task_alloc();
  v6[2] = v5;
  v6[3] = v4;
  v6[4] = v3;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[315] = (uint64_t)v7;
  void *v7 = v0;
  v7[1] = sub_86B54;
  uint64_t v8 = v0[173];
  uint64_t v9 = v0[158];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v0 + 87, v9, v8);
}

uint64_t sub_86B54()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2528) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[157] + 8))(v2[158], v2[156]);
  if (v0) {
    uint64_t v3 = sub_8A13C;
  }
  else {
    uint64_t v3 = sub_87118;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_86CE8()
{
  unint64_t v1 = v0[309];
  uint64_t v2 = v0[308];
  uint64_t v3 = (void *)v0[307];
  sub_90CA4(v0[152], type metadata accessor for ResumeTimerHandledOnWatchParameters);
  sub_34B88(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_34B88(v2, v1);

  uint64_t v4 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v5 = v0[194];
  uint64_t v6 = v0[193];
  uint64_t v7 = v0[187];
  uint64_t v8 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v5, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v7);
  v4(v5, 0, 1, v7);
  sub_19914(v5, v6, &qword_17C068);
  uint64_t v9 = v8 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v6, v9, &qword_17C068);
  swift_endAccess();
  uint64_t v10 = sub_141160();
  os_log_type_t v11 = sub_141470();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "UndoTimerChangeStateFlow: Error publishing Success output.", v12, 2u);
    swift_slowDealloc();
  }
  uint64_t v13 = (void *)v0[290];
  uint64_t v14 = (void *)v0[289];
  uint64_t v15 = v0[185];
  uint64_t v16 = v0[184];
  uint64_t v17 = v0[183];
  uint64_t v18 = v0[173];
  uint64_t v19 = v0[172];
  uint64_t v20 = v0[171];
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v21 = v0[146];
  sub_13EF00();
  sub_903C8(v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_87118()
{
  unint64_t v1 = *(void **)(v0 + 2504);
  unint64_t v2 = *(void *)(v0 + 2472);
  uint64_t v3 = *(void *)(v0 + 2464);

  sub_34B88(v3, v2);
  sub_19914(v0 + 696, v0 + 216, &qword_17D780);
  sub_8FE8(v0 + 216, v0 + 416, &qword_17D780);
  if (*(void *)(v0 + 440))
  {
    sub_3498((long long *)(v0 + 416), v0 + 376);
    sub_13F170();
    uint64_t v4 = *(void *)(v0 + 480);
    uint64_t v5 = *(void *)(v0 + 488);
    sub_90A8((void *)(v0 + 456), v4);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 2536) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_876DC;
    return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 376, v4, v5);
  }
  else
  {
    sub_904C(v0 + 416, &qword_17D780);
    uint64_t v7 = sub_141160();
    os_log_type_t v8 = sub_141470();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "[UndoTimerChangeStateFlow] Generated Success output via RF, but it was nil!", v9, 2u);
      swift_slowDealloc();
    }

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v10 = 6;
    swift_willThrow();
    sub_904C(v0 + 216, &qword_17D780);
    os_log_type_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
    uint64_t v12 = *(void *)(v0 + 1552);
    uint64_t v13 = *(void *)(v0 + 1544);
    uint64_t v14 = *(void *)(v0 + 1496);
    uint64_t v15 = *(void *)(v0 + 1168);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1504) + 104))(v12, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v14);
    v11(v12, 0, 1, v14);
    sub_19914(v12, v13, &qword_17C068);
    uint64_t v16 = v15 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
    swift_beginAccess();
    sub_90C18(v13, v16, &qword_17C068);
    swift_endAccess();
    uint64_t v17 = sub_141160();
    os_log_type_t v18 = sub_141470();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_0, v17, v18, "UndoTimerChangeStateFlow: Error publishing Success output.", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = *(void **)(v0 + 2320);
    uint64_t v21 = *(void **)(v0 + 2312);
    uint64_t v22 = *(void *)(v0 + 1480);
    uint64_t v23 = *(void *)(v0 + 1472);
    uint64_t v24 = *(void *)(v0 + 1464);
    uint64_t v25 = *(void *)(v0 + 1384);
    uint64_t v26 = *(void *)(v0 + 1376);
    uint64_t v27 = *(void *)(v0 + 1368);
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    uint64_t v28 = *(void *)(v0 + 1168);
    sub_13EF00();
    sub_903C8(v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
}

uint64_t sub_876DC()
{
  *(void *)(*(void *)v1 + 2544) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_8A534;
  }
  else {
    unint64_t v2 = sub_8781C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_8781C()
{
  uint64_t v1 = v0[149];
  uint64_t v2 = v0[148];
  uint64_t v3 = v0[147];
  uint64_t v4 = v0[146];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 57));
  uint64_t v5 = v4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_followupPluginAction;
  swift_beginAccess();
  sub_8FE8(v5, v3, &qword_17D740);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  uint64_t v7 = (void *)v0[290];
  os_log_type_t v8 = (void *)v0[289];
  uint64_t v9 = v0[185];
  uint64_t v10 = v0[184];
  uint64_t v11 = v0[183];
  uint64_t v12 = v0[172];
  uint64_t v22 = v0[171];
  uint64_t v23 = v0[173];
  if (v6 == 1)
  {
    uint64_t v13 = v0[147];

    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 47));
    sub_904C((uint64_t)(v0 + 27), &qword_17D780);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v22);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_904C(v13, &qword_17D740);
    uint64_t v14 = v0[146];
    sub_13EF00();
  }
  else
  {
    uint64_t v15 = v0[150];
    uint64_t v20 = v0[183];
    uint64_t v21 = v0[185];
    uint64_t v16 = v0[149];
    uint64_t v17 = v0[148];
    uint64_t v14 = v0[146];
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v15, v0[147], v17);
    sub_13EF10();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 47));
    sub_904C((uint64_t)(v0 + 27), &qword_17D780);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v22);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v20);
  }
  sub_903C8(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_87C20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1504);
  uint64_t v3 = *(void *)(*(void *)v0 + 1496);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_87DA4, 0, 0);
}

uint64_t sub_87DA4()
{
  uint64_t v1 = *(void *)(v0 + 1168);

  sub_903C8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_87FF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1504);
  uint64_t v3 = *(void *)(*(void *)v0 + 1496);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_91670, 0, 0);
}

uint64_t sub_8817C()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  uint64_t v10 = (void *)v0[235];
  uint64_t v11 = v0[184];
  uint64_t v21 = v0[183];
  uint64_t v22 = v0[186];
  uint64_t v20 = v0[182];
  uint64_t v12 = v0[176];
  uint64_t v13 = v0[175];
  uint64_t v14 = v0[174];
  uint64_t v15 = v0[172];
  uint64_t v16 = v0[171];
  swift_errorRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v22, v21);
  uint64_t v17 = v0[146];
  sub_13EF00();
  sub_903C8(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_88580()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  uint64_t v10 = (void *)v0[235];
  uint64_t v11 = v0[184];
  uint64_t v21 = v0[183];
  uint64_t v22 = v0[186];
  uint64_t v20 = v0[182];
  uint64_t v12 = v0[176];
  uint64_t v13 = v0[175];
  uint64_t v14 = v0[174];
  uint64_t v15 = v0[172];
  uint64_t v16 = v0[171];
  swift_errorRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v22, v21);
  uint64_t v17 = v0[146];
  sub_13EF00();
  sub_903C8(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_88984()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  uint64_t v10 = (void *)v0[235];
  uint64_t v11 = v0[184];
  uint64_t v21 = v0[183];
  uint64_t v22 = v0[186];
  uint64_t v20 = v0[182];
  uint64_t v12 = v0[176];
  uint64_t v13 = v0[175];
  uint64_t v14 = v0[174];
  uint64_t v15 = v0[172];
  uint64_t v16 = v0[171];
  swift_errorRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v22, v21);
  uint64_t v17 = v0[146];
  sub_13EF00();
  sub_903C8(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_88D88()
{
  unint64_t v1 = *(void *)(v0 + 2040);
  uint64_t v2 = *(void *)(v0 + 2032);

  sub_34B88(v2, v1);
  uint64_t v3 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
  uint64_t v4 = *(void *)(v0 + 1552);
  uint64_t v5 = *(void *)(v0 + 1544);
  uint64_t v6 = *(void *)(v0 + 1496);
  uint64_t v7 = *(void *)(v0 + 1168);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1504) + 104))(v4, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v6);
  v3(v4, 0, 1, v6);
  sub_19914(v4, v5, &qword_17C068);
  uint64_t v8 = v7 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v5, v8, &qword_17C068);
  swift_endAccess();
  uint64_t v9 = sub_141160();
  os_log_type_t v10 = sub_141470();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "UndoTimerChangeStateFlow: Error publishing Success output.", v11, 2u);
    swift_slowDealloc();
  }
  uint64_t v12 = *(void **)(v0 + 1880);
  uint64_t v13 = *(void *)(v0 + 1472);
  uint64_t v23 = *(void *)(v0 + 1464);
  uint64_t v24 = *(void *)(v0 + 1488);
  uint64_t v22 = *(void *)(v0 + 1456);
  uint64_t v14 = *(void *)(v0 + 1408);
  uint64_t v15 = *(void *)(v0 + 1400);
  uint64_t v16 = *(void *)(v0 + 1392);
  uint64_t v17 = *(void *)(v0 + 1376);
  uint64_t v18 = *(void *)(v0 + 1368);
  swift_errorRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v15);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v24, v23);
  uint64_t v19 = *(void *)(v0 + 1168);
  sub_13EF00();
  sub_903C8(v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_891A8()
{
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 117));
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 62));
  unint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  os_log_type_t v10 = (void *)v0[235];
  uint64_t v11 = v0[184];
  uint64_t v21 = v0[183];
  uint64_t v22 = v0[186];
  uint64_t v20 = v0[182];
  uint64_t v12 = v0[176];
  uint64_t v13 = v0[175];
  uint64_t v14 = v0[174];
  uint64_t v15 = v0[172];
  uint64_t v16 = v0[171];
  swift_errorRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v22, v21);
  uint64_t v17 = v0[146];
  sub_13EF00();
  sub_903C8(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_895C0()
{
  unint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  os_log_type_t v10 = (void *)v0[290];
  uint64_t v11 = (void *)v0[289];
  uint64_t v12 = v0[185];
  uint64_t v13 = v0[184];
  uint64_t v14 = v0[183];
  uint64_t v15 = v0[173];
  uint64_t v16 = v0[172];
  uint64_t v17 = v0[171];
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v18 = v0[146];
  sub_13EF00();
  sub_903C8(v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_89994()
{
  unint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  os_log_type_t v10 = (void *)v0[290];
  uint64_t v11 = (void *)v0[289];
  uint64_t v12 = v0[185];
  uint64_t v13 = v0[184];
  uint64_t v14 = v0[183];
  uint64_t v15 = v0[173];
  uint64_t v16 = v0[172];
  uint64_t v17 = v0[171];
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v18 = v0[146];
  sub_13EF00();
  sub_903C8(v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_89D68()
{
  unint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  os_log_type_t v10 = (void *)v0[290];
  uint64_t v11 = (void *)v0[289];
  uint64_t v12 = v0[185];
  uint64_t v13 = v0[184];
  uint64_t v14 = v0[183];
  uint64_t v15 = v0[173];
  uint64_t v16 = v0[172];
  uint64_t v17 = v0[171];
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v18 = v0[146];
  sub_13EF00();
  sub_903C8(v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_8A13C()
{
  unint64_t v1 = *(void **)(v0 + 2504);
  unint64_t v2 = *(void *)(v0 + 2472);
  uint64_t v3 = *(void *)(v0 + 2464);

  sub_34B88(v3, v2);
  uint64_t v4 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1624);
  uint64_t v5 = *(void *)(v0 + 1552);
  uint64_t v6 = *(void *)(v0 + 1544);
  uint64_t v7 = *(void *)(v0 + 1496);
  uint64_t v8 = *(void *)(v0 + 1168);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1504) + 104))(v5, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v7);
  v4(v5, 0, 1, v7);
  sub_19914(v5, v6, &qword_17C068);
  uint64_t v9 = v8 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v6, v9, &qword_17C068);
  swift_endAccess();
  os_log_type_t v10 = sub_141160();
  os_log_type_t v11 = sub_141470();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "UndoTimerChangeStateFlow: Error publishing Success output.", v12, 2u);
    swift_slowDealloc();
  }
  uint64_t v13 = *(void **)(v0 + 2320);
  uint64_t v14 = *(void **)(v0 + 2312);
  uint64_t v15 = *(void *)(v0 + 1480);
  uint64_t v16 = *(void *)(v0 + 1472);
  uint64_t v17 = *(void *)(v0 + 1464);
  uint64_t v18 = *(void *)(v0 + 1384);
  uint64_t v19 = *(void *)(v0 + 1376);
  uint64_t v20 = *(void *)(v0 + 1368);
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v21 = *(void *)(v0 + 1168);
  sub_13EF00();
  sub_903C8(v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_8A534()
{
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 47));
  sub_904C((uint64_t)(v0 + 27), &qword_17D780);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 57));
  unint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[194];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[187];
  uint64_t v5 = v0[146];
  (*(void (**)(uint64_t, void, uint64_t))(v0[188] + 104))(v2, enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:), v4);
  v1(v2, 0, 1, v4);
  sub_19914(v2, v3, &qword_17C068);
  uint64_t v6 = v5 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v3, v6, &qword_17C068);
  swift_endAccess();
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141470();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Error publishing Success output.", v9, 2u);
    swift_slowDealloc();
  }
  os_log_type_t v10 = (void *)v0[290];
  os_log_type_t v11 = (void *)v0[289];
  uint64_t v12 = v0[185];
  uint64_t v13 = v0[184];
  uint64_t v14 = v0[183];
  uint64_t v15 = v0[173];
  uint64_t v16 = v0[172];
  uint64_t v17 = v0[171];
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v18 = v0[146];
  sub_13EF00();
  sub_903C8(v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_8A930(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13EFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_13F1C0();
  swift_bridgeObjectRetain();
  return sub_13F1D0();
}

uint64_t sub_8AA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17DA20);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_3410(a2 + 72, (uint64_t)v13);
  sub_90A8(v13, v13[3]);
  Class isa = sub_1413D0().super.super.isa;
  id v8 = [objc_allocWithZone((Class)sub_140BC0()) init];
  [v8 setTargetTimer:0];
  [v8 setToDuration:isa];
  [v8 setToLabel:0];

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_140F00();
  swift_release();

  return _s20HandleIntentStrategyVwxx_1((uint64_t)v13);
}

uint64_t sub_8AC54(uint64_t a1)
{
  uint64_t v2 = sub_140DD0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v28[-1] - v7;
  uint64_t v9 = sub_5830(&qword_17DA40);
  __chkstk_darwin(v9);
  os_log_type_t v11 = (id *)((char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_8FE8(a1, (uint64_t)v11, &qword_17DA40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = *(void (**)(char *, id *, uint64_t))(v3 + 32);
    v12(v8, v11, v2);
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_141170();
    sub_33D8(v13, (uint64_t)qword_17D728);
    uint64_t v14 = sub_141160();
    os_log_type_t v15 = sub_141470();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "UndoTimerChangeStateFlow: set and start timer failed", v16, 2u);
      swift_slowDealloc();
    }

    LOBYTE(v28[0]) = 0;
    sub_5830(&qword_17DA20);
    sub_1413C0();
    uint64_t v17 = sub_140AB0();
    v28[3] = v17;
    v28[4] = (uint64_t)&protocol witness table for ABCReport;
    uint64_t v18 = sub_187EC(v28);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_91184(&qword_17DA38, (void (*)(uint64_t))&type metadata accessor for TimerOperationError);
    swift_allocError();
    v12(v19, (id *)v6, v2);
    *uint64_t v18 = sub_13E450();
    uint64_t v20 = enum case for ErrorSubType.managerReturnedError(_:);
    uint64_t v21 = sub_1407D0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v18, v20, v21);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for ABCReport.timerUndoHandle(_:), v17);
    sub_140820();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v28);
    return swift_errorRelease();
  }
  else
  {

    if (qword_17B1E8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_141170();
    sub_33D8(v23, (uint64_t)qword_17D728);
    uint64_t v24 = sub_141160();
    os_log_type_t v25 = sub_141480();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "UndoTimerChangeStateFlow: set and start timer completion", v26, 2u);
      swift_slowDealloc();
    }

    LOBYTE(v28[0]) = 1;
    sub_5830(&qword_17DA20);
    return sub_1413C0();
  }
}

uint64_t sub_8B0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17DA20);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = a2 + 72;
  sub_3410(a2 + 72, (uint64_t)v17);
  sub_90A8(v17, v18);
  id v8 = (void *)sub_140EF0();

  _s20HandleIntentStrategyVwxx_1((uint64_t)v17);
  if (v8)
  {
    sub_3410(v7, (uint64_t)v17);
    sub_90A8(v17, v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    sub_140EB0();
    swift_release();
    return _s20HandleIntentStrategyVwxx_1((uint64_t)v17);
  }
  else
  {
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_141170();
    sub_33D8(v12, (uint64_t)qword_17D728);
    uint64_t v13 = sub_141160();
    os_log_type_t v14 = sub_141480();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "UndoTimerChangeStateFlow: no need to stop timer as its already done.", v15, 2u);
      swift_slowDealloc();
    }

    LOBYTE(v17[0]) = 1;
    return sub_1413C0();
  }
}

uint64_t sub_8B380(uint64_t a1, uint64_t a2, const char *a3, const char *a4)
{
  uint64_t v33 = a2;
  uint64_t v7 = sub_140DD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v11 = (char *)&v34[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34[-1] - v12;
  uint64_t v14 = sub_5830(&qword_17DA30);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8FE8(a1, (uint64_t)v16, &qword_17DA30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v13, v16, v7);
    uint64_t v18 = v8;
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_141170();
    sub_33D8(v19, (uint64_t)qword_17D728);
    uint64_t v20 = sub_141160();
    os_log_type_t v21 = sub_141470();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, a4, v22, 2u);
      uint64_t v18 = v8;
      swift_slowDealloc();
    }

    LOBYTE(v34[0]) = 0;
    sub_5830(&qword_17DA20);
    sub_1413C0();
    uint64_t v23 = sub_140AB0();
    void v34[3] = v23;
    v34[4] = (uint64_t)&protocol witness table for ABCReport;
    uint64_t v24 = sub_187EC(v34);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v13, v7);
    sub_91184(&qword_17DA38, (void (*)(uint64_t))&type metadata accessor for TimerOperationError);
    swift_allocError();
    v17(v25, v11, v7);
    *uint64_t v24 = sub_13E450();
    uint64_t v26 = enum case for ErrorSubType.managerReturnedError(_:);
    uint64_t v27 = sub_1407D0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v24, v26, v27);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v24, enum case for ABCReport.timerUndoHandle(_:), v23);
    sub_140820();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v7);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v34);
    return swift_errorRelease();
  }
  else
  {
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_141170();
    sub_33D8(v29, (uint64_t)qword_17D728);
    uint64_t v30 = sub_141160();
    os_log_type_t v31 = sub_141480();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl(&dword_0, v30, v31, a3, v32, 2u);
      swift_slowDealloc();
    }

    LOBYTE(v34[0]) = 1;
    sub_5830(&qword_17DA20);
    return sub_1413C0();
  }
}

uint64_t sub_8B820(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v24 = a5;
  uint64_t v11 = sub_5830(&qword_17DA20);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  sub_3410(a2 + 72, (uint64_t)v27);
  uint64_t v14 = v28;
  uint64_t v23 = v29;
  sub_90A8(v27, v28);
  sub_5595C(0, &qword_17D4F0);
  id v15 = a3;
  Class isa = sub_141570(0).super.super.isa;
  id v17 = [objc_allocWithZone((Class)a4(0)) init];
  [v15 setShouldMatchAny:isa];
  id v18 = v15;
  [v17 setTargetTimer:v18];

  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v20 + v19, (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v26(v17, v25, v20, v14, v23);
  swift_release();

  return _s20HandleIntentStrategyVwxx_1((uint64_t)v27);
}

uint64_t sub_8BA40(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_5830(&qword_17C068);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_8BAE8, 0, 0);
}

uint64_t sub_8BAE8()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = sub_140650();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v3, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  sub_19914(v1, v2, &qword_17C068);
  uint64_t v7 = v4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v2, v7, &qword_17C068);
  swift_endAccess();
  uint64_t v10 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_8BCA0;
  return ((uint64_t (*)(uint64_t, unint64_t, void *))v10)(0x73614272656D6974, 0xEF726F7272652365, _swiftEmptyArrayStorage);
}

uint64_t sub_8BCA0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[11] = a1;
  v4[12] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_8C104, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v4[13] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_8BE20;
    return sub_8F9E0(a1);
  }
}

uint64_t sub_8BE20()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_8BFBC;
  }
  else {
    uint64_t v2 = sub_8BF34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_8BF34()
{
  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_8BFBC()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing generic failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8C104()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing generic failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8C244(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  sub_5830(&qword_17C068);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_8C2E8, 0, 0);
}

uint64_t sub_8C2E8()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = enum case for SiriTimeEventSender.ReasonDescription.timerNotFound(_:);
  uint64_t v5 = sub_140650();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(v1, v4, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  sub_19914(v1, v2, &qword_17C068);
  uint64_t v7 = v3 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v2, v7, &qword_17C068);
  swift_endAccess();
  uint64_t v10 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_8C4A4;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v10)(0xD000000000000012, 0x8000000000147BE0, _swiftEmptyArrayStorage);
}

uint64_t sub_8C4A4(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[10] = a1;
  v4[11] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_8C908, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v4[12] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_8C624;
    return sub_8F9E0(a1);
  }
}

uint64_t sub_8C624()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_8C7C0;
  }
  else {
    uint64_t v2 = sub_8C738;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_8C738()
{
  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_8C7C0()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing timerNotFound failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8C908()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing timerNotFound failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8CA48(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_5830(&qword_17C068);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_8CAF0, 0, 0);
}

uint64_t sub_8CAF0()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  os_log_type_t v3 = (void *)v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = enum case for SiriTimeEventSender.ReasonDescription.timerAlreadyRunning(_:);
  uint64_t v6 = sub_140650();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v1, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  sub_19914(v1, v2, &qword_17C068);
  uint64_t v8 = v4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v2, v8, &qword_17C068);
  swift_endAccess();
  uint64_t v9 = *(void *)(v4 + 56);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_17F178 + dword_17F178);
  id v10 = v3;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_8CCA0;
  uint64_t v12 = v0[6];
  return v14(v9, v12);
}

uint64_t sub_8CCA0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 48);
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = v1;
  swift_task_dealloc();

  if (v1) {
    uint64_t v5 = sub_8CF9C;
  }
  else {
    uint64_t v5 = sub_8CDD0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_8CDD0()
{
  id v1 = *(id *)(v0 + 88);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_8CE70;
  uint64_t v3 = *(void *)(v0 + 88);
  return sub_8F9E0(v3);
}

uint64_t sub_8CE70()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_8D0DC;
  }
  else {
    uint64_t v3 = sub_916F8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_8CF9C()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing timerAlreadyRunning failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8D0DC()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing timerAlreadyRunning failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8D224(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_5830(&qword_17C068);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_8D2CC, 0, 0);
}

uint64_t sub_8D2CC()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  os_log_type_t v3 = (void *)v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = enum case for SiriTimeEventSender.ReasonDescription.timerAlreadyPaused(_:);
  uint64_t v6 = sub_140650();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v1, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  sub_19914(v1, v2, &qword_17C068);
  uint64_t v8 = v4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_90C18(v2, v8, &qword_17C068);
  swift_endAccess();
  uint64_t v9 = *(void *)(v4 + 48);
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_deviceState + 24);
  sub_90A8((void *)(v4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_deviceState), v10);
  char v11 = sub_137BF0(v10);
  uint64_t v16 = (char *)&dword_180BB0 + dword_180BB0;
  id v12 = v3;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[10] = v13;
  void *v13 = v0;
  v13[1] = sub_8D4B4;
  uint64_t v14 = v0[6];
  return ((uint64_t (*)(void, uint64_t, uint64_t))v16)(v11 & 1, v9, v14);
}

uint64_t sub_8D4B4(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = *(void **)(*v2 + 48);
  uint64_t v6 = *v2;
  v4[11] = a1;
  v4[12] = v1;
  swift_task_dealloc();

  if (v1)
  {
    return _swift_task_switch(sub_8D76C, 0, 0);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v4[13] = v7;
    void *v7 = v6;
    v7[1] = sub_8D658;
    return sub_8F9E0(a1);
  }
}

uint64_t sub_8D658()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_8D8AC;
  }
  else {
    uint64_t v2 = sub_8BF34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_8D76C()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing timerAlreadyPaused failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8D8AC()
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17D728);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoTimerChangeStateFlow: Error publishing timerAlreadyPaused failure output.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_8D9F4(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return _swift_task_switch(sub_8DA18, 0, 0);
}

uint64_t sub_8DA18()
{
  [*(id *)(v0 + 56) mutableCopy];
  sub_1415F0();
  swift_unknownObjectRelease();
  sub_5595C(0, &qword_17DA48);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    os_log_type_t v3 = *(void **)(v0 + 48);
    *(void *)(v0 + 80) = v3;
    [v3 setState:v1];
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 88) = v4;
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v5;
    void *v5 = v0;
    v5[1] = sub_8DC80;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 104, 0, 0, 0xD000000000000025, 0x8000000000148E80, sub_9125C, v4, &type metadata for Bool);
  }
  else
  {
    if (qword_17B1E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_141170();
    sub_33D8(v6, (uint64_t)qword_17D728);
    uint64_t v7 = sub_141160();
    os_log_type_t v8 = sub_141470();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "UndoTimerChangeStateFlow: Failed to get mutableTimer copy", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10(0);
  }
}

uint64_t sub_8DC80()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_8DD98, 0, 0);
}

uint64_t sub_8DD98()
{
  if (*(unsigned char *)(v0 + 104) == 1)
  {
    sub_140EA0();
    uint64_t v1 = sub_140E70();
  }
  else
  {

    uint64_t v1 = 0;
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_8DE24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_5830(&qword_17DA20);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [*(id *)(a2 + 112) updateTimer:a3];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v27((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v26 = v11 | 7;
    uint64_t v12 = swift_allocObject();
    uint64_t v23 = a1;
    uint64_t v13 = v12;
    *(void *)(v12 + 16) = a3;
    uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
    v25(v12 + ((v11 + 24) & ~v11), (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    unint64_t v32 = sub_91338;
    uint64_t v33 = v13;
    aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v24 = &v30;
    uint64_t v30 = sub_1207B0;
    os_log_type_t v31 = &unk_1754F8;
    uint64_t v14 = _Block_copy(&aBlock);
    id v15 = v10;
    id v16 = a3;
    swift_release();
    id v17 = [v15 addSuccessBlock:v14];
    _Block_release(v14);

    v27((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v6);
    uint64_t v18 = swift_allocObject();
    v25(v18 + ((v11 + 16) & ~v11), (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    unint64_t v32 = sub_913C4;
    uint64_t v33 = v18;
    aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_1207B8;
    os_log_type_t v31 = &unk_175548;
    unint64_t v19 = _Block_copy(&aBlock);
    id v20 = v15;
    swift_release();
    id v21 = [v20 addFailureBlock:v19];

    _Block_release(v19);
  }
}

uint64_t sub_8E13C(uint64_t a1, double a2)
{
  *(void *)(v3 + 32) = v2;
  *(double *)(v3 + 24) = a2;
  *(void *)(v3 + 16) = a1;
  return _swift_task_switch(sub_8E164, 0, 0);
}

uint64_t sub_8E164()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = [objc_allocWithZone((Class)MTMutableTimer) initWithState:2 duration:*(double *)(v0 + 24)];
  *(void *)(v0 + 40) = v3;
  id v4 = [v2 title];
  [v3 setTitle:v4];

  id v5 = [v2 sound];
  [v3 setSound:v5];

  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  void *v7 = v0;
  v7[1] = sub_8E300;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 64, 0, 0, 0xD000000000000032, 0x8000000000148E00, sub_90F2C, v6, &type metadata for Bool);
}

uint64_t sub_8E300()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_8E418, 0, 0);
}

uint64_t sub_8E418()
{
  if (*(unsigned char *)(v0 + 64) == 1)
  {
    sub_140EA0();
    uint64_t v1 = sub_140E70();
  }
  else
  {

    uint64_t v1 = 0;
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_8E4A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_5830(&qword_17DA20);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [*(id *)(a2 + 112) addTimer:a3];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v27((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v26 = v11 | 7;
    uint64_t v12 = swift_allocObject();
    uint64_t v23 = a1;
    uint64_t v13 = v12;
    *(void *)(v12 + 16) = a3;
    uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
    v25(v12 + ((v11 + 24) & ~v11), (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    unint64_t v32 = sub_90F38;
    uint64_t v33 = v13;
    aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v24 = &v30;
    uint64_t v30 = sub_1207B0;
    os_log_type_t v31 = &unk_175340;
    uint64_t v14 = _Block_copy(&aBlock);
    id v15 = v10;
    id v16 = a3;
    swift_release();
    id v17 = [v15 addSuccessBlock:v14];
    _Block_release(v14);

    v27((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v6);
    uint64_t v18 = swift_allocObject();
    v25(v18 + ((v11 + 16) & ~v11), (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    unint64_t v32 = sub_90F60;
    uint64_t v33 = v18;
    aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_1207B8;
    os_log_type_t v31 = &unk_175390;
    unint64_t v19 = _Block_copy(&aBlock);
    id v20 = v15;
    swift_release();
    id v21 = [v20 addFailureBlock:v19];

    _Block_release(v19);
  }
}

uint64_t sub_8E7BC(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_141170();
  sub_33D8(v6, (uint64_t)qword_17D728);
  id v7 = a2;
  uint64_t v8 = sub_141160();
  os_log_type_t v9 = sub_141480();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    id v11 = [v7 timerIDString];
    format = a4;
    uint64_t v12 = sub_141250();
    unint64_t v14 = v13;

    sub_58C0(v12, v14, &v17);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, v9, format, v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  LOBYTE(v17) = 1;
  sub_5830(&qword_17DA20);
  return sub_1413C0();
}

void sub_8E9C4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17DA20);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a2 timerIDString];
  uint64_t v11 = sub_141250();
  uint64_t v13 = v12;

  id v14 = [*(id *)(a3 + 112) removeTimer:a2];
  if (v14)
  {
    id v15 = v14;
    uint64_t v28 = a1;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v29((char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v27[1] = v8;
    uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
    v27[0] = v16 | 7;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v11;
    *(void *)(v17 + 24) = v13;
    uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
    v18(v17 + ((v16 + 32) & ~v16), v9, v6);
    uint64_t v34 = sub_91050;
    uint64_t v35 = v17;
    aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    unint64_t v32 = sub_1207B0;
    uint64_t v33 = &unk_1753E0;
    unint64_t v19 = _Block_copy(&aBlock);
    id v20 = v15;
    swift_release();
    id v21 = [v20 addSuccessBlock:v19];
    _Block_release(v19);

    uint64_t v22 = v6;
    v29(v9, v28, v6);
    uint64_t v23 = swift_allocObject();
    v18(v23 + ((v16 + 16) & ~v16), v9, v22);
    uint64_t v34 = sub_910CC;
    uint64_t v35 = v23;
    aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    unint64_t v32 = sub_1207B8;
    uint64_t v33 = &unk_175430;
    uint64_t v24 = _Block_copy(&aBlock);
    id v25 = v20;
    swift_release();
    id v26 = [v25 addFailureBlock:v24];

    _Block_release(v24);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_8ED34(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_141170();
  sub_33D8(v5, (uint64_t)qword_17D728);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_141160();
  os_log_type_t v7 = sub_141480();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_58C0(a2, a3, &v10);
    sub_1415C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v6, v7, "UndoTimerChangeStateFlow: removed mtTimer successfully, which had ID %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v10) = 1;
  sub_5830(&qword_17DA20);
  return sub_1413C0();
}

uint64_t sub_8EF0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), const char *a4)
{
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_141170();
  sub_33D8(v6, (uint64_t)qword_17D728);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v7 = sub_141160();
  os_log_type_t v8 = a3();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    swift_errorRetain();
    v16[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_1415C0();
    *uint64_t v10 = v16[0];
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v7, v8, a4, v9, 0xCu);
    sub_5830(&qword_17D478);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  LOBYTE(v16[0]) = 0;
  sub_5830(&qword_17DA20);
  sub_1413C0();
  uint64_t v11 = sub_140AB0();
  v16[3] = v11;
  v16[4] = (uint64_t)&protocol witness table for ABCReport;
  uint64_t v12 = sub_187EC(v16);
  *uint64_t v12 = sub_13E450();
  uint64_t v13 = enum case for ErrorSubType.managerReturnedError(_:);
  uint64_t v14 = sub_1407D0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v12, enum case for ABCReport.timerUndoHandle(_:), v11);
  sub_140820();
  return _s20HandleIntentStrategyVwxx_1((uint64_t)v16);
}

uint64_t UndoTimerChangeStateFlow.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s20HandleIntentStrategyVwxx_1(v0 + 72);

  swift_bridgeObjectRelease();
  sub_904C(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_followupPluginAction, &qword_17D740);
  _s20HandleIntentStrategyVwxx_1(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_deviceState);
  sub_904C(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason, &qword_17C068);
  return v0;
}

uint64_t UndoTimerChangeStateFlow.__deallocating_deinit()
{
  UndoTimerChangeStateFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_8F2B0()
{
  return UndoTimerChangeStateFlow.on(input:)() & 1;
}

uint64_t sub_8F2D8()
{
  return sub_13EA80();
}

uint64_t sub_8F338(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_159A4;
  return UndoTimerChangeStateFlow.execute()(a1);
}

uint64_t sub_8F3D4()
{
  type metadata accessor for UndoTimerChangeStateFlow();

  return sub_13EAB0();
}

void *sub_8F410(uint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  uint64_t v8 = sub_140590();
  __chkstk_darwin(v8 - 8);
  uint64_t v16 = sub_140F30();
  uint64_t v17 = &protocol witness table for SiriTimerManagerImpl;
  *(void *)&long long v15 = a1;
  type metadata accessor for PauseTimerCATsSimple();
  sub_140580();
  a4[2] = sub_140530();
  type metadata accessor for PauseTimerCATs_Async();
  sub_140580();
  a4[3] = sub_140470();
  type metadata accessor for ResumeTimerCATsSimple();
  sub_140580();
  a4[4] = sub_140530();
  type metadata accessor for ResumeTimerCATs_Async();
  sub_140580();
  a4[5] = sub_140470();
  type metadata accessor for PauseTimerCATPatternsExecutor(0);
  sub_140580();
  a4[6] = sub_140470();
  type metadata accessor for ResumeTimerCATPatternsExecutor(0);
  sub_140580();
  a4[7] = sub_140470();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  a4[8] = sub_140470();
  a4[15] = 0;
  a4[16] = 0;
  os_log_type_t v9 = (char *)a4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_followupPluginAction;
  uint64_t v10 = sub_13ED80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *((unsigned char *)a4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_operation) = 8;
  uint64_t v11 = (char *)a4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_remainingTime;
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  uint64_t v12 = (char *)a4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  uint64_t v13 = sub_140650();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_3498(&v15, (uint64_t)(a4 + 9));
  sub_3498(a3, (uint64_t)a4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_deviceState);
  a4[14] = a2;
  return a4;
}

void (**sub_8F698(unint64_t a1, uint64_t a2, uint64_t a3))(char *, uint64_t)
{
  uint64_t v4 = v3;
  uint64_t v34 = a3;
  uint64_t v32 = sub_13E4B0();
  uint64_t v7 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  os_log_type_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_13E550();
  uint64_t v10 = *(void (***)(char *, uint64_t))(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = sub_1417D0())
  {
    v27[1] = v4;
    uint64_t v28 = v13;
    uint64_t v30 = v10 + 1;
    unint64_t v31 = a1 & 0xC000000000000001;
    uint64_t v29 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v14 = 4;
    while (1)
    {
      uint64_t v7 = v14 - 4;
      long long v15 = v31
          ? (void (**)(char *, uint64_t))sub_1416A0()
          : (void (**)(char *, uint64_t))*(id *)(a1 + 8 * v14);
      uint64_t v10 = v15;
      uint64_t v4 = v14 - 3;
      if (__OFADD__(v7, 1)) {
        break;
      }
      id v16 = [v15 timerID];
      sub_13E530();

      uint64_t v17 = sub_13E520();
      uint64_t v19 = v18;
      (*v30)(v12, v33);
      if (v17 == a2 && v19 == v34) {
        goto LABEL_16;
      }
      char v20 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_17;
      }
      id v21 = [v10 timerURL];
      sub_13E490();

      uint64_t v22 = sub_13E470();
      uint64_t v24 = v23;
      (*v29)(v9, v32);
      if (v22 == a2 && v24 == v34)
      {
LABEL_16:
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRelease();
        return v10;
      }
      char v25 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_17;
      }

      ++v14;
      if (v4 == v28) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_8F9E0(uint64_t a1)
{
  v1[12] = a1;
  uint64_t v2 = sub_141170();
  v1[13] = v2;
  v1[14] = *(void *)(v2 - 8);
  v1[15] = swift_task_alloc();
  uint64_t v3 = sub_140680();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  uint64_t v4 = sub_1406A0();
  v1[19] = v4;
  v1[20] = *(void *)(v4 - 8);
  v1[21] = swift_task_alloc();
  uint64_t v5 = sub_13EFF0();
  v1[22] = v5;
  v1[23] = *(void *)(v5 - 8);
  v1[24] = swift_task_alloc();
  uint64_t v6 = sub_13ECE0();
  v1[25] = v6;
  v1[26] = *(void *)(v6 - 8);
  v1[27] = swift_task_alloc();
  return _swift_task_switch(sub_8FC10, 0, 0);
}

uint64_t sub_8FC10()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  sub_13EC80();
  sub_13EFE0();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v3);
  if (qword_17B1E8 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[13];
  uint64_t v7 = sub_33D8(v6, (uint64_t)qword_17D728);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v7, v6);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[28] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_8FD94;
  uint64_t v9 = v0[27];
  uint64_t v10 = v0[24];
  uint64_t v11 = v0[21];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v0 + 2, v9, v10, v11, 0);
}

uint64_t sub_8FD94()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_901A8;
  }
  else {
    uint64_t v2 = sub_8FEA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_8FEA8()
{
  sub_13F170();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  sub_90A8(v0 + 7, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_8FF74;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 2, v1, v2);
}

uint64_t sub_8FF74()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_902A0;
  }
  else {
    uint64_t v2 = sub_90088;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_90088()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[20];
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[19];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_901A8()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_902A0()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[20];
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[19];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_903C8(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17C070);
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5830(&qword_17C078);
  __chkstk_darwin(v4 - 8);
  uint64_t v55 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_140660();
  uint64_t v6 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13ED60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_5830(&qword_17C068);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v50 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v16 = (char *)&v48 - v15;
  uint64_t v17 = sub_140650();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24UndoTimerChangeStateFlow_failureReason;
  swift_beginAccess();
  sub_8FE8(v21, (uint64_t)v16, &qword_17C068);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  uint64_t v54 = v9;
  uint64_t v51 = v17;
  if (v22 == 1)
  {
    sub_904C((uint64_t)v16, &qword_17C068);
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ActivityType.completed(_:), v8);
    uint64_t v23 = v8;
    if (qword_17B1F0 != -1) {
      swift_once();
    }
    uint64_t v24 = v56;
    uint64_t v25 = sub_33D8(v56, (uint64_t)qword_180F40);
    id v26 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v52, v25, v24);
    uint64_t v27 = sub_13EB70();
    uint64_t v28 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v55, 1, 1, v27);
    if (qword_17B1F8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_140670();
    uint64_t v30 = sub_33D8(v29, (uint64_t)qword_180F58);
    uint64_t v31 = *(void *)(v29 - 8);
    uint64_t v32 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v53, v30, v29);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v29);
    uint64_t v33 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v50, 1, 1, v51);
    sub_140640();
    sub_904C(v33, &qword_17C068);
    sub_904C(v32, &qword_17C070);
    sub_904C(v28, &qword_17C078);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v11, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    uint64_t v35 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    uint64_t v49 = v8;
    v35(v11, enum case for ActivityType.failed(_:), v8);
    if (qword_17B1F0 != -1) {
      swift_once();
    }
    id v48 = v11;
    uint64_t v36 = v56;
    uint64_t v37 = sub_33D8(v56, (uint64_t)qword_180F40);
    uint64_t v38 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v52, v37, v36);
    uint64_t v39 = sub_13EB70();
    uint64_t v40 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v55, 1, 1, v39);
    if (qword_17B1F8 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_140670();
    uint64_t v42 = sub_33D8(v41, (uint64_t)qword_180F58);
    uint64_t v43 = *(void *)(v41 - 8);
    uint64_t v44 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v53, v42, v41);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v41);
    uint64_t v46 = (uint64_t)v50;
    uint64_t v45 = v51;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v50, v20, v51);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v46, 0, 1, v45);
    os_log_type_t v47 = v48;
    sub_140640();
    sub_904C(v46, &qword_17C068);
    sub_904C(v44, &qword_17C070);
    sub_904C(v40, &qword_17C078);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v38, v36);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v47, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v45);
  }
}

uint64_t sub_90BB8(uint64_t a1)
{
  return sub_8B820(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (uint64_t (*)(void))&type metadata accessor for ResumeTimerIntent, (uint64_t)&unk_175580, (uint64_t)sub_9147C, (void (*)(id, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of SiriTimerManagerIOS.resumeCurrentTimer(intent:completion:));
}

uint64_t sub_90C18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5830(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_90C7C(uint64_t a1)
{
  return sub_8B0F0(a1, v1);
}

uint64_t sub_90C84(uint64_t a1)
{
  return sub_8A930(a1, *(void *)(v1 + 16));
}

uint64_t sub_90CA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_90D04(uint64_t a1)
{
  return sub_8AA54(a1, *(void *)(v1 + 16));
}

uint64_t sub_90D10(uint64_t a1)
{
  return sub_8B820(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (uint64_t (*)(void))&type metadata accessor for PauseTimerIntent, (uint64_t)&unk_175468, (uint64_t)sub_91170, (void (*)(id, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of SiriTimerManagerIOS.pauseCurrentTimer(intent:completion:));
}

void sub_90D70(uint64_t a1)
{
  sub_8E9C4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_90D78(uint64_t a1)
{
  sub_E12F8(a1, *(void **)(v1 + 16));
}

uint64_t sub_90D80()
{
  return type metadata accessor for UndoTimerChangeStateFlow();
}

void sub_90D88()
{
  sub_90ED8(319, (unint64_t *)&qword_17D800, (void (*)(uint64_t))&type metadata accessor for PluginAction);
  if (v0 <= 0x3F)
  {
    sub_90ED8(319, (unint64_t *)&unk_17D808, (void (*)(uint64_t))&type metadata accessor for SiriTimeEventSender.ReasonDescription);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_90ED8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1415B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_90F2C(uint64_t a1)
{
  sub_8E4A4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_90F38(uint64_t a1)
{
  return sub_91344(a1, "UndoTimerChangeStateFlow: add paused mtTimer successfully, with ID %s");
}

uint64_t sub_90F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_90F54()
{
  return swift_release();
}

uint64_t sub_90F60(uint64_t a1)
{
  return sub_910EC(a1, (uint64_t (*)(void))&static os_log_type_t.error.getter, "UndoTimerChangeStateFlow: add paused mtTimer failed with error %@");
}

uint64_t sub_90F80()
{
  uint64_t v1 = sub_5830(&qword_17DA20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_91050(uint64_t a1)
{
  sub_5830(&qword_17DA20);
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v1 + 24);

  return sub_8ED34(a1, v3, v4);
}

uint64_t sub_910CC(uint64_t a1)
{
  return sub_910EC(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "UndoTimerChangeStateFlow: remove mtTimer failed with error %@");
}

uint64_t sub_910EC(uint64_t a1, uint64_t (*a2)(void), const char *a3)
{
  uint64_t v7 = *(void *)(sub_5830(&qword_17DA20) - 8);
  return sub_8EF0C(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

uint64_t sub_91170(uint64_t a1)
{
  return sub_91490(a1, "UndoTimerChangeStateFlow: timer pause completion", "UndoTimerChangeStateFlow: pause failed");
}

uint64_t sub_91184(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_911D0(uint64_t a1)
{
  sub_5830(&qword_17DA20);

  return sub_8AC54(a1);
}

uint64_t sub_91248(uint64_t a1)
{
  return sub_91490(a1, "UndoTimerChangeStateFlow: stop timer  completion", "UndoTimerChangeStateFlow: stop timer failed");
}

void sub_9125C(uint64_t a1)
{
  sub_8DE24(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_91268()
{
  uint64_t v1 = sub_5830(&qword_17DA20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_91338(uint64_t a1)
{
  return sub_91344(a1, "UndoTimerChangeStateFlow: change mtTimer state successfully for timer with ID %s");
}

uint64_t sub_91344(uint64_t a1, char *a2)
{
  uint64_t v5 = *(void *)(sub_5830(&qword_17DA20) - 8);
  return sub_8E7BC(a1, *(void **)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_913C4(uint64_t a1)
{
  return sub_910EC(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "UndoTimerChangeStateFlow: change mtTimer state failed with error %@");
}

uint64_t sub_913E8()
{
  uint64_t v1 = sub_5830(&qword_17DA20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_9147C(uint64_t a1)
{
  return sub_91490(a1, "UndoTimerChangeStateFlow: timer resume completion", "UndoTimerChangeStateFlow: resume failed");
}

uint64_t sub_91490(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v7 = *(void *)(sub_5830(&qword_17DA20) - 8);
  return sub_8B380(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

uint64_t sub_91510()
{
  return sub_7D844();
}

uint64_t sub_91584()
{
  return sub_827FC();
}

uint64_t sub_915F8()
{
  return sub_83A2C();
}

uint64_t sub_91670()
{
  return sub_7DBC0();
}

uint64_t type metadata accessor for TimerBaseCATsSimple()
{
  uint64_t result = qword_17DA50;
  if (!qword_17DA50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_9175C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_9179C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_91920(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_91A30()
{
  return type metadata accessor for TimerBaseCATsSimple();
}

uint64_t type metadata accessor for SetTimerAttributeCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17DAA0);
}

uint64_t sub_91A58()
{
  return swift_initClassMetadata2();
}

uint64_t sub_91A98()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_142FB0;
  *(void *)(v4 + 32) = 0x6954746567726174;
  *(void *)(v4 + 40) = 0xEB0000000072656DLL;
  uint64_t v5 = *v0;
  if (*v0)
  {
    uint64_t v6 = type metadata accessor for TimerTimer(0);
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    *(void *)(v4 + 56) = 0;
    *(void *)(v4 + 64) = 0;
  }
  *(void *)(v4 + 48) = v7;
  *(void *)(v4 + 72) = v6;
  strcpy((char *)(v4 + 80), "updatedTimer");
  *(unsigned char *)(v4 + 93) = 0;
  *(_WORD *)(v4 + 94) = -5120;
  uint64_t v8 = v0[1];
  if (v8)
  {
    uint64_t v9 = type metadata accessor for TimerTimer(0);
    uint64_t v10 = v8;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    *(void *)(v4 + 104) = 0;
    *(void *)(v4 + 112) = 0;
  }
  *(void *)(v4 + 96) = v10;
  *(void *)(v4 + 120) = v9;
  *(void *)(v4 + 128) = 0x6174614477656976;
  *(void *)(v4 + 136) = 0xE800000000000000;
  uint64_t v11 = type metadata accessor for SetTimerAttributeHandledOnWatchParameters(0);
  sub_8FE8((uint64_t)v0 + *(int *)(v11 + 24), (uint64_t)v3, &qword_17BE78);
  uint64_t v12 = sub_140500();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v3, 1, v12) == 1)
  {
    swift_retain();
    swift_retain();
    sub_904C((uint64_t)v3, &qword_17BE78);
    *(_OWORD *)(v4 + 144) = 0u;
    *(_OWORD *)(v4 + 160) = 0u;
  }
  else
  {
    *(void *)(v4 + 168) = v12;
    uint64_t v14 = sub_187EC((uint64_t *)(v4 + 144));
    (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 32))(v14, v3, v12);
    swift_retain();
    swift_retain();
  }
  return v4;
}

uint64_t sub_91CD8()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_142FB0;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  strcpy((char *)(v7 + 32), "cancelAction");
  *(unsigned char *)(v7 + 45) = 0;
  *(_WORD *)(v7 + 46) = -5120;
  sub_8FE8(v0, (uint64_t)v6, &qword_17BE78);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v6, 1, v9) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    uint64_t v12 = sub_187EC(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v12, v6, v9);
  }
  strcpy((char *)(v7 + 80), "confirmAction");
  *(_WORD *)(v7 + 94) = -4864;
  uint64_t v13 = type metadata accessor for SetTimerAttributePromptExistingParameters(0);
  sub_8FE8(v0 + *(int *)(v13 + 20), (uint64_t)v4, &qword_17BE78);
  if (v11(v4, 1, v9) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17BE78);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v9;
    uint64_t v14 = sub_187EC((uint64_t *)(v7 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v14, v4, v9);
  }
  strcpy((char *)(v7 + 128), "speakableTimer");
  *(unsigned char *)(v7 + 143) = -18;
  uint64_t v15 = *(void *)(v0 + *(int *)(v13 + 24));
  if (v15)
  {
    uint64_t v16 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(v7 + 152) = 0;
    *(void *)(v7 + 160) = 0;
  }
  *(void *)(v7 + 144) = v15;
  *(void *)(v7 + 168) = v16;
  swift_retain();
  return v7;
}

uint64_t sub_91F88(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for SetTimerAttributePromptExistingParameters(0);
  v3[6] = swift_task_alloc();
  return _swift_task_switch(sub_92020, 0, 0);
}

uint64_t sub_92020()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  v5(v1 + *(int *)(v2 + 20), 1, 1, v4);
  *(void *)(v1 + *(int *)(v2 + 24)) = 0;
  v3(v1);
  uint64_t v6 = sub_91CD8();
  v0[7] = v6;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  void *v7 = v0;
  v7[1] = sub_92188;
  return v9(0xD000000000000020, 0x8000000000148F40, v6);
}

uint64_t sub_92188(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_92348;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_922D4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_922D4()
{
  sub_92578(v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

uint64_t sub_92348()
{
  sub_92578(*(void *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_923B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_92550()
{
  return type metadata accessor for SetTimerAttributeCATPatternsExecutor(0);
}

uint64_t type metadata accessor for SetTimerAttributePromptExistingParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17DB50);
}

uint64_t sub_92578(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SetTimerAttributePromptExistingParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_925D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_925E8);
}

uint64_t sub_925E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_926B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_926CC);
}

uint64_t sub_926CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_9278C()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_92824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_92848, 0, 0);
}

uint64_t sub_92848()
{
  uint64_t v1 = v0[3];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[5] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142FC0;
  *(void *)(v2 + 32) = 0x6954746567726174;
  *(void *)(v2 + 40) = 0xEB0000000072656DLL;
  uint64_t v3 = 0;
  if (v1)
  {
    uint64_t v3 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  uint64_t v4 = v0[4];
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  strcpy((char *)(v2 + 80), "updatedTimer");
  *(unsigned char *)(v2 + 93) = 0;
  *(_WORD *)(v2 + 94) = -5120;
  *(void *)(v2 + 120) = type metadata accessor for TimerTimer(0);
  *(void *)(v2 + 96) = v4;
  uint64_t v7 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  void *v5 = v0;
  v5[1] = sub_929CC;
  return v7(0xD000000000000019, 0x8000000000148F70, v2);
}

uint64_t sub_929CC(uint64_t a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_92AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_5830(&qword_17BE78);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for SetTimerAttributePromptExistingParameters(0);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_92BBC, 0, 0);
}

uint64_t sub_92BBC()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  uint64_t v6 = v1 + *(int *)(v2 + 20);
  v5(v6, 1, 1, v4);
  uint64_t v7 = *(int *)(v2 + 24);
  *(void *)(v1 + v7) = 0;
  *(void *)(v1 + v7) = sub_174C0(0, 0);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v1);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v6);
  uint64_t v8 = sub_91CD8();
  v0[11] = v8;
  int v11 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[12] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_92DC8;
  return v11(0xD000000000000020, 0x8000000000148F40, v8);
}

uint64_t sub_92DC8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_92F94;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_92F14;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_92F14()
{
  sub_92578(v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[14];
  return v1(v2);
}

uint64_t sub_92F94()
{
  sub_92578(*(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for SetTimerAttributeHandledOnWatchParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17DBF8);
}

uint64_t *sub_93030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_140500();
    uint64_t v10 = *(void *)(v9 - 8);
    int v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_retain();
    swift_retain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_5830(&qword_17BE78);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_931B8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_140500();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_93290(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_140500();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_933C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_9356C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_140500();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_93680(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_93818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9382C);
}

uint64_t sub_9382C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    int v12 = (char *)a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_938EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_93900);
}

void *sub_93900(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_939AC()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for TimerUnsupportedValueStrategy()
{
  return sub_6F024();
}

uint64_t sub_93A5C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17DC38);
  sub_33D8(v0, (uint64_t)qword_17DC38);
  return sub_140E60();
}

uint64_t sub_93AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[25] = a2;
  v3[26] = a3;
  unsigned char v3[24] = a1;
  uint64_t v5 = sub_13EFF0();
  v3[27] = v5;
  v3[28] = *(void *)(v5 - 8);
  v3[29] = swift_task_alloc();
  uint64_t v6 = sub_13ECE0();
  v3[30] = v6;
  v3[31] = *(void *)(v6 - 8);
  v3[32] = swift_task_alloc();
  sub_5830(&qword_17DD00);
  v3[33] = swift_task_alloc();
  uint64_t v7 = sub_140DB0();
  v3[34] = v7;
  v3[35] = *(void *)(v7 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  uint64_t v8 = sub_141170();
  v3[38] = v8;
  v3[39] = *(void *)(v8 - 8);
  unsigned char v3[40] = swift_task_alloc();
  uint64_t v9 = sub_140680();
  v3[41] = v9;
  v3[42] = *(void *)(v9 - 8);
  v3[43] = swift_task_alloc();
  uint64_t v10 = sub_1406A0();
  v3[44] = v10;
  v3[45] = *(void *)(v10 - 8);
  v3[46] = swift_task_alloc();
  sub_140590();
  v3[47] = swift_task_alloc();
  v3[48] = *(void *)(a3 + 16);
  uint64_t v11 = sub_13F220();
  v3[49] = v11;
  v3[50] = *(void *)(v11 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  return _swift_task_switch(sub_93E1C, 0, 0);
}

uint64_t sub_93E1C()
{
  uint64_t v53 = v0;
  if (qword_17B200 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[25];
  uint64_t v5 = sub_33D8(v0[38], (uint64_t)qword_17DC38);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  uint64_t v50 = v5;
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141480();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[52];
  if (v9)
  {
    log = v7;
    uint64_t v11 = v0[50];
    uint64_t v12 = v0[51];
    uint64_t v13 = v0[49];
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    v6(v12, v10, v13);
    uint64_t v15 = sub_141260();
    v0[23] = sub_58C0(v15, v16, &v52);
    sub_1415C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v13);
    uint64_t v7 = log;
    _os_log_impl(&dword_0, log, v8, "[TimerUnsupportedValueStrategy.makeUnsupportedValueOutput] Called with resolveRecord %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0[50] + 8))(v0[52], v0[49]);
  }

  uint64_t v17 = v0[42];
  uint64_t v18 = v0[43];
  uint64_t v20 = v0[40];
  uint64_t v19 = v0[41];
  uint64_t v21 = v0[38];
  uint64_t v22 = v0[39];
  uint64_t v23 = v0[35];
  uint64_t v47 = v0[33];
  os_log_t loga = (os_log_t)v0[34];
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[53] = sub_140470();
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v18, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v50, v21);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v24 = (void *)sub_13F200();
  [v24 unsupportedReason];

  sub_140DA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, os_log_t))(v23 + 48))(v47, 1, loga) == 1)
  {
    sub_904C(v0[33], &qword_17DD00);
    uint64_t v51 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v25 = (void *)swift_task_alloc();
    v0[69] = v25;
    *uint64_t v25 = v0;
    id v26 = sub_95910;
LABEL_19:
    v25[1] = v26;
    unint64_t v34 = 0x73614272656D6974;
    unint64_t v33 = 0xEF726F7272652365;
    goto LABEL_20;
  }
  uint64_t v27 = v0[36];
  uint64_t v28 = v0[37];
  uint64_t v29 = v0[34];
  uint64_t v30 = v0[35];
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 32))(v28, v0[33], v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v27, v28, v29);
  int v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 88))(v27, v29);
  if (v31 == enum case for TimerHandlerError.noResultsAfterFiltering(_:))
  {
    (*(void (**)(void, void))(v0[35] + 96))(v0[36], v0[34]);
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v51 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v32 = (void *)swift_task_alloc();
    v0[57] = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_948E4;
    unint64_t v33 = 0x8000000000147BE0;
    unint64_t v34 = 0xD000000000000012;
LABEL_20:
    return ((uint64_t (*)(unint64_t, unint64_t, void *))v51)(v34, v33, _swiftEmptyArrayStorage);
  }
  if (v31 == enum case for TimerHandlerError.generic(_:)
    || v31 == enum case for TimerHandlerError.timersAmbiguous(_:)
    || v31 == enum case for TimerHandlerError.durationNeedsValue(_:))
  {
    goto LABEL_18;
  }
  if (v31 == enum case for TimerHandlerError.durationTooLong(_:))
  {
    type metadata accessor for CreateTimerCATPatternsExecutor(0);
    sub_140580();
    v0[61] = sub_140470();
    uint64_t v51 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v35 = (void *)swift_task_alloc();
    v0[62] = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_94F4C;
    unint64_t v36 = 0xD000000000000020;
    uint64_t v37 = "createTimer#errorDurationTooLong";
LABEL_16:
    unint64_t v33 = (unint64_t)(v37 - 32) | 0x8000000000000000;
    unint64_t v34 = v36;
    goto LABEL_20;
  }
  if (v31 == enum case for TimerHandlerError.failedToAdd(_:))
  {
LABEL_18:
    uint64_t v51 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v25 = (void *)swift_task_alloc();
    v0[59] = v25;
    *uint64_t v25 = v0;
    id v26 = sub_94C18;
    goto LABEL_19;
  }
  if (v31 == enum case for TimerHandlerError.noResults(_:)) {
    goto LABEL_10;
  }
  if (v31 == enum case for TimerHandlerError.noTimersExist(_:))
  {
    uint64_t v39 = v0[48];
    uint64_t v41 = v0[25];
    uint64_t v40 = v0[26];
    uint64_t v42 = (void *)swift_task_alloc();
    v0[54] = v42;
    v42[2] = v39;
    v42[3] = *(void *)(v40 + 24);
    v42[4] = v41;
    uint64_t v43 = (void *)swift_task_alloc();
    v0[55] = v43;
    *uint64_t v43 = v0;
    v43[1] = sub_946D0;
    return sub_11DBA8((uint64_t)sub_96854, (uint64_t)v42);
  }
  else
  {
    if (v31 == enum case for TimerHandlerError.setAttributeUnsupported(_:)) {
      goto LABEL_18;
    }
    if (v31 == enum case for TimerHandlerError.pauseResumeSleepTimersUnsupported(_:))
    {
      uint64_t v51 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v44 = (void *)swift_task_alloc();
      v0[67] = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_955DC;
      unint64_t v33 = 0x8000000000149000;
      unint64_t v34 = 0xD000000000000025;
      goto LABEL_20;
    }
    if (v31 == enum case for TimerHandlerError.createSleepTimerNothingPlaying(_:))
    {
      type metadata accessor for CreateTimerCATPatternsExecutor(0);
      sub_140580();
      v0[64] = sub_140470();
      uint64_t v51 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v45 = (void *)swift_task_alloc();
      v0[65] = v45;
      *uint64_t v45 = v0;
      v45[1] = sub_95294;
      unint64_t v36 = 0xD00000000000001CLL;
      uint64_t v37 = "createTimer#sleepUnavailable";
      goto LABEL_16;
    }
    uint64_t v46 = v0[34];
    return _diagnoseUnexpectedEnumCase<A>(type:)(v46, v46);
  }
}

uint64_t sub_946D0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v3[56] = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_95F10;
  }
  else {
    uint64_t v4 = sub_94808;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_94808()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[37], v0[34]);
  v0[71] = v0[3];
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_95C0C;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_948E4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  v3[58] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_94ADC;
  }
  else {
    uint64_t v4 = sub_94A00;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_94A00()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[37], v0[34]);
  v0[71] = v0[6];
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_95C0C;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_94ADC()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_94C18(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = v1;
  v3[60] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_94E10;
  }
  else {
    uint64_t v4 = sub_94D34;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_94D34()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[37], v0[34]);
  v0[71] = v0[9];
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_95C0C;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_94E10()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_94F4C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[11] = v2;
  v3[12] = a1;
  v3[13] = v1;
  v3[63] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_9514C;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_95070;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_95070()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[37], v0[34]);
  v0[71] = v0[12];
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_95C0C;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_9514C()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_95294(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[14] = v2;
  v3[15] = a1;
  v3[16] = v1;
  v3[66] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_95494;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_953B8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_953B8()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[37], v0[34]);
  v0[71] = v0[15];
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_95C0C;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_95494()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_955DC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[17] = v2;
  v3[18] = a1;
  v3[19] = v1;
  v3[68] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_957D4;
  }
  else {
    uint64_t v4 = sub_956F8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_956F8()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[37], v0[34]);
  v0[71] = v0[18];
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_95C0C;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_957D4()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_95910(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[20] = v2;
  v3[21] = a1;
  v3[22] = v1;
  v3[70] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_95AF0;
  }
  else {
    uint64_t v4 = sub_95A2C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_95A2C()
{
  v0[71] = v0[21];
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_95C0C;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_95AF0()
{
  swift_release();
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_95C0C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 256);
  uint64_t v3 = *(void *)(*(void *)v1 + 248);
  uint64_t v4 = *(void *)(*(void *)v1 + 240);
  uint64_t v5 = *(void *)(*(void *)v1 + 232);
  uint64_t v6 = *(void *)(*(void *)v1 + 224);
  uint64_t v7 = *(void *)(*(void *)v1 + 216);
  *(void *)(*(void *)v1 + 584) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    os_log_type_t v8 = sub_9604C;
  }
  else {
    os_log_type_t v8 = sub_95DE0;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_95DE0()
{
  uint64_t v1 = (void *)v0[71];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[45];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_95F10()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_9604C()
{
  uint64_t v1 = (void *)v0[71];
  swift_release();

  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_96170(uint64_t a1)
{
  uint64_t v2 = sub_140730();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140720();
  BOOL v6 = sub_1406E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    sub_13F220();
    uint64_t v11 = sub_13F1F0();
    sub_5830(&qword_17DD08);
    if (swift_dynamicCast())
    {
      sub_3498(v9, (uint64_t)v12);
      sub_90A8(v12, v12[3]);
      sub_140F90();
      *(void *)a1 = v8;
      *(unsigned char *)(a1 + 8) = 0;
      return _s20HandleIntentStrategyVwxx_1((uint64_t)v12);
    }
    else
    {
      uint64_t v10 = 0;
      memset(v9, 0, sizeof(v9));
      return sub_904C((uint64_t)v9, &qword_17DD10);
    }
  }
  return result;
}

uint64_t sub_962FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  void *v7 = v3;
  v7[1] = sub_963AC;
  return sub_93AA8(a1, a2, a3);
}

uint64_t sub_963AC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_964E0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_964E0()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_965A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_159A4;
  return sub_962FC(a1, a2, a3);
}

uint64_t sub_96650(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_17DCE8 + dword_17DCE8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  void *v5 = v2;
  v5[1] = sub_14FBC;
  return v9(a1, v6, v7);
}

uint64_t sub_96704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_967C8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_967E8, 0, 0);
}

uint64_t sub_967E8()
{
  sub_13F220();
  uint64_t v1 = sub_13F1F0();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_96854(uint64_t a1)
{
  return sub_96170(a1);
}

NSNumber UsoEntity_common_Timer.isMultiple.getter()
{
  uint64_t v1 = sub_13FBE0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v50 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5830(&qword_17DD30);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = sub_5830(&qword_17DD38);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v57 = (char *)&v45 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v53 = (char *)&v45 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v45 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v45 - v23;
  uint64_t v25 = sub_13F8C0();
  uint64_t v49 = v12;
  uint64_t v55 = v0;
  if (v25)
  {
    sub_13FBD0();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v24, 1, 1, v1);
  }
  uint64_t v51 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v51(v22, enum case for UsoEntity_common_Quantifier.DefinedValues.common_Quantifier_All(_:), v1);
  uint64_t v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56);
  v52(v22, 0, 1, v1);
  uint64_t v56 = v4;
  uint64_t v26 = (uint64_t)&v8[*(int *)(v4 + 48)];
  sub_8FE8((uint64_t)v24, (uint64_t)v8, &qword_17DD38);
  sub_8FE8((uint64_t)v22, v26, &qword_17DD38);
  uint64_t v58 = v2;
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v27((uint64_t)v8, 1, v1) == 1)
  {
    sub_904C((uint64_t)v22, &qword_17DD38);
    sub_904C((uint64_t)v24, &qword_17DD38);
    if (v27(v26, 1, v1) == 1) {
      goto LABEL_17;
    }
    goto LABEL_9;
  }
  sub_8FE8((uint64_t)v8, (uint64_t)v19, &qword_17DD38);
  if (v27(v26, 1, v1) == 1)
  {
    sub_904C((uint64_t)v22, &qword_17DD38);
    sub_904C((uint64_t)v24, &qword_17DD38);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v1);
LABEL_9:
    sub_904C((uint64_t)v8, &qword_17DD30);
    uint64_t v28 = v56;
    uint64_t v29 = (uint64_t)v57;
    goto LABEL_10;
  }
  id v48 = v27;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 32);
  uint64_t v46 = v19;
  unint64_t v33 = v50;
  v32(v50, v26, v1);
  sub_98684(&qword_17DD40, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_Quantifier.DefinedValues);
  int v47 = sub_141230();
  unint64_t v34 = *(void (**)(char *, uint64_t))(v58 + 8);
  v34(v33, v1);
  sub_904C((uint64_t)v22, &qword_17DD38);
  sub_904C((uint64_t)v24, &qword_17DD38);
  v34(v46, v1);
  uint64_t v27 = v48;
  sub_904C((uint64_t)v8, &qword_17DD38);
  uint64_t v28 = v56;
  uint64_t v29 = (uint64_t)v57;
  if (v47) {
    goto LABEL_23;
  }
LABEL_10:
  if (sub_13F8C0())
  {
    uint64_t v30 = (uint64_t)v53;
    sub_13FBD0();
    swift_release();
    uint64_t v8 = v54;
    int v31 = (void (*)(uint64_t, void, uint64_t, uint64_t))v52;
  }
  else
  {
    int v31 = (void (*)(uint64_t, void, uint64_t, uint64_t))v52;
    uint64_t v30 = (uint64_t)v53;
    v52(v53, 1, 1, v1);
    uint64_t v8 = v54;
  }
  v51((char *)v29, enum case for UsoEntity_common_Quantifier.DefinedValues.common_Quantifier_Multiple(_:), v1);
  v31(v29, 0, 1, v1);
  uint64_t v35 = (uint64_t)&v8[*(int *)(v28 + 48)];
  sub_8FE8(v30, (uint64_t)v8, &qword_17DD38);
  sub_8FE8(v29, v35, &qword_17DD38);
  if (v27((uint64_t)v8, 1, v1) != 1)
  {
    uint64_t v37 = v27;
    uint64_t v38 = (uint64_t)v49;
    sub_8FE8((uint64_t)v8, (uint64_t)v49, &qword_17DD38);
    if (v37(v35, 1, v1) == 1)
    {
      sub_904C(v29, &qword_17DD38);
      sub_904C(v30, &qword_17DD38);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v38, v1);
      goto LABEL_20;
    }
    uint64_t v39 = v29;
    uint64_t v40 = v58;
    uint64_t v41 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v50, v35, v1);
    sub_98684(&qword_17DD40, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_Quantifier.DefinedValues);
    char v42 = sub_141230();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
    v43(v41, v1);
    sub_904C(v39, &qword_17DD38);
    sub_904C(v30, &qword_17DD38);
    v43((char *)v38, v1);
    sub_904C((uint64_t)v8, &qword_17DD38);
    if ((v42 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_23:
    Swift::Int v36 = 1;
    goto LABEL_24;
  }
  sub_904C(v29, &qword_17DD38);
  sub_904C(v30, &qword_17DD38);
  if (v27(v35, 1, v1) != 1)
  {
LABEL_20:
    sub_904C((uint64_t)v8, &qword_17DD30);
LABEL_21:
    Swift::Int v36 = 0;
    goto LABEL_24;
  }
LABEL_17:
  sub_904C((uint64_t)v8, &qword_17DD38);
  Swift::Int v36 = 1;
LABEL_24:
  sub_2FF44();
  return sub_141580(v36);
}

uint64_t sub_96FF8()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17DD18);
  sub_33D8(v0, (uint64_t)qword_17DD18);
  return sub_140E60();
}

id UsoEntity_common_Timer.remainingTime.getter()
{
  if (sub_13F9C0())
  {
    sub_13FAB0();
    return (id)swift_release();
  }
  else
  {
    uint64_t v1 = self;
    return [v1 defaultDuration];
  }
}

id UsoEntity_common_Timer.label.getter()
{
  sub_13F9E0();
  id v1 = v0;
  if (v0)
  {
    sub_141280();
    swift_bridgeObjectRelease();
    id v2 = objc_allocWithZone((Class)INSpeakableString);
    NSString v3 = sub_141240();
    swift_bridgeObjectRelease();
    id v1 = [v2 initWithSpokenPhrase:v3];
  }
  return v1;
}

uint64_t UsoEntity_common_Timer.timerState.getter()
{
  uint64_t v114 = sub_5830(&qword_17DD60);
  uint64_t v1 = __chkstk_darwin(v114);
  long long v105 = &v90[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v1);
  uint64_t v4 = &v90[-v3];
  uint64_t v5 = &qword_17DD68;
  uint64_t v6 = sub_5830(&qword_17DD68);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v96 = &v90[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v7);
  id v107 = &v90[-v10];
  uint64_t v11 = __chkstk_darwin(v9);
  long long v106 = &v90[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v102 = &v90[-v14];
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v120 = &v90[-v16];
  __chkstk_darwin(v15);
  uint64_t v103 = &v90[-v17];
  uint64_t v18 = sub_13F610();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v101 = &v90[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = &v90[-v24];
  __chkstk_darwin(v23);
  unint64_t v121 = &v90[-v26];
  sub_5830(&qword_17DD70);
  uint64_t v27 = *(void *)(v19 + 72);
  unint64_t v28 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_142FC0;
  uint64_t v30 = *(void (**)(unint64_t))(v20 + 104);
  v20 += 104;
  int v95 = enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerAttributesPaused(_:);
  v30(v29 + v28);
  unint64_t v100 = v29 + v28;
  uint64_t v99 = v27;
  int v31 = enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerAttributesRunning(_:);
  uint64_t v122 = v18;
  ((void (*)(unint64_t, void, uint64_t))v30)(v29 + v28 + v27, enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerAttributesRunning(_:), v18);
  int v32 = 0;
  unint64_t v33 = 0;
  uint64_t v118 = (void (**)(unsigned char *, unint64_t, uint64_t))(v20 - 88);
  uint64_t v98 = (uint64_t (**)(unsigned char *, uint64_t))(v20 - 16);
  unint64_t v110 = (void (**)(unsigned char *, uint64_t))(v20 - 96);
  uint64_t v112 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 - 56);
  uint64_t v113 = (void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 - 48);
  uint64_t v97 = (void (**)(unsigned char *, uint64_t, uint64_t))(v20 - 72);
  uint64_t v93 = v0;
  uint64_t v111 = v4;
  uint64_t v94 = v29;
  uint64_t v92 = v25;
  int v91 = v31;
  while (1)
  {
    if (v33 >= *(void *)(v29 + 16)) {
      goto LABEL_74;
    }
    int v104 = v32;
    unint64_t v34 = (void (*)(unsigned char *, unsigned char *, uint64_t))*v118;
    Swift::Int v36 = v121;
    uint64_t v35 = v122;
    (*v118)(v121, v100 + v33 * v99, v122);
    uint64_t v117 = v34;
    v34(v25, v36, v35);
    int v37 = (*v98)(v25, v35);
    if (v37 == v31) {
      break;
    }
    if (v37 != v95)
    {
      os_log_type_t v75 = *v110;
      uint64_t v76 = v122;
      (*v110)(v121, v122);
      v75(v25, v76);
      goto LABEL_5;
    }
    unint64_t v58 = sub_13F9B0();
    if (v58)
    {
      unint64_t v59 = v58;
      if (!(v58 >> 62))
      {
        uint64_t v60 = *(void *)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFFF8));
        if (v60) {
          goto LABEL_34;
        }
        goto LABEL_3;
      }
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1417D0();
      swift_bridgeObjectRelease();
      if (!v60) {
        goto LABEL_3;
      }
LABEL_34:
      unint64_t v116 = sub_13F620();
      unint64_t v119 = v59 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      uint64_t v61 = 4;
      uint64_t v115 = v59;
      uint64_t v109 = v60;
      while (2)
      {
        uint64_t v62 = v61 - 4;
        if (v119)
        {
          sub_1416A0();
          uint64_t v63 = v61 - 3;
          if (__OFADD__(v62, 1)) {
            goto LABEL_73;
          }
        }
        else
        {
          swift_retain();
          uint64_t v63 = v61 - 3;
          if (__OFADD__(v62, 1))
          {
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            swift_once();
            goto LABEL_59;
          }
        }
        sub_13F8B0();
        if (v123)
        {
          sub_13F740();
          swift_release();
        }
        sub_13FB40();
        swift_release();
        if (v124)
        {
          os_log_type_t v64 = v106;
          sub_13F600();
          os_log_type_t v65 = v107;
          uint64_t v66 = v122;
          v117(v107, v121, v122);
          (*v113)(v65, 0, 1, v66);
          BOOL v67 = v105;
          uint64_t v68 = (uint64_t)&v105[*(int *)(v114 + 48)];
          sub_8FE8((uint64_t)v64, (uint64_t)v105, v5);
          sub_8FE8((uint64_t)v65, v68, v5);
          uint64_t v69 = *v112;
          if ((*v112)((uint64_t)v67, 1, v66) == 1)
          {
            swift_release();
            unsigned int v70 = v69(v68, 1, v122);
            uint64_t v4 = v111;
            if (v70 == 1)
            {
              sub_904C((uint64_t)v105, &qword_17DD68);
              sub_904C((uint64_t)v107, &qword_17DD68);
              sub_904C((uint64_t)v106, &qword_17DD68);
              swift_release();
LABEL_67:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              if (qword_17B208 != -1) {
                swift_once();
              }
              uint64_t v86 = sub_141170();
              sub_33D8(v86, (uint64_t)qword_17DD18);
              uint64_t v87 = sub_141160();
              os_log_type_t v88 = sub_141450();
              if (os_log_type_enabled(v87, v88))
              {
                long long v89 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)long long v89 = 0;
                _os_log_impl(&dword_0, v87, v88, "USO parse has timer state of .paused", v89, 2u);
                swift_slowDealloc();
              }

              (*v110)(v121, v122);
              return 2;
            }
LABEL_50:
            sub_904C((uint64_t)v105, &qword_17DD60);
            sub_904C((uint64_t)v107, v5);
            sub_904C((uint64_t)v106, v5);
            swift_release();
            uint64_t v60 = v109;
          }
          else
          {
            uint64_t v71 = v96;
            sub_8FE8((uint64_t)v67, (uint64_t)v96, v5);
            if (v69(v68, 1, v122) == 1)
            {
              swift_release();
              (*v110)(v71, v122);
              uint64_t v4 = v111;
              goto LABEL_50;
            }
            uint64_t v72 = v122;
            (*v97)(v101, v68, v122);
            sub_98684(&qword_17DD78, (void (*)(uint64_t))&type metadata accessor for UsoEntity_appleTimer_TimerAttribute.DefinedValues);
            char v73 = sub_141230();
            swift_release();
            uint64_t v74 = *v110;
            (*v110)(v71, v72);
            v74(v101, v72);
            sub_904C((uint64_t)v67, v5);
            sub_904C((uint64_t)v107, v5);
            sub_904C((uint64_t)v106, v5);
            swift_release();
            uint64_t v4 = v111;
            uint64_t v60 = v109;
            if (v73) {
              goto LABEL_67;
            }
          }
        }
        else
        {
          swift_release();
        }
        ++v61;
        if (v63 == v60)
        {
LABEL_2:
          swift_bridgeObjectRelease();
          int v31 = v91;
          goto LABEL_3;
        }
        continue;
      }
    }
LABEL_4:
    (*v110)(v121, v122);
LABEL_5:
    int v32 = 1;
    unint64_t v33 = 1;
    if (v104)
    {
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      if (qword_17B208 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_141170();
      sub_33D8(v82, (uint64_t)qword_17DD18);
      uint64_t v83 = sub_141160();
      os_log_type_t v84 = sub_141450();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v85 = 0;
        _os_log_impl(&dword_0, v83, v84, "USO parse has timer state of .unknown", v85, 2u);
        swift_slowDealloc();
      }

      return 0;
    }
  }
  unint64_t v38 = sub_13F9B0();
  if (!v38) {
    goto LABEL_4;
  }
  unint64_t v39 = v38;
  if (!(v38 >> 62))
  {
    uint64_t v40 = *(void *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFFF8));
    if (v40) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1417D0();
  swift_bridgeObjectRelease();
  if (!v40)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v29 = v94;
    uint64_t v25 = v92;
    goto LABEL_4;
  }
LABEL_11:
  uint64_t v115 = sub_13F620();
  unint64_t v116 = v39 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v41 = 4;
  char v42 = v103;
  unint64_t v108 = v39;
  uint64_t v109 = v40;
  while (1)
  {
    uint64_t v43 = v41 - 4;
    if (v116)
    {
      uint64_t v44 = sub_1416A0();
      uint64_t v45 = v41 - 3;
      if (__OFADD__(v43, 1)) {
        goto LABEL_72;
      }
    }
    else
    {
      uint64_t v44 = *(void *)(v39 + 8 * v41);
      swift_retain();
      uint64_t v45 = v41 - 3;
      if (__OFADD__(v43, 1))
      {
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
    }
    sub_13F8B0();
    if (v123)
    {
      sub_13F740();
      swift_release();
    }
    sub_13FB40();
    swift_release();
    if (!v124)
    {
      swift_release();
      goto LABEL_13;
    }
    unint64_t v119 = v44;
    sub_13F600();
    uint64_t v46 = v120;
    uint64_t v47 = v122;
    v117(v120, v121, v122);
    (*v113)(v46, 0, 1, v47);
    uint64_t v48 = (uint64_t)&v4[*(int *)(v114 + 48)];
    sub_8FE8((uint64_t)v42, (uint64_t)v4, v5);
    sub_8FE8((uint64_t)v46, v48, v5);
    uint64_t v49 = v5;
    uint64_t v50 = (uint64_t)v4;
    uint64_t v51 = *v112;
    if ((*v112)(v50, 1, v47) == 1) {
      break;
    }
    uint64_t v53 = v122;
    uint64_t v54 = v102;
    sub_8FE8(v50, (uint64_t)v102, v49);
    if (v51(v48, 1, v53) == 1)
    {
      swift_release();
      (*v110)(v54, v53);
      char v42 = v103;
      uint64_t v40 = v109;
      goto LABEL_27;
    }
    uint64_t v55 = v101;
    (*v97)(v101, v48, v53);
    sub_98684(&qword_17DD78, (void (*)(uint64_t))&type metadata accessor for UsoEntity_appleTimer_TimerAttribute.DefinedValues);
    char v56 = sub_141230();
    swift_release();
    id v57 = *v110;
    (*v110)(v54, v53);
    v57(v55, v53);
    sub_904C(v50, v49);
    sub_904C((uint64_t)v120, v49);
    char v42 = v103;
    sub_904C((uint64_t)v103, v49);
    swift_release();
    uint64_t v4 = (unsigned char *)v50;
    uint64_t v5 = v49;
    unint64_t v39 = v108;
    uint64_t v40 = v109;
    if (v56) {
      goto LABEL_58;
    }
LABEL_13:
    ++v41;
    if (v45 == v40) {
      goto LABEL_2;
    }
  }
  swift_release();
  unsigned int v52 = v51(v48, 1, v122);
  uint64_t v40 = v109;
  if (v52 != 1)
  {
LABEL_27:
    uint64_t v4 = v111;
    sub_904C((uint64_t)v111, &qword_17DD60);
    uint64_t v5 = &qword_17DD68;
    sub_904C((uint64_t)v120, &qword_17DD68);
    sub_904C((uint64_t)v42, &qword_17DD68);
    swift_release();
    unint64_t v39 = v108;
    goto LABEL_13;
  }
  sub_904C((uint64_t)v111, &qword_17DD68);
  sub_904C((uint64_t)v120, &qword_17DD68);
  sub_904C((uint64_t)v42, &qword_17DD68);
  swift_release();
LABEL_58:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (qword_17B208 != -1) {
    goto LABEL_75;
  }
LABEL_59:
  uint64_t v77 = sub_141170();
  sub_33D8(v77, (uint64_t)qword_17DD18);
  unint64_t v78 = sub_141160();
  os_log_type_t v79 = sub_141450();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v80 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v80 = 0;
    _os_log_impl(&dword_0, v78, v79, "USO parse has timer state of .running", v80, 2u);
    swift_slowDealloc();
  }

  (*v110)(v121, v122);
  return 1;
}

uint64_t sub_98084(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_13F610();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_5830(&qword_17DD60);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_5830(&qword_17DD68);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - v15;
  sub_13F8B0();
  if (v29)
  {
    sub_13F740();
    swift_release();
  }
  sub_13F620();
  sub_13FB40();
  swift_release();
  if (!v30)
  {
    char v20 = 0;
    return v20 & 1;
  }
  uint64_t v26 = v2;
  sub_13F600();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v27, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  uint64_t v17 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_8FE8((uint64_t)v16, (uint64_t)v8, &qword_17DD68);
  sub_8FE8((uint64_t)v14, v17, &qword_17DD68);
  uint64_t v18 = v4;
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v8, 1, v3) != 1)
  {
    sub_8FE8((uint64_t)v8, (uint64_t)v28, &qword_17DD68);
    if (v19(v17, 1, v3) != 1)
    {
      uint64_t v21 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v25, v17, v3);
      sub_98684(&qword_17DD78, (void (*)(uint64_t))&type metadata accessor for UsoEntity_appleTimer_TimerAttribute.DefinedValues);
      char v20 = sub_141230();
      swift_release();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v21, v3);
      sub_904C((uint64_t)v14, &qword_17DD68);
      sub_904C((uint64_t)v16, &qword_17DD68);
      v22(v28, v3);
      sub_904C((uint64_t)v8, &qword_17DD68);
      return v20 & 1;
    }
    swift_release();
    sub_904C((uint64_t)v14, &qword_17DD68);
    sub_904C((uint64_t)v16, &qword_17DD68);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v28, v3);
    goto LABEL_10;
  }
  swift_release();
  sub_904C((uint64_t)v14, &qword_17DD68);
  sub_904C((uint64_t)v16, &qword_17DD68);
  if (v19(v17, 1, v3) != 1)
  {
LABEL_10:
    sub_904C((uint64_t)v8, &qword_17DD60);
    char v20 = 0;
    return v20 & 1;
  }
  sub_904C((uint64_t)v8, &qword_17DD68);
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_98518(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1417D0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      do
      {
        uint64_t v7 = v6 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = sub_1416A0();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * v6);
          swift_retain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v15 = v8;
        char v10 = a1(&v15);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v12 & 1;
        }
        char v11 = v10;
        swift_release();
        if (v11)
        {
          swift_bridgeObjectRelease();
          char v12 = 1;
          return v12 & 1;
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_98664(uint64_t a1)
{
  return sub_98084(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_98684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_986CC()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17DD80);
  sub_33D8(v0, (uint64_t)qword_17DD80);
  return sub_140E60();
}

uint64_t sub_98718()
{
  uint64_t v0 = sub_140590();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for TimerBaseCATs_Async();
  sub_140580();
  uint64_t result = sub_140470();
  qword_17DD98 = result;
  return result;
}

uint64_t sub_987A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  sub_5595C(0, (unint64_t *)&unk_17DDC0);
  sub_5830(&qword_17BF00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_142E80;
  *(void *)(v8 + 32) = a5;
  sub_141330();
  swift_bridgeObjectRetain();
  id v9 = a5;
  char v10 = (void *)sub_141490();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_142E80;
  *(void *)(v11 + 32) = a6;
  sub_141330();
  swift_bridgeObjectRetain();
  id v12 = a6;
  uint64_t v13 = (void *)sub_141490();
  id v14 = [objc_allocWithZone((Class)SASTItemGroup) init];
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_143F50;
  *(void *)(v15 + 32) = v10;
  *(void *)(v15 + 40) = v13;
  sub_141330();
  id v16 = v10;
  id v17 = v13;
  sub_5830((uint64_t *)&unk_17DDD0);
  Class isa = sub_1412F0().super.isa;
  swift_bridgeObjectRelease();
  [v14 setTemplateItems:isa];

  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_142E80;
  *(void *)(v19 + 32) = v14;
  uint64_t v21 = v19;
  sub_141330();

  return v21;
}

uint64_t sub_989A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v8 = [objc_allocWithZone((Class)SAUIConfirmationView) init];
  NSString v9 = sub_141240();
  [v8 setConfirmText:v9];

  NSString v10 = sub_141240();
  [v8 setDenyText:v10];

  sub_5830(&qword_17BF00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_142E80;
  *(void *)(v11 + 32) = a5;
  sub_141330();
  id v12 = a5;
  sub_5830((uint64_t *)&unk_17D710);
  Class isa = sub_1412F0().super.isa;
  swift_bridgeObjectRelease();
  [v8 setConfirmCommands:isa];

  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_142E80;
  *(void *)(v14 + 32) = a6;
  sub_141330();
  id v15 = a6;
  Class v16 = sub_1412F0().super.isa;
  swift_bridgeObjectRelease();
  [v8 setDenyCommands:v16];

  id v17 = [objc_allocWithZone((Class)SAUIConfirmationOption) init];
  id v18 = [v8 confirmText];
  [v17 setLabel:v18];

  [v17 setType:SAUIConfirmationOptionConfirmationOptionTypeCONFIRMValue];
  id v19 = [v8 confirmCommands];
  [v17 setCommands:v19];

  id v20 = [objc_allocWithZone((Class)SAUIConfirmationOption) init];
  id v21 = [v8 denyText];
  [v20 setLabel:v21];

  [v20 setType:SAUIConfirmationOptionConfirmationOptionTypeDENYValue];
  id v22 = [v8 denyCommands];
  [v20 setCommands:v22];

  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_143F50;
  *(void *)(v23 + 32) = v17;
  *(void *)(v23 + 40) = v20;
  sub_141330();
  sub_5595C(0, &qword_17DDE0);
  id v24 = v17;
  id v25 = v20;
  Class v26 = sub_1412F0().super.isa;
  swift_bridgeObjectRelease();
  [v8 setAllConfirmationOptions:v26];

  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_142E80;
  *(void *)(v27 + 32) = v8;
  uint64_t v29 = v27;
  sub_141330();

  return v29;
}

uint64_t sub_98D38(char a1)
{
  *(unsigned char *)(v1 + 240) = a1;
  uint64_t v2 = sub_13EE40();
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = *(void *)(v2 - 8);
  *(void *)(v1 + 88) = swift_task_alloc();
  uint64_t v3 = sub_13F040();
  *(void *)(v1 + 96) = v3;
  *(void *)(v1 + 104) = *(void *)(v3 - 8);
  *(void *)(v1 + 112) = swift_task_alloc();
  *(void *)(v1 + 120) = swift_task_alloc();
  sub_5830(&qword_17DDA8);
  *(void *)(v1 + 128) = swift_task_alloc();
  *(void *)(v1 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_98EA4, 0, 0);
}

uint64_t sub_98EA4()
{
  if (qword_17B218 != -1) {
    swift_once();
  }
  uint64_t v4 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_98FA4;
  uint64_t v2 = *(void *)(v0 + 120);
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v4)(v2, 0xD00000000000001BLL, 0x8000000000149030, _swiftEmptyArrayStorage);
}

uint64_t sub_98FA4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_9A79C;
  }
  else {
    uint64_t v2 = sub_990B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_990B8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_13F030();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = v5;
  v0[21] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = sub_13F070();
  uint64_t v8 = *(void *)(v7 - 8);
  if (v6)
  {
    (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v0[17], v4+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), v7);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  uint64_t v10 = v0[17];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v10, v9, 1, v7);
  swift_bridgeObjectRelease();
  v0[22] = v7;
  v0[23] = v8;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v0[24] = v11;
  v0[25] = (v8 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v12 = v11(v10, 1, v7);
  uint64_t v13 = v0[17];
  if (v12 == 1)
  {
    sub_9996C(v0[17]);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v17 = v0[10];
    uint64_t v16 = v0[11];
    uint64_t v18 = v0[9];
    sub_13F060();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v14 = sub_13EE30();
    uint64_t v15 = v19;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  v0[26] = v14;
  v0[27] = v15;
  uint64_t v23 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
  id v20 = (void *)swift_task_alloc();
  v0[28] = v20;
  *id v20 = v0;
  v20[1] = sub_9931C;
  uint64_t v21 = v0[14];
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v23)(v21, 0xD000000000000018, 0x8000000000149050, _swiftEmptyArrayStorage);
}

uint64_t sub_9931C()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_9A7A0;
  }
  else {
    uint64_t v2 = sub_99430;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_99430()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = sub_13F030();
  v1(v2, v3);
  if (*(void *)(v4 + 16))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 184) + 16))(*(void *)(v0 + 128), v4+ ((*(unsigned __int8 *)(*(void *)(v0 + 184) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 184) + 80)), *(void *)(v0 + 176));
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 184) + 56))(v8, v5, 1, v7);
  swift_bridgeObjectRelease();
  int v9 = v6(v8, 1, v7);
  uint64_t v10 = *(void *)(v0 + 216);
  if (v9 == 1)
  {
    sub_9996C(*(void *)(v0 + 128));
    goto LABEL_12;
  }
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 184);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  sub_13F060();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v12);
  uint64_t v17 = sub_13EE30();
  unint64_t v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v11);
  if (!v10 || (unint64_t v20 = *(void *)(v0 + 216), !v19))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_5830((uint64_t *)&unk_17DDB0);
    sub_999CC();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Class v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
  uint64_t v36 = v17;
  uint64_t v21 = (void *)(v0 + 16);
  if (qword_17B210 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_141170();
  sub_33D8(v22, (uint64_t)qword_17DD80);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_141160();
  os_log_type_t v24 = sub_141480();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v35 = *(void *)(v0 + 208);
    uint64_t v25 = swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_58C0(v35, v20, v38);
    sub_1415C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_58C0(v36, v19, v38);
    sub_1415C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v23, v24, "Building confirmation sleep button view with text: %s, %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v21 = (void *)(v0 + 16);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  int v28 = *(unsigned __int8 *)(v0 + 240);
  id v29 = sub_342B4(v28, 0);
  id v30 = sub_342B4(v28, 1);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v21, *(void *)(v0 + 40));
  LOBYTE(v28) = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v21);
  uint64_t v31 = *(void *)(v0 + 208);
  if (v28)
  {
    int v32 = v29;
    uint64_t v33 = sub_987A4(v36, v19, v31, v20, v29, v30);
  }
  else
  {
    int v32 = v29;
    uint64_t v33 = sub_989A0(v36, v19, v31, v20, v29, v30);
  }
  uint64_t v37 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v34(v37);
}

uint64_t sub_9996C(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17DDA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_999CC()
{
  unint64_t result = qword_17BE80;
  if (!qword_17BE80)
  {
    sub_23FA8((uint64_t *)&unk_17DDB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17BE80);
  }
  return result;
}

uint64_t sub_99A28(char a1)
{
  *(unsigned char *)(v1 + 240) = a1;
  uint64_t v2 = sub_13EE40();
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = *(void *)(v2 - 8);
  *(void *)(v1 + 88) = swift_task_alloc();
  uint64_t v3 = sub_13F040();
  *(void *)(v1 + 96) = v3;
  *(void *)(v1 + 104) = *(void *)(v3 - 8);
  *(void *)(v1 + 112) = swift_task_alloc();
  *(void *)(v1 + 120) = swift_task_alloc();
  sub_5830(&qword_17DDA8);
  *(void *)(v1 + 128) = swift_task_alloc();
  *(void *)(v1 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_99B94, 0, 0);
}

uint64_t sub_99B94()
{
  if (qword_17B218 != -1) {
    swift_once();
  }
  uint64_t v4 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_99C94;
  uint64_t v2 = *(void *)(v0 + 120);
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v4)(v2, 0xD000000000000017, 0x8000000000149070, _swiftEmptyArrayStorage);
}

uint64_t sub_99C94()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_9A00C;
  }
  else {
    uint64_t v2 = sub_99DA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_99DA8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_13F030();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = v5;
  v0[21] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = sub_13F070();
  uint64_t v8 = *(void *)(v7 - 8);
  if (v6)
  {
    (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v0[17], v4+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), v7);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  uint64_t v10 = v0[17];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v10, v9, 1, v7);
  swift_bridgeObjectRelease();
  v0[22] = v7;
  v0[23] = v8;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v0[24] = v11;
  v0[25] = (v8 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v12 = v11(v10, 1, v7);
  uint64_t v13 = v0[17];
  if (v12 == 1)
  {
    sub_9996C(v0[17]);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v17 = v0[10];
    uint64_t v16 = v0[11];
    uint64_t v18 = v0[9];
    sub_13F060();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v14 = sub_13EE30();
    uint64_t v15 = v19;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  v0[26] = v14;
  v0[27] = v15;
  uint64_t v23 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
  unint64_t v20 = (void *)swift_task_alloc();
  v0[28] = v20;
  *unint64_t v20 = v0;
  v20[1] = sub_9A0A8;
  uint64_t v21 = v0[14];
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v23)(v21, 0xD000000000000018, 0x8000000000149090, _swiftEmptyArrayStorage);
}

uint64_t sub_9A00C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_9A0A8()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_9A6F8;
  }
  else {
    uint64_t v2 = sub_9A1BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_9A1BC()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = sub_13F030();
  v1(v2, v3);
  if (*(void *)(v4 + 16))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 184) + 16))(*(void *)(v0 + 128), v4+ ((*(unsigned __int8 *)(*(void *)(v0 + 184) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 184) + 80)), *(void *)(v0 + 176));
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 184) + 56))(v8, v5, 1, v7);
  swift_bridgeObjectRelease();
  int v9 = v6(v8, 1, v7);
  uint64_t v10 = *(void *)(v0 + 216);
  if (v9 == 1)
  {
    sub_9996C(*(void *)(v0 + 128));
    goto LABEL_12;
  }
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 184);
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  sub_13F060();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v12);
  uint64_t v17 = sub_13EE30();
  unint64_t v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v11);
  if (!v10 || (unint64_t v20 = *(void *)(v0 + 216), !v19))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_5830((uint64_t *)&unk_17DDB0);
    sub_999CC();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Class v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
  uint64_t v36 = v17;
  uint64_t v21 = (void *)(v0 + 16);
  if (qword_17B210 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_141170();
  sub_33D8(v22, (uint64_t)qword_17DD80);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_141160();
  os_log_type_t v24 = sub_141480();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v35 = *(void *)(v0 + 208);
    uint64_t v25 = swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_58C0(v35, v20, v38);
    sub_1415C0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_58C0(v36, v19, v38);
    sub_1415C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v23, v24, "Building confirmation button view with text: %s, %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v21 = (void *)(v0 + 16);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  int v28 = *(unsigned __int8 *)(v0 + 240);
  id v29 = sub_342B4(v28, 0);
  id v30 = sub_342B4(v28, 1);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v21, *(void *)(v0 + 40));
  LOBYTE(v28) = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v21);
  uint64_t v31 = *(void *)(v0 + 208);
  if (v28)
  {
    int v32 = v29;
    uint64_t v33 = sub_987A4(v36, v19, v31, v20, v29, v30);
  }
  else
  {
    int v32 = v29;
    uint64_t v33 = sub_989A0(v36, v19, v31, v20, v29, v30);
  }
  uint64_t v37 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v34(v37);
}

uint64_t sub_9A6F8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_9A7A4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_159A4;
  return sub_4F6E4(a1, a2, a3);
}

ValueMetadata *type metadata accessor for TimerAppNotInstalledLegacyDialog()
{
  return &type metadata for TimerAppNotInstalledLegacyDialog;
}

uint64_t sub_9A868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_13F040();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v4[9] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v4[10] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_140660();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_13ED60();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  sub_140590();
  v4[18] = swift_task_alloc();
  uint64_t v8 = sub_1407F0();
  v4[19] = v8;
  v4[20] = *(void *)(v8 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v9 = sub_140A40();
  v4[22] = v9;
  v4[23] = *(void *)(v9 - 8);
  v4[24] = swift_task_alloc();
  return _swift_task_switch(sub_9AB58, 0, 0);
}

uint64_t sub_9AB58()
{
  (*(void (**)(void, void, void))(v0[20] + 16))(v0[21], v0[3], v0[19]);
  v0[25] = type metadata accessor for TimerBaseCATs_Async();
  sub_140580();
  sub_140470();
  sub_9B8E8();
  sub_140A30();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[26] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_9AC6C;
  return AppInstallDialogOutputUtil.makeLaunchAppView()();
}

uint64_t sub_9AC6C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 216) = a1;
  *(void *)(v3 + 224) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_9B640;
  }
  else {
    uint64_t v4 = sub_9AD80;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_9AD80()
{
  uint64_t v1 = v0[16];
  uint64_t v21 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v19 = v0[17];
  uint64_t v20 = v4;
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v23 = v0[4];
  (*(void (**)(void))(v1 + 104))();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SiriTimeEventSender.TaskType.current(_:), v4);
  uint64_t v8 = enum case for SiriKitReliabilityCodes.noAppFoundOnDeviceToSupportIntent(_:);
  uint64_t v9 = sub_13EB70();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(v5, v8, v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  uint64_t v11 = sub_140670();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
  uint64_t v12 = enum case for SiriTimeEventSender.ReasonDescription.timerAppNotInstalledLegacyDialog(_:);
  uint64_t v13 = sub_140650();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  sub_140640();
  sub_904C(v6, &qword_17C068);
  sub_904C(v7, &qword_17C070);
  sub_904C(v5, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v20);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v19, v21);
  sub_140580();
  v0[29] = sub_140470();
  sub_5830(&qword_17F3D0);
  uint64_t v15 = swift_allocObject();
  v0[30] = v15;
  *(_OWORD *)(v15 + 16) = xmmword_142D50;
  *(void *)(v15 + 32) = 0x656369766564;
  *(void *)(v15 + 40) = 0xE600000000000000;
  *(void *)(v15 + 72) = sub_140560();
  *(void *)(v15 + 48) = v23;
  uint64_t v22 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  swift_retain();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[31] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_9B11C;
  uint64_t v17 = v0[8];
  return v22(v17, 0xD000000000000020, 0x80000000001490B0, v15);
}

uint64_t sub_9B11C()
{
  uint64_t v2 = (void *)*v1;
  unsigned char v2[32] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_9B43C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v2[33] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_9B2A8;
    uint64_t v4 = v2[27];
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[2];
    return sub_54D5C(v6, v4, v5);
  }
}

uint64_t sub_9B2A8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v5 = sub_9B738;
  }
  else {
    uint64_t v5 = sub_9B550;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_9B43C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_9B550()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_9B640()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_9B738()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_9B830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return sub_9A868(a1, a2, a3, a4);
}

unint64_t sub_9B8E8()
{
  unint64_t result = qword_17DE08;
  if (!qword_17DE08)
  {
    type metadata accessor for TimerBaseCATs_Async();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17DE08);
  }
  return result;
}

ValueMetadata *_s20HandleIntentStrategyVMa_2()
{
  return &_s20HandleIntentStrategyVN_2;
}

uint64_t sub_9B950()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17DE10);
  sub_33D8(v0, (uint64_t)qword_17DE10);
  return sub_140E60();
}

uint64_t sub_9B99C(uint64_t a1, uint64_t a2)
{
  v2[45] = a1;
  v2[46] = a2;
  uint64_t v3 = sub_13F1E0();
  v2[47] = v3;
  v2[48] = *(void *)(v3 - 8);
  v2[49] = swift_task_alloc();
  v2[50] = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  v2[51] = swift_task_alloc();
  sub_5830(&qword_17C4A0);
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  uint64_t v4 = sub_140730();
  v2[55] = v4;
  v2[56] = *(void *)(v4 - 8);
  v2[57] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v2[58] = v5;
  v2[59] = *(void *)(v5 - 8);
  v2[60] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v2[61] = v6;
  v2[62] = *(void *)(v6 - 8);
  v2[63] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v2[64] = v7;
  v2[65] = *(void *)(v7 - 8);
  v2[66] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[67] = v8;
  v2[68] = *(void *)(v8 - 8);
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  uint64_t v9 = sub_13F3C0();
  v2[73] = v9;
  v2[74] = *(void *)(v9 - 8);
  v2[75] = swift_task_alloc();
  uint64_t v10 = sub_13EFF0();
  v2[76] = v10;
  v2[77] = *(void *)(v10 - 8);
  v2[78] = swift_task_alloc();
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  return _swift_task_switch(sub_9BDF4, 0, 0);
}

uint64_t sub_9BDF4()
{
  if (qword_17B220 != -1) {
    swift_once();
  }
  *(void *)(v0 + 648) = sub_33D8(*(void *)(v0 + 464), (uint64_t)qword_17DE10);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "ResumeTimer.HandleIntentStrategy.makeIntentHandledResponse() called", v3, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17DE78);
  uint64_t v4 = (void *)sub_13F140();
  *(void *)(v0 + 656) = v4;
  id v5 = [v4 resumedTimers];
  if (!v5) {
    goto LABEL_71;
  }
  uint64_t v6 = v5;
  sub_140EA0();
  unint64_t v7 = sub_141310();
  *(void *)(v0 + 664) = v7;

  unint64_t v8 = v7 >> 62;
  if (!(v7 >> 62))
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_70;
  }
  swift_bridgeObjectRetain();
  if (!sub_1417D0())
  {
LABEL_70:
    swift_bridgeObjectRelease_n();
LABEL_71:
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
    swift_allocError();
    *long long v106 = 5;
    swift_willThrow();

LABEL_72:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v107 = *(uint64_t (**)(void))(v0 + 8);
    return v107();
  }
LABEL_8:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v10 = (id)sub_1416A0();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_77;
    }
    id v10 = *(id *)(v7 + 32);
  }
  uint64_t v11 = v10;
  *(void *)(v0 + 672) = v10;
  uint64_t v12 = *(void *)(v0 + 640);
  swift_bridgeObjectRelease();
  sub_5830(&qword_17BF00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142E80;
  *(void *)(inited + 32) = v11;
  unint64_t v121 = inited;
  sub_141330();
  id v14 = v11;
  sub_15E9C(v121, v12);
  swift_bridgeObjectRelease();
  id v15 = [v14 identifier];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_141250();
    uint64_t v19 = v18;

    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1417D0();
      swift_bridgeObjectRelease();
      if (v20 != 1) {
        goto LABEL_14;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)) != 1)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    id v21 = [v14 remainingTime];
    if (v21 || (id v21 = [v14 duration]) != 0)
    {
      uint64_t v22 = v17;
      [v21 doubleValue];
      double v24 = v23;
    }
    else
    {
      uint64_t v22 = v17;
      double v24 = 0.0;
    }
    uint64_t v25 = *(void *)(v0 + 600);
    uint64_t v26 = *(void *)(v0 + 592);
    uint64_t v27 = *(void *)(v0 + 584);
    sub_33F38(v22, v19, v25, v24);
    swift_bridgeObjectRelease();
    sub_13EF30();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
LABEL_20:
  sub_13EC50();
  unint64_t v28 = swift_bridgeObjectRetain();
  *(void *)(v0 + 680) = sub_5311C(v28);
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
  }
  *(void *)(v0 + 688) = v29;
  if (v29 == 1)
  {
    sub_140DF0();
    sub_140DE0();
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v31 = *(void *)(v0 + 248);
    sub_90A8((void *)(v0 + 216), v30);
    id v32 = [v14 identifier];
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = sub_141250();
      uint64_t v36 = v35;
    }
    else
    {
      uint64_t v34 = 0;
      uint64_t v36 = 0;
    }
    *(void *)(v0 + 696) = v36;
    char v73 = (void *)swift_task_alloc();
    *(void *)(v0 + 704) = v73;
    *char v73 = v0;
    v73[1] = sub_9CE70;
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v34, v36, v30, v31);
  }
  *(_OWORD *)(v0 + 728) = 0u;
  uint64_t v37 = *(void *)(v0 + 496);
  uint64_t v38 = *(void *)(v0 + 504);
  uint64_t v39 = *(void *)(v0 + 480);
  uint64_t v109 = *(void *)(v0 + 488);
  uint64_t v40 = *(void *)(v0 + 472);
  uint64_t v111 = *(void *)(v0 + 464);
  uint64_t v114 = *(void *)(v0 + 648);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 96), *(void *)(v0 + 120));
  sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v38, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v109);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v114, v111);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  char v41 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  if (v41)
  {
    id v42 = sub_79174(*(void *)(v0 + 664), 13);
    *(void *)(v0 + 872) = v42;
    swift_bridgeObjectRelease();
    if (v42)
    {
      uint64_t v43 = self;
      *(void *)(v0 + 344) = 0;
      id v44 = [v43 archivedDataWithRootObject:v42 requiringSecureCoding:1 error:v0 + 344];
      uint64_t v45 = *(void **)(v0 + 344);
      if (v44)
      {
        uint64_t v46 = v44;
        id v47 = v45;
        uint64_t v48 = sub_13E4D0();
        uint64_t v50 = v49;

        *(void *)(v0 + 880) = v48;
        *(void *)(v0 + 888) = v50;
        if (qword_17B410 != -1) {
          swift_once();
        }
        uint64_t v51 = *(void *)(v0 + 368);
        unsigned int v52 = (void *)swift_task_alloc();
        *(void *)(v0 + 896) = v52;
        v52[2] = v48;
        v52[3] = v50;
        uint64_t v52[4] = v51;
        uint64_t v53 = (void *)swift_task_alloc();
        *(void *)(v0 + 904) = v53;
        *uint64_t v53 = v0;
        v53[1] = sub_9F53C;
        uint64_t v54 = *(void *)(v0 + 680);
        return sub_CA360(v54, (uint64_t)sub_A4BE4, (uint64_t)v52);
      }
      unint64_t v100 = *(void **)(v0 + 656);
      uint64_t v101 = *(void *)(v0 + 616);
      uint64_t v118 = *(void *)(v0 + 608);
      uint64_t v120 = *(void *)(v0 + 640);
      uint64_t v116 = *(void *)(v0 + 576);
      uint64_t v102 = *(void *)(v0 + 544);
      unint64_t v110 = *(void **)(v0 + 672);
      uint64_t v113 = *(void *)(v0 + 536);
      uint64_t v108 = *(void *)(v0 + 528);
      uint64_t v103 = *(void *)(v0 + 520);
      uint64_t v104 = *(void *)(v0 + 512);
      id v105 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v108, v104);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v116, v113);
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v120, v118);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_141160();
      uint64_t v88 = sub_141480();
      if (os_log_type_enabled(v87, (os_log_type_t)v88))
      {
        long long v89 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v89 = 0;
        _os_log_impl(&dword_0, v87, (os_log_type_t)v88, "Could not get timer action from timer.", v89, 2u);
        swift_slowDealloc();
      }
      uint64_t v90 = *(void **)(v0 + 672);
      int v91 = *(void **)(v0 + 656);
      uint64_t v92 = *(void *)(v0 + 616);
      uint64_t v117 = *(void *)(v0 + 608);
      uint64_t v119 = *(void *)(v0 + 640);
      uint64_t v93 = *(void *)(v0 + 544);
      uint64_t v112 = *(void *)(v0 + 536);
      uint64_t v115 = *(void *)(v0 + 576);
      uint64_t v94 = *(void *)(v0 + 528);
      uint64_t v95 = *(void *)(v0 + 520);
      uint64_t v96 = *(void *)(v0 + 512);

      sub_5830((uint64_t *)&unk_17F3C0);
      sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
      swift_allocError();
      *uint64_t v97 = 1;
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v115, v112);
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v119, v117);
    }
    goto LABEL_72;
  }
  uint64_t v57 = *(void *)(v0 + 448);
  uint64_t v56 = *(void *)(v0 + 456);
  uint64_t v58 = *(void *)(v0 + 440);
  sub_140720();
  BOOL v59 = sub_1406C0();
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  if (v59)
  {
    uint64_t v60 = sub_141160();
    os_log_type_t v61 = sub_141480();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_0, v60, v61, "[ResumeTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer RF 2.0 path", v62, 2u);
      swift_slowDealloc();
    }

    uint64_t v63 = *(void *)(v0 + 688);
    if (!v63)
    {
LABEL_56:
      uint64_t v77 = *(void **)(v0 + 432);
      *uint64_t v77 = _swiftEmptyArrayStorage;
      uint64_t v78 = type metadata accessor for SiriTimePluginModel(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 0, 1, v78);
      if (qword_17B400 == -1)
      {
LABEL_57:
        uint64_t v79 = *(void *)(v0 + 680);
        sub_5830(&qword_17F3D0);
        uint64_t v80 = swift_allocObject();
        *(void *)(v0 + 744) = v80;
        *(_OWORD *)(v80 + 16) = xmmword_142D50;
        strcpy((char *)(v80 + 32), "resumedTimers");
        *(_WORD *)(v80 + 46) = -4864;
        *(void *)(v80 + 72) = sub_5830(&qword_17C508);
        *(void *)(v80 + 48) = v79;
        uint64_t v81 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
        swift_bridgeObjectRetain();
        uint64_t v82 = (void *)swift_task_alloc();
        *(void *)(v0 + 752) = v82;
        void *v82 = v0;
        v82[1] = sub_9DB7C;
        uint64_t v83 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + v81;
        unint64_t v84 = 0x80000000001481B0;
        unint64_t v85 = 0xD000000000000021;
        uint64_t v86 = (void *)v80;
LABEL_64:
        return ((uint64_t (*)(unint64_t, unint64_t, void *))v83)(v85, v84, v86);
      }
LABEL_77:
      swift_once();
      goto LABEL_57;
    }
    sub_470FC(0, v63 & ~(v63 >> 63), 0);
    if ((v63 & 0x8000000000000000) == 0)
    {
      uint64_t v64 = 0;
      uint64_t v65 = *(void *)(v0 + 400);
      uint64_t v66 = *(void *)(v0 + 664) + 32;
      do
      {
        if ((*(void *)(v0 + 664) & 0xC000000000000001) != 0) {
          id v67 = (id)sub_1416A0();
        }
        else {
          id v67 = *(id *)(v66 + 8 * v64);
        }
        uint64_t v68 = v67;
        sub_1B94C(*(void **)(v0 + 408));

        unint64_t v70 = _swiftEmptyArrayStorage[2];
        unint64_t v69 = _swiftEmptyArrayStorage[3];
        if (v70 >= v69 >> 1) {
          sub_470FC(v69 > 1, v70 + 1, 1);
        }
        uint64_t v71 = *(void *)(v0 + 688);
        uint64_t v72 = *(void *)(v0 + 408);
        ++v64;
        _swiftEmptyArrayStorage[2] = v70 + 1;
        sub_A4B7C(v72, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(void *)(v65 + 72) * v70, type metadata accessor for SiriTimerSnippetModel);
      }
      while (v64 != v71);
      goto LABEL_56;
    }
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v74 = *(void *)(v0 + 688);
  swift_bridgeObjectRelease();
  if (v74 != 1)
  {
    swift_bridgeObjectRelease();
    if (qword_17B410 != -1) {
      swift_once();
    }
    uint64_t v98 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v99 = (void *)swift_task_alloc();
    *(void *)(v0 + 856) = v99;
    void *v99 = v0;
    v99[1] = sub_9F080;
    uint64_t v83 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:) + v98;
    unint64_t v84 = 0x80000000001491B0;
    uint64_t v86 = _swiftEmptyArrayStorage;
    unint64_t v85 = 0xD000000000000018;
    goto LABEL_64;
  }
  if (qword_17B410 != -1) {
LABEL_79:
  }
    swift_once();
  os_log_type_t v75 = (void *)swift_task_alloc();
  *(void *)(v0 + 840) = v75;
  *os_log_type_t v75 = v0;
  v75[1] = sub_9EDAC;
  uint64_t v76 = *(void *)(v0 + 680);
  return sub_CA79C(v76);
}

uint64_t sub_9CE70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 712) = a1;
  *(void *)(v3 + 720) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_9CFC0, 0, 0);
}

uint64_t sub_9CFC0()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 720);
  uint64_t v2 = *(void *)(v0 + 712);
  *(void *)(v0 + 736) = v1;
  *(void *)(v0 + 728) = v2;
  uint64_t v81 = *(void *)(v0 + 648);
  uint64_t v3 = *(void *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 480);
  uint64_t v74 = *(void *)(v0 + 504);
  uint64_t v76 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v78 = *(void *)(v0 + 464);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 96), *(void *)(v0 + 120));
  int v6 = sub_13EC10() & (v1 != 0);
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v74, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v76);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v81, v78);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  char v7 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  if ((v7 & 1) == 0 || v6)
  {
    uint64_t v23 = *(void *)(v0 + 448);
    uint64_t v22 = *(void *)(v0 + 456);
    uint64_t v24 = *(void *)(v0 + 440);
    sub_140720();
    BOOL v25 = sub_1406C0();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    if (v25)
    {
      uint64_t v26 = sub_141160();
      os_log_type_t v27 = sub_141480();
      if (os_log_type_enabled(v26, v27))
      {
        unint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v28 = 0;
        _os_log_impl(&dword_0, v26, v27, "[ResumeTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer RF 2.0 path", v28, 2u);
        swift_slowDealloc();
      }

      if (v6)
      {
        uint64_t v29 = *(void *)(v0 + 432);
        uint64_t v30 = type metadata accessor for SiriTimePluginModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
      }
      else
      {
        uint64_t v45 = *(void *)(v0 + 688);
        if (v45)
        {
          sub_470FC(0, v45 & ~(v45 >> 63), 0);
          if (v45 < 0) {
            __break(1u);
          }
          uint64_t v46 = 0;
          uint64_t v47 = *(void *)(v0 + 400);
          uint64_t v48 = *(void *)(v0 + 664) + 32;
          do
          {
            if ((*(void *)(v0 + 664) & 0xC000000000000001) != 0) {
              id v49 = (id)sub_1416A0();
            }
            else {
              id v49 = *(id *)(v48 + 8 * v46);
            }
            uint64_t v50 = v49;
            sub_1B94C(*(void **)(v0 + 408));

            unint64_t v52 = _swiftEmptyArrayStorage[2];
            unint64_t v51 = _swiftEmptyArrayStorage[3];
            if (v52 >= v51 >> 1) {
              sub_470FC(v51 > 1, v52 + 1, 1);
            }
            uint64_t v53 = *(void *)(v0 + 688);
            uint64_t v54 = *(void *)(v0 + 408);
            ++v46;
            _swiftEmptyArrayStorage[2] = v52 + 1;
            sub_A4B7C(v54, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v52, type metadata accessor for SiriTimerSnippetModel);
          }
          while (v46 != v53);
        }
        os_log_type_t v61 = *(void **)(v0 + 432);
        void *v61 = _swiftEmptyArrayStorage;
        uint64_t v62 = type metadata accessor for SiriTimePluginModel(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
      }
      if (qword_17B400 != -1) {
        swift_once();
      }
      uint64_t v63 = *(void *)(v0 + 680);
      sub_5830(&qword_17F3D0);
      uint64_t v64 = swift_allocObject();
      *(void *)(v0 + 744) = v64;
      *(_OWORD *)(v64 + 16) = xmmword_142D50;
      strcpy((char *)(v64 + 32), "resumedTimers");
      *(_WORD *)(v64 + 46) = -4864;
      *(void *)(v64 + 72) = sub_5830(&qword_17C508);
      *(void *)(v64 + 48) = v63;
      uint64_t v65 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_bridgeObjectRetain();
      uint64_t v66 = (void *)swift_task_alloc();
      *(void *)(v0 + 752) = v66;
      void *v66 = v0;
      v66[1] = sub_9DB7C;
      uint64_t v57 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + v65;
      unint64_t v58 = 0x80000000001481B0;
      unint64_t v60 = 0xD000000000000021;
      BOOL v59 = (void *)v64;
    }
    else
    {
      uint64_t v31 = *(void *)(v0 + 688);
      swift_bridgeObjectRelease();
      if (v31 == 1)
      {
        if (qword_17B410 != -1) {
          swift_once();
        }
        id v32 = (void *)swift_task_alloc();
        *(void *)(v0 + 840) = v32;
        *id v32 = v0;
        v32[1] = sub_9EDAC;
        uint64_t v33 = *(void *)(v0 + 680);
        return sub_CA79C(v33);
      }
      swift_bridgeObjectRelease();
      if (qword_17B410 != -1) {
        swift_once();
      }
      uint64_t v55 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v56 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v56;
      *uint64_t v56 = v0;
      v56[1] = sub_9F080;
      uint64_t v57 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:) + v55;
      unint64_t v58 = 0x80000000001491B0;
      BOOL v59 = _swiftEmptyArrayStorage;
      unint64_t v60 = 0xD000000000000018;
    }
    return ((uint64_t (*)(unint64_t, unint64_t, void *))v57)(v60, v58, v59);
  }
  id v8 = sub_79174(*(void *)(v0 + 664), 13);
  *(void *)(v0 + 872) = v8;
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v9 = self;
    *(void *)(v0 + 344) = 0;
    id v10 = [v9 archivedDataWithRootObject:v8 requiringSecureCoding:1 error:v0 + 344];
    uint64_t v11 = *(void **)(v0 + 344);
    if (v10)
    {
      uint64_t v12 = v10;
      id v13 = v11;
      uint64_t v14 = sub_13E4D0();
      uint64_t v16 = v15;

      *(void *)(v0 + 880) = v14;
      *(void *)(v0 + 888) = v16;
      if (qword_17B410 != -1) {
        swift_once();
      }
      uint64_t v17 = *(void *)(v0 + 368);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v18;
      _OWORD v18[2] = v14;
      v18[3] = v16;
      v18[4] = v17;
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 904) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_9F53C;
      uint64_t v20 = *(void *)(v0 + 680);
      return sub_CA360(v20, (uint64_t)sub_A4BE4, (uint64_t)v18);
    }
    id v67 = *(void **)(v0 + 656);
    uint64_t v68 = *(void *)(v0 + 616);
    uint64_t v85 = *(void *)(v0 + 608);
    uint64_t v87 = *(void *)(v0 + 640);
    uint64_t v83 = *(void *)(v0 + 576);
    uint64_t v69 = *(void *)(v0 + 544);
    uint64_t v77 = *(void **)(v0 + 672);
    uint64_t v80 = *(void *)(v0 + 536);
    uint64_t v75 = *(void *)(v0 + 528);
    uint64_t v70 = *(void *)(v0 + 520);
    uint64_t v71 = *(void *)(v0 + 512);
    id v72 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_13E460();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v75, v71);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v83, v80);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v87, v85);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_141160();
    os_log_type_t v35 = sub_141480();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_0, v34, v35, "Could not get timer action from timer.", v36, 2u);
      swift_slowDealloc();
    }
    uint64_t v37 = *(void **)(v0 + 672);
    uint64_t v38 = *(void **)(v0 + 656);
    uint64_t v39 = *(void *)(v0 + 616);
    uint64_t v84 = *(void *)(v0 + 608);
    uint64_t v86 = *(void *)(v0 + 640);
    uint64_t v40 = *(void *)(v0 + 544);
    uint64_t v79 = *(void *)(v0 + 536);
    uint64_t v82 = *(void *)(v0 + 576);
    uint64_t v41 = *(void *)(v0 + 528);
    uint64_t v42 = *(void *)(v0 + 520);
    uint64_t v43 = *(void *)(v0 + 512);

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
    swift_allocError();
    *id v44 = 1;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v82, v79);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v86, v84);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v73 = *(uint64_t (**)(void))(v0 + 8);
  return v73();
}

uint64_t sub_9DB7C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 760) = a1;
  *(void *)(v3 + 768) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_9E2A0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_9DCDC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_9DCDC()
{
  uint64_t v45 = v0;
  unint64_t v1 = *(void *)(v0 + 736);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_141160();
    os_log_type_t v3 = sub_141480();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = *(void *)(v0 + 728);
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 336) = sub_58C0(v4, v1, &v44);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v2, v3, "[ResumeTimer.HandleIntentStrategy.makeIntentHandledResponse] We have a live activity: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v10 = *(void *)(v0 + 640);
    uint64_t v11 = *(void *)(v0 + 632);
    uint64_t v12 = *(void *)(v0 + 616);
    uint64_t v13 = *(void *)(v0 + 608);
    uint64_t v15 = *(void *)(v0 + 424);
    uint64_t v14 = *(void *)(v0 + 432);
    sub_13EC50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v10, v13);
    sub_8FE8(v14, v15, &qword_17C4A0);
    uint64_t v16 = type metadata accessor for SiriTimePluginModel(0);
    int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16);
    uint64_t v18 = *(void *)(v0 + 424);
    if (v17 == 1)
    {
      sub_904C(*(void *)(v0 + 424), &qword_17C4A0);
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      *(void *)(v0 + 88) = 0;
    }
    else
    {
      *(void *)(v0 + 80) = v16;
      *(void *)(v0 + 88) = sub_1BD1C();
      uint64_t v19 = sub_187EC((uint64_t *)(v0 + 56));
      sub_A4B7C(v18, (uint64_t)v19, type metadata accessor for SiriTimePluginModel);
    }
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 776) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_9E4E4;
    uint64_t v21 = *(void *)(v0 + 736);
    uint64_t v22 = *(void *)(v0 + 728);
    uint64_t v23 = *(void *)(v0 + 632);
    uint64_t v24 = *(void *)(v0 + 568);
    uint64_t v25 = *(void *)(v0 + 528);
    uint64_t v26 = *(void *)(v0 + 360);
    unint64_t v47 = 0x8000000000148B90;
    uint64_t v27 = v0 + 56;
    unint64_t v28 = 0xD000000000000019;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = *(void *)(v0 + 688);
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134217984;
      *(void *)(v0 + 352) = v8;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v6, v7, "[ResumeTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer snippet model for %ld running timers.", v9, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v29 = *(void *)(v0 + 640);
    uint64_t v30 = *(void *)(v0 + 624);
    uint64_t v31 = *(void *)(v0 + 616);
    uint64_t v32 = *(void *)(v0 + 608);
    uint64_t v33 = *(void *)(v0 + 432);
    uint64_t v34 = *(void *)(v0 + 416);
    sub_13EC50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v29, v32);
    sub_8FE8(v33, v34, &qword_17C4A0);
    uint64_t v35 = type metadata accessor for SiriTimePluginModel(0);
    int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35);
    uint64_t v37 = *(void *)(v0 + 416);
    if (v36 == 1)
    {
      sub_904C(*(void *)(v0 + 416), &qword_17C4A0);
      *(_OWORD *)(v0 + 176) = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      *(void *)(v0 + 208) = 0;
    }
    else
    {
      *(void *)(v0 + 200) = v35;
      *(void *)(v0 + 208) = sub_1BD1C();
      uint64_t v38 = sub_187EC((uint64_t *)(v0 + 176));
      sub_A4B7C(v37, (uint64_t)v38, type metadata accessor for SiriTimePluginModel);
    }
    uint64_t v39 = *(void *)(v0 + 688);
    swift_bridgeObjectRelease();
    if (v39 <= 1) {
      unint64_t v40 = 0xD000000000000019;
    }
    else {
      unint64_t v40 = 0xD000000000000018;
    }
    if (v39 <= 1) {
      unint64_t v41 = 0x8000000000148B90;
    }
    else {
      unint64_t v41 = 0x80000000001491B0;
    }
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 808) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_9E930;
    uint64_t v23 = *(void *)(v0 + 624);
    uint64_t v24 = *(void *)(v0 + 560);
    uint64_t v25 = *(void *)(v0 + 528);
    uint64_t v26 = *(void *)(v0 + 360);
    unint64_t v47 = v41;
    uint64_t v27 = v0 + 176;
    uint64_t v22 = 0;
    uint64_t v21 = 0;
    unint64_t v28 = v40;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v26, v24, v23, v27, v25, v22, v21, v28);
}

uint64_t sub_9E2A0()
{
  unint64_t v1 = (void *)v0[84];
  uint64_t v2 = (void *)v0[82];
  uint64_t v3 = v0[77];
  uint64_t v13 = v0[76];
  uint64_t v14 = v0[80];
  uint64_t v4 = v0[68];
  uint64_t v11 = v0[67];
  uint64_t v12 = v0[72];
  uint64_t v10 = v0[66];
  uint64_t v5 = v0[65];
  uint64_t v6 = v0[64];
  uint64_t v7 = v0[54];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_904C(v7, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_9E4E4()
{
  unint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)v0 + 56;
  uint64_t v3 = *(void *)(*(void *)v0 + 632);
  uint64_t v4 = *(void *)(*(void *)v0 + 616);
  uint64_t v5 = *(void *)(*(void *)v0 + 608);
  uint64_t v6 = *(void *)(*(void *)v0 + 568);
  uint64_t v7 = *(void *)(*(void *)v0 + 544);
  uint64_t v8 = *(void *)(*(void *)v0 + 536);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v1[98] = v9;
  v9(v3, v5);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v1[99] = v10;
  v1[100] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v6, v8);
  sub_904C(v2, &qword_17C350);
  return _swift_task_switch(sub_9E718, 0, 0);
}

uint64_t sub_9E718()
{
  unint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
  uint64_t v2 = *(void **)(v0 + 672);
  uint64_t v3 = *(void **)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 512);
  uint64_t v9 = *(void *)(v0 + 432);

  sub_904C(v9, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v1(v4, v5);
  (*(void (**)(void, void))(v0 + 784))(*(void *)(v0 + 640), *(void *)(v0 + 608));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_9E930()
{
  unint64_t v1 = *(void **)v0;
  uint64_t v11 = *(void *)v0 + 176;
  uint64_t v2 = *(void *)(*(void *)v0 + 624);
  uint64_t v3 = *(void *)(*(void *)v0 + 616);
  uint64_t v4 = *(void *)(*(void *)v0 + 608);
  uint64_t v5 = *(void *)(*(void *)v0 + 560);
  uint64_t v6 = *(void *)(*(void *)v0 + 544);
  uint64_t v7 = *(void *)(*(void *)v0 + 536);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v1[102] = v8;
  v8(v2, v4);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v1[103] = v9;
  v1[104] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v5, v7);
  sub_904C(v11, &qword_17C350);
  return _swift_task_switch(sub_9EB94, 0, 0);
}

uint64_t sub_9EB94()
{
  unint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 824);
  uint64_t v2 = *(void **)(v0 + 672);
  uint64_t v3 = *(void **)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 512);
  uint64_t v9 = *(void *)(v0 + 432);

  sub_904C(v9, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v1(v4, v5);
  (*(void (**)(void, void))(v0 + 816))(*(void *)(v0 + 640), *(void *)(v0 + 608));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_9EDAC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[32] = v2;
  v3[33] = a1;
  v3[34] = v1;
  v3[106] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_9FBF0;
  }
  else
  {
    uint64_t v4 = sub_9EF18;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_9EF18()
{
  uint64_t v1 = v0[92];
  uint64_t v2 = v0[91];
  uint64_t v3 = v0[80];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[69];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  v0[115] = v0[33];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v3;
  v8[3] = v2;
  v8[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[116] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_9F858;
  uint64_t v10 = v0[66];
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v12, v11, v10);
}

uint64_t sub_9F080(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[35] = v2;
  v3[36] = a1;
  v3[37] = v1;
  v3[108] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_9F330;
  }
  else {
    uint64_t v4 = sub_9F1C8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_9F1C8()
{
  uint64_t v1 = v0[92];
  uint64_t v2 = v0[91];
  uint64_t v3 = v0[80];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[69];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  v0[115] = v0[36];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v3;
  v8[3] = v2;
  v8[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[116] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_9F858;
  uint64_t v10 = v0[66];
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v12, v11, v10);
}

uint64_t sub_9F330()
{
  uint64_t v1 = *(void **)(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 616);
  uint64_t v11 = *(void *)(v0 + 608);
  uint64_t v12 = *(void *)(v0 + 640);
  uint64_t v3 = *(void *)(v0 + 576);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 512);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_9F53C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[38] = v2;
  v3[39] = a1;
  unsigned char v3[40] = v1;
  v3[114] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_9FDF4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = sub_9F6D4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_9F6D4()
{
  unint64_t v1 = *(void *)(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 880);

  sub_34B88(v2, v1);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 728);
  uint64_t v5 = *(void *)(v0 + 640);
  uint64_t v6 = *(void *)(v0 + 576);
  uint64_t v7 = *(void *)(v0 + 552);
  uint64_t v8 = *(void *)(v0 + 544);
  uint64_t v9 = *(void *)(v0 + 536);
  *(void *)(v0 + 920) = *(void *)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v5;
  uint64_t v10[3] = v4;
  v10[4] = v3;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 928) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_9F858;
  uint64_t v12 = *(void *)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 392);
  uint64_t v14 = *(void *)(v0 + 360);
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v14, v13, v12);
}

uint64_t sub_9F858()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 936) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[48] + 8))(v2[49], v2[47]);
  if (v0) {
    uint64_t v3 = sub_A0010;
  }
  else {
    uint64_t v3 = sub_9F9EC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_9F9EC()
{
  uint64_t v1 = *(void **)(v0 + 920);
  uint64_t v2 = *(void **)(v0 + 672);
  uint64_t v3 = *(void *)(v0 + 616);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(void, void))(v3 + 8))(*(void *)(v0 + 640), *(void *)(v0 + 608));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_9FBF0()
{
  uint64_t v1 = *(void **)(v0 + 672);
  uint64_t v12 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 616);
  uint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_9FDF4()
{
  unint64_t v1 = *(void *)(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 880);
  uint64_t v3 = *(void **)(v0 + 872);
  uint64_t v4 = *(void **)(v0 + 672);
  uint64_t v5 = *(void *)(v0 + 616);
  uint64_t v14 = *(void *)(v0 + 608);
  uint64_t v15 = *(void *)(v0 + 640);
  uint64_t v6 = *(void *)(v0 + 544);
  uint64_t v12 = *(void *)(v0 + 536);
  uint64_t v13 = *(void *)(v0 + 576);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  sub_34B88(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_A0010()
{
  unint64_t v1 = *(void **)(v0 + 920);
  uint64_t v2 = *(void **)(v0 + 672);
  uint64_t v3 = *(void *)(v0 + 616);
  uint64_t v12 = *(void *)(v0 + 608);
  uint64_t v13 = *(void *)(v0 + 640);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_A0218(uint64_t *a1)
{
  uint64_t v2 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13E4C0(0);
  sub_1404D0();
  uint64_t v5 = sub_140500();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = type metadata accessor for ResumeTimerHandledOnWatchParameters(0);
  sub_2D248((uint64_t)v4, (uint64_t)a1 + *(int *)(v6 + 24));
  sub_1404A0();
  sub_5830(&qword_17DE78);
  sub_13F150();
  uint64_t v7 = sub_140490();
  uint64_t result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t sub_A0344(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13EFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_13F1C0();
  swift_bridgeObjectRetain();
  return sub_13F1D0();
}

uint64_t sub_A0468(uint64_t a1, uint64_t a2)
{
  v2[42] = a1;
  v2[43] = a2;
  v2[44] = type metadata accessor for SiriTimePluginModel(0);
  v2[45] = swift_task_alloc();
  uint64_t v3 = sub_140730();
  v2[46] = v3;
  v2[47] = *(void *)(v3 - 8);
  v2[48] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v2[49] = swift_task_alloc();
  type metadata accessor for ResumeTimerAlreadyRunningAllParameters(0);
  v2[50] = swift_task_alloc();
  sub_140590();
  v2[51] = swift_task_alloc();
  uint64_t v4 = sub_141170();
  v2[52] = v4;
  v2[53] = *(void *)(v4 - 8);
  v2[54] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v2[55] = v5;
  v2[56] = *(void *)(v5 - 8);
  v2[57] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v2[58] = v6;
  v2[59] = *(void *)(v6 - 8);
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  uint64_t v7 = sub_13EFF0();
  v2[62] = v7;
  v2[63] = *(void *)(v7 - 8);
  v2[64] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[65] = v8;
  v2[66] = *(void *)(v8 - 8);
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  return _swift_task_switch(sub_A07CC, 0, 0);
}

uint64_t sub_A07CC()
{
  uint64_t v95 = v0;
  if (qword_17B220 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[52], (uint64_t)qword_17DE10);
  v0[69] = v1;
  unint64_t v90 = v1;
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "ResumeTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse() called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[56];
  uint64_t v6 = v0[57];
  uint64_t v93 = v0;
  uint64_t v7 = v0[55];
  uint64_t v8 = v0[54];
  uint64_t v9 = v0[53];
  uint64_t v10 = v93[52];

  sub_13EC50();
  sub_13EFE0();
  uint64_t v11 = enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104);
  v93[70] = (uint64_t)v12;
  v93[71] = (v5 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  uint64_t v13 = v7;
  uint64_t v14 = v93;
  v12(v6, v11, v13);
  uint64_t v15 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
  v93[72] = (uint64_t)v15;
  v93[73] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  unint64_t v16 = v90;
  v15(v8, v90, v10);
  mach_absolute_time();
  sub_1406B0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v93[74] = sub_140470();
  sub_5830(&qword_17DE78);
  int v17 = (void *)sub_13F140();
  uint64_t v18 = sub_140CE0();

  switch(v18)
  {
    case 'd':
      int v91 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v19 = (void *)swift_task_alloc();
      v93[78] = (uint64_t)v19;
      *uint64_t v19 = v93;
      v19[1] = sub_A1700;
      unint64_t v20 = 0x8000000000147BE0;
      uint64_t v21 = _swiftEmptyArrayStorage;
      unint64_t v22 = 0xD000000000000012;
      goto LABEL_32;
    case 'e':
      uint64_t v37 = v93[43];
      uint64_t v38 = swift_task_alloc();
      v93[75] = v38;
      *(void *)(v38 + 16) = v37;
      uint64_t v39 = (void *)swift_task_alloc();
      v93[76] = (uint64_t)v39;
      *uint64_t v39 = v93;
      v39[1] = sub_A1504;
      return sub_11DBA8((uint64_t)sub_A4B68, v38);
    case 'f':
      unint64_t v41 = (void *)sub_13F140();
      id v42 = [v41 resumedTimers];

      if (!v42) {
        goto LABEL_37;
      }
      sub_140EA0();
      unint64_t v43 = sub_141310();

      if (v43 >> 62)
      {
        swift_bridgeObjectRetain();
        id v42 = (id)sub_1417D0();
        swift_bridgeObjectRelease();
        if (v42)
        {
LABEL_17:
          if ((v43 & 0xC000000000000001) != 0)
          {
            id v44 = (id)sub_1416A0();
          }
          else
          {
            if (!*(void *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8)))
            {
              __break(1u);
              goto LABEL_60;
            }
            id v44 = *(id *)(v43 + 32);
          }
          uint64_t v45 = v44;
          swift_bridgeObjectRelease();
          id v46 = v45;
          id v42 = (id)sub_174C0(0, 0);

LABEL_38:
          v93[84] = (uint64_t)v45;
          v93[83] = (uint64_t)v42;
          uint64_t v60 = v93[47];
          uint64_t v59 = v93[48];
          uint64_t v61 = v93[46];
          sub_140720();
          BOOL v62 = sub_1406C0();
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
          if (v62 && v45)
          {
            id v63 = v45;
            uint64_t v64 = sub_141160();
            os_log_type_t v65 = sub_141480();
            if (os_log_type_enabled(v64, v65))
            {
              uint64_t v66 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v66 = 0;
              _os_log_impl(&dword_0, v64, v65, "[ResumeTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse] Using multi-timer RF 2.0 path for failureTimerAlreadyRunning", v66, 2u);
              swift_slowDealloc();
            }

            id v67 = v63;
            uint64_t v68 = sub_141160();
            os_log_type_t v69 = sub_141480();
            if (os_log_type_enabled(v68, v69))
            {
              uint64_t v70 = (uint8_t *)swift_slowAlloc();
              uint64_t v94 = swift_slowAlloc();
              *(_DWORD *)uint64_t v70 = 136315138;
              id v71 = v67;
              id v72 = [v71 description];
              uint64_t v73 = sub_141250();
              id v74 = v67;
              unint64_t v76 = v75;

              v93[41] = sub_58C0(v73, v76, &v94);
              uint64_t v14 = v93;
              sub_1415C0();
              id v67 = v74;
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_0, v68, v69, "[ResumeTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse] Resumed timer: %s", v70, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            sub_140DF0();
            sub_140DE0();
            uint64_t v82 = v14[10];
            uint64_t v83 = v14[11];
            sub_90A8(v93 + 7, v82);
            id v84 = [v67 identifier];
            if (v84)
            {
              uint64_t v85 = v84;
              uint64_t v86 = sub_141250();
              uint64_t v88 = v87;
            }
            else
            {
              uint64_t v86 = 0;
              uint64_t v88 = 0;
            }
            v14[85] = v88;
            long long v89 = (void *)swift_task_alloc();
            v14[86] = (uint64_t)v89;
            *long long v89 = v14;
            v89[1] = sub_A204C;
            return dispatch thunk of SessionManaging.sessionIDString(for:)(v86, v88, v82, v83);
          }
          else
          {
            uint64_t v77 = sub_141160();
            os_log_type_t v78 = sub_141480();
            if (os_log_type_enabled(v77, v78))
            {
              uint64_t v79 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v79 = 0;
              _os_log_impl(&dword_0, v77, v78, "[ResumeTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse] Using RF 1.0 pattern", v79, 2u);
              swift_slowDealloc();
            }

            if (qword_17B410 != -1) {
              swift_once();
            }
            uint64_t v80 = qword_1812E0;
            uint64_t v92 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_17F188 + dword_17F188);
            swift_retain();
            uint64_t v81 = (void *)swift_task_alloc();
            v93[98] = (uint64_t)v81;
            *uint64_t v81 = v93;
            v81[1] = sub_A2E78;
            return v92(v80, (uint64_t)v42);
          }
        }
      }
      else
      {
        id v42 = *(id *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8));
        if (v42) {
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
LABEL_37:
      uint64_t v45 = 0;
      goto LABEL_38;
    case 'g':
      if (qword_17B410 != -1) {
        swift_once();
      }
      uint64_t v47 = v93[49];
      uint64_t v48 = v93[50];
      uint64_t v49 = sub_140500();
      uint64_t v50 = *(void *)(v49 - 8);
      unint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);
      v51(v48, 1, 1, v49);
      sub_904C(v48, &qword_17BE78);
      v51(v48, 1, 1, v49);
      sub_5830(&qword_17F3D0);
      uint64_t v52 = swift_allocObject();
      v93[80] = v52;
      *(_OWORD *)(v52 + 16) = xmmword_142D50;
      uint64_t v53 = (uint64_t *)(v52 + 48);
      *(void *)(v52 + 32) = 0x6174614477656976;
      *(void *)(v52 + 40) = 0xE800000000000000;
      sub_8FE8(v48, v47, &qword_17BE78);
      int v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v47, 1, v49);
      uint64_t v55 = v93[49];
      if (v54 == 1)
      {
        sub_904C(v93[49], &qword_17BE78);
        *(_OWORD *)uint64_t v53 = 0u;
        *(_OWORD *)(v52 + 64) = 0u;
      }
      else
      {
        *(void *)(v52 + 72) = v49;
        uint64_t v56 = sub_187EC(v53);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v50 + 32))(v56, v55, v49);
      }
      int v91 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v57 = (void *)swift_task_alloc();
      v93[81] = (uint64_t)v57;
      *uint64_t v57 = v93;
      v57[1] = sub_A1B78;
      unint64_t v20 = 0x8000000000149120;
      unint64_t v22 = 0xD00000000000001DLL;
      uint64_t v21 = (void *)v52;
      goto LABEL_32;
    default:
      unint64_t v16 = 0xD000000000000012;
      uint64_t v23 = v93[68];
      uint64_t v24 = v93[67];
      uint64_t v25 = v93[66];
      uint64_t v26 = v93[65];
      sub_13EC80();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v23, v24, v26);
      uint64_t v27 = (void *)sub_13F160();
      id v28 = [v27 targetTimer];

      id v29 = [v28 shouldMatchAny];
      sub_2FF44();
      v30.super.super.Class isa = sub_141580(1).super.super.isa;
      Class isa = v30.super.super.isa;
      if (!v29)
      {

        goto LABEL_28;
      }
      id v32 = v29;
      char v33 = sub_141590();

      if ((v33 & 1) == 0)
      {
LABEL_28:
        if (qword_17B410 != -1) {
          swift_once();
        }
        int v91 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
        unint64_t v58 = (void *)swift_task_alloc();
        v93[102] = (uint64_t)v58;
        *unint64_t v58 = v93;
        v58[1] = sub_A37AC;
        unint64_t v35 = 0xD000000000000017;
        int v36 = "resumeTimer#errorSingle";
        goto LABEL_31;
      }
      if (qword_17B410 != -1) {
LABEL_60:
      }
        swift_once();
      int v91 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v34 = (void *)swift_task_alloc();
      v93[100] = (uint64_t)v34;
      *uint64_t v34 = v93;
      v34[1] = sub_A3334;
      unint64_t v35 = v16 + 4;
      int v36 = "resumeTimer#errorMulti";
LABEL_31:
      unint64_t v20 = (unint64_t)(v36 - 32) | 0x8000000000000000;
      uint64_t v21 = _swiftEmptyArrayStorage;
      unint64_t v22 = v35;
LABEL_32:
      return ((uint64_t (*)(unint64_t, unint64_t, void *))v91)(v22, v20, v21);
  }
}

uint64_t sub_A1504(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  v3[22] = v2;
  v3[23] = a1;
  unsigned char v3[24] = v1;
  v3[77] = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_A3EB4;
  }
  else {
    uint64_t v4 = sub_A1640;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A1640()
{
  uint64_t v1 = (void *)v0[23];
  v0[104] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[105] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_A3C24;
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[64];
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[42];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v6, v3, v4, v5, 0);
}

uint64_t sub_A1700(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[25] = v2;
  v3[26] = a1;
  v3[27] = v1;
  v3[79] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_A18DC;
  }
  else {
    uint64_t v4 = sub_A181C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A181C()
{
  uint64_t v1 = (void *)v0[26];
  v0[104] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[105] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_A3C24;
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[64];
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[42];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v6, v3, v4, v5, 0);
}

uint64_t sub_A18DC()
{
  swift_release();
  uint64_t v1 = v0[66];
  uint64_t v14 = v0[65];
  uint64_t v15 = v0[68];
  uint64_t v2 = v0[63];
  uint64_t v12 = v0[62];
  uint64_t v13 = v0[64];
  uint64_t v11 = v0[61];
  uint64_t v4 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v5 = sub_140AB0();
  v0[5] = v5;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC(v0 + 2);
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_A1B78(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[28] = v2;
  v3[29] = a1;
  v3[30] = v1;
  v3[82] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_A1D90;
  }
  else {
    uint64_t v4 = sub_A1CB4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A1CB4()
{
  sub_A4B08(v0[50], type metadata accessor for ResumeTimerAlreadyRunningAllParameters);
  uint64_t v1 = (void *)v0[29];
  v0[104] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[105] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_A3C24;
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[64];
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[42];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v6, v3, v4, v5, 0);
}

uint64_t sub_A1D90()
{
  sub_A4B08(v0[50], type metadata accessor for ResumeTimerAlreadyRunningAllParameters);
  swift_release();
  uint64_t v1 = v0[66];
  uint64_t v14 = v0[65];
  uint64_t v15 = v0[68];
  uint64_t v2 = v0[63];
  uint64_t v12 = v0[62];
  uint64_t v13 = v0[64];
  uint64_t v11 = v0[61];
  uint64_t v4 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v5 = sub_140AB0();
  v0[5] = v5;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC(v0 + 2);
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_A204C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 696) = a1;
  *(void *)(v3 + 704) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_A2170, 0, 0);
}

uint64_t sub_A2170()
{
  uint64_t v14 = (void (*)(uint64_t, uint64_t, uint64_t))v0[72];
  uint64_t v12 = (void (*)(uint64_t, void, uint64_t))v0[70];
  uint64_t v13 = v0[69];
  uint64_t v1 = v0[57];
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[55];
  uint64_t v4 = v0[52];
  uint64_t v5 = (uint64_t *)v0[45];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  sub_5830(&qword_17C358);
  uint64_t v6 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_142D50;
  sub_1B94C((void *)(v8 + v7));
  uint64_t *v5 = v8;
  swift_storeEnumTagMultiPayload();
  v12(v1, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v3);
  v14(v2, v13, v4);
  mach_absolute_time();
  sub_1406B0();
  if (qword_17B400 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[89] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_A2388;
  uint64_t v10 = v0[83];
  return sub_4EF4C(v10);
}

uint64_t sub_A2388(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 720) = a1;
  *(void *)(v3 + 728) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_A4150;
  }
  else
  {
    uint64_t v4 = sub_A24A8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A24A8()
{
  unint64_t v1 = v0[88];
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_141160();
    os_log_type_t v3 = sub_141480();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = v0[87];
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      swift_bridgeObjectRetain();
      v0[40] = sub_58C0(v4, v1, &v24);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v2, v3, "[ResumeTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse] We have a live activity: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v19 = v0[44];
    uint64_t v18 = v0[45];
    sub_13EC50();
    v0[20] = v19;
    v0[21] = sub_1BD1C();
    unint64_t v20 = sub_187EC(v0 + 17);
    sub_1C5F0(v18, (uint64_t)v20);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[92] = (uint64_t)v21;
    *uint64_t v21 = v0;
    v21[1] = sub_A27E8;
    uint64_t v13 = v0[67];
    uint64_t v14 = v0[64];
    uint64_t v15 = v0[60];
    uint64_t v16 = v0[42];
    int v17 = v0 + 17;
  }
  else
  {
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "[ResumeTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse] Using multi-timer snippet model for single running timer instead.", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = v0[44];
    uint64_t v10 = v0[45];

    sub_13EC50();
    v0[15] = v9;
    v0[16] = sub_1BD1C();
    uint64_t v11 = sub_187EC(v0 + 12);
    sub_1C5F0(v10, (uint64_t)v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[95] = (uint64_t)v12;
    *uint64_t v12 = v0;
    v12[1] = sub_A2B30;
    uint64_t v13 = v0[67];
    uint64_t v14 = v0[64];
    uint64_t v15 = v0[60];
    uint64_t v16 = v0[42];
    int v17 = v0 + 12;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v16, v13, v14, v17, v15, 0, 0, 0);
}

uint64_t sub_A27E8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 136;
  uint64_t v3 = *(void *)(*v0 + 536);
  uint64_t v4 = *(void *)(*v0 + 528);
  uint64_t v5 = *(void *)(*v0 + 520);
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v1 + 744) = v6;
  *(void *)(v1 + 752) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  sub_904C(v2, &qword_17C350);
  return _swift_task_switch(sub_A296C, 0, 0);
}

uint64_t sub_A296C()
{
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  uint64_t v1 = *(void **)(v0 + 672);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v14 = *(void *)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v11 = *(void *)(v0 + 496);
  uint64_t v12 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v6 = *(void *)(v0 + 464);
  uint64_t v7 = *(void *)(v0 + 360);

  swift_release();
  swift_release();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v5, v6);
  sub_A4B08(v7, type metadata accessor for SiriTimePluginModel);
  v8(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  v15(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_A2B30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 96;
  uint64_t v3 = *(void *)(*v0 + 536);
  uint64_t v4 = *(void *)(*v0 + 528);
  uint64_t v5 = *(void *)(*v0 + 520);
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v1 + 768) = v6;
  *(void *)(v1 + 776) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  sub_904C(v2, &qword_17C350);
  return _swift_task_switch(sub_A2CB4, 0, 0);
}

uint64_t sub_A2CB4()
{
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 768);
  uint64_t v1 = *(void **)(v0 + 672);
  uint64_t v13 = *(void *)(v0 + 520);
  uint64_t v14 = *(void *)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v11 = *(void *)(v0 + 496);
  uint64_t v12 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v6 = *(void *)(v0 + 464);
  uint64_t v7 = *(void *)(v0 + 360);

  swift_release();
  swift_release();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v5, v6);
  sub_A4B08(v7, type metadata accessor for SiriTimePluginModel);
  v8(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  v15(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_A2E78(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[31] = v2;
  v3[32] = a1;
  v3[33] = v1;
  v3[99] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1) {
    uint64_t v4 = sub_A3084;
  }
  else {
    uint64_t v4 = sub_A2FB4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A2FB4()
{
  uint64_t v1 = (void *)v0[84];
  swift_release();

  uint64_t v2 = (void *)v0[32];
  v0[104] = v2;
  v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[105] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_A3C24;
  uint64_t v4 = v0[68];
  uint64_t v5 = v0[64];
  uint64_t v6 = v0[61];
  uint64_t v7 = v0[42];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v7, v4, v5, v6, 0);
}

uint64_t sub_A3084()
{
  uint64_t v1 = (void *)v0[84];
  swift_release();
  swift_release();

  uint64_t v2 = v0[66];
  uint64_t v15 = v0[65];
  uint64_t v16 = v0[68];
  uint64_t v3 = v0[63];
  uint64_t v13 = v0[62];
  uint64_t v14 = v0[64];
  uint64_t v12 = v0[61];
  uint64_t v5 = v0[58];
  uint64_t v4 = v0[59];
  uint64_t v6 = sub_140AB0();
  v0[5] = v6;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v7 = sub_187EC(v0 + 2);
  uint64_t *v7 = sub_13E450();
  uint64_t v8 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v9 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for ABCReport.dialog(_:), v6);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_A3334(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[34] = v2;
  v3[35] = a1;
  v3[36] = v1;
  v3[101] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_A3510;
  }
  else {
    uint64_t v4 = sub_A3450;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A3450()
{
  uint64_t v1 = (void *)v0[35];
  v0[104] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[105] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_A3C24;
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[64];
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[42];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v6, v3, v4, v5, 0);
}

uint64_t sub_A3510()
{
  swift_release();
  uint64_t v1 = v0[66];
  uint64_t v14 = v0[65];
  uint64_t v15 = v0[68];
  uint64_t v2 = v0[63];
  uint64_t v12 = v0[62];
  uint64_t v13 = v0[64];
  uint64_t v11 = v0[61];
  uint64_t v4 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v5 = sub_140AB0();
  v0[5] = v5;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC(v0 + 2);
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_A37AC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[37] = v2;
  v3[38] = a1;
  v3[39] = v1;
  v3[103] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_A3988;
  }
  else {
    uint64_t v4 = sub_A38C8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A38C8()
{
  uint64_t v1 = (void *)v0[38];
  v0[104] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[105] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_A3C24;
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[64];
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[42];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v6, v3, v4, v5, 0);
}

uint64_t sub_A3988()
{
  swift_release();
  uint64_t v1 = v0[66];
  uint64_t v14 = v0[65];
  uint64_t v15 = v0[68];
  uint64_t v2 = v0[63];
  uint64_t v12 = v0[62];
  uint64_t v13 = v0[64];
  uint64_t v11 = v0[61];
  uint64_t v4 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v5 = sub_140AB0();
  v0[5] = v5;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC(v0 + 2);
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_A3C24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 848) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_A4444;
  }
  else
  {

    uint64_t v3 = sub_A3D40;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_A3D40()
{
  uint64_t v1 = (void *)v0[104];
  uint64_t v12 = v0[68];
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[65];
  uint64_t v5 = v0[63];
  uint64_t v4 = v0[64];
  uint64_t v7 = v0[61];
  uint64_t v6 = v0[62];
  uint64_t v9 = v0[58];
  uint64_t v8 = v0[59];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_A3EB4()
{
  swift_release();
  uint64_t v1 = v0[66];
  uint64_t v14 = v0[65];
  uint64_t v15 = v0[68];
  uint64_t v2 = v0[63];
  uint64_t v12 = v0[62];
  uint64_t v13 = v0[64];
  uint64_t v11 = v0[61];
  uint64_t v4 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v5 = sub_140AB0();
  v0[5] = v5;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC(v0 + 2);
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_A4150()
{
  uint64_t v1 = (void *)v0[84];
  uint64_t v3 = v0[59];
  uint64_t v2 = v0[60];
  uint64_t v4 = v0[58];
  uint64_t v5 = v0[45];
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_A4B08(v5, type metadata accessor for SiriTimePluginModel);
  uint64_t v6 = v0[66];
  uint64_t v19 = v0[65];
  uint64_t v20 = v0[68];
  uint64_t v7 = v0[63];
  uint64_t v17 = v0[62];
  uint64_t v18 = v0[64];
  uint64_t v16 = v0[61];
  uint64_t v9 = v0[58];
  uint64_t v8 = v0[59];
  uint64_t v10 = sub_140AB0();
  v0[5] = v10;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v11 = sub_187EC(v0 + 2);
  *uint64_t v11 = sub_13E450();
  uint64_t v12 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v13 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for ABCReport.dialog(_:), v10);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_A4444()
{
  swift_release();
  uint64_t v15 = *(void *)(v0 + 544);
  uint64_t v16 = *(void **)(v0 + 832);
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 504);
  uint64_t v13 = *(void *)(v0 + 512);
  uint64_t v14 = *(void *)(v0 + 520);
  uint64_t v11 = *(void *)(v0 + 488);
  uint64_t v12 = *(void *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v5 = sub_140AB0();
  *(void *)(v0 + 40) = v5;
  *(void *)(v0 + 48) = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC((uint64_t *)(v0 + 16));
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_A46F8(uint64_t a1)
{
  sub_5830(&qword_17DE78);
  uint64_t v4 = (void *)sub_13F160();
  sub_140D00();
  sub_140F90();
  uint64_t v3 = v2;

  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_A4774(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  void *v5 = v2;
  v5[1] = sub_A481C;
  return sub_9B99C(a1, a2);
}

uint64_t sub_A481C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_A4950, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_A4950()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_A4A10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_159A4;
  return sub_A0468(a1, a2);
}

unint64_t sub_A4AB4()
{
  unint64_t result = qword_17DE30[0];
  if (!qword_17DE30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17DE30);
  }
  return result;
}

uint64_t sub_A4B08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_A4B68(uint64_t a1)
{
}

uint64_t sub_A4B70(uint64_t a1)
{
  return sub_A0344(a1, *(void *)(v1 + 16));
}

uint64_t sub_A4B7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_A4BE4(uint64_t *a1)
{
  return sub_A0218(a1);
}

uint64_t type metadata accessor for TimeSuggestionsCATsSimple()
{
  uint64_t result = qword_17DE88;
  if (!qword_17DE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A4C3C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_A4C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_A4E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_A4F10()
{
  return type metadata accessor for TimeSuggestionsCATsSimple();
}

uint64_t type metadata accessor for ResumeTimerCATs_Async()
{
  uint64_t result = qword_17DED8;
  if (!qword_17DED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A4F64()
{
  return swift_initClassMetadata2();
}

uint64_t sub_A4FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_A5128()
{
  return type metadata accessor for ResumeTimerCATs_Async();
}

uint64_t type metadata accessor for DeleteTimerCATs_Async()
{
  uint64_t result = qword_17DF28;
  if (!qword_17DF28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A517C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_A51BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_A5340()
{
  return type metadata accessor for DeleteTimerCATs_Async();
}

uint64_t sub_A5348()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17DF78);
  sub_33D8(v0, (uint64_t)qword_17DF78);
  return sub_140E60();
}

uint64_t type metadata accessor for CreateTimerCATsSimple()
{
  uint64_t result = qword_17DF90;
  if (!qword_17DF90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A53E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_A5420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_A55B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_A56C8()
{
  return type metadata accessor for CreateTimerCATsSimple();
}

uint64_t sub_A56D0()
{
  return swift_deallocClassInstance();
}

double sub_A56E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = a1 == 0x6970756F72476F6ELL && a2 == 0xEA0000000000676ELL;
  if (v5 || (sub_141AA0() & 1) != 0)
  {
    char v9 = v3[24];
LABEL_7:
    *(void *)(a3 + 24) = &type metadata for Bool;
    *(unsigned char *)a3 = v9;
    return result;
  }
  if (a1 == 0x6562614C656D6173 && a2 == 0xE90000000000006CLL || (sub_141AA0() & 1) != 0)
  {
    char v9 = v3[25];
    goto LABEL_7;
  }
  if (a1 == 0x6D6F6F52656D6173 && a2 == 0xE800000000000000 || (sub_141AA0() & 1) != 0)
  {
    char v9 = v3[26];
    goto LABEL_7;
  }
  if (a1 == 0x69766544656D6173 && a2 == 0xEA00000000006563 || (sub_141AA0() & 1) != 0)
  {
    char v9 = v3[27];
    goto LABEL_7;
  }
  if (a1 == 0x696E6E75526C6C61 && a2 == 0xEA0000000000676ELL || (sub_141AA0() & 1) != 0)
  {
    char v9 = v3[28];
    goto LABEL_7;
  }
  if (a1 == 0x65737561506C6C61 && a2 == 0xE900000000000064 || (sub_141AA0() & 1) != 0)
  {
    char v9 = v3[29];
    goto LABEL_7;
  }
  if (a1 == 0x61727544656D6173 && a2 == 0xEC0000006E6F6974 || (sub_141AA0() & 1) != 0)
  {
    char v9 = v3[30];
    goto LABEL_7;
  }
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_A5994(char a1)
{
  return *(void *)&aNogroupisamela[8 * a1];
}

uint64_t sub_A59B4(char *a1, char *a2)
{
  return sub_B342C(*a1, *a2);
}

Swift::Int sub_A59C0()
{
  return sub_BC6C8();
}

uint64_t sub_A59CC()
{
  return sub_BC4B4();
}

Swift::Int sub_A59D4()
{
  return sub_BC6C8();
}

uint64_t sub_A59DC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_A65C4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_A5A0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_A5994(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_A5A38()
{
  return sub_A5994(*v0);
}

uint64_t sub_A5A40@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A65C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_A5A68(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_A5A74(uint64_t a1)
{
  unint64_t v2 = sub_A6290();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A5AB0(uint64_t a1)
{
  unint64_t v2 = sub_A6290();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_A5AEC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TimerTimerGrouping()
{
  return self;
}

uint64_t sub_A5B48(void *a1)
{
  uint64_t v3 = sub_5830(&qword_17E2E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_90A8(a1, a1[3]);
  sub_A6290();
  sub_141B90();
  v8[15] = 0;
  sub_141930();
  if (!v1)
  {
    v8[14] = 1;
    sub_141930();
    v8[13] = 2;
    sub_141930();
    v8[12] = 3;
    sub_141930();
    v8[11] = 4;
    sub_141930();
    v8[10] = 5;
    sub_141930();
    v8[9] = 6;
    sub_141930();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for TimerTimerGrouping.Builder()
{
  return self;
}

uint64_t sub_A5D94(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_5830(&qword_17E2D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  sub_90A8(a1, a1[3]);
  sub_A6290();
  sub_141B80();
  if (v2)
  {

    type metadata accessor for TimerTimerGrouping();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v18 = 0;
    *(unsigned char *)(v1 + 24) = sub_1418B0() & 1;
    char v17 = 1;
    *(unsigned char *)(v1 + 25) = sub_1418B0() & 1;
    char v16 = 2;
    *(unsigned char *)(v1 + 26) = sub_1418B0() & 1;
    char v15 = 3;
    *(unsigned char *)(v1 + 27) = sub_1418B0() & 1;
    char v14 = 4;
    *(unsigned char *)(v1 + 28) = sub_1418B0() & 1;
    char v13 = 5;
    *(unsigned char *)(v1 + 29) = sub_1418B0() & 1;
    char v12 = 6;
    char v10 = sub_1418B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)(v3 + 30) = v10 & 1;
  }
  _s20HandleIntentStrategyVwxx_1((uint64_t)a1);
  return v3;
}

unint64_t sub_A603C()
{
  return 0xD000000000000013;
}

void *sub_A6058()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = v2;
  return v2;
}

void sub_A60A0(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = a1;
}

uint64_t (*sub_A60EC())()
{
  return j__swift_endAccess;
}

double sub_A6148@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_A56E0(a1, a2, a3);
}

uint64_t sub_A616C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for TimerTimerGrouping();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_A5D94(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_A61C4(void *a1)
{
  return sub_A5B48(a1);
}

uint64_t sub_A61E8()
{
  return sub_A6250(&qword_17E2C0);
}

uint64_t sub_A621C()
{
  return sub_A6250(&qword_17E2C8);
}

uint64_t sub_A6250(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TimerTimerGrouping();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_A6290()
{
  unint64_t result = qword_17E2D8;
  if (!qword_17E2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17E2D8);
  }
  return result;
}

uint64_t sub_A62E4(unsigned char *a1)
{
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = a1[16];
  *(unsigned char *)(v1 + 25) = a1[17];
  *(unsigned char *)(v1 + 26) = a1[18];
  *(unsigned char *)(v1 + 27) = a1[19];
  *(unsigned char *)(v1 + 28) = a1[20];
  *(unsigned char *)(v1 + 29) = a1[21];
  *(unsigned char *)(v1 + 30) = a1[22];
  return v1;
}

uint64_t getEnumTagSinglePayload for TimerTimerGrouping.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimerTimerGrouping.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA6484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerTimerGrouping.CodingKeys()
{
  return &type metadata for TimerTimerGrouping.CodingKeys;
}

unint64_t sub_A64C0()
{
  unint64_t result = qword_17E2E8;
  if (!qword_17E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17E2E8);
  }
  return result;
}

unint64_t sub_A6518()
{
  unint64_t result = qword_17E2F0;
  if (!qword_17E2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17E2F0);
  }
  return result;
}

unint64_t sub_A6570()
{
  unint64_t result = qword_17E2F8;
  if (!qword_17E2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17E2F8);
  }
  return result;
}

uint64_t sub_A65C4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1740E0;
  v6._object = a2;
  unint64_t v4 = sub_141820(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t type metadata accessor for DeleteTimerCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17E300);
}

uint64_t sub_A6630()
{
  return swift_initClassMetadata2();
}

uint64_t sub_A6670()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  Swift::String v6 = (char *)&v18 - v5;
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_142FB0;
  int v8 = (uint64_t *)(v7 + 48);
  strcpy((char *)(v7 + 32), "cancelAction");
  *(unsigned char *)(v7 + 45) = 0;
  *(_WORD *)(v7 + 46) = -5120;
  sub_8FE8(v0, (uint64_t)v6, &qword_17BE78);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v6, 1, v9) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)int v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    char v12 = sub_187EC(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v12, v6, v9);
  }
  strcpy((char *)(v7 + 80), "confirmAction");
  *(_WORD *)(v7 + 94) = -4864;
  uint64_t v13 = type metadata accessor for DeleteTimerConfirmExistingParameters(0);
  sub_8FE8(v0 + *(int *)(v13 + 20), (uint64_t)v4, &qword_17BE78);
  if (v11(v4, 1, v9) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17BE78);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v9;
    char v14 = sub_187EC((uint64_t *)(v7 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v14, v4, v9);
  }
  strcpy((char *)(v7 + 128), "speakableTimer");
  *(unsigned char *)(v7 + 143) = -18;
  uint64_t v15 = *(void *)(v0 + *(int *)(v13 + 24));
  if (v15)
  {
    uint64_t v16 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(v7 + 152) = 0;
    *(void *)(v7 + 160) = 0;
  }
  *(void *)(v7 + 144) = v15;
  *(void *)(v7 + 168) = v16;
  swift_retain();
  return v7;
}

uint64_t sub_A6920()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17BE78);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  sub_5830(&qword_17F3D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_142FC0;
  uint64_t v9 = (uint64_t *)(v8 + 48);
  strcpy((char *)(v8 + 32), "cancelAction");
  *(unsigned char *)(v8 + 45) = 0;
  *(_WORD *)(v8 + 46) = -5120;
  sub_8FE8(v1, (uint64_t)v7, &qword_17BE78);
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void *)(v10 - 8);
  char v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v7, 1, v10) == 1)
  {
    sub_904C((uint64_t)v7, &qword_17BE78);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }
  else
  {
    *(void *)(v8 + 72) = v10;
    uint64_t v13 = sub_187EC(v9);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v13, v7, v10);
  }
  strcpy((char *)(v8 + 80), "confirmAction");
  *(_WORD *)(v8 + 94) = -4864;
  uint64_t v14 = type metadata accessor for DeleteTimerConfirmMultiParameters(0);
  sub_8FE8(v1 + *(int *)(v14 + 20), (uint64_t)v5, &qword_17BE78);
  if (v12(v5, 1, v10) == 1)
  {
    sub_904C((uint64_t)v5, &qword_17BE78);
    *(_OWORD *)(v8 + 96) = 0u;
    *(_OWORD *)(v8 + 112) = 0u;
  }
  else
  {
    *(void *)(v8 + 120) = v10;
    uint64_t v15 = sub_187EC((uint64_t *)(v8 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v15, v5, v10);
  }
  return v8;
}

uint64_t sub_A6B7C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_A6B9C, 0, 0);
}

uint64_t sub_A6B9C()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  strcpy((char *)(v2 + 32), "deletedTimers");
  *(_WORD *)(v2 + 46) = -4864;
  *(void *)(v2 + 72) = sub_5830(&qword_17C508);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_4F0A4;
  return v5(0xD000000000000019, 0x8000000000149440, v2);
}

uint64_t sub_A6CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_A6E70()
{
  return type metadata accessor for DeleteTimerCATPatternsExecutor(0);
}

uint64_t type metadata accessor for DeleteTimerConfirmMultiParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17E450);
}

uint64_t sub_A6E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_5830(&qword_17BE78);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for DeleteTimerConfirmExistingParameters(0);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_A6F64, 0, 0);
}

uint64_t sub_A6F64()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  uint64_t v6 = v1 + *(int *)(v2 + 20);
  v5(v6, 1, 1, v4);
  uint64_t v7 = *(int *)(v2 + 24);
  *(void *)(v1 + v7) = 0;
  *(void *)(v1 + v7) = sub_174C0(0, 0);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v1);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v6);
  uint64_t v8 = sub_A6670();
  v0[11] = v8;
  uint64_t v11 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[12] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_A7170;
  return v11(0xD00000000000001BLL, 0x8000000000149460, v8);
}

uint64_t sub_A7170(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_A733C;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_A72BC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_A72BC()
{
  sub_A73D8(v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[14];
  return v1(v2);
}

uint64_t sub_A733C()
{
  sub_A73D8(*(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for DeleteTimerConfirmExistingParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17E3B8);
}

uint64_t sub_A73D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeleteTimerConfirmExistingParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A7434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A7448);
}

uint64_t sub_A7448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_A7518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A752C);
}

uint64_t sub_A752C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_A75EC()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_A7684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A7698);
}

uint64_t sub_A7698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_A7708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A771C);
}

uint64_t sub_A771C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TimeSuggestionsCATs_Async()
{
  uint64_t result = qword_17E488;
  if (!qword_17E488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A77DC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_A781C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_A79A0()
{
  return type metadata accessor for TimeSuggestionsCATs_Async();
}

uint64_t sub_A79A8(uint64_t a1)
{
  return sub_A79D8(a1, &enum case for SiriTimeAppBundleId.clockApp(_:), &qword_180FF0, algn_180FF8);
}

uint64_t sub_A79C0(uint64_t a1)
{
  return sub_A79D8(a1, (unsigned int *)&enum case for SiriTimeAppBundleId.timerExtension(_:), &qword_181000, algn_181008);
}

uint64_t sub_A79D8(uint64_t a1, unsigned int *a2, uint64_t *a3, void *a4)
{
  uint64_t v7 = sub_140630();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *a2, v7);
  uint64_t v11 = sub_140620();
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v11;
  *a4 = v13;
  return result;
}

uint64_t sub_A7AE4()
{
  if (qword_17B230 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_17B238;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  sub_140AD0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_140AC0();
  qword_181010 = result;
  return result;
}

ValueMetadata *_s25NeedsConfirmationStrategyVMa()
{
  return &_s25NeedsConfirmationStrategyVN;
}

uint64_t sub_A7BF0()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17E4D8);
  sub_33D8(v0, (uint64_t)qword_17E4D8);
  return sub_140E60();
}

uint64_t sub_A7C3C()
{
  uint64_t v0 = sub_140730();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140720();
  BOOL v4 = sub_1406E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    sub_5830(&qword_17E550);
    uint64_t v5 = (void *)sub_13F1F0();
    id v6 = [v5 targetTimer];

    id v7 = [v6 shouldMatchAny];
    sub_2FF44();
    v8.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v8.super.super.isa;
    if (v7)
    {
      id v10 = v7;
      char v11 = sub_141590();

      if (v11)
      {
        uint64_t v12 = (void *)sub_13F1F0();
        id v13 = [v12 targetingInfo];

        if (!v13)
        {
          if (qword_17B248 != -1) {
            swift_once();
          }
          uint64_t v14 = sub_141170();
          sub_33D8(v14, (uint64_t)qword_17E4D8);
          uint64_t v15 = sub_141160();
          os_log_type_t v16 = sub_141480();
          if (!os_log_type_enabled(v15, v16))
          {
            uint64_t v18 = 1;
            goto LABEL_16;
          }
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v17 = 0;
          _os_log_impl(&dword_0, v15, v16, "ResolveRecord indicates we are searching for a room confirmation", v17, 2u);
          uint64_t v18 = 1;
          goto LABEL_14;
        }
      }
    }
    else
    {
    }
  }
  if (qword_17B248 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_17E4D8);
  uint64_t v15 = sub_141160();
  os_log_type_t v20 = sub_141480();
  if (!os_log_type_enabled(v15, v20))
  {
    uint64_t v18 = 0;
    goto LABEL_16;
  }
  uint64_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v21 = 0;
  _os_log_impl(&dword_0, v15, v20, "ResolveRecord not searching for room confirmation", v21, 2u);
  uint64_t v18 = 0;
LABEL_14:
  swift_slowDealloc();
LABEL_16:

  return v18;
}

uint64_t sub_A7F58@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B248 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17E4D8);
  char v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "DeleteTimer.NeedsConfirmationStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  char v15 = sub_A7C3C();
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.roomConfirmation(_:);
  if ((v15 & 1) == 0) {
    uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.confirmation(_:);
  }
  (*(void (**)(char *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v6, *v18, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_5EE98(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_A8204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  sub_5830(&qword_17F3E0);
  v4[11] = swift_task_alloc();
  uint64_t v5 = sub_13EDF0();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_A8308, 0, 0);
}

uint64_t sub_A8308()
{
  if (qword_17B248 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17E4D8);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "DeleteTimer.NeedsConfirmationStrategy.parseConfirmationResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17E550);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];

  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (swift_dynamicCast())
  {
    uint64_t v7 = *(void **)(v0 + 48);
    id v8 = [objc_allocWithZone((Class)sub_140CD0()) init];
    [v8 setTargetTimer:v7];
    if (sub_A7C3C())
    {
      sub_B6610(*(void *)(v0 + 64), 1, *(void *)(v0 + 120));
      switch(sub_BBA44())
      {
        case 1u:
          uint64_t v16 = sub_141160();
          os_log_type_t v17 = sub_141480();
          if (os_log_type_enabled(v16, v17))
          {
            uint64_t v18 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v18 = 0;
            _os_log_impl(&dword_0, v16, v17, "Received explicit 'here' confirmation – only local timers for pauseMultiple", v18, 2u);
            swift_slowDealloc();
          }

          id v19 = [v8 targetTimer];
          if (v19) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 3u:
          uint64_t v20 = *(void *)(v0 + 112);
          uint64_t v21 = *(void *)(v0 + 96);
          uint64_t v22 = *(void *)(v0 + 104);
          sub_13EDD0();
          char v23 = sub_13EDB0();
          unint64_t v43 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
          v43(v20, v21);
          uint64_t v24 = sub_141160();
          os_log_type_t v25 = sub_141480();
          BOOL v26 = os_log_type_enabled(v24, v25);
          if ((v23 & 1) == 0)
          {
            if (v26)
            {
              unint64_t v35 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v35 = 0;
              _os_log_impl(&dword_0, v24, v25, "Defaulting confirmation to reject for no/cancel", v35, 2u);
              swift_slowDealloc();
            }
            uint64_t v42 = *(void *)(v0 + 120);
            uint64_t v37 = *(void *)(v0 + 88);
            uint64_t v36 = *(void *)(v0 + 96);

            uint64_t v38 = enum case for ConfirmationResponse.rejected(_:);
            uint64_t v39 = sub_13F0C0();
            uint64_t v40 = *(void *)(v39 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 104))(v37, v38, v39);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
            id v41 = v8;
            sub_141560();

            sub_13F190();
            v43(v42, v36);
            goto LABEL_25;
          }
          if (v26)
          {
            uint64_t v27 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v27 = 0;
            _os_log_impl(&dword_0, v24, v25, "Confirming use only local timers for pauseMultiple", v27, 2u);
            swift_slowDealloc();
          }

          id v19 = [v8 targetTimer];
          if (v19)
          {
LABEL_21:
            id v13 = v19;
            Swift::Bool v14 = 0;
LABEL_22:
            sub_2FF44();
            Class isa = sub_141570(v14).super.super.isa;
            [v13 setShouldMatchRemote:isa];
          }
LABEL_23:
          (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 96));
          break;
        default:
          uint64_t v9 = sub_141160();
          os_log_type_t v10 = sub_141480();
          if (os_log_type_enabled(v9, v10))
          {
            char v11 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v11 = 0;
            _os_log_impl(&dword_0, v9, v10, "Received explicit 'everywhere' confirmation to include remote timers for pauseMultiple", v11, 2u);
            swift_slowDealloc();
          }

          id v12 = [v8 targetTimer];
          if (!v12) {
            goto LABEL_23;
          }
          id v13 = v12;
          Swift::Bool v14 = 1;
          goto LABEL_22;
      }
    }
    uint64_t v29 = *(void *)(v0 + 88);
    uint64_t v30 = enum case for ConfirmationResponse.confirmed(_:);
    uint64_t v31 = sub_13F0C0();
    uint64_t v32 = *(void *)(v31 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 104))(v29, v30, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    id v33 = v8;
    sub_141560();

    sub_13F190();
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    *(unsigned char *)(v0 + 128) = 3;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v15();
}

uint64_t sub_A8A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_5830(&qword_17BE70);
  v3[23] = swift_task_alloc();
  uint64_t v4 = sub_13F040();
  unsigned char v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for DeleteTimerConfirmMultiParameters(0);
  v3[31] = swift_task_alloc();
  sub_140590();
  v3[32] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[33] = v5;
  v3[34] = *(void *)(v5 - 8);
  v3[35] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v3[36] = v6;
  v3[37] = *(void *)(v6 - 8);
  v3[38] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v3[39] = v7;
  unsigned char v3[40] = *(void *)(v7 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v3[44] = v8;
  v3[45] = *(void *)(v8 - 8);
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  uint64_t v9 = sub_140730();
  v3[49] = v9;
  v3[50] = *(void *)(v9 - 8);
  v3[51] = swift_task_alloc();
  uint64_t v10 = sub_13ECE0();
  v3[52] = v10;
  v3[53] = *(void *)(v10 - 8);
  v3[54] = swift_task_alloc();
  return _swift_task_switch(sub_A8E58, 0, 0);
}

uint64_t sub_A8E58()
{
  if (qword_17B248 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[33], (uint64_t)qword_17E4D8);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "DeleteTimer.NeedsConfirmationStrategy.makePromptForConfirmation() called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[21];

  sub_5B50(v5, (uint64_t)(v0 + 12));
  sub_140EA0();
  if (!swift_dynamicCast())
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v29 = 1;
    swift_willThrow();
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
  uint64_t v7 = v0[50];
  uint64_t v6 = v0[51];
  uint64_t v8 = v0[49];
  uint64_t v9 = (void *)v0[19];
  v0[55] = v9;
  sub_13EC60();
  sub_140720();
  BOOL v10 = sub_1406E0();
  char v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v6, v8);
  if (v10)
  {
    id v12 = [v9 shouldMatchAny];
    sub_2FF44();
    v13.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v13.super.super.isa;
    if (v12)
    {
      id v15 = v12;
      char v16 = sub_141590();

      if (v16)
      {
        sub_5830(&qword_17E550);
        os_log_type_t v17 = (void *)sub_13F1F0();
        id v18 = [v17 targetingInfo];

        if (!v18)
        {
          uint64_t v20 = v0[37];
          uint64_t v19 = v0[38];
          uint64_t v22 = v0[35];
          uint64_t v21 = v0[36];
          uint64_t v23 = v0[33];
          uint64_t v24 = v0[34];
          sub_1187C4(10, v0[48]);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v19, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v21);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v1, v23);
          mach_absolute_time();
          sub_1406B0();
          type metadata accessor for DeleteTimerCATsSimple();
          sub_140580();
          v0[56] = sub_140530();
          id v105 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
               + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
          os_log_type_t v25 = (void *)swift_task_alloc();
          v0[57] = v25;
          *os_log_type_t v25 = v0;
          v25[1] = sub_A9CA8;
          unint64_t v26 = 0x80000000001495E0;
          uint64_t v27 = _swiftEmptyArrayStorage;
          unint64_t v28 = 0xD000000000000021;
LABEL_18:
          return ((uint64_t (*)(unint64_t, unint64_t, void *))v105)(v28, v26, v27);
        }
      }
    }
    else
    {
    }
    id v32 = [v9 device];

    if (v32)
    {
      uint64_t v34 = v0[37];
      uint64_t v33 = v0[38];
      uint64_t v36 = v0[35];
      uint64_t v35 = v0[36];
      uint64_t v38 = v0[33];
      uint64_t v37 = v0[34];
      sub_11838C(10);
      (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v33, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v35);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v1, v38);
      mach_absolute_time();
      sub_1406B0();
      type metadata accessor for TimerBaseCATsSimple();
      sub_140580();
      v0[61] = sub_140530();
      uint64_t v39 = sub_174C0(0, 0);
      v0[62] = v39;
      sub_5830(&qword_17F3D0);
      uint64_t v40 = swift_allocObject();
      v0[63] = v40;
      *(_OWORD *)(v40 + 16) = xmmword_142D50;
      *(void *)(v40 + 32) = 0x72656D6974;
      *(void *)(v40 + 40) = 0xE500000000000000;
      *(void *)(v40 + 72) = type metadata accessor for TimerTimer(0);
      *(void *)(v40 + 48) = v39;
      id v105 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_retain();
      id v41 = (void *)swift_task_alloc();
      v0[64] = v41;
      *id v41 = v0;
      v41[1] = sub_AA2E0;
      unint64_t v26 = 0x80000000001495B0;
      unint64_t v28 = 0xD000000000000023;
      uint64_t v27 = (void *)v40;
      goto LABEL_18;
    }
  }
  uint64_t v42 = v0[51];
  uint64_t v43 = v0[49];
  sub_11838C(10);
  sub_140720();
  BOOL v44 = sub_140710();
  v11(v42, v43);
  if (!v44)
  {
    sub_5830(&qword_17E550);
    unint64_t v75 = (void *)sub_13F1F0();
    id v76 = [v75 targetTimer];

    id v77 = [v76 shouldMatchAny];
    sub_2FF44();
    v78.super.super.Class isa = sub_141580(1).super.super.isa;
    Class v79 = v78.super.super.isa;
    if (v77)
    {
      id v80 = v77;
      char v81 = sub_141590();

      if (v81)
      {
        if (qword_17B3E8 != -1) {
          swift_once();
        }
        id v107 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
             + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
        uint64_t v82 = (void *)swift_task_alloc();
        v0[78] = v82;
        void *v82 = v0;
        v82[1] = sub_AB3B8;
        uint64_t v83 = v0[27];
        unint64_t v84 = 0xD000000000000024;
        unint64_t v85 = 0x8000000000149560;
        uint64_t v86 = _swiftEmptyArrayStorage;
LABEL_38:
        return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v107)(v83, v84, v85, v86);
      }
    }
    else
    {
    }
    if (qword_17B3E8 != -1) {
      swift_once();
    }
    uint64_t v87 = sub_174C0(0, 0);
    v0[80] = v87;
    sub_5830(&qword_17F3D0);
    uint64_t v88 = swift_allocObject();
    v0[81] = v88;
    *(_OWORD *)(v88 + 16) = xmmword_142D50;
    strcpy((char *)(v88 + 32), "speakableTimer");
    *(unsigned char *)(v88 + 47) = -18;
    *(void *)(v88 + 72) = type metadata accessor for TimerTimer(0);
    *(void *)(v88 + 48) = v87;
    id v107 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
         + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
    swift_retain();
    long long v89 = (void *)swift_task_alloc();
    v0[82] = v89;
    *long long v89 = v0;
    v89[1] = sub_AB720;
    uint64_t v83 = v0[26];
    unint64_t v84 = 0xD00000000000001ELL;
    unint64_t v85 = 0x8000000000149540;
    uint64_t v86 = (void *)v88;
    goto LABEL_38;
  }
  uint64_t v45 = (void *)sub_13F050();

  uint64_t v47 = sub_1415A0();
  uint64_t v49 = v48;

  v0[68] = v49;
  if (!v49)
  {
LABEL_42:
    unint64_t v90 = sub_141160();
    os_log_type_t v91 = sub_141470();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v92 = 0;
      _os_log_impl(&dword_0, v90, v91, "Could not create direct invocation for confirm or reject actions.", v92, 2u);
      swift_slowDealloc();
    }
    uint64_t v93 = v0[53];
    uint64_t v94 = v0[54];
    uint64_t v95 = v0[52];
    uint64_t v97 = v0[45];
    uint64_t v96 = v0[46];
    uint64_t v98 = v0[44];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v99 = 0;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v98);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v95);
    goto LABEL_12;
  }
  uint64_t v50 = (void *)sub_13F050();
  uint64_t v52 = v51;

  uint64_t v53 = sub_1415A0();
  uint64_t v55 = v54;

  v0[69] = v55;
  if (!v55)
  {
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v103 = v53;
  uint64_t v104 = v47;
  long long v106 = v9;
  uint64_t v56 = v0[35];
  uint64_t v58 = v0[33];
  uint64_t v57 = v0[34];
  (*(void (**)(void, void, void))(v0[37] + 104))(v0[38], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[36]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v56, v1, v58);
  mach_absolute_time();
  sub_1406B0();
  sub_5830(&qword_17E550);
  uint64_t v59 = (void *)sub_13F1F0();
  id v60 = [v59 targetTimer];

  id v61 = [v60 shouldMatchAny];
  sub_2FF44();
  v62.super.super.Class isa = sub_141580(1).super.super.isa;
  Class v63 = v62.super.super.isa;
  if (v61)
  {
    id v64 = v61;
    char v65 = sub_141590();

    uint64_t v66 = v106;
    if (v65)
    {
      if (qword_17B3F0 != -1) {
        swift_once();
      }
      uint64_t v68 = v0[30];
      uint64_t v67 = v0[31];
      uint64_t v69 = v0[29];
      uint64_t v70 = sub_140500();
      id v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
      v71(v67, 1, 1, v70);
      uint64_t v72 = v67 + *(int *)(v68 + 20);
      v71(v72, 1, 1, v70);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v71(v69, 0, 1, v70);
      sub_2D248(v69, v67);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v71(v69, 0, 1, v70);
      sub_2D248(v69, v72);
      uint64_t v73 = sub_A6920();
      v0[70] = v73;
      id v105 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      id v74 = (void *)swift_task_alloc();
      v0[71] = v74;
      *id v74 = v0;
      v74[1] = sub_AA940;
      unint64_t v26 = 0x8000000000149590;
      unint64_t v28 = 0xD000000000000018;
      uint64_t v27 = (void *)v73;
      goto LABEL_18;
    }
  }
  else
  {

    uint64_t v66 = v106;
  }
  if (qword_17B3F0 != -1) {
    swift_once();
  }
  uint64_t v100 = qword_1812C8;
  uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_17E358
                                                                                      + dword_17E358);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v101 = v66;
  uint64_t v102 = (void *)swift_task_alloc();
  v0[73] = v102;
  void *v102 = v0;
  v102[1] = sub_AAD28;
  return v108(v100, (uint64_t)v101, v103, v55, v104, v49);
}

uint64_t sub_A9CA8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 464) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_AA11C, 0, 0);
  }
  else
  {
    swift_release();
    v4[59] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[60] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_A9E58;
    uint64_t v7 = v4[54];
    uint64_t v8 = v4[48];
    uint64_t v9 = v4[43];
    uint64_t v10 = v4[20];
    return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v10, v7, v8, v9, 0, 0, 0, 0);
  }
}

uint64_t sub_A9E58()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 472);
  swift_task_dealloc();

  return _swift_task_switch(sub_A9F6C, 0, 0);
}

uint64_t sub_A9F6C()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v6 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 320);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_AA11C()
{
  uint64_t v1 = (void *)v0[55];
  uint64_t v2 = v0[53];
  uint64_t v12 = v0[54];
  uint64_t v3 = v0[52];
  uint64_t v4 = v0[48];
  uint64_t v5 = v0[44];
  uint64_t v6 = v0[45];
  uint64_t v7 = v0[43];
  uint64_t v9 = v0[39];
  uint64_t v8 = v0[40];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_AA2E0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 520) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_AA768, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v4[66] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[67] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_AA4A4;
    uint64_t v7 = v4[54];
    uint64_t v8 = v4[47];
    uint64_t v9 = v4[42];
    uint64_t v10 = v4[20];
    return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v10, v7, v8, v9, 0, 0, 0, 0);
  }
}

uint64_t sub_AA4A4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 528);
  swift_task_dealloc();

  return _swift_task_switch(sub_AA5B8, 0, 0);
}

uint64_t sub_AA5B8()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v6 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 320);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_AA768()
{
  uint64_t v1 = (void *)v0[55];
  uint64_t v2 = v0[53];
  uint64_t v11 = v0[52];
  uint64_t v12 = v0[54];
  uint64_t v10 = v0[47];
  uint64_t v4 = v0[44];
  uint64_t v3 = v0[45];
  uint64_t v5 = v0[42];
  uint64_t v7 = v0[39];
  uint64_t v6 = v0[40];
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_AA940(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[16] = v2;
  v3[17] = a1;
  v3[18] = v1;
  v3[72] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_AAB4C;
  }
  else {
    uint64_t v4 = sub_AAA7C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_AAA7C()
{
  sub_ACC84(v0[31]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[75] = v0[17];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[76] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_AB0E8;
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[46];
  uint64_t v4 = v0[41];
  uint64_t v5 = v0[20];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_AAB4C()
{
  uint64_t v1 = (void *)v0[55];
  uint64_t v2 = v0[53];
  uint64_t v11 = v0[52];
  uint64_t v12 = v0[54];
  uint64_t v3 = v0[45];
  uint64_t v10 = v0[46];
  uint64_t v4 = v0[44];
  uint64_t v5 = v0[40];
  uint64_t v6 = v0[41];
  uint64_t v7 = v0[39];
  sub_ACC84(v0[31]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_AAD28(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(v4 + 592) = v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (v1)
  {
    return _swift_task_switch(sub_AAF30, 0, 0);
  }
  else
  {
    *(void *)(v4 + 600) = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v4 + 608) = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_AB0E8;
    uint64_t v7 = *(void *)(v4 + 432);
    uint64_t v8 = *(void *)(v4 + 368);
    uint64_t v9 = *(void *)(v4 + 328);
    uint64_t v10 = *(void *)(v4 + 160);
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_AAF30()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v9 = *(void *)(v0 + 312);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_AB0E8()
{
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_AC094;
  }
  else {
    uint64_t v2 = sub_AB1FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_AB1FC()
{
  uint64_t v1 = *(void **)(v0 + 600);
  uint64_t v12 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 320);
  uint64_t v8 = *(void *)(v0 + 328);
  uint64_t v9 = *(void *)(v0 + 312);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_AB3B8()
{
  *(void *)(*(void *)v1 + 632) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_AB588;
  }
  else {
    uint64_t v2 = sub_AB4CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_AB4CC()
{
  (*(void (**)(void, void, void))(v0[25] + 32))(v0[28], v0[27], v0[24]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[84] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_ABAB4;
  return v3(2);
}

uint64_t sub_AB588()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 352);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_AB720()
{
  *(void *)(*(void *)v1 + 664) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_AB908;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_AB848;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_AB848()
{
  (*(void (**)(void, void, void))(v0[25] + 32))(v0[28], v0[26], v0[24]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[84] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_ABAB4;
  return v3(2);
}

uint64_t sub_AB908()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = (void *)v0[55];
  uint64_t v3 = v0[52];
  uint64_t v4 = v0[53];
  uint64_t v6 = v0[45];
  uint64_t v5 = v0[46];
  uint64_t v7 = v0[44];
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_ABAB4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 680) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_ABEDC;
  }
  else
  {
    *(void *)(v4 + 688) = a1;
    uint64_t v5 = sub_ABBDC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_ABBDC()
{
  uint64_t v10 = *(void **)(v0 + 440);
  uint64_t v14 = *(void *)(v0 + 416);
  uint64_t v15 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v11 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 192);
  uint64_t v13 = *(void *)(v0 + 424);
  uint64_t v5 = *(uint64_t **)(v0 + 160);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_13EBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  uint64_t v6 = sub_13F420();
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  v5[3] = v6;
  v5[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_187EC(v5);
  sub_13EE90();

  swift_bridgeObjectRelease();
  sub_904C(v0 + 56, &qword_17BE88);
  sub_904C(v4, &qword_17BE70);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v12);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_ABEDC()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 224);
  uint64_t v8 = *(void *)(v0 + 192);
  uint64_t v9 = *(void *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_AC094()
{
  uint64_t v1 = *(void **)(v0 + 600);
  uint64_t v12 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 320);
  uint64_t v8 = *(void *)(v0 + 328);
  uint64_t v9 = *(void *)(v0 + 312);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_AC25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1D95C;
  return sub_A8204(a1, a2, a3);
}

uint64_t sub_AC30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_15180;
  return NeedsConfirmationFlowStrategyAsync.shouldRequestUnlockForConfirmation(itemToConfirm:resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_AC3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  void *v7 = v3;
  v7[1] = sub_AC47C;
  return sub_A8A5C(a1, a2, a3);
}

uint64_t sub_AC47C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_AC5B0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_AC5B0()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_AC670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:resolveRecord:)(a1, a2, a3, a4, a5);
}

uint64_t sub_AC73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:resolveRecord:)(a1, a2, a3, a4, a5);
}

uint64_t sub_AC808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_AC8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D95C;
  return NeedsConfirmationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_AC990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_159A4;
  return NeedsConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse(app:intent:parameter:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_ACA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_1D95C;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_ACB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1D95C;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, a6, a7);
}

unint64_t sub_ACC30()
{
  unint64_t result = qword_17E500[0];
  if (!qword_17E500[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17E500);
  }
  return result;
}

uint64_t sub_ACC84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeleteTimerConfirmMultiParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SearchForTimersCATs_Async()
{
  uint64_t result = qword_17E560;
  if (!qword_17E560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_ACD2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_ACD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_ACEF0()
{
  return type metadata accessor for SearchForTimersCATs_Async();
}

uint64_t sub_ACEF8()
{
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_label);
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_type);
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_state);
  swift_release();
  swift_release();
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_action);
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_roomName);
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_deviceName);
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_targetDeviceType);
  sub_AE1A4(v0 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_timerIDString);
  return v0;
}

unint64_t sub_ACFB0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6574617473;
      break;
    case 3:
      unint64_t result = 0x6E696E69616D6572;
      break;
    case 4:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 5:
      unint64_t result = 0x6E6F69746361;
      break;
    case 6:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 7:
      unint64_t result = 0x614E656369766564;
      break;
    case 8:
      return result;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0xD000000000000019;
      break;
    case 13:
      unint64_t result = 0x53444972656D6974;
      break;
    default:
      unint64_t result = 0x6C6562616CLL;
      break;
  }
  return result;
}

uint64_t sub_AD188(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_ACFB0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_ACFB0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_141AA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_AD214()
{
  char v1 = *v0;
  sub_141B50();
  sub_ACFB0(v1);
  sub_1412A0();
  swift_bridgeObjectRelease();
  return sub_141B70();
}

uint64_t sub_AD278()
{
  sub_ACFB0(*v0);
  sub_1412A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_AD2CC()
{
  char v1 = *v0;
  sub_141B50();
  sub_ACFB0(v1);
  sub_1412A0();
  swift_bridgeObjectRelease();
  return sub_141B70();
}

uint64_t sub_AD32C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_AE2B0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_AD35C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_ACFB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_AD388@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AE2B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_AD3B0(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_AD3BC(uint64_t a1)
{
  unint64_t v2 = sub_1AA4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AD3F8(uint64_t a1)
{
  unint64_t v2 = sub_1AA4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_AD434(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_AD490()
{
  return type metadata accessor for TimerTimer(0);
}

void sub_AD498()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_AD554()
{
  return type metadata accessor for TimerTimer.Builder(0);
}

void sub_AD55C()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_AD614(uint64_t a1)
{
  uint64_t v3 = sub_5830(&qword_17BE78);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v45 = (uint64_t)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  id v46 = (char *)v42 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v42 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v42 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v42 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v42 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v42 - v21;
  __chkstk_darwin(v20);
  uint64_t v47 = (char *)v42 - v23;
  uint64_t v24 = sub_5830(&qword_17EA58);
  uint64_t v48 = *(void *)(v24 - 8);
  uint64_t v49 = v24;
  __chkstk_darwin(v24);
  uint64_t v52 = v1;
  *(void *)(v1 + 16) = 0;
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v50 = a1;
  uint64_t v27 = (void *)a1;
  unint64_t v28 = (char *)v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_90A8(v27, v26);
  sub_1AA4C();
  uint64_t v29 = v51;
  sub_141B80();
  if (v29)
  {
    uint64_t v30 = v52;

    uint64_t v35 = v50;
    type metadata accessor for TimerTimer(0);
    swift_deallocPartialClassInstance();
    _s20HandleIntentStrategyVwxx_1(v35);
  }
  else
  {
    uint64_t v31 = (uint64_t)v19;
    unint64_t v51 = v16;
    uint64_t v43 = v10;
    BOOL v44 = v13;
    uint64_t v32 = sub_140500();
    LOBYTE(v54) = 0;
    uint64_t v33 = sub_1AAF4(&qword_17EA68, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    uint64_t v34 = (uint64_t)v47;
    sub_1418A0();
    uint64_t v37 = v52;
    sub_18554(v34, v52 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_label);
    LOBYTE(v54) = 1;
    sub_1418A0();
    sub_18554((uint64_t)v22, v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_type);
    LOBYTE(v54) = 2;
    uint64_t v47 = 0;
    sub_1418A0();
    v42[1] = v33;
    v42[2] = v32;
    sub_18554(v31, v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_state);
    sub_140430();
    char v53 = 3;
    sub_1AAF4(&qword_17EA70, (void (*)(uint64_t))&type metadata accessor for DialogDuration);
    sub_1418A0();
    *(void *)(v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_remainingTime) = v54;
    char v53 = 4;
    sub_1418A0();
    *(void *)(v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration) = v54;
    LOBYTE(v54) = 5;
    uint64_t v38 = (uint64_t)v51;
    sub_1418A0();
    sub_18554(v38, v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_action);
    LOBYTE(v54) = 6;
    uint64_t v39 = (uint64_t)v44;
    sub_1418A0();
    sub_18554(v39, v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_roomName);
    LOBYTE(v54) = 7;
    uint64_t v40 = (uint64_t)v43;
    sub_1418A0();
    sub_18554(v40, v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_deviceName);
    LOBYTE(v54) = 8;
    uint64_t v41 = (uint64_t)v46;
    sub_1418A0();
    sub_18554(v41, v37 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_targetDeviceType);
    LOBYTE(v54) = 9;
    *(unsigned char *)(v52 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isInRespondingRoom) = sub_1418B0() & 1;
    LOBYTE(v54) = 10;
    *(unsigned char *)(v52 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isLabelUniqueAcrossGroup) = sub_1418B0() & 1;
    LOBYTE(v54) = 11;
    *(unsigned char *)(v52 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isLabelUniqueInRoom) = sub_1418B0() & 1;
    LOBYTE(v54) = 12;
    *(unsigned char *)(v52 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_isOnlyMatchingTimerInRoom) = sub_1418B0() & 1;
    LOBYTE(v54) = 13;
    sub_1418A0();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v49);
    uint64_t v30 = v52;
    sub_18554(v45, v52 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_timerIDString);
    _s20HandleIntentStrategyVwxx_1(v50);
  }
  return v30;
}

uint64_t sub_AE098@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for TimerTimer(0);
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_AD614(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_AE0F4()
{
  return sub_1AAF4(&qword_17EA48, (void (*)(uint64_t))type metadata accessor for TimerTimer);
}

uint64_t sub_AE13C()
{
  return sub_1AAF4(&qword_17EA50, (void (*)(uint64_t))type metadata accessor for TimerTimer);
}

uint64_t sub_AE184()
{
  return 0x69542E72656D6974;
}

uint64_t sub_AE1A4(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17BE78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_AE204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TimerTimer.CodingKeys()
{
  return &type metadata for TimerTimer.CodingKeys;
}

uint64_t sub_AE2B0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1741A8;
  v6._object = a2;
  unint64_t v4 = sub_141820(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

ValueMetadata *_s25NeedsConfirmationStrategyVMa_0()
{
  return &_s25NeedsConfirmationStrategyVN_0;
}

uint64_t sub_AE30C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17EAA8);
  sub_33D8(v0, (uint64_t)qword_17EAA8);
  return sub_140E60();
}

uint64_t sub_AE358()
{
  uint64_t v0 = sub_140730();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::OpaquePointer v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140720();
  BOOL v4 = sub_1406E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    sub_5830(&qword_17EB20);
    uint64_t v5 = (void *)sub_13F1F0();
    id v6 = [v5 targetTimer];

    id v7 = [v6 shouldMatchAny];
    sub_2FF44();
    v8.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v8.super.super.isa;
    if (v7)
    {
      id v10 = v7;
      char v11 = sub_141590();

      if (v11)
      {
        uint64_t v12 = (void *)sub_13F1F0();
        id v13 = [v12 targetingInfo];

        if (!v13)
        {
          if (qword_17B250 != -1) {
            swift_once();
          }
          uint64_t v14 = sub_141170();
          sub_33D8(v14, (uint64_t)qword_17EAA8);
          uint64_t v15 = sub_141160();
          os_log_type_t v16 = sub_141480();
          if (!os_log_type_enabled(v15, v16))
          {
            uint64_t v18 = 1;
            goto LABEL_16;
          }
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v17 = 0;
          _os_log_impl(&dword_0, v15, v16, "ResolveRecord indicates we are searching for a room confirmation", v17, 2u);
          uint64_t v18 = 1;
          goto LABEL_14;
        }
      }
    }
    else
    {
    }
  }
  if (qword_17B250 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_17EAA8);
  uint64_t v15 = sub_141160();
  os_log_type_t v20 = sub_141480();
  if (!os_log_type_enabled(v15, v20))
  {
    uint64_t v18 = 0;
    goto LABEL_16;
  }
  uint64_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v21 = 0;
  _os_log_impl(&dword_0, v15, v20, "ResolveRecord not searching for room confirmation", v21, 2u);
  uint64_t v18 = 0;
LABEL_14:
  swift_slowDealloc();
LABEL_16:

  return v18;
}

uint64_t sub_AE674@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B250 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17EAA8);
  char v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "ResumeTimer.NeedsConfirmationStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  char v15 = sub_AE358();
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.roomConfirmation(_:);
  if ((v15 & 1) == 0) {
    uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.confirmation(_:);
  }
  (*(void (**)(char *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v6, *v18, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_61E24(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_AE920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  sub_5830(&qword_17F3E0);
  v4[11] = swift_task_alloc();
  uint64_t v5 = sub_13EDF0();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_AEA24, 0, 0);
}

uint64_t sub_AEA24()
{
  if (qword_17B250 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17EAA8);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "ResumeTimer.NeedsConfirmationStrategy.parseConfirmationResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17EB20);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];
  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (swift_dynamicCast())
  {
    id v7 = *(id *)(v0 + 48);
    id v8 = [v7 shouldMatchAny];
    id v9 = [objc_allocWithZone((Class)sub_140D00()) init];
    [v7 setShouldMatchAny:v8];
    id v10 = v7;
    [v9 setTargetTimer:v10];

    if (sub_AE358())
    {
      sub_B6610(*(void *)(v0 + 64), 1, *(void *)(v0 + 120));
      switch(sub_BBA44())
      {
        case 1u:
          uint64_t v19 = sub_141160();
          os_log_type_t v20 = sub_141480();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v21 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v21 = 0;
            _os_log_impl(&dword_0, v19, v20, "Received explicit 'here' confirmation – only local timers for pauseMultiple", v21, 2u);
            swift_slowDealloc();
          }

          id v22 = [v9 targetTimer];
          if (v22) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 3u:
          uint64_t v23 = *(void *)(v0 + 112);
          uint64_t v24 = *(void *)(v0 + 96);
          uint64_t v25 = *(void *)(v0 + 104);
          sub_13EDD0();
          char v45 = sub_13EDB0();
          BOOL v44 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
          v44(v23, v24);
          uint64_t v26 = sub_141160();
          os_log_type_t v27 = sub_141480();
          BOOL v28 = os_log_type_enabled(v26, v27);
          if ((v45 & 1) == 0)
          {
            if (v28)
            {
              uint64_t v37 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v37 = 0;
              _os_log_impl(&dword_0, v26, v27, "Defaulting confirmation to reject for no/cancel", v37, 2u);
              swift_slowDealloc();
            }
            uint64_t v46 = *(void *)(v0 + 120);
            uint64_t v38 = *(void *)(v0 + 88);
            uint64_t v43 = *(void *)(v0 + 96);

            uint64_t v39 = enum case for ConfirmationResponse.rejected(_:);
            uint64_t v40 = sub_13F0C0();
            uint64_t v41 = *(void *)(v40 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 104))(v38, v39, v40);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
            id v42 = v9;
            sub_141560();

            sub_13F190();
            v44(v46, v43);
            goto LABEL_25;
          }
          if (v28)
          {
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl(&dword_0, v26, v27, "Confirming use only local timers for pauseMultiple", v29, 2u);
            swift_slowDealloc();
          }

          id v22 = [v9 targetTimer];
          if (v22)
          {
LABEL_21:
            char v15 = v22;
            Swift::Bool v16 = 0;
LABEL_22:
            sub_2FF44();
            Class isa = sub_141570(v16).super.super.isa;
            [v15 setShouldMatchRemote:isa];
          }
LABEL_23:
          (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 96));
          break;
        default:
          char v11 = sub_141160();
          os_log_type_t v12 = sub_141480();
          if (os_log_type_enabled(v11, v12))
          {
            id v13 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v13 = 0;
            _os_log_impl(&dword_0, v11, v12, "Received explicit 'everywhere' confirmation to include remote timers for pauseMultiple", v13, 2u);
            swift_slowDealloc();
          }

          id v14 = [v9 targetTimer];
          if (!v14) {
            goto LABEL_23;
          }
          char v15 = v14;
          Swift::Bool v16 = 1;
          goto LABEL_22;
      }
    }
    uint64_t v31 = *(void *)(v0 + 88);
    uint64_t v32 = enum case for ConfirmationResponse.confirmed(_:);
    uint64_t v33 = sub_13F0C0();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 104))(v31, v32, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    id v35 = v9;
    sub_141560();

    sub_13F190();
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
    swift_allocError();
    *uint64_t v17 = 3;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_AF1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[25] = a1;
  v3[26] = a3;
  sub_5830(&qword_17BE70);
  v3[27] = swift_task_alloc();
  uint64_t v4 = sub_13F040();
  v3[28] = v4;
  v3[29] = *(void *)(v4 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v3[33] = swift_task_alloc();
  v3[34] = type metadata accessor for ResumeTimerPromptAllParameters(0);
  v3[35] = swift_task_alloc();
  sub_140590();
  v3[36] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[37] = v5;
  v3[38] = *(void *)(v5 - 8);
  v3[39] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  unsigned char v3[40] = v6;
  v3[41] = *(void *)(v6 - 8);
  v3[42] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v3[43] = v7;
  v3[44] = *(void *)(v7 - 8);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v3[48] = v8;
  v3[49] = *(void *)(v8 - 8);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  uint64_t v9 = sub_140730();
  v3[53] = v9;
  v3[54] = *(void *)(v9 - 8);
  v3[55] = swift_task_alloc();
  uint64_t v10 = sub_13ECE0();
  v3[56] = v10;
  v3[57] = *(void *)(v10 - 8);
  v3[58] = swift_task_alloc();
  return _swift_task_switch(sub_AF5B4, 0, 0);
}

uint64_t sub_AF5B4()
{
  if (qword_17B250 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[37], (uint64_t)qword_17EAA8);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "ResumeTimer.NeedsConfirmationStrategy.makePromptForConfirmation() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17EB20);
  uint64_t v5 = (void *)sub_13F200();
  v0[59] = v5;
  uint64_t v6 = (void *)sub_13F1F0();
  v0[60] = v6;
  id v7 = [v5 itemToConfirm];
  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (!swift_dynamicCast())
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
    swift_allocError();
    *uint64_t v30 = 3;
    swift_willThrow();

LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
  uint64_t v9 = v0[54];
  uint64_t v8 = v0[55];
  uint64_t v10 = v0[53];
  char v11 = (void *)v0[24];
  v0[61] = v11;
  sub_13EC60();
  sub_140720();
  BOOL v12 = sub_1406E0();
  id v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v13(v8, v10);
  if (v12)
  {
    id v14 = [v11 shouldMatchAny];
    sub_2FF44();
    v15.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v15.super.super.isa;
    if (v14)
    {
      id v17 = v14;
      char v18 = sub_141590();

      if (v18)
      {
        id v19 = [v6 targetingInfo];

        if (!v19)
        {
          uint64_t v21 = v0[41];
          uint64_t v20 = v0[42];
          uint64_t v23 = v0[39];
          uint64_t v22 = v0[40];
          uint64_t v24 = v0[37];
          uint64_t v25 = v0[38];
          sub_1187C4(8, v0[52]);
          (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v22);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v1, v24);
          mach_absolute_time();
          sub_1406B0();
          type metadata accessor for ResumeTimerCATsSimple();
          sub_140580();
          v0[62] = sub_140530();
          uint64_t v103 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
               + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
          uint64_t v26 = (void *)swift_task_alloc();
          v0[63] = v26;
          *uint64_t v26 = v0;
          v26[1] = sub_B0424;
          unint64_t v27 = 0x8000000000149860;
          BOOL v28 = _swiftEmptyArrayStorage;
          unint64_t v29 = 0xD000000000000021;
LABEL_18:
          return ((uint64_t (*)(unint64_t, unint64_t, void *))v103)(v29, v27, v28);
        }
      }
    }
    else
    {
    }
    id v33 = [v11 device];

    if (v33)
    {
      uint64_t v35 = v0[41];
      uint64_t v34 = v0[42];
      uint64_t v37 = v0[39];
      uint64_t v36 = v0[40];
      uint64_t v39 = v0[37];
      uint64_t v38 = v0[38];
      sub_11838C(8);
      (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v34, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v36);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v37, v1, v39);
      mach_absolute_time();
      sub_1406B0();
      type metadata accessor for TimerBaseCATsSimple();
      sub_140580();
      v0[67] = sub_140530();
      uint64_t v40 = sub_174C0(0, 0);
      v0[68] = v40;
      sub_5830(&qword_17F3D0);
      uint64_t v41 = swift_allocObject();
      v0[69] = v41;
      *(_OWORD *)(v41 + 16) = xmmword_142D50;
      *(void *)(v41 + 32) = 0x72656D6974;
      *(void *)(v41 + 40) = 0xE500000000000000;
      *(void *)(v41 + 72) = type metadata accessor for TimerTimer(0);
      *(void *)(v41 + 48) = v40;
      uint64_t v103 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_retain();
      id v42 = (void *)swift_task_alloc();
      v0[70] = v42;
      *id v42 = v0;
      v42[1] = sub_B0A74;
      unint64_t v27 = 0x80000000001495B0;
      unint64_t v29 = 0xD000000000000023;
      BOOL v28 = (void *)v41;
      goto LABEL_18;
    }
  }
  uint64_t v43 = v0[55];
  uint64_t v44 = v0[53];
  sub_11838C(8);
  sub_140720();
  BOOL v45 = sub_140710();
  v13(v43, v44);
  if (!v45)
  {
    id v76 = [v11 shouldMatchAny];
    sub_2FF44();
    v77.super.super.Class isa = sub_141580(1).super.super.isa;
    Class v78 = v77.super.super.isa;
    if (v76)
    {
      id v79 = v76;
      char v80 = sub_141590();

      if (v80)
      {
        if (qword_17B408 != -1) {
          swift_once();
        }
        id v105 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
             + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
        char v81 = (void *)swift_task_alloc();
        v0[84] = v81;
        *char v81 = v0;
        v81[1] = sub_B1BA0;
        uint64_t v82 = v0[31];
        unint64_t v83 = 0xD000000000000024;
        unint64_t v84 = 0x8000000000149810;
        unint64_t v85 = _swiftEmptyArrayStorage;
LABEL_38:
        return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v105)(v82, v83, v84, v85);
      }
    }
    else
    {
    }
    if (qword_17B408 != -1) {
      swift_once();
    }
    uint64_t v86 = sub_174C0(0, 0);
    v0[86] = v86;
    sub_5830(&qword_17F3D0);
    uint64_t v87 = swift_allocObject();
    v0[87] = v87;
    *(_OWORD *)(v87 + 16) = xmmword_142D50;
    strcpy((char *)(v87 + 32), "speakableTimer");
    *(unsigned char *)(v87 + 47) = -18;
    *(void *)(v87 + 72) = type metadata accessor for TimerTimer(0);
    *(void *)(v87 + 48) = v86;
    id v105 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
         + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
    swift_retain();
    uint64_t v88 = (void *)swift_task_alloc();
    v0[88] = v88;
    *uint64_t v88 = v0;
    v88[1] = sub_B2044;
    uint64_t v82 = v0[30];
    unint64_t v83 = 0xD00000000000001ELL;
    unint64_t v84 = 0x80000000001497F0;
    unint64_t v85 = (void *)v87;
    goto LABEL_38;
  }
  uint64_t v46 = (void *)sub_13F050();

  uint64_t v48 = sub_1415A0();
  uint64_t v50 = v49;

  v0[74] = v50;
  if (!v50)
  {
LABEL_42:
    long long v89 = sub_141160();
    os_log_type_t v90 = sub_141470();
    if (os_log_type_enabled(v89, v90))
    {
      os_log_type_t v91 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v91 = 0;
      _os_log_impl(&dword_0, v89, v90, "Could not create direct invocation for confirm or reject actions.", v91, 2u);
      swift_slowDealloc();
    }
    uint64_t v92 = v0[57];
    uint64_t v101 = v0[56];
    uint64_t v106 = v0[58];
    uint64_t v93 = v0[49];
    uint64_t v94 = v0[50];
    uint64_t v95 = v0[48];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
    swift_allocError();
    *uint64_t v96 = 0;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v95);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v106, v101);
    goto LABEL_12;
  }
  unint64_t v51 = (void *)sub_13F050();
  char v53 = v52;

  uint64_t v54 = sub_1415A0();
  uint64_t v56 = v55;

  v0[75] = v56;
  if (!v56)
  {
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v100 = v48;
  uint64_t v104 = v54;
  uint64_t v57 = v0[39];
  uint64_t v58 = v11;
  uint64_t v60 = v0[37];
  uint64_t v59 = v0[38];
  (*(void (**)(void, void, void))(v0[41] + 104))(v0[42], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[40]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v1, v60);
  id v61 = v58;
  mach_absolute_time();
  sub_1406B0();
  id v62 = [v58 shouldMatchAny];
  sub_2FF44();
  v63.super.super.Class isa = sub_141580(1).super.super.isa;
  Class v64 = v63.super.super.isa;
  if (v62)
  {
    id v65 = v62;
    char v66 = sub_141590();

    uint64_t v67 = v100;
    if (v66)
    {
      if (qword_17B410 != -1) {
        swift_once();
      }
      uint64_t v69 = v0[34];
      uint64_t v68 = v0[35];
      uint64_t v70 = v0[33];
      uint64_t v71 = sub_140500();
      uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
      v72(v68, 1, 1, v71);
      uint64_t v73 = v68 + *(int *)(v69 + 20);
      v72(v73, 1, 1, v71);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v72(v70, 0, 1, v71);
      sub_2D248(v70, v73);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v72(v70, 0, 1, v71);
      sub_2D248(v70, v68);
      uint64_t v74 = sub_C9E64();
      v0[76] = v74;
      uint64_t v103 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      unint64_t v75 = (void *)swift_task_alloc();
      v0[77] = v75;
      *unint64_t v75 = v0;
      v75[1] = sub_B10FC;
      unint64_t v27 = 0x8000000000149840;
      unint64_t v29 = 0xD000000000000015;
      BOOL v28 = (void *)v74;
      goto LABEL_18;
    }
  }
  else
  {

    uint64_t v67 = v100;
  }
  if (qword_17B410 != -1) {
    swift_once();
  }
  uint64_t v97 = qword_1812E0;
  uint64_t v102 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_17F180 + dword_17F180);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v98 = v61;
  uint64_t v99 = (void *)swift_task_alloc();
  v0[79] = v99;
  void *v99 = v0;
  v99[1] = sub_B14F8;
  return v102(v97, v98, v67, v50, v104, v56);
}

uint64_t sub_B0424(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 512) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_B08A4, 0, 0);
  }
  else
  {
    swift_release();
    v4[65] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[66] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_B05D4;
    uint64_t v7 = v4[58];
    uint64_t v8 = v4[52];
    uint64_t v9 = v4[47];
    uint64_t v10 = v4[25];
    return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v10, v7, v8, v9, 0, 0, 0, 0);
  }
}

uint64_t sub_B05D4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 520);
  swift_task_dealloc();

  return _swift_task_switch(sub_B06E8, 0, 0);
}

uint64_t sub_B06E8()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v12 = *(void *)(v0 + 448);
  uint64_t v13 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v9 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 352);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_B08A4()
{
  uint64_t v1 = (void *)v0[61];
  uint64_t v3 = (void *)v0[59];
  uint64_t v2 = (void *)v0[60];
  uint64_t v4 = v0[57];
  uint64_t v13 = v0[56];
  uint64_t v14 = v0[58];
  uint64_t v12 = v0[52];
  uint64_t v6 = v0[48];
  uint64_t v5 = v0[49];
  uint64_t v7 = v0[47];
  uint64_t v9 = v0[43];
  uint64_t v8 = v0[44];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_B0A74(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 568) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_B0F0C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v4[72] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[73] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_B0C3C;
    uint64_t v7 = v4[58];
    uint64_t v8 = v4[51];
    uint64_t v9 = v4[46];
    uint64_t v10 = v4[25];
    return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v10, v7, v8, v9, 0, 0, 0, 0);
  }
}

uint64_t sub_B0C3C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 576);
  swift_task_dealloc();

  return _swift_task_switch(sub_B0D50, 0, 0);
}

uint64_t sub_B0D50()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v12 = *(void *)(v0 + 448);
  uint64_t v13 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 368);
  uint64_t v9 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 352);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_B0F0C()
{
  uint64_t v1 = (void *)v0[60];
  uint64_t v2 = (void *)v0[61];
  uint64_t v3 = v0[57];
  uint64_t v13 = v0[56];
  uint64_t v14 = v0[58];
  uint64_t v12 = v0[51];
  uint64_t v4 = v0[49];
  uint64_t v10 = (void *)v0[59];
  uint64_t v11 = v0[48];
  uint64_t v5 = v0[46];
  uint64_t v7 = v0[43];
  uint64_t v6 = v0[44];
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_B10FC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[21] = v2;
  v3[22] = a1;
  v3[23] = v1;
  v3[78] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_B1308;
  }
  else {
    uint64_t v4 = sub_B1238;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_B1238()
{
  sub_B3290(v0[35]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[81] = v0[22];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[82] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_B18C4;
  uint64_t v2 = v0[58];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[25];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_B1308()
{
  uint64_t v1 = (void *)v0[60];
  uint64_t v2 = (void *)v0[61];
  uint64_t v3 = v0[57];
  uint64_t v13 = v0[56];
  uint64_t v14 = v0[58];
  uint64_t v4 = v0[49];
  uint64_t v12 = v0[50];
  uint64_t v10 = (void *)v0[59];
  uint64_t v11 = v0[48];
  uint64_t v5 = v0[44];
  uint64_t v6 = v0[45];
  uint64_t v7 = v0[43];
  sub_B3290(v0[35]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_B14F8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(v4 + 640) = v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (v1)
  {
    return _swift_task_switch(sub_B1700, 0, 0);
  }
  else
  {
    *(void *)(v4 + 648) = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v4 + 656) = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_B18C4;
    uint64_t v7 = *(void *)(v4 + 464);
    uint64_t v8 = *(void *)(v4 + 400);
    uint64_t v9 = *(void *)(v4 + 360);
    uint64_t v10 = *(void *)(v4 + 200);
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_B1700()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v12 = *(void *)(v0 + 448);
  uint64_t v13 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 344);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_B18C4()
{
  *(void *)(*(void *)v1 + 664) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_B2B1C;
  }
  else {
    uint64_t v2 = sub_B19D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_B19D8()
{
  uint64_t v1 = *(void **)(v0 + 648);
  uint64_t v2 = *(void **)(v0 + 480);
  uint64_t v3 = *(void **)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 456);
  uint64_t v13 = *(void *)(v0 + 448);
  uint64_t v14 = *(void *)(v0 + 464);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v12 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 344);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_B1BA0()
{
  *(void *)(*(void *)v1 + 680) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_B1D70;
  }
  else {
    uint64_t v2 = sub_B1CB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_B1CB4()
{
  (*(void (**)(void, void, void))(v0[29] + 32))(v0[32], v0[31], v0[28]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[90] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_B2514;
  return v3(8);
}

uint64_t sub_B1D70()
{
  uint64_t v2 = (void *)v0[60];
  uint64_t v1 = (void *)v0[61];
  uint64_t v3 = v0[57];
  uint64_t v14 = v0[56];
  uint64_t v15 = v0[58];
  uint64_t v4 = v0[49];
  uint64_t v13 = v0[50];
  uint64_t v11 = (void *)v0[59];
  uint64_t v12 = v0[48];
  uint64_t v5 = sub_140AB0();
  v0[5] = v5;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC(v0 + 2);
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_B2044()
{
  *(void *)(*(void *)v1 + 712) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_B222C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_B216C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_B216C()
{
  (*(void (**)(void, void, void))(v0[29] + 32))(v0[32], v0[30], v0[28]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[90] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_B2514;
  return v3(8);
}

uint64_t sub_B222C()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = (void *)v0[60];
  uint64_t v1 = (void *)v0[61];
  uint64_t v3 = v0[57];
  uint64_t v14 = v0[56];
  uint64_t v15 = v0[58];
  uint64_t v4 = v0[49];
  uint64_t v13 = v0[50];
  uint64_t v11 = (void *)v0[59];
  uint64_t v12 = v0[48];
  uint64_t v5 = sub_140AB0();
  v0[5] = v5;
  v0[6] = &protocol witness table for ABCReport;
  uint64_t v6 = sub_187EC(v0 + 2);
  *uint64_t v6 = sub_13E450();
  uint64_t v7 = enum case for DialogLayerErrorSubType.dialogError(_:);
  uint64_t v8 = sub_1409F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for ABCReport.dialog(_:), v5);
  sub_140820();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  sub_5830((uint64_t *)&unk_17DDB0);
  sub_B978((unint64_t *)&qword_17BE80, (uint64_t *)&unk_17DDB0);
  swift_allocError();
  swift_willThrow();

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_B2514(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 728) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_B2958;
  }
  else
  {
    *(void *)(v4 + 736) = a1;
    uint64_t v5 = sub_B263C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_B263C()
{
  uint64_t v10 = *(void **)(v0 + 488);
  uint64_t v11 = *(void **)(v0 + 480);
  uint64_t v12 = *(void **)(v0 + 472);
  uint64_t v16 = *(void *)(v0 + 448);
  uint64_t v17 = *(void *)(v0 + 464);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v9 = *(void *)(v0 + 256);
  uint64_t v13 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 224);
  uint64_t v15 = *(void *)(v0 + 456);
  uint64_t v5 = *(uint64_t **)(v0 + 200);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_13EBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  uint64_t v6 = sub_13F420();
  *(_OWORD *)(v0 + 112) = 0u;
  *(void *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 96) = 0u;
  v5[3] = v6;
  v5[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_187EC(v5);
  sub_13EE90();

  swift_bridgeObjectRelease();
  sub_904C(v0 + 96, &qword_17BE88);
  sub_904C(v4, &qword_17BE70);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v9, v14);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_B2958()
{
  uint64_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v12 = *(void *)(v0 + 448);
  uint64_t v13 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v8 = *(void *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_B2B1C()
{
  uint64_t v1 = *(void **)(v0 + 648);
  uint64_t v2 = *(void **)(v0 + 480);
  uint64_t v3 = *(void **)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 456);
  uint64_t v13 = *(void *)(v0 + 448);
  uint64_t v14 = *(void *)(v0 + 464);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v12 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 344);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_B2CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  void *v7 = v3;
  v7[1] = sub_B2DA0;
  return sub_AE920(a1, a2, a3);
}

uint64_t sub_B2DA0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_B2ED4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_B2ED4()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_B2F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  void *v7 = v3;
  v7[1] = sub_B3044;
  return sub_AF1BC(a1, a2, a3);
}

uint64_t sub_B3044()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_B3178, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_B3178()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_B323C()
{
  unint64_t result = qword_17EAD0[0];
  if (!qword_17EAD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17EAD0);
  }
  return result;
}

uint64_t sub_B3290(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResumeTimerPromptAllParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_B32EC(uint64_t a1)
{
  return sub_B3388(a1, (void (*)(void))type metadata accessor for SetTimerAttributeCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_181108);
}

uint64_t sub_B3320(uint64_t a1)
{
  return sub_B3388(a1, (void (*)(void))type metadata accessor for SetTimerAttributeCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:), &qword_181110);
}

uint64_t sub_B3354(uint64_t a1)
{
  return sub_B3388(a1, (void (*)(void))type metadata accessor for SetTimerAttributeCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_181118);
}

uint64_t sub_B3388(uint64_t a1, void (*a2)(void), uint64_t (*a3)(char *, void), uint64_t *a4)
{
  uint64_t v7 = sub_140590();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  sub_140580();
  uint64_t result = a3(v9, 0);
  *a4 = result;
  return result;
}

uint64_t sub_B342C(char a1, char a2)
{
  if (*(void *)&aNogroupisamela_0[8 * a1] == *(void *)&aNogroupisamela_0[8 * a2]
    && *(void *)&aNogroupisamela_0[8 * a1 + 56] == *(void *)&aNogroupisamela_0[8 * a2 + 56])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_141AA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_B34B4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000020;
  unint64_t v3 = 0x8000000000147370;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000020;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x73646E6F636573;
      break;
    case 2:
      unint64_t v5 = 0x53736574756E696DLL;
      unint64_t v3 = 0xEE0073646E6F6365;
      break;
    case 3:
      break;
    default:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x746C7561666564;
      break;
  }
  unint64_t v6 = 0x8000000000147370;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v2 = 0x73646E6F636573;
      goto LABEL_9;
    case 2:
      unint64_t v6 = 0xEE0073646E6F6365;
      if (v5 == 0x53736574756E696DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 3:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
      goto LABEL_12;
    default:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x746C7561666564) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_141AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void sub_B3658(unint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, void (*a4)(void, void)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v297 = a5;
  int v279 = a3;
  uint64_t v287 = a2;
  unint64_t v323 = a1;
  uint64_t v316 = a6;
  uint64_t v276 = sub_13F380();
  uint64_t v274 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  os_log_type_t v273 = (char *)&v267 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_13F460();
  uint64_t v271 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  os_log_type_t v270 = (char *)&v267 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v277 = sub_13F410();
  uint64_t v280 = *(void *)(v277 - 8);
  uint64_t v9 = __chkstk_darwin(v277);
  uint64_t v268 = (char *)&v267 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v269 = (char *)&v267 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v275 = (char *)&v267 - v14;
  __chkstk_darwin(v13);
  os_log_type_t v278 = (char *)&v267 - v15;
  uint64_t v281 = type metadata accessor for TimerNLv3Intent();
  uint64_t v16 = __chkstk_darwin(v281);
  uint64_t v285 = (uint64_t)&v267 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v293 = (char *)&v267 - v18;
  uint64_t v288 = sub_140280();
  uint64_t v283 = *(void *)(v288 - 8);
  __chkstk_darwin(v288);
  v284 = (char *)&v267 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v298 = sub_13F3E0();
  uint64_t v294 = *(void *)(v298 - 8);
  uint64_t v20 = __chkstk_darwin(v298);
  int v289 = (uint64_t *)((char *)&v267 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  char v299 = (char *)&v267 - v22;
  uint64_t v302 = sub_13EDF0();
  uint64_t v304 = *(void *)(v302 - 8);
  __chkstk_darwin(v302);
  uint64_t v286 = (char *)&v267 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v300 = sub_5830(&qword_17CD38);
  __chkstk_darwin(v300);
  uint64_t v315 = (uint64_t)&v267 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_5830(&qword_17CD40);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v292 = (uint64_t)&v267 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v314 = (uint64_t)&v267 - v29;
  __chkstk_darwin(v28);
  uint64_t v301 = (char *)&v267 - v30;
  uint64_t v31 = sub_1407C0();
  uint64_t v32 = *(void **)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v311 = (char *)&v267 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_5830(&qword_17CD48);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v291 = (uint64_t)&v267 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v307 = (uint64_t)&v267 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v310 = (uint64_t)&v267 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v309 = (uint64_t)&v267 - v42;
  __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v267 - v43;
  uint64_t v45 = sub_5830((uint64_t *)&unk_17EB90);
  uint64_t v46 = __chkstk_darwin(v45 - 8);
  uint64_t v282 = (uint64_t)&v267 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v290 = (uint8_t *)&v267 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v295 = (uint64_t)&v267 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v305 = (uint8_t *)&v267 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v296 = (uint64_t)&v267 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v308 = (uint8_t *)&v267 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v313 = (uint64_t)&v267 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v303 = (uint64_t)&v267 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v324 = (uint8_t *)&v267 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  char v66 = (char *)&v267 - v65;
  __chkstk_darwin(v64);
  uint64_t v68 = (char *)&v267 - v67;
  uint64_t v69 = (void (*)(void))v32[13];
  unsigned int v312 = enum case for DecideAction.PromptExpectation.roomConfirmation(_:);
  uint64_t v318 = (void (*)(uint8_t *, void, uint64_t))v69;
  uint64_t v319 = v32 + 13;
  v69((char *)&v267 - v67);
  uint64_t v320 = (void (*)(char *, void, uint64_t, uint64_t))v32[7];
  uint64_t v321 = v32 + 7;
  v320(v68, 0, 1, v31);
  uint64_t v322 = v34;
  uint64_t v70 = (uint64_t)&v44[*(int *)(v34 + 48)];
  v325 = a4;
  sub_8FE8((uint64_t)a4, (uint64_t)v44, (uint64_t *)&unk_17EB90);
  sub_8FE8((uint64_t)v68, v70, (uint64_t *)&unk_17EB90);
  uint64_t v317 = v32;
  uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32[6];
  if (v71((uint64_t)v44, 1, v31) == 1)
  {
    sub_904C((uint64_t)v68, (uint64_t *)&unk_17EB90);
    int v72 = v71(v70, 1, v31);
    if (v72 == 1) {
      uint64_t v73 = (uint64_t *)&unk_17EB90;
    }
    else {
      uint64_t v73 = &qword_17CD48;
    }
    if (v72 == 1) {
      char v74 = -1;
    }
    else {
      char v74 = 0;
    }
    unint64_t v75 = v323;
  }
  else
  {
    sub_8FE8((uint64_t)v44, (uint64_t)v66, (uint64_t *)&unk_17EB90);
    uint64_t v306 = v71;
    if (v71(v70, 1, v31) == 1)
    {
      sub_904C((uint64_t)v68, (uint64_t *)&unk_17EB90);
      ((void (*)(char *, uint64_t))v317[1])(v66, v31);
      char v74 = 0;
      uint64_t v73 = &qword_17CD48;
    }
    else
    {
      char v267 = v32 + 6;
      id v76 = v317;
      NSNumber v77 = v311;
      ((void (*)(char *, uint64_t, uint64_t))v317[4])(v311, v70, v31);
      sub_1F11C((unint64_t *)&unk_17CD60, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
      char v74 = sub_141230();
      Class v78 = (void (*)(char *, uint64_t))v76[1];
      v78(v77, v31);
      uint64_t v73 = (uint64_t *)&unk_17EB90;
      sub_904C((uint64_t)v68, (uint64_t *)&unk_17EB90);
      v78(v66, v31);
    }
    unint64_t v75 = v323;
    uint64_t v71 = v306;
  }
  sub_904C((uint64_t)v44, v73);
  char v79 = sub_BD10(v75, v74 & 1);
  uint64_t v80 = (uint64_t)v324;
  char v81 = v325;
  if ((v79 & 1) == 0)
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v87 = sub_141170();
    sub_33D8(v87, (uint64_t)qword_17EB30);
    uint64_t v88 = sub_141160();
    os_log_type_t v89 = sub_141480();
    if (!os_log_type_enabled(v88, v89)) {
      goto LABEL_22;
    }
    os_log_type_t v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v90 = 0;
    os_log_type_t v91 = "decideActionForInput(input:type:halInfo: ... no valid timer input";
    goto LABEL_21;
  }
  v318(v324, enum case for DecideAction.PromptExpectation.confirmation(_:), v31);
  v320((char *)v80, 0, 1, v31);
  uint64_t v82 = v309;
  uint64_t v83 = v309 + *(int *)(v322 + 48);
  sub_8FE8((uint64_t)v81, v309, (uint64_t *)&unk_17EB90);
  sub_8FE8(v80, v83, (uint64_t *)&unk_17EB90);
  if (v71(v82, 1, v31) == 1)
  {
    sub_904C(v80, (uint64_t *)&unk_17EB90);
    int v84 = v71(v83, 1, v31);
    uint64_t v85 = v314;
    if (v84 == 1)
    {
      sub_904C(v82, (uint64_t *)&unk_17EB90);
      uint64_t v86 = v313;
      sub_8FE8((uint64_t)v81, v313, (uint64_t *)&unk_17EB90);
LABEL_30:
      sub_904C(v86, (uint64_t *)&unk_17EB90);
LABEL_31:
      uint64_t v102 = (uint64_t)v305;
      v318(v305, v312, v31);
      v320((char *)v102, 0, 1, v31);
      uint64_t v103 = v307;
      uint64_t v104 = v307 + *(int *)(v322 + 48);
      id v105 = (uint64_t *)&unk_17EB90;
      sub_8FE8((uint64_t)v81, v307, (uint64_t *)&unk_17EB90);
      sub_8FE8(v102, v104, (uint64_t *)&unk_17EB90);
      if (v71(v103, 1, v31) == 1)
      {
        sub_904C(v102, (uint64_t *)&unk_17EB90);
        if (v71(v104, 1, v31) == 1)
        {
          char v106 = -1;
        }
        else
        {
          id v105 = &qword_17CD48;
          char v106 = 0;
        }
      }
      else
      {
        uint64_t v117 = v295;
        sub_8FE8(v103, v295, (uint64_t *)&unk_17EB90);
        if (v71(v104, 1, v31) == 1)
        {
          sub_904C(v102, (uint64_t *)&unk_17EB90);
          ((void (*)(uint64_t, uint64_t))v317[1])(v117, v31);
          char v106 = 0;
          id v105 = &qword_17CD48;
        }
        else
        {
          uint64_t v138 = v102;
          uint64_t v139 = v317;
          char v140 = v311;
          ((void (*)(char *, uint64_t, uint64_t))v317[4])(v311, v104, v31);
          sub_1F11C((unint64_t *)&unk_17CD60, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
          char v106 = sub_141230();
          os_log_type_t v141 = (void (*)(char *, uint64_t))v139[1];
          v141(v140, v31);
          id v105 = (uint64_t *)&unk_17EB90;
          sub_904C(v138, (uint64_t *)&unk_17EB90);
          v141((char *)v117, v31);
          uint64_t v103 = v307;
        }
      }
      sub_904C(v103, v105);
      sub_B6610(v75, v106 & 1, v316);
      return;
    }
    goto LABEL_25;
  }
  uint64_t v92 = v303;
  sub_8FE8(v82, v303, (uint64_t *)&unk_17EB90);
  if (v71(v83, 1, v31) == 1)
  {
    sub_904C((uint64_t)v324, (uint64_t *)&unk_17EB90);
    ((void (*)(uint64_t, uint64_t))v317[1])(v92, v31);
    uint64_t v85 = v314;
LABEL_25:
    sub_904C(v82, &qword_17CD48);
    uint64_t v93 = v313;
    sub_8FE8((uint64_t)v81, v313, (uint64_t *)&unk_17EB90);
    goto LABEL_28;
  }
  uint64_t v94 = v317;
  uint64_t v95 = (void (*)(char *, uint64_t, uint64_t))v317[4];
  uint64_t v306 = v71;
  uint64_t v96 = v311;
  v95(v311, v83, v31);
  sub_1F11C((unint64_t *)&unk_17CD60, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
  LODWORD(v267) = sub_141230();
  uint64_t v97 = v82;
  id v98 = (void (*)(char *, uint64_t))v94[1];
  uint64_t v71 = v306;
  v98(v96, v31);
  sub_904C((uint64_t)v324, (uint64_t *)&unk_17EB90);
  v98((char *)v92, v31);
  char v81 = v325;
  sub_904C(v97, (uint64_t *)&unk_17EB90);
  uint64_t v93 = v313;
  sub_8FE8((uint64_t)v81, v313, (uint64_t *)&unk_17EB90);
  uint64_t v85 = v314;
  if (v267)
  {
    uint64_t v86 = v93;
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v99 = (uint64_t)v308;
  v318(v308, v312, v31);
  v320((char *)v99, 0, 1, v31);
  uint64_t v86 = v310;
  uint64_t v100 = v310 + *(int *)(v322 + 48);
  sub_8FE8(v93, v310, (uint64_t *)&unk_17EB90);
  sub_8FE8(v99, v100, (uint64_t *)&unk_17EB90);
  if (v71(v86, 1, v31) == 1)
  {
    sub_904C(v99, (uint64_t *)&unk_17EB90);
    uint64_t v86 = v310;
    sub_904C(v93, (uint64_t *)&unk_17EB90);
    int v101 = v71(v100, 1, v31);
    char v81 = v325;
    if (v101 == 1) {
      goto LABEL_30;
    }
    goto LABEL_37;
  }
  uint64_t v107 = v296;
  sub_8FE8(v86, v296, (uint64_t *)&unk_17EB90);
  if (v71(v100, 1, v31) == 1)
  {
    sub_904C((uint64_t)v308, (uint64_t *)&unk_17EB90);
    sub_904C(v313, (uint64_t *)&unk_17EB90);
    ((void (*)(uint64_t, uint64_t))v317[1])(v107, v31);
LABEL_37:
    sub_904C(v86, &qword_17CD48);
    uint64_t v108 = v315;
    uint64_t v109 = v302;
    uint64_t v110 = (uint64_t)v301;
    goto LABEL_38;
  }
  uint64_t v134 = v317;
  uint64_t v135 = v311;
  ((void (*)(char *, uint64_t, uint64_t))v317[4])(v311, v100, v31);
  sub_1F11C((unint64_t *)&unk_17CD60, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
  LODWORD(v324) = sub_141230();
  uint64_t v136 = (void (*)(char *, uint64_t))v134[1];
  uint64_t v137 = v135;
  uint64_t v109 = v302;
  v136(v137, v31);
  sub_904C((uint64_t)v308, (uint64_t *)&unk_17EB90);
  sub_904C(v313, (uint64_t *)&unk_17EB90);
  v136((char *)v107, v31);
  uint64_t v85 = v314;
  uint64_t v110 = (uint64_t)v301;
  sub_904C(v310, (uint64_t *)&unk_17EB90);
  uint64_t v108 = v315;
  char v81 = v325;
  if (v324) {
    goto LABEL_31;
  }
LABEL_38:
  sub_D3F0(v110);
  sub_13EDC0();
  uint64_t v111 = v85;
  uint64_t v112 = v304;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v304 + 56))(v111, 0, 1, v109);
  uint64_t v113 = v108 + *(int *)(v300 + 48);
  sub_8FE8(v110, v315, &qword_17CD40);
  uint64_t v114 = v315;
  sub_8FE8(v111, v113, &qword_17CD40);
  uint64_t v115 = v109;
  uint64_t v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
  if (v116(v114, 1, v115) == 1)
  {
    sub_904C(v111, &qword_17CD40);
    uint64_t v114 = v315;
    sub_904C(v110, &qword_17CD40);
    if (v116(v113, 1, v115) == 1)
    {
      sub_904C(v114, &qword_17CD40);
      goto LABEL_58;
    }
    goto LABEL_45;
  }
  uint64_t v118 = v110;
  uint64_t v119 = v292;
  sub_8FE8(v114, v292, &qword_17CD40);
  if (v116(v113, 1, v115) == 1)
  {
    sub_904C(v314, &qword_17CD40);
    sub_904C(v118, &qword_17CD40);
    (*(void (**)(uint64_t, uint64_t))(v304 + 8))(v119, v115);
LABEL_45:
    sub_904C(v114, &qword_17CD38);
    uint64_t v120 = v297;
    uint64_t v121 = v298;
    uint64_t v122 = v294;
    unint64_t v123 = v323;
    goto LABEL_46;
  }
  uint64_t v143 = v118;
  uint64_t v306 = v71;
  uint64_t v144 = v304;
  v145 = v286;
  (*(void (**)(char *, uint64_t, uint64_t))(v304 + 32))(v286, v113, v115);
  sub_1F11C((unint64_t *)&qword_17EBA0, (void (*)(uint64_t))&type metadata accessor for ActionForInput);
  char v146 = sub_141230();
  unint64_t v147 = *(void (**)(char *, uint64_t))(v144 + 8);
  v147(v145, v115);
  sub_904C(v314, &qword_17CD40);
  sub_904C(v143, &qword_17CD40);
  v147((char *)v119, v115);
  uint64_t v71 = v306;
  unint64_t v123 = v323;
  sub_904C(v315, &qword_17CD40);
  uint64_t v120 = v297;
  uint64_t v121 = v298;
  uint64_t v122 = v294;
  if (v146)
  {
LABEL_58:
    uint64_t v148 = (uint64_t)v290;
    v318(v290, enum case for DecideAction.PromptExpectation.slot(_:), v31);
    v320((char *)v148, 0, 1, v31);
    uint64_t v149 = v291;
    uint64_t v150 = v291 + *(int *)(v322 + 48);
    sub_8FE8((uint64_t)v325, v291, (uint64_t *)&unk_17EB90);
    sub_8FE8(v148, v150, (uint64_t *)&unk_17EB90);
    if (v71(v149, 1, v31) == 1)
    {
      sub_904C(v148, (uint64_t *)&unk_17EB90);
      if (v71(v150, 1, v31) == 1)
      {
        sub_904C(v149, (uint64_t *)&unk_17EB90);
LABEL_79:
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v170 = sub_141170();
        sub_33D8(v170, (uint64_t)qword_17EB30);
        uint64_t v171 = sub_141160();
        os_log_type_t v172 = sub_141480();
        if (os_log_type_enabled(v171, v172))
        {
          uint64_t v173 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v173 = 0;
          _os_log_impl(&dword_0, v171, v172, "Received cancel input slot prompt input – .cancel()", v173, 2u);
          swift_slowDealloc();
        }

        sub_13EDC0();
        return;
      }
    }
    else
    {
      uint64_t v151 = v282;
      sub_8FE8(v149, v282, (uint64_t *)&unk_17EB90);
      if (v71(v150, 1, v31) != 1)
      {
        uint64_t v166 = v317;
        os_log_type_t v167 = v311;
        ((void (*)(char *, uint64_t, uint64_t))v317[4])(v311, v150, v31);
        sub_1F11C((unint64_t *)&unk_17CD60, (void (*)(uint64_t))&type metadata accessor for DecideAction.PromptExpectation);
        char v168 = sub_141230();
        uint64_t v169 = (void (*)(char *, uint64_t))v166[1];
        v169(v167, v31);
        sub_904C(v148, (uint64_t *)&unk_17EB90);
        v169((char *)v151, v31);
        sub_904C(v149, (uint64_t *)&unk_17EB90);
        if (v168) {
          goto LABEL_79;
        }
        goto LABEL_64;
      }
      sub_904C(v148, (uint64_t *)&unk_17EB90);
      ((void (*)(uint64_t, uint64_t))v317[1])(v151, v31);
    }
    sub_904C(v149, &qword_17CD48);
LABEL_64:
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v152 = sub_141170();
    sub_33D8(v152, (uint64_t)qword_17EB30);
    uint64_t v88 = sub_141160();
    os_log_type_t v89 = sub_141480();
    if (!os_log_type_enabled(v88, v89)) {
      goto LABEL_22;
    }
    os_log_type_t v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v90 = 0;
    os_log_type_t v91 = "Received cancel input on non-confirmation, non-slot prompt input – .ignore()";
LABEL_21:
    _os_log_impl(&dword_0, v88, v89, v91, v90, 2u);
    swift_slowDealloc();
LABEL_22:

    sub_13EDE0();
    return;
  }
LABEL_46:
  uint64_t v124 = (uint64_t)v299;
  sub_13F370();
  BOOL v125 = sub_E024(v124, v120, v120);
  uint64_t v126 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
  v126(v124, v121);
  if (!v125)
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v142 = sub_141170();
    sub_33D8(v142, (uint64_t)qword_17EB30);
    uint64_t v88 = sub_141160();
    os_log_type_t v89 = sub_141480();
    if (!os_log_type_enabled(v88, v89)) {
      goto LABEL_22;
    }
    os_log_type_t v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v90 = 0;
    os_log_type_t v91 = "Disallowing timer input based on allowed input types for current stack state.";
    goto LABEL_21;
  }
  uint64_t v127 = v289;
  sub_13F370();
  int v128 = (*(uint64_t (**)(uint64_t *, uint64_t))(v122 + 88))(v127, v121);
  if (v128 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v122 + 96))(v127, v121);
    uint64_t v129 = v127;
    uint64_t v130 = *(void (**)(char *, uint64_t *, uint64_t))(v283 + 32);
    uint64_t v131 = v284;
    uint64_t v132 = v288;
    v130(v284, v129, v288);
    uint64_t v133 = (uint64_t)v293;
LABEL_70:
    v130((char *)v133, (uint64_t *)v131, v132);
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v154 = sub_141170();
    uint64_t v155 = (void (*)(void, void))sub_33D8(v154, (uint64_t)qword_17EB30);
    uint64_t v156 = v285;
    sub_303C0(v133, v285);
    uint64_t v157 = sub_141160();
    os_log_type_t v158 = sub_141480();
    if (os_log_type_enabled(v157, v158))
    {
      os_log_type_t v159 = (uint8_t *)swift_slowAlloc();
      id v160 = (void (*)(void, void))swift_slowAlloc();
      v325 = v155;
      uint64_t v327 = v160;
      *(_DWORD *)os_log_type_t v159 = 136315138;
      sub_1F11C(&qword_17D480, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
      uint64_t v161 = sub_141980();
      uint64_t v326 = sub_58C0(v161, v162, (uint64_t *)&v327);
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364(v156);
      _os_log_impl(&dword_0, v157, v158, "TimerNLIntent: %s", v159, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v121 = v298;
      swift_slowDealloc();
    }
    else
    {
      sub_30364(v156);
    }

    uint64_t v163 = (uint64_t)v299;
    sub_13F370();
    id v164 = sub_F698(v163, v287);
    v126(v163, v121);
    uint64_t v165 = (uint64_t)v293;
    if (v164)
    {
      if (swift_dynamicCastUnknownClass())
      {
        sub_13EDD0();
      }
      else
      {
        id v164 = v164;
        char v177 = sub_141160();
        os_log_type_t v178 = sub_141470();
        if (os_log_type_enabled(v177, v178))
        {
          uint64_t v179 = swift_slowAlloc();
          v325 = (void (*)(void, void))swift_slowAlloc();
          uint64_t v327 = v325;
          *(_DWORD *)uint64_t v179 = 136315394;
          uint64_t v180 = sub_141C00();
          uint64_t v326 = sub_58C0(v180, v181, (uint64_t *)&v327);
          sub_1415C0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v179 + 12) = 2080;
          id v182 = v164;
          id v183 = [v182 description];
          uint64_t v184 = sub_141250();
          unint64_t v186 = v185;

          uint64_t v326 = sub_58C0(v184, v186, (uint64_t *)&v327);
          sub_1415C0();

          uint64_t v165 = (uint64_t)v293;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v177, v178, "Flows stack receives unexpected from input. Expecting: %s, Generated: %s", (uint8_t *)v179, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_13EDE0();
      }
    }
    else
    {
      uint64_t v174 = sub_141160();
      os_log_type_t v175 = sub_141470();
      if (os_log_type_enabled(v174, v175))
      {
        os_log_type_t v176 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v176 = 0;
        _os_log_impl(&dword_0, v174, v175, "Unable to parse intent from parse", v176, 2u);
        swift_slowDealloc();
      }

      sub_13EDE0();
    }
    sub_30364(v165);
    return;
  }
  uint64_t v133 = (uint64_t)v293;
  uint64_t v132 = v288;
  if (v128 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v122 + 96))(v127, v121);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    uint64_t v153 = v127;
    uint64_t v130 = *(void (**)(char *, uint64_t *, uint64_t))(v283 + 32);
    uint64_t v131 = v284;
    v130(v284, v153, v132);
    goto LABEL_70;
  }
  if (v128 == enum case for Parse.directInvocation(_:))
  {
    sub_13EDD0();
    v126((uint64_t)v127, v121);
    return;
  }
  if (v128 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v128 != enum case for Parse.uso(_:))
    {
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v199 = sub_141170();
      sub_33D8(v199, (uint64_t)qword_17EB30);
      uint64_t v200 = v274;
      uint64_t v201 = v273;
      unint64_t v202 = v123;
      uint64_t v203 = v276;
      (*(void (**)(char *, unint64_t, uint64_t))(v274 + 16))(v273, v202, v276);
      uint64_t v204 = sub_141160();
      os_log_type_t v205 = sub_141470();
      if (os_log_type_enabled(v204, v205))
      {
        uint64_t v206 = (uint8_t *)swift_slowAlloc();
        v325 = (void (*)(void, void))swift_slowAlloc();
        uint64_t v327 = v325;
        *(_DWORD *)uint64_t v206 = 136315138;
        v324 = v206 + 4;
        sub_13F370();
        uint64_t v207 = v298;
        uint64_t v208 = sub_141260();
        uint64_t v326 = sub_58C0(v208, v209, (uint64_t *)&v327);
        sub_1415C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v200 + 8))(v201, v276);
        _os_log_impl(&dword_0, v204, v205, "Received unsupported parse in decideActionForInput: %s", v206, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v200 + 8))(v201, v203);

        uint64_t v207 = v298;
      }
      sub_13EDE0();
      v126((uint64_t)v289, v207);
      return;
    }
    (*(void (**)(uint64_t *, uint64_t))(v122 + 96))(v127, v121);
    uint64_t v190 = v280;
    uint64_t v191 = v277;
    (*(void (**)(char *, uint64_t *, uint64_t))(v280 + 32))(v278, v127, v277);
    os_log_type_t v192 = *(void (**)(void))(v190 + 16);
    unint64_t v193 = v275;
    v192();
    if ((v279 & 1) != 0
      && (id v194 = v270,
          sub_13F400(),
          uint64_t v195 = sub_13F440(),
          (*(void (**)(char *, uint64_t))(v271 + 8))(v194, v272),
          v195))
    {
      char v196 = sub_5BFC();
      swift_release();
      if (sub_642C(v196) == 0x627265566F6ELL && v197 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        unint64_t v198 = *(void (**)(char *, uint64_t))(v280 + 8);
        v198(v275, v191);
LABEL_147:
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v259 = sub_141170();
        sub_33D8(v259, (uint64_t)qword_17EB30);
        id v260 = v269;
        ((void (*)(char *, char *, uint64_t))v192)(v269, v278, v191);
        uint64_t v261 = sub_141160();
        os_log_type_t v262 = sub_141480();
        if (os_log_type_enabled(v261, v262))
        {
          uint64_t v263 = (uint8_t *)swift_slowAlloc();
          id v264 = (void (*)(void, void))swift_slowAlloc();
          v325 = (void (*)(void, void))v198;
          uint64_t v327 = v264;
          *(_DWORD *)uint64_t v263 = 136315138;
          v324 = v263 + 4;
          ((void (*)(char *, char *, uint64_t))v192)(v268, v260, v191);
          uint64_t v265 = sub_141260();
          uint64_t v326 = sub_58C0(v265, v266, (uint64_t *)&v327);
          sub_1415C0();
          swift_bridgeObjectRelease();
          unint64_t v198 = (void (*)(char *, uint64_t))v325;
          v325(v260, v191);
          _os_log_impl(&dword_0, v261, v262, "decideActionForInput decide handle disambiguation UsoParse: %s", v263, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v198(v260, v191);
        }

        sub_13EDD0();
        v198(v278, v191);
        return;
      }
      char v258 = sub_141AA0();
      swift_bridgeObjectRelease();
      unint64_t v198 = *(void (**)(char *, uint64_t))(v280 + 8);
      v198(v275, v191);
      uint64_t v121 = v298;
      if (v258) {
        goto LABEL_147;
      }
    }
    else
    {
      unint64_t v198 = *(void (**)(char *, uint64_t))(v280 + 8);
      v198(v193, v191);
    }
    uint64_t v210 = (uint64_t)v299;
    sub_13F370();
    id v211 = sub_F698(v210, v287);
    v126(v210, v121);
    if (v211 && (uint64_t v212 = swift_dynamicCastUnknownClass()) != 0)
    {
      uint64_t v213 = v212;
      uint64_t v214 = qword_17B270;
      id v215 = v211;
      if (v214 != -1) {
        swift_once();
      }
      uint64_t v216 = sub_141170();
      sub_33D8(v216, (uint64_t)qword_17EB30);
      id v217 = v215;
      uint64_t v218 = sub_141160();
      os_log_type_t v219 = sub_141480();
      if (os_log_type_enabled(v218, v219))
      {
        uint64_t v220 = (uint8_t *)swift_slowAlloc();
        uint64_t v221 = (void (*)(void, void))swift_slowAlloc();
        uint64_t v326 = v213;
        uint64_t v327 = v221;
        *(_DWORD *)uint64_t v220 = 136315138;
        swift_getWitnessTable();
        uint64_t v222 = sub_141980();
        uint64_t v326 = sub_58C0(v222, v223, (uint64_t *)&v327);
        sub_1415C0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v218, v219, "Handling action for intent: %s", v220, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v191 = v277;
        swift_slowDealloc();
      }
      else
      {
      }
      sub_13EDD0();

      v198(v278, v191);
    }
    else
    {
      if (qword_17B270 != -1) {
        swift_once();
      }
      uint64_t v224 = sub_141170();
      sub_33D8(v224, (uint64_t)qword_17EB30);
      id v225 = v211;
      uint64_t v226 = sub_141160();
      os_log_type_t v227 = sub_141470();
      if (os_log_type_enabled(v226, v227))
      {
        uint64_t v228 = swift_slowAlloc();
        uint64_t v327 = (void (*)(void, void))swift_slowAlloc();
        *(_DWORD *)uint64_t v228 = 136315394;
        uint64_t v229 = sub_141C00();
        uint64_t v326 = sub_58C0(v229, v230, (uint64_t *)&v327);
        sub_1415C0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v228 + 12) = 2080;
        uint64_t v326 = (uint64_t)v211;
        id v231 = v225;
        sub_5830((uint64_t *)&unk_17CD50);
        uint64_t v232 = sub_141260();
        uint64_t v326 = sub_58C0(v232, v233, (uint64_t *)&v327);
        sub_1415C0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v226, v227, "decideActionForInput: Intent from parse does not match IntentType. Expected %s, received %s", (uint8_t *)v228, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_13EDE0();

      v198(v278, v277);
    }
    return;
  }
  (*(void (**)(uint64_t *, uint64_t))(v122 + 96))(v127, v121);
  uint64_t v187 = *v127;
  if (v279)
  {
    swift_getObjectType();
    if (SIRINLUUserDialogAct.firstUsoTask.getter())
    {
      char v188 = sub_5BFC();
      swift_release();
      if (sub_642C(v188) == 0x627265566F6ELL && v189 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_125:
        if (qword_17B270 != -1) {
          swift_once();
        }
        uint64_t v235 = sub_141170();
        sub_33D8(v235, (uint64_t)qword_17EB30);
        swift_unknownObjectRetain_n();
        uint64_t v236 = sub_141160();
        os_log_type_t v237 = sub_141480();
        if (os_log_type_enabled(v236, v237))
        {
          os_log_type_t v238 = (uint8_t *)swift_slowAlloc();
          uint64_t v239 = (void (*)(void, void))swift_slowAlloc();
          uint64_t v326 = v187;
          uint64_t v327 = v239;
          *(_DWORD *)os_log_type_t v238 = 136315138;
          swift_unknownObjectRetain();
          sub_5830(&qword_17EB60);
          uint64_t v240 = sub_141260();
          uint64_t v326 = sub_58C0(v240, v241, (uint64_t *)&v327);
          sub_1415C0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v236, v237, "decideActionForInput decide handle disambiguation userDialogAct: %s", v238, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        sub_13EDD0();
        swift_unknownObjectRelease();
        return;
      }
      char v234 = sub_141AA0();
      swift_bridgeObjectRelease();
      uint64_t v121 = v298;
      if (v234) {
        goto LABEL_125;
      }
    }
  }
  uint64_t v242 = (uint64_t)v299;
  sub_13F370();
  id v243 = sub_F698(v242, v287);
  v126(v242, v121);
  if (v243 && swift_dynamicCastUnknownClass())
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v244 = sub_141170();
    sub_33D8(v244, (uint64_t)qword_17EB30);
    uint64_t v245 = sub_141160();
    os_log_type_t v246 = sub_141480();
    if (os_log_type_enabled(v245, v246))
    {
      os_log_type_t v247 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v247 = 0;
      _os_log_impl(&dword_0, v245, v246, "decideActionForInput: Handling action for intent", v247, 2u);
      swift_slowDealloc();
    }

    sub_13EDD0();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v248 = sub_141170();
    sub_33D8(v248, (uint64_t)qword_17EB30);
    id v249 = v243;
    uint64_t v250 = sub_141160();
    os_log_type_t v251 = sub_141470();
    if (os_log_type_enabled(v250, v251))
    {
      uint64_t v252 = swift_slowAlloc();
      uint64_t v327 = (void (*)(void, void))swift_slowAlloc();
      *(_DWORD *)uint64_t v252 = 136315394;
      uint64_t v253 = sub_141C00();
      uint64_t v326 = sub_58C0(v253, v254, (uint64_t *)&v327);
      sub_1415C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v252 + 12) = 2080;
      uint64_t v326 = (uint64_t)v243;
      id v255 = v249;
      sub_5830((uint64_t *)&unk_17CD50);
      uint64_t v256 = sub_141260();
      uint64_t v326 = sub_58C0(v256, v257, (uint64_t *)&v327);
      sub_1415C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v250, v251, "decideActionForInput: Intent from parse does not match IntentType. Expected %s, received %s", (uint8_t *)v252, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_13EDE0();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_B6610@<X0>(unint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  unint64_t v222 = a1;
  uint64_t v195 = sub_13F380();
  uint64_t v194 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v199 = (char *)&v182 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_140900();
  uint64_t v197 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  char v196 = (char *)&v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17F3E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v210 = (char *)&v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_13F0C0();
  uint64_t v211 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  os_log_type_t v205 = (char *)&v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v206 = (char *)&v182 - v12;
  uint64_t v13 = sub_13F3C0();
  uint64_t v213 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v190 = (char *)&v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v203 = (char *)&v182 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v182 - v18;
  uint64_t v214 = sub_13F500();
  uint64_t v189 = *(void *)(v214 - 8);
  uint64_t v20 = __chkstk_darwin(v214);
  unint64_t v186 = (char *)&v182 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v204 = (char *)&v182 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v182 - v25;
  __chkstk_darwin(v24);
  uint64_t v212 = (char *)&v182 - v27;
  uint64_t v193 = sub_13F460();
  uint64_t v192 = *(void *)(v193 - 8);
  uint64_t v28 = __chkstk_darwin(v193);
  char v188 = (char *)&v182 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v191 = (char *)&v182 - v30;
  uint64_t v201 = sub_13F410();
  uint64_t v202 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v200 = (char *)&v182 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_140730();
  uint64_t v208 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  uint64_t v207 = (char *)&v182 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = type metadata accessor for TimerNLv3Intent();
  uint64_t v33 = __chkstk_darwin(v219);
  uint64_t v218 = (uint64_t)&v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v220 = (char *)&v182 - v35;
  uint64_t v36 = sub_13F3E0();
  Class isa = v36[-1].isa;
  id v225 = v36;
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v187 = (char *)&v182 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  unint64_t v223 = (char *)&v182 - v39;
  uint64_t v217 = sub_140280();
  uint64_t v215 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v216 = (char *)&v182 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B270 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_141170();
  uint64_t v42 = sub_33D8(v41, (uint64_t)qword_17EB30);
  uint64_t v43 = sub_141160();
  os_log_type_t v44 = sub_141480();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v185 = v9;
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl(&dword_0, v43, v44, "TimerFlowUtils.validateConfirmation(input:isRoomConfirmation:)", v45, 2u);
    uint64_t v9 = v185;
    swift_slowDealloc();
  }
  uint64_t v221 = v42;
  uint64_t v46 = v19;
  char v47 = a2;
  uint64_t v48 = a3;

  unint64_t v50 = v222;
  uint64_t v49 = (uint64_t *)v223;
  sub_13F370();
  Class v52 = isa;
  uint64_t v51 = v225;
  int v53 = (*((uint64_t (**)(uint64_t *, NSObject *))isa + 11))(v49, v225);
  if (v53 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*((void (**)(uint64_t *, NSObject *))v52 + 12))(v49, v51);
LABEL_9:
    uint64_t v54 = v49;
    uint64_t v55 = v216;
    uint64_t v56 = *(void (**)(char *, uint64_t *, uint64_t))(v215 + 32);
    uint64_t v57 = v217;
    v56(v216, v54, v217);
    uint64_t v58 = (uint64_t)v220;
    v56(v220, (uint64_t *)v55, v57);
    uint64_t v59 = v218;
    sub_303C0(v58, v218);
    uint64_t v60 = sub_141160();
    os_log_type_t v61 = sub_141480();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v184 = v48;
      uint64_t v63 = (uint8_t *)v62;
      *(void *)&long long v228 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 136315138;
      sub_1F11C(&qword_17D480, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
      uint64_t v64 = sub_141980();
      uint64_t v226 = sub_58C0(v64, v65, (uint64_t *)&v228);
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364(v59);
      _os_log_impl(&dword_0, v60, v61, "validateConfirmation: %s", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_30364(v59);
    }

    if (qword_17B340 != -1) {
      swift_once();
    }
    sub_1F11C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    if (v228 - 1 >= 2)
    {
      if ((_BYTE)v228) {
        sub_13EDE0();
      }
      else {
        sub_13EDD0();
      }
    }
    else
    {
      sub_13EDC0();
    }
    return sub_30364(v58);
  }
  if (v53 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*((void (**)(uint64_t *, NSObject *))isa + 12))(v49, v225);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_9;
  }
  uint64_t v66 = v48;
  if (v53 != enum case for Parse.directInvocation(_:))
  {
    if (v53 != enum case for Parse.NLv4IntentOnly(_:))
    {
      uint64_t v96 = v225;
      if (v53 != enum case for Parse.uso(_:))
      {
        uint64_t v134 = v194;
        uint64_t v135 = v199;
        uint64_t v136 = v195;
        (*(void (**)(char *, unint64_t, uint64_t))(v194 + 16))(v199, v50, v195);
        uint64_t v137 = sub_141160();
        os_log_type_t v138 = sub_141470();
        if (os_log_type_enabled(v137, v138))
        {
          uint64_t v139 = v66;
          char v140 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v228 = swift_slowAlloc();
          *(_DWORD *)char v140 = 136315138;
          uint64_t v184 = v139;
          sub_13F370();
          uint64_t v141 = sub_141260();
          uint64_t v226 = sub_58C0(v141, v142, (uint64_t *)&v228);
          sub_1415C0();
          swift_bridgeObjectRelease();
          uint64_t v96 = v225;
          (*(void (**)(char *, uint64_t))(v134 + 8))(v199, v136);
          _os_log_impl(&dword_0, v137, v138, "validateConfirmation: Received unsupported parse for confirmation: %s", v140, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
        }

        Class v152 = isa;
        sub_13EDE0();
        return (*((uint64_t (**)(char *, NSObject *))v152 + 1))(v223, v96);
      }
      uint64_t v184 = v48;
      uint64_t v97 = v223;
      (*((void (**)(char *, NSObject *))isa + 12))(v223, v225);
      id v98 = v200;
      (*(void (**)(char *, char *, uint64_t))(v202 + 32))(v200, v97, v201);
      uint64_t v99 = v191;
      sub_13F400();
      uint64_t v100 = sub_13F450();
      int v101 = *(void (**)(char *, uint64_t))(v192 + 8);
      uint64_t v102 = v193;
      v101(v99, v193);
      uint64_t v103 = v207;
      sub_140720();
      LOBYTE(v97) = sub_1406E0();
      (*(void (**)(char *, uint64_t))(v208 + 8))(v103, v209);
      if ((v97 & 1) == 0 || (v47 & 1) == 0) {
        goto LABEL_47;
      }
      uint64_t v104 = v100;
      id v105 = sub_141160();
      os_log_type_t v106 = sub_141480();
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v107 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v107 = 0;
        _os_log_impl(&dword_0, v105, v106, "Searching for room confirmation", v107, 2u);
        swift_slowDealloc();
      }

      uint64_t v108 = v188;
      sub_13F400();
      uint64_t v109 = sub_13F440();
      v101(v108, v102);
      uint64_t v100 = v104;
      if (!v109) {
        goto LABEL_47;
      }
      int v110 = sub_DC734();
      swift_release();
      BOOL v111 = v110 == 3;
      uint64_t v100 = v104;
      if (!v111)
      {
        swift_bridgeObjectRelease();
        sub_13EDD0();
      }
      else
      {
LABEL_47:
        uint64_t v112 = *(char **)(v100 + 16);
        if (v112)
        {
          uint64_t v113 = *(NSObject **)(v189 + 16);
          unint64_t v114 = v100 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
          Class isa = *(Class *)(v189 + 72);
          id v225 = v113;
          uint64_t v115 = (void (**)(char *, uint64_t))(v189 + 8);
          swift_bridgeObjectRetain();
          unint64_t v222 = v114;
          unint64_t v223 = v112;
          uint64_t v116 = v212;
          uint64_t v117 = v214;
          while (1)
          {
            ((void (*)(char *, unint64_t, uint64_t))v225)(v116, v114, v117);
            char v118 = sub_13F490();
            uint64_t v119 = *v115;
            (*v115)(v116, v117);
            if (v118) {
              break;
            }
            v114 += (unint64_t)isa;
            if (!--v112)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              unint64_t v120 = v222;
              uint64_t v121 = v223;
              uint64_t v122 = v214;
              while (1)
              {
                ((void (*)(char *, unint64_t, uint64_t))v225)(v26, v120, v122);
                char v123 = sub_13F4E0();
                v119(v26, v122);
                if (v123) {
                  break;
                }
                v120 += (unint64_t)isa;
                if (!--v121)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRetain();
                  unint64_t v124 = v222;
                  BOOL v125 = v223;
                  uint64_t v126 = v204;
                  uint64_t v127 = v214;
                  do
                  {
                    ((void (*)(char *, unint64_t, uint64_t))v225)(v126, v124, v127);
                    char v128 = sub_13F4A0();
                    v119(v126, v127);
                    if (v128)
                    {
                      swift_bridgeObjectRelease_n();
                      char v177 = sub_141160();
                      os_log_type_t v178 = sub_141480();
                      if (os_log_type_enabled(v177, v178))
                      {
                        uint64_t v179 = (uint8_t *)swift_slowAlloc();
                        *(_WORD *)uint64_t v179 = 0;
                        _os_log_impl(&dword_0, v177, v178, "validateConfirmation: USO parse userDialogActs contains hasRejected; returning .cancel()",
                          v179,
                          2u);
                        swift_slowDealloc();
                      }
                      goto LABEL_120;
                    }
                    v124 += (unint64_t)isa;
                    --v125;
                  }
                  while (v125);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRetain();
                  uint64_t v129 = v186;
                  unint64_t v131 = v222;
                  uint64_t v130 = v223;
                  uint64_t v132 = v214;
                  while (1)
                  {
                    ((void (*)(char *, unint64_t, uint64_t))v225)(v129, v131, v132);
                    char v133 = sub_13F4B0();
                    v119(v129, v132);
                    if (v133) {
                      break;
                    }
                    v131 += (unint64_t)isa;
                    if (!--v130)
                    {
                      swift_bridgeObjectRelease_n();
                      id v98 = v200;
                      goto LABEL_83;
                    }
                  }
                  swift_bridgeObjectRelease_n();
                  char v177 = sub_141160();
                  os_log_type_t v180 = sub_141480();
                  if (os_log_type_enabled(v177, v180))
                  {
                    unint64_t v181 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)unint64_t v181 = 0;
                    _os_log_impl(&dword_0, v177, v180, "validateConfirmation: USO parse userDialogActs contains hasCancelled; returning .cancel()",
                      v181,
                      2u);
                    swift_slowDealloc();
                  }
LABEL_120:

                  sub_13EDC0();
                  return (*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v200, v201);
                }
              }
              swift_bridgeObjectRelease_n();
              uint64_t v153 = sub_141160();
              os_log_type_t v154 = sub_141480();
              if (!os_log_type_enabled(v153, v154)) {
                goto LABEL_93;
              }
              uint64_t v155 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v155 = 0;
              uint64_t v156 = "validateConfirmation: USO parse userDialogActs contains hasWantedToProceed; returning .handle()";
              goto LABEL_92;
            }
          }
          swift_bridgeObjectRelease_n();
          uint64_t v153 = sub_141160();
          os_log_type_t v154 = sub_141480();
          if (!os_log_type_enabled(v153, v154)) {
            goto LABEL_93;
          }
          uint64_t v155 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v155 = 0;
          uint64_t v156 = "validateConfirmation: USO parse userDialogActs contains hasAccepted; returning .handle()";
LABEL_92:
          _os_log_impl(&dword_0, v153, v154, v156, v155, 2u);
          swift_slowDealloc();
LABEL_93:

          sub_13EDD0();
          return (*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v200, v201);
        }
        swift_bridgeObjectRelease();
LABEL_83:
        sub_13EDE0();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v98, v201);
    }
    (*((void (**)(uint64_t *, NSObject *))isa + 12))(v49, v225);
    uint64_t v81 = *v49;
    uint64_t v82 = v207;
    sub_140720();
    BOOL v83 = sub_1406E0();
    (*(void (**)(char *, uint64_t))(v208 + 8))(v82, v209);
    if (v83 && (v47 & 1) != 0)
    {
      int v84 = sub_141160();
      os_log_type_t v85 = sub_141480();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v86 = 0;
        _os_log_impl(&dword_0, v84, v85, "Searching for room confirmation", v86, 2u);
        swift_slowDealloc();
      }

      swift_getObjectType();
      if (SIRINLUUserDialogAct.firstUsoTask.getter())
      {
        int v87 = sub_DC734();
        swift_release();
        if (v87 != 3) {
          goto LABEL_74;
        }
      }
    }
    self;
    if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
    {
      swift_unknownObjectRetain_n();
      uint64_t v88 = sub_141160();
      os_log_type_t v89 = sub_141480();
      if (os_log_type_enabled(v88, v89))
      {
        os_log_type_t v90 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v228 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v90 = 136315138;
        uint64_t v226 = v81;
        swift_unknownObjectRetain();
        sub_5830(&qword_17EB60);
        uint64_t v91 = sub_141260();
        uint64_t v226 = sub_58C0(v91, v92, (uint64_t *)&v228);
        sub_1415C0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v88, v89, "validateConfirmation: Received UserDialogAct - %s", v90, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
LABEL_74:
      sub_13EDD0();
      return swift_unknownObjectRelease();
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v157 = sub_141160();
      os_log_type_t v158 = sub_141480();
      if (!os_log_type_enabled(v157, v158))
      {
LABEL_113:

        sub_13EDC0();
        return swift_unknownObjectRelease();
      }
      os_log_type_t v159 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v159 = 0;
      id v160 = "validateConfirmation: Received UserDialogAct - UserRejected";
    }
    else
    {
      self;
      if (!swift_dynamicCastObjCClass())
      {
        sub_13EDE0();
        return swift_unknownObjectRelease();
      }
      uint64_t v157 = sub_141160();
      os_log_type_t v158 = sub_141480();
      if (!os_log_type_enabled(v157, v158)) {
        goto LABEL_113;
      }
      os_log_type_t v159 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v159 = 0;
      id v160 = "validateConfirmation: Received UserDialogAct - UserCancelled";
    }
    _os_log_impl(&dword_0, v157, v158, v160, v159, 2u);
    swift_slowDealloc();
    goto LABEL_113;
  }
  (*((void (**)(uint64_t *, NSObject *))isa + 12))(v49, v225);
  (*(void (**)(char *, uint64_t *, uint64_t))(v213 + 32))(v46, v49, v13);
  uint64_t v67 = (uint64_t)v210;
  sub_1408D0();
  uint64_t v68 = v211;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v67, 1, v9) == 1)
  {
    sub_904C(v67, &qword_17F3E0);
    uint64_t v69 = sub_13F3B0();
    uint64_t v70 = v203;
    uint64_t v184 = v66;
    id v183 = v46;
    if (v69)
    {
      uint64_t v71 = v69;
      uint64_t v72 = v197;
      uint64_t v73 = v196;
      uint64_t v74 = v198;
      (*(void (**)(char *, void, uint64_t))(v197 + 104))(v196, enum case for DirectInvocationUtils.Timer.UserInfoKey.buttonPressed(_:), v198);
      uint64_t v75 = sub_1408F0();
      uint64_t v77 = v76;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
      if (*(void *)(v71 + 16) && (unint64_t v78 = sub_16F44(v75, v77), (v79 & 1) != 0))
      {
        sub_5B50(*(void *)(v71 + 56) + 32 * v78, (uint64_t)&v228);
      }
      else
      {
        long long v228 = 0u;
        long long v229 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v229 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v144 = v226;
          uint64_t v143 = v227;
          swift_bridgeObjectRetain();
          v145._rawValue = &off_173CE8;
          v230._countAndFlagsBits = v144;
          v230._object = v143;
          Swift::Int v146 = sub_141820(v145, v230);
          swift_bridgeObjectRelease();
          if (!v146)
          {
            char v147 = 0;
LABEL_96:
            swift_bridgeObjectRetain();
            uint64_t v161 = sub_141160();
            os_log_type_t v162 = sub_141480();
            if (os_log_type_enabled(v161, v162))
            {
              uint64_t v163 = (uint8_t *)swift_slowAlloc();
              *(void *)&long long v228 = swift_slowAlloc();
              *(_DWORD *)uint64_t v163 = 136315138;
              swift_bridgeObjectRetain();
              uint64_t v226 = sub_58C0(v144, (unint64_t)v143, (uint64_t *)&v228);
              sub_1415C0();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_0, v161, v162, "validateConfirmation: Received confirmation directInvocation, buttonPressed: %s", v163, 0xCu);
              swift_arrayDestroy();
              uint64_t v46 = v183;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            if (v147)
            {
              char v176 = sub_141AA0();
              swift_bridgeObjectRelease();
              if ((v176 & 1) == 0)
              {
                sub_13EDC0();
                return (*(uint64_t (**)(char *, uint64_t))(v213 + 8))(v46, v13);
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            sub_13EDD0();
            return (*(uint64_t (**)(char *, uint64_t))(v213 + 8))(v46, v13);
          }
          if (v146 == 1)
          {
            char v147 = 1;
            goto LABEL_96;
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_904C((uint64_t)&v228, &qword_17B9B0);
      }
    }
    id v164 = *(void (**)(char *, char *, uint64_t))(v213 + 16);
    v164(v70, v46, v13);
    uint64_t v165 = sub_141160();
    os_log_type_t v166 = sub_141480();
    os_log_type_t v167 = v70;
    if (os_log_type_enabled(v165, v166))
    {
      uint64_t v168 = swift_slowAlloc();
      id v225 = v165;
      uint64_t v169 = (uint8_t *)v168;
      uint64_t v170 = swift_slowAlloc();
      uint64_t v171 = v213;
      *(void *)&long long v228 = v170;
      *(_DWORD *)uint64_t v169 = 136315138;
      Class isa = (Class)(v169 + 4);
      v164(v190, v167, v13);
      uint64_t v172 = sub_141260();
      uint64_t v226 = sub_58C0(v172, v173, (uint64_t *)&v228);
      sub_1415C0();
      swift_bridgeObjectRelease();
      uint64_t v174 = *(void (**)(char *, uint64_t))(v171 + 8);
      v174(v167, v13);
      os_log_t v175 = v225;
      _os_log_impl(&dword_0, v225, v166, "validateConfirmation: Request was not cancelled by user. Proceed with directInvocation %s", v169, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v174 = *(void (**)(char *, uint64_t))(v213 + 8);
      v174(v70, v13);
    }
    sub_13EDD0();
    return ((uint64_t (*)(char *, uint64_t))v174)(v183, v13);
  }
  uint64_t v93 = v206;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v206, v67, v9);
  uint64_t v94 = v205;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v205, v93, v9);
  int v95 = (*(uint64_t (**)(char *, uint64_t))(v68 + 88))(v94, v9);
  if (v95 == enum case for ConfirmationResponse.confirmed(_:))
  {
    sub_13EDD0();
LABEL_63:
    (*(void (**)(char *, uint64_t))(v68 + 8))(v93, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v213 + 8))(v46, v13);
  }
  if (v95 == enum case for ConfirmationResponse.rejected(_:))
  {
    sub_13EDC0();
    goto LABEL_63;
  }
  uint64_t v148 = sub_141160();
  os_log_type_t v149 = sub_141470();
  if (os_log_type_enabled(v148, v149))
  {
    uint64_t v150 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v150 = 0;
    _os_log_impl(&dword_0, v148, v149, "validateConfirmation: Received an unknown, unhandled SiriKit confirmation, returning .ignore() for interaction", v150, 2u);
    uint64_t v94 = v205;
    swift_slowDealloc();
  }

  sub_13EDE0();
  uint64_t v151 = *(void (**)(char *, uint64_t))(v68 + 8);
  v151(v206, v9);
  (*(void (**)(char *, uint64_t))(v213 + 8))(v46, v13);
  return ((uint64_t (*)(char *, uint64_t))v151)(v94, v9);
}

uint64_t sub_B8418()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17EB30);
  sub_33D8(v0, (uint64_t)qword_17EB30);
  return sub_140E60();
}

void sub_B84B0(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v275 = a3;
  uint64_t v276 = a4;
  int v268 = a2;
  uint64_t v5 = sub_5830(&qword_17F3E0);
  __chkstk_darwin(v5 - 8);
  id v260 = (char *)&v236 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_13F0C0();
  uint64_t v261 = *(void *)(v7 - 8);
  uint64_t v262 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  id v249 = (char *)&v236 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v250 = (char *)&v236 - v10;
  uint64_t v11 = sub_13F3C0();
  uint64_t v264 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v263 = (char *)&v236 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = sub_13F500();
  uint64_t v245 = *(void *)(v267 - 8);
  uint64_t v13 = __chkstk_darwin(v267);
  unint64_t v241 = (char *)&v236 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v240 = (char *)&v236 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  char v258 = (char *)&v236 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v257 = (char *)&v236 - v20;
  __chkstk_darwin(v19);
  uint64_t v259 = (char *)&v236 - v21;
  uint64_t v247 = sub_13F460();
  uint64_t v252 = *(void *)(v247 - 8);
  uint64_t v22 = __chkstk_darwin(v247);
  uint64_t v242 = (char *)&v236 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v243 = (char *)&v236 - v24;
  uint64_t v25 = sub_13F410();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  os_log_type_t v238 = (char *)&v236 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v236 - v30;
  __chkstk_darwin(v29);
  id v255 = (char *)&v236 - v32;
  uint64_t v256 = sub_13F380();
  uint64_t v251 = *(void *)(v256 - 8);
  uint64_t v33 = __chkstk_darwin(v256);
  uint64_t v244 = (char *)&v236 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  os_log_type_t v246 = (char *)&v236 - v35;
  uint64_t v36 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v36 - 8);
  uint64_t v265 = (char *)&v236 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = type metadata accessor for TimerNLv3Intent();
  uint64_t v38 = __chkstk_darwin(v274);
  uint64_t v272 = (uint64_t *)((char *)&v236 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v236 - v40;
  uint64_t v278 = sub_13F3E0();
  uint64_t v42 = *(void *)(v278 - 8);
  uint64_t v43 = __chkstk_darwin(v278);
  unint64_t v266 = (char *)&v236 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v277 = (uint64_t)&v236 - v45;
  uint64_t v271 = sub_140280();
  uint64_t v269 = *(void *)(v271 - 8);
  __chkstk_darwin(v271);
  os_log_type_t v270 = (char *)&v236 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B270 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_141170();
  uint64_t v48 = sub_33D8(v47, (uint64_t)qword_17EB30);
  uint64_t v49 = sub_141160();
  os_log_type_t v50 = sub_141450();
  BOOL v51 = os_log_type_enabled(v49, v50);
  uint64_t v239 = v31;
  if (v51)
  {
    uint64_t v273 = a1;
    uint64_t v237 = v11;
    Class v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v254 = v25;
    uint64_t v248 = v26;
    uint64_t v280 = v53;
    uint64_t v253 = v42;
    *(_DWORD *)Class v52 = 136315138;
    uint64_t v279 = v275;
    swift_getMetatypeMetadata();
    uint64_t v54 = sub_141260();
    uint64_t v279 = sub_58C0(v54, v55, &v280);
    a1 = v273;
    uint64_t v42 = v253;
    sub_1415C0();
    uint64_t v11 = v237;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v49, v50, "TimerFlowUtils.decideActionForDisambiguationInput with intent type: %s", v52, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v248;
    uint64_t v25 = v254;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  char v56 = sub_BD10(a1, 0);
  uint64_t v57 = (uint64_t *)v277;
  if ((v56 & 1) == 0)
  {
    sub_13EDE0();
    return;
  }
  sub_13F370();
  uint64_t v58 = v42;
  int v59 = (*(uint64_t (**)(uint64_t *, uint64_t))(v42 + 88))(v57, v278);
  if (v59 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v42 + 96))(v57, v278);
LABEL_11:
    uint64_t v60 = v57;
    os_log_type_t v61 = v270;
    uint64_t v62 = *(void (**)(char *, uint64_t *, uint64_t))(v269 + 32);
    uint64_t v63 = v271;
    v62(v270, v60, v271);
    v62(v41, (uint64_t *)v61, v63);
    uint64_t v64 = (void (*)(void, void))v272;
    sub_303C0((uint64_t)v41, (uint64_t)v272);
    unint64_t v65 = sub_141160();
    os_log_type_t v66 = sub_141480();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v277 = (uint64_t)v41;
      uint64_t v68 = (uint8_t *)v67;
      uint64_t v280 = swift_slowAlloc();
      uint64_t v273 = a1;
      *(_DWORD *)uint64_t v68 = 136315138;
      sub_1F11C(&qword_17D480, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
      uint64_t v69 = sub_141980();
      uint64_t v279 = sub_58C0(v69, v70, &v280);
      a1 = v273;
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364((uint64_t)v64);
      _os_log_impl(&dword_0, v65, v66, "TimerNLIntent: %s", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v41 = (char *)v277;
      swift_slowDealloc();
    }
    else
    {
      sub_30364((uint64_t)v64);
    }

    if (qword_17B340 != -1) {
      swift_once();
    }
    sub_1F11C((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
    sub_13F940();
    switch((char)v280)
    {
      case 1:
        if ((v268 & 1) == 0) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 2:
LABEL_19:
        sub_13EDC0();
        goto LABEL_20;
      case 3:
        uint64_t v277 = (uint64_t)v41;
        uint64_t v80 = (uint64_t)v266;
        sub_13F370();
        uint64_t v81 = sub_140980();
        uint64_t v82 = (uint64_t)v265;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v265, 1, 1, v81);
        id v83 = sub_F698(v80, v82);
        sub_904C(v82, &qword_17CD30);
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v80, v278);
        if (v83)
        {
          uint64_t v84 = swift_dynamicCastUnknownClass();
          os_log_type_t v85 = (char *)v277;
          if (v84)
          {
            sub_13EDD0();

            uint64_t v71 = (uint64_t)v85;
            goto LABEL_21;
          }
          uint64_t v118 = v251;
          uint64_t v119 = v246;
          uint64_t v120 = v256;
          (*(void (**)(char *, uint64_t, uint64_t))(v251 + 16))(v246, a1, v256);
          id v121 = v83;
          uint64_t v122 = sub_141160();
          os_log_type_t v123 = sub_141470();
          int v124 = v123;
          if (os_log_type_enabled(v122, v123))
          {
            uint64_t v125 = swift_slowAlloc();
            uint64_t v278 = swift_slowAlloc();
            uint64_t v280 = v278;
            *(_DWORD *)uint64_t v125 = 136315650;
            sub_1F11C((unint64_t *)&unk_17EB68, (void (*)(uint64_t))&type metadata accessor for Input);
            LODWORD(v274) = v124;
            uint64_t v126 = sub_141980();
            uint64_t v279 = sub_58C0(v126, v127, &v280);
            sub_1415C0();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
            *(_WORD *)(v125 + 12) = 2080;
            uint64_t v128 = sub_141C00();
            uint64_t v279 = sub_58C0(v128, v129, &v280);
            sub_1415C0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v125 + 22) = 2080;
            id v130 = v121;
            id v131 = [v130 description];
            uint64_t v132 = sub_141250();
            unint64_t v134 = v133;

            uint64_t v279 = sub_58C0(v132, v134, &v280);
            sub_1415C0();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v122, (os_log_type_t)v274, "Flows stack receives unexpected from input %s. Expecting: %s, Generated: %s", (uint8_t *)v125, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
          }
          sub_13EDE0();
        }
        else
        {
          uint64_t v94 = sub_141160();
          os_log_type_t v95 = sub_141470();
          if (os_log_type_enabled(v94, v95))
          {
            uint64_t v96 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v96 = 0;
            _os_log_impl(&dword_0, v94, v95, "Unable to parse intent from parse", v96, 2u);
            swift_slowDealloc();
          }

          sub_13EDE0();
        }
        uint64_t v71 = v277;
LABEL_21:
        sub_30364(v71);
        break;
      default:
LABEL_18:
        sub_13EDD0();
LABEL_20:
        uint64_t v71 = (uint64_t)v41;
        goto LABEL_21;
    }
    return;
  }
  if (v59 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v42 + 96))(v57, v278);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_11;
  }
  if (v59 != enum case for Parse.directInvocation(_:))
  {
    if (v59 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v42 + 96))(v57, v278);
      uint64_t v86 = *v57;
      if (v268)
      {
        self;
        if (swift_dynamicCastObjCClass()
          || (self, swift_dynamicCastObjCClass())
          || (self, swift_dynamicCastObjCClass()))
        {
          swift_unknownObjectRetain_n();
          int v87 = sub_141160();
          os_log_type_t v88 = sub_141480();
          if (os_log_type_enabled(v87, v88))
          {
            os_log_type_t v89 = (uint8_t *)swift_slowAlloc();
            uint64_t v90 = swift_slowAlloc();
            uint64_t v279 = v86;
            uint64_t v280 = v90;
            *(_DWORD *)os_log_type_t v89 = 136315138;
            swift_unknownObjectRetain();
            sub_5830(&qword_17EB60);
            uint64_t v91 = sub_141260();
            uint64_t v279 = sub_58C0(v91, v92, &v280);
            sub_1415C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v93 = "Received UserDialogAct - %s";
LABEL_37:
            _os_log_impl(&dword_0, v87, v88, v93, v89, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

LABEL_101:
            sub_13EDD0();
LABEL_102:
            swift_unknownObjectRelease();
            return;
          }
          goto LABEL_100;
        }
      }
      else
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          uint64_t v135 = sub_141160();
          os_log_type_t v136 = sub_141480();
          if (os_log_type_enabled(v135, v136))
          {
            uint64_t v137 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v137 = 0;
            _os_log_impl(&dword_0, v135, v136, "Received UserDialogAct - UserCancelled", v137, 2u);
            swift_slowDealloc();
          }

          sub_13EDC0();
          goto LABEL_102;
        }
      }
      swift_getObjectType();
      if (SIRINLUUserDialogAct.firstUsoTask.getter())
      {
        char v164 = sub_5BFC();
        swift_release();
        if (sub_642C(v164) == 0x627265566F6ELL && v165 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_98;
        }
        char v175 = sub_141AA0();
        swift_bridgeObjectRelease();
        if (v175)
        {
LABEL_98:
          swift_unknownObjectRetain_n();
          int v87 = sub_141160();
          os_log_type_t v88 = sub_141480();
          if (os_log_type_enabled(v87, v88))
          {
            os_log_type_t v89 = (uint8_t *)swift_slowAlloc();
            uint64_t v176 = swift_slowAlloc();
            uint64_t v279 = v86;
            uint64_t v280 = v176;
            *(_DWORD *)os_log_type_t v89 = 136315138;
            swift_unknownObjectRetain();
            sub_5830(&qword_17EB60);
            uint64_t v177 = sub_141260();
            uint64_t v279 = sub_58C0(v177, v178, &v280);
            sub_1415C0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v93 = "decideActionForDisambiguationInput: decide handle disambiguation userDialogAct: %s";
            goto LABEL_37;
          }
LABEL_100:

          swift_unknownObjectRelease_n();
          goto LABEL_101;
        }
      }
      uint64_t v179 = (uint64_t)v266;
      sub_13F370();
      uint64_t v180 = sub_140980();
      uint64_t v181 = (uint64_t)v265;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v180 - 8) + 56))(v265, 1, 1, v180);
      id v182 = sub_F698(v179, v181);
      sub_904C(v181, &qword_17CD30);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v179, v278);
      if (v182 && (uint64_t v183 = swift_dynamicCastUnknownClass()) != 0)
      {
        uint64_t v184 = v183;
        id v185 = v182;
        unint64_t v186 = sub_141160();
        os_log_type_t v187 = sub_141480();
        if (os_log_type_enabled(v186, v187))
        {
          char v188 = (uint8_t *)swift_slowAlloc();
          uint64_t v189 = swift_slowAlloc();
          uint64_t v279 = v184;
          uint64_t v280 = v189;
          *(_DWORD *)char v188 = 136315138;
          uint64_t v278 = (uint64_t)(v188 + 4);
          swift_getWitnessTable();
          uint64_t v190 = sub_141980();
          uint64_t v279 = sub_58C0(v190, v191, &v280);
          sub_1415C0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v186, v187, "decideActionForDisambiguationInput: Handling action for intent: %s", v188, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_13EDD0();
        swift_unknownObjectRelease();
      }
      else
      {
        id v192 = v182;
        uint64_t v193 = sub_141160();
        os_log_type_t v194 = sub_141470();
        if (os_log_type_enabled(v193, v194))
        {
          uint64_t v195 = swift_slowAlloc();
          uint64_t v280 = swift_slowAlloc();
          *(_DWORD *)uint64_t v195 = 136315394;
          uint64_t v196 = sub_141C00();
          uint64_t v279 = sub_58C0(v196, v197, &v280);
          sub_1415C0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v195 + 12) = 2080;
          uint64_t v279 = (uint64_t)v182;
          id v198 = v192;
          sub_5830((uint64_t *)&unk_17CD50);
          uint64_t v199 = sub_141260();
          uint64_t v279 = sub_58C0(v199, v200, &v280);
          sub_1415C0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v193, v194, "decideActionForDisambiguationInput: Intent from parse does not match IntentType. Expected %s, received %s", (uint8_t *)v195, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_13EDE0();
        swift_unknownObjectRelease();
      }
      return;
    }
    if (v59 != enum case for Parse.uso(_:))
    {
      uint64_t v138 = v251;
      uint64_t v139 = v244;
      uint64_t v140 = v256;
      (*(void (**)(char *, uint64_t, uint64_t))(v251 + 16))(v244, a1, v256);
      uint64_t v141 = sub_141160();
      os_log_type_t v142 = sub_141470();
      if (os_log_type_enabled(v141, v142))
      {
        uint64_t v143 = (uint8_t *)swift_slowAlloc();
        uint64_t v144 = swift_slowAlloc();
        uint64_t v253 = v42;
        uint64_t v280 = v144;
        *(_DWORD *)uint64_t v143 = 136315138;
        sub_13F370();
        uint64_t v145 = sub_141260();
        uint64_t v279 = sub_58C0(v145, v146, &v280);
        sub_1415C0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v256);
        _os_log_impl(&dword_0, v141, v142, "Received unsupported parse for confirmation: %s", v143, 0xCu);
        swift_arrayDestroy();
        uint64_t v42 = v253;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v140);
      }

      sub_13EDE0();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v277, v278);
      return;
    }
    uint64_t v273 = a1;
    uint64_t v274 = v48;
    (*(void (**)(uint64_t *, uint64_t))(v42 + 96))(v57, v278);
    uint64_t v248 = v26;
    uint64_t v100 = *(void (**)(char *, uint64_t *, uint64_t))(v26 + 32);
    uint64_t v254 = v25;
    v100(v255, v57, v25);
    int v101 = v243;
    sub_13F400();
    uint64_t v102 = sub_13F450();
    uint64_t v103 = *(uint64_t **)(v252 + 8);
    v252 += 8;
    uint64_t v272 = v103;
    ((void (*)(char *, uint64_t))v103)(v101, v247);
    uint64_t v104 = *(void *)(v102 + 16);
    uint64_t v253 = v42;
    if (v268)
    {
      uint64_t v105 = v267;
      if (v104)
      {
        os_log_type_t v106 = *(void (**)(char *, unint64_t, uint64_t))(v245 + 16);
        unint64_t v107 = v102 + ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80));
        uint64_t v108 = (void (**)(char *, uint64_t))(v245 + 8);
        uint64_t v277 = *(void *)(v245 + 72);
        uint64_t v271 = v102;
        swift_bridgeObjectRetain();
        uint64_t v109 = v259;
        while (1)
        {
          v106(v109, v107, v105);
          char v110 = sub_13F490();
          BOOL v111 = v257;
          v106(v257, (unint64_t)v109, v105);
          char v112 = (v110 & 1) != 0 ? 1 : sub_13F4E0();
          uint64_t v113 = *v108;
          unint64_t v114 = v111;
          uint64_t v115 = v267;
          (*v108)(v114, v267);
          uint64_t v116 = v258;
          uint64_t v109 = v259;
          v106(v258, (unint64_t)v259, v115);
          if (v112) {
            break;
          }
          char v117 = sub_13F4A0();
          v113(v116, v115);
          v113(v109, v115);
          if (v117) {
            goto LABEL_119;
          }
          v107 += v277;
          --v104;
          uint64_t v105 = v267;
          if (!v104) {
            goto LABEL_74;
          }
        }
        v113(v116, v115);
        v113(v109, v115);
LABEL_119:
        swift_bridgeObjectRelease_n();
        unint64_t v233 = sub_141160();
        os_log_type_t v234 = sub_141480();
        if (os_log_type_enabled(v233, v234))
        {
          uint64_t v235 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v235 = 0;
          _os_log_impl(&dword_0, v233, v234, "USO parse userDialogActs contains hasAccepted, hasWantedToProceed or hasRejected; returning .handle() since "
            "these are window actions",
            v235,
            2u);
          swift_slowDealloc();
        }

        sub_13EDD0();
        goto LABEL_128;
      }
    }
    else
    {
      uint64_t v105 = v267;
      if (v104)
      {
        uint64_t v151 = *(void (**)(char *, unint64_t, uint64_t))(v245 + 16);
        unint64_t v152 = v102 + ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80));
        uint64_t v153 = (void (**)(char *, uint64_t))(v245 + 8);
        uint64_t v154 = *(void *)(v245 + 72);
        uint64_t v271 = v102;
        swift_bridgeObjectRetain();
        uint64_t v155 = v240;
        while (1)
        {
          v151(v155, v152, v105);
          char v156 = sub_13F4A0();
          (*v153)(v155, v105);
          if (v156) {
            break;
          }
          v152 += v154;
          if (!--v104)
          {
LABEL_74:
            uint64_t v102 = v271;
            swift_bridgeObjectRelease();
            uint64_t v58 = v253;
            goto LABEL_75;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v171 = sub_141160();
        os_log_type_t v172 = sub_141480();
        if (!os_log_type_enabled(v171, v172)) {
          goto LABEL_96;
        }
        unint64_t v173 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v173 = 0;
        uint64_t v174 = "USO parse userDialogActs contains hasRejected, and we're in a non-windowed config -- returning .cancel()!";
        goto LABEL_95;
      }
    }
LABEL_75:
    uint64_t v157 = *(void *)(v102 + 16);
    if (v157)
    {
      os_log_type_t v158 = *(void (**)(char *, unint64_t, uint64_t))(v245 + 16);
      unint64_t v159 = v102 + ((*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80));
      id v160 = (void (**)(char *, uint64_t))(v245 + 8);
      uint64_t v161 = *(void *)(v245 + 72);
      swift_bridgeObjectRetain();
      os_log_type_t v162 = v241;
      while (1)
      {
        v158(v162, v159, v105);
        char v163 = sub_13F4B0();
        (*v160)(v162, v105);
        if (v163) {
          break;
        }
        v159 += v161;
        if (!--v157)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v58 = v253;
          goto LABEL_87;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v171 = sub_141160();
      os_log_type_t v172 = sub_141480();
      if (!os_log_type_enabled(v171, v172)) {
        goto LABEL_96;
      }
      unint64_t v173 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v173 = 0;
      uint64_t v174 = "USO parse userDialogActs contains hasCancelled; returning .cancel()";
LABEL_95:
      _os_log_impl(&dword_0, v171, v172, v174, v173, 2u);
      swift_slowDealloc();
LABEL_96:

      sub_13EDC0();
      goto LABEL_128;
    }
    swift_bridgeObjectRelease();
LABEL_87:
    os_log_type_t v166 = v242;
    sub_13F400();
    uint64_t v167 = sub_13F440();
    ((void (*)(char *, uint64_t))v272)(v166, v247);
    uint64_t v168 = v254;
    if (v167)
    {
      char v169 = sub_5BFC();
      swift_release();
      if (sub_642C(v169) == 0x627265566F6ELL && v170 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_110:
        uint64_t v202 = v248;
        uint64_t v203 = *(void (**)(char *, char *, uint64_t))(v248 + 16);
        uint64_t v204 = v239;
        v203(v239, v255, v168);
        os_log_type_t v205 = sub_141160();
        os_log_type_t v206 = sub_141480();
        if (os_log_type_enabled(v205, v206))
        {
          uint64_t v207 = (uint8_t *)swift_slowAlloc();
          uint64_t v280 = swift_slowAlloc();
          *(_DWORD *)uint64_t v207 = 136315138;
          uint64_t v278 = (uint64_t)(v207 + 4);
          v203(v238, v204, v254);
          uint64_t v208 = sub_141260();
          uint64_t v279 = sub_58C0(v208, v209, &v280);
          sub_1415C0();
          swift_bridgeObjectRelease();
          uint64_t v210 = *(void (**)(char *, uint64_t))(v202 + 8);
          v210(v204, v254);
          _os_log_impl(&dword_0, v205, v206, "decideActionForDisambiguationInput decide handle disambiguation UsoParse: %s", v207, 0xCu);
          swift_arrayDestroy();
          uint64_t v168 = v254;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v210 = *(void (**)(char *, uint64_t))(v202 + 8);
          v210(v204, v168);
        }

        sub_13EDD0();
        v210(v255, v168);
        return;
      }
      char v201 = sub_141AA0();
      swift_bridgeObjectRelease();
      if (v201) {
        goto LABEL_110;
      }
    }
    uint64_t v211 = (uint64_t)v266;
    sub_13F370();
    uint64_t v212 = sub_140980();
    uint64_t v213 = (uint64_t)v265;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 56))(v265, 1, 1, v212);
    id v214 = sub_F698(v211, v213);
    sub_904C(v213, &qword_17CD30);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v211, v278);
    if (v214)
    {
      uint64_t v215 = swift_dynamicCastUnknownClass();
      if (v215)
      {
        uint64_t v216 = v215;
        id v217 = v214;
        uint64_t v218 = sub_141160();
        os_log_type_t v219 = sub_141480();
        if (os_log_type_enabled(v218, v219))
        {
          uint64_t v220 = (uint8_t *)swift_slowAlloc();
          uint64_t v221 = swift_slowAlloc();
          uint64_t v279 = v216;
          uint64_t v280 = v221;
          *(_DWORD *)uint64_t v220 = 136315138;
          swift_getWitnessTable();
          uint64_t v222 = sub_141980();
          uint64_t v279 = sub_58C0(v222, v223, &v280);
          uint64_t v168 = v254;
          sub_1415C0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v218, v219, "decideActionForDisambiguationInput: Handling action for intent: %s", v220, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_13EDD0();

        (*(void (**)(char *, uint64_t))(v248 + 8))(v255, v168);
        return;
      }
    }
    id v224 = v214;
    id v225 = sub_141160();
    os_log_type_t v226 = sub_141470();
    if (os_log_type_enabled(v225, v226))
    {
      uint64_t v227 = swift_slowAlloc();
      uint64_t v280 = swift_slowAlloc();
      *(_DWORD *)uint64_t v227 = 136315394;
      uint64_t v228 = sub_141C00();
      uint64_t v279 = sub_58C0(v228, v229, &v280);
      sub_1415C0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v227 + 12) = 2080;
      uint64_t v279 = (uint64_t)v214;
      id v230 = v224;
      sub_5830((uint64_t *)&unk_17CD50);
      uint64_t v231 = sub_141260();
      uint64_t v279 = sub_58C0(v231, v232, &v280);
      sub_1415C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v225, v226, "decideActionForDisambiguationInput: Intent from parse does not match IntentType. Expected %s, received %s", (uint8_t *)v227, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_13EDE0();

LABEL_128:
    (*(void (**)(char *, uint64_t))(v248 + 8))(v255, v254);
    return;
  }
  (*(void (**)(uint64_t *, uint64_t))(v42 + 96))(v57, v278);
  uint64_t v73 = v263;
  uint64_t v72 = v264;
  (*(void (**)(char *, uint64_t *, uint64_t))(v264 + 32))(v263, v57, v11);
  uint64_t v74 = (uint64_t)v260;
  sub_1408D0();
  uint64_t v76 = v261;
  uint64_t v75 = v262;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v261 + 48))(v74, 1, v262) == 1)
  {
    sub_904C(v74, &qword_17F3E0);
    uint64_t v77 = sub_141160();
    os_log_type_t v78 = sub_141480();
    if (os_log_type_enabled(v77, v78))
    {
      char v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v79 = 0;
      _os_log_impl(&dword_0, v77, v78, "Received confirmation directInvocation, buttonPressed", v79, 2u);
      swift_slowDealloc();
    }

    sub_13EDD0();
    goto LABEL_44;
  }
  uint64_t v97 = v250;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v250, v74, v75);
  id v98 = v249;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v249, v97, v75);
  int v99 = (*(uint64_t (**)(char *, uint64_t))(v76 + 88))(v98, v75);
  if (v99 == enum case for ConfirmationResponse.confirmed(_:) || v99 == enum case for ConfirmationResponse.rejected(_:))
  {
    sub_13EDD0();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v97, v75);
LABEL_44:
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v11);
    return;
  }
  char v147 = sub_141160();
  os_log_type_t v148 = sub_141470();
  if (os_log_type_enabled(v147, v148))
  {
    os_log_type_t v149 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v149 = 0;
    _os_log_impl(&dword_0, v147, v148, "Received an unknown, unhandled SiriKit confirmation, returning .ignore() for interaction", v149, 2u);
    uint64_t v97 = v250;
    swift_slowDealloc();
  }

  sub_13EDE0();
  uint64_t v150 = *(void (**)(char *, uint64_t))(v76 + 8);
  v150(v97, v75);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v11);
  v150(v98, v75);
}

uint64_t sub_BAB8C()
{
  uint64_t v0 = sub_5830(&qword_17EB78);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140270();
  uint64_t v3 = sub_13F960();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_904C((uint64_t)v2, &qword_17EB78);
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_141170();
    sub_33D8(v5, (uint64_t)qword_17EB30);
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "Parse received is NOT a valid timer nlv3Intent: domainNode in nlv3Intent is nil", v8, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v10 = sub_13F950();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  BOOL v13 = v10 == 0x72656D6974 && v12 == 0xE500000000000000;
  if (!v13 && (sub_141AA0() & 1) == 0)
  {
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_141170();
    sub_33D8(v14, (uint64_t)qword_17EB30);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_141160();
    os_log_type_t v16 = sub_141480();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_58C0(v10, v12, &v19);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v15, v16, "Parse received is NOT a valid timer nlv3Intent: received unexpected domain node %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_BAF20(uint64_t a1, char a2)
{
  sub_13FA30();
  sub_8FE8((uint64_t)v30, (uint64_t)v28, &qword_17B9B0);
  if (!v29) {
    goto LABEL_27;
  }
  sub_8FE8((uint64_t)v28, (uint64_t)v27, &qword_17B9B0);
  sub_13FB50();
  if (!swift_dynamicCast())
  {
    sub_13FB00();
    if (!swift_dynamicCast())
    {
      sub_13FAF0();
      if (!swift_dynamicCast())
      {
        sub_13FB20();
        if (!swift_dynamicCast())
        {
          sub_13FB70();
          if (!swift_dynamicCast())
          {
            sub_13FBA0();
            if (!swift_dynamicCast())
            {
              sub_13FC20();
              if (!swift_dynamicCast())
              {
                sub_13FC60();
                if (!swift_dynamicCast())
                {
                  sub_13FC80();
                  if (!swift_dynamicCast())
                  {
                    sub_13FCC0();
                    if (!swift_dynamicCast())
                    {
                      sub_13FCA0();
                      if (!swift_dynamicCast())
                      {
                        sub_13FD60();
                        if (swift_dynamicCast())
                        {
                          swift_release();
                          if ((a2 & 1) != 0 && sub_DC734() != 3)
                          {
                            sub_904C((uint64_t)v30, &qword_17B9B0);
                            _s20HandleIntentStrategyVwxx_1((uint64_t)v27);
                            uint64_t v10 = v28;
                            goto LABEL_18;
                          }
                          if (qword_17B270 != -1) {
                            swift_once();
                          }
                          uint64_t v11 = sub_141170();
                          sub_33D8(v11, (uint64_t)qword_17EB30);
                          sub_8FE8((uint64_t)v30, (uint64_t)v26, &qword_17B9B0);
                          unint64_t v12 = sub_141160();
                          os_log_type_t v13 = sub_141480();
                          if (os_log_type_enabled(v12, v13))
                          {
                            uint64_t v14 = (uint8_t *)swift_slowAlloc();
                            uint64_t v25 = swift_slowAlloc();
                            *(_DWORD *)uint64_t v14 = 136315138;
                            sub_8FE8((uint64_t)v26, (uint64_t)v24, &qword_17B9B0);
                            sub_5830(&qword_17B9B0);
                            uint64_t v15 = sub_141260();
                            v24[0] = sub_58C0(v15, v16, &v25);
                            sub_1415C0();
                            swift_bridgeObjectRelease();
                            sub_904C((uint64_t)v26, &qword_17B9B0);
                            _os_log_impl(&dword_0, v12, v13, "Received a UsoTask_noVerb_common_Setting task with no room confirmation (rejecting): %s", v14, 0xCu);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {

                            sub_904C((uint64_t)v26, &qword_17B9B0);
                          }
                          sub_904C((uint64_t)v30, &qword_17B9B0);
                          _s20HandleIntentStrategyVwxx_1((uint64_t)v27);
LABEL_33:
                          sub_904C((uint64_t)v28, &qword_17B9B0);
                          return 0;
                        }
                        _s20HandleIntentStrategyVwxx_1((uint64_t)v27);
LABEL_27:
                        if (qword_17B270 != -1) {
                          swift_once();
                        }
                        uint64_t v17 = sub_141170();
                        sub_33D8(v17, (uint64_t)qword_17EB30);
                        sub_8FE8((uint64_t)v30, (uint64_t)v27, &qword_17B9B0);
                        uint64_t v18 = sub_141160();
                        os_log_type_t v19 = sub_141480();
                        if (os_log_type_enabled(v18, v19))
                        {
                          uint64_t v20 = (uint8_t *)swift_slowAlloc();
                          v24[0] = swift_slowAlloc();
                          *(_DWORD *)uint64_t v20 = 136315138;
                          sub_8FE8((uint64_t)v27, (uint64_t)v26, &qword_17B9B0);
                          sub_5830(&qword_17B9B0);
                          uint64_t v21 = sub_141260();
                          v26[0] = sub_58C0(v21, v22, v24);
                          sub_1415C0();
                          swift_bridgeObjectRelease();
                          sub_904C((uint64_t)v27, &qword_17B9B0);
                          _os_log_impl(&dword_0, v18, v19, "Received an invalid NoEntity or not a NoEntity task: %s", v20, 0xCu);
                          swift_arrayDestroy();
                          swift_slowDealloc();
                          swift_slowDealloc();
                        }
                        else
                        {

                          sub_904C((uint64_t)v27, &qword_17B9B0);
                        }
                        sub_904C((uint64_t)v30, &qword_17B9B0);
                        goto LABEL_33;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  swift_release();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v27);
  sub_904C((uint64_t)v28, &qword_17B9B0);
  if (qword_17B270 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_141170();
  sub_33D8(v3, (uint64_t)qword_17EB30);
  sub_8FE8((uint64_t)v30, (uint64_t)v28, &qword_17B9B0);
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141480();
  if (!os_log_type_enabled(v4, v5))
  {

    sub_904C((uint64_t)v28, &qword_17B9B0);
    uint64_t v10 = v30;
LABEL_18:
    sub_904C((uint64_t)v10, &qword_17B9B0);
    return 1;
  }
  uint64_t v6 = (uint8_t *)swift_slowAlloc();
  v26[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v6 = 136315138;
  sub_8FE8((uint64_t)v28, (uint64_t)v27, &qword_17B9B0);
  sub_5830(&qword_17B9B0);
  uint64_t v7 = sub_141260();
  v27[0] = sub_58C0(v7, v8, v26);
  sub_1415C0();
  swift_bridgeObjectRelease();
  sub_904C((uint64_t)v28, &qword_17B9B0);
  _os_log_impl(&dword_0, v4, v5, "Received a valid NoEntity task: %s", v6, 0xCu);
  uint64_t v9 = 1;
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  sub_904C((uint64_t)v30, &qword_17B9B0);
  return v9;
}

uint64_t sub_BB710()
{
  v11[0] = sub_140250();
  v11[1] = v0;
  strcpy((char *)v9, "common_Alarm");
  HIBYTE(v9[6]) = 0;
  v9[7] = -5120;
  sub_BB9F0();
  char v1 = sub_1415E0();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0) {
    return 1;
  }
  sub_13FA30();
  sub_8FE8((uint64_t)v11, (uint64_t)v9, &qword_17B9B0);
  if (!v10)
  {
    sub_904C((uint64_t)v9, &qword_17B9B0);
    goto LABEL_8;
  }
  sub_13FBF0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    sub_8FE8((uint64_t)v11, (uint64_t)v9, &qword_17B9B0);
    goto LABEL_9;
  }
  sub_8FE8((uint64_t)v11, (uint64_t)v9, &qword_17B9B0);
  if (v8[0])
  {
    swift_release();
    sub_904C((uint64_t)v9, &qword_17B9B0);
    goto LABEL_12;
  }
LABEL_9:
  sub_69B4((uint64_t)v9, (uint64_t)v8);
  if (!v8[3])
  {
    sub_904C((uint64_t)v8, &qword_17B9B0);
    goto LABEL_17;
  }
  sub_13FC30();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    if (qword_17B270 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_141170();
    sub_33D8(v4, (uint64_t)qword_17EB30);
    os_log_type_t v5 = sub_141160();
    os_log_type_t v6 = sub_141480();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_0, v5, v6, "Timer domain rejecting Alarm parse we cannot support", v7, 2u);
      swift_slowDealloc();
    }

    sub_904C((uint64_t)v11, &qword_17B9B0);
    return 0;
  }
  swift_release();
LABEL_12:
  if (!sub_140230()) {
    goto LABEL_17;
  }
  if (sub_13F990())
  {
    uint64_t v3 = sub_13FA70();
    swift_release();
    swift_release();
    sub_904C((uint64_t)v11, &qword_17B9B0);
    if (v3)
    {
      swift_release();
      return 1;
    }
  }
  else
  {
    sub_904C((uint64_t)v11, &qword_17B9B0);
    swift_release();
  }
  return 0;
}

unint64_t sub_BB9F0()
{
  unint64_t result = qword_17EB80;
  if (!qword_17EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EB80);
  }
  return result;
}

uint64_t sub_BBA44()
{
  uint64_t v0 = sub_13F460();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_13F410();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_13F3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F370();
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v12 == enum case for Parse.uso(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
      sub_13F400();
      uint64_t v14 = sub_13F440();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      if (v14)
      {
        uint64_t v13 = sub_DC734();
        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return v13;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    return 3;
  }
  (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
  swift_getObjectType();
  if (!SIRINLUUserDialogAct.firstUsoTask.getter())
  {
    swift_unknownObjectRelease();
    return 3;
  }
  uint64_t v13 = sub_DC734();
  swift_release();
  swift_unknownObjectRelease();
  return v13;
}

uint64_t type metadata accessor for DismissTimerCATsSimple()
{
  uint64_t result = qword_17EBB0;
  if (!qword_17EBB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_BBDC0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_BBE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_BBF84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_BC094()
{
  return type metadata accessor for DismissTimerCATsSimple();
}

uint64_t sub_BC09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for TimerIntents()
{
  return sub_6F024();
}

unsigned char *sub_BC0BC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBC188);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for TimerIntents.FlowError()
{
  return sub_6F024();
}

uint64_t sub_BC1C8()
{
  return swift_getWitnessTable();
}

BOOL sub_BC1E4(char a1, char a2)
{
  return a1 == a2;
}

void sub_BC1F4(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int sub_BC21C(unsigned __int8 a1)
{
  return sub_141B70();
}

BOOL sub_BC264(char *a1, char *a2)
{
  return sub_BC1E4(*a1, *a2);
}

Swift::Int sub_BC270()
{
  return sub_BC21C(*v0);
}

void sub_BC278(uint64_t a1)
{
  sub_BC1F4(a1, *v1);
}

Swift::Int sub_BC280()
{
  sub_141B50();
  sub_BC1F4((uint64_t)v2, *v0);
  return sub_141B70();
}

unsigned char *sub_BC2D0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xBC36CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for TimerIntents.DialogError()
{
  return sub_6F024();
}

uint64_t sub_BC3AC()
{
  return swift_getWitnessTable();
}

Swift::Int sub_BC3C8()
{
  return sub_141B70();
}

uint64_t sub_BC4B4()
{
  sub_1412A0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_BC508()
{
  sub_1412A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_BC5E0()
{
  return sub_141B70();
}

Swift::Int sub_BC6C8()
{
  return sub_141B70();
}

uint64_t sub_BC730(uint64_t a1)
{
  uint64_t v28 = sub_5830(&qword_17EE80);
  uint64_t v3 = __chkstk_darwin(v28);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v27 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v32 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v14 = (char *)&_swiftEmptyArrayStorage;
  if (v11) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v13++, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v13 >= v27) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v13);
  if (v18) {
    goto LABEL_19;
  }
  int64_t v19 = v13 + 1;
  if (v13 + 1 >= v27) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_18:
    int64_t v13 = v19;
LABEL_19:
    unint64_t v11 = (v18 - 1) & v18;
    for (unint64_t i = __clz(__rbit64(v18)) + (v13 << 6); ; unint64_t i = v15 | (v13 << 6))
    {
      uint64_t v20 = *(void *)(v32 + 56);
      char v21 = *(unsigned char *)(*(void *)(v32 + 48) + i);
      uint64_t v22 = sub_5830(&qword_17BE78);
      sub_AE204(v20 + *(void *)(*(void *)(v22 - 8) + 72) * i, (uint64_t)&v7[*(int *)(v28 + 48)]);
      unsigned char *v7 = v21;
      sub_19914((uint64_t)v7, (uint64_t)v5, &qword_17EE80);
      sub_19978(v5, (uint64_t)&v29);
      if (v1) {
        break;
      }
      sub_904C((uint64_t)v5, &qword_17EE80);
      if (v30)
      {
        sub_3498(&v29, (uint64_t)v31);
        sub_3498(v31, (uint64_t)&v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_E08F0(0, *((void *)v14 + 2) + 1, 1, v14);
        }
        unint64_t v24 = *((void *)v14 + 2);
        unint64_t v23 = *((void *)v14 + 3);
        if (v24 >= v23 >> 1) {
          uint64_t v14 = sub_E08F0((char *)(v23 > 1), v24 + 1, 1, v14);
        }
        *((void *)v14 + 2) = v24 + 1;
        uint64_t result = sub_3498(&v29, (uint64_t)&v14[40 * v24 + 32]);
        if (!v11) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t result = sub_904C((uint64_t)&v29, &qword_17EE88);
        if (!v11) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
    }
    sub_904C((uint64_t)v5, &qword_17EE80);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  int64_t v19 = v13 + 2;
  if (v13 + 2 >= v27)
  {
LABEL_33:
    swift_release();
    return (uint64_t)v14;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  int64_t v19 = v13 + 3;
  if (v13 + 3 >= v27) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  int64_t v19 = v13 + 4;
  if (v13 + 4 >= v27) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v26 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_BCA8C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17ED80);
  sub_33D8(v0, (uint64_t)qword_17ED80);
  return sub_140E60();
}

unint64_t sub_BCB08(char a1)
{
  unint64_t result = 0xD000000000000020;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73646E6F636573;
      break;
    case 2:
      unint64_t result = 0x53736574756E696DLL;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x746C7561666564;
      break;
  }
  return result;
}

uint64_t sub_BCBAC(unsigned __int8 *a1, char *a2)
{
  return sub_B34B4(*a1, *a2);
}

Swift::Int sub_BCBB8()
{
  return sub_BC3C8();
}

uint64_t sub_BCBC0()
{
  return sub_BC508();
}

Swift::Int sub_BCBC8()
{
  return sub_BC5E0();
}

uint64_t sub_BCBD0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_BF838(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_BCC00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_BCB08(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

double sub_BCC2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_16F44(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_BDC34();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_34AF0((long long *)(*(void *)(v11 + 56) + 48 * v8), a3);
    sub_BE07C(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

uint64_t sub_BCD38@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_17000(a1);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_BDE20();
      uint64_t v10 = v20;
    }
    uint64_t v11 = *(void *)(v10 + 56);
    uint64_t v12 = sub_5830(&qword_17BE78);
    uint64_t v19 = *(void *)(v12 - 8);
    sub_19914(v11 + *(void *)(v19 + 72) * v6, a2, &qword_17BE78);
    sub_BE268(v6, v10);
    *uint64_t v3 = v10;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v14 = a2;
    uint64_t v15 = 0;
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = a2;
    uint64_t v15 = 1;
  }

  return v13(v14, v15, 1, v16);
}

uint64_t sub_BCEC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_5830(&qword_17BFF0);
  uint64_t v6 = sub_1417F0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      char v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_174B0(v24, v35);
      }
      else
      {
        sub_5B50((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_141B50();
      sub_1412A0();
      uint64_t result = sub_141B70();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_174B0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_BD1C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_5830(&qword_17C018);
  char v37 = a2;
  uint64_t v6 = sub_1417F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = (long long *)(*(void *)(v5 + 56) + 48 * v17);
    if (v37)
    {
      sub_34AF0(v25, v38);
    }
    else
    {
      sub_BFC68((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_141B50();
    sub_1412A0();
    uint64_t result = sub_141B70();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = (uint64_t)sub_34AF0(v38, (_OWORD *)(*(void *)(v7 + 56) + 48 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_BD4F0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_5830(&qword_17BE78);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_5830(&qword_17EE90);
  int v41 = a2;
  uint64_t v9 = sub_1417F0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  swift_retain();
  int64_t v16 = 0;
LABEL_8:
  if (v14)
  {
    unint64_t v18 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v19 = v18 | (v16 << 6);
    goto LABEL_22;
  }
  int64_t v20 = v16 + 1;
  if (__OFADD__(v16, 1)) {
    goto LABEL_42;
  }
  if (v20 >= v38)
  {
    swift_release();
    uint64_t v3 = v37;
    int64_t v21 = v39;
    if (v41)
    {
LABEL_37:
      uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
      if (v35 >= 64) {
        bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *int64_t v21 = -1 << v35;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    int64_t v21 = v39;
    unint64_t v22 = v39[v20];
    ++v16;
    if (v22) {
      goto LABEL_21;
    }
    int64_t v16 = v20 + 1;
    if (v20 + 1 >= v38) {
      goto LABEL_34;
    }
    unint64_t v22 = v39[v16];
    if (v22)
    {
LABEL_21:
      unint64_t v14 = (v22 - 1) & v22;
      unint64_t v19 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_22:
      char v24 = *(unsigned char *)(*(void *)(v8 + 48) + v19);
      uint64_t v25 = *(void *)(v40 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v19;
      if (v41) {
        sub_19914(v26, (uint64_t)v7, &qword_17BE78);
      }
      else {
        sub_AE204(v26, (uint64_t)v7);
      }
      sub_141B50();
      sub_1412A0();
      swift_bridgeObjectRelease();
      Swift::Int v27 = sub_141B70();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = v27 & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      while (++v30 != v32 || (v31 & 1) == 0)
      {
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
        if (v34 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
LABEL_7:
          *(void *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v10 + 48) + v17) = v24;
          sub_19914((uint64_t)v7, *(void *)(v10 + 56) + v25 * v17, &qword_17BE78);
          ++*(void *)(v10 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0xBD928);
    }
    int64_t v23 = v20 + 2;
    if (v23 < v38)
    {
      unint64_t v22 = v39[v23];
      if (!v22)
      {
        while (1)
        {
          int64_t v16 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_43;
          }
          if (v16 >= v38) {
            goto LABEL_34;
          }
          unint64_t v22 = v39[v16];
          ++v23;
          if (v22) {
            goto LABEL_21;
          }
        }
      }
      int64_t v16 = v23;
      goto LABEL_21;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v37;
    if (v41) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

_OWORD *sub_BD938(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_174B0(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_BD9A4(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_5830(&qword_17BE78);
  uint64_t result = sub_19914(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, &qword_17BE78);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

void *sub_BDA4C()
{
  uint64_t v1 = v0;
  sub_5830(&qword_17BFF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1417E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_5B50(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_174B0(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_BDC34()
{
  uint64_t v1 = v0;
  sub_5830(&qword_17C018);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1417E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    sub_BFC68(*(void *)(v2 + 56) + 48 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_34AF0(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_BDE20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17BE78);
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5830(&qword_17EE90);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1417E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v23 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    unint64_t v19 = *(void *)(v24 + 72) * v17;
    sub_AE204(*(void *)(v5 + 56) + v19, (uint64_t)v4);
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v18;
    uint64_t result = (void *)sub_19914((uint64_t)v4, *(void *)(v7 + 56) + v19, &qword_17BE78);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_BE07C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_141600();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_141B50();
        swift_bridgeObjectRetain();
        sub_1412A0();
        Swift::Int v11 = sub_141B70();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          int64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = (long long *)(v16 + 48 * v3);
          char v18 = (long long *)(v16 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 3))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *unint64_t v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_BE268(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_141600();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_141B50();
        sub_1412A0();
        swift_bridgeObjectRelease();
        uint64_t result = sub_141B70();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        Swift::Int v11 = (unsigned char *)(v10 + v3);
        unint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *Swift::Int v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_5830(&qword_17BE78) - 8) + 72);
        int64_t v15 = v14 * v3;
        uint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    JUMPOUT(0xBE500);
  }
  *(void *)(a2 + 16) = v24;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

_OWORD *sub_BE510(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_16F44(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_BDA4C();
      goto LABEL_7;
    }
    sub_BCEC8(v15, a4 & 1);
    unint64_t v21 = sub_16F44(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_141AE0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v19);
    return sub_174B0(a1, v19);
  }
LABEL_13:
  sub_BD938(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_BE664(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_17000(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_BDE20();
      goto LABEL_7;
    }
    sub_BD4F0(v13, a3 & 1);
    unint64_t v20 = sub_17000(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_141AE0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(sub_5830(&qword_17BE78) - 8) + 72) * v10;
    return sub_2D248(a1, v18);
  }
LABEL_13:

  return sub_BD9A4(v10, a2, a1, v16);
}

uint64_t sub_BE7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17EE68);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_13E5D0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_5830(&qword_17EE70);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_5830(&qword_17EE78);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_13E5F0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  int v59 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for DefaultCircuitBreaker();
  os_log_type_t v66 = &off_175A10;
  v64[0] = a2;
  swift_retain();
  uint64_t v20 = 0;
  if ((sub_18D10() & 1) == 0 || !a1) {
    goto LABEL_12;
  }
  swift_retain();
  uint64_t v21 = sub_141110();
  if (!v22)
  {
    swift_release();
    goto LABEL_11;
  }
  uint64_t v56 = v21;
  uint64_t v58 = v22;
  sub_140330();
  if (!sub_140310())
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_10;
  }
  sub_140300();
  uint64_t v57 = v18;
  swift_release();
  sub_1403B0();
  uint64_t v23 = v57;
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v16, 1, v17) == 1)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_release();
    sub_904C((uint64_t)v16, &qword_17EE78);
    goto LABEL_11;
  }
  uint64_t v55 = a1;
  uint64_t v24 = v23;
  uint64_t v25 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v59, v16, v17);
  sub_13E5E0();
  sub_13E5C0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v26 = sub_13E580();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v13, 1, v26) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_904C((uint64_t)v13, &qword_17EE70);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v17);
LABEL_11:
    uint64_t v20 = 0;
    goto LABEL_12;
  }
  uint64_t v29 = sub_13E570();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
  uint64_t v32 = v25;
  if (!sub_18F24(v25, v29, v31))
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_11;
  }
  uint64_t v63 = &_swiftEmptyDictionarySingleton;
  uint64_t v33 = v24;
  uint64_t v34 = v55;
  uint64_t v54 = v17;
  if (v29 == 28261 && v31 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    double v36 = COERCE_DOUBLE(sub_1403E0()) + 30.0;
    if (v37) {
      double v36 = 30.0;
    }
    if (fmod(v36, 60.0) == 0.0) {
      goto LABEL_25;
    }
    double v38 = COERCE_DOUBLE(sub_1403E0()) / 60.0 + 30.0;
    if (v39) {
      double v38 = 30.0;
    }
    if (fmod(v38, 60.0) == 0.0)
    {
LABEL_25:
      uint64_t v40 = sub_90A8(v64, v65);
      __chkstk_darwin(v40);
      *(&v53 - 2) = (uint64_t)&v63;
      *(&v53 - 1) = v34;
      sub_192AC();
    }
    goto LABEL_26;
  }
  char v35 = sub_141AA0();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_19;
  }
LABEL_26:
  double v41 = COERCE_DOUBLE(sub_1403E0());
  if ((v42 & 1) == 0 && v41 >= 3600.0)
  {
    uint64_t v43 = sub_90A8(v64, v65);
    __chkstk_darwin(v43);
    *(&v53 - 2) = (uint64_t)&v63;
    *(&v53 - 1) = v34;
    sub_192AC();
  }
  double v44 = COERCE_DOUBLE(sub_1403E0());
  if ((v45 & 1) == 0 && v44 >= 60.0)
  {
    double v46 = COERCE_DOUBLE(sub_1403E0());
    if ((v47 & 1) != 0 || v46 <= 3600.0)
    {
      uint64_t v48 = sub_90A8(v64, v65);
      __chkstk_darwin(v48);
      *(&v53 - 2) = (uint64_t)&v63;
      *(&v53 - 1) = v34;
      sub_192AC();
    }
  }
  swift_beginAccess();
  if (!v63[2])
  {
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v54);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_1403D0();
  uint64_t v49 = sub_5830(&qword_17BE78);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v6, 0, 1, v49);
  swift_beginAccess();
  sub_1976C((uint64_t)v6, 0);
  swift_endAccess();
  uint64_t v50 = swift_bridgeObjectRetain();
  sub_BC730(v50);
  swift_bridgeObjectRelease();
  sub_13E560();
  sub_1410E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_141100();
  sub_90A8(v61, v61[3]);
  sub_1410F0();
  swift_bridgeObjectRelease();
  sub_90A8(v60, v60[3]);
  uint64_t v51 = sub_141120();
  LODWORD(v20) = sub_BF838(v51, v52);
  swift_release();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v62);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v32, v54);
  _s20HandleIntentStrategyVwxx_1((uint64_t)v60);
  if (v20 == 4) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = v20;
  }
  _s20HandleIntentStrategyVwxx_1((uint64_t)v61);
  swift_bridgeObjectRelease();
LABEL_12:
  _s20HandleIntentStrategyVwxx_1((uint64_t)v64);
  return v20;
}

Swift::Int sub_BF788()
{
  return sub_141B70();
}

uint64_t sub_BF7D8()
{
  return sub_1412A0();
}

Swift::Int sub_BF7EC()
{
  return sub_141B70();
}

uint64_t sub_BF838(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_173FD0;
  v6._object = a2;
  unint64_t v4 = sub_141820(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_BF884()
{
  return sub_19684(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))&dispatch thunk of DialogDuration.minutesSeconds.getter, 2);
}

uint64_t sub_BF8B8()
{
  return sub_19684(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))&dispatch thunk of DialogDuration.descriptiveFractionalUnitsPeriod.getter, 3);
}

unint64_t sub_BF8EC()
{
  unint64_t result = qword_17EEA8;
  if (!qword_17EEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EEA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNaturalLanguageGeneration()
{
  return &type metadata for TimerNaturalLanguageGeneration;
}

uint64_t getEnumTagSinglePayload for TimerNaturalLanguageGeneration.TimerDurationPhrase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimerNaturalLanguageGeneration.TimerDurationPhrase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBFAACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNaturalLanguageGeneration.TimerDurationPhrase()
{
  return &type metadata for TimerNaturalLanguageGeneration.TimerDurationPhrase;
}

unsigned char *storeEnumTagSinglePayload for CircuitBreakerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xBFB80);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircuitBreakerError()
{
  return &type metadata for CircuitBreakerError;
}

unint64_t sub_BFBBC()
{
  unint64_t result = qword_17EEB8;
  if (!qword_17EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EEB8);
  }
  return result;
}

unint64_t sub_BFC14()
{
  unint64_t result = qword_17EEC0;
  if (!qword_17EEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17EEC0);
  }
  return result;
}

uint64_t sub_BFC68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for SearchForTimersCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17EEC8);
}

uint64_t sub_BFCEC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_BFD2C()
{
  sub_5830(&qword_17F3D0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_144F40;
  *(void *)(v1 + 32) = 0xD000000000000020;
  *(void *)(v1 + 40) = 0x8000000000149A50;
  *(unsigned char *)(v1 + 48) = *(unsigned char *)v0;
  *(void *)(v1 + 72) = &type metadata for Bool;
  *(void *)(v1 + 80) = 0x6E69577473726966;
  *(void *)(v1 + 88) = 0xEF657A6953776F64;
  sub_19914(v0 + 8, (uint64_t)v19, &qword_17B580);
  sub_19914((uint64_t)v19, (uint64_t)&v20, &qword_17B580);
  if (v21)
  {
    int v2 = 0;
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
    uint64_t v3 = 0;
  }
  else
  {
    int v2 = &type metadata for Double;
    uint64_t v3 = v20;
  }
  *(void *)(v1 + 96) = v3;
  *(void *)(v1 + 120) = v2;
  *(void *)(v1 + 128) = 0x676E6970756F7267;
  *(void *)(v1 + 136) = 0xE800000000000000;
  sub_19914(v0 + 24, (uint64_t)v18, &qword_17EF28);
  sub_19914((uint64_t)v18, (uint64_t)&v22, &qword_17EF28);
  uint64_t v4 = v22;
  if (v22)
  {
    uint64_t v5 = type metadata accessor for TimerTimerGrouping();
  }
  else
  {
    uint64_t v5 = 0;
    *(void *)(v1 + 152) = 0;
    *(void *)(v1 + 160) = 0;
  }
  *(void *)(v1 + 144) = v4;
  *(void *)(v1 + 168) = v5;
  *(void *)(v1 + 176) = 0xD000000000000016;
  *(void *)(v1 + 184) = 0x8000000000149AE0;
  *(unsigned char *)(v1 + 192) = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 216) = &type metadata for Bool;
  strcpy((char *)(v1 + 224), "isConclusion");
  *(unsigned char *)(v1 + 237) = 0;
  *(_WORD *)(v1 + 238) = -5120;
  *(unsigned char *)(v1 + 240) = *(unsigned char *)(v0 + 33);
  *(void *)(v1 + 264) = &type metadata for Bool;
  strcpy((char *)(v1 + 272), "isFirstWindow");
  *(_WORD *)(v1 + 286) = -4864;
  *(unsigned char *)(v1 + 288) = *(unsigned char *)(v0 + 34);
  *(void *)(v1 + 312) = &type metadata for Bool;
  strcpy((char *)(v1 + 320), "isLastWindow");
  *(unsigned char *)(v1 + 333) = 0;
  *(_WORD *)(v1 + 334) = -5120;
  *(unsigned char *)(v1 + 336) = *(unsigned char *)(v0 + 35);
  *(void *)(v1 + 360) = &type metadata for Bool;
  *(void *)(v1 + 368) = 0xD000000000000016;
  *(void *)(v1 + 376) = 0x8000000000149AA0;
  *(unsigned char *)(v1 + 384) = *(unsigned char *)(v0 + 36);
  *(void *)(v1 + 408) = &type metadata for Bool;
  *(void *)(v1 + 416) = 0xD00000000000001ALL;
  *(void *)(v1 + 424) = 0x8000000000149B00;
  *(unsigned char *)(v1 + 432) = *(unsigned char *)(v0 + 37);
  *(void *)(v1 + 456) = &type metadata for Bool;
  *(void *)(v1 + 464) = 0x736D657469;
  *(void *)(v1 + 472) = 0xE500000000000000;
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v6 = sub_5830(&qword_17C508);
  *(void *)(v1 + 480) = v17;
  *(void *)(v1 + 504) = v6;
  *(void *)(v1 + 512) = 0xD000000000000013;
  *(void *)(v1 + 520) = 0x8000000000149AC0;
  sub_19914(v0 + 48, (uint64_t)v16, &qword_17B580);
  sub_19914((uint64_t)v16, (uint64_t)&v23, &qword_17B580);
  if (v24)
  {
    BOOL v7 = 0;
    *(_OWORD *)(v1 + 536) = 0u;
    uint64_t v8 = 0;
  }
  else
  {
    BOOL v7 = &type metadata for Double;
    uint64_t v8 = v23;
  }
  *(void *)(v1 + 528) = v8;
  *(void *)(v1 + 552) = v7;
  *(void *)(v1 + 560) = 0x6574496C61746F74;
  *(void *)(v1 + 568) = 0xEA0000000000736DLL;
  sub_19914(v0 + 64, (uint64_t)v15, &qword_17B580);
  sub_19914((uint64_t)v15, (uint64_t)&v25, &qword_17B580);
  if (v26)
  {
    uint64_t v9 = 0;
    *(_OWORD *)(v1 + 584) = 0u;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v9 = &type metadata for Double;
    uint64_t v10 = v25;
  }
  *(void *)(v1 + 576) = v10;
  *(void *)(v1 + 600) = v9;
  *(void *)(v1 + 608) = 0x6953776F646E6977;
  *(void *)(v1 + 616) = 0xEA0000000000657ALL;
  sub_19914(v0 + 80, (uint64_t)v14, &qword_17B580);
  sub_19914((uint64_t)v14, (uint64_t)&v27, &qword_17B580);
  if (v28)
  {
    uint64_t v11 = 0;
    *(_OWORD *)(v1 + 632) = 0u;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v11 = &type metadata for Double;
    uint64_t v12 = v27;
  }
  *(void *)(v1 + 624) = v12;
  *(void *)(v1 + 648) = v11;
  sub_C19F8((uint64_t)v18);
  sub_C1A24((uint64_t)&v17);
  return v1;
}

uint64_t sub_C0128()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  BOOL v7 = (char *)&v43 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v43 - v8;
  sub_5830(&qword_17F3D0);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v10;
  *(_OWORD *)(v10 + 16) = xmmword_144F50;
  *(void *)(v10 + 32) = 0xD000000000000020;
  *(void *)(v10 + 40) = 0x8000000000149A50;
  *(unsigned char *)(v10 + 48) = *(unsigned char *)v0;
  *(void *)(v10 + 72) = &type metadata for Bool;
  *(void *)(v10 + 80) = 0x6E69577473726966;
  *(void *)(v10 + 88) = 0xEF657A6953776F64;
  char v12 = *(unsigned char *)(v0 + 16);
  char v45 = v4;
  if (v12)
  {
    uint64_t v13 = 0;
    *(void *)(v10 + 104) = 0;
    *(void *)(v10 + 112) = 0;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 8);
    uint64_t v13 = &type metadata for Double;
  }
  *(void *)(v10 + 96) = v14;
  *(void *)(v10 + 120) = v13;
  *(void *)(v10 + 128) = 0x676E6970756F7267;
  *(void *)(v10 + 136) = 0xE800000000000000;
  uint64_t v15 = *(void *)(v0 + 24);
  if (v15)
  {
    uint64_t v16 = type metadata accessor for TimerTimerGrouping();
    uint64_t v17 = v15;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v16 = 0;
    *(void *)(v11 + 152) = 0;
    *(void *)(v11 + 160) = 0;
  }
  *(void *)(v11 + 144) = v17;
  *(void *)(v11 + 168) = v16;
  *(void *)(v11 + 176) = 0xD000000000000019;
  *(void *)(v11 + 184) = 0x8000000000149A80;
  *(unsigned char *)(v11 + 192) = *(unsigned char *)(v0 + 32);
  *(void *)(v11 + 216) = &type metadata for Bool;
  strcpy((char *)(v11 + 224), "isConclusion");
  *(unsigned char *)(v11 + 237) = 0;
  *(_WORD *)(v11 + 238) = -5120;
  *(unsigned char *)(v11 + 240) = *(unsigned char *)(v0 + 33);
  *(void *)(v11 + 264) = &type metadata for Bool;
  strcpy((char *)(v11 + 272), "isFirstWindow");
  *(_WORD *)(v11 + 286) = -4864;
  *(unsigned char *)(v11 + 288) = *(unsigned char *)(v0 + 34);
  *(void *)(v11 + 312) = &type metadata for Bool;
  strcpy((char *)(v11 + 320), "isLastWindow");
  *(unsigned char *)(v11 + 333) = 0;
  *(_WORD *)(v11 + 334) = -5120;
  *(unsigned char *)(v11 + 336) = *(unsigned char *)(v0 + 35);
  *(void *)(v11 + 360) = &type metadata for Bool;
  *(void *)(v11 + 368) = 0xD000000000000016;
  *(void *)(v11 + 376) = 0x8000000000149AA0;
  *(unsigned char *)(v11 + 384) = *(unsigned char *)(v0 + 36);
  *(void *)(v11 + 408) = &type metadata for Bool;
  *(void *)(v11 + 416) = 0x736D657469;
  *(void *)(v11 + 424) = 0xE500000000000000;
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v19 = sub_5830(&qword_17C508);
  *(void *)(v11 + 432) = v18;
  *(void *)(v11 + 456) = v19;
  *(void *)(v11 + 464) = 0xD000000000000013;
  *(void *)(v11 + 472) = 0x8000000000149AC0;
  char v20 = *(unsigned char *)(v0 + 56);
  double v44 = v7;
  if (v20)
  {
    char v21 = 0;
    *(void *)(v11 + 488) = 0;
    *(void *)(v11 + 496) = 0;
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 48);
    char v21 = &type metadata for Double;
  }
  *(void *)(v11 + 480) = v22;
  *(void *)(v11 + 504) = v21;
  strcpy((char *)(v11 + 512), "requestedState");
  *(unsigned char *)(v11 + 527) = -18;
  uint64_t v23 = type metadata accessor for SearchForTimersHandledOtherMultiParameters(0);
  sub_8FE8(v0 + *(int *)(v23 + 56), (uint64_t)v9, &qword_17BE78);
  uint64_t v24 = sub_140500();
  uint64_t v25 = *(void *)(v24 - 8);
  double v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v46(v9, 1, v24) == 1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_904C((uint64_t)v9, &qword_17BE78);
    *(_OWORD *)(v11 + 528) = 0u;
    *(_OWORD *)(v11 + 544) = 0u;
  }
  else
  {
    *(void *)(v11 + 552) = v24;
    char v26 = sub_187EC((uint64_t *)(v11 + 528));
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 32))(v26, v9, v24);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = (int *)v23;
  uint64_t v28 = (uint64_t)v44;
  *(void *)(v11 + 560) = 0xD000000000000016;
  *(void *)(v11 + 568) = 0x80000000001483F0;
  uint64_t v29 = *(void *)(v0 + v27[15]);
  if (v29)
  {
    uint64_t v30 = sub_140430();
    uint64_t v31 = v29;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v30 = 0;
    *(_OWORD *)(v11 + 584) = 0u;
  }
  *(void *)(v11 + 576) = v31;
  *(void *)(v11 + 600) = v30;
  *(void *)(v11 + 608) = 0xD000000000000013;
  *(void *)(v11 + 616) = 0x80000000001483D0;
  sub_8FE8(v0 + v27[16], v28, &qword_17BE78);
  uint64_t v32 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
  if (v46((char *)v28, 1, v24) == 1)
  {
    swift_retain();
    sub_904C(v28, &qword_17BE78);
    *(_OWORD *)(v11 + 624) = 0u;
    *(_OWORD *)(v11 + 640) = 0u;
  }
  else
  {
    *(void *)(v11 + 648) = v24;
    uint64_t v33 = sub_187EC((uint64_t *)(v11 + 624));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 32))(v33, v28, v24);
    swift_retain();
  }
  uint64_t v34 = (uint64_t)v45;
  strcpy((char *)(v11 + 656), "requestedType");
  *(_WORD *)(v11 + 670) = -4864;
  sub_8FE8(v0 + v27[17], v34, &qword_17BE78);
  if (v32(v34, 1, v24) == 1)
  {
    sub_904C(v34, &qword_17BE78);
    *(_OWORD *)(v11 + 672) = 0u;
    *(_OWORD *)(v11 + 688) = 0u;
  }
  else
  {
    *(void *)(v11 + 696) = v24;
    char v35 = sub_187EC((uint64_t *)(v11 + 672));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 32))(v35, v34, v24);
  }
  *(void *)(v11 + 704) = 0x6574496C61746F74;
  *(void *)(v11 + 712) = 0xEA0000000000736DLL;
  double v36 = (uint64_t *)(v0 + v27[18]);
  if (v36[1])
  {
    char v37 = 0;
    *(_OWORD *)(v11 + 728) = 0u;
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = *v36;
    char v37 = &type metadata for Double;
  }
  *(void *)(v11 + 720) = v38;
  *(void *)(v11 + 744) = v37;
  *(void *)(v11 + 752) = 0x6953776F646E6977;
  *(void *)(v11 + 760) = 0xEA0000000000657ALL;
  char v39 = (uint64_t *)(v0 + v27[19]);
  if (v39[1])
  {
    uint64_t v40 = 0;
    *(_OWORD *)(v11 + 776) = 0u;
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v41 = *v39;
    uint64_t v40 = &type metadata for Double;
  }
  *(void *)(v11 + 768) = v41;
  *(void *)(v11 + 792) = v40;
  return v11;
}

uint64_t sub_C07AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_C0944()
{
  return type metadata accessor for SearchForTimersCATPatternsExecutor(0);
}

uint64_t sub_C094C(char a1, char a2, char a3, char a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 24) = a8;
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 16) = a7;
  *(unsigned char *)(v8 + 93) = a6;
  *(unsigned char *)(v8 + 92) = a5;
  *(unsigned char *)(v8 + 91) = a4;
  *(unsigned char *)(v8 + 90) = a3;
  *(unsigned char *)(v8 + 89) = a2;
  *(unsigned char *)(v8 + 88) = a1;
  *(void *)(v8 + 40) = type metadata accessor for SearchForTimersHandledOtherMultiParameters(0);
  *(void *)(v8 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_C0A04, 0, 0);
}

uint64_t sub_C0A04()
{
  uint64_t v2 = *(int **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v18 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16);
  char v16 = *(unsigned char *)(v0 + 92);
  char v17 = *(unsigned char *)(v0 + 93);
  char v14 = *(unsigned char *)(v0 + 90);
  char v15 = *(unsigned char *)(v0 + 91);
  char v13 = *(unsigned char *)(v0 + 89);
  char v4 = *(unsigned char *)(v0 + 88);
  uint64_t v5 = v1 + v2[14];
  uint64_t v6 = sub_140500();
  BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(v1 + v2[16], 1, 1, v6);
  v7(v1 + v2[17], 1, 1, v6);
  *(unsigned char *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 1;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = v13;
  *(unsigned char *)(v1 + 33) = v14;
  *(unsigned char *)(v1 + 34) = v15;
  *(unsigned char *)(v1 + 35) = v16;
  *(unsigned char *)(v1 + 36) = v17;
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 1;
  *(void *)(v1 + v2[15]) = 0;
  uint64_t v8 = v1 + v2[18];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = v1 + v2[19];
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  swift_bridgeObjectRetain();
  sub_3D7F8(v1, v18);
  uint64_t v10 = sub_C0128();
  *(void *)(v0 + 56) = v10;
  uint64_t v19 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_C0C30;
  return v19(0xD000000000000021, 0x8000000000149A20, v10);
}

uint64_t sub_C0C30(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_C0DF0;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_C0D7C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_C0D7C()
{
  sub_C1564(v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

uint64_t sub_C0DF0()
{
  sub_C1564(*(void *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_C0E60(char a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = a4;
  *(unsigned char *)(v4 + 73) = a2;
  *(unsigned char *)(v4 + 72) = a1;
  return _swift_task_switch(sub_C0E88, 0, 0);
}

uint64_t sub_C0E88()
{
  char v1 = *(unsigned char *)(v0 + 73);
  char v2 = *(unsigned char *)(v0 + 72);
  uint64_t v3 = sub_174C0(0, 0);
  *(void *)(v0 + 32) = v3;
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_142FB0;
  *(void *)(v4 + 32) = 0xD00000000000001ALL;
  *(void *)(v4 + 40) = 0x8000000000149B00;
  *(unsigned char *)(v4 + 48) = v2;
  *(void *)(v4 + 72) = &type metadata for Bool;
  strcpy((char *)(v4 + 80), "isSleepTimer");
  *(unsigned char *)(v4 + 93) = 0;
  *(_WORD *)(v4 + 94) = -5120;
  *(unsigned char *)(v4 + 96) = v1;
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(void *)(v4 + 128) = 0x72656D6974;
  *(void *)(v4 + 136) = 0xE500000000000000;
  *(void *)(v4 + 168) = type metadata accessor for TimerTimer(0);
  *(void *)(v4 + 144) = v3;
  uint64_t v7 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  void *v5 = v0;
  v5[1] = sub_58654;
  return v7(0xD00000000000001DLL, 0x8000000000147E20, v4);
}

uint64_t sub_C102C(char a1, char a2, char a3, char a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v12;
  *(void *)(v8 + 16) = a7;
  *(void *)(v8 + 24) = a8;
  *(unsigned char *)(v8 + 101) = a6;
  *(unsigned char *)(v8 + 100) = a5;
  *(unsigned char *)(v8 + 99) = a4;
  *(unsigned char *)(v8 + 98) = a3;
  *(unsigned char *)(v8 + 97) = a2;
  *(unsigned char *)(v8 + 96) = a1;
  *(void *)(v8 + 48) = type metadata accessor for SearchForTimersHandledOtherMultiParameters(0);
  *(void *)(v8 + 56) = swift_task_alloc();
  return _swift_task_switch(sub_C10E4, 0, 0);
}

uint64_t sub_C10E4()
{
  char v2 = *(int **)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 32);
  uint64_t v19 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 16);
  char v16 = *(unsigned char *)(v0 + 100);
  char v17 = *(unsigned char *)(v0 + 101);
  char v14 = *(unsigned char *)(v0 + 98);
  char v15 = *(unsigned char *)(v0 + 99);
  char v13 = *(unsigned char *)(v0 + 97);
  char v4 = *(unsigned char *)(v0 + 96);
  uint64_t v5 = v1 + v2[14];
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(v1 + v2[16], 1, 1, v6);
  v7(v1 + v2[17], 1, 1, v6);
  *(unsigned char *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 1;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = v13;
  *(unsigned char *)(v1 + 33) = v14;
  *(unsigned char *)(v1 + 34) = v15;
  *(unsigned char *)(v1 + 35) = v16;
  *(unsigned char *)(v1 + 36) = v17;
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 1;
  *(void *)(v1 + v2[15]) = 0;
  uint64_t v8 = v1 + v2[18];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = v1 + v2[19];
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  swift_bridgeObjectRetain();
  sub_4460C(v1, v18, v19);
  uint64_t v10 = sub_C0128();
  *(void *)(v0 + 64) = v10;
  uint64_t v20 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_C1314;
  return v20(0xD000000000000021, 0x8000000000149A20, v10);
}

uint64_t sub_C1314(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_C14D4;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_C1460;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_C1460()
{
  sub_C1564(v0[7]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[11];
  return v1(v2);
}

uint64_t sub_C14D4()
{
  sub_C1564(*(void *)(v0 + 56));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for SearchForTimersHandledOtherMultiParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17EF98);
}

uint64_t sub_C1564(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchForTimersHandledOtherMultiParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C15C0(char a1, char a2, char a3, char a4, char a5, char a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 136) = v11;
  *(_OWORD *)(v8 + 120) = v10;
  *(void *)(v8 + 112) = a8;
  *(unsigned char *)(v8 + 111) = a7;
  *(unsigned char *)(v8 + 110) = a6;
  *(unsigned char *)(v8 + 109) = a5;
  *(unsigned char *)(v8 + 108) = a4;
  *(unsigned char *)(v8 + 107) = a3;
  *(unsigned char *)(v8 + 106) = a2;
  *(unsigned char *)(v8 + 105) = a1;
  return _swift_task_switch(sub_C1610, 0, 0);
}

uint64_t sub_C1610()
{
  char v1 = *(unsigned char *)(v0 + 111);
  char v2 = *(unsigned char *)(v0 + 110);
  char v3 = *(unsigned char *)(v0 + 109);
  char v4 = *(unsigned char *)(v0 + 108);
  char v5 = *(unsigned char *)(v0 + 107);
  char v6 = *(unsigned char *)(v0 + 106);
  char v7 = *(unsigned char *)(v0 + 105);
  unint64_t v8 = *(void *)(*(void *)(v0 + 128) + 56);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1417D0();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v0 + 112);
  }
  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
    uint64_t v10 = swift_bridgeObjectRetain();
  }
  double v11 = (double)v9;
  *(unsigned char *)(v0 + 16) = v7;
  uint64_t v12 = *(void *)(v0 + 136);
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  *(void *)(v0 + 40) = v12;
  *(unsigned char *)(v0 + 48) = v6;
  *(unsigned char *)(v0 + 49) = v5;
  *(unsigned char *)(v0 + 50) = v4;
  *(unsigned char *)(v0 + 51) = v3;
  *(unsigned char *)(v0 + 52) = v2;
  *(unsigned char *)(v0 + 53) = v1;
  *(void *)(v0 + 56) = v10;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 72) = 1;
  *(double *)(v0 + 80) = v11;
  *(unsigned char *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 1;
  uint64_t v13 = sub_BFD2C();
  *(void *)(v0 + 144) = v13;
  char v16 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  char v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v14;
  *char v14 = v0;
  v14[1] = sub_C17C8;
  return v16(0xD00000000000001CLL, 0x8000000000147E00, v13);
}

uint64_t sub_C17C8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    char v5 = sub_C1988;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    char v5 = sub_C1914;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_C1914()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 168);
  return v1(v2);
}

uint64_t sub_C1988()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_C19F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_C1A24(uint64_t a1)
{
  return a1;
}

void *sub_C1A50(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    *(unsigned char *)(a1 + 36) = *((unsigned char *)a2 + 36);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a3[14];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_140500();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_5830(&qword_17BE78);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[16];
    *(void *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_retain();
    if (v13(v18, 1, v11))
    {
      uint64_t v19 = sub_5830(&qword_17BE78);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[17];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v13((char *)a2 + v20, 1, v11))
    {
      uint64_t v23 = sub_5830(&qword_17BE78);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v21, v22, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    uint64_t v24 = a3[18];
    uint64_t v25 = a3[19];
    char v26 = (char *)v4 + v24;
    uint64_t v27 = (uint64_t)a2 + v24;
    *(void *)char v26 = *(void *)v27;
    v26[8] = *(unsigned char *)(v27 + 8);
    uint64_t v28 = (char *)v4 + v25;
    uint64_t v29 = (uint64_t)a2 + v25;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = *(unsigned char *)(v29 + 8);
  }
  return v4;
}

uint64_t sub_C1D90(uint64_t a1, int *a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[14];
  uint64_t v5 = sub_140500();
  uint64_t v11 = *(void *)(v5 - 8);
  char v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v5);
  }
  swift_release();
  uint64_t v7 = a1 + a2[16];
  if (!v6(v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v5);
  }
  uint64_t v8 = a1 + a2[17];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v8, 1, v5);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v5);
  }
  return result;
}

uint64_t sub_C1F0C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = a3[14];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  swift_retain();
  if (v12(v16, 1, v10))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[17];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  if (v12((const void *)(a2 + v18), 1, v10))
  {
    uint64_t v21 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[18];
  uint64_t v23 = a3[19];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  return a1;
}

uint64_t sub_C21FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a3[14];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_140500();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_5830(&qword_17BE78);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_retain();
  swift_release();
  uint64_t v17 = a3[16];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v13((void *)(a1 + v17), 1, v11);
  int v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v18, v19, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    uint64_t v22 = sub_5830(&qword_17BE78);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v18, v19, v11);
LABEL_13:
  uint64_t v23 = a3[17];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  int v26 = v13((void *)(a1 + v23), 1, v11);
  int v27 = v13(v25, 1, v11);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v24, v25, v11);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v24, v11);
    goto LABEL_18;
  }
  if (v27)
  {
LABEL_18:
    uint64_t v28 = sub_5830(&qword_17BE78);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v24, v25, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
LABEL_19:
  uint64_t v29 = a3[18];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v32 = *v31;
  *(unsigned char *)(v30 + 8) = *((unsigned char *)v31 + 8);
  *(void *)uint64_t v30 = v32;
  uint64_t v33 = a3[19];
  uint64_t v34 = a1 + v33;
  char v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  *(unsigned char *)(v34 + 8) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  return a1;
}

uint64_t sub_C2648(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = a3[14];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  int v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[17];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (const void *)(a2 + v18);
  if (v12((const void *)(a2 + v18), 1, v10))
  {
    uint64_t v21 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[18];
  uint64_t v23 = a3[19];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  return a1;
}

uint64_t sub_C2920(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = a3[14];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_release();
  uint64_t v15 = a3[16];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_5830(&qword_17BE78);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[17];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  int v24 = v11((void *)(a1 + v21), 1, v9);
  int v25 = v11(v23, 1, v9);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v22, v23, v9);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v22, v9);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    uint64_t v26 = sub_5830(&qword_17BE78);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v22, v23, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
LABEL_19:
  uint64_t v27 = a3[18];
  uint64_t v28 = a3[19];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = a1 + v28;
  uint64_t v32 = a2 + v28;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  return a1;
}

uint64_t sub_C2D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C2D64);
}

uint64_t sub_C2D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17BE78);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_C2E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C2E2C);
}

uint64_t sub_C2E2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_C2ED8()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *_s11descr1735C9O20HandleIntentStrategyVMa()
{
  return &_s11descr1735C9O20HandleIntentStrategyVN;
}

uint64_t sub_C2FBC()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F008);
  sub_33D8(v0, (uint64_t)qword_17F008);
  return sub_140E60();
}

uint64_t sub_C3008(uint64_t a1, uint64_t a2)
{
  v2[36] = a1;
  v2[37] = a2;
  uint64_t v3 = sub_13F1E0();
  v2[38] = v3;
  v2[39] = *(void *)(v3 - 8);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  v2[43] = swift_task_alloc();
  sub_5830(&qword_17C4A0);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  uint64_t v4 = sub_140730();
  v2[47] = v4;
  v2[48] = *(void *)(v4 - 8);
  v2[49] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v2[50] = v5;
  v2[51] = *(void *)(v5 - 8);
  v2[52] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v2[53] = v6;
  v2[54] = *(void *)(v6 - 8);
  v2[55] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v2[56] = v7;
  v2[57] = *(void *)(v7 - 8);
  v2[58] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[59] = v8;
  v2[60] = *(void *)(v8 - 8);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  v2[63] = swift_task_alloc();
  v2[64] = swift_task_alloc();
  uint64_t v9 = sub_13F3C0();
  v2[65] = v9;
  v2[66] = *(void *)(v9 - 8);
  v2[67] = swift_task_alloc();
  uint64_t v10 = sub_13EFF0();
  v2[68] = v10;
  v2[69] = *(void *)(v10 - 8);
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  unsigned char v2[72] = swift_task_alloc();
  return _swift_task_switch(sub_C3470, 0, 0);
}

uint64_t sub_C3470()
{
  if (qword_17B280 != -1) {
    swift_once();
  }
  *(void *)(v0 + 584) = sub_33D8(*(void *)(v0 + 400), (uint64_t)qword_17F008);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "PauseTimer.HandleIntentStrategy.makeIntentHandledResponse() called", v3, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17F070);
  uint64_t v4 = (void *)sub_13F140();
  id v5 = [v4 pausedTimers];

  if (!v5) {
    goto LABEL_66;
  }
  sub_140EA0();
  unint64_t v6 = sub_141310();
  *(void *)(v0 + 592) = v6;

  unint64_t v7 = v6 >> 62;
  if (!(v6 >> 62))
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
    goto LABEL_65;
  }
  swift_bridgeObjectRetain();
  if (!sub_1417D0())
  {
LABEL_65:
    swift_bridgeObjectRelease_n();
LABEL_66:
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v96 = 3;
    swift_willThrow();
LABEL_67:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v97 = *(uint64_t (**)(void))(v0 + 8);
    return v97();
  }
LABEL_8:
  unint64_t v9 = v6 & 0xC000000000000001;
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v10 = (id)sub_1416A0();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
LABEL_72:
      swift_once();
      goto LABEL_52;
    }
    id v10 = *(id *)(v6 + 32);
  }
  uint64_t v11 = v10;
  *(void *)(v0 + 600) = v10;
  uint64_t v12 = *(void *)(v0 + 576);
  swift_bridgeObjectRelease();
  sub_5830(&qword_17BF00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142E80;
  *(void *)(inited + 32) = v11;
  unint64_t v109 = inited;
  sub_141330();
  id v14 = v11;
  sub_15E9C(v109, v12);
  swift_bridgeObjectRelease();
  id v15 = [v14 identifier];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_141250();
    uint64_t v19 = v18;

    if (v7)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1417D0();
      swift_bridgeObjectRelease();
      if (v20 != 1) {
        goto LABEL_14;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)) != 1)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    uint64_t v21 = *(void *)(v0 + 536);
    uint64_t v22 = *(void *)(v0 + 528);
    uint64_t v23 = *(void *)(v0 + 520);
    sub_33C74(v17, v19, v21);
    swift_bridgeObjectRelease();
    sub_13EF30();
    uint64_t v24 = v23;
    unint64_t v9 = v6 & 0xC000000000000001;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v24);
  }
LABEL_17:
  unint64_t v25 = swift_bridgeObjectRetain();
  *(void *)(v0 + 608) = sub_5311C(v25);
  swift_bridgeObjectRelease();
  sub_13EC50();
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  }
  *(void *)(v0 + 616) = v26;
  if (v26 == 1)
  {
    sub_140DF0();
    sub_140DE0();
    uint64_t v27 = *(void *)(v0 + 240);
    uint64_t v28 = *(void *)(v0 + 248);
    sub_90A8((void *)(v0 + 216), v27);
    if (v9)
    {
      swift_bridgeObjectRetain();
      id v29 = (id)sub_1416A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v29 = *(id *)(v6 + 32);
    }
    id v66 = [v29 identifier];

    if (v66)
    {
      uint64_t v67 = sub_141250();
      uint64_t v69 = v68;
    }
    else
    {
      uint64_t v67 = 0;
      uint64_t v69 = 0;
    }
    *(void *)(v0 + 624) = v69;
    unint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v70;
    *unint64_t v70 = v0;
    v70[1] = sub_C435C;
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v67, v69, v27, v28);
  }
  *(_OWORD *)(v0 + 656) = 0u;
  uint64_t v30 = *(void *)(v0 + 432);
  uint64_t v31 = *(void *)(v0 + 440);
  uint64_t v32 = *(void *)(v0 + 416);
  uint64_t v98 = *(void *)(v0 + 424);
  uint64_t v33 = *(void *)(v0 + 408);
  uint64_t v100 = *(void *)(v0 + 400);
  uint64_t v102 = *(void *)(v0 + 584);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 96), *(void *)(v0 + 120));
  sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v31, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v102, v100);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  char v34 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  if (v34)
  {
    id v35 = sub_79174(*(void *)(v0 + 592), 13);
    *(void *)(v0 + 792) = v35;
    swift_bridgeObjectRelease();
    if (v35)
    {
      uint64_t v36 = self;
      *(void *)(v0 + 272) = 0;
      id v37 = [v36 archivedDataWithRootObject:v35 requiringSecureCoding:1 error:v0 + 272];
      uint64_t v38 = *(void **)(v0 + 272);
      if (v37)
      {
        char v39 = v37;
        id v40 = v38;
        uint64_t v41 = sub_13E4D0();
        uint64_t v43 = v42;

        *(void *)(v0 + 800) = v41;
        *(void *)(v0 + 808) = v43;
        if (qword_17B158 != -1) {
          swift_once();
        }
        uint64_t v44 = *(void *)(v0 + 296);
        char v45 = (void *)swift_task_alloc();
        *(void *)(v0 + 816) = v45;
        v45[2] = v41;
        v45[3] = v43;
        v45[4] = v44;
        double v46 = (void *)swift_task_alloc();
        *(void *)(v0 + 824) = v46;
        *double v46 = v0;
        v46[1] = sub_C6724;
        uint64_t v47 = *(void *)(v0 + 608);
        return sub_134F9C(v47, (uint64_t)sub_C9BD4, (uint64_t)v45);
      }
      uint64_t v90 = *(void *)(v0 + 552);
      uint64_t v106 = *(void *)(v0 + 544);
      uint64_t v108 = *(void *)(v0 + 576);
      uint64_t v104 = *(void *)(v0 + 512);
      uint64_t v91 = *(void *)(v0 + 480);
      int v99 = *(void **)(v0 + 600);
      uint64_t v101 = *(void *)(v0 + 472);
      uint64_t v92 = *(void *)(v0 + 456);
      uint64_t v93 = *(void *)(v0 + 464);
      uint64_t v94 = *(void *)(v0 + 448);
      id v95 = v38;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v94);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v104, v101);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v108, v106);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v79 = sub_141160();
      uint64_t v80 = sub_141480();
      if (os_log_type_enabled(v79, (os_log_type_t)v80))
      {
        uint64_t v81 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v81 = 0;
        _os_log_impl(&dword_0, v79, (os_log_type_t)v80, "Could not get timer action from timer.", v81, 2u);
        swift_slowDealloc();
      }
      uint64_t v82 = *(void **)(v0 + 600);
      uint64_t v83 = *(void *)(v0 + 552);
      uint64_t v105 = *(void *)(v0 + 544);
      uint64_t v107 = *(void *)(v0 + 576);
      uint64_t v103 = *(void *)(v0 + 512);
      uint64_t v85 = *(void *)(v0 + 472);
      uint64_t v84 = *(void *)(v0 + 480);
      uint64_t v86 = *(void *)(v0 + 456);
      uint64_t v87 = *(void *)(v0 + 464);
      uint64_t v88 = *(void *)(v0 + 448);

      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      *os_log_type_t v89 = 1;
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v103, v85);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v107, v105);
    }
    goto LABEL_67;
  }
  uint64_t v50 = *(void *)(v0 + 384);
  uint64_t v49 = *(void *)(v0 + 392);
  uint64_t v51 = *(void *)(v0 + 376);
  sub_140720();
  BOOL v52 = sub_1406C0();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
  if (v52)
  {
    uint64_t v53 = sub_141160();
    os_log_type_t v54 = sub_141480();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl(&dword_0, v53, v54, "[PauseTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer RF 2.0 path", v55, 2u);
      swift_slowDealloc();
    }

    uint64_t v56 = *(void *)(v0 + 616);
    if (v56)
    {
      sub_470FC(0, v56 & ~(v56 >> 63), 0);
      if (v56 < 0) {
        __break(1u);
      }
      uint64_t v57 = 0;
      uint64_t v58 = *(void *)(v0 + 336);
      uint64_t v59 = *(void *)(v0 + 592) + 32;
      do
      {
        if ((*(void *)(v0 + 592) & 0xC000000000000001) != 0) {
          id v60 = (id)sub_1416A0();
        }
        else {
          id v60 = *(id *)(v59 + 8 * v57);
        }
        os_log_type_t v61 = v60;
        sub_1B94C(*(void **)(v0 + 344));

        unint64_t v63 = _swiftEmptyArrayStorage[2];
        unint64_t v62 = _swiftEmptyArrayStorage[3];
        if (v63 >= v62 >> 1) {
          sub_470FC(v62 > 1, v63 + 1, 1);
        }
        uint64_t v64 = *(void *)(v0 + 616);
        uint64_t v65 = *(void *)(v0 + 344);
        ++v57;
        _swiftEmptyArrayStorage[2] = v63 + 1;
        sub_A4B7C(v65, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v63, type metadata accessor for SiriTimerSnippetModel);
      }
      while (v57 != v64);
    }
    uint64_t v73 = *(void **)(v0 + 368);
    *uint64_t v73 = _swiftEmptyArrayStorage;
    uint64_t v74 = type metadata accessor for SiriTimePluginModel(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
    if (qword_17B148 != -1) {
      swift_once();
    }
    uint64_t v75 = *(void *)(v0 + 608);
    sub_5830(&qword_17F3D0);
    uint64_t v76 = swift_allocObject();
    *(void *)(v0 + 672) = v76;
    *(_OWORD *)(v76 + 16) = xmmword_142D50;
    strcpy((char *)(v76 + 32), "pausedTimers");
    *(unsigned char *)(v76 + 45) = 0;
    *(_WORD *)(v76 + 46) = -5120;
    *(void *)(v76 + 72) = sub_5830(&qword_17C508);
    *(void *)(v76 + 48) = v75;
    uint64_t v77 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
    swift_bridgeObjectRetain();
    os_log_type_t v78 = (void *)swift_task_alloc();
    *(void *)(v0 + 680) = v78;
    *os_log_type_t v78 = v0;
    v78[1] = sub_C4F44;
    return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                                + v77))(0xD000000000000020, 0x8000000000149C30, v76);
  }
  swift_bridgeObjectRelease();
  if (qword_17B158 != -1) {
    goto LABEL_72;
  }
LABEL_52:
  uint64_t v71 = (void *)swift_task_alloc();
  *(void *)(v0 + 752) = v71;
  void *v71 = v0;
  v71[1] = sub_C60B8;
  uint64_t v72 = *(void *)(v0 + 608);
  return sub_1353D8(v72);
}