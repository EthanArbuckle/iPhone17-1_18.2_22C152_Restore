uint64_t sub_C435C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *v2;
  *(void *)(v3 + 640) = a1;
  *(void *)(v3 + 648) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_C44AC, 0, 0);
}

uint64_t sub_C44AC()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 640);
  *(void *)(v0 + 664) = v1;
  *(void *)(v0 + 656) = v2;
  uint64_t v72 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v67 = *(void *)(v0 + 440);
  uint64_t v68 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v70 = *(void *)(v0 + 400);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 96), *(void *)(v0 + 120));
  int v6 = sub_13EC10() & (v1 != 0);
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v67, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v72, v70);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  char v7 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  if ((v7 & 1) == 0 || v6)
  {
    uint64_t v23 = *(void *)(v0 + 384);
    uint64_t v22 = *(void *)(v0 + 392);
    uint64_t v24 = *(void *)(v0 + 376);
    sub_140720();
    BOOL v25 = sub_1406C0();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    if (v25)
    {
      v26 = sub_141160();
      os_log_type_t v27 = sub_141480();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_0, v26, v27, "[PauseTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer RF 2.0 path", v28, 2u);
        swift_slowDealloc();
      }

      if (v6)
      {
        uint64_t v29 = *(void *)(v0 + 368);
        uint64_t v30 = type metadata accessor for SiriTimePluginModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
      }
      else
      {
        uint64_t v44 = *(void *)(v0 + 616);
        if (v44)
        {
          sub_470FC(0, v44 & ~(v44 >> 63), 0);
          if (v44 < 0) {
            __break(1u);
          }
          uint64_t v45 = 0;
          uint64_t v46 = *(void *)(v0 + 336);
          uint64_t v47 = *(void *)(v0 + 592) + 32;
          do
          {
            if ((*(void *)(v0 + 592) & 0xC000000000000001) != 0) {
              id v48 = (id)sub_1416A0();
            }
            else {
              id v48 = *(id *)(v47 + 8 * v45);
            }
            v49 = v48;
            sub_1B94C(*(void **)(v0 + 344));

            unint64_t v51 = _swiftEmptyArrayStorage[2];
            unint64_t v50 = _swiftEmptyArrayStorage[3];
            if (v51 >= v50 >> 1) {
              sub_470FC(v50 > 1, v51 + 1, 1);
            }
            uint64_t v52 = *(void *)(v0 + 616);
            uint64_t v53 = *(void *)(v0 + 344);
            ++v45;
            _swiftEmptyArrayStorage[2] = v51 + 1;
            sub_A4B7C(v53, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v51, type metadata accessor for SiriTimerSnippetModel);
          }
          while (v45 != v52);
        }
        v54 = *(void **)(v0 + 368);
        void *v54 = _swiftEmptyArrayStorage;
        uint64_t v55 = type metadata accessor for SiriTimePluginModel(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
      }
      if (qword_17B148 != -1) {
        swift_once();
      }
      uint64_t v56 = *(void *)(v0 + 608);
      sub_5830(&qword_17F3D0);
      uint64_t v57 = swift_allocObject();
      *(void *)(v0 + 672) = v57;
      *(_OWORD *)(v57 + 16) = xmmword_142D50;
      strcpy((char *)(v57 + 32), "pausedTimers");
      *(unsigned char *)(v57 + 45) = 0;
      *(_WORD *)(v57 + 46) = -5120;
      *(void *)(v57 + 72) = sub_5830(&qword_17C508);
      *(void *)(v57 + 48) = v56;
      uint64_t v58 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_bridgeObjectRetain();
      v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 680) = v59;
      void *v59 = v0;
      v59[1] = sub_C4F44;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                                  + v58))(0xD000000000000020, 0x8000000000149C30, v57);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_17B158 != -1) {
        swift_once();
      }
      v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 752) = v31;
      void *v31 = v0;
      v31[1] = sub_C60B8;
      uint64_t v32 = *(void *)(v0 + 608);
      return sub_1353D8(v32);
    }
  }
  else
  {
    id v8 = sub_79174(*(void *)(v0 + 592), 13);
    *(void *)(v0 + 792) = v8;
    swift_bridgeObjectRelease();
    if (v8)
    {
      v9 = self;
      *(void *)(v0 + 272) = 0;
      id v10 = [v9 archivedDataWithRootObject:v8 requiringSecureCoding:1 error:v0 + 272];
      v11 = *(void **)(v0 + 272);
      if (v10)
      {
        v12 = v10;
        id v13 = v11;
        uint64_t v14 = sub_13E4D0();
        uint64_t v16 = v15;

        *(void *)(v0 + 800) = v14;
        *(void *)(v0 + 808) = v16;
        if (qword_17B158 != -1) {
          swift_once();
        }
        uint64_t v17 = *(void *)(v0 + 296);
        v18 = (void *)swift_task_alloc();
        *(void *)(v0 + 816) = v18;
        v18[2] = v14;
        v18[3] = v16;
        v18[4] = v17;
        v19 = (void *)swift_task_alloc();
        *(void *)(v0 + 824) = v19;
        void *v19 = v0;
        v19[1] = sub_C6724;
        uint64_t v20 = *(void *)(v0 + 608);
        return sub_134F9C(v20, (uint64_t)sub_C9BD4, (uint64_t)v18);
      }
      uint64_t v60 = *(void *)(v0 + 552);
      uint64_t v76 = *(void *)(v0 + 544);
      uint64_t v78 = *(void *)(v0 + 576);
      uint64_t v74 = *(void *)(v0 + 512);
      uint64_t v61 = *(void *)(v0 + 480);
      v69 = *(void **)(v0 + 600);
      uint64_t v71 = *(void *)(v0 + 472);
      uint64_t v62 = *(void *)(v0 + 456);
      uint64_t v63 = *(void *)(v0 + 464);
      uint64_t v64 = *(void *)(v0 + 448);
      id v65 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v64);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v74, v71);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v78, v76);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = sub_141160();
      os_log_type_t v34 = sub_141480();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_0, v33, v34, "Could not get timer action from timer.", v35, 2u);
        swift_slowDealloc();
      }
      v36 = *(void **)(v0 + 600);
      uint64_t v37 = *(void *)(v0 + 552);
      uint64_t v75 = *(void *)(v0 + 544);
      uint64_t v77 = *(void *)(v0 + 576);
      uint64_t v73 = *(void *)(v0 + 512);
      uint64_t v39 = *(void *)(v0 + 472);
      uint64_t v38 = *(void *)(v0 + 480);
      uint64_t v40 = *(void *)(v0 + 456);
      uint64_t v41 = *(void *)(v0 + 464);
      uint64_t v42 = *(void *)(v0 + 448);

      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      unsigned char *v43 = 1;
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v73, v39);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v77, v75);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
}

uint64_t sub_C4F44(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 688) = a1;
  *(void *)(v3 + 696) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_C5630;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_C50A4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_C50A4()
{
  uint64_t v41 = v0;
  unint64_t v1 = *(void *)(v0 + 664);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_141160();
    os_log_type_t v3 = sub_141480();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = *(void *)(v0 + 656);
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 264) = sub_58C0(v4, v1, &v40);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v2, v3, "[PauseTimer.HandleIntentStrategy.makeIntentHandledResponse] We have a live activity: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v10 = *(void *)(v0 + 576);
    uint64_t v11 = *(void *)(v0 + 568);
    uint64_t v12 = *(void *)(v0 + 552);
    uint64_t v13 = *(void *)(v0 + 544);
    uint64_t v15 = *(void *)(v0 + 360);
    uint64_t v14 = *(void *)(v0 + 368);
    sub_13EC50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v10, v13);
    sub_4ED1C(v14, v15);
    uint64_t v16 = type metadata accessor for SiriTimePluginModel(0);
    int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16);
    uint64_t v18 = *(void *)(v0 + 360);
    if (v17 == 1)
    {
      sub_904C(*(void *)(v0 + 360), &qword_17C4A0);
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      *(void *)(v0 + 88) = 0;
    }
    else
    {
      *(void *)(v0 + 80) = v16;
      *(void *)(v0 + 88) = sub_1BD1C();
      v19 = sub_187EC((uint64_t *)(v0 + 56));
      sub_A4B7C(v18, (uint64_t)v19, type metadata accessor for SiriTimePluginModel);
    }
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 704) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_C586C;
    uint64_t v21 = *(void *)(v0 + 664);
    uint64_t v22 = *(void *)(v0 + 656);
    uint64_t v23 = *(void *)(v0 + 568);
    uint64_t v24 = *(void *)(v0 + 504);
    uint64_t v25 = *(void *)(v0 + 464);
    uint64_t v26 = *(void *)(v0 + 288);
    unint64_t v43 = 0x8000000000148BF0;
    uint64_t v27 = v0 + 56;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = *(void *)(v0 + 616);
      v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v9 = 134217984;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 280) = v8;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v6, v7, "[PauseTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer snippet model for %ld timers.", v9, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v28 = *(void *)(v0 + 576);
    uint64_t v29 = *(void *)(v0 + 560);
    uint64_t v30 = *(void *)(v0 + 552);
    uint64_t v31 = *(void *)(v0 + 544);
    uint64_t v32 = *(void *)(v0 + 368);
    uint64_t v33 = *(void *)(v0 + 352);
    sub_13EC50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v28, v31);
    sub_4ED1C(v32, v33);
    uint64_t v34 = type metadata accessor for SiriTimePluginModel(0);
    int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34);
    uint64_t v36 = *(void *)(v0 + 352);
    if (v35 == 1)
    {
      sub_904C(*(void *)(v0 + 352), &qword_17C4A0);
      *(_OWORD *)(v0 + 176) = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      *(void *)(v0 + 208) = 0;
    }
    else
    {
      *(void *)(v0 + 200) = v34;
      *(void *)(v0 + 208) = sub_1BD1C();
      uint64_t v37 = sub_187EC((uint64_t *)(v0 + 176));
      sub_A4B7C(v36, (uint64_t)v37, type metadata accessor for SiriTimePluginModel);
    }
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 728) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_C5CA0;
    uint64_t v23 = *(void *)(v0 + 560);
    uint64_t v24 = *(void *)(v0 + 496);
    uint64_t v25 = *(void *)(v0 + 464);
    uint64_t v26 = *(void *)(v0 + 288);
    unint64_t v43 = 0x8000000000148BF0;
    uint64_t v27 = v0 + 176;
    uint64_t v22 = 0;
    uint64_t v21 = 0;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v26, v24, v23, v27, v25, v22, v21, 0xD000000000000018);
}

uint64_t sub_C5630()
{
  unint64_t v1 = (void *)v0[75];
  uint64_t v2 = v0[69];
  uint64_t v12 = v0[68];
  uint64_t v13 = v0[72];
  uint64_t v3 = v0[60];
  uint64_t v10 = v0[59];
  uint64_t v11 = v0[64];
  uint64_t v4 = v0[57];
  uint64_t v9 = v0[58];
  uint64_t v5 = v0[56];
  uint64_t v6 = v0[46];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_904C(v6, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_C586C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 56;
  uint64_t v3 = *(void *)(*v0 + 568);
  uint64_t v4 = *(void *)(*v0 + 552);
  uint64_t v5 = *(void *)(*v0 + 544);
  uint64_t v6 = *(void *)(*v0 + 504);
  uint64_t v7 = *(void *)(*v0 + 480);
  uint64_t v8 = *(void *)(*v0 + 472);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(void *)(v1 + 712) = v9;
  *(void *)(v1 + 720) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v6, v8);
  sub_904C(v2, &qword_17C350);
  return _swift_task_switch(sub_C5A9C, 0, 0);
}

uint64_t sub_C5A9C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 712);
  uint64_t v2 = *(void **)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v7 = *(void *)(v0 + 456);
  uint64_t v8 = *(void *)(v0 + 368);

  sub_904C(v8, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v1(v3, v4);
  (*(void (**)(void, void))(*(void *)(v0 + 552) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 544));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_C5CA0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 176;
  uint64_t v3 = *(void *)(*v0 + 560);
  uint64_t v4 = *(void *)(*v0 + 552);
  uint64_t v5 = *(void *)(*v0 + 544);
  uint64_t v6 = *(void *)(*v0 + 496);
  uint64_t v7 = *(void *)(*v0 + 480);
  uint64_t v8 = *(void *)(*v0 + 472);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(void *)(v1 + 736) = v9;
  *(void *)(v1 + 744) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v6, v8);
  sub_904C(v2, &qword_17C350);
  return _swift_task_switch(sub_C5EB4, 0, 0);
}

uint64_t sub_C5EB4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
  uint64_t v2 = *(void **)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v7 = *(void *)(v0 + 456);
  uint64_t v8 = *(void *)(v0 + 368);

  sub_904C(v8, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v1(v3, v4);
  (*(void (**)(void, void))(*(void *)(v0 + 552) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 544));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_C60B8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 760) = a1;
  *(void *)(v3 + 768) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_C6DD8;
  }
  else
  {
    uint64_t v4 = sub_C6220;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_C6220()
{
  uint64_t v1 = v0[83];
  uint64_t v2 = v0[82];
  uint64_t v3 = v0[72];
  (*(void (**)(void, void, void))(v0[60] + 16))(v0[61], v0[64], v0[59]);
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v3;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[97] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_C6380;
  uint64_t v6 = v0[58];
  uint64_t v7 = v0[41];
  uint64_t v8 = v0[36];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v8, v7, v6);
}

uint64_t sub_C6380()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 784) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[95];
  (*(void (**)(void, void))(v2[39] + 8))(v2[41], v2[38]);

  if (v0) {
    uint64_t v4 = sub_C6FD0;
  }
  else {
    uint64_t v4 = sub_C6534;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_C6534()
{
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v5 = *(void *)(v0 + 456);
  uint64_t v4 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 448);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(*(void *)(v0 + 552) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 544));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_C6724(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 832) = a1;
  *(void *)(v3 + 840) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_C71C8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = sub_C68C0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_C68C0()
{
  uint64_t v1 = v0[83];
  uint64_t v2 = v0[82];
  uint64_t v3 = v0[72];
  (*(void (**)(void, void, void))(v0[60] + 16))(v0[61], v0[64], v0[59]);
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v3;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[106] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_C6A20;
  uint64_t v6 = v0[58];
  uint64_t v7 = v0[40];
  uint64_t v8 = v0[36];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v8, v7, v6);
}

uint64_t sub_C6A20()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 856) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[104];
  (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);

  if (v0) {
    uint64_t v4 = sub_C73D4;
  }
  else {
    uint64_t v4 = sub_C6BD4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_C6BD4()
{
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = (void *)v0[75];
  uint64_t v3 = v0[64];
  uint64_t v4 = v0[59];
  uint64_t v5 = v0[60];
  uint64_t v7 = v0[57];
  uint64_t v6 = v0[58];
  uint64_t v8 = v0[56];
  sub_34B88(v0[100], v0[101]);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(void, void))(v0[69] + 8))(v0[72], v0[68]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_C6DD8()
{
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void *)(v0 + 552);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 480);
  uint64_t v8 = *(void *)(v0 + 456);
  uint64_t v7 = *(void *)(v0 + 464);
  uint64_t v9 = *(void *)(v0 + 448);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_C6FD0()
{
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void *)(v0 + 552);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 480);
  uint64_t v8 = *(void *)(v0 + 456);
  uint64_t v7 = *(void *)(v0 + 464);
  uint64_t v9 = *(void *)(v0 + 448);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_C71C8()
{
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = (void *)v0[75];
  uint64_t v3 = v0[69];
  uint64_t v12 = v0[68];
  uint64_t v13 = v0[72];
  uint64_t v4 = v0[64];
  uint64_t v6 = v0[59];
  uint64_t v5 = v0[60];
  uint64_t v7 = v0[57];
  uint64_t v8 = v0[58];
  uint64_t v9 = v0[56];
  sub_34B88(v0[100], v0[101]);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C73D4()
{
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = (void *)v0[75];
  uint64_t v3 = v0[69];
  uint64_t v12 = v0[68];
  uint64_t v13 = v0[72];
  uint64_t v4 = v0[64];
  uint64_t v6 = v0[59];
  uint64_t v5 = v0[60];
  uint64_t v7 = v0[57];
  uint64_t v8 = v0[58];
  uint64_t v9 = v0[56];
  sub_34B88(v0[100], v0[101]);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C75E0(uint64_t *a1)
{
  uint64_t v2 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13E4C0(0);
  sub_1404D0();
  uint64_t v5 = sub_140500();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = type metadata accessor for PauseTimerHandledOnWatchParameters(0);
  sub_2D248((uint64_t)v4, (uint64_t)a1 + *(int *)(v6 + 24));
  sub_1404A0();
  sub_5830(&qword_17F070);
  sub_13F150();
  uint64_t v7 = sub_140490();
  uint64_t result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t sub_C770C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_13F1D0();
  uint64_t v8 = sub_13EFF0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a4, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  return sub_13F1C0();
}

uint64_t sub_C7828(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_141170();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  sub_140590();
  v3[14] = swift_task_alloc();
  uint64_t v7 = sub_13EFF0();
  v3[15] = v7;
  v3[16] = *(void *)(v7 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v3[18] = v8;
  v3[19] = *(void *)(v8 - 8);
  v3[20] = swift_task_alloc();
  return _swift_task_switch(sub_C7A88, 0, 0);
}

uint64_t sub_C7A88()
{
  if (qword_17B280 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_33D8(v0[5], (uint64_t)qword_17F008);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "PauseTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse() called", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v7 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[6];
  uint64_t v27 = v0[5];

  sub_13EC80();
  sub_13EFE0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[21] = sub_140470();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v28, v27);
  mach_absolute_time();
  sub_1406B0();
  sub_5830(&qword_17F070);
  uint64_t v9 = (void *)sub_13F140();
  uint64_t v10 = sub_140BF0();

  switch(v10)
  {
    case 'd':
      uint64_t v29 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v11 = (void *)swift_task_alloc();
      v0[25] = v11;
      void *v11 = v0;
      v11[1] = sub_C8250;
      unint64_t v12 = 0x8000000000147BE0;
      unint64_t v13 = 0xD000000000000012;
      goto LABEL_20;
    case 'e':
      uint64_t v15 = v0[3];
      uint64_t v16 = swift_task_alloc();
      v0[22] = v16;
      *(void *)(v16 + 16) = v15;
      int v17 = (void *)swift_task_alloc();
      v0[23] = v17;
      *int v17 = v0;
      v17[1] = sub_C80A4;
      return sub_11DBA8((uint64_t)sub_C9BAC, v16);
    case 'f':
      if (qword_17B158 != -1) {
        swift_once();
      }
      uint64_t v20 = v0[3];
      v19 = (void *)v0[4];
      uint64_t v21 = v19[3];
      sub_90A8(v19, v21);
      char v22 = sub_137BF0(v21);
      uint64_t v23 = swift_task_alloc();
      v0[27] = v23;
      *(void *)(v23 + 16) = v20;
      uint64_t v24 = (void *)swift_task_alloc();
      v0[28] = v24;
      *uint64_t v24 = v0;
      v24[1] = sub_C850C;
      return sub_135530(v22 & 1, (uint64_t)sub_C9BA4, v23);
    case 'g':
      if (qword_17B158 != -1) {
        swift_once();
      }
      uint64_t v29 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v25 = (void *)swift_task_alloc();
      v0[30] = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_C86B8;
      unint64_t v12 = 0x8000000000149B90;
      unint64_t v13 = 0xD000000000000020;
      goto LABEL_20;
    case 'h':
      uint64_t v29 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v26 = (void *)swift_task_alloc();
      v0[32] = v26;
      void *v26 = v0;
      v26[1] = sub_C8974;
      unint64_t v12 = 0x8000000000149000;
      unint64_t v13 = 0xD000000000000025;
      goto LABEL_20;
    default:
      uint64_t v29 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v14 = (void *)swift_task_alloc();
      v0[34] = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_C8C30;
      unint64_t v13 = 0x73614272656D6974;
      unint64_t v12 = 0xEF726F7272652365;
LABEL_20:
      return ((uint64_t (*)(unint64_t, unint64_t, void *))v29)(v13, v12, _swiftEmptyArrayStorage);
  }
}

uint64_t sub_C80A4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_C9124, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[36] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[37] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_C8EEC;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_C8250(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_C83EC, 0, 0);
  }
  else
  {
    v4[36] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[37] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_C8EEC;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_C83EC()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C850C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_C9244, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[36] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[37] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_C8EEC;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_C86B8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_C8854, 0, 0);
  }
  else
  {
    v4[36] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[37] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_C8EEC;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_C8854()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C8974(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_C8B10, 0, 0);
  }
  else
  {
    v4[36] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[37] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_C8EEC;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_C8B10()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C8C30(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_C8DCC, 0, 0);
  }
  else
  {
    v4[36] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[37] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_C8EEC;
    uint64_t v7 = v4[20];
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[13];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_C8DCC()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C8EEC()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_C9364;
  }
  else {
    uint64_t v2 = sub_C9000;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_C9000()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v12 = v0[18];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C9124()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C9244()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_C9364()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 88);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_C948C(uint64_t a1)
{
  sub_5830(&qword_17F070);
  uint64_t v4 = (void *)sub_13F160();
  sub_140C10();
  sub_140F90();
  uint64_t v3 = v2;

  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_C9508(uint64_t a1)
{
  sub_5830(&qword_17F070);
  uint64_t v2 = (void *)sub_13F160();
  id v3 = [v2 targetTimer];

  if (v3)
  {
    sub_140420();
    swift_allocObject();
    sub_140410();
    id v4 = [v3 remainingTime];
    uint64_t v5 = v4;
    if (v4)
    {
      [v4 doubleValue];
    }
    sub_140400();
    swift_release();
    uint64_t v6 = sub_1403F0();

    swift_release();
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t result = swift_release();
  *(void *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_C9614(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_C96BC;
  return sub_C3008(a1, a2);
}

uint64_t sub_C96BC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_C97F0, 0, 0);
  }
  else
  {
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_C97F0()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_C98B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_C9958;
  return sub_C7828(a1, a2);
}

uint64_t sub_C9958()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_C9A8C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_C9A8C()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_C9B50()
{
  unint64_t result = qword_17F028[0];
  if (!qword_17F028[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17F028);
  }
  return result;
}

uint64_t sub_C9BA4(uint64_t a1)
{
  return sub_C9508(a1);
}

void sub_C9BAC(uint64_t a1)
{
}

uint64_t sub_C9BB4(uint64_t a1)
{
  return sub_C770C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_C9BD4(uint64_t *a1)
{
  return sub_C75E0(a1);
}

uint64_t type metadata accessor for ResumeTimerCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17F080);
}

uint64_t sub_C9C04()
{
  return swift_initClassMetadata2();
}

uint64_t sub_C9C44()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_142FB0;
  *(void *)(v4 + 32) = 7368801;
  *(void *)(v4 + 40) = 0xE300000000000000;
  uint64_t v5 = *v0;
  if (*v0)
  {
    uint64_t v6 = sub_1404A0();
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    *(void *)(v4 + 56) = 0;
    *(void *)(v4 + 64) = 0;
  }
  *(void *)(v4 + 48) = v7;
  *(void *)(v4 + 72) = v6;
  strcpy((char *)(v4 + 80), "resumedTimers");
  *(_WORD *)(v4 + 94) = -4864;
  uint64_t v8 = v0[1];
  uint64_t v9 = sub_5830(&qword_17C508);
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 120) = v9;
  *(void *)(v4 + 128) = 0x6174614477656976;
  *(void *)(v4 + 136) = 0xE800000000000000;
  uint64_t v10 = type metadata accessor for ResumeTimerHandledOnWatchParameters(0);
  sub_8FE8((uint64_t)v0 + *(int *)(v10 + 24), (uint64_t)v3, &qword_17BE78);
  uint64_t v11 = sub_140500();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_904C((uint64_t)v3, &qword_17BE78);
    *(_OWORD *)(v4 + 144) = 0u;
    *(_OWORD *)(v4 + 160) = 0u;
  }
  else
  {
    *(void *)(v4 + 168) = v11;
    uint64_t v13 = sub_187EC((uint64_t *)(v4 + 144));
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v13, v3, v11);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_C9E64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17BE78);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  sub_5830(&qword_17F3D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_142FC0;
  uint64_t v9 = (uint64_t *)(v8 + 48);
  strcpy((char *)(v8 + 32), "cancelAction");
  *(unsigned char *)(v8 + 45) = 0;
  *(_WORD *)(v8 + 46) = -5120;
  sub_8FE8(v1, (uint64_t)v7, &qword_17BE78);
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v7, 1, v10) == 1)
  {
    sub_904C((uint64_t)v7, &qword_17BE78);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }
  else
  {
    *(void *)(v8 + 72) = v10;
    uint64_t v13 = sub_187EC(v9);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v13, v7, v10);
  }
  strcpy((char *)(v8 + 80), "confirmAction");
  *(_WORD *)(v8 + 94) = -4864;
  uint64_t v14 = type metadata accessor for ResumeTimerPromptAllParameters(0);
  sub_8FE8(v1 + *(int *)(v14 + 20), (uint64_t)v5, &qword_17BE78);
  if (v12(v5, 1, v10) == 1)
  {
    sub_904C((uint64_t)v5, &qword_17BE78);
    *(_OWORD *)(v8 + 96) = 0u;
    *(_OWORD *)(v8 + 112) = 0u;
  }
  else
  {
    *(void *)(v8 + 120) = v10;
    uint64_t v15 = sub_187EC((uint64_t *)(v8 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v15, v5, v10);
  }
  return v8;
}

uint64_t sub_CA0C0()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_142FB0;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  strcpy((char *)(v7 + 32), "cancelAction");
  *(unsigned char *)(v7 + 45) = 0;
  *(_WORD *)(v7 + 46) = -5120;
  sub_8FE8(v0, (uint64_t)v6, &qword_17BE78);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v6, 1, v9) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    uint64_t v12 = sub_187EC(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v12, v6, v9);
  }
  strcpy((char *)(v7 + 80), "confirmAction");
  *(_WORD *)(v7 + 94) = -4864;
  uint64_t v13 = type metadata accessor for ResumeTimerPromptExistingTimerParameters(0);
  sub_8FE8(v0 + *(int *)(v13 + 20), (uint64_t)v4, &qword_17BE78);
  if (v11(v4, 1, v9) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17BE78);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v9;
    uint64_t v14 = sub_187EC((uint64_t *)(v7 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v14, v4, v9);
  }
  *(void *)(v7 + 128) = 0x72656D6974;
  *(void *)(v7 + 136) = 0xE500000000000000;
  uint64_t v15 = *(void *)(v0 + *(int *)(v13 + 24));
  if (v15)
  {
    uint64_t v16 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(v7 + 152) = 0;
    *(void *)(v7 + 160) = 0;
  }
  *(void *)(v7 + 144) = v15;
  *(void *)(v7 + 168) = v16;
  swift_retain();
  return v7;
}

uint64_t sub_CA360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for ResumeTimerHandledOnWatchParameters(0);
  v4[7] = swift_task_alloc();
  return _swift_task_switch(sub_CA3F8, 0, 0);
}

uint64_t sub_CA3F8()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void (*)(void *))v0[3];
  uint64_t v3 = v0[2];
  uint64_t v4 = (char *)v1 + *(int *)(v0[6] + 24);
  uint64_t v5 = sub_140500();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *uint64_t v1 = 0;
  v1[1] = v3;
  swift_bridgeObjectRetain();
  v2(v1);
  uint64_t v6 = sub_C9C44();
  v0[8] = v6;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_CA544;
  return v9(0xD00000000000001ALL, 0x8000000000148BB0, v6);
}

uint64_t sub_CA544(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_CA718;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_CA690;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_CA690()
{
  sub_CB520(v0[7], type metadata accessor for ResumeTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[11];
  return v1(v2);
}

uint64_t sub_CA718()
{
  sub_CB520(*(void *)(v0 + 56), type metadata accessor for ResumeTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_CA79C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_CA7BC, 0, 0);
}

uint64_t sub_CA7BC()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  strcpy((char *)(v2 + 32), "resumedTimers");
  *(_WORD *)(v2 + 46) = -4864;
  *(void *)(v2 + 72) = sub_5830(&qword_17C508);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_4F0A4;
  return v5(0xD000000000000019, 0x8000000000148B90, v2);
}

uint64_t sub_CA8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_CAA90()
{
  return type metadata accessor for ResumeTimerCATPatternsExecutor(0);
}

uint64_t sub_CAA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CAAAC);
}

uint64_t sub_CAAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17BE78);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_CAB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CAB74);
}

uint64_t sub_CAB74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ResumeTimerHandledOnWatchParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17F138);
}

void sub_CAC40()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_CACE4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_CAD04, 0, 0);
}

uint64_t sub_CAD04()
{
  uint64_t v1 = sub_174C0(0, 0);
  v0[4] = v1;
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[5] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  *(void *)(v2 + 32) = 0x72656D6974;
  *(void *)(v2 + 40) = 0xE500000000000000;
  *(void *)(v2 + 72) = type metadata accessor for TimerTimer(0);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_58654;
  return v5(0xD00000000000001ALL, 0x8000000000149CA0, v2);
}

uint64_t type metadata accessor for ResumeTimerPromptAllParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17F310);
}

uint64_t sub_CAE60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_CAE80, 0, 0);
}

uint64_t sub_CAE80()
{
  uint64_t v1 = v0[3];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  *(void *)(v2 + 32) = 0x72656D6974;
  *(void *)(v2 + 40) = 0xE500000000000000;
  uint64_t v3 = 0;
  if (v1)
  {
    uint64_t v3 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  uint64_t v6 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  unint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_5D32C;
  return v6(0xD00000000000001ALL, 0x8000000000149CA0, v2);
}

uint64_t sub_CAFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_5830(&qword_17BE78);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for ResumeTimerPromptExistingTimerParameters(0);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_CB084, 0, 0);
}

uint64_t sub_CB084()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  uint64_t v6 = v1 + *(int *)(v2 + 20);
  v5(v6, 1, 1, v4);
  uint64_t v7 = *(int *)(v2 + 24);
  *(void *)(v1 + v7) = 0;
  *(void *)(v1 + v7) = sub_174C0(0, 0);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v6);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v1);
  uint64_t v8 = sub_CA0C0();
  v0[11] = v8;
  uint64_t v11 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[12] = v9;
  void *v9 = v0;
  v9[1] = sub_CB290;
  return v11(0xD00000000000001FLL, 0x8000000000149CC0, v8);
}

uint64_t sub_CB290(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_CB470;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_CB3DC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_CB3DC()
{
  sub_CB520(v0[10], type metadata accessor for ResumeTimerPromptExistingTimerParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[14];
  return v1(v2);
}

uint64_t sub_CB470()
{
  sub_CB520(*(void *)(v0 + 80), type metadata accessor for ResumeTimerPromptExistingTimerParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for ResumeTimerPromptExistingTimerParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17F278);
}

uint64_t sub_CB520(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_CB580(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_5830(&qword_17BE78) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_140500();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_CB6D8(uint64_t a1)
{
  uint64_t v2 = sub_140500();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_CB7A8(void *a1, const void *a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_CB8B8(void *a1, void *a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_CBA34(void *a1, const void *a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_CBB44(void *a1, void *a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_CBCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CBCD4);
}

uint64_t sub_CBCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_CBD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CBD58);
}

uint64_t sub_CBD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ResumeTimerAlreadyRunningAllParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17F1E8);
}

void sub_CBDEC()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_CBE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CBE8C);
}

uint64_t sub_CBE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_CBF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CBF70);
}

uint64_t sub_CBF70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_CC030()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_CC0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CC0DC);
}

uint64_t sub_CC0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_CC14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CC160);
}

uint64_t sub_CC160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

ValueMetadata *type metadata accessor for TimerNLv4Constants()
{
  return &type metadata for TimerNLv4Constants;
}

uint64_t getEnumTagSinglePayload for TimerNLv4Constants.TimerVerb(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimerNLv4Constants.TimerVerb(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCC340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNLv4Constants.TimerVerb()
{
  return &type metadata for TimerNLv4Constants.TimerVerb;
}

unint64_t sub_CC37C()
{
  unint64_t result = qword_17F348;
  if (!qword_17F348)
  {
    sub_23FA8(&qword_17F350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17F348);
  }
  return result;
}

uint64_t sub_CC3D8(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_642C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_642C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_141AA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_CC464()
{
  char v1 = *v0;
  sub_141B50();
  sub_642C(v1);
  sub_1412A0();
  swift_bridgeObjectRelease();
  return sub_141B70();
}

uint64_t sub_CC4C8()
{
  sub_642C(*v0);
  sub_1412A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_CC51C()
{
  char v1 = *v0;
  sub_141B50();
  sub_642C(v1);
  sub_1412A0();
  swift_bridgeObjectRelease();
  return sub_141B70();
}

uint64_t sub_CC57C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_CC640();
  *a1 = result;
  return result;
}

uint64_t sub_CC5AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_642C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_CC5D8(void *a1@<X8>)
{
  *a1 = &off_174318;
}

unint64_t sub_CC5EC()
{
  unint64_t result = qword_17F358;
  if (!qword_17F358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17F358);
  }
  return result;
}

uint64_t sub_CC640()
{
  unint64_t v0 = sub_141AC0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13) {
    return 19;
  }
  else {
    return v0;
  }
}

uint64_t sub_CC694(uint64_t a1)
{
  return sub_CC6D4(a1, (void (*)(void))type metadata accessor for DismissTimerCATs_Async, &qword_181150);
}

uint64_t sub_CC6B4(uint64_t a1)
{
  return sub_CC6D4(a1, (void (*)(void))type metadata accessor for DismissTimerCATPatternsExecutor, &qword_181158);
}

uint64_t sub_CC6D4(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  uint64_t v5 = sub_140590();
  __chkstk_darwin(v5 - 8);
  a2(0);
  sub_140580();
  uint64_t result = sub_140470();
  *a3 = result;
  return result;
}

ValueMetadata *_s21ConfirmIntentStrategyVMa()
{
  return &_s21ConfirmIntentStrategyVN;
}

uint64_t sub_CC780()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F360);
  sub_33D8(v0, (uint64_t)qword_17F360);
  return sub_140E60();
}

uint64_t sub_CC7CC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B298 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17F360);
  int v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "CreateTimer.ConfirmIntentStrategy.actionForInput() called.", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = enum case for DecideAction.PromptExpectation.confirmation(_:);
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_5EE54(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_CCA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  uint64_t v4 = sub_13F380();
  v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[27] = v5;
  v3[28] = *(void *)(v5 - 8);
  v3[29] = swift_task_alloc();
  uint64_t v6 = sub_140900();
  v3[30] = v6;
  v3[31] = *(void *)(v6 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  uint64_t v7 = sub_13F3C0();
  v3[34] = v7;
  v3[35] = *(void *)(v7 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  uint64_t v8 = sub_13F500();
  v3[39] = v8;
  v3[40] = *(void *)(v8 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  uint64_t v9 = sub_13F460();
  v3[45] = v9;
  v3[46] = *(void *)(v9 - 8);
  v3[47] = swift_task_alloc();
  uint64_t v10 = sub_13F410();
  v3[48] = v10;
  v3[49] = *(void *)(v10 - 8);
  v3[50] = swift_task_alloc();
  sub_5830(&qword_17F3E0);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  uint64_t v11 = sub_13F0C0();
  v3[58] = v11;
  v3[59] = *(void *)(v11 - 8);
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  v3[64] = type metadata accessor for TimerNLv3Intent();
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  uint64_t v12 = sub_13F3E0();
  v3[67] = v12;
  v3[68] = *(void *)(v12 - 8);
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  uint64_t v13 = sub_140280();
  v3[71] = v13;
  v3[72] = *(void *)(v13 - 8);
  v3[73] = swift_task_alloc();
  return _swift_task_switch(sub_CCF94, 0, 0);
}

uint64_t sub_CCF94()
{
  v252 = v0;
  char v1 = v0;
  if (qword_17B298 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_33D8(v0[27], (uint64_t)qword_17F360);
  uint64_t v3 = sub_141160();
  os_log_type_t v4 = sub_141480();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "CreateTimer.ConfirmIntentStrategy.parseConfirmationResponse() called", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[70];
  uint64_t v7 = v0[68];
  uint64_t v8 = v1[67];

  sub_5830(&qword_17CDE0);
  uint64_t v9 = (void *)sub_13F160();
  sub_13F370();
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v6, v8);
  v248 = v9;
  v249 = v1;
  if (v10 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v1[68] + 96))(v1[70], v1[67]);
LABEL_9:
    uint64_t v11 = v1[73];
    uint64_t v12 = v1[71];
    uint64_t v13 = v1[66];
    uint64_t v14 = v1[65];
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1[72] + 32);
    v15(v11, v1[70], v12);
    v15(v13, v11, v12);
    sub_303C0(v13, v14);
    uint64_t v16 = sub_141160();
    os_log_type_t v17 = sub_141480();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v1[65];
    if (v18)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      v251[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_30424(&qword_17D480);
      uint64_t v21 = sub_141980();
      v1[18] = sub_58C0(v21, v22, v251);
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364(v19);
      _os_log_impl(&dword_0, v16, v17, "timerNLIntent: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_30364(v1[65]);
    }

    if (qword_17B340 != -1) {
      swift_once();
    }
    uint64_t v23 = v1;
    uint64_t v24 = v1[66];
    uint64_t v25 = v1[63];
    uint64_t v26 = v1[58];
    uint64_t v27 = v1[59];
    uint64_t v28 = v1[57];
    sub_30424((unint64_t *)&qword_17CD20);
    sub_13F940();
    uint64_t v29 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
    if (*((unsigned char *)v249 + 595)) {
      uint64_t v29 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v25, *v29, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v28, v25, v26);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
    sub_140CA0();
    sub_13F090();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    sub_30364(v24);
    goto LABEL_17;
  }
  if (v10 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v1[68] + 96))(v1[70], v1[67]);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    goto LABEL_9;
  }
  uint64_t v32 = v1 + 17;
  uint64_t v240 = v2;
  if (v10 != enum case for Parse.directInvocation(_:))
  {
    if (v10 == enum case for Parse.NLv4IntentOnly(_:))
    {
      v245 = v1 + 19;
      v59 = (uint64_t *)v1[70];
      uint64_t v60 = v1[58];
      uint64_t v61 = v1[59];
      uint64_t v62 = v1[56];
      (*(void (**)(uint64_t *, uint64_t))(v1[68] + 96))(v59, v1[67]);
      uint64_t v63 = *v59;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
      v64(v62, 1, 1, v60);
      self;
      if (swift_dynamicCastObjCClass())
      {
        id v65 = sub_141160();
        os_log_type_t v66 = sub_141480();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_0, v65, v66, "Received UserDialogAct - UserAccepted", v67, 2u);
          swift_slowDealloc();
        }
        char v1 = v249;
        uint64_t v68 = v249[58];
        uint64_t v69 = v249[59];
        uint64_t v70 = v249[56];

        sub_904C(v70, &qword_17F3E0);
        (*(void (**)(uint64_t, void, uint64_t))(v69 + 104))(v70, enum case for ConfirmationResponse.confirmed(_:), v68);
        v64(v70, 0, 1, v68);
      }
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t v71 = sub_141160();
        os_log_type_t v72 = sub_141470();
        if (os_log_type_enabled(v71, v72))
        {
          uint64_t v73 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v73 = 0;
          _os_log_impl(&dword_0, v71, v72, "Received UserDialogAct - UserWantedToProceed (Unexpected!)", v73, 2u);
          swift_slowDealloc();
        }
        char v1 = v249;
        uint64_t v74 = v249[58];
        uint64_t v75 = v249[59];
        uint64_t v76 = v249[56];

        sub_904C(v76, &qword_17F3E0);
        (*(void (**)(uint64_t, void, uint64_t))(v75 + 104))(v76, enum case for ConfirmationResponse.confirmed(_:), v74);
        v64(v76, 0, 1, v74);
      }
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t v77 = sub_141160();
        os_log_type_t v78 = sub_141480();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v79 = 0;
          _os_log_impl(&dword_0, v77, v78, "Received UserDialogAct - UserRejected", v79, 2u);
          swift_slowDealloc();
        }
        char v1 = v249;
        uint64_t v80 = v249[58];
        uint64_t v81 = v249[59];
        uint64_t v82 = v249[56];

        sub_904C(v82, &qword_17F3E0);
        (*(void (**)(uint64_t, void, uint64_t))(v81 + 104))(v82, enum case for ConfirmationResponse.rejected(_:), v80);
        v64(v82, 0, 1, v80);
      }
      self;
      if (swift_dynamicCastObjCClass())
      {
        v83 = sub_141160();
        os_log_type_t v84 = sub_141480();
        if (os_log_type_enabled(v83, v84))
        {
          v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v85 = 0;
          _os_log_impl(&dword_0, v83, v84, "Received UserDialogAct - UserCancelled", v85, 2u);
          swift_slowDealloc();
        }
        char v1 = v249;
        uint64_t v86 = v249[58];
        uint64_t v87 = v249[59];
        uint64_t v88 = v249[56];

        sub_904C(v88, &qword_17F3E0);
        (*(void (**)(uint64_t, void, uint64_t))(v87 + 104))(v88, enum case for ConfirmationResponse.rejected(_:), v86);
        v64(v88, 0, 1, v86);
      }
      uint64_t v89 = v1[58];
      uint64_t v90 = v1[59];
      uint64_t v91 = v1[55];
      sub_D1264(v1[56], v91);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v91, 1, v89) == 1)
      {
        sub_904C(v1[55], &qword_17F3E0);
        swift_unknownObjectRetain_n();
        v92 = sub_141160();
        os_log_type_t v93 = sub_141470();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = (uint8_t *)swift_slowAlloc();
          v251[0] = swift_slowAlloc();
          *(_DWORD *)v94 = 136315138;
          v1[20] = v63;
          swift_unknownObjectRetain();
          sub_5830(&qword_17EB60);
          uint64_t v95 = sub_141260();
          uint64_t *v245 = sub_58C0(v95, v96, v251);
          sub_1415C0();
          char v1 = v249;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease_n();
          _os_log_impl(&dword_0, v92, v93, "Received unsupported userDialogAct for confirmation: %s", v94, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_unknownObjectRelease_n();
        }

        uint64_t v156 = v1[56];
        *((unsigned char *)v1 + 592) = 0;
        sub_5830((uint64_t *)&unk_17F3C0);
        sub_2F710();
        swift_allocError();
        sub_140830();
        swift_willThrow();

        swift_unknownObjectRelease();
        sub_904C(v156, &qword_17F3E0);
        goto LABEL_105;
      }
      uint64_t v129 = v1[62];
      uint64_t v130 = v1[58];
      uint64_t v131 = v1[59];
      uint64_t v133 = v1[56];
      uint64_t v132 = v1[57];
      uint64_t v23 = v1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 32))(v129, v1[55], v130);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v132, v129, v130);
      v64(v132, 0, 1, v130);
      sub_140CA0();
      sub_13F090();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v129, v130);
      sub_904C(v133, &qword_17F3E0);
    }
    else
    {
      if (v10 != enum case for Parse.uso(_:))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[25] + 16))(v1[26], v1[22], v1[24]);
        v134 = sub_141160();
        os_log_type_t v135 = sub_141470();
        if (os_log_type_enabled(v134, v135))
        {
          uint64_t v137 = v1[25];
          uint64_t v136 = v1[26];
          uint64_t v243 = v1[24];
          v138 = (uint8_t *)swift_slowAlloc();
          v251[0] = swift_slowAlloc();
          *(_DWORD *)v138 = 136315138;
          sub_13F370();
          uint64_t v139 = sub_141260();
          v1[16] = sub_58C0(v139, v140, v251);
          sub_1415C0();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v136, v243);
          _os_log_impl(&dword_0, v134, v135, "Received an unsupported input: %s", v138, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v9 = v248;
          swift_slowDealloc();
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v1[25] + 8))(v1[26], v1[24]);
        }

        uint64_t v157 = v1[70];
        uint64_t v158 = v1[68];
        uint64_t v159 = v1[67];
        *((unsigned char *)v1 + 596) = 0;
        sub_5830((uint64_t *)&unk_17F3C0);
        sub_2F710();
        swift_allocError();
        sub_140830();
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v159);
        goto LABEL_105;
      }
      uint64_t v104 = v1[70];
      uint64_t v105 = v1[68];
      uint64_t v106 = v1[67];
      uint64_t v107 = v1[58];
      uint64_t v108 = v1[59];
      uint64_t v109 = v1[54];
      uint64_t v110 = v1[50];
      uint64_t v111 = v249[49];
      uint64_t v112 = v249[48];
      uint64_t v113 = v249[47];
      uint64_t v114 = v249[46];
      uint64_t v115 = v249[45];
      (*(void (**)(uint64_t, uint64_t))(v105 + 96))(v104, v106);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 32))(v110, v104, v112);
      char v1 = v249;
      sub_13F400();
      uint64_t v116 = sub_13F450();
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v113, v115);
      v237 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56);
      v237(v109, 1, 1, v107);
      v117 = *(char **)(v116 + 16);
      v239 = v116;
      if (v117)
      {
        uint64_t v118 = v249[40];
        v120 = *(void (**)(NSObject *, unint64_t, uint64_t))(v118 + 16);
        uint64_t v119 = v118 + 16;
        unint64_t v121 = v116 + ((*(unsigned __int8 *)(v119 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 64));
        uint64_t v242 = *(void *)(v119 + 56);
        v246 = v120;
        v122 = (void (**)(NSObject *, uint64_t))(v119 - 8);
        swift_bridgeObjectRetain();
        unint64_t v123 = v121;
        v241 = v117;
        v124 = v117;
        while (1)
        {
          v125 = v249[44];
          uint64_t v126 = v249[39];
          v246(v125, v123, v126);
          char v127 = sub_13F490();
          v128 = *v122;
          (*v122)(v125, v126);
          if (v127) {
            break;
          }
          v123 += v242;
          if (!--v124)
          {
            swift_bridgeObjectRelease();
            goto LABEL_75;
          }
        }
        swift_bridgeObjectRelease();
        v125 = sub_141160();
        os_log_type_t v160 = sub_141480();
        if (os_log_type_enabled(v125, v160))
        {
          v161 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v161 = 0;
          _os_log_impl(&dword_0, v125, v160, "USO parse userDialogActs contains hasAccepted; response is .confirmed.",
            v161,
            2u);
          swift_slowDealloc();
        }
        uint64_t v126 = v249[58];
        uint64_t v162 = v249[59];
        uint64_t v163 = v249[54];

        sub_904C(v163, &qword_17F3E0);
        (*(void (**)(uint64_t, void, uint64_t))(v162 + 104))(v163, enum case for ConfirmationResponse.confirmed(_:), v126);
        v237(v163, 0, 1, v126);
LABEL_75:
        swift_bridgeObjectRetain();
        uint64_t v44 = 0;
        unint64_t v164 = v121;
        while (1)
        {
          v165 = (char *)v44 + 1;
          if (__OFADD__(v44, 1)) {
            break;
          }
          v125 = v249[43];
          uint64_t v126 = v249[39];
          v246(v125, v164, v126);
          char v166 = sub_13F4E0();
          v128(v125, v126);
          if (v166)
          {
            swift_bridgeObjectRelease();
            v167 = sub_141160();
            os_log_type_t v168 = sub_141480();
            if (os_log_type_enabled(v167, v168))
            {
              v169 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v169 = 0;
              _os_log_impl(&dword_0, v167, v168, "USO parse userDialogActs contains hasWantedToProceed; response is .confirmed (unexpected!)",
                v169,
                2u);
              swift_slowDealloc();
            }
            uint64_t v126 = v249[58];
            uint64_t v170 = v249[59];
            uint64_t v171 = v249[54];

            sub_904C(v171, &qword_17F3E0);
            (*(void (**)(uint64_t, void, uint64_t))(v170 + 104))(v171, enum case for ConfirmationResponse.confirmed(_:), v126);
            v237(v171, 0, 1, v126);
            v125 = v239;
            goto LABEL_83;
          }
          v164 += v242;
          uint64_t v44 = (uint64_t *)((char *)v44 + 1);
          if (v165 == v241)
          {
            v125 = v239;
            swift_bridgeObjectRelease();
LABEL_83:
            swift_bridgeObjectRetain();
            uint64_t v44 = 0;
            unint64_t v172 = v121;
            while (1)
            {
              v165 = (char *)v44 + 1;
              if (__OFADD__(v44, 1)) {
                goto LABEL_130;
              }
              v125 = v249[42];
              uint64_t v126 = v249[39];
              v246(v125, v172, v126);
              char v173 = sub_13F4A0();
              v128(v125, v126);
              if (v173) {
                break;
              }
              v172 += v242;
              uint64_t v44 = (uint64_t *)((char *)v44 + 1);
              v174 = v241;
              if (v165 == v241)
              {
                v125 = v239;
                swift_bridgeObjectRelease();
                goto LABEL_91;
              }
            }
            swift_bridgeObjectRelease();
            v175 = sub_141160();
            os_log_type_t v176 = sub_141480();
            if (os_log_type_enabled(v175, v176))
            {
              v177 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v177 = 0;
              _os_log_impl(&dword_0, v175, v176, "USO parse userDialogActs contains hasRejected; response is .rejected.",
                v177,
                2u);
              swift_slowDealloc();
            }
            uint64_t v126 = v249[58];
            uint64_t v178 = v249[59];
            uint64_t v179 = v249[54];

            sub_904C(v179, &qword_17F3E0);
            (*(void (**)(uint64_t, void, uint64_t))(v178 + 104))(v179, enum case for ConfirmationResponse.rejected(_:), v126);
            v237(v179, 0, 1, v126);
            v125 = v239;
            v174 = v241;
LABEL_91:
            swift_bridgeObjectRetain();
            uint64_t v44 = 0;
            while (1)
            {
              v165 = (char *)v44 + 1;
              if (__OFADD__(v44, 1)) {
                goto LABEL_131;
              }
              v125 = v249[41];
              uint64_t v126 = v249[39];
              v246(v125, v121, v126);
              char v180 = sub_13F4B0();
              v128(v125, v126);
              if (v180)
              {
                swift_bridgeObjectRelease();
                v181 = sub_141160();
                os_log_type_t v182 = sub_141480();
                if (os_log_type_enabled(v181, v182))
                {
                  v183 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v183 = 0;
                  _os_log_impl(&dword_0, v181, v182, "USO parse userDialogActs contains hasCancelled; response is .rejected.",
                    v183,
                    2u);
                  swift_slowDealloc();
                }
                char v1 = v249;
                uint64_t v184 = v249[58];
                uint64_t v185 = v249[59];
                uint64_t v186 = v249[54];

                sub_904C(v186, &qword_17F3E0);
                (*(void (**)(uint64_t, void, uint64_t))(v185 + 104))(v186, enum case for ConfirmationResponse.rejected(_:), v184);
                v237(v186, 0, 1, v184);
                goto LABEL_99;
              }
              v121 += v242;
              uint64_t v44 = (uint64_t *)((char *)v44 + 1);
              if (v165 == v174)
              {
                swift_bridgeObjectRelease();
                char v1 = v249;
                goto LABEL_99;
              }
            }
          }
        }
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
        goto LABEL_132;
      }
LABEL_99:
      uint64_t v187 = v1[58];
      uint64_t v188 = v1[59];
      uint64_t v189 = v1[53];
      sub_D1264(v1[54], v189);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v188 + 48))(v189, 1, v187) == 1)
      {
        sub_904C(v1[53], &qword_17F3E0);
        swift_bridgeObjectRetain();
        v190 = sub_141160();
        os_log_type_t v191 = sub_141470();
        if (os_log_type_enabled(v190, v191))
        {
          v192 = (uint8_t *)swift_slowAlloc();
          v251[0] = swift_slowAlloc();
          *(_DWORD *)v192 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v193 = sub_141320();
          unint64_t v195 = v194;
          swift_bridgeObjectRelease();
          v1[15] = sub_58C0(v193, v195, v251);
          sub_1415C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v190, v191, "Received unsupported userDialogActs for confirmation: %s", v192, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        uint64_t v204 = v1[54];
        uint64_t v206 = v1[49];
        uint64_t v205 = v1[50];
        uint64_t v207 = v1[48];
        *((unsigned char *)v1 + 594) = 0;
        sub_5830((uint64_t *)&unk_17F3C0);
        sub_2F710();
        swift_allocError();
        sub_140830();
        swift_willThrow();

        sub_904C(v204, &qword_17F3E0);
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v205, v207);
        goto LABEL_105;
      }
      uint64_t v196 = v1[61];
      uint64_t v23 = v1;
      uint64_t v197 = v1[59];
      uint64_t v199 = v23[57];
      uint64_t v198 = v23[58];
      uint64_t v201 = v23[53];
      uint64_t v200 = v23[54];
      uint64_t v202 = v23[49];
      uint64_t v250 = v23[50];
      uint64_t v203 = v23[48];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v197 + 32))(v196, v201, v198);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v197 + 16))(v199, v196, v198);
      v237(v199, 0, 1, v198);
      sub_140CA0();
      sub_13F090();
      (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v196, v198);
      sub_904C(v200, &qword_17F3E0);
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v250, v203);
    }
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v23[1];
    goto LABEL_18;
  }
  uint64_t v33 = v1[70];
  uint64_t v34 = v1[68];
  uint64_t v35 = v1[67];
  uint64_t v36 = v1[58];
  uint64_t v37 = v1[59];
  uint64_t v38 = v1[52];
  uint64_t v39 = v1[38];
  uint64_t v23 = v1;
  uint64_t v42 = v1 + 34;
  uint64_t v41 = v1[34];
  uint64_t v40 = v42[1];
  (*(void (**)(uint64_t, uint64_t))(v34 + 96))(v33, v35);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v39, v33, v41);
  sub_1408D0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) != 1)
  {
    uint64_t v98 = v23[59];
    uint64_t v97 = v23[60];
    uint64_t v100 = v23[57];
    uint64_t v99 = v23[58];
    uint64_t v101 = v23[38];
    uint64_t v102 = v23[34];
    uint64_t v103 = v23[35];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v97, v23[52], v99);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v100, v97, v99);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v100, 0, 1, v99);
    sub_140CA0();
    sub_13F090();
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
    goto LABEL_17;
  }
  sub_904C(v23[52], &qword_17F3E0);
  uint64_t v43 = sub_13F3B0();
  uint64_t v44 = v23;
  if (v43)
  {
    uint64_t v45 = v43;
    v244 = v32;
    uint64_t v46 = v23 + 6;
    uint64_t v47 = v23[33];
    uint64_t v49 = v23[30];
    uint64_t v48 = v23[31];
    unint64_t v50 = *(void (**)(uint64_t, void, uint64_t))(v48 + 104);
    v50(v47, enum case for DirectInvocationUtils.Timer.UserInfoKey.buttonPressed(_:), v49);
    uint64_t v51 = sub_1408F0();
    uint64_t v53 = v52;
    v54 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v54(v47, v49);
    if (*(void *)(v45 + 16) && (unint64_t v55 = sub_16F44(v51, v53), (v56 & 1) != 0))
    {
      sub_5B50(*(void *)(v45 + 56) + 32 * v55, (uint64_t)v46);
      swift_bridgeObjectRelease();
      if (v249[9])
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = v249;
          goto LABEL_64;
        }
        v57._rawValue = &off_173CE8;
        Swift::Int v58 = sub_141820(v57, *((Swift::String *)v249 + 6));
        swift_bridgeObjectRelease();
        if (!v58)
        {
          LODWORD(v241) = 0;
          goto LABEL_108;
        }
        if (v58 == 1)
        {
          LODWORD(v241) = 1;
LABEL_108:
          v208 = v249 + 2;
          uint64_t v209 = v249[32];
          uint64_t v210 = v249[30];
          v50(v209, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v210);
          uint64_t v211 = sub_1408F0();
          uint64_t v213 = v212;
          v54(v209, v210);
          if (*(void *)(v45 + 16) && (unint64_t v214 = sub_16F44(v211, v213), (v215 & 1) != 0))
          {
            sub_5B50(*(void *)(v45 + 56) + 32 * v214, (uint64_t)v208);
          }
          else
          {
            _OWORD *v208 = 0u;
            *((_OWORD *)v249 + 2) = 0u;
          }
          uint64_t v44 = v249;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v249[5])
          {
            if (swift_dynamicCast())
            {
              char v216 = sub_CC640();
              if (v216 != 19)
              {
                if (sub_642C(v216) == 0x657461657263 && v217 == 0xE600000000000000)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_121;
                }
                char v218 = sub_141AA0();
                swift_bridgeObjectRelease();
                if (v218)
                {
LABEL_121:
                  uint64_t v220 = v249[28];
                  uint64_t v219 = v249[29];
                  uint64_t v221 = v249[27];
                  uint64_t v119 = *(void *)(v249[59] + 56);
                  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v119)(v249[51], 1, 1, v249[58]);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 16))(v219, v240, v221);
                  v125 = sub_141160();
                  os_log_type_t v222 = sub_141480();
                  BOOL v223 = os_log_type_enabled(v125, v222);
                  v165 = (char *)v249[28];
                  uint64_t v126 = v249[29];
                  uint64_t v240 = v249[27];
                  if (v223)
                  {
                    uint64_t v238 = v119;
                    v224 = (uint8_t *)swift_slowAlloc();
                    v251[0] = swift_slowAlloc();
                    *(_DWORD *)v224 = 136315138;
                    char v225 = (char)v241;
                    if (v241) {
                      uint64_t v226 = 0x6C65636E6163;
                    }
                    else {
                      uint64_t v226 = 7562617;
                    }
                    if (v241) {
                      unint64_t v227 = 0xE600000000000000;
                    }
                    else {
                      unint64_t v227 = 0xE300000000000000;
                    }
                    uint64_t *v244 = sub_58C0(v226, v227, v251);
                    uint64_t v44 = v249;
                    sub_1415C0();
                    uint64_t v119 = v238;
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_0, v125, v222, "Received confirmation directionInvocation, buttonPressed: %s", v224, 0xCu);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    (*((void (**)(uint64_t, uint64_t))v165 + 1))(v126, v240);
                    goto LABEL_133;
                  }
LABEL_132:

                  (*((void (**)(uint64_t, uint64_t))v165 + 1))(v126, v240);
                  char v225 = (char)v241;
LABEL_133:
                  uint64_t v228 = v44[51];
                  if (v225)
                  {
                    char v229 = sub_141AA0();
                    swift_bridgeObjectRelease();
                    sub_904C(v228, &qword_17F3E0);
                    v230 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
                    if (v229) {
                      v230 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    sub_904C(v228, &qword_17F3E0);
                    v230 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
                  }
                  uint64_t v231 = v44[58];
                  uint64_t v232 = v44[57];
                  uint64_t v233 = v44[51];
                  uint64_t v234 = v44[38];
                  uint64_t v235 = v44[34];
                  uint64_t v236 = v44[35];
                  uint64_t v23 = v44;
                  (*(void (**)(uint64_t, void, uint64_t))(v44[59] + 104))(v233, *v230, v231);
                  ((void (*)(uint64_t, void, uint64_t, uint64_t))v119)(v233, 0, 1, v231);
                  sub_D1264(v233, v232);
                  sub_140CA0();
                  sub_13F090();
                  sub_904C(v233, &qword_17F3E0);
                  (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v234, v235);
                  goto LABEL_17;
                }
              }
            }
          }
          else
          {
            sub_904C((uint64_t)v208, &qword_17B9B0);
          }
          goto LABEL_64;
        }
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
    }
    else
    {
      *uint64_t v46 = 0u;
      v46[1] = 0u;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_904C((uint64_t)v46, &qword_17B9B0);
LABEL_63:
    uint64_t v44 = v249;
  }
LABEL_64:
  v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44[35] + 16);
  v141(v44[37], v44[38], v44[34]);
  v142 = sub_141160();
  os_log_type_t v143 = sub_141470();
  BOOL v144 = os_log_type_enabled(v142, v143);
  uint64_t v145 = v44[37];
  if (v144)
  {
    uint64_t v146 = v44[35];
    uint64_t v147 = v44[36];
    v247 = v142;
    uint64_t v148 = v44[34];
    v149 = (uint8_t *)swift_slowAlloc();
    v251[0] = swift_slowAlloc();
    v150 = v44;
    *(_DWORD *)v149 = 136315138;
    v141(v147, v145, v148);
    uint64_t v151 = sub_141260();
    v44[14] = sub_58C0(v151, v152, v251);
    sub_1415C0();
    swift_bridgeObjectRelease();
    v153 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
    v153(v145, v148);
    v142 = v247;
    _os_log_impl(&dword_0, v247, v143, "Received unsupported directInvocation for confirmation: %s", v149, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v153 = *(void (**)(uint64_t, uint64_t))(v44[35] + 8);
    v150 = v44;
    v153(v145, v44[34]);
  }

  uint64_t v154 = v150[38];
  uint64_t v155 = v150[34];
  *((unsigned char *)v150 + 593) = 0;
  sub_5830((uint64_t *)&unk_17F3C0);
  sub_2F710();
  swift_allocError();
  sub_140830();
  swift_willThrow();

  v153(v154, v155);
  char v1 = v150;
LABEL_105:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v1[1];
LABEL_18:
  return v30();
}

uint64_t sub_CF39C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_13F040();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_141170();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v2[13] = v6;
  v2[14] = *(void *)(v6 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v7 = sub_140730();
  v2[16] = v7;
  v2[17] = *(void *)(v7 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v2[19] = v8;
  v2[20] = *(void *)(v8 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v9 = sub_13ECE0();
  v2[22] = v9;
  v2[23] = *(void *)(v9 - 8);
  v2[24] = swift_task_alloc();
  return _swift_task_switch(sub_CF684, 0, 0);
}

uint64_t sub_CF684()
{
  sub_5830(&qword_17CDE0);
  char v1 = (void *)sub_13F140();
  *(void *)(v0 + 200) = v1;
  id v2 = [v1 createdTimer];
  *(void *)(v0 + 208) = v2;
  if (!v2)
  {
    if (qword_17B298 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 56), (uint64_t)qword_17F360);
    uint64_t v27 = sub_141160();
    os_log_type_t v28 = sub_141470();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_0, v27, v28, "timer to confirm is not found!", v29, 2u);
      swift_slowDealloc();
    }

    *(unsigned char *)(v0 + 328) = 3;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();

LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 128);
  sub_13EC60();
  uint64_t v7 = sub_174C0(0, 0);
  *(void *)(v0 + 216) = v7;
  sub_11838C(1);
  sub_140720();
  BOOL v8 = sub_140710();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v8)
  {
    uint64_t v9 = (void *)sub_13F050();

    uint64_t v11 = sub_1415A0();
    uint64_t v13 = v12;

    *(void *)(v0 + 224) = v13;
    if (v13)
    {
      uint64_t v14 = (void *)sub_13F050();
      uint64_t v16 = v15;

      uint64_t v17 = sub_1415A0();
      uint64_t v19 = v18;

      *(void *)(v0 + 232) = v19;
      if (v19)
      {
        uint64_t v44 = v17;
        (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 104))(*(void *)(v0 + 96), enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), *(void *)(v0 + 80));
        if (qword_17B298 != -1) {
          swift_once();
        }
        uint64_t v20 = *(void *)(v0 + 64);
        uint64_t v21 = *(void *)(v0 + 72);
        uint64_t v22 = *(void *)(v0 + 56);
        uint64_t v23 = sub_33D8(v22, (uint64_t)qword_17F360);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v21, v23, v22);
        mach_absolute_time();
        sub_1406B0();
        if (qword_17B1A0 != -1) {
          swift_once();
        }
        uint64_t v24 = qword_180F00;
        uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_17CAF0
                                                                                           + dword_17CAF0);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v25 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v25;
        *uint64_t v25 = v0;
        v25[1] = sub_CFDD0;
        return v42(v24, v7, v44, v19, v11, v13);
      }
      swift_bridgeObjectRelease();
    }
    if (qword_17B298 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 56), (uint64_t)qword_17F360);
    uint64_t v33 = sub_141160();
    os_log_type_t v34 = sub_141470();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_0, v33, v34, "Could not create direct invocation for confirm or reject actions.", v35, 2u);
      swift_slowDealloc();
    }
    uint64_t v36 = *(void *)(v0 + 184);
    uint64_t v41 = *(void *)(v0 + 176);
    uint64_t v43 = *(void *)(v0 + 192);
    uint64_t v37 = *(void *)(v0 + 160);
    uint64_t v40 = *(void *)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 152);

    *(unsigned char *)(v0 + 329) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v38);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v43, v41);
    goto LABEL_28;
  }
  if (qword_17B198 != -1) {
    swift_once();
  }
  swift_retain();
  sub_5830(&qword_17F3D0);
  uint64_t v30 = swift_allocObject();
  *(void *)(v0 + 280) = v30;
  *(_OWORD *)(v30 + 16) = xmmword_142D50;
  *(void *)(v30 + 32) = 0x72656D6974;
  *(void *)(v30 + 40) = 0xE500000000000000;
  *(void *)(v30 + 72) = type metadata accessor for TimerTimer(0);
  *(void *)(v30 + 48) = v7;
  uint64_t v45 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  swift_retain();
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v31;
  void *v31 = v0;
  v31[1] = sub_D0360;
  uint64_t v32 = *(void *)(v0 + 48);
  return v45(v32, 0xD000000000000024, 0x8000000000149D50, v30);
}

uint64_t sub_CFDD0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[31] = a1;
  v3[32] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return _swift_task_switch(sub_D00E4, 0, 0);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v5 = (void *)swift_task_alloc();
    v3[33] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_CFFB0;
    uint64_t v6 = v3[24];
    uint64_t v7 = v3[21];
    uint64_t v8 = v3[15];
    uint64_t v9 = v3[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v9, v6, v7, v8, 0);
  }
}

uint64_t sub_CFFB0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_D09E4;
  }
  else {
    uint64_t v3 = sub_D0224;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_D00E4()
{
  uint64_t v1 = *(void **)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 104);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_D0224()
{
  swift_release();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v9 = *(void *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_D0360()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_D08B8, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_17DDE8 + dword_17DDE8);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 304) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_D04FC;
    return v5(1);
  }
}

uint64_t sub_D04FC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[5] + 8))(v4[6], v4[4]);
    uint64_t v5 = sub_D07A0;
  }
  else
  {
    v4[40] = a1;
    uint64_t v5 = sub_D0638;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_D0638()
{
  sub_53A58(*(void *)(v0 + 192), *(void *)(v0 + 320), *(void *)(v0 + 168), *(uint64_t **)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void **)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 176);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_D07A0()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void **)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 152);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_D08B8()
{
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = v0[24];
  uint64_t v3 = (void *)v0[25];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[23];
  uint64_t v7 = v0[20];
  uint64_t v6 = v0[21];
  uint64_t v8 = v0[19];
  swift_bridgeObjectRelease();
  swift_release_n();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_D09E4()
{
  uint64_t v1 = *(void **)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 104);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_D0B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D95C;
  return sub_CCA4C(a1, a2, a3);
}

uint64_t sub_D0BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D95C;
  return sub_CF39C(a1, a2);
}

uint64_t sub_D0C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1D95C;
  return ConfirmIntentFlowStrategyAsync.makeRepromptOnEmptyParse(confirmParameters:)(a1, a2, a3, a4);
}

uint64_t sub_D0D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1D95C;
  return ConfirmIntentFlowStrategyAsync.makeRepromptOnLowConfidence(confirmParameters:)(a1, a2, a3, a4);
}

uint64_t sub_D0E00(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_13EFF0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_13ECE0();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_D0F1C, 0, 0);
}

uint64_t sub_D0F1C()
{
  sub_13ECC0();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_41E44;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  return sub_544B8(v4, v2, v3);
}

uint64_t sub_D0FCC(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_13EFF0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_13ECE0();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_D10E8, 0, 0);
}

uint64_t sub_D10E8()
{
  sub_13ECC0();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_422FC;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  return sub_544B8(v4, v2, v3);
}

uint64_t sub_D1198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_159A4;
  return ConfirmIntentFlowStrategyAsync.makeErrorResponse(error:confirmParameters:)(a1, a2, a3, a4, a5);
}

uint64_t sub_D1264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17F3E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D12CC()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F3E8);
  sub_33D8(v0, (uint64_t)qword_17F3E8);
  return sub_140E60();
}

uint64_t sub_D1318(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_5830(&qword_17C008);
    uint64_t v2 = (void *)sub_141800();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_5B50(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_174B0(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_174B0(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_174B0(v36, v37);
    sub_174B0(v37, &v33);
    uint64_t result = sub_141640(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_174B0(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_D2554();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TimerAnalyticsServiceImpl()
{
  return self;
}

void (*sub_D1704(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_D17B4(v6, a2, a3);
  return sub_D176C;
}

void sub_D176C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_D17B4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1416A0();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_D1834;
  }
  __break(1u);
  return result;
}

void sub_D1834(id *a1)
{
}

void sub_D183C(unint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)SAUIAddViews) init];
  id v3 = [objc_allocWithZone((Class)SADialog) init];
  id v4 = [objc_allocWithZone((Class)SADialogText) init];
  NSString v5 = sub_141240();
  [v4 setText:v5];

  [v3 setContent:v4];
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  if (!sub_1417D0()) {
    goto LABEL_27;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v7 = (id)sub_1416A0();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_35;
    }
    id v7 = *(id *)(a1 + 32);
  }
  int64_t v8 = v7;
  swift_bridgeObjectRelease();
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (!v9)
  {

    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v25 = (id)sub_1416A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_41;
      }
      id v25 = *(id *)(a1 + 32);
    }
    self;
    uint64_t v26 = (void *)swift_dynamicCastObjCClass();
    if (v26)
    {
      int64_t v27 = v26;
      [v26 setDialog:v3];
      sub_5830(&qword_17BF00);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_142E80;
      *(void *)(v28 + 32) = v27;
LABEL_32:
      sub_141330();
      sub_5595C(0, &qword_17C700);
      id v34 = v25;
      v35.super.Class isa = sub_1412F0().super.isa;
      swift_bridgeObjectRelease();
      [v2 setViews:v35.super.isa];
LABEL_39:

      sub_13ECB0();
      NSString v38 = sub_141240();
      swift_bridgeObjectRelease();
      [v2 setDialogPhase:v38];

      return;
    }

LABEL_28:
    if (qword_17B2A0 == -1)
    {
LABEL_29:
      uint64_t v29 = sub_141170();
      sub_33D8(v29, (uint64_t)qword_17F3E8);
      long long v30 = sub_141160();
      os_log_type_t v31 = sub_141480();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_0, v30, v31, "Snippet did not contain a timer snippet. Only logging dialog.", v32, 2u);
        swift_slowDealloc();
      }

      id v25 = [objc_allocWithZone((Class)SATimerSnippet) init];
      [v25 setDialog:v3];
      sub_5830(&qword_17BF00);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_142E80;
      *(void *)(v33 + 32) = v25;
      goto LABEL_32;
    }
LABEL_35:
    swift_once();
    goto LABEL_29;
  }
  uint64_t v10 = (void *)v9;
  id v11 = [objc_allocWithZone((Class)SATimerSnippet) init];
  [v11 setDialog:v3];
  id v12 = v11;
  id v13 = [v10 title];
  [v12 setTitle:v13];

  id v14 = v12;
  id v15 = [v10 speakableText];
  [v14 setSpeakableText:v15];

  id v16 = [v10 timers];
  if (!v16)
  {
LABEL_38:
    sub_5830(&qword_17BF00);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_142E80;
    *(void *)(v37 + 32) = v14;
    sub_141330();
    sub_5595C(0, &qword_17C700);
    id v34 = v14;
    v35.super.Class isa = sub_1412F0().super.isa;
    swift_bridgeObjectRelease();
    [v2 setViews:v35.super.isa];

    goto LABEL_39;
  }
  uint64_t v17 = v16;
  long long v39 = v8;
  id v40 = v4;
  id v41 = v3;
  sub_5595C(0, &qword_17F4B0);
  unint64_t v18 = sub_141310();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1417D0();
    if (v19) {
      goto LABEL_10;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Class isa = sub_1412F0().super.isa;
    swift_bridgeObjectRelease();
    [v14 setTimers:isa];

    id v4 = v40;
    id v3 = v41;
    int64_t v8 = v39;
    goto LABEL_38;
  }
  uint64_t v19 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_37;
  }
LABEL_10:
  if (v19 >= 1)
  {
    for (uint64_t i = 0; i != v19; ++i)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v21 = (id)sub_1416A0();
      }
      else {
        id v21 = *(id *)(v18 + 8 * i + 32);
      }
      unint64_t v22 = v21;
      id v23 = [objc_allocWithZone((Class)SATimerObject) init];
      id v24 = [v22 timerValue];
      [v23 setTimerValue:v24];

      sub_1412E0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_141350();
      }
      sub_141380();
      sub_141330();
    }
    goto LABEL_37;
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_D1F50(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v41 = a1;
  uint64_t v5 = sub_13EE40();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5);
  uint64_t v37 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17DDA8);
  __chkstk_darwin(v7 - 8);
  id v40 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_13F040();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B2A0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_141170();
  sub_33D8(v13, (uint64_t)qword_17F3E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  id v14 = sub_141160();
  os_log_type_t v15 = sub_141480();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    _OWORD v36[2] = a3;
    uint64_t v17 = (uint8_t *)v16;
    *(void *)&long long v43 = swift_slowAlloc();
    v36[1] = a2;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v18 = sub_13F020();
    uint64_t v42 = sub_58C0(v18, v19, (uint64_t *)&v43);
    sub_1415C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_0, v14, v15, "logTimerSnippetAndDialog called for intent: %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  uint64_t v20 = sub_13F030();
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = sub_13F070();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = (uint64_t)v40;
  if (v21)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v40, v20+ ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80)), v22);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24, v25, 1, v22);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v22) == 1)
  {
    sub_9996C(v24);
  }
  else
  {
    uint64_t v26 = v37;
    sub_13F060();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    sub_13EE30();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v39);
  }
  sub_D183C(v41);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  sub_5830(&qword_17BFE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142D50;
  strcpy((char *)(inited + 32), "ClientFlowView");
  *(unsigned char *)(inited + 47) = -18;
  id v30 = [v28 dictionary];
  if (v30)
  {
    id v31 = v30;
    uint64_t v44 = sub_5595C(0, &qword_17F4A8);
    *(void *)&long long v43 = v31;
    sub_174B0(&v43, (_OWORD *)(inited + 48));
  }
  else
  {
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 7104878;
    *(void *)(inited + 56) = 0xE300000000000000;
  }
  unint64_t v32 = sub_335EC(inited);
  id v33 = [self sharedAnalytics];
  if (v33)
  {
    id v34 = v33;
    sub_D1318(v32);
    swift_bridgeObjectRelease();
    Class isa = sub_141210().super.isa;
    swift_bridgeObjectRelease();
    [v34 logEventWithType:3700 context:isa];
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_D2554()
{
  return swift_release();
}

ValueMetadata *_s24UnsupportedValueStrategyVMa()
{
  return &_s24UnsupportedValueStrategyVN;
}

uint64_t sub_D256C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F4B8);
  sub_33D8(v0, (uint64_t)qword_17F4B8);
  return sub_140E60();
}

uint64_t sub_D25B8(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  sub_140590();
  v3[9] = swift_task_alloc();
  uint64_t v4 = sub_141170();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v7 = sub_5830(&qword_17F4E8);
  v3[19] = v7;
  v3[20] = *(void *)(v7 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v3[23] = v8;
  v3[24] = *(void *)(v8 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v9 = sub_13ECE0();
  v3[26] = v9;
  v3[27] = *(void *)(v9 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return _swift_task_switch(sub_D28A4, 0, 0);
}

uint64_t sub_D28A4()
{
  id v40 = v0;
  uint64_t v1 = (void *)sub_13F200();
  id v2 = [v1 unsupportedReason];

  sub_13EC50();
  sub_13EFE0();
  if (qword_17B2A8 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[7];
  uint64_t v7 = sub_33D8(v0[10], (uint64_t)qword_17F4B8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v3, v6, v4);
  uint64_t v38 = v7;
  uint64_t v9 = sub_141160();
  os_log_type_t v10 = sub_141480();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[22];
  if (v11)
  {
    log = v9;
    uint64_t v14 = v0[20];
    uint64_t v13 = v0[21];
    uint64_t v15 = v0[19];
    id v37 = v2;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    v8(v13, v12, v15);
    uint64_t v17 = sub_141260();
    v0[5] = sub_58C0(v17, v18, &v39);
    sub_1415C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v15);
    uint64_t v9 = log;
    _os_log_impl(&dword_0, log, v10, "[SetTimerAttribute.UnsupportedValueStrategy.makeUnsupportedValueOutput] Called with resolveRecord: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v2 = v37;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0[20] + 8))(v0[22], v0[19]);
  }

  uint64_t v19 = v0[12];
  uint64_t v20 = v0[10];
  uint64_t v21 = v0[11];
  (*(void (**)(void, void, void))(v0[14] + 104))(v0[15], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[13]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v38, v20);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v22 = (void *)sub_13F200();
  uint64_t v23 = (char *)[v22 unsupportedReason];

  if (v23 == (unsigned char *)&dword_4 + 3)
  {
    uint64_t v24 = v0[29];
    uint64_t v25 = v0[30];
    uint64_t v26 = v0[26];
    uint64_t v27 = v0[27];
    uint64_t v28 = v0[7];
    sub_13EC80();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v0[31] = v29;
    v0[32] = (v27 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v29(v25, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v25, v24, v26);
    type metadata accessor for TimerBaseCATPatternsExecutor(0);
    sub_140580();
    v0[33] = sub_140470();
    uint64_t v30 = swift_task_alloc();
    v0[34] = v30;
    *(void *)(v30 + 16) = v28;
    id v31 = (void *)swift_task_alloc();
    v0[35] = v31;
    void *v31 = v0;
    v31[1] = sub_D2D2C;
    return sub_11DBA8((uint64_t)sub_D49F8, v30);
  }
  else
  {
    id v33 = (void *)swift_task_alloc();
    v0[37] = v33;
    void *v33 = v0;
    v33[1] = sub_D2F0C;
    uint64_t v34 = v0[28];
    uint64_t v35 = v0[7];
    return sub_D3770(v34, (uint64_t)v2, 0, v35);
  }
}

uint64_t sub_D2D2C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 288) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_D3398, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[39] = v4[31];
    v4[40] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[41] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_D312C;
    uint64_t v7 = v4[30];
    uint64_t v8 = v4[25];
    uint64_t v9 = v4[18];
    uint64_t v10 = v4[6];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_D2F0C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v3[38] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_D34D0;
  }
  else {
    uint64_t v4 = sub_D3028;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D3028()
{
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v4 = v0[26];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v4);
  uint64_t v6 = v0[3];
  v0[39] = v5;
  v0[40] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[41] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_D312C;
  uint64_t v8 = v0[30];
  uint64_t v9 = v0[25];
  uint64_t v10 = v0[18];
  uint64_t v11 = v0[6];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v11, v8, v9, v10, 0);
}

uint64_t sub_D312C()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_D3618;
  }
  else {
    uint64_t v2 = sub_D3240;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_D3240()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v11(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_D3398()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(void, void))(v0 + 248))(*(void *)(v0 + 240), *(void *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_D34D0()
{
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v4 = v0[23];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(void, void))(v1 + 8))(v0[30], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_D3618()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 240), *(void *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_D3770(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 120) = a2;
  *(void *)(v4 + 128) = a4;
  *(unsigned char *)(v4 + 248) = a3;
  *(void *)(v4 + 112) = a1;
  uint64_t v5 = sub_13ECE0();
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = *(void *)(v5 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  sub_140590();
  *(void *)(v4 + 160) = swift_task_alloc();
  return _swift_task_switch(sub_D3864, 0, 0);
}

uint64_t sub_D3864()
{
  char v1 = *(unsigned char *)(v0 + 248);
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  *(void *)(v0 + 168) = sub_140470();
  sub_13EC50();
  if (v1) {
    goto LABEL_5;
  }
  uint64_t v2 = *(void *)(v0 + 120);
  if (v2 != 2)
  {
    if (v2 == 1)
    {
      uint64_t v22 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_D3C40;
      unint64_t v4 = 0x8000000000147BE0;
      unint64_t v5 = 0xD000000000000012;
LABEL_10:
      return ((uint64_t (*)(unint64_t, unint64_t, void *))v22)(v5, v4, _swiftEmptyArrayStorage);
    }
LABEL_5:
    sub_5830(&qword_17F4E8);
    uint64_t v6 = (void *)sub_13F1F0();
    id v7 = [v6 toLabel];

    if (v7)
    {
      if (qword_17B268 != -1) {
        swift_once();
      }
      uint64_t v22 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_D404C;
      unint64_t v4 = 0x8000000000148010;
      unint64_t v5 = 0xD00000000000001ELL;
    }
    else
    {
      uint64_t v10 = *(void *)(v0 + 144);
      uint64_t v9 = *(void *)(v0 + 152);
      uint64_t v11 = *(void *)(v0 + 136);
      uint64_t v12 = *(void *)(v0 + 112);
      sub_13EC80();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v11);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v9, v11);
      uint64_t v22 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_D4298;
      unint64_t v5 = 0x73614272656D6974;
      unint64_t v4 = 0xEF726F7272652365;
    }
    goto LABEL_10;
  }
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 152);
  uint64_t v18 = *(void *)(v0 + 128);
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v19 = *(void *)(v0 + 112);
  sub_13EC80();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v19, v15, v17);
  uint64_t v20 = swift_task_alloc();
  *(void *)(v0 + 192) = v20;
  *(void *)(v20 + 16) = v18;
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_D3E8C;
  return sub_11DBA8((uint64_t)sub_D4A14, v20);
}

uint64_t sub_D3C40(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v3[23] = v1;
  swift_task_dealloc();
  if (v1) {
    unint64_t v4 = sub_D3DE4;
  }
  else {
    unint64_t v4 = sub_D3D5C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D3D5C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_D3DE4()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_D3E8C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  v3[26] = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_D44E4;
  }
  else {
    uint64_t v4 = sub_D3FC4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D3FC4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_D404C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = v1;
  v3[28] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_D41F0;
  }
  else {
    uint64_t v4 = sub_D4168;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D4168()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_D41F0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_D4298(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[11] = v2;
  v3[12] = a1;
  v3[13] = v1;
  v3[30] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_D443C;
  }
  else {
    uint64_t v4 = sub_D43B4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D43B4()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_D443C()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_D44E4()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_D458C(uint64_t a1)
{
  sub_5830(&qword_17F4E8);
  uint64_t v4 = (void *)sub_13F1F0();
  sub_140BC0();
  sub_140F90();
  uint64_t v3 = v2;

  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_D4608(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_D46B0;
  return sub_D25B8(a1, a2);
}

uint64_t sub_D46B0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_D47E4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_D47E4()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_D48A4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_D48C4, 0, 0);
}

uint64_t sub_D48C4()
{
  sub_5830(&qword_17F4E8);
  uint64_t v1 = sub_13F1F0();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_D4934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_159A4;
  return UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:)(a1, a2, a3, a4);
}

void sub_D49F8(uint64_t a1)
{
}

uint64_t sub_D4A18()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F500);
  sub_33D8(v0, (uint64_t)qword_17F500);
  return sub_140E40();
}

uint64_t sub_D4A64@<X0>(uint64_t a1@<X8>)
{
  id v3 = [v1 identifier];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_141250();

    if (qword_17B3B0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_13ED90();
    uint64_t v5 = sub_13EDA0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v6(a1, 0, 1, v5);
  }
  else
  {
    if (qword_17B2B0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_141170();
    sub_33D8(v8, (uint64_t)qword_17F500);
    id v9 = v1;
    uint64_t v10 = sub_141160();
    os_log_type_t v11 = sub_141470();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      id v13 = v9;
      id v14 = [v13 description];
      uint64_t v15 = sub_141250();
      unint64_t v17 = v16;

      sub_58C0(v15, v17, &v19);
      sub_1415C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v10, v11, "Error making descriptive hint for timer. Missing identifier: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v18 = sub_13EDA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

ValueMetadata *_s20HandleIntentStrategyVMa_3()
{
  return &_s20HandleIntentStrategyVN_3;
}

uint64_t sub_D4DA4()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F518);
  sub_33D8(v0, (uint64_t)qword_17F518);
  return sub_140E60();
}

uint64_t sub_D4DF0(uint64_t a1, uint64_t a2)
{
  v2[59] = a1;
  v2[60] = a2;
  uint64_t v3 = sub_13F1E0();
  v2[61] = v3;
  v2[62] = *(void *)(v3 - 8);
  v2[63] = swift_task_alloc();
  v2[64] = type metadata accessor for SiriTimePluginModel(0);
  v2[65] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v2[66] = swift_task_alloc();
  uint64_t v4 = sub_140730();
  v2[67] = v4;
  v2[68] = *(void *)(v4 - 8);
  v2[69] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v2[70] = v5;
  v2[71] = *(void *)(v5 - 8);
  v2[72] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v2[73] = v6;
  v2[74] = *(void *)(v6 - 8);
  v2[75] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v2[76] = v7;
  v2[77] = *(void *)(v7 - 8);
  v2[78] = swift_task_alloc();
  v2[79] = swift_task_alloc();
  uint64_t v8 = sub_1405D0();
  v2[80] = v8;
  v2[81] = *(void *)(v8 - 8);
  v2[82] = swift_task_alloc();
  uint64_t v9 = sub_1405C0();
  v2[83] = v9;
  v2[84] = *(void *)(v9 - 8);
  v2[85] = swift_task_alloc();
  uint64_t v10 = sub_13F3C0();
  v2[86] = v10;
  v2[87] = *(void *)(v10 - 8);
  v2[88] = swift_task_alloc();
  uint64_t v11 = sub_13EFF0();
  v2[89] = v11;
  v2[90] = *(void *)(v11 - 8);
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  uint64_t v12 = sub_13ECE0();
  v2[93] = v12;
  v2[94] = *(void *)(v12 - 8);
  v2[95] = swift_task_alloc();
  v2[96] = swift_task_alloc();
  v2[97] = swift_task_alloc();
  return _swift_task_switch(sub_D52B4, 0, 0);
}

uint64_t sub_D52B4()
{
  uint64_t v49 = v0;
  if (qword_17B2B8 != -1) {
    swift_once();
  }
  v0[98] = sub_33D8(v0[70], (uint64_t)qword_17F518);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "CreateTimer.HandleIntentStrategy.makeIntentHandledResponse() called.", v3, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17CDE0);
  uint64_t v4 = (void *)sub_13F140();
  id v5 = [v4 createdTimer];
  v0[99] = v5;

  if (v5)
  {
    uint64_t v6 = v0[92];
    sub_13EC50();
    v0[100] = sub_5830(&qword_17BF00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_142E80;
    *(void *)(inited + 32) = v5;
    unint64_t v48 = inited;
    sub_141330();
    id v8 = v5;
    sub_15E9C(v48, v6);
    swift_bridgeObjectRelease();
    id v9 = [v8 identifier];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = v0[88];
      uint64_t v12 = v0[87];
      uint64_t v13 = v0[86];
      uint64_t v14 = sub_141250();
      uint64_t v16 = v15;

      sub_33C64(v14, v16, v11);
      swift_bridgeObjectRelease();
      sub_13EF30();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    }
    uint64_t v17 = v0[85];
    uint64_t v18 = v0[84];
    uint64_t v19 = v0[83];
    uint64_t v20 = v0[82];
    uint64_t v21 = v0[81];
    uint64_t v22 = v0[80];
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, enum case for TipKitSiriTimeSource.timerPlugin(_:), v19);
    (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for TipKitSiriTimeContext.timerCreatedWithSiri(_:), v22);
    sub_1409D0();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    id v23 = v8;
    uint64_t v24 = sub_141160();
    os_log_type_t v25 = sub_141480();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      unint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      id v27 = [v23 identifier];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = sub_141250();
        uint64_t v31 = v30;
      }
      else
      {
        uint64_t v29 = 0;
        uint64_t v31 = 0;
      }
      v0[54] = v29;
      v0[55] = v31;
      sub_5830(&qword_17B570);
      uint64_t v38 = sub_141260();
      v0[58] = sub_58C0(v38, v39, (uint64_t *)&v48);
      sub_1415C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v24, v25, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] Created timer has ID %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v40 = [v23 identifier];
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = sub_141250();
      uint64_t v44 = v43;
    }
    else
    {
      uint64_t v42 = 0;
      uint64_t v44 = 0;
    }
    v0[101] = v44;
    sub_140DF0();
    sub_140DE0();
    uint64_t v45 = v0[10];
    uint64_t v46 = v0[11];
    sub_90A8(v0 + 7, v45);
    uint64_t v47 = (void *)swift_task_alloc();
    v0[102] = v47;
    *uint64_t v47 = v0;
    v47[1] = sub_D59BC;
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v42, v44, v45, v46);
  }
  else
  {
    unint64_t v32 = sub_141160();
    os_log_type_t v33 = sub_141470();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "Can NOT retrieve intentResponse.createdTimer.", v34, 2u);
      swift_slowDealloc();
    }

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v35 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(void))v0[1];
    return v36();
  }
}

uint64_t sub_D59BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 824) = a1;
  *(void *)(v3 + 832) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_D5B0C, 0, 0);
}

uint64_t sub_D5B0C()
{
  uint64_t v97 = *(void *)(v0 + 784);
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 568);
  uint64_t v94 = *(void *)(v0 + 560);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  *(void *)(v0 + 840) = sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 96), *(void *)(v0 + 120));
  *(unsigned char *)(v0 + 1048) = sub_13EC10() & 1;
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  uint64_t v6 = *(void (**)(uint64_t, void, uint64_t))(v2 + 104);
  v6(v1, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v3);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7(v4, v97, v94);
  mach_absolute_time();
  sub_1406B0();
  sub_140450();
  id v8 = (void *)sub_140440();
  *(void *)(v0 + 848) = sub_174C0(0, v8);

  sub_13EBB0();
  uint64_t v9 = v0 + 136;
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  uint64_t v10 = sub_13F120();
  uint64_t v104 = (void *)v0;
  *(void *)(v0 + 856) = v11;
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v95 = v10;
    uint64_t v13 = *(void *)(v0 + 784);
    uint64_t v14 = *(void *)(v0 + 600);
    uint64_t v15 = v6;
    uint64_t v16 = v104[73];
    uint64_t v17 = v104[72];
    uint64_t v18 = v7;
    uint64_t v19 = v104[70];
    _s20HandleIntentStrategyVwxx_1(v9);
    v15(v14, enum case for SiriTimeMeasurement.LogDescription.siriSuggestionsDonation(_:), v16);
    v18(v17, v13, v19);
    mach_absolute_time();
    sub_1406B0();
    uint64_t v20 = (void *)swift_task_alloc();
    v104[108] = v20;
    *uint64_t v20 = v104;
    v20[1] = sub_D69F0;
    uint64_t v21 = v104[60];
    return sub_DAC38(v95, v12, v21);
  }
  id v23 = (void *)(v0 + 176);
  _s20HandleIntentStrategyVwxx_1(v9);
  if (*(void *)(v0 + 832)) {
    int v24 = *(unsigned __int8 *)(v0 + 1048);
  }
  else {
    int v24 = 0;
  }
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v23, *(void *)(v0 + 200));
  char v25 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v23);
  if ((v25 & 1) != 0 && !v24)
  {
    uint64_t v26 = *(void **)(v0 + 792);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_142E80;
    *(void *)(v27 + 32) = v26;
    unint64_t v105 = v27;
    sub_141330();
    id v28 = v26;
    id v29 = sub_79174(v105, 13);
    *(void *)(v0 + 976) = v29;
    swift_bridgeObjectRelease();
    if (v29)
    {
      uint64_t v30 = self;
      *(void *)(v0 + 456) = 0;
      id v31 = [v30 archivedDataWithRootObject:v29 requiringSecureCoding:1 error:v0 + 456];
      unint64_t v32 = *(void **)(v0 + 456);
      if (v31)
      {
        os_log_type_t v33 = v31;
        id v34 = v32;
        uint64_t v35 = sub_13E4D0();
        uint64_t v37 = v36;

        *(void *)(v0 + 984) = v35;
        *(void *)(v0 + 992) = v37;
        if (qword_17B1A0 != -1) {
          swift_once();
        }
        uint64_t v38 = *(void *)(v0 + 848);
        uint64_t v39 = *(void *)(v0 + 480);
        id v40 = (void *)swift_task_alloc();
        *(void *)(v0 + 1000) = v40;
        _OWORD v40[2] = v35;
        v40[3] = v37;
        v40[4] = v38;
        v40[5] = v39;
        uint64_t v41 = (void *)swift_task_alloc();
        *(void *)(v0 + 1008) = v41;
        *uint64_t v41 = v0;
        v41[1] = sub_D930C;
        return sub_58094((uint64_t)sub_DAC2C, (uint64_t)v40);
      }
      uint64_t v77 = *(void *)(v0 + 752);
      unint64_t v96 = *(void **)(v0 + 792);
      uint64_t v99 = *(void *)(v0 + 744);
      uint64_t v78 = *(void *)(v0 + 736);
      uint64_t v79 = v104[90];
      uint64_t v101 = v104[97];
      uint64_t v103 = v104[89];
      uint64_t v93 = v104[79];
      uint64_t v80 = v104[77];
      uint64_t v81 = v104[76];
      id v82 = v32;
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v93, v81);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v101, v99);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v103);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_141160();
    uint64_t v61 = sub_141470();
    if (os_log_type_enabled(v60, (os_log_type_t)v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_0, v60, (os_log_type_t)v61, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] Could not get timer action from timer.", v62, 2u);
      swift_slowDealloc();
    }
    uint64_t v63 = *(void **)(v0 + 792);
    uint64_t v64 = *(void *)(v0 + 752);
    uint64_t v98 = *(void *)(v0 + 744);
    uint64_t v100 = *(void *)(v0 + 776);
    uint64_t v65 = *(void *)(v0 + 736);
    uint64_t v66 = v104[90];
    uint64_t v102 = v104[89];
    uint64_t v67 = v104[79];
    uint64_t v68 = v104[77];
    uint64_t v69 = v104[76];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v70 = 1;
    swift_willThrow();
    swift_release();

LABEL_33:
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v100, v98);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v102);
LABEL_46:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v83 = (uint64_t (*)(void))v104[1];
    return v83();
  }
  uint64_t v42 = (char *)[*(id *)(v0 + 792) type];
  if ((unint64_t)v42 >= 2)
  {
    if (v42 != (unsigned char *)&dword_0 + 2)
    {
      if (qword_17B1A0 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_140560();
      sub_1408A0();
      sub_140890();
      swift_release();
      uint64_t v73 = sub_140550();
      *(void *)(v0 + 944) = v73;
      sub_5830(&qword_17F3D0);
      uint64_t v74 = swift_allocObject();
      *(void *)(v0 + 952) = v74;
      *(_OWORD *)(v74 + 16) = xmmword_142D50;
      *(void *)(v74 + 32) = 0x656369766564;
      *(void *)(v74 + 40) = 0xE600000000000000;
      *(void *)(v74 + 72) = v72;
      *(void *)(v74 + 48) = v73;
      uint64_t v75 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      swift_retain();
      uint64_t v76 = (void *)swift_task_alloc();
      *(void *)(v0 + 960) = v76;
      *uint64_t v76 = v0;
      v76[1] = sub_D8E24;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                                  + v75))(0xD000000000000011, 0x8000000000147810, v74);
    }
    if (qword_17B1A0 != -1) {
      swift_once();
    }
    uint64_t v55 = qword_180F00;
    char v56 = &dword_17CB00;
    uint64_t v57 = dword_17CB00;
    swift_retain();
    Swift::Int v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 928) = v58;
    *Swift::Int v58 = v0;
    v59 = sub_D8944;
LABEL_37:
    v58[1] = v59;
    uint64_t v71 = *(void *)(v0 + 848);
    return ((uint64_t (*)(uint64_t, uint64_t))((char *)v56 + v57))(v55, v71);
  }
  uint64_t v43 = *(void *)(v0 + 552);
  uint64_t v44 = *(void *)(v0 + 544);
  uint64_t v45 = *(void *)(v0 + 536);
  sub_140720();
  BOOL v46 = sub_1406C0();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
  if (!v46)
  {
    if (qword_17B1A0 != -1) {
      swift_once();
    }
    uint64_t v55 = qword_180F00;
    char v56 = &dword_17CAF8;
    uint64_t v57 = dword_17CAF8;
    swift_retain();
    Swift::Int v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 912) = v58;
    *Swift::Int v58 = v0;
    v59 = sub_D8464;
    goto LABEL_37;
  }
  uint64_t v47 = sub_141160();
  os_log_type_t v48 = sub_141480();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    _os_log_impl(&dword_0, v47, v48, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] Using RF 2.0 multi-timer path", v49, 2u);
    swift_slowDealloc();
  }
  uint64_t v50 = *(void **)(v0 + 792);

  id v51 = [v50 identifier];
  if (!v51)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v84 = sub_141160();
    os_log_type_t v85 = sub_141470();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      _os_log_impl(&dword_0, v84, v85, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] Invalid Timer ID! Cannot continue.", v86, 2u);
      swift_slowDealloc();
    }
    uint64_t v87 = *(void **)(v0 + 792);
    uint64_t v64 = *(void *)(v0 + 752);
    uint64_t v98 = *(void *)(v0 + 744);
    uint64_t v100 = *(void *)(v0 + 776);
    uint64_t v65 = *(void *)(v0 + 736);
    uint64_t v66 = v104[90];
    uint64_t v102 = v104[89];
    uint64_t v67 = v104[79];
    uint64_t v68 = v104[77];
    uint64_t v69 = v104[76];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v88 = 0;
    swift_willThrow();
    swift_release();

    goto LABEL_33;
  }

  if (qword_17B190 != -1) {
    swift_once();
  }
  uint64_t v52 = *(void *)(*(void *)(v0 + 848) + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration);
  uint64_t v53 = *(void *)(v0 + 528);
  if (v52)
  {
    swift_retain();
    swift_retain();
    sub_185D4((uint64_t *)(v0 + 296));
    sub_188C4(v52, (void *)(v0 + 296), v53);
    _s20HandleIntentStrategyVwxx_1(v0 + 296);
    swift_release();
    uint64_t v54 = sub_140500();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
  }
  else
  {
    uint64_t v89 = sub_140500();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v53, 1, 1, v89);
    swift_retain();
  }
  uint64_t v90 = *(void *)(v0 + 848);
  uint64_t v91 = (void *)swift_task_alloc();
  *(void *)(v0 + 872) = v91;
  *uint64_t v91 = v0;
  v91[1] = sub_D7754;
  uint64_t v92 = *(void *)(v0 + 528);
  return sub_1A198(v90, v92);
}

uint64_t sub_D69F0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_D6B34, 0, 0);
}

uint64_t sub_D6B34()
{
  uint64_t v1 = *(void *)(v0 + 624);
  uint64_t v2 = *(void *)(v0 + 616);
  uint64_t v3 = *(void *)(v0 + 608);
  sub_140690();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (*(void *)(v0 + 832)) {
    int v4 = *(unsigned __int8 *)(v0 + 1048);
  }
  else {
    int v4 = 0;
  }
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 176), *(void *)(v0 + 200));
  char v5 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 176);
  if ((v5 & 1) != 0 && !v4)
  {
    uint64_t v6 = *(void **)(v0 + 792);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_142E80;
    *(void *)(v7 + 32) = v6;
    unint64_t v82 = v7;
    sub_141330();
    id v8 = v6;
    id v9 = sub_79174(v82, 13);
    *(void *)(v0 + 976) = v9;
    swift_bridgeObjectRelease();
    if (v9)
    {
      uint64_t v10 = self;
      *(void *)(v0 + 456) = 0;
      id v11 = [v10 archivedDataWithRootObject:v9 requiringSecureCoding:1 error:v0 + 456];
      uint64_t v12 = *(void **)(v0 + 456);
      if (v11)
      {
        uint64_t v13 = v11;
        id v14 = v12;
        uint64_t v15 = sub_13E4D0();
        uint64_t v17 = v16;

        *(void *)(v0 + 984) = v15;
        *(void *)(v0 + 992) = v17;
        if (qword_17B1A0 != -1) {
          swift_once();
        }
        uint64_t v18 = *(void *)(v0 + 848);
        uint64_t v19 = *(void *)(v0 + 480);
        uint64_t v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 1000) = v20;
        v20[2] = v15;
        v20[3] = v17;
        v20[4] = v18;
        v20[5] = v19;
        uint64_t v21 = (void *)swift_task_alloc();
        *(void *)(v0 + 1008) = v21;
        *uint64_t v21 = v0;
        v21[1] = sub_D930C;
        return sub_58094((uint64_t)sub_DAC2C, (uint64_t)v20);
      }
      uint64_t v57 = *(void *)(v0 + 752);
      uint64_t v73 = *(void **)(v0 + 792);
      uint64_t v75 = *(void *)(v0 + 744);
      uint64_t v81 = *(void *)(v0 + 736);
      uint64_t v58 = *(void *)(v0 + 720);
      uint64_t v77 = *(void *)(v0 + 776);
      uint64_t v79 = *(void *)(v0 + 712);
      uint64_t v72 = *(void *)(v0 + 632);
      uint64_t v59 = *(void *)(v0 + 616);
      uint64_t v60 = *(void *)(v0 + 608);
      id v61 = v12;
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v72, v60);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v77, v75);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v81, v79);
      goto LABEL_45;
    }
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_141160();
    uint64_t v42 = sub_141470();
    if (os_log_type_enabled(v41, (os_log_type_t)v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_0, v41, (os_log_type_t)v42, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] Could not get timer action from timer.", v43, 2u);
      swift_slowDealloc();
    }
    uint64_t v44 = *(void **)(v0 + 792);
    uint64_t v45 = *(void *)(v0 + 752);
    uint64_t v74 = *(void *)(v0 + 744);
    uint64_t v76 = *(void *)(v0 + 776);
    uint64_t v46 = *(void *)(v0 + 720);
    uint64_t v78 = *(void *)(v0 + 712);
    uint64_t v80 = *(void *)(v0 + 736);
    uint64_t v47 = *(void *)(v0 + 632);
    uint64_t v48 = *(void *)(v0 + 616);
    uint64_t v49 = *(void *)(v0 + 608);

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v50 = 1;
    swift_willThrow();
    swift_release();

LABEL_44:
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v76, v74);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v80, v78);
LABEL_45:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
    return v67();
  }
  id v23 = (char *)[*(id *)(v0 + 792) type];
  if ((unint64_t)v23 >= 2)
  {
    if (v23 != (unsigned char *)&dword_0 + 2)
    {
      if (qword_17B1A0 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_140560();
      sub_1408A0();
      sub_140890();
      swift_release();
      uint64_t v53 = sub_140550();
      *(void *)(v0 + 944) = v53;
      sub_5830(&qword_17F3D0);
      uint64_t v54 = swift_allocObject();
      *(void *)(v0 + 952) = v54;
      *(_OWORD *)(v54 + 16) = xmmword_142D50;
      *(void *)(v54 + 32) = 0x656369766564;
      *(void *)(v54 + 40) = 0xE600000000000000;
      *(void *)(v54 + 72) = v52;
      *(void *)(v54 + 48) = v53;
      uint64_t v55 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      swift_retain();
      char v56 = (void *)swift_task_alloc();
      *(void *)(v0 + 960) = v56;
      *char v56 = v0;
      v56[1] = sub_D8E24;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                                  + v55))(0xD000000000000011, 0x8000000000147810, v54);
    }
    if (qword_17B1A0 != -1) {
      swift_once();
    }
    uint64_t v36 = qword_180F00;
    uint64_t v37 = &dword_17CB00;
    uint64_t v38 = dword_17CB00;
    swift_retain();
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 928) = v39;
    *uint64_t v39 = v0;
    id v40 = sub_D8944;
LABEL_32:
    v39[1] = v40;
    uint64_t v51 = *(void *)(v0 + 848);
    return ((uint64_t (*)(uint64_t, uint64_t))((char *)v37 + v38))(v36, v51);
  }
  uint64_t v24 = *(void *)(v0 + 552);
  uint64_t v25 = *(void *)(v0 + 544);
  uint64_t v26 = *(void *)(v0 + 536);
  sub_140720();
  BOOL v27 = sub_1406C0();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  if (!v27)
  {
    if (qword_17B1A0 != -1) {
      swift_once();
    }
    uint64_t v36 = qword_180F00;
    uint64_t v37 = &dword_17CAF8;
    uint64_t v38 = dword_17CAF8;
    swift_retain();
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 912) = v39;
    *uint64_t v39 = v0;
    id v40 = sub_D8464;
    goto LABEL_32;
  }
  id v28 = sub_141160();
  os_log_type_t v29 = sub_141480();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_0, v28, v29, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] Using RF 2.0 multi-timer path", v30, 2u);
    swift_slowDealloc();
  }
  id v31 = *(void **)(v0 + 792);

  id v32 = [v31 identifier];
  if (!v32)
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = sub_141160();
    os_log_type_t v63 = sub_141470();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl(&dword_0, v62, v63, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] Invalid Timer ID! Cannot continue.", v64, 2u);
      swift_slowDealloc();
    }
    uint64_t v65 = *(void **)(v0 + 792);
    uint64_t v45 = *(void *)(v0 + 752);
    uint64_t v74 = *(void *)(v0 + 744);
    uint64_t v76 = *(void *)(v0 + 776);
    uint64_t v46 = *(void *)(v0 + 720);
    uint64_t v78 = *(void *)(v0 + 712);
    uint64_t v80 = *(void *)(v0 + 736);
    uint64_t v47 = *(void *)(v0 + 632);
    uint64_t v48 = *(void *)(v0 + 616);
    uint64_t v49 = *(void *)(v0 + 608);

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v66 = 0;
    swift_willThrow();
    swift_release();

    goto LABEL_44;
  }

  if (qword_17B190 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)(*(void *)(v0 + 848) + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration);
  uint64_t v34 = *(void *)(v0 + 528);
  if (v33)
  {
    swift_retain();
    swift_retain();
    sub_185D4((uint64_t *)(v0 + 296));
    sub_188C4(v33, (void *)(v0 + 296), v34);
    _s20HandleIntentStrategyVwxx_1(v0 + 296);
    swift_release();
    uint64_t v35 = sub_140500();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
  else
  {
    uint64_t v68 = sub_140500();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v34, 1, 1, v68);
    swift_retain();
  }
  uint64_t v69 = *(void *)(v0 + 848);
  uint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 872) = v70;
  *uint64_t v70 = v0;
  v70[1] = sub_D7754;
  uint64_t v71 = *(void *)(v0 + 528);
  return sub_1A198(v69, v71);
}

uint64_t sub_D7754(uint64_t a1)
{
  uint64_t v3 = *v2;
  v3[110] = a1;
  v3[111] = v1;
  swift_task_dealloc();
  sub_904C(v3[66], &qword_17BE78);
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    int v4 = sub_D999C;
  }
  else
  {
    int v4 = sub_D7900;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D7900()
{
  uint64_t v37 = v0;
  unint64_t v1 = *(void *)(v0 + 832);
  if (v1)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_141160();
    os_log_type_t v3 = sub_141480();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = *(void *)(v0 + 824);
      char v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)char v5 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 448) = sub_58C0(v4, v1, &v36);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v2, v3, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] We have a live activity: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    int v22 = *(unsigned __int8 *)(v0 + 1048);
    uint64_t v23 = *(void *)(v0 + 832);
    uint64_t v24 = *(void *)(v0 + 736);
    uint64_t v25 = *(void *)(v0 + 728);
    uint64_t v26 = *(void *)(v0 + 720);
    uint64_t v27 = *(void *)(v0 + 712);
    sub_13EC50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v25, v24, v27);
    if (v22 == 1 && v23)
    {
      *(void *)(v0 + 288) = 0;
      *(_OWORD *)(v0 + 256) = 0u;
      *(_OWORD *)(v0 + 272) = 0u;
    }
    else
    {
      id v28 = *(uint64_t **)(v0 + 520);
      uint64_t v29 = *(void *)(v0 + 512);
      sub_5830(&qword_17C358);
      uint64_t v30 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
      unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_142D50;
      sub_1B94C((void *)(v32 + v31));
      uint64_t *v28 = v32;
      swift_storeEnumTagMultiPayload();
      *(void *)(v0 + 280) = v29;
      *(void *)(v0 + 288) = sub_DB93C((unint64_t *)&qword_17C348, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
      uint64_t v33 = sub_187EC((uint64_t *)(v0 + 256));
      sub_4ED84((uint64_t)v28, (uint64_t)v33);
    }
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 896) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_D7EAC;
    uint64_t v21 = *(void *)(v0 + 832);
    uint64_t v20 = *(void *)(v0 + 824);
    uint64_t v15 = *(void *)(v0 + 768);
    uint64_t v16 = *(void *)(v0 + 728);
    uint64_t v17 = *(void *)(v0 + 632);
    uint64_t v18 = *(void *)(v0 + 472);
    unint64_t v39 = 0x8000000000148540;
    uint64_t v19 = v0 + 256;
  }
  else
  {
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "[CreateTimer.HandleIntentStrategy.makeIntentHandledResponse] No live activity - use snippet model.", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 512);

    sub_13EC50();
    *(void *)(v0 + 240) = v9;
    *(void *)(v0 + 248) = sub_DB93C((unint64_t *)&qword_17C348, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v10 = sub_187EC((uint64_t *)(v0 + 216));
    sub_5830(&qword_17C358);
    uint64_t v11 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
    unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_142D50;
    sub_1B94C((void *)(v13 + v12));
    *uint64_t v10 = v13;
    swift_storeEnumTagMultiPayload();
    id v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 904) = v14;
    *id v14 = v0;
    v14[1] = sub_D80CC;
    uint64_t v15 = *(void *)(v0 + 760);
    uint64_t v16 = *(void *)(v0 + 736);
    uint64_t v17 = *(void *)(v0 + 632);
    uint64_t v18 = *(void *)(v0 + 472);
    unint64_t v39 = 0x8000000000148540;
    uint64_t v19 = v0 + 216;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v18, v15, v16, v19, v17, v20, v21, 0xD000000000000013);
}

uint64_t sub_D7EAC()
{
  uint64_t v1 = *(void *)v0 + 256;
  uint64_t v2 = *(void *)(*(void *)v0 + 768);
  uint64_t v3 = *(void *)(*(void *)v0 + 752);
  uint64_t v4 = *(void *)(*(void *)v0 + 744);
  uint64_t v5 = *(void *)(*(void *)v0 + 728);
  uint64_t v6 = *(void *)(*(void *)v0 + 720);
  uint64_t v7 = *(void *)(*(void *)v0 + 712);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_DB984, 0, 0);
}

uint64_t sub_D80CC()
{
  uint64_t v1 = *(void *)v0 + 216;
  uint64_t v2 = *(void *)(*(void *)v0 + 760);
  uint64_t v3 = *(void *)(*(void *)v0 + 752);
  uint64_t v4 = *(void *)(*(void *)v0 + 744);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_D826C, 0, 0);
}

uint64_t sub_D826C()
{
  uint64_t v1 = *(void **)(v0 + 792);

  swift_release();
  uint64_t v2 = *(void *)(v0 + 776);
  uint64_t v3 = *(void *)(v0 + 752);
  uint64_t v4 = *(void *)(v0 + 744);
  uint64_t v5 = *(void *)(v0 + 736);
  uint64_t v6 = *(void *)(v0 + 720);
  uint64_t v7 = *(void *)(v0 + 712);
  (*(void (**)(void, void))(*(void *)(v0 + 616) + 8))(*(void *)(v0 + 632), *(void *)(v0 + 608));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_D8464(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[42] = v2;
  v3[43] = a1;
  v3[44] = v1;
  v3[115] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_D874C;
  }
  else
  {
    uint64_t v4 = sub_D85E4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D85E4()
{
  uint64_t v1 = v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[97];
  uint64_t v4 = v0[95];
  uint64_t v5 = v0[94];
  uint64_t v6 = v0[93];
  uint64_t v7 = v0[92];
  v0[128] = v0[43];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v6);
  id v8 = (void *)swift_task_alloc();
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = v7;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[129] = v9;
  void *v9 = v0;
  v9[1] = sub_D9614;
  uint64_t v10 = v0[79];
  uint64_t v11 = v0[63];
  uint64_t v12 = v0[59];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v12, v11, v10);
}

uint64_t sub_D874C()
{
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = v0[97];
  uint64_t v3 = v0[94];
  uint64_t v4 = v0[93];
  uint64_t v12 = v0[92];
  uint64_t v5 = v0[90];
  uint64_t v6 = v0[89];
  uint64_t v7 = v0[79];
  uint64_t v8 = v0[77];
  uint64_t v9 = v0[76];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_D8944(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[45] = v2;
  v3[46] = a1;
  v3[47] = v1;
  v3[117] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_D8C2C;
  }
  else
  {
    uint64_t v4 = sub_D8AC4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D8AC4()
{
  uint64_t v1 = v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[97];
  uint64_t v4 = v0[95];
  uint64_t v5 = v0[94];
  uint64_t v6 = v0[93];
  uint64_t v7 = v0[92];
  v0[128] = v0[46];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = v7;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[129] = v9;
  void *v9 = v0;
  v9[1] = sub_D9614;
  uint64_t v10 = v0[79];
  uint64_t v11 = v0[63];
  uint64_t v12 = v0[59];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v12, v11, v10);
}

uint64_t sub_D8C2C()
{
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = v0[97];
  uint64_t v3 = v0[94];
  uint64_t v4 = v0[93];
  uint64_t v12 = v0[92];
  uint64_t v5 = v0[90];
  uint64_t v6 = v0[89];
  uint64_t v7 = v0[79];
  uint64_t v8 = v0[77];
  uint64_t v9 = v0[76];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_D8E24(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[48] = v2;
  v3[49] = a1;
  v3[50] = v1;
  v3[121] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_D90FC;
  }
  else {
    uint64_t v4 = sub_D8F8C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D8F8C()
{
  swift_release();
  uint64_t v1 = v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[97];
  uint64_t v4 = v0[95];
  uint64_t v5 = v0[94];
  uint64_t v6 = v0[93];
  uint64_t v7 = v0[92];
  v0[128] = v0[49];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = v7;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[129] = v9;
  void *v9 = v0;
  v9[1] = sub_D9614;
  uint64_t v10 = v0[79];
  uint64_t v11 = v0[63];
  uint64_t v12 = v0[59];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v12, v11, v10);
}

uint64_t sub_D90FC()
{
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = v0[94];
  uint64_t v3 = v0[93];
  uint64_t v12 = v0[92];
  uint64_t v4 = v0[90];
  uint64_t v10 = v0[97];
  uint64_t v11 = v0[89];
  uint64_t v5 = v0[79];
  uint64_t v6 = v0[77];
  uint64_t v7 = v0[76];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_D930C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[51] = v2;
  v3[52] = a1;
  v3[53] = v1;
  v3[127] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_D9B94;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = sub_D9490;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D9490()
{
  unint64_t v1 = *(void *)(v0 + 992);
  uint64_t v2 = *(void *)(v0 + 984);

  sub_34B88(v2, v1);
  uint64_t v3 = *(void *)(v0 + 832);
  uint64_t v4 = *(void *)(v0 + 824);
  uint64_t v5 = *(void *)(v0 + 776);
  uint64_t v6 = *(void *)(v0 + 760);
  uint64_t v7 = *(void *)(v0 + 752);
  uint64_t v8 = *(void *)(v0 + 744);
  uint64_t v9 = *(void *)(v0 + 736);
  *(void *)(v0 + 1024) = *(void *)(v0 + 416);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v4;
  v10[3] = v3;
  v10[4] = v9;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 1032) = v11;
  void *v11 = v0;
  v11[1] = sub_D9614;
  uint64_t v12 = *(void *)(v0 + 632);
  uint64_t v13 = *(void *)(v0 + 504);
  uint64_t v14 = *(void *)(v0 + 472);
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v14, v13, v12);
}

uint64_t sub_D9614()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[62] + 8))(v2[63], v2[61]);
  if (v0) {
    uint64_t v3 = sub_D9DA4;
  }
  else {
    uint64_t v3 = sub_D97A8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_D97A8()
{
  uint64_t v1 = (void *)v0[128];
  uint64_t v2 = (void *)v0[99];
  swift_release();

  uint64_t v3 = v0[97];
  uint64_t v4 = v0[94];
  uint64_t v5 = v0[93];
  uint64_t v6 = v0[92];
  uint64_t v7 = v0[90];
  uint64_t v8 = v0[89];
  (*(void (**)(void, void))(v0[77] + 8))(v0[79], v0[76]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_D999C()
{
  uint64_t v1 = (void *)v0[99];
  uint64_t v2 = v0[97];
  uint64_t v3 = v0[94];
  uint64_t v4 = v0[93];
  uint64_t v12 = v0[92];
  uint64_t v5 = v0[90];
  uint64_t v6 = v0[89];
  uint64_t v7 = v0[79];
  uint64_t v8 = v0[77];
  uint64_t v9 = v0[76];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_D9B94()
{
  uint64_t v1 = (void *)v0[122];
  uint64_t v2 = (void *)v0[99];
  uint64_t v3 = v0[94];
  uint64_t v4 = v0[93];
  uint64_t v13 = v0[92];
  uint64_t v5 = v0[90];
  uint64_t v11 = v0[97];
  uint64_t v12 = v0[89];
  uint64_t v6 = v0[79];
  uint64_t v7 = v0[77];
  uint64_t v8 = v0[76];
  sub_34B88(v0[123], v0[124]);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_D9DA4()
{
  uint64_t v1 = (void *)v0[128];
  uint64_t v2 = (void *)v0[99];
  uint64_t v3 = v0[97];
  uint64_t v4 = v0[94];
  uint64_t v5 = v0[93];
  uint64_t v6 = v0[90];
  uint64_t v12 = v0[89];
  uint64_t v13 = v0[92];
  uint64_t v7 = v0[79];
  uint64_t v8 = v0[77];
  uint64_t v9 = v0[76];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_D9FA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20[-1] - v10;
  sub_13E4C0(0);
  sub_1404D0();
  uint64_t v12 = sub_140500();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v14 = 1;
  v13(v11, 0, 1, v12);
  uint64_t TimerHandledOnWatchParameters = type metadata accessor for CreateTimerHandledOnWatchParameters(0);
  sub_2D248((uint64_t)v11, (uint64_t)a1 + *(int *)(TimerHandledOnWatchParameters + 28));
  swift_retain();
  swift_release();
  a1[1] = a4;
  uint64_t v16 = *(void *)(a4 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration);
  if (v16)
  {
    sub_185D4(v20);
    sub_188C4(v16, v20, (uint64_t)v9);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v20);
    uint64_t v14 = 0;
  }
  v13(v9, v14, 1, v12);
  sub_2D248((uint64_t)v9, (uint64_t)a1 + *(int *)(TimerHandledOnWatchParameters + 24));
  sub_1404A0();
  sub_5830(&qword_17CDE0);
  sub_13F150();
  uint64_t v17 = sub_140490();
  uint64_t result = swift_release();
  *a1 = v17;
  return result;
}

uint64_t sub_DA18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_13F1D0();
  uint64_t v8 = sub_13EFF0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a4, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  return sub_13F1C0();
}

void sub_DA2A8(id *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_13E550();
  uint64_t v6 = *(void **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_5830(&qword_17F5A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *a1;
  if ([*a1 state] == (char *)&dword_0 + 3)
  {
    uint64_t v25 = a3;
    sub_5830(&qword_17CDE0);
    uint64_t v13 = (void *)sub_13F140();
    id v14 = [v13 createdTimer];

    if (v14 && (id v15 = [v14 identifier], v14, v15))
    {
      uint64_t v24 = sub_141250();
      uint64_t v17 = v16;

      id v18 = [v12 timerID];
      if (!v18)
      {
LABEL_17:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v6[7])(v11, 1, 1, v5);
        goto LABEL_18;
      }
      uint64_t v19 = v18;
      sub_13E530();

      ((void (*)(char *, char *, uint64_t))v6[4])(v11, v8, v5);
      ((void (*)(char *, void, uint64_t, uint64_t))v6[7])(v11, 0, 1, v5);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v6[6])(v11, 1, v5) == 1)
      {
LABEL_18:
        __break(1u);
        return;
      }
      uint64_t v20 = sub_13E520();
      uint64_t v22 = v21;
      ((void (*)(char *, uint64_t))v6[1])(v11, v5);
      uint64_t v6 = v25;
      if (v20 == v24 && v22 == v17)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
      uint64_t v5 = sub_141AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
      {
        if (!__OFADD__(*v6, 1))
        {
          ++*v6;
          return;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (__OFADD__(*v25, 1))
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      ++*v25;
    }
  }
}

void sub_DA5B4(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_141610();
    sub_DB8FC();
    sub_DB93C(&qword_17F598, (void (*)(uint64_t))sub_DB8FC);
    sub_1413E0();
    uint64_t v5 = v23;
    uint64_t v22 = v24;
    uint64_t v7 = v25;
    int64_t v8 = v26;
    unint64_t v9 = v27;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v22 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v21 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_141630())
  {
    sub_DB8FC();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v28;
    swift_unknownObjectRelease();
    int64_t v15 = v8;
    uint64_t v16 = v9;
    while (v14)
    {
      id v28 = v14;
      a1(&v28);

      if (v4) {
        break;
      }
      int64_t v8 = v15;
      unint64_t v9 = v16;
      if (v5 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v9)
      {
        uint64_t v16 = (v9 - 1) & v9;
        unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
        int64_t v15 = v8;
      }
      else
      {
        int64_t v15 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v21) {
          break;
        }
        unint64_t v18 = *(void *)(v22 + 8 * v15);
        if (!v18)
        {
          int64_t v19 = v8 + 2;
          if (v8 + 2 >= v21) {
            break;
          }
          unint64_t v18 = *(void *)(v22 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 3;
          if (v8 + 3 >= v21) {
            break;
          }
          unint64_t v18 = *(void *)(v22 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 4;
          if (v8 + 4 >= v21) {
            break;
          }
          unint64_t v18 = *(void *)(v22 + 8 * v19);
          if (v18)
          {
LABEL_22:
            int64_t v15 = v19;
          }
          else
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v21) {
              break;
            }
            unint64_t v18 = *(void *)(v22 + 8 * v15);
            if (!v18)
            {
              int64_t v20 = v8 + 6;
              while (v21 != v20)
              {
                unint64_t v18 = *(void *)(v22 + 8 * v20++);
                if (v18)
                {
                  int64_t v15 = v20 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v16 = (v18 - 1) & v18;
        unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    }
  }
  sub_D2554();
}

uint64_t sub_DA8C8()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_DA988(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_DAA28;
  return sub_D4DF0(a1, a2);
}

uint64_t sub_DAA28()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_DAB5C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_DAB5C()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_DAC20(uint64_t a1)
{
  return sub_DA18C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_DAC2C(uint64_t *a1)
{
  return sub_D9FA0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_DAC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  uint64_t v4 = sub_140500();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = type metadata accessor for TimeSuggestionExecutionParameters();
  v3[22] = swift_task_alloc();
  sub_5830(&qword_17F588);
  v3[23] = swift_task_alloc();
  uint64_t v5 = sub_140770();
  v3[24] = v5;
  v3[25] = *(void *)(v5 - 8);
  v3[26] = swift_task_alloc();
  uint64_t v6 = sub_140730();
  v3[27] = v6;
  v3[28] = *(void *)(v6 - 8);
  v3[29] = swift_task_alloc();
  return _swift_task_switch(sub_DAE14, 0, 0);
}

uint64_t sub_DAE14()
{
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  sub_140720();
  BOOL v4 = sub_1406F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    v0[14] = 0;
    sub_140BA0();
    sub_140740();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[30] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_DAF70;
    return SiriTimeDeviceContextProvider.fetchTimerContexts()();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_DAF70(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 208);
  uint64_t v3 = *(void *)(*(void *)v1 + 200);
  uint64_t v4 = *(void *)(*(void *)v1 + 192);
  *(void *)(*(void *)v1 + 248) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_DB0D0, 0, 0);
}

uint64_t sub_DB0D0()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(sub_140980() - 8);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v6 = *(void *)(v0 + 136);
      uint64_t v7 = sub_140970();
      uint64_t v8 = swift_task_alloc();
      *(void *)(v8 + 16) = v6;
      *(void *)(v8 + 24) = v0 + 112;
      sub_DA5B4(sub_DB81C, v8, v7);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char v9 = AFDeviceSupportsEchoCancellation();
  id v10 = [self sharedPreferences];
  unsigned __int8 v11 = [v10 deviceUsesCompactVoiceTrigger];

  sub_140330();
  uint64_t v12 = sub_140310();
  uint64_t v13 = *(void *)(v0 + 184);
  if (v12)
  {
    sub_1402F0();
    swift_release();
    sub_140BB0();
    swift_release();
    uint64_t v14 = sub_1403A0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  }
  else
  {
    uint64_t v15 = sub_1403A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v16 = *(void *)(v0 + 184);
  uint64_t v18 = *(void *)(v0 + 168);
  sub_5830(&qword_17CDE0);
  int64_t v19 = (void *)sub_13F160();
  sub_140C80();
  uint64_t v21 = v20;

  uint64_t v22 = *(void *)(v0 + 112);
  sub_DB838(v16, v17 + *(int *)(v18 + 28));
  *(void *)uint64_t v17 = v21;
  *(void *)(v17 + 8) = v22;
  *(unsigned char *)(v17 + 16) = v9;
  *(unsigned char *)(v17 + *(int *)(v18 + 32)) = v11;
  uint64_t v23 = sub_F4028();
  *(void *)(v0 + 256) = v23;
  sub_DB8A0(v17);
  uint64_t v24 = (void *)sub_13F160();
  id v25 = [v24 label];

  int64_t v26 = &_swiftEmptyDictionarySingleton;
  if (v25)
  {
    uint64_t v27 = *(void *)(v0 + 152);
    uint64_t v28 = *(void *)(v0 + 160);
    uint64_t v29 = *(void *)(v0 + 144);
    sub_1414A0();

    uint64_t v30 = sub_1404F0();
    uint64_t v32 = v31;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    if (qword_17B2B8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_141170();
    sub_33D8(v33, (uint64_t)qword_17F518);
    uint64_t v34 = sub_141160();
    os_log_type_t v35 = sub_141460();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_0, v34, v35, "CreateTimerIntentHandle has label. Adding to param dictionary", v36, 2u);
      swift_slowDealloc();
    }

    *(void *)(v0 + 40) = &type metadata for String;
    *(void *)(v0 + 48) = &protocol witness table for String;
    *(void *)(v0 + 56) = &protocol witness table for String;
    *(void *)(v0 + 16) = v30;
    *(void *)(v0 + 24) = v32;
    sub_34AF0((long long *)(v0 + 16), (_OWORD *)(v0 + 64));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = &_swiftEmptyDictionarySingleton;
    uint64_t v38 = *(void *)(v0 + 88);
    uint64_t v39 = sub_18874(v0 + 64, v38);
    uint64_t v40 = *(void *)(v38 - 8);
    uint64_t v41 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 16))(v41, v39, v38);
    sub_47578(*v41, v41[1], 0x62614C72656D6974, 0xEA00000000006C65, isUniquelyReferenced_nonNull_native, &v47);
    _s20HandleIntentStrategyVwxx_1(v0 + 64);
    swift_task_dealloc();
    int64_t v26 = v47;
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 264) = v26;
  uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_180D10
                                                                                     + dword_180D10);
  uint64_t v42 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_DB644;
  uint64_t v44 = *(void *)(v0 + 120);
  uint64_t v43 = *(void *)(v0 + 128);
  return v46(v44, v43, 0xD00000000000005ELL, 0x8000000000149F70, (uint64_t)v26, (uint64_t)v23);
}

uint64_t sub_DB644()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_DB778, 0, 0);
}

uint64_t sub_DB778()
{
  sub_904C(*(void *)(v0 + 184), &qword_17F588);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_DB81C(id *a1)
{
  sub_DA2A8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_DB838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17F588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_DB8A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimeSuggestionExecutionParameters();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_DB8FC()
{
  unint64_t result = qword_17F590;
  if (!qword_17F590)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_17F590);
  }
  return result;
}

uint64_t sub_DB93C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_DB984()
{
  return sub_D826C();
}

uint64_t sub_DB9F8()
{
  uint64_t v0 = 0;
  switch(sub_5BFC())
  {
    case 1u:
    case 3u:
    case 4u:
    case 9u:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
      return v0;
    case 2u:
      sub_13FA30();
      if (v19)
      {
        sub_13FC10();
        if (swift_dynamicCast()) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_141170();
      sub_33D8(v7, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on deleteTimerTask.";
      goto LABEL_87;
    case 5u:
      sub_13FA30();
      if (v19)
      {
        sub_13FB60();
        if (swift_dynamicCast()) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_141170();
      sub_33D8(v8, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on pauseTimerTask.";
      goto LABEL_87;
    case 6u:
      sub_13FA30();
      if (v19)
      {
        sub_13FCB0();
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_13FF20();
          swift_release();
          uint64_t v0 = v17;
          if (v17)
          {
            swift_release();
            return v0;
          }
          swift_retain();
          sub_13FF10();
          goto LABEL_90;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_141170();
      sub_33D8(v9, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        uint64_t v5 = "Parse entity: timer entity not found on requestTimerTask.";
        goto LABEL_87;
      }
      goto LABEL_88;
    case 7u:
      sub_13FA30();
      if (v19)
      {
        sub_13FB80();
        if (swift_dynamicCast()) {
          goto LABEL_29;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_141170();
      sub_33D8(v10, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on resetTimerTask.";
      goto LABEL_87;
    case 8u:
      sub_13FA30();
      if (v19)
      {
        sub_13FC70();
        if (swift_dynamicCast()) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_141170();
      sub_33D8(v11, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on resumeTimerTask.";
      goto LABEL_87;
    case 0xAu:
      sub_13FA30();
      if (v19)
      {
        sub_13FB10();
        if (swift_dynamicCast()) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_141170();
      sub_33D8(v12, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on stopTimerTask.";
      goto LABEL_87;
    case 0xBu:
      sub_13FA30();
      if (v19)
      {
        sub_13FDE0();
        if (swift_dynamicCast()) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_141170();
      sub_33D8(v13, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on summariseTimerTask.";
      goto LABEL_87;
    case 0xCu:
      sub_13FA30();
      if (v19)
      {
        sub_13FC90();
        if (swift_dynamicCast())
        {
LABEL_29:
          swift_retain();
          sub_13FF50();
          goto LABEL_90;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_141170();
      sub_33D8(v14, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on updateTimerTask.";
      goto LABEL_87;
    case 0xDu:
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_141170();
      sub_33D8(v1, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141470();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: failed to parse task with unknown verb. Returning nil entity";
      goto LABEL_87;
    case 0xEu:
      sub_13FA30();
      if (v19)
      {
        sub_13FC40();
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_13F5F0();
          goto LABEL_90;
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_141170();
      sub_33D8(v15, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (!os_log_type_enabled(v2, v3)) {
        goto LABEL_88;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Parse entity: timer entity not found on noVerbTimerTask.";
      goto LABEL_87;
    default:
      sub_13FA30();
      if (v19)
      {
        sub_140110();
        if (swift_dynamicCast())
        {
LABEL_26:
          swift_retain();
          sub_13FBC0();
LABEL_90:
          swift_release_n();
          return v18[0];
        }
      }
      else
      {
        sub_904C((uint64_t)v18, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_141170();
      sub_33D8(v6, (uint64_t)qword_17F5A8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141480();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        uint64_t v5 = "Parse entity: timer entity not found on checkExistenceTimerTask.";
LABEL_87:
        _os_log_impl(&dword_0, v2, v3, v5, v4, 2u);
        swift_slowDealloc();
      }
LABEL_88:

      return 0;
  }
}

char *sub_DC564(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1417D0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      os_log_type_t v3 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v4 = 4;
      uint64_t v11 = v2;
      while (1)
      {
        uint64_t v6 = v4 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          sub_1416A0();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          swift_retain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        swift_getKeyPath();
        swift_retain();
        swift_getAtKeyPath();
        swift_release();
        swift_release_n();
        if (v13)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            os_log_type_t v3 = sub_E0380(0, *((void *)v3 + 2) + 1, 1, v3);
          }
          unint64_t v9 = *((void *)v3 + 2);
          unint64_t v8 = *((void *)v3 + 3);
          if (v9 >= v8 >> 1) {
            os_log_type_t v3 = sub_E0380((char *)(v8 > 1), v9 + 1, 1, v3);
          }
          *((void *)v3 + 2) = v9 + 1;
          uint64_t v5 = &v3[16 * v9];
          *((void *)v5 + 4) = v12;
          *((void *)v5 + 5) = v13;
          uint64_t v2 = v11;
        }
        ++v4;
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)&_swiftEmptyArrayStorage;
}

uint64_t sub_DC734()
{
  uint64_t v0 = sub_13FBE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  os_log_type_t v3 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_5830(&qword_17DD30);
  __chkstk_darwin(v109);
  uint64_t v5 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_5830(&qword_17DD38);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v111 = (uint64_t)&v102 - v11;
  __chkstk_darwin(v10);
  uint64_t v110 = (char *)&v102 - v12;
  uint64_t v13 = sub_13F650();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v116 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_5830(&qword_17F5D8);
  uint64_t v16 = __chkstk_darwin(v134);
  v124 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v102 - v18;
  uint64_t v20 = sub_5830(&qword_17F5E0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v114 = (uint64_t)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v125 = (uint64_t)&v102 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v126 = (uint64_t)&v102 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v102 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v120 = (uint64_t)&v102 - v31;
  __chkstk_darwin(v30);
  uint64_t v123 = (uint64_t)&v102 - v32;
  sub_13FA30();
  if (!v137[3])
  {
    sub_904C((uint64_t)v137, &qword_17B9B0);
LABEL_30:
    if (qword_17B2C0 != -1) {
      goto LABEL_64;
    }
    goto LABEL_31;
  }
  sub_13FD60();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_30;
  }
  uint64_t v135 = v14;
  uint64_t v115 = v29;
  uint64_t v103 = v9;
  uint64_t v102 = v3;
  uint64_t v33 = v136;
  if (qword_17B2C0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_141170();
  uint64_t v107 = sub_33D8(v34, (uint64_t)qword_17F5A8);
  os_log_type_t v35 = sub_141160();
  os_log_type_t v36 = sub_141480();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v38 = v120;
  if (v37)
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl(&dword_0, v35, v36, "Searching for room confirmation in UsoTask_noVerb_common_Setting", v39, 2u);
    swift_slowDealloc();
  }
  uint64_t v104 = v1;
  unint64_t v105 = v5;
  uint64_t v106 = v0;

  swift_retain();
  uint64_t v40 = sub_13F5E0();
  swift_release();
  if (v40) {
    unint64_t v41 = v40;
  }
  else {
    unint64_t v41 = (unint64_t)&_swiftEmptyArrayStorage;
  }
  uint64_t v108 = v33;
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1417D0();
    uint64_t v43 = v123;
    if (v42) {
      goto LABEL_12;
    }
LABEL_66:
    swift_bridgeObjectRelease_n();
    swift_retain();
    sub_13F5F0();
    swift_release();
    if (v137[0] && (uint64_t v86 = sub_13F8C0(), swift_release(), v86))
    {
      uint64_t v87 = (uint64_t)v110;
      sub_13FBD0();
      swift_release();
      uint64_t v88 = v106;
      uint64_t v89 = (uint64_t)v105;
      uint64_t v90 = v104;
    }
    else
    {
      uint64_t v90 = v104;
      uint64_t v87 = (uint64_t)v110;
      uint64_t v88 = v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v110, 1, 1, v106);
      uint64_t v89 = (uint64_t)v105;
    }
    uint64_t v91 = v111;
    uint64_t v92 = v109;
    (*(void (**)(uint64_t, void, uint64_t))(v90 + 104))(v111, enum case for UsoEntity_common_Quantifier.DefinedValues.common_Quantifier_All(_:), v88);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v91, 0, 1, v88);
    uint64_t v93 = v89 + *(int *)(v92 + 48);
    sub_8FE8(v87, v89, &qword_17DD38);
    sub_8FE8(v91, v93, &qword_17DD38);
    uint64_t v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
    if (v94(v89, 1, v88) == 1)
    {
      sub_904C(v91, &qword_17DD38);
      sub_904C(v87, &qword_17DD38);
      if (v94(v93, 1, v88) == 1)
      {
        sub_904C(v89, &qword_17DD38);
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v95 = (uint64_t)v103;
      sub_8FE8(v89, (uint64_t)v103, &qword_17DD38);
      if (v94(v93, 1, v88) != 1)
      {
        unint64_t v96 = v102;
        (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v102, v93, v88);
        sub_E0C3C(&qword_17DD40, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_Quantifier.DefinedValues);
        char v97 = sub_141230();
        uint64_t v98 = *(void (**)(char *, uint64_t))(v90 + 8);
        v98(v96, v88);
        sub_904C(v111, &qword_17DD38);
        sub_904C(v87, &qword_17DD38);
        v98((char *)v95, v88);
        sub_904C(v89, &qword_17DD38);
        if (v97)
        {
LABEL_77:
          uint64_t v99 = sub_141160();
          os_log_type_t v100 = sub_141480();
          if (os_log_type_enabled(v99, v100))
          {
            uint64_t v61 = 2;
            uint64_t v101 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v101 = 0;
            _os_log_impl(&dword_0, v99, v100, "Found .all", v101, 2u);
            swift_slowDealloc();
            swift_release();
          }
          else
          {

            swift_release();
            return 2;
          }
          return v61;
        }
LABEL_79:
        swift_release();
        return 3;
      }
      sub_904C(v111, &qword_17DD38);
      sub_904C(v87, &qword_17DD38);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v95, v88);
    }
    sub_904C(v89, &qword_17DD30);
    goto LABEL_79;
  }
  uint64_t v42 = *(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  uint64_t v43 = v123;
  if (!v42) {
    goto LABEL_66;
  }
LABEL_12:
  unint64_t v133 = v41 & 0xC000000000000001;
  uint64_t v130 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
  unsigned int v122 = enum case for UsoEntity_common_UserEntity.DefinedValues.common_UserEntity_Everywhere(_:);
  uint64_t v131 = (unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48);
  uint64_t v132 = (void (**)(uint64_t, void, uint64_t))(v135 + 104);
  uint64_t v112 = (void (**)(char *, uint64_t, uint64_t))(v135 + 32);
  uint64_t v118 = (void (**)(uint64_t, uint64_t))(v135 + 8);
  uint64_t v44 = 4;
  unint64_t v119 = v41;
  v117 = v19;
  uint64_t v128 = v42;
  while (1)
  {
    uint64_t v47 = v44 - 4;
    if (!v133) {
      break;
    }
    uint64_t v48 = sub_1416A0();
    uint64_t v49 = v44 - 3;
    if (__OFADD__(v47, 1)) {
      goto LABEL_62;
    }
LABEL_21:
    sub_13F8B0();
    uint64_t v135 = v48;
    if (v137[0])
    {
      sub_13F640();
      swift_release();
      uint64_t v50 = v130;
    }
    else
    {
      uint64_t v50 = v130;
      (*v130)(v43, 1, 1, v13);
    }
    char v127 = *v132;
    v127(v38, v122, v13);
    uint64_t v129 = *v50;
    v129(v38, 0, 1, v13);
    uint64_t v51 = (uint64_t)&v19[*(int *)(v134 + 48)];
    sub_8FE8(v43, (uint64_t)v19, &qword_17F5E0);
    sub_8FE8(v38, v51, &qword_17F5E0);
    uint64_t v52 = *v131;
    if ((*v131)(v19, 1, v13) == 1)
    {
      if (v52((char *)v51, 1, v13) == 1)
      {
        sub_904C((uint64_t)v117, &qword_17F5E0);
        sub_904C(v38, &qword_17F5E0);
        sub_904C(v123, &qword_17F5E0);
        swift_release();
LABEL_53:
        swift_bridgeObjectRelease_n();
        uint64_t v80 = sub_141160();
        os_log_type_t v81 = sub_141480();
        if (os_log_type_enabled(v80, v81))
        {
          unint64_t v82 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v82 = 0;
          _os_log_impl(&dword_0, v80, v81, "Found .everywhere", v82, 2u);
          swift_slowDealloc();
          swift_release();
        }
        else
        {

          swift_release();
        }
        return 0;
      }
    }
    else
    {
      uint64_t v53 = (uint64_t)v115;
      sub_8FE8((uint64_t)v19, (uint64_t)v115, &qword_17F5E0);
      unint64_t v121 = v52;
      if (v52((char *)v51, 1, v13) != 1)
      {
        uint64_t v54 = v116;
        (*v112)(v116, v51, v13);
        sub_E0C3C(&qword_17F5E8, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_UserEntity.DefinedValues);
        int v113 = sub_141230();
        uint64_t v55 = *v118;
        (*v118)(v53, v13);
        char v56 = v54;
        unint64_t v41 = v119;
        v55((uint64_t)v56, v13);
        sub_904C((uint64_t)v19, &qword_17F5E0);
        uint64_t v38 = v120;
        sub_904C(v120, &qword_17F5E0);
        uint64_t v43 = v123;
        sub_904C(v123, &qword_17F5E0);
        swift_release();
        uint64_t v52 = v121;
        if (v113) {
          goto LABEL_53;
        }
        goto LABEL_15;
      }
      (*v118)(v53, v13);
      uint64_t v38 = v120;
      uint64_t v52 = v121;
    }
    uint64_t v19 = v117;
    sub_904C((uint64_t)v117, &qword_17F5D8);
    sub_904C(v38, &qword_17F5E0);
    uint64_t v43 = v123;
    sub_904C(v123, &qword_17F5E0);
    swift_release();
LABEL_15:
    ++v44;
    BOOL v45 = v49 == v128;
    uint64_t v46 = (uint64_t)v124;
    if (v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      LODWORD(v123) = enum case for UsoEntity_common_UserEntity.DefinedValues.common_UserEntity_Here(_:);
      uint64_t v63 = 4;
      uint64_t v64 = &qword_17F5E0;
      uint64_t v65 = v129;
      while (1)
      {
        if (v133) {
          uint64_t v67 = sub_1416A0();
        }
        else {
          uint64_t v67 = swift_retain();
        }
        uint64_t v68 = v63 - 3;
        uint64_t v69 = v126;
        if (__OFADD__(v63 - 4, 1)) {
          goto LABEL_63;
        }
        uint64_t v70 = v64;
        uint64_t v135 = v67;
        sub_13F8B0();
        if (v137[0])
        {
          sub_13F640();
          swift_release();
        }
        else
        {
          v65(v69, 1, 1, v13);
        }
        uint64_t v71 = v69;
        uint64_t v72 = v125;
        v127(v125, v123, v13);
        v65(v72, 0, 1, v13);
        uint64_t v73 = v46 + *(int *)(v134 + 48);
        uint64_t v74 = v71;
        uint64_t v64 = v70;
        sub_8FE8(v74, v46, v70);
        sub_8FE8(v72, v73, v70);
        if (v52((char *)v46, 1, v13) == 1) {
          break;
        }
        uint64_t v75 = v114;
        sub_8FE8(v46, v114, v70);
        if (v52((char *)v73, 1, v13) == 1)
        {
          (*v118)(v75, v13);
          uint64_t v65 = v129;
LABEL_38:
          sub_904C(v46, &qword_17F5D8);
          sub_904C(v125, v70);
          sub_904C(v126, v70);
          swift_release();
          goto LABEL_39;
        }
        uint64_t v76 = v116;
        (*v112)(v116, v73, v13);
        sub_E0C3C(&qword_17F5E8, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_UserEntity.DefinedValues);
        char v77 = sub_141230();
        uint64_t v78 = *v118;
        (*v118)(v75, v13);
        uint64_t v79 = v76;
        uint64_t v46 = (uint64_t)v124;
        v78((uint64_t)v79, v13);
        uint64_t v64 = v70;
        sub_904C(v46, v70);
        sub_904C(v125, v70);
        sub_904C(v126, v70);
        swift_release();
        uint64_t v65 = v129;
        if (v77) {
          goto LABEL_58;
        }
LABEL_39:
        ++v63;
        if (v68 == v128) {
          goto LABEL_66;
        }
      }
      unsigned int v66 = v52((char *)v73, 1, v13);
      uint64_t v65 = v129;
      if (v66 == 1)
      {
        sub_904C(v46, &qword_17F5E0);
        sub_904C(v125, &qword_17F5E0);
        sub_904C(v126, &qword_17F5E0);
        swift_release();
LABEL_58:
        swift_bridgeObjectRelease_n();
        uint64_t v83 = sub_141160();
        os_log_type_t v84 = sub_141480();
        if (os_log_type_enabled(v83, v84))
        {
          os_log_type_t v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v85 = 0;
          _os_log_impl(&dword_0, v83, v84, "Found .here", v85, 2u);
          swift_slowDealloc();
          swift_release();
        }
        else
        {

          swift_release();
        }
        return 1;
      }
      goto LABEL_38;
    }
  }
  uint64_t v48 = *(void *)(v41 + 8 * v44);
  swift_retain();
  uint64_t v49 = v44 - 3;
  if (!__OFADD__(v47, 1)) {
    goto LABEL_21;
  }
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  swift_once();
LABEL_31:
  uint64_t v57 = sub_141170();
  sub_33D8(v57, (uint64_t)qword_17F5A8);
  uint64_t v58 = sub_141160();
  os_log_type_t v59 = sub_141480();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v60 = 0;
    _os_log_impl(&dword_0, v58, v59, "No UsoTask_noVerb_common_Setting found when searching for room confirmation", v60, 2u);
    swift_slowDealloc();
  }

  return 3;
}

uint64_t sub_DD97C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F5A8);
  sub_33D8(v0, (uint64_t)qword_17F5A8);
  return sub_140E60();
}

uint64_t sub_DD9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a2;
  sub_5830(&qword_17F5C0);
  ((void (*)(void))__chkstk_darwin)();
  os_log_type_t v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13F430();
  uint64_t v7 = *(void *)(v6 - 8);
  ((void (*)(void))__chkstk_darwin)();
  os_log_type_t v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_13F540();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v43 = (char *)&v34 - v13;
  uint64_t v14 = sub_5830(&qword_17F5C8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v34 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v34 - v21;
  uint64_t v23 = v7;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v24((char *)&v34 - v21, 1, 1, v6);
  uint64_t v40 = v12;
  uint64_t v41 = a3;
  if (a1)
  {
    sub_5830(&qword_17BF00);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_142E80;
    *(void *)(v25 + 32) = a1;
    uint64_t v44 = v25;
    sub_141330();
  }
  swift_retain();
  uint64_t v26 = sub_13F8A0();
  sub_13F8F0();
  sub_13F930();
  swift_allocObject();
  sub_13F920();
  uint64_t v39 = v26;
  sub_13F5D0();
  sub_904C((uint64_t)v22, &qword_17F5C8);
  swift_release();
  v24(v20, 0, 1, v6);
  sub_19914((uint64_t)v20, (uint64_t)v22, &qword_17F5C8);
  uint64_t v28 = v37;
  uint64_t v27 = v38;
  uint64_t v29 = (uint64_t)v35;
  uint64_t v30 = v36;
  sub_13F530();
  sub_8FE8((uint64_t)v22, (uint64_t)v17, &qword_17F5C8);
  sub_8FE8(v42, v29, &qword_17F5C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v17, 1, v6) == 1)
  {
    sub_13F8A0();
    swift_bridgeObjectRelease();
    sub_13F5D0();
    sub_904C(v29, &qword_17F5C0);
    swift_release();
    sub_904C((uint64_t)v17, &qword_17F5C8);
  }
  else
  {
    sub_904C(v29, &qword_17F5C0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v30, v17, v6);
  }
  uint64_t v31 = v40;
  uint64_t v32 = v43;
  sub_13F520();
  sub_13F4F0();
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v31, v32, v27);
  sub_13F4D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v27);
  return sub_904C((uint64_t)v22, &qword_17F5C8);
}

uint64_t sub_DDECC()
{
  uint64_t v0 = sub_5830(&qword_17F5C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v68 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_13F500();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v61 - v6;
  uint64_t v8 = sub_13FAD0();
  uint64_t v67 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_13FAE0();
  uint64_t v69 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_13F610();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_5BFC();
  uint64_t result = 0;
  switch(v18)
  {
    case 1:
      sub_13FA30();
      if (v72)
      {
        sub_13FC00();
        if (swift_dynamicCast()) {
          goto LABEL_42;
        }
      }
      else
      {
        sub_904C((uint64_t)v71, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_141170();
      sub_33D8(v52, (uint64_t)qword_17F5A8);
      uint64_t v53 = sub_141160();
      os_log_type_t v54 = sub_141480();
      if (!os_log_type_enabled(v53, v54)) {
        goto LABEL_71;
      }
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      char v56 = "Parse entity: timer entity not found on createTimerTask.";
      goto LABEL_70;
    case 3:
      if (!MSVDeviceIsAppleTV()) {
        return 0;
      }
      sub_13FA30();
      if (v72)
      {
        sub_13FDD0();
        if (swift_dynamicCast())
        {
          uint64_t v64 = v70;
          sub_140060();
          swift_allocObject();
          uint64_t v63 = sub_140050();
          sub_13FD20();
          swift_allocObject();
          sub_13FD10();
          sub_13F6B0();
          swift_allocObject();
          uint64_t v20 = sub_13F6A0();
          (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerTypeSleep(_:), v14);
          sub_13F690();
          (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
          uint64_t v21 = v20;
          swift_retain();
          sub_13FCD0();
          swift_release();
          swift_retain();
          uint64_t v22 = sub_140000();
          swift_release();
          if (v22)
          {
            uint64_t v23 = sub_13FD30();
            swift_release();
            if (v23)
            {
              uint64_t v24 = sub_13FD90();
              swift_release();
              if (v24)
              {
                uint64_t v25 = sub_13FA70();
                swift_release();
                if (v25)
                {
                  sub_13FAB0();
                  double v27 = v26;
                  swift_release();
                  double v28 = fabs(v27);
                  sub_13FED0();
                  swift_allocObject();
                  uint64_t v29 = sub_13FEC0();
                  uint64_t v30 = v69;
                  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v13, enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Second(_:), v11);
                  uint64_t v62 = v29;
                  sub_13FEB0();
                  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
                  sub_13FE20();
                  swift_allocObject();
                  sub_13FE10();
                  if ((~*(void *)&v28 & 0x7FF0000000000000) != 0)
                  {
                    if (v28 > -9.22337204e18)
                    {
                      uint64_t v69 = v21;
                      if (v28 < 9.22337204e18)
                      {
                        sub_13FE00();
                        sub_1401F0();
                        swift_allocObject();
                        sub_1401E0();
                        swift_retain();
                        sub_1401C0();
                        swift_release();
                        swift_retain();
                        sub_1401D0();
                        swift_release();
                        sub_13FEA0();
                        swift_allocObject();
                        sub_13FE90();
                        uint64_t v31 = v67;
                        (*(void (**)(char *, void, uint64_t))(v67 + 104))(v10, enum case for UsoEntity_common_Duration.DefinedValues.common_Duration_TotalDuration(_:), v8);
                        sub_13FE80();
                        (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
                        swift_retain();
                        sub_13FE70();
                        swift_release();
                        swift_retain();
                        sub_13FCF0();
                        swift_release();
                        sub_13FDF0();
                        sub_140260();
                        uint64_t v32 = sub_13F8E0();
                        uint64_t v33 = (uint64_t)v68;
                        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v68, 1, 1, v32);
                        uint64_t v34 = swift_retain();
                        sub_DD9C8(v34, v33, (uint64_t)v7);
                        swift_release();
                        sub_904C(v33, &qword_17F5C0);
                        sub_13F480();
                        sub_13FA30();
                        swift_release();
                        if (v72)
                        {
                          sub_13FC00();
                          if (swift_dynamicCast())
                          {
                            swift_retain();
                            sub_13FA20();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release_n();
                            (*(void (**)(char *, uint64_t))(v65 + 8))(v7, v66);
                            return v71[0];
                          }
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                        }
                        else
                        {
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          sub_904C((uint64_t)v71, &qword_17B9B0);
                        }
                        (*(void (**)(char *, uint64_t))(v65 + 8))(v7, v66);
                        return 0;
                      }
LABEL_85:
                      __break(1u);
                      JUMPOUT(0xDF198);
                    }
LABEL_84:
                    __break(1u);
                    goto LABEL_85;
                  }
LABEL_83:
                  __break(1u);
                  goto LABEL_84;
                }
              }
            }
          }
LABEL_73:
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          return 0;
        }
      }
      else
      {
        sub_904C((uint64_t)v71, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_141170();
      sub_33D8(v59, (uint64_t)qword_17F5A8);
      uint64_t v53 = sub_141160();
      os_log_type_t v54 = sub_141480();
      if (!os_log_type_enabled(v53, v54)) {
        goto LABEL_71;
      }
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      char v56 = "Parse entity: disable common setting not found on disable common setting task.";
      goto LABEL_70;
    case 4:
      if (!MSVDeviceIsAppleTV()) {
        return 0;
      }
      sub_13FA30();
      if (!v72)
      {
        sub_904C((uint64_t)v71, &qword_17B9B0);
LABEL_66:
        if (qword_17B2C0 != -1) {
          swift_once();
        }
        uint64_t v60 = sub_141170();
        sub_33D8(v60, (uint64_t)qword_17F5A8);
        uint64_t v53 = sub_141160();
        os_log_type_t v54 = sub_141480();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v55 = 0;
          char v56 = "Parse entity: enable common setting not found on enable common setting task.";
LABEL_70:
          _os_log_impl(&dword_0, v53, v54, v56, v55, 2u);
          swift_slowDealloc();
        }
LABEL_71:

        return 0;
      }
      sub_13FD50();
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_66;
      }
      uint64_t v63 = v70;
      sub_140060();
      swift_allocObject();
      uint64_t v62 = sub_140050();
      sub_13FD20();
      swift_allocObject();
      uint64_t v64 = sub_13FD10();
      sub_13F6B0();
      swift_allocObject();
      uint64_t v35 = sub_13F6A0();
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for UsoEntity_appleTimer_TimerAttribute.DefinedValues.appleTimer_TimerAttribute_TimerTypeSleep(_:), v14);
      sub_13F690();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      swift_retain();
      sub_13FCD0();
      uint64_t v61 = v35;
      swift_release();
      swift_retain();
      uint64_t v36 = sub_140000();
      swift_release();
      if (!v36 || (uint64_t v37 = sub_13FD30(), swift_release(), !v37) || (v38 = sub_13FDA0(), swift_release(), !v38))
      {
        if (!sub_140000()
          || (uint64_t v39 = sub_13FD30(), swift_release(), !v39)
          || (uint64_t v40 = sub_13FD80(), swift_release(), !v40)
          || (uint64_t v41 = sub_13FA70(), swift_release(), !v41))
        {
          if (!sub_140000()) {
            goto LABEL_73;
          }
          uint64_t v42 = sub_13FD40();
          swift_release();
          if (!v42) {
            goto LABEL_73;
          }
          uint64_t v43 = sub_13FA70();
          swift_release();
          if (!v43) {
            goto LABEL_73;
          }
        }
      }
      sub_13FAB0();
      double v45 = v44;
      swift_release();
      double v46 = fabs(v45);
      sub_13FED0();
      swift_allocObject();
      sub_13FEC0();
      uint64_t v47 = v69;
      (*(void (**)(char *, void, uint64_t))(v69 + 104))(v13, enum case for UsoEntity_common_TimeUnit.DefinedValues.common_TimeUnit_Second(_:), v11);
      sub_13FEB0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v11);
      sub_13FE20();
      swift_allocObject();
      sub_13FE10();
      if ((~*(void *)&v46 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_81;
      }
      if (v46 <= -9.22337204e18)
      {
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      if (v46 >= 9.22337204e18)
      {
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      sub_13FE00();
      sub_1401F0();
      swift_allocObject();
      sub_1401E0();
      swift_retain();
      sub_1401C0();
      swift_release();
      swift_retain();
      sub_1401D0();
      swift_release();
      sub_13FEA0();
      swift_allocObject();
      sub_13FE90();
      uint64_t v48 = v67;
      (*(void (**)(char *, void, uint64_t))(v67 + 104))(v10, enum case for UsoEntity_common_Duration.DefinedValues.common_Duration_TotalDuration(_:), v8);
      sub_13FE80();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v8);
      swift_retain();
      sub_13FE70();
      swift_release();
      swift_retain();
      sub_13FCF0();
      swift_release();
      sub_13FDF0();
      sub_140260();
      uint64_t v49 = sub_13F8E0();
      uint64_t v50 = (uint64_t)v68;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v68, 1, 1, v49);
      uint64_t v51 = swift_retain();
      sub_DD9C8(v51, v50, (uint64_t)v5);
      swift_release();
      sub_904C(v50, &qword_17F5C0);
      sub_13F480();
      sub_13FA30();
      swift_release();
      if (v72)
      {
        sub_13FC00();
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_13FA20();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release_n();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v5, v66);
          return v71[0];
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_904C((uint64_t)v71, &qword_17B9B0);
      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v5, v66);
      return 0;
    case 7:
      sub_13FA30();
      if (v72)
      {
        sub_13FB80();
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_13FF40();
          goto LABEL_43;
        }
      }
      else
      {
        sub_904C((uint64_t)v71, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_141170();
      sub_33D8(v57, (uint64_t)qword_17F5A8);
      uint64_t v53 = sub_141160();
      os_log_type_t v54 = sub_141480();
      if (!os_log_type_enabled(v53, v54)) {
        goto LABEL_71;
      }
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      char v56 = "Parse entity: timer entity not found on resetTimerTask.";
      goto LABEL_70;
    case 9:
      sub_13FA30();
      if (v72)
      {
        sub_13FB90();
        if (swift_dynamicCast())
        {
LABEL_42:
          swift_retain();
          sub_13FA20();
LABEL_43:
          swift_release_n();
          return v71[0];
        }
      }
      else
      {
        sub_904C((uint64_t)v71, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_141170();
      sub_33D8(v58, (uint64_t)qword_17F5A8);
      uint64_t v53 = sub_141160();
      os_log_type_t v54 = sub_141480();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v55 = 0;
        char v56 = "Parse entity: timer entity not found on startTimerTask.";
        goto LABEL_70;
      }
      goto LABEL_71;
    default:
      return result;
  }
}

uint64_t sub_DF1E4()
{
  uint64_t v0 = sub_5BFC();
  uint64_t result = 0;
  switch(v0)
  {
    case 2:
      sub_13FA30();
      if (v17)
      {
        sub_13FC20();
        if (swift_dynamicCast()) {
          goto LABEL_25;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_141170();
      sub_33D8(v2, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from delete_NoEntity.";
      goto LABEL_83;
    case 5:
      sub_13FA30();
      if (v17)
      {
        sub_13FB70();
        if (swift_dynamicCast()) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_141170();
      sub_33D8(v7, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from pause_NoEntity.";
      goto LABEL_83;
    case 8:
      sub_13FA30();
      if (v17)
      {
        sub_13FC80();
        if (swift_dynamicCast()) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_141170();
      sub_33D8(v8, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from resume_NoEntity.";
      goto LABEL_83;
    case 9:
      sub_13FA30();
      if (v17)
      {
        sub_13FBA0();
        if (swift_dynamicCast()) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_141170();
      sub_33D8(v9, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from start_NoEntity.";
      goto LABEL_83;
    case 12:
      sub_13FA30();
      if (v17)
      {
        sub_13FCA0();
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_13FF50();
          goto LABEL_32;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_141170();
      sub_33D8(v10, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from update_NoEntity.";
      goto LABEL_83;
    case 14:
      sub_13FA30();
      if (v17)
      {
        sub_13FC50();
        if (swift_dynamicCast())
        {
          swift_release();
          return 0;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_141170();
      sub_33D8(v11, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from noVerb_NoEntity.";
      goto LABEL_83;
    case 15:
      sub_13FA30();
      if (v17)
      {
        sub_13FAF0();
        if (swift_dynamicCast()) {
          goto LABEL_25;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_141170();
      sub_33D8(v12, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from open_NoEntity.";
      goto LABEL_83;
    case 16:
      sub_13FA30();
      if (v17)
      {
        sub_13FB00();
        if (swift_dynamicCast())
        {
LABEL_25:
          swift_retain();
          sub_13FBC0();
          goto LABEL_32;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_141170();
      sub_33D8(v13, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from read_NoEntity.";
      goto LABEL_83;
    case 17:
      sub_13FA30();
      if (v17)
      {
        sub_13FC60();
        if (swift_dynamicCast()) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_141170();
      sub_33D8(v14, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_84;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Parse entity: failed to parse entity from repeat_NoEntity.";
      goto LABEL_83;
    case 18:
      sub_13FA30();
      if (v17)
      {
        sub_13FCC0();
        if (swift_dynamicCast())
        {
LABEL_31:
          swift_retain();
          sub_13FFE0();
LABEL_32:
          swift_release_n();
          return v16[0];
        }
      }
      else
      {
        sub_904C((uint64_t)v16, &qword_17B9B0);
      }
      if (qword_17B2C0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_141170();
      sub_33D8(v15, (uint64_t)qword_17F5A8);
      uint64_t v3 = sub_141160();
      os_log_type_t v4 = sub_141470();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        uint64_t v6 = "Parse entity: failed to parse entity from restart_NoEntity.";
LABEL_83:
        _os_log_impl(&dword_0, v3, v4, v6, v5, 2u);
        swift_slowDealloc();
      }
LABEL_84:

      return 0;
    default:
      return result;
  }
}

char *sub_DFC3C(unint64_t a1)
{
  uint64_t v1 = sub_DFFDC(a1);
  uint64_t v2 = *((void *)v1 + 2);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_E0380(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
    os_log_type_t v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *((void *)v3 + 2);
      unint64_t v8 = *((void *)v3 + 3);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        uint64_t v3 = sub_E0380((char *)(v8 > 1), v7 + 1, 1, v3);
      }
      v4 += 2;
      *((void *)v3 + 2) = v7 + 1;
      uint64_t v9 = &v3[16 * v7];
      *((void *)v9 + 4) = v6;
      *((void *)v9 + 5) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (char *)&_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)v3 + 2))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

char *sub_DFD48(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1417D0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = (char *)&_swiftEmptyArrayStorage;
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          sub_1416A0();
          uint64_t v6 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_31;
          }
        }
        else
        {
          swift_retain();
          uint64_t v6 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
        }
        sub_13F8B0();
        if (v20 && (unint64_t v7 = sub_13F630(), swift_release(), v7))
        {
          unint64_t v8 = sub_DFFDC(v7);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          unint64_t v8 = (char *)&_swiftEmptyArrayStorage;
        }
        uint64_t v9 = *((void *)v8 + 2);
        int64_t v10 = *((void *)v3 + 2);
        int64_t v11 = v10 + v9;
        if (__OFADD__(v10, v9)) {
          goto LABEL_32;
        }
        char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v11 <= *((void *)v3 + 3) >> 1)
        {
          if (!*((void *)v8 + 2)) {
            goto LABEL_4;
          }
        }
        else
        {
          if (v10 <= v11) {
            int64_t v13 = v10 + v9;
          }
          else {
            int64_t v13 = v10;
          }
          uint64_t v3 = sub_E0380(isUniquelyReferenced_nonNull_native, v13, 1, v3);
          if (!*((void *)v8 + 2))
          {
LABEL_4:
            if (v9) {
              goto LABEL_33;
            }
            goto LABEL_5;
          }
        }
        uint64_t v14 = *((void *)v3 + 2);
        if ((*((void *)v3 + 3) >> 1) - v14 < v9) {
          goto LABEL_34;
        }
        unint64_t v15 = (unint64_t)&v3[16 * v14 + 32];
        if ((unint64_t)(v8 + 32) < v15 + 16 * v9 && v15 < (unint64_t)&v8[16 * v9 + 32])
        {
          uint64_t result = (char *)sub_141810();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v9)
        {
          uint64_t v16 = *((void *)v3 + 2);
          BOOL v17 = __OFADD__(v16, v9);
          uint64_t v18 = v16 + v9;
          if (v17) {
            goto LABEL_35;
          }
          *((void *)v3 + 2) = v18;
        }
LABEL_5:
        swift_bridgeObjectRelease();
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)&_swiftEmptyArrayStorage;
}

char *sub_DFFDC(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1417D0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = (char *)&_swiftEmptyArrayStorage;
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          sub_1416A0();
          uint64_t v6 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_31;
          }
        }
        else
        {
          swift_retain();
          uint64_t v6 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
        }
        sub_13F8B0();
        if (v20 && (unint64_t v7 = sub_13F660(), swift_release(), v7))
        {
          unint64_t v8 = sub_DC564(v7);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          unint64_t v8 = (char *)&_swiftEmptyArrayStorage;
        }
        uint64_t v9 = *((void *)v8 + 2);
        int64_t v10 = *((void *)v3 + 2);
        int64_t v11 = v10 + v9;
        if (__OFADD__(v10, v9)) {
          goto LABEL_32;
        }
        char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v11 <= *((void *)v3 + 3) >> 1)
        {
          if (!*((void *)v8 + 2)) {
            goto LABEL_4;
          }
        }
        else
        {
          if (v10 <= v11) {
            int64_t v13 = v10 + v9;
          }
          else {
            int64_t v13 = v10;
          }
          uint64_t v3 = sub_E0380(isUniquelyReferenced_nonNull_native, v13, 1, v3);
          if (!*((void *)v8 + 2))
          {
LABEL_4:
            if (v9) {
              goto LABEL_33;
            }
            goto LABEL_5;
          }
        }
        uint64_t v14 = *((void *)v3 + 2);
        if ((*((void *)v3 + 3) >> 1) - v14 < v9) {
          goto LABEL_34;
        }
        unint64_t v15 = (unint64_t)&v3[16 * v14 + 32];
        if ((unint64_t)(v8 + 32) < v15 + 16 * v9 && v15 < (unint64_t)&v8[16 * v9 + 32])
        {
          uint64_t result = (char *)sub_141810();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v9)
        {
          uint64_t v16 = *((void *)v3 + 2);
          BOOL v17 = __OFADD__(v16, v9);
          uint64_t v18 = v16 + v9;
          if (v17) {
            goto LABEL_35;
          }
          *((void *)v3 + 2) = v18;
        }
LABEL_5:
        swift_bridgeObjectRelease();
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)&_swiftEmptyArrayStorage;
}

void *sub_E0270(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_5830(&qword_17F628);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_E0A14(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_E0380(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_5830(&qword_17F5D0);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      int64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)&_swiftEmptyArrayStorage;
      int64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_E0B0C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_E0490(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_E04F8(a1, a2, a3, a4, &qword_17F608, (uint64_t (*)(void))&type metadata accessor for DisplayHint, (uint64_t (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_E04C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_E04F8(a1, a2, a3, a4, &qword_17F610, (uint64_t (*)(void))&type metadata accessor for SemanticValue, (uint64_t (*)(void))&type metadata accessor for SemanticValue);
}

uint64_t sub_E04F8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_5830(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1417B0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  void v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_E0EA0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_E0778(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_E04F8(a1, a2, a3, a4, &qword_17F600, (uint64_t (*)(void))&type metadata accessor for RREntity, (uint64_t (*)(void))&type metadata accessor for RREntity);
}

char *sub_E07AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_5830(&qword_17F618);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_E0C84(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_E08BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_E04F8(a1, a2, a3, a4, &qword_17F630, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct);
}

char *sub_E08F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_5830(&qword_17F5F0);
      int64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[40 * v8 + 32]) {
          memmove(v12, a4 + 32, 40 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_E0D90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_E0A14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

uint64_t sub_E0B0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

double sub_E0C00@<D0>(_OWORD *a1@<X8>)
{
  sub_13F8B0();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_E0C3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_E0C84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_5830(&qword_17F620);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

uint64_t sub_E0D90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_5830(&qword_17F5F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

uint64_t sub_E0EA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

uint64_t sub_E0FFC()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_E101C, 0, 0);
}

uint64_t sub_E101C()
{
  id v1 = [*(id *)(v0 + 24) timers];
  *(void *)(v0 + 32) = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 40) = v3;
    *(void *)(v3 + 16) = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v4;
    uint64_t v5 = sub_5830(&qword_17D7A8);
    *uint64_t v4 = v0;
    v4[1] = sub_E117C;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000010, 0x8000000000148C70, sub_90D78, v3, v5);
  }
  else
  {
    unint64_t v6 = *(uint64_t (**)(void *))(v0 + 8);
    return v6(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_E117C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_E1294, 0, 0);
}

uint64_t sub_E1294()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_E12F8(uint64_t a1, void *a2)
{
  v17[0] = a2;
  uint64_t v19 = a1;
  uint64_t v4 = sub_5830(&qword_17F638);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, a1, v4);
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (v8 + 16) & ~v8;
  v17[1] = (id)(v8 | 7);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v11(v10 + v9, v7, v4);
  uint64_t v24 = sub_E1620;
  uint64_t v25 = v10;
  aBlock = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  unint64_t v22 = sub_E1694;
  unint64_t v23 = &unk_175E10;
  unint64_t v12 = _Block_copy(&aBlock);
  swift_release();
  id v13 = [a2 addSuccessBlock:v12];
  _Block_release(v12);

  v18(v7, v19, v4);
  uint64_t v14 = swift_allocObject();
  v11(v14 + v9, v7, v4);
  uint64_t v24 = sub_E17AC;
  uint64_t v25 = v14;
  aBlock = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  unint64_t v22 = sub_1207B8;
  unint64_t v23 = &unk_175E60;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_release();
  id v16 = [v17[0] addFailureBlock:v15];
  _Block_release(v15);
}

uint64_t sub_E15A8()
{
  return sub_1413C0();
}

uint64_t sub_E1620()
{
  sub_5830(&qword_17F638);

  return sub_E15A8();
}

void sub_E1694(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_E16FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_E170C()
{
  return swift_release();
}

uint64_t sub_E1718()
{
  uint64_t v1 = sub_5830(&qword_17F638);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E17AC()
{
  return sub_1413C0();
}

unint64_t sub_E1834()
{
  unint64_t result = qword_17F640;
  if (!qword_17F640)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_17F640);
  }
  return result;
}

ValueMetadata *_s25NeedsConfirmationStrategyVMa_1()
{
  return &_s25NeedsConfirmationStrategyVN_1;
}

uint64_t sub_E188C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F650);
  sub_33D8(v0, (uint64_t)qword_17F650);
  return sub_140E60();
}

uint64_t sub_E18D8()
{
  uint64_t v0 = sub_140730();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140720();
  BOOL v4 = sub_1406E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    sub_5830(&qword_17F6C8);
    uint64_t v5 = (void *)sub_13F1F0();
    id v6 = [v5 targetTimer];

    id v7 = [v6 shouldMatchAny];
    sub_2FF44();
    v8.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v8.super.super.isa;
    if (v7)
    {
      id v10 = v7;
      char v11 = sub_141590();

      if (v11)
      {
        unint64_t v12 = (void *)sub_13F1F0();
        id v13 = [v12 targetingInfo];

        if (!v13)
        {
          if (qword_17B2C8 != -1) {
            swift_once();
          }
          uint64_t v14 = sub_141170();
          sub_33D8(v14, (uint64_t)qword_17F650);
          uint64_t v15 = sub_141160();
          os_log_type_t v16 = sub_141480();
          if (!os_log_type_enabled(v15, v16))
          {
            uint64_t v18 = 1;
            goto LABEL_16;
          }
          unint64_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v17 = 0;
          _os_log_impl(&dword_0, v15, v16, "ResolveRecord indicates we are searching for a room confirmation", v17, 2u);
          uint64_t v18 = 1;
          goto LABEL_14;
        }
      }
    }
    else
    {
    }
  }
  if (qword_17B2C8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_17F650);
  uint64_t v15 = sub_141160();
  os_log_type_t v20 = sub_141480();
  if (!os_log_type_enabled(v15, v20))
  {
    uint64_t v18 = 0;
    goto LABEL_16;
  }
  uint64_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v21 = 0;
  _os_log_impl(&dword_0, v15, v20, "ResolveRecord not searching for room confirmation", v21, 2u);
  uint64_t v18 = 0;
LABEL_14:
  swift_slowDealloc();
LABEL_16:

  return v18;
}

uint64_t sub_E1BF4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B2C8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17F650);
  char v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "ResetTimer.NeedsConfirmationStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  char v15 = sub_E18D8();
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.roomConfirmation(_:);
  if ((v15 & 1) == 0) {
    uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.confirmation(_:);
  }
  (*(void (**)(char *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v6, *v18, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_61E68(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_E1EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  sub_5830(&qword_17F3E0);
  v4[11] = swift_task_alloc();
  uint64_t v5 = sub_13EDF0();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_E1FA4, 0, 0);
}

uint64_t sub_E1FA4()
{
  if (qword_17B2C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17F650);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "ResetTimer.NeedsConfirmationStrategy.parseConfirmationResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17F6C8);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];

  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (swift_dynamicCast())
  {
    uint64_t v7 = (void *)v0[6];
    uint64_t v8 = (void *)sub_13F1F0();
    [v8 setTargetTimer:v7];
    if (sub_E18D8())
    {
      sub_B6610(v0[8], 1, v0[15]);
      switch(sub_BBA44())
      {
        case 1u:
          uint64_t v17 = sub_141160();
          os_log_type_t v18 = sub_141480();
          if (os_log_type_enabled(v17, v18))
          {
            uint64_t v19 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v19 = 0;
            _os_log_impl(&dword_0, v17, v18, "Received explicit 'here' confirmation – only local timers for pauseMultiple", v19, 2u);
            swift_slowDealloc();
          }

          id v20 = [v8 targetTimer];
          if (v20) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 3u:
          uint64_t v21 = v0[14];
          uint64_t v22 = v0[12];
          uint64_t v23 = v0[13];
          sub_13EDD0();
          char v24 = sub_13EDB0();
          uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
          v25(v21, v22);
          double v26 = sub_141160();
          os_log_type_t v27 = sub_141480();
          BOOL v28 = os_log_type_enabled(v26, v27);
          if ((v24 & 1) == 0)
          {
            double v45 = v25;
            if (v28)
            {
              uint64_t v37 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v37 = 0;
              _os_log_impl(&dword_0, v26, v27, "Defaulting confirmation to reject for no/cancel", v37, 2u);
              swift_slowDealloc();
            }
            uint64_t v44 = v0[15];
            uint64_t v39 = v0[11];
            uint64_t v38 = v0[12];

            uint64_t v40 = enum case for ConfirmationResponse.rejected(_:);
            uint64_t v41 = sub_13F0C0();
            uint64_t v42 = *(void *)(v41 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 104))(v39, v40, v41);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
            id v43 = v8;
            sub_141560();

            sub_140C40();
            sub_13F190();

            v45(v44, v38);
            goto LABEL_25;
          }
          if (v28)
          {
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl(&dword_0, v26, v27, "Confirming use only local timers for pauseMultiple", v29, 2u);
            swift_slowDealloc();
          }

          id v20 = [v8 targetTimer];
          if (v20)
          {
LABEL_21:
            id v13 = v20;
            Swift::Bool v14 = 0;
LABEL_22:
            sub_2FF44();
            Class isa = sub_141570(v14).super.super.isa;
            [v13 setShouldMatchRemote:isa];
          }
LABEL_23:
          (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
          break;
        default:
          uint64_t v9 = sub_141160();
          os_log_type_t v10 = sub_141480();
          if (os_log_type_enabled(v9, v10))
          {
            char v11 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v11 = 0;
            _os_log_impl(&dword_0, v9, v10, "Received explicit 'everywhere' confirmation to include remote timers for pauseMultiple", v11, 2u);
            swift_slowDealloc();
          }

          id v12 = [v8 targetTimer];
          if (!v12) {
            goto LABEL_23;
          }
          id v13 = v12;
          Swift::Bool v14 = 1;
          goto LABEL_22;
      }
    }
    uint64_t v31 = v0[11];
    uint64_t v32 = enum case for ConfirmationResponse.confirmed(_:);
    uint64_t v33 = sub_13F0C0();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 104))(v31, v32, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    id v35 = v8;
    sub_141560();

    sub_140C40();
    sub_13F190();

LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *char v15 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
  }
  return v16();
}

uint64_t sub_E26BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a1;
  v3[21] = a3;
  sub_5830(&qword_17BE70);
  v3[22] = swift_task_alloc();
  uint64_t v4 = sub_13F040();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v3[28] = swift_task_alloc();
  v3[29] = type metadata accessor for ResetTimerPromptResetAllParameters(0);
  v3[30] = swift_task_alloc();
  sub_140590();
  v3[31] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[32] = v5;
  v3[33] = *(void *)(v5 - 8);
  v3[34] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v3[35] = v6;
  v3[36] = *(void *)(v6 - 8);
  v3[37] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v3[38] = v7;
  v3[39] = *(void *)(v7 - 8);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v3[43] = v8;
  v3[44] = *(void *)(v8 - 8);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  uint64_t v9 = sub_140730();
  v3[48] = v9;
  v3[49] = *(void *)(v9 - 8);
  v3[50] = swift_task_alloc();
  uint64_t v10 = sub_13ECE0();
  v3[51] = v10;
  v3[52] = *(void *)(v10 - 8);
  v3[53] = swift_task_alloc();
  return _swift_task_switch(sub_E2AB4, 0, 0);
}

uint64_t sub_E2AB4()
{
  if (qword_17B2C8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[32], (uint64_t)qword_17F650);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "ResetTimer.NeedsConfirmationStrategy.makePromptForConfirmation() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17F6C8);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];

  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (!swift_dynamicCast())
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v30 = 3;
    swift_willThrow();
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
  uint64_t v8 = v0[49];
  uint64_t v7 = v0[50];
  uint64_t v9 = v0[48];
  uint64_t v10 = (void *)v0[19];
  v0[54] = v10;
  sub_13EC60();
  sub_140720();
  BOOL v11 = sub_1406E0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v7, v9);
  if (v11)
  {
    id v13 = [v10 shouldMatchAny];
    sub_2FF44();
    v14.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v14.super.super.isa;
    if (v13)
    {
      id v16 = v13;
      char v17 = sub_141590();

      if (v17)
      {
        os_log_type_t v18 = (void *)sub_13F1F0();
        id v19 = [v18 targetingInfo];

        if (!v19)
        {
          uint64_t v21 = v0[36];
          uint64_t v20 = v0[37];
          uint64_t v23 = v0[34];
          uint64_t v22 = v0[35];
          uint64_t v24 = v0[32];
          uint64_t v25 = v0[33];
          sub_1187C4(7, v0[47]);
          (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v22);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v1, v24);
          mach_absolute_time();
          sub_1406B0();
          type metadata accessor for ResetTimerCATsSimple();
          sub_140580();
          v0[55] = sub_140530();
          uint64_t v106 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
               + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
          double v26 = (void *)swift_task_alloc();
          v0[56] = v26;
          void *v26 = v0;
          v26[1] = sub_E3934;
          unint64_t v27 = 0x800000000014A1C0;
          BOOL v28 = _swiftEmptyArrayStorage;
          unint64_t v29 = 0xD000000000000020;
LABEL_18:
          return ((uint64_t (*)(unint64_t, unint64_t, void *))v106)(v29, v27, v28);
        }
      }
    }
    else
    {
    }
    id v33 = [v10 device];

    if (v33)
    {
      uint64_t v35 = v0[36];
      uint64_t v34 = v0[37];
      uint64_t v37 = v0[34];
      uint64_t v36 = v0[35];
      uint64_t v39 = v0[32];
      uint64_t v38 = v0[33];
      sub_11838C(7);
      (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v34, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v36);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v37, v1, v39);
      mach_absolute_time();
      sub_1406B0();
      type metadata accessor for TimerBaseCATsSimple();
      sub_140580();
      v0[60] = sub_140530();
      uint64_t v40 = sub_174C0(0, 0);
      v0[61] = v40;
      sub_5830(&qword_17F3D0);
      uint64_t v41 = swift_allocObject();
      v0[62] = v41;
      *(_OWORD *)(v41 + 16) = xmmword_142D50;
      *(void *)(v41 + 32) = 0x72656D6974;
      *(void *)(v41 + 40) = 0xE500000000000000;
      *(void *)(v41 + 72) = type metadata accessor for TimerTimer(0);
      *(void *)(v41 + 48) = v40;
      uint64_t v106 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_retain();
      uint64_t v42 = (void *)swift_task_alloc();
      v0[63] = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_E3F6C;
      unint64_t v27 = 0x80000000001495B0;
      unint64_t v29 = 0xD000000000000023;
      BOOL v28 = (void *)v41;
      goto LABEL_18;
    }
  }
  uint64_t v43 = v0[50];
  uint64_t v44 = v0[48];
  sub_11838C(7);
  sub_140720();
  BOOL v45 = sub_140710();
  v12(v43, v44);
  if (!v45)
  {
    uint64_t v76 = (void *)sub_13F1F0();
    id v77 = [v76 targetTimer];

    id v78 = [v77 shouldMatchAny];
    sub_2FF44();
    v79.super.super.Class isa = sub_141580(1).super.super.isa;
    Class v80 = v79.super.super.isa;
    if (v78)
    {
      id v81 = v78;
      char v82 = sub_141590();

      if (v82)
      {
        if (qword_17B1B0 != -1) {
          swift_once();
        }
        uint64_t v107 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
             + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
        uint64_t v83 = (void *)swift_task_alloc();
        v0[77] = v83;
        void *v83 = v0;
        v83[1] = sub_E5044;
        uint64_t v84 = v0[26];
        unint64_t v85 = 0xD00000000000001FLL;
        unint64_t v86 = 0x800000000014A1A0;
        uint64_t v87 = _swiftEmptyArrayStorage;
LABEL_38:
        return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v107)(v84, v85, v86, v87);
      }
    }
    else
    {
    }
    if (qword_17B1B0 != -1) {
      swift_once();
    }
    uint64_t v88 = sub_174C0(0, 0);
    v0[79] = v88;
    sub_5830(&qword_17F3D0);
    uint64_t v89 = swift_allocObject();
    v0[80] = v89;
    *(_OWORD *)(v89 + 16) = xmmword_142D50;
    strcpy((char *)(v89 + 32), "speakableTimer");
    *(unsigned char *)(v89 + 47) = -18;
    *(void *)(v89 + 72) = type metadata accessor for TimerTimer(0);
    *(void *)(v89 + 48) = v88;
    uint64_t v107 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
         + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
    swift_retain();
    uint64_t v90 = (void *)swift_task_alloc();
    v0[81] = v90;
    *uint64_t v90 = v0;
    v90[1] = sub_E53AC;
    uint64_t v84 = v0[25];
    unint64_t v85 = 0xD00000000000001DLL;
    unint64_t v86 = 0x800000000014A180;
    uint64_t v87 = (void *)v89;
    goto LABEL_38;
  }
  uint64_t v46 = (void *)sub_13F050();

  uint64_t v48 = sub_1415A0();
  uint64_t v50 = v49;

  v0[67] = v50;
  if (!v50)
  {
LABEL_42:
    uint64_t v91 = sub_141160();
    os_log_type_t v92 = sub_141470();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v93 = 0;
      _os_log_impl(&dword_0, v91, v92, "Could not create direct invocation for confirm or reject actions.", v93, 2u);
      swift_slowDealloc();
    }
    uint64_t v94 = v0[52];
    uint64_t v95 = v0[53];
    uint64_t v96 = v0[51];
    uint64_t v98 = v0[44];
    uint64_t v97 = v0[45];
    uint64_t v99 = v0[43];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *os_log_type_t v100 = 0;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v96);
    goto LABEL_12;
  }
  uint64_t v105 = v48;
  uint64_t v51 = (void *)sub_13F050();
  uint64_t v53 = v52;

  uint64_t v54 = sub_1415A0();
  uint64_t v56 = v55;

  v0[68] = v56;
  if (!v56)
  {
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v104 = v56;
  uint64_t v57 = v0[34];
  uint64_t v59 = v0[32];
  uint64_t v58 = v0[33];
  (*(void (**)(void, void, void))(v0[36] + 104))(v0[37], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[35]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v57, v1, v59);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v60 = (void *)sub_13F1F0();
  id v61 = [v60 targetTimer];

  id v62 = [v61 shouldMatchAny];
  sub_2FF44();
  v63.super.super.Class isa = sub_141580(1).super.super.isa;
  Class v64 = v63.super.super.isa;
  if (v62)
  {
    id v65 = v62;
    char v66 = sub_141590();

    uint64_t v67 = v10;
    if (v66)
    {
      if (qword_17B1B8 != -1) {
        swift_once();
      }
      uint64_t v69 = v0[29];
      uint64_t v68 = v0[30];
      uint64_t v70 = v0[28];
      uint64_t v71 = sub_140500();
      uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
      v72(v68, 1, 1, v71);
      uint64_t v73 = v68 + *(int *)(v69 + 20);
      v72(v73, 1, 1, v71);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v72(v70, 0, 1, v71);
      sub_2D248(v70, v73);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v72(v70, 0, 1, v71);
      sub_2D248(v70, v68);
      uint64_t v74 = sub_718AC();
      v0[69] = v74;
      uint64_t v106 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v75 = (void *)swift_task_alloc();
      v0[70] = v75;
      *uint64_t v75 = v0;
      v75[1] = sub_E45CC;
      unint64_t v27 = 0x8000000000148A50;
      unint64_t v29 = 0xD000000000000019;
      BOOL v28 = (void *)v74;
      goto LABEL_18;
    }
  }
  else
  {

    uint64_t v67 = v10;
  }
  if (qword_17B1B8 != -1) {
    swift_once();
  }
  uint64_t v101 = qword_180F18;
  uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))((char *)&dword_17D118 + dword_17D118);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v102 = v67;
  uint64_t v103 = (void *)swift_task_alloc();
  v0[72] = v103;
  *uint64_t v103 = v0;
  v103[1] = sub_E49B4;
  return v108(v101, v105, v50, v54, v104, v102);
}

uint64_t sub_E3934(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 456) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_E3DA8, 0, 0);
  }
  else
  {
    swift_release();
    v4[58] = a1;
    id v6 = (void *)swift_task_alloc();
    v4[59] = v6;
    *id v6 = v5;
    v6[1] = sub_E3AE4;
    uint64_t v7 = v4[53];
    uint64_t v8 = v4[47];
    uint64_t v9 = v4[42];
    uint64_t v10 = v4[20];
    return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v10, v7, v8, v9, 0, 0, 0, 0);
  }
}

uint64_t sub_E3AE4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 464);
  swift_task_dealloc();

  return _swift_task_switch(sub_E3BF8, 0, 0);
}

uint64_t sub_E3BF8()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 312);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_E3DA8()
{
  uint64_t v1 = (void *)v0[54];
  uint64_t v2 = v0[52];
  uint64_t v12 = v0[53];
  uint64_t v3 = v0[51];
  uint64_t v4 = v0[47];
  uint64_t v5 = v0[43];
  uint64_t v6 = v0[44];
  uint64_t v7 = v0[42];
  uint64_t v9 = v0[38];
  uint64_t v8 = v0[39];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_E3F6C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 512) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_E43F4, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v4[65] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[66] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_E4130;
    uint64_t v7 = v4[53];
    uint64_t v8 = v4[46];
    uint64_t v9 = v4[41];
    uint64_t v10 = v4[20];
    return DialogExecutionResult.generateOutput(dialogPhase:context:measure:sessionID:responseViewId:)(v10, v7, v8, v9, 0, 0, 0, 0);
  }
}

uint64_t sub_E4130()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 520);
  swift_task_dealloc();

  return _swift_task_switch(sub_E4244, 0, 0);
}

uint64_t sub_E4244()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 312);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_E43F4()
{
  uint64_t v1 = (void *)v0[54];
  uint64_t v2 = v0[52];
  uint64_t v11 = v0[51];
  uint64_t v12 = v0[53];
  uint64_t v10 = v0[46];
  uint64_t v4 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v5 = v0[41];
  uint64_t v7 = v0[38];
  uint64_t v6 = v0[39];
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_E45CC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[16] = v2;
  v3[17] = a1;
  v3[18] = v1;
  v3[71] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_E47D8;
  }
  else {
    uint64_t v4 = sub_E4708;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_E4708()
{
  sub_E6488(v0[30]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[74] = v0[17];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[75] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_E4D74;
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[40];
  uint64_t v5 = v0[20];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_E47D8()
{
  uint64_t v1 = (void *)v0[54];
  uint64_t v2 = v0[52];
  uint64_t v11 = v0[51];
  uint64_t v12 = v0[53];
  uint64_t v3 = v0[44];
  uint64_t v10 = v0[45];
  uint64_t v4 = v0[43];
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[40];
  uint64_t v7 = v0[38];
  sub_E6488(v0[30]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_E49B4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(v4 + 584) = v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (v1)
  {
    return _swift_task_switch(sub_E4BBC, 0, 0);
  }
  else
  {
    *(void *)(v4 + 592) = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v4 + 600) = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_E4D74;
    uint64_t v7 = *(void *)(v4 + 424);
    uint64_t v8 = *(void *)(v4 + 360);
    uint64_t v9 = *(void *)(v4 + 320);
    uint64_t v10 = *(void *)(v4 + 160);
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_E4BBC()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 304);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_E4D74()
{
  *(void *)(*(void *)v1 + 608) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_E5D20;
  }
  else {
    uint64_t v2 = sub_E4E88;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_E4E88()
{
  uint64_t v1 = *(void **)(v0 + 592);
  uint64_t v12 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 304);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_E5044()
{
  *(void *)(*(void *)v1 + 624) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_E5214;
  }
  else {
    uint64_t v2 = sub_E5158;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_E5158()
{
  (*(void (**)(void, void, void))(v0[24] + 32))(v0[27], v0[26], v0[23]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[83] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_E5740;
  return v3(7);
}

uint64_t sub_E5214()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 344);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_E53AC()
{
  *(void *)(*(void *)v1 + 656) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_E5594;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_E54D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_E54D4()
{
  (*(void (**)(void, void, void))(v0[24] + 32))(v0[27], v0[25], v0[23]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[83] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_E5740;
  return v3(7);
}

uint64_t sub_E5594()
{
  uint64_t v1 = v0[53];
  uint64_t v2 = (void *)v0[54];
  uint64_t v3 = v0[51];
  uint64_t v4 = v0[52];
  uint64_t v6 = v0[44];
  uint64_t v5 = v0[45];
  uint64_t v7 = v0[43];
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_E5740(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 672) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_E5B68;
  }
  else
  {
    *(void *)(v4 + 680) = a1;
    uint64_t v5 = sub_E5868;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_E5868()
{
  uint64_t v10 = *(void **)(v0 + 432);
  uint64_t v14 = *(void *)(v0 + 408);
  uint64_t v15 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 184);
  uint64_t v13 = *(void *)(v0 + 416);
  uint64_t v5 = *(uint64_t **)(v0 + 160);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_13EBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  uint64_t v6 = sub_13F420();
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  v5[3] = v6;
  v5[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_187EC(v5);
  sub_13EE90();

  swift_bridgeObjectRelease();
  sub_904C(v0 + 56, &qword_17BE88);
  sub_904C(v4, &qword_17BE70);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v12);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_E5B68()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v8 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_E5D20()
{
  uint64_t v1 = *(void **)(v0 + 592);
  uint64_t v12 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 304);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_E5EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_E5F98;
  return sub_E1EA0(a1, a2, a3);
}

uint64_t sub_E5F98()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_E60CC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_E60CC()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_E618C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_E623C;
  return sub_E26BC(a1, a2, a3);
}

uint64_t sub_E623C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_E6370, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_E6370()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_E6434()
{
  unint64_t result = qword_17F678[0];
  if (!qword_17F678[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_17F678);
  }
  return result;
}

uint64_t sub_E6488(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResetTimerPromptResetAllParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_E64E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_140980();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_E65EC(uint64_t a1, uint64_t a2)
{
  _s20HandleIntentStrategyVwxx_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_140980();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_E6660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_140980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *sub_E6710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_30798(a1, a2);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_140980();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_E6790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_140980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_E6814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s20HandleIntentStrategyVwxx_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_140980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_E68A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E68B8);
}

uint64_t sub_E68B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_140980();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_E6968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E697C);
}

uint64_t sub_E697C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_140980();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s21ConfirmIntentStrategyVMa_0()
{
  uint64_t result = qword_17F750;
  if (!qword_17F750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_E6A70()
{
  uint64_t result = sub_140980();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_E6B08()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F6E0);
  sub_33D8(v0, (uint64_t)qword_17F6E0);
  return sub_140E60();
}

uint64_t sub_E6B54@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B2D0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_17F6E0);
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "DismissTimer.ConfirmIntentStrategy.actionForInput() called.", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = enum case for DecideAction.PromptExpectation.confirmation(_:);
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_61EAC(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_E6DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[25] = a2;
  v3[26] = a3;
  v3[24] = a1;
  uint64_t v4 = sub_13F380();
  v3[27] = v4;
  v3[28] = *(void *)(v4 - 8);
  v3[29] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[30] = v5;
  v3[31] = *(void *)(v5 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v6 = sub_140900();
  v3[33] = v6;
  v3[34] = *(void *)(v6 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  uint64_t v7 = sub_13F3C0();
  v3[37] = v7;
  v3[38] = *(void *)(v7 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  uint64_t v8 = sub_13F500();
  v3[43] = v8;
  v3[44] = *(void *)(v8 - 8);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  uint64_t v9 = sub_13F460();
  v3[49] = v9;
  v3[50] = *(void *)(v9 - 8);
  v3[51] = swift_task_alloc();
  uint64_t v10 = sub_13F410();
  v3[52] = v10;
  v3[53] = *(void *)(v10 - 8);
  v3[54] = swift_task_alloc();
  uint64_t v11 = sub_13F0C0();
  v3[55] = v11;
  v3[56] = *(void *)(v11 - 8);
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  sub_5830(&qword_17F3E0);
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  v3[67] = type metadata accessor for TimerNLv3Intent();
  v3[68] = swift_task_alloc();
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  uint64_t v12 = sub_13F3E0();
  v3[71] = v12;
  v3[72] = *(void *)(v12 - 8);
  v3[73] = swift_task_alloc();
  v3[74] = swift_task_alloc();
  uint64_t v13 = sub_140280();
  v3[75] = v13;
  v3[76] = *(void *)(v13 - 8);
  v3[77] = swift_task_alloc();
  return _swift_task_switch(sub_E7328, 0, 0);
}

uint64_t sub_E7328()
{
  v269 = v0;
  unint64_t v1 = v0;
  uint64_t v2 = v0 + 18;
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[72];
  uint64_t v5 = v1[71];
  sub_5830(&qword_17F7E0);
  uint64_t v6 = (void *)sub_13F160();
  sub_13F370();
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5);
  v266 = v1;
  if (v7 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v1[72] + 96))(v1[74], v1[71]);
    goto LABEL_5;
  }
  if (v7 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v1[72] + 96))(v1[74], v1[71]);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
LABEL_5:
    uint64_t v8 = v1[77];
    uint64_t v9 = v1[76];
    uint64_t v10 = v1[75];
    uint64_t v11 = v1[70];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v1[74], v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v11, v8, v10);
    if (qword_17B2D0 != -1) {
      swift_once();
    }
    uint64_t v12 = v1[70];
    uint64_t v13 = v1[69];
    sub_33D8(v1[30], (uint64_t)qword_17F6E0);
    sub_303C0(v12, v13);
    uint64_t v14 = sub_141160();
    os_log_type_t v15 = sub_141480();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = v1[77];
    uint64_t v18 = v1[76];
    uint64_t v19 = v1[75];
    uint64_t v20 = v1[69];
    if (v16)
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      v268[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      sub_30424(&qword_17D480);
      uint64_t v22 = sub_141980();
      v1[17] = sub_58C0(v22, v23, v268);
      sub_1415C0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      sub_30364(v20);
      _os_log_impl(&dword_0, v14, v15, "TimerNLIntent: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_30364(v20);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    if (qword_17B340 != -1) {
      swift_once();
    }
    sub_30424((unint64_t *)&qword_17CD20);
    sub_13F940();
    int v24 = *((unsigned __int8 *)v1 + 627);
    uint64_t v25 = v1[70];
    uint64_t v26 = v1[68];
    if (v24 == 3)
    {
      sub_303C0(v25, v26);
    }
    else
    {
      sub_303C0(v25, v26);
      if (v24 == 2)
      {
        sub_30364(v1[68]);
        goto LABEL_17;
      }
    }
    uint64_t v27 = v1[68];
    sub_13F940();
    int v28 = *((unsigned __int8 *)v1 + 628);
    sub_30364(v27);
    if (v28 != 1)
    {
      uint64_t v29 = v1[70];
      uint64_t v30 = v1[66];
      uint64_t v31 = v1[55];
      uint64_t v32 = v1[56];
      id v33 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
      goto LABEL_19;
    }
LABEL_17:
    uint64_t v29 = v1[70];
    uint64_t v30 = v1[66];
    uint64_t v31 = v1[55];
    uint64_t v32 = v1[56];
    id v33 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
LABEL_19:
    (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v30, *v33, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v31);
    sub_140D80();
    sub_13F090();
    sub_30364(v29);
    goto LABEL_20;
  }
  v262 = v6;
  if (v7 == enum case for Parse.directInvocation(_:))
  {
    v259 = v2;
    uint64_t v36 = v1[74];
    uint64_t v37 = v1[42];
    uint64_t v38 = v1[37];
    uint64_t v39 = v1[38];
    (*(void (**)(uint64_t, uint64_t))(v1[72] + 96))(v36, v1[71]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v37, v36, v38);
    if (qword_17B2D0 == -1) {
      goto LABEL_25;
    }
    goto LABEL_161;
  }
  if (v7 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v57 = (uint64_t *)v1[74];
    uint64_t v58 = v1[65];
    uint64_t v59 = v1[55];
    uint64_t v60 = v1[56];
    (*(void (**)(uint64_t *, uint64_t))(v1[72] + 96))(v57, v1[71]);
    uint64_t v61 = *v57;
    id v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    v62(v58, 1, 1, v59);
    self;
    if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
    {
      v260 = v62;
      if (qword_17B2D0 != -1) {
        swift_once();
      }
      sub_33D8(v1[30], (uint64_t)qword_17F6E0);
      swift_unknownObjectRetain_n();
      NSNumber v63 = sub_141160();
      os_log_type_t v64 = sub_141480();
      BOOL v65 = os_log_type_enabled(v63, v64);
      uint64_t v66 = v1[65];
      if (v65)
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        v268[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v67 = 136315138;
        v1[20] = v61;
        swift_unknownObjectRetain();
        sub_5830(&qword_17EB60);
        uint64_t v68 = sub_141260();
        v1[15] = sub_58C0(v68, v69, v268);
        sub_1415C0();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        _os_log_impl(&dword_0, v63, v64, "Received UserDialogAct - %s", v67, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      sub_904C(v66, &qword_17F3E0);
      uint64_t v124 = v1[65];
      uint64_t v125 = v1[55];
      (*(void (**)(uint64_t, void, uint64_t))(v1[56] + 104))(v124, enum case for ConfirmationResponse.confirmed(_:), v125);
      id v62 = v260;
      v260(v124, 0, 1, v125);
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      if (qword_17B2D0 != -1) {
        swift_once();
      }
      sub_33D8(v1[30], (uint64_t)qword_17F6E0);
      uint64_t v126 = sub_141160();
      os_log_type_t v127 = sub_141480();
      if (os_log_type_enabled(v126, v127))
      {
        uint64_t v128 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v128 = 0;
        _os_log_impl(&dword_0, v126, v127, "Received UserDialogAct - UserRejected", v128, 2u);
        swift_slowDealloc();
      }
      uint64_t v129 = v1[65];
      uint64_t v130 = v1[55];
      uint64_t v131 = v1[56];

      sub_904C(v129, &qword_17F3E0);
      (*(void (**)(uint64_t, void, uint64_t))(v131 + 104))(v129, enum case for ConfirmationResponse.rejected(_:), v130);
      v62(v129, 0, 1, v130);
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      if (qword_17B2D0 != -1) {
        swift_once();
      }
      sub_33D8(v1[30], (uint64_t)qword_17F6E0);
      uint64_t v132 = sub_141160();
      os_log_type_t v133 = sub_141480();
      if (os_log_type_enabled(v132, v133))
      {
        uint64_t v134 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v134 = 0;
        _os_log_impl(&dword_0, v132, v133, "Received UserDialogAct - UserCancelled", v134, 2u);
        swift_slowDealloc();
      }
      uint64_t v135 = v1[65];
      uint64_t v136 = v1[55];
      uint64_t v137 = v1[56];

      sub_904C(v135, &qword_17F3E0);
      (*(void (**)(uint64_t, void, uint64_t))(v137 + 104))(v135, enum case for ConfirmationResponse.rejected(_:), v136);
      v62(v135, 0, 1, v136);
    }
    uint64_t v138 = v1[64];
    uint64_t v139 = v1[55];
    uint64_t v140 = v1[56];
    sub_D1264(v1[65], v138);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139) == 1)
    {
      sub_904C(v1[64], &qword_17F3E0);
      if (qword_17B2D0 != -1) {
        swift_once();
      }
      sub_33D8(v1[30], (uint64_t)qword_17F6E0);
      swift_unknownObjectRetain_n();
      v141 = sub_141160();
      os_log_type_t v142 = sub_141470();
      if (os_log_type_enabled(v141, v142))
      {
        os_log_type_t v143 = (uint8_t *)swift_slowAlloc();
        v268[0] = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v143 = 136315138;
        v1[23] = v61;
        swift_unknownObjectRetain();
        sub_5830(&qword_17EB60);
        uint64_t v144 = sub_141260();
        v1[22] = sub_58C0(v144, v145, v268);
        sub_1415C0();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        _os_log_impl(&dword_0, v141, v142, "Received unsupported userDialogAct for confirmation: %s", v143, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_unknownObjectRelease_n();
      }

      uint64_t v156 = v1[65];
      *((unsigned char *)v1 + 624) = 0;
      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      sub_140830();
      swift_willThrow();

      swift_unknownObjectRelease();
      sub_904C(v156, &qword_17F3E0);
    }
    else
    {
      uint64_t v146 = v1[66];
      uint64_t v147 = v1[65];
      uint64_t v148 = v1[60];
      uint64_t v149 = v1[55];
      uint64_t v150 = v1[56];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 32))(v148, v1[64], v149);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16))(v146, v148, v149);
      v62(v146, 0, 1, v149);
      sub_140D80();
      sub_13F090();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v148, v149);
      sub_904C(v147, &qword_17F3E0);
    }
  }
  else if (v7 == enum case for Parse.uso(_:))
  {
    uint64_t v87 = v1[74];
    uint64_t v88 = v1[63];
    uint64_t v89 = v1[56];
    uint64_t v264 = v1[55];
    uint64_t v90 = v1[53];
    uint64_t v91 = v1[54];
    uint64_t v93 = v1[51];
    uint64_t v92 = v1[52];
    uint64_t v94 = v1[49];
    uint64_t v95 = v1[50];
    (*(void (**)(uint64_t, uint64_t))(v1[72] + 96))(v87, v1[71]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v91, v87, v92);
    sub_13F400();
    uint64_t v96 = sub_13F450();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v93, v94);
    v255 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
    v255(v88, 1, 1, v264);
    uint64_t v97 = *(uint64_t **)(v96 + 16);
    if (v97)
    {
      uint64_t v98 = v1[44];
      uint64_t v99 = *(void (**)(uint64_t, unint64_t, uint64_t))(v98 + 16);
      v98 += 16;
      v265 = v99;
      unint64_t v100 = v96 + ((*(unsigned __int8 *)(v98 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 64));
      uint64_t v261 = *(void *)(v98 + 56);
      uint64_t v101 = (void (**)(uint64_t, uint64_t))(v98 - 8);
      swift_bridgeObjectRetain();
      unint64_t v102 = v100;
      v259 = v97;
      while (1)
      {
        uint64_t v103 = v1[48];
        uint64_t v104 = v1[43];
        v265(v103, v102, v104);
        char v105 = sub_13F490();
        uint64_t v106 = *v101;
        (*v101)(v103, v104);
        if (v105) {
          break;
        }
        v102 += v261;
        uint64_t v97 = (uint64_t *)((char *)v97 - 1);
        if (!v97)
        {
          swift_bridgeObjectRelease();
          goto LABEL_94;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_17B2D0 != -1) {
        swift_once();
      }
      sub_33D8(v1[30], (uint64_t)qword_17F6E0);
      v169 = sub_141160();
      os_log_type_t v170 = sub_141480();
      if (os_log_type_enabled(v169, v170))
      {
        uint64_t v171 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v171 = 0;
        _os_log_impl(&dword_0, v169, v170, "USO parse userDialogActs contains hasAccepted; response is .confirmed.)",
          v171,
          2u);
        swift_slowDealloc();
      }
      uint64_t v172 = v1[63];
      uint64_t v173 = v1[55];
      uint64_t v174 = v1[56];

      sub_904C(v172, &qword_17F3E0);
      (*(void (**)(uint64_t, void, uint64_t))(v174 + 104))(v172, enum case for ConfirmationResponse.confirmed(_:), v173);
      v255(v172, 0, 1, v173);
LABEL_94:
      swift_bridgeObjectRetain();
      uint64_t v175 = 0;
      unint64_t v176 = v100;
      while (1)
      {
        unint64_t v1 = (uint64_t *)(v175 + 1);
        if (__OFADD__(v175, 1)) {
          break;
        }
        uint64_t v177 = v266[47];
        uint64_t v178 = v266[43];
        v265(v177, v176, v178);
        char v179 = sub_13F4E0();
        v106(v177, v178);
        if (v179)
        {
          swift_bridgeObjectRelease();
          if (qword_17B2D0 != -1) {
            swift_once();
          }
          sub_33D8(v266[30], (uint64_t)qword_17F6E0);
          char v180 = sub_141160();
          os_log_type_t v181 = sub_141480();
          if (os_log_type_enabled(v180, v181))
          {
            os_log_type_t v182 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v182 = 0;
            _os_log_impl(&dword_0, v180, v181, "USO parse userDialogActs contains hasWantedToProceed; response is .confirmed (unexpected!)",
              v182,
              2u);
            swift_slowDealloc();
          }
          uint64_t v183 = v266[63];
          uint64_t v184 = v266[55];
          uint64_t v185 = v266[56];

          sub_904C(v183, &qword_17F3E0);
          (*(void (**)(uint64_t, void, uint64_t))(v185 + 104))(v183, enum case for ConfirmationResponse.confirmed(_:), v184);
          v255(v183, 0, 1, v184);
          goto LABEL_104;
        }
        v176 += v261;
        ++v175;
        if (v1 == v259)
        {
          swift_bridgeObjectRelease();
LABEL_104:
          swift_bridgeObjectRetain();
          uint64_t v186 = 0;
          unint64_t v187 = v100;
          while (1)
          {
            unint64_t v1 = (uint64_t *)(v186 + 1);
            if (__OFADD__(v186, 1)) {
              goto LABEL_159;
            }
            uint64_t v188 = v266[46];
            uint64_t v189 = v266[43];
            v265(v188, v187, v189);
            char v190 = sub_13F4A0();
            v106(v188, v189);
            if (v190) {
              break;
            }
            v187 += v261;
            ++v186;
            if (v1 == v259)
            {
              swift_bridgeObjectRelease();
              unint64_t v1 = v266;
              goto LABEL_114;
            }
          }
          swift_bridgeObjectRelease();
          if (qword_17B2D0 != -1) {
            swift_once();
          }
          unint64_t v1 = v266;
          sub_33D8(v266[30], (uint64_t)qword_17F6E0);
          os_log_type_t v191 = sub_141160();
          os_log_type_t v192 = sub_141480();
          if (os_log_type_enabled(v191, v192))
          {
            uint64_t v193 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v193 = 0;
            _os_log_impl(&dword_0, v191, v192, "USO parse userDialogActs contains hasRejected; response is .rejected.",
              v193,
              2u);
            swift_slowDealloc();
          }
          uint64_t v194 = v266[63];
          uint64_t v195 = v266[55];
          uint64_t v196 = v266[56];

          sub_904C(v194, &qword_17F3E0);
          (*(void (**)(uint64_t, void, uint64_t))(v196 + 104))(v194, enum case for ConfirmationResponse.rejected(_:), v195);
          v255(v194, 0, 1, v195);
LABEL_114:
          swift_bridgeObjectRetain();
          uint64_t v197 = 0;
          while (1)
          {
            uint64_t v198 = (uint64_t *)(v197 + 1);
            if (__OFADD__(v197, 1)) {
              goto LABEL_160;
            }
            uint64_t v199 = v1[45];
            uint64_t v200 = v1[43];
            v265(v199, v100, v200);
            char v201 = sub_13F4B0();
            v106(v199, v200);
            if (v201)
            {
              swift_bridgeObjectRelease();
              if (qword_17B2D0 != -1) {
                swift_once();
              }
              sub_33D8(v1[30], (uint64_t)qword_17F6E0);
              uint64_t v202 = sub_141160();
              os_log_type_t v203 = sub_141480();
              if (os_log_type_enabled(v202, v203))
              {
                uint64_t v204 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v204 = 0;
                _os_log_impl(&dword_0, v202, v203, "USO parse userDialogActs contains hasCancelled; response is .rejected.",
                  v204,
                  2u);
                swift_slowDealloc();
              }
              uint64_t v205 = v1[63];
              uint64_t v206 = v1[55];
              uint64_t v207 = v1[56];

              sub_904C(v205, &qword_17F3E0);
              (*(void (**)(uint64_t, void, uint64_t))(v207 + 104))(v205, enum case for ConfirmationResponse.rejected(_:), v206);
              v255(v205, 0, 1, v206);
              goto LABEL_124;
            }
            v100 += v261;
            ++v197;
            if (v198 == v259)
            {
              swift_bridgeObjectRelease();
              goto LABEL_124;
            }
          }
        }
      }
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      swift_once();
LABEL_25:
      uint64_t v40 = v1[41];
      uint64_t v41 = v1[42];
      uint64_t v42 = v1[37];
      uint64_t v43 = v1[38];
      uint64_t v44 = sub_33D8(v1[30], (uint64_t)qword_17F6E0);
      BOOL v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      v45(v40, v41, v42);
      uint64_t v257 = v44;
      uint64_t v46 = sub_141160();
      os_log_type_t v47 = sub_141480();
      BOOL v48 = os_log_type_enabled(v46, v47);
      uint64_t v49 = v1[41];
      v256 = v45;
      if (v48)
      {
        uint64_t v50 = v1[40];
        loga = v46;
        uint64_t v52 = v1[37];
        uint64_t v51 = v1[38];
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        v268[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 136315138;
        v45(v50, v49, v52);
        uint64_t v54 = sub_141260();
        v266[19] = sub_58C0(v54, v55, v268);
        sub_1415C0();
        swift_bridgeObjectRelease();
        uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        v56(v49, v52);
        uint64_t v46 = loga;
        _os_log_impl(&dword_0, loga, v47, "Handling direct invocation: %s", v53, 0xCu);
        swift_arrayDestroy();
        unint64_t v1 = v266;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v1[38] + 8);
        v56(v49, v1[37]);
      }

      v263 = v56;
      uint64_t v70 = v1[61];
      uint64_t v71 = v1[55];
      uint64_t v72 = v1[56];
      sub_1408D0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71) != 1)
      {
        uint64_t v107 = v1[66];
        uint64_t v108 = v1[58];
        uint64_t v109 = v1[55];
        uint64_t v110 = v1[56];
        uint64_t v111 = v1[42];
        uint64_t v112 = v1[37];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v108, v1[61], v109);
LABEL_47:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16))(v107, v108, v109);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
        sub_140D80();
        sub_13F090();
        (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v109);
        v263(v111, v112);
        goto LABEL_20;
      }
      sub_904C(v1[61], &qword_17F3E0);
      uint64_t v73 = sub_13F3B0();
      if (!v73) {
        goto LABEL_85;
      }
      uint64_t v74 = v73;
      uint64_t v75 = v1 + 6;
      uint64_t v76 = v1[36];
      id v77 = v1;
      uint64_t v78 = v1[34];
      uint64_t v79 = v77[33];
      Class v80 = *(void (**)(uint64_t, void, uint64_t))(v78 + 104);
      v80(v76, enum case for DirectInvocationUtils.Timer.UserInfoKey.buttonPressed(_:), v79);
      uint64_t v81 = sub_1408F0();
      uint64_t v83 = v82;
      uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
      v84(v76, v79);
      if (*(void *)(v74 + 16) && (unint64_t v85 = sub_16F44(v81, v83), (v86 & 1) != 0))
      {
        sub_5B50(*(void *)(v74 + 56) + 32 * v85, (uint64_t)v75);
      }
      else
      {
        *uint64_t v75 = 0u;
        v75[1] = 0u;
      }
      swift_bridgeObjectRelease();
      if (v266[9])
      {
        if (swift_dynamicCast())
        {
          v151._rawValue = &off_173CE8;
          Swift::Int v152 = sub_141820(v151, *((Swift::String *)v266 + 6));
          swift_bridgeObjectRelease();
          if (v152)
          {
            if (v152 != 1)
            {
              swift_bridgeObjectRelease();
              unint64_t v1 = v266;
              goto LABEL_85;
            }
            int log = 1;
          }
          else
          {
            int log = 0;
          }
          v230 = v266 + 2;
          uint64_t v231 = v266[35];
          uint64_t v232 = v266[33];
          v80(v231, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v232);
          uint64_t v233 = sub_1408F0();
          uint64_t v235 = v234;
          v84(v231, v232);
          if (*(void *)(v74 + 16) && (unint64_t v236 = sub_16F44(v233, v235), (v237 & 1) != 0))
          {
            sub_5B50(*(void *)(v74 + 56) + 32 * v236, (uint64_t)v230);
          }
          else
          {
            _OWORD *v230 = 0u;
            *((_OWORD *)v266 + 2) = 0u;
          }
          unint64_t v1 = v266;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v266[5])
          {
            if (swift_dynamicCast())
            {
              char v238 = sub_CC640();
              if (v238 != 19)
              {
                int v239 = log;
                if (sub_642C(v238) == 1886352499 && v240 == 0xE400000000000000)
                {
                  swift_bridgeObjectRelease();
LABEL_146:
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v266[31] + 16))(v266[32], v257, v266[30]);
                  uint64_t v242 = sub_141160();
                  os_log_type_t v243 = sub_141480();
                  BOOL v244 = os_log_type_enabled(v242, v243);
                  uint64_t v246 = v266[31];
                  uint64_t v245 = v266[32];
                  uint64_t v247 = v266[30];
                  if (v244)
                  {
                    uint64_t v267 = v266[32];
                    v248 = (uint8_t *)swift_slowAlloc();
                    uint64_t v249 = swift_slowAlloc();
                    *(_DWORD *)v248 = 136315138;
                    v268[0] = v249;
                    if (log) {
                      uint64_t v250 = 0x6C65636E6163;
                    }
                    else {
                      uint64_t v250 = 7562617;
                    }
                    if (log) {
                      unint64_t v251 = 0xE600000000000000;
                    }
                    else {
                      unint64_t v251 = 0xE300000000000000;
                    }
                    uint64_t *v259 = sub_58C0(v250, v251, v268);
                    sub_1415C0();
                    int v239 = log;
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_0, v242, v243, "Received confirmation directionInvocation, buttonPressed: %s", v248, 0xCu);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v267, v247);
                  }
                  else
                  {

                    (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v245, v247);
                  }
                  uint64_t v107 = v1[66];
                  uint64_t v110 = v1[56];
                  uint64_t v108 = v1[57];
                  uint64_t v109 = v1[55];
                  uint64_t v111 = v1[42];
                  uint64_t v112 = v1[37];
                  v252 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
                  if (!v239) {
                    v252 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
                  }
                  (*(void (**)(uint64_t, void, uint64_t))(v1[56] + 104))(v1[57], *v252, v1[55]);
                  goto LABEL_47;
                }
                char v241 = sub_141AA0();
                swift_bridgeObjectRelease();
                if (v241) {
                  goto LABEL_146;
                }
              }
            }
          }
          else
          {
            sub_904C((uint64_t)v230, &qword_17B9B0);
          }
LABEL_85:
          v256(v1[39], v1[42], v1[37]);
          uint64_t v157 = sub_141160();
          os_log_type_t v158 = sub_141470();
          if (os_log_type_enabled(v157, v158))
          {
            uint64_t v159 = v266[40];
            uint64_t v160 = v266[39];
            uint64_t v161 = v266[37];
            uint64_t v162 = (uint8_t *)swift_slowAlloc();
            v268[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v162 = 136315138;
            v256(v159, v160, v161);
            uint64_t v163 = sub_141260();
            v266[14] = sub_58C0(v163, v164, v268);
            sub_1415C0();
            unint64_t v1 = v266;
            swift_bridgeObjectRelease();
            uint64_t v165 = v160;
            char v166 = v263;
            v263(v165, v161);
            _os_log_impl(&dword_0, v157, v158, "Received unsupported directInvocation for timer confirmation: %s", v162, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            char v166 = v263;
            v263(v1[39], v1[37]);
          }

          uint64_t v167 = v1[42];
          uint64_t v168 = v1[37];
          *((unsigned char *)v1 + 626) = 0;
          sub_5830((uint64_t *)&unk_17F3C0);
          sub_2F710();
          swift_allocError();
          sub_140830();
          swift_willThrow();

          v166(v167, v168);
          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_904C((uint64_t)v75, &qword_17B9B0);
      }
      unint64_t v1 = v266;
      goto LABEL_85;
    }
LABEL_124:
    uint64_t v208 = v1[62];
    uint64_t v209 = v1[55];
    uint64_t v210 = v1[56];
    sub_D1264(v1[63], v208);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v210 + 48))(v208, 1, v209) == 1)
    {
      sub_904C(v1[62], &qword_17F3E0);
      if (qword_17B2D0 != -1) {
        swift_once();
      }
      sub_33D8(v1[30], (uint64_t)qword_17F6E0);
      swift_bridgeObjectRetain();
      uint64_t v211 = sub_141160();
      os_log_type_t v212 = sub_141470();
      if (os_log_type_enabled(v211, v212))
      {
        uint64_t v213 = (uint8_t *)swift_slowAlloc();
        v268[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v213 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v214 = sub_141320();
        unint64_t v216 = v215;
        swift_bridgeObjectRelease();
        v266[21] = sub_58C0(v214, v216, v268);
        unint64_t v1 = v266;
        sub_1415C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v211, v212, "Received unsupported userDialogActs for confirmation: %s", v213, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v226 = v1[63];
      uint64_t v228 = v1[53];
      uint64_t v227 = v1[54];
      uint64_t v229 = v1[52];
      *((unsigned char *)v1 + 629) = 0;
      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      sub_140830();
      swift_willThrow();

      sub_904C(v226, &qword_17F3E0);
      (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v227, v229);
    }
    else
    {
      uint64_t v217 = v1[66];
      uint64_t v219 = v1[62];
      uint64_t v218 = v1[63];
      uint64_t v220 = v1[59];
      uint64_t v222 = v1[55];
      uint64_t v221 = v1[56];
      uint64_t v224 = v1[53];
      uint64_t v223 = v1[54];
      uint64_t v225 = v1[52];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v221 + 32))(v220, v219, v222);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v221 + 16))(v217, v220, v222);
      v255(v217, 0, 1, v222);
      sub_140D80();
      unint64_t v1 = v266;
      sub_13F090();
      (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v220, v222);
      sub_904C(v218, &qword_17F3E0);
      (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v223, v225);
    }
  }
  else
  {
    if (qword_17B2D0 != -1) {
      swift_once();
    }
    uint64_t v113 = v1[29];
    uint64_t v114 = v1[27];
    uint64_t v115 = v1[28];
    uint64_t v116 = v1[25];
    sub_33D8(v1[30], (uint64_t)qword_17F6E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16))(v113, v116, v114);
    v117 = sub_141160();
    os_log_type_t v118 = sub_141470();
    if (os_log_type_enabled(v117, v118))
    {
      uint64_t v120 = v1[28];
      uint64_t v119 = v1[29];
      uint64_t v258 = v1[27];
      unint64_t v121 = (uint8_t *)swift_slowAlloc();
      v268[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v121 = 136315138;
      sub_13F370();
      uint64_t v122 = sub_141260();
      v1[16] = sub_58C0(v122, v123, v268);
      sub_1415C0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v119, v258);
      _os_log_impl(&dword_0, v117, v118, "Received not an supported input: %s", v121, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v1[28] + 8))(v1[29], v1[27]);
    }

    uint64_t v153 = v1[74];
    uint64_t v154 = v1[72];
    uint64_t v155 = v1[71];
    *((unsigned char *)v1 + 625) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v153, v155);
  }
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void))v1[1];
  return v34();
}

uint64_t sub_E9ADC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_13F040();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_141170();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v2[13] = v6;
  v2[14] = *(void *)(v6 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v7 = sub_140730();
  v2[16] = v7;
  v2[17] = *(void *)(v7 - 8);
  v2[18] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[21] = v8;
  v2[22] = *(void *)(v8 - 8);
  v2[23] = swift_task_alloc();
  uint64_t v9 = sub_13EFF0();
  v2[24] = v9;
  v2[25] = *(void *)(v9 - 8);
  v2[26] = swift_task_alloc();
  return _swift_task_switch(sub_E9E04, 0, 0);
}

uint64_t sub_E9E04()
{
  sub_11838C(10);
  sub_13EC60();
  _s21ConfirmIntentStrategyVMa_0();
  sub_140980();
  char v1 = sub_140860();
  uint64_t v2 = sub_140870();
  if (v2 && (uint64_t v3 = (void *)v2, sub_141010(), v5 = v4, v3, v5))
  {
    uint64_t v6 = *(void *)(v0 + 160);
    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_140500();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v9 = sub_140500();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  uint64_t v10 = sub_140870();
  if (v10 && (v11 = (void *)v10, sub_141020(), uint64_t v13 = v12, v11, v13))
  {
    uint64_t v14 = *(void *)(v0 + 152);
    sub_141270();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_140500();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = sub_140500();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  }
  char v18 = v1 ^ 1;
  uint64_t v20 = *(void *)(v0 + 136);
  uint64_t v19 = *(void *)(v0 + 144);
  uint64_t v21 = *(void *)(v0 + 128);
  sub_140720();
  BOOL v22 = sub_140710();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  if (v22)
  {
    unint64_t v23 = (void *)sub_13F050();

    uint64_t v25 = sub_1415A0();
    uint64_t v27 = v26;

    *(void *)(v0 + 216) = v27;
    if (v27)
    {
      int v28 = (void *)sub_13F050();
      uint64_t v30 = v29;

      uint64_t v31 = sub_1415A0();
      uint64_t v33 = v32;

      *(void *)(v0 + 224) = v33;
      if (v33)
      {
        uint64_t v55 = v31;
        (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 104))(*(void *)(v0 + 96), enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), *(void *)(v0 + 80));
        if (qword_17B2D0 != -1) {
          swift_once();
        }
        uint64_t v34 = *(void *)(v0 + 64);
        uint64_t v35 = *(void *)(v0 + 72);
        uint64_t v36 = *(void *)(v0 + 56);
        uint64_t v37 = sub_33D8(v36, (uint64_t)qword_17F6E0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v37, v36);
        mach_absolute_time();
        sub_1406B0();
        if (qword_17B290 != -1) {
          swift_once();
        }
        uint64_t v38 = (int8x16_t *)swift_task_alloc();
        *(void *)(v0 + 232) = v38;
        v38[1] = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
        v38[2].i64[0] = v25;
        v38[2].i64[1] = v27;
        v38[3].i64[0] = v55;
        v38[3].i64[1] = v33;
        uint64_t v39 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v39;
        *uint64_t v39 = v0;
        v39[1] = sub_EA534;
        return sub_F6294(v1 & 1, v18 & 1, (uint64_t)sub_EB81C, (uint64_t)v38);
      }
      swift_bridgeObjectRelease();
    }
    if (qword_17B2D0 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 56), (uint64_t)qword_17F6E0);
    BOOL v45 = sub_141160();
    os_log_type_t v46 = sub_141470();
    if (os_log_type_enabled(v45, v46))
    {
      os_log_type_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v47 = 0;
      _os_log_impl(&dword_0, v45, v46, "Could not create direct invocation for confirm or reject actions.", v47, 2u);
      swift_slowDealloc();
    }
    uint64_t v48 = *(void *)(v0 + 200);
    uint64_t v49 = *(void *)(v0 + 184);
    uint64_t v54 = *(void *)(v0 + 192);
    uint64_t v56 = *(void *)(v0 + 208);
    uint64_t v51 = *(void *)(v0 + 168);
    uint64_t v50 = *(void *)(v0 + 176);
    uint64_t v52 = *(void *)(v0 + 152);
    uint64_t v57 = *(void *)(v0 + 160);

    *(unsigned char *)(v0 + 320) = 0;
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    sub_140830();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v56, v54);
    sub_904C(v52, &qword_17BE78);
    sub_904C(v57, &qword_17BE78);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
    return v53();
  }
  else
  {
    if (qword_17B288 != -1) {
      swift_once();
    }
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_EA98C;
    uint64_t v43 = *(void *)(v0 + 152);
    uint64_t v42 = *(void *)(v0 + 160);
    uint64_t v44 = *(void *)(v0 + 48);
    return sub_53368(v44, v18 & 1, v1 & 1, v42, v43);
  }
}

uint64_t sub_EA534(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[31] = a1;
  v3[32] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return _swift_task_switch(sub_EAF04, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v5 = (void *)swift_task_alloc();
    v3[33] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_EA704;
    uint64_t v6 = v3[26];
    uint64_t v7 = v3[23];
    uint64_t v8 = v3[15];
    uint64_t v9 = v3[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v9, v7, v6, v8, 0);
  }
}

uint64_t sub_EA704()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_EB05C;
  }
  else {
    uint64_t v3 = sub_EA838;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_EA838()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v6 = v0[21];
  uint64_t v5 = v0[22];
  uint64_t v7 = v0[19];
  uint64_t v8 = v0[20];
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  sub_904C(v7, &qword_17BE78);
  sub_904C(v8, &qword_17BE78);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_EA98C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_EB1B4, 0, 0);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_17DDE8 + dword_17DDE8);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 296) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_EAB14;
    return v5(10);
  }
}

uint64_t sub_EAB14(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 304) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[5] + 8))(v4[6], v4[4]);
    uint64_t v5 = sub_EADCC;
  }
  else
  {
    v4[39] = a1;
    uint64_t v5 = sub_EAC50;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_EAC50()
{
  sub_53A58(*(void *)(v0 + 184), *(void *)(v0 + 312), *(void *)(v0 + 208), *(uint64_t **)(v0 + 16));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  sub_904C(v8, &qword_17BE78);
  sub_904C(v7, &qword_17BE78);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_EADCC()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[19];
  uint64_t v4 = v0[20];
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_904C(v5, &qword_17BE78);
  sub_904C(v4, &qword_17BE78);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_EAF04()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v8 = v0[19];
  uint64_t v7 = v0[20];
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_904C(v8, &qword_17BE78);
  sub_904C(v7, &qword_17BE78);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_EB05C()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v8 = v0[19];
  uint64_t v7 = v0[20];
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_904C(v8, &qword_17BE78);
  sub_904C(v7, &qword_17BE78);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_EB1B4()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[19];
  uint64_t v4 = v0[20];
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_904C(v5, &qword_17BE78);
  sub_904C(v4, &qword_17BE78);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_EB2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for DismissTimerPromptConfirmDismissParameters(0);
  sub_1816C(a2, a1 + v9[6]);
  sub_1816C(a3, a1 + v9[9]);
  swift_bridgeObjectRetain();
  sub_1404D0();
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v8, 0, 1, v10);
  sub_2D248((uint64_t)v8, a1 + v9[5]);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v11(v8, 0, 1, v10);
  return sub_2D248((uint64_t)v8, a1);
}

uint64_t sub_EB468@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_E6B54(a1, a2);
}

uint64_t sub_EB480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D95C;
  return sub_E6DD4(a1, a2, a3);
}

uint64_t sub_EB530(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D95C;
  return sub_E9ADC(a1);
}

uint64_t sub_EB5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1D95C;
  return ConfirmIntentFlowStrategyAsync.makeConfirmationRejectedResponse(confirmParameters:)(a1, a2, a3, a4);
}

uint64_t sub_EB68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_159A4;
  return ConfirmIntentFlowStrategyAsync.makeFlowCancelledResponse(confirmParameters:)(a1, a2, a3, a4);
}

uint64_t sub_EB750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1D95C;
  return ConfirmIntentFlowStrategyAsync.makeErrorResponse(error:confirmParameters:)(a1, a2, a3, a4, a5);
}

uint64_t sub_EB81C(uint64_t a1)
{
  return sub_EB2EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for SetTimerAttributeCATs_Async()
{
  uint64_t result = qword_17F7E8;
  if (!qword_17F7E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_EB878()
{
  return swift_initClassMetadata2();
}

uint64_t sub_EB8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_EBA3C()
{
  return type metadata accessor for SetTimerAttributeCATs_Async();
}

uint64_t sub_EBA44(void *a1, uint64_t a2)
{
  *a1 = sub_F330C(a2);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_71374(v3);
}

unint64_t sub_EBB18()
{
  unint64_t result = qword_17F850;
  if (!qword_17F850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17F850);
  }
  return result;
}

unint64_t sub_EBB6C()
{
  unint64_t result = qword_17F858;
  if (!qword_17F858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17F858);
  }
  return result;
}

uint64_t sub_EBBC0(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17F860);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_EBC20(uint64_t a1)
{
  return a1;
}

uint64_t sub_EBC74(uint64_t a1)
{
  return a1;
}

uint64_t SIRINLUUserDialogAct.firstUsoTask.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_13F910();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_3:
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v1 = sub_1416A0();
      }
      else
      {
        if (!*(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8)))
        {
          __break(1u);
LABEL_20:
          swift_once();
LABEL_7:
          uint64_t v4 = sub_141170();
          sub_33D8(v4, (uint64_t)qword_17F870);
          swift_retain_n();
          uint64_t v5 = sub_141160();
          os_log_type_t v6 = sub_141480();
          if (os_log_type_enabled(v5, v6))
          {
            uint64_t v7 = swift_slowAlloc();
            v20[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v7 = 136315394;
            uint64_t v8 = sub_140250();
            sub_58C0(v8, v9, v20);
            sub_1415C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v7 + 12) = 2080;
            uint64_t v10 = sub_140240();
            sub_58C0(v10, v11, v20);
            sub_1415C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v5, v6, "NLv4TranslationParse: Input is entity=%s verb=%s", (uint8_t *)v7, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          return v1;
        }
        uint64_t v1 = *(void *)(v3 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      if (qword_17B2D8 == -1) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  if (qword_17B2D8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_141170();
  sub_33D8(v14, (uint64_t)qword_17F870);
  swift_unknownObjectRetain_n();
  uint64_t v15 = sub_141160();
  os_log_type_t v16 = sub_141470();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_unknownObjectRetain();
    uint64_t v18 = sub_141260();
    sub_58C0(v18, v19, v20);
    sub_1415C0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v15, v16, "NLv4TranslationParse: usoTasks are empty in UserDialogAct %s ", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  return 0;
}

uint64_t sub_EC280()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F870);
  sub_33D8(v0, (uint64_t)qword_17F870);
  return sub_140E60();
}

uint64_t sub_EC2D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_EC348()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17F888);
  sub_33D8(v0, (uint64_t)qword_17F888);
  return sub_140E40();
}

uint64_t sub_EC394(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = *v2;
  return _swift_task_switch(sub_EC3E0, 0, 0);
}

uint64_t sub_EC3E0()
{
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17F888);
  unint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "ResponseTimerDisambiguationFlowProvider.makeIntentPromptAnswer(choice:)", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];

  sub_5830(&qword_17C2F8);
  uint64_t v8 = *(void **)(v5 + 104);
  v0[3] = v8;
  uint64_t v11 = v6 + 80;
  uint64_t v10 = *(void *)(v6 + 80);
  uint64_t v9 = *(void *)(v11 + 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  id v13 = v8;
  v12(v7, v10, v9);

  sub_13F080();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_EC58C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  _s20HandleIntentStrategyVwxx_1(v0 + 40);
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_EC5DC()
{
  sub_EC58C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResponseTimerDisambiguationFlowProvider()
{
  return sub_6F024();
}

void sub_EC628()
{
  sub_F17DC();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_EC6F0()
{
  return swift_retain();
}

uint64_t sub_EC6FC@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 32);
  return swift_retain();
}

uint64_t sub_EC70C@<X0>(uint64_t a1@<X8>)
{
  return sub_3410(*v1 + 40, a1);
}

uint64_t sub_EC71C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return NeedsDisambiguationDetailedFlowProvider.authenticationRequirements.getter(a1, WitnessTable);
}

uint64_t sub_EC780(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D95C;
  v7[5] = v5;
  v7[6] = v6;
  v7[4] = a1;
  v7[7] = *v6;
  return _swift_task_switch(sub_EC3E0, 0, 0);
}

uint64_t sub_EC868()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_EC874()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_EC8A8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = type metadata accessor for ResponseTimerDisambiguationFlowProvider();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v1 = v0;
  v1[1] = sub_48468;
  return NeedsDisambiguationDetailedSelectionFlowProvider.makeAllItemsFlow()(v2, WitnessTable);
}

uint64_t sub_EC97C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = type metadata accessor for ResponseTimerDisambiguationFlowProvider();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v3 = v1;
  v3[1] = sub_1D95C;
  return NeedsDisambiguationDetailedSelectionFlowProvider.makeWindowingConfiguration()(a1, v4, WitnessTable);
}

uint64_t sub_ECA58(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  uint64_t v6 = type metadata accessor for ResponseTimerDisambiguationFlowProvider();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v5 = v2;
  v5[1] = sub_48468;
  return NeedsDisambiguationDetailedSelectionFlowProvider.makeFinalWindowFlow(paginationParameters:windowContent:)(a1, v4, v6, WitnessTable);
}

uint64_t sub_ECB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_48468;
  return MultipleChoicePromptWindowingFlowProvider.makeConclusionFlow(paginationParameters:)(a1, a2, a3);
}

uint64_t sub_ECBF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  uint64_t v6 = type metadata accessor for ResponseTimerDisambiguationFlowProvider();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v5 = v2;
  v5[1] = sub_48468;
  return NeedsDisambiguationDetailedSelectionFlowProvider.makeWindowFlow(paginationParameters:windowContent:)(a1, v4, v6, WitnessTable);
}

void sub_ECCE0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v28 = *v2;
  uint64_t v4 = sub_5830(&qword_17FB18);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_13F2C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v28 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_141170();
  sub_33D8(v17, (uint64_t)qword_17F888);
  uint64_t v18 = sub_141160();
  os_log_type_t v19 = sub_141480();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "ResponseTimerSimpleDisambiguationStrategy.actionForInput(input:) called.", v20, 2u);
    swift_slowDealloc();
  }

  uint64_t v21 = (uint64_t)v3 + qword_17F928;
  swift_beginAccess();
  sub_F31F8(v21, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17FB18);
    int v22 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
    char v23 = sub_13F2B0();
    char v24 = v23 ^ sub_13F2A0();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v25(v14, v16, v7);
    if (v24) {
      char v26 = 0;
    }
    else {
      char v26 = sub_13F2B0();
    }
    uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v14, v7);
    v25(v11, v16, v7);
    int v22 = (v26 & 1) == 0 || sub_13F280() != 0;
    v27(v11, v7);
    v27(v16, v7);
  }
  sub_B84B0(v30, v22, *(void *)(v28 + 80), v29);
}

uint64_t sub_ED06C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_13F2C0();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_ED130, 0, 0);
}

uint64_t sub_ED130()
{
  sub_13F270();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_ED1D4;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[2];
  return sub_ED3E0(v4, v3, v2);
}

uint64_t sub_ED1D4()
{
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *v1;
  *(void *)(v5 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_ED37C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_ED37C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_ED3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[34] = a3;
  v4[35] = v3;
  v4[32] = a1;
  v4[33] = a2;
  uint64_t v5 = sub_13ECE0();
  v4[36] = v5;
  v4[37] = *(void *)(v5 - 8);
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  uint64_t v6 = sub_13EE40();
  v4[40] = v6;
  v4[41] = *(void *)(v6 - 8);
  v4[42] = swift_task_alloc();
  sub_140590();
  v4[43] = swift_task_alloc();
  uint64_t v7 = sub_13F040();
  v4[44] = v7;
  v4[45] = *(void *)(v7 - 8);
  v4[46] = swift_task_alloc();
  sub_5830(&qword_17DDA8);
  v4[47] = swift_task_alloc();
  uint64_t v8 = sub_141170();
  v4[48] = v8;
  v4[49] = *(void *)(v8 - 8);
  v4[50] = swift_task_alloc();
  uint64_t v9 = sub_140680();
  v4[51] = v9;
  v4[52] = *(void *)(v9 - 8);
  v4[53] = swift_task_alloc();
  uint64_t v10 = sub_1406A0();
  v4[54] = v10;
  v4[55] = *(void *)(v10 - 8);
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  uint64_t v11 = sub_1403A0();
  v4[58] = v11;
  v4[59] = *(void *)(v11 - 8);
  v4[60] = swift_task_alloc();
  v4[61] = swift_task_alloc();
  uint64_t v12 = sub_140730();
  v4[62] = v12;
  v4[63] = *(void *)(v12 - 8);
  v4[64] = swift_task_alloc();
  uint64_t v13 = sub_13F2C0();
  v4[65] = v13;
  v4[66] = *(void *)(v13 - 8);
  v4[67] = swift_task_alloc();
  uint64_t v14 = sub_13EFF0();
  v4[68] = v14;
  v4[69] = *(void *)(v14 - 8);
  v4[70] = swift_task_alloc();
  sub_5830(&qword_17FB18);
  v4[71] = swift_task_alloc();
  v4[72] = swift_task_alloc();
  return _swift_task_switch(sub_ED8D8, 0, 0);
}

uint64_t sub_ED8D8()
{
  uint64_t v113 = v0;
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[33];
  uint64_t v3 = sub_140EA0();
  unint64_t v110 = sub_12E02C(v2, v3);
  v0[73] = v110;
  unint64_t v4 = *(void *)(v1 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v100 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v100 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[71];
  uint64_t v7 = v0[66];
  uint64_t v8 = v0[65];
  uint64_t v9 = v0[35];
  unint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v102(v5, v0[34], v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v8);
  sub_F30C0(v5, v6);
  uint64_t v10 = v9 + qword_17F928;
  swift_beginAccess();
  sub_F3128(v6, v10);
  swift_endAccess();
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_33D8(v0[48], (uint64_t)qword_17F888);
  swift_bridgeObjectRetain_n();
  uint64_t v111 = v11;
  uint64_t v12 = sub_141160();
  os_log_type_t v13 = sub_141480();
  if (!os_log_type_enabled(v12, v13))
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_10;
  }
  uint64_t v14 = swift_slowAlloc();
  v112[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v14 = 134218242;
  if (v110 >> 62) {
    goto LABEL_53;
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    swift_bridgeObjectRelease();
    v0[30] = v15;
    sub_1415C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    type metadata accessor for TimerTimer(0);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_141320();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    v0[31] = sub_58C0(v16, v18, v112);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v12, v13, "ResponseTimerDisambiguationStrategy.makePromptForItems(items:paginationParameters:) Converted %ld timers to send to dialog: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_10:
    uint64_t v19 = v0[35];
    swift_bridgeObjectRetain();
    sub_13F280();
    swift_getWitnessTable();
    uint64_t v20 = sub_1409B0();
    swift_bridgeObjectRelease();
    uint64_t v107 = v20;
    uint64_t v108 = v19;
    uint64_t v104 = qword_17F930;
    uint64_t v21 = &unk_17F000;
    if (v20 != *(void *)(v19 + qword_17F930)) {
      *(void *)(v0[35] + qword_17F938) = 0;
    }
    swift_retain();
    int v22 = sub_141160();
    os_log_type_t v23 = sub_141480();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v0[35];
    if (v24)
    {
      os_log_type_t v13 = (_BYTE)v0 - 48;
      uint64_t v26 = swift_slowAlloc();
      v112[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 134218498;
      v0[26] = *(void *)(v108 + v104);
      sub_1415C0();
      *(_WORD *)(v26 + 12) = 2048;
      v0[27] = *(void *)(v25 + qword_17F938);
      sub_1415C0();
      swift_release();
      *(_WORD *)(v26 + 22) = 2080;
      v0[28] = v20;
      uint64_t v27 = sub_141980();
      v0[29] = sub_58C0(v27, v28, v112);
      uint64_t v21 = (void *)&unk_17F000;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v22, v23, "[makePromptForItems] window=%ld, promptCount=%ld, thisWindow=%s", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    uint64_t v29 = v0[35];
    uint64_t v30 = v21[295];
    uint64_t v31 = v0[67];
    uint64_t v32 = v0[65];
    uint64_t v33 = v0[34];
    uint64_t v14 = *(unsigned __int8 *)(v29 + 32);
    char v34 = sub_13F2B0();
    v102(v31, v33, v32);
    char v35 = (v34 & 1) != 0 ? sub_13F2A0() ^ 1 : 1;
    uint64_t v12 = v0[70];
    unint64_t v36 = v0[33];
    (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
    sub_119A84(v36, v14, v35 & 1);
    *(void *)(v108 + v104) = v107;
    uint64_t v37 = *(void *)(v29 + v30);
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (!v38) {
      break;
    }
    __break(1u);
LABEL_53:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  *(void *)(v29 + v30) = v39;
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v0 + 2, v0[5]);
  char v40 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  if (v40) {
    goto LABEL_22;
  }
  uint64_t v42 = v0[63];
  uint64_t v41 = v0[64];
  uint64_t v43 = v0[62];
  sub_140720();
  BOOL v44 = sub_1406C0();
  uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v109(v41, v43);
  if (!v44) {
    goto LABEL_22;
  }
  uint64_t v46 = v0[60];
  uint64_t v45 = v0[61];
  uint64_t v48 = v0[58];
  uint64_t v47 = v0[59];
  sub_140330();
  sub_140320();
  sub_1402F0();
  swift_release();
  sub_140BB0();
  swift_release();
  sub_140390();
  sub_F31B0(&qword_17EEA0, (void (*)(uint64_t))&type metadata accessor for ResponseMode);
  char v49 = sub_141230();
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v50(v46, v48);
  v50(v45, v48);
  if (v49)
  {
LABEL_22:
    uint64_t v51 = (id *)(v0 + 23);
    swift_bridgeObjectRetain_n();
    uint64_t v52 = sub_141160();
    os_log_type_t v53 = sub_141480();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 134217984;
      if (v110 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_1417D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v55 = *(void *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease();
      v0[22] = v55;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v52, v53, "[makePromptForItems] Using disambiguation pattern with %ld items", v54, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v56 = sub_79174(v0[33], v14);
    v0[92] = v56;
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = self;
      *uint64_t v51 = 0;
      id v59 = [v58 archivedDataWithRootObject:v57 requiringSecureCoding:1 error:v0 + 23];
      id v60 = *v51;
      if (v59)
      {
        uint64_t v61 = v0[52];
        uint64_t v62 = v0[53];
        uint64_t v64 = v0[50];
        uint64_t v63 = v0[51];
        uint64_t v65 = v0[49];
        uint64_t v105 = v0[48];
        uint64_t v66 = sub_13E4D0();
        unint64_t v68 = v67;

        v0[93] = v66;
        v0[94] = v68;
        (*(void (**)(uint64_t, void, uint64_t))(v61 + 104))(v62, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v63);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v64, v111, v105);
        mach_absolute_time();
        sub_1406B0();
        sub_13F290();
        sub_13F2B0();
        sub_13F2A0();
        sub_13F260();
        sub_34B1C(v66, v68);
        uint64_t v69 = dword_1805A0;
        uint64_t v70 = (void *)swift_task_alloc();
        v0[95] = v70;
        *uint64_t v70 = v0;
        v70[1] = sub_EFF5C;
        unint64_t v115 = v68;
        uint64_t v116 = v100;
        __asm { BR              X9; sub_11E210 }
      }
      uint64_t v75 = v60;
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v71 = sub_141160();
      os_log_type_t v72 = sub_141480();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v73 = 0;
        _os_log_impl(&dword_0, v71, v72, "Could not get timer action from timer.", v73, 2u);
        swift_slowDealloc();
      }

      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      *uint64_t v74 = 1;
      swift_willThrow();
    }
    (*(void (**)(void, void))(v0[69] + 8))(v0[70], v0[68]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v76 = (uint64_t (*)(void))v0[1];
    return v76();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v78 = sub_141160();
    os_log_type_t v79 = sub_141480();
    BOOL v80 = os_log_type_enabled(v78, v79);
    unint64_t v81 = v0[33];
    if (v80)
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 134217984;
      if (v81 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_1417D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v83 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease();
      v0[25] = v83;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v78, v79, "[makePromptForItems] Using multi-timer snippet model for %ld timers.", v82, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v84 = v0[64];
    uint64_t v106 = v0[62];
    uint64_t v85 = v0[52];
    uint64_t v86 = v0[53];
    uint64_t v87 = v0[50];
    uint64_t v88 = v0[49];
    uint64_t v101 = v0[51];
    uint64_t v103 = v0[48];
    uint64_t v89 = v0[35];
    v0[24] = v0[33];
    uint64_t v90 = sub_5830(&qword_17C2F8);
    uint64_t v91 = type metadata accessor for SiriTimerSnippetModel(0);
    uint64_t WitnessTable = swift_getWitnessTable();
    v0[74] = sub_12E0D4((void (*)(char *, char *))sub_F3190, v89, v90, v91, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v93);
    (*(void (**)(uint64_t, void, uint64_t))(v85 + 104))(v86, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v101);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v87, v111, v103);
    mach_absolute_time();
    sub_1406B0();
    sub_140720();
    LOBYTE(v85) = sub_1406D0();
    v109(v84, v106);
    if (v85)
    {
      type metadata accessor for TimerBaseCATs_Async();
      sub_140580();
      v0[75] = sub_140470();
      uint64_t v94 = async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
      uint64_t v95 = (void *)swift_task_alloc();
      v0[76] = v95;
      *uint64_t v95 = v0;
      v95[1] = sub_EEA24;
      uint64_t v96 = v0[46];
      return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                            + v94))(v96, 0xD00000000000001DLL, 0x800000000014A490, _swiftEmptyArrayStorage);
    }
    else
    {
      type metadata accessor for TimerBaseCATsSimple();
      sub_140580();
      v0[86] = sub_140530();
      sub_5830(&qword_17F3D0);
      uint64_t v97 = swift_allocObject();
      v0[87] = v97;
      *(_OWORD *)(v97 + 16) = xmmword_142D50;
      *(void *)(v97 + 32) = 0x736D657469;
      *(void *)(v97 + 40) = 0xE500000000000000;
      *(void *)(v97 + 72) = sub_5830(&qword_17C508);
      *(void *)(v97 + 48) = v110;
      uint64_t v98 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_bridgeObjectRetain();
      uint64_t v99 = (void *)swift_task_alloc();
      v0[88] = v99;
      *uint64_t v99 = v0;
      v99[1] = sub_EF724;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                                  + v98))(0xD000000000000025, 0x800000000014A460, v97);
    }
  }
}

uint64_t sub_EEA24()
{
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_EEE70;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_EEB74;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_EEB74()
{
  uint64_t v2 = v0[45];
  uint64_t v1 = v0[46];
  uint64_t v3 = v0[44];
  uint64_t v4 = sub_13F030();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = sub_13F070();
  uint64_t v7 = *(void *)(v6 - 8);
  if (v5)
  {
    (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v0[47], v4+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)), v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  uint64_t v9 = v0[47];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, v8, 1, v6);
  swift_bridgeObjectRelease();
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6);
  uint64_t v11 = v0[47];
  if (v10 == 1)
  {
    sub_904C(v0[47], &qword_17DDA8);
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  else
  {
    uint64_t v15 = v0[41];
    uint64_t v14 = v0[42];
    uint64_t v16 = v0[40];
    sub_13F060();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
    uint64_t v12 = sub_13EE30();
    unint64_t v13 = v17;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v0[79] = v13;
  v0[78] = v12;
  uint64_t v18 = v0[73];
  type metadata accessor for TimerBaseCATsSimple();
  sub_140580();
  v0[80] = sub_140530();
  sub_5830(&qword_17F3D0);
  uint64_t v19 = swift_allocObject();
  v0[81] = v19;
  *(_OWORD *)(v19 + 16) = xmmword_142D50;
  *(void *)(v19 + 32) = 0x736D657469;
  *(void *)(v19 + 40) = 0xE500000000000000;
  *(void *)(v19 + 72) = sub_5830(&qword_17C508);
  *(void *)(v19 + 48) = v18;
  uint64_t v20 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
  swift_bridgeObjectRetain();
  uint64_t v21 = (void *)swift_task_alloc();
  v0[82] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_EF050;
  return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                              + v20))(0xD000000000000025, 0x800000000014A460, v19);
}

uint64_t sub_EEE70()
{
  uint64_t v1 = v0[57];
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[55];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[69] + 8))(v0[70], v0[68]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_EF050(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 664) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_EF52C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v4 + 672) = a1;
    uint64_t v5 = sub_EF1C8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_EF1C8()
{
  uint64_t v1 = v0[79];
  uint64_t v2 = v0[78];
  uint64_t v3 = v0[74];
  sub_13EC70();
  v0[10] = type metadata accessor for SiriTimePluginModel(0);
  v0[11] = sub_F31B0((unint64_t *)&qword_17C348, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
  *sub_187EC(v0 + 7) = v3;
  type metadata accessor for TimerSelectorModel(0);
  v0[20] = v2;
  v0[21] = v1;
  sub_13E660();
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[85] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_EF374;
  uint64_t v5 = v0[70];
  uint64_t v6 = v0[57];
  uint64_t v7 = v0[39];
  uint64_t v8 = v0[32];
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v8, v7, v5, v0 + 7, v6, 0, 0, 0);
}

uint64_t sub_EF374()
{
  uint64_t v1 = *(void *)v0 + 56;
  uint64_t v2 = *(void **)(*(void *)v0 + 672);
  uint64_t v3 = *(void *)(*(void *)v0 + 312);
  uint64_t v4 = *(void *)(*(void *)v0 + 296);
  uint64_t v5 = *(void *)(*(void *)v0 + 288);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_F3260, 0, 0);
}

uint64_t sub_EF52C()
{
  uint64_t v1 = v0[57];
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[55];
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[69] + 8))(v0[70], v0[68]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_EF724(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 712) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_EFD70;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v4 + 720) = a1;
    uint64_t v5 = sub_EF89C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_EF89C()
{
  uint64_t v1 = v0[74];
  sub_13EC70();
  v0[15] = type metadata accessor for SiriTimePluginModel(0);
  v0[16] = sub_F31B0((unint64_t *)&qword_17C348, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
  *sub_187EC(v0 + 12) = v1;
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[91] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_EFA00;
  uint64_t v3 = v0[70];
  uint64_t v4 = v0[57];
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[32];
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v6, v5, v3, v0 + 12, v4, 0, 0, 0);
}

uint64_t sub_EFA00()
{
  uint64_t v1 = *(void *)v0 + 96;
  uint64_t v2 = *(void **)(*(void *)v0 + 720);
  uint64_t v3 = *(void *)(*(void *)v0 + 312);
  uint64_t v4 = *(void *)(*(void *)v0 + 296);
  uint64_t v5 = *(void *)(*(void *)v0 + 288);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_EFBB8, 0, 0);
}

uint64_t sub_EFBB8()
{
  uint64_t v1 = v0[70];
  uint64_t v2 = v0[69];
  uint64_t v3 = v0[68];
  (*(void (**)(void, void))(v0[55] + 8))(v0[57], v0[54]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_EFD70()
{
  uint64_t v1 = v0[57];
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[55];
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[69] + 8))(v0[70], v0[68]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_EFF5C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 768) = a1;
  *(void *)(v4 + 776) = v1;
  swift_task_dealloc();
  sub_34B88(*(void *)(v3 + 744), *(void *)(v3 + 752));
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v5 = sub_F0394;
  }
  else {
    uint64_t v5 = sub_F00F8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_F00F8()
{
  uint64_t v1 = v0;
  sub_13EC70();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[98] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_F01E0;
  uint64_t v3 = v1[70];
  uint64_t v4 = v1[56];
  uint64_t v5 = v1[38];
  uint64_t v6 = v1[32];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v6, v5, v3, v4, 0);
}

uint64_t sub_F01E0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 792) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[96];
  (*(void (**)(void, void))(v2[37] + 8))(v2[38], v2[36]);

  if (v0) {
    uint64_t v4 = sub_F0734;
  }
  else {
    uint64_t v4 = sub_F0568;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_F0394()
{
  uint64_t v1 = (void *)v0[92];
  uint64_t v3 = v0[55];
  uint64_t v2 = v0[56];
  uint64_t v4 = v0[54];
  sub_34B88(v0[93], v0[94]);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(void, void))(v0[69] + 8))(v0[70], v0[68]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_F0568()
{
  uint64_t v1 = (void *)v0[92];
  sub_34B88(v0[93], v0[94]);

  uint64_t v2 = v0[70];
  uint64_t v3 = v0[69];
  uint64_t v4 = v0[68];
  (*(void (**)(void, void))(v0[55] + 8))(v0[56], v0[54]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_F0734()
{
  uint64_t v1 = (void *)v0[92];
  uint64_t v3 = v0[55];
  uint64_t v2 = v0[56];
  uint64_t v4 = v0[54];
  sub_34B88(v0[93], v0[94]);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(void, void))(v0[69] + 8))(v0[70], v0[68]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_F0908@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_13F3C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  id v11 = [*a1 identifier];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_141250();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0xE000000000000000;
  }
  sub_339AC(v10, v13, v15, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_12E5F4((uint64_t)v9, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_F0A5C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_13EFF0();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_13ECE0();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v2[13] = v6;
  v2[14] = *(void *)(v6 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v2[16] = v7;
  v2[17] = *(void *)(v7 - 8);
  v2[18] = swift_task_alloc();
  return _swift_task_switch(sub_F0C8C, 0, 0);
}

uint64_t sub_F0C8C()
{
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_33D8(v0[10], (uint64_t)qword_17F888);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "ResponseTimerDisambiguationStrategy.makeErrorResponse(error:)", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v6 = v0[13];
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];

  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v12, v8);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v13 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  int v10 = (void *)swift_task_alloc();
  v0[19] = (uint64_t)v10;
  *int v10 = v0;
  v10[1] = sub_F0E98;
  return ((uint64_t (*)(uint64_t, unint64_t, void *))v13)(0x73614272656D6974, 0xEF726F7272652365, _swiftEmptyArrayStorage);
}

uint64_t sub_F0E98(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_F126C;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_F0FC0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_F0FC0()
{
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_F1080;
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[2];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v3, v4, v2, 0);
}

uint64_t sub_F1080()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 168);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = *(void *)(*(void *)v1 + 56);
  uint64_t v6 = *(void *)(*(void *)v1 + 48);
  uint64_t v7 = *(void *)(*(void *)v1 + 40);
  uint64_t v8 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v9 = sub_F13E4;
  }
  else {
    uint64_t v9 = sub_F1328;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_F126C()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_F1328()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_F13E4()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_F14A0(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_13EFF0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_13ECE0();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_F15BC, 0, 0);
}

uint64_t sub_F15BC()
{
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_17F888);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "ResponseTimerDisambiguationStrategy.makeFlowCancelledResponse()", v4, 2u);
    swift_slowDealloc();
  }

  sub_13ECC0();
  sub_13EFE0();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_422FC;
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[2];
  return sub_544B8(v8, v6, v7);
}

uint64_t sub_F172C()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_904C(v0 + qword_17F928, &qword_17FB18);
  return v0;
}

uint64_t sub_F176C()
{
  sub_F172C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResponseTimerSimpleDisambiguationStrategy()
{
  return sub_6F024();
}

void sub_F17DC()
{
  if (!qword_17F9E0[0])
  {
    sub_13F2C0();
    unint64_t v0 = sub_1415B0();
    if (!v1) {
      atomic_store(v0, qword_17F9E0);
    }
  }
}

uint64_t sub_F1834()
{
  return swift_initClassMetadata2();
}

uint64_t sub_F1870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_17FB00 + dword_17FB00);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  uint64_t v9 = *(void *)(a4 + 80);
  *uint64_t v8 = v4;
  v8[1] = sub_F1934;
  return v11(a2, a3, v9);
}

uint64_t sub_F1934(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_F1A44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D95C;
  return sub_ED06C(a1, a2);
}

uint64_t sub_F1AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for ResponseTimerSimpleDisambiguationStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_1D95C;
  return SimpleDisambiguationPromptStrategy.makeRepromptOnEmptyParse(items:)(a1, a2, v9, a4);
}

uint64_t sub_F1BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for ResponseTimerSimpleDisambiguationStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_1D95C;
  return SimpleDisambiguationPromptStrategy.makeRepromptOnLowConfidence(items:)(a1, a2, v9, a4);
}

uint64_t sub_F1C8C(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_1D95C;
  return sub_F14A0(a1);
}

uint64_t sub_F1D24(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_1D95C;
  return sub_F0A5C(a1);
}

uint64_t sub_F1DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_13F330();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_13F380();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return _swift_task_switch(sub_F1EDC, 0, 0);
}

uint64_t sub_F1EDC()
{
  BOOL v24 = v0;
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_141170();
  sub_33D8(v5, (uint64_t)qword_17F888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = sub_141160();
  os_log_type_t v7 = sub_141480();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[11];
  uint64_t v9 = v0[12];
  uint64_t v11 = v0[10];
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_F31B0((unint64_t *)&unk_17EB68, (void (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v13 = sub_141980();
    v0[2] = sub_58C0(v13, v14, &v23);
    sub_1415C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl(&dword_0, v6, v7, "TimerDisambiguation.parseWindowActionFromInput(input:items:): %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[12], v0[10]);
  }

  sub_F24D0(v0[4], v0[9]);
  swift_retain();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[13] = v15;
  uint64_t v16 = sub_140EA0();
  *uint64_t v15 = v0;
  v15[1] = sub_F21B8;
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[5];
  uint64_t v19 = v0[6];
  uint64_t v20 = v0[3];
  uint64_t v21 = v0[4];
  return static ResponseDisambigUtils.parseWindowActionFromInput<A>(input:windowInputType:items:choiceSelector:)(v20, v21, v17, v18, &unk_17FB10, v19, v16);
}

uint64_t sub_F21B8()
{
  uint64_t v2 = *(void *)(*v1 + 72);
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *v1;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_F237C, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_F237C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_F23F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_17FB00 + dword_17FB00);
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  uint64_t v8 = *(void *)(v6 + 80);
  *os_log_type_t v7 = v3;
  v7[1] = sub_14FBC;
  return v10(a1, a2, v8);
}

uint64_t sub_F24D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_141170();
  sub_33D8(v4, (uint64_t)qword_17F888);
  uint64_t v5 = sub_141160();
  os_log_type_t v6 = sub_141450();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v7 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v8 = sub_141260();
    sub_58C0(v8, v9, &v11);
    sub_1415C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v6, "TimerDisambiguation.determineInputType(input:) with intent type: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return static TimerResponseDisambiguationUtils.determineWindowInputType(input:)(a1, a2);
}

uint64_t type metadata accessor for ResponseTimerDisambiguationStrategy()
{
  return sub_6F024();
}

void sub_F26B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_F26DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_1D95C;
  return sub_F1DBC(a1, a2, a3);
}

uint64_t sub_F2790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_159A4;
  return sub_ED3E0(a1, a2, a3);
}

uint64_t sub_F2844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for ResponseTimerDisambiguationStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_1D95C;
  return ListPromptFlowStrategy.makeRepromptOnEmptyParse(items:paginationParameters:)(a1, a2, a3, v11, a5);
}

uint64_t sub_F2924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for ResponseTimerDisambiguationStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_1D95C;
  return ListPromptFlowStrategy.makeRepromptOnLowConfidence(items:paginationParameters:)(a1, a2, a3, v11, a5);
}

uint64_t sub_F2A04(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D95C;
  return sub_F0A5C(a1);
}

uint64_t sub_F2AA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2ABC()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2AD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2AF4()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2B10()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2B2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2B48()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2B64()
{
  return swift_getWitnessTable();
}

uint64_t sub_F2B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_13F380();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_F2C44, 0, 0);
}

uint64_t sub_F2C44()
{
  uint64_t v20 = v0;
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = sub_141170();
  sub_33D8(v5, (uint64_t)qword_17F888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v6 = sub_141160();
  os_log_type_t v7 = sub_141480();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v11 = v0[6];
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_F31B0((unint64_t *)&unk_17EB68, (void (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v13 = sub_141980();
    v0[2] = sub_58C0(v13, v14, &v19);
    sub_1415C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl(&dword_0, v6, v7, "ResponseTimerSimpleDisambiguationStrategy.parseDisambiguationResult(input:items:) parsing input: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[8], v0[6]);
  }

  uint64_t v15 = (void *)swift_task_alloc();
  v0[9] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_F2EEC;
  uint64_t v16 = v0[4];
  uint64_t v17 = v0[3];
  return static TimerResponseDisambiguationUtils.parsePromptResult<A>(input:items:intentType:)(v17, v16);
}

uint64_t sub_F2EEC(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  uint64_t v5 = swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v5 = a1;
  }
  return v6(v5);
}

uint64_t sub_F3018(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_481C4;
  return sub_F23F8(a1, a2, v2);
}

uint64_t sub_F30C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17FB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_F3128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17FB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_F3190@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_F0908(a1, v2, a2);
}

uint64_t sub_F31B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_F31F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17FB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_F3260()
{
  return sub_EFBB8();
}

void *sub_F32D4(uint64_t a1)
{
  return sub_F3344(a1, &qword_17FBA8, &qword_17CFE8, &qword_17FBB0, &qword_17FBB8);
}

void *sub_F330C(uint64_t a1)
{
  return sub_F3344(a1, &qword_17EB20, &qword_17F840, &qword_17FB98, &qword_17FBA0);
}

void *sub_F3344(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  sub_5830(a2);
  uint64_t v8 = (void *)sub_13F200();
  id v9 = [v8 disambiguationItems];

  uint64_t v10 = sub_141310();
  uint64_t v11 = sub_F38FC(v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = (void *)sub_13F1F0();
    if (qword_17B228 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_141170();
    sub_33D8(v13, (uint64_t)qword_17DF78);
    id v14 = v12;
    uint64_t v15 = sub_141160();
    os_log_type_t v16 = sub_141480();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v37 = a5;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      buf = v17;
      char v35 = v11;
      id v18 = v14;
      id v19 = v14;
      uint64_t v20 = a4;
      id v21 = [v18 description];
      uint64_t v22 = sub_141250();
      unint64_t v24 = v23;

      a4 = v20;
      id v14 = v19;
      sub_58C0(v22, v24, (uint64_t *)&v39);
      sub_1415C0();

      uint64_t v11 = v35;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v15, v16, "Creating ResponseTimerDisambiguationFlowProvider with intent: %s", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v37;
      swift_slowDealloc();
    }
    else
    {
    }
    sub_140CA0();
    if (swift_dynamicCastClass())
    {
      char v27 = 1;
    }
    else
    {
      sub_140CD0();
      if (swift_dynamicCastClass())
      {
        char v27 = 2;
      }
      else
      {
        sub_140D40();
        if (swift_dynamicCastClass())
        {
          char v27 = 11;
        }
        else
        {
          sub_140BC0();
          if (swift_dynamicCastClass())
          {
            char v27 = 12;
          }
          else
          {
            sub_140C10();
            if (swift_dynamicCastClass())
            {
              char v27 = 5;
            }
            else
            {
              sub_140C40();
              if (swift_dynamicCastClass())
              {
                char v27 = 7;
              }
              else
              {
                sub_140D00();
                if (swift_dynamicCastClass())
                {
                  char v27 = 8;
                }
                else
                {
                  id v34 = v14;
                  unint64_t v28 = v14;
                  uint64_t v29 = sub_141160();
                  os_log_type_t v30 = sub_141470();
                  if (os_log_type_enabled(v29, v30))
                  {
                    uint64_t v31 = (uint8_t *)swift_slowAlloc();
                    BOOL v38 = (void *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v31 = 138412290;
                    uint64_t v39 = v28;
                    unint64_t v36 = a3;
                    uint64_t v32 = v28;
                    sub_1415C0();
                    *BOOL v38 = v28;

                    a3 = v36;
                    _os_log_impl(&dword_0, v29, v30, "Unable to recognize the alarm intent %@. Returning default verb of .unknown", v31, 0xCu);
                    sub_5830(&qword_17D478);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {

                    uint64_t v29 = v28;
                  }

                  char v27 = 13;
                  id v14 = v34;
                }
              }
            }
          }
        }
      }
    }
    sub_5830(a3);
    swift_allocObject();
    return sub_F39F8((unint64_t)v11, v14, v27, a4, a5);
  }
  else
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_B978((unint64_t *)&qword_17CCF0, (uint64_t *)&unk_17F3C0);
    swift_allocError();
    *uint64_t v25 = 1;
    return (void *)swift_willThrow();
  }
}

void *sub_F388C(uint64_t a1)
{
  return sub_F3344(a1, &qword_17F4E8, &qword_17FB68, &qword_17FB70, &qword_17FB78);
}

void *sub_F38C4(uint64_t a1)
{
  return sub_F3344(a1, &qword_17F6C8, &qword_17FB80, &qword_17FB88, &qword_17FB90);
}

void *sub_F38FC(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_141730();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_5B50(i, (uint64_t)v5);
    sub_140EA0();
    if (!swift_dynamicCast()) {
      break;
    }
    sub_141700();
    sub_141740();
    sub_141750();
    sub_141710();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

void *sub_F39F8(unint64_t a1, void *a2, char a3, uint64_t *a4, uint64_t *a5)
{
  os_log_type_t v7 = v5;
  uint64_t v10 = sub_140590();
  __chkstk_darwin(v10 - 8);
  sub_13F170();
  sub_13F010();
  swift_allocObject();
  sub_13F000();
  uint64_t v11 = sub_13E910();
  swift_allocObject();
  uint64_t v12 = sub_13E900();
  v5[8] = v11;
  v5[9] = &protocol witness table for PatternFlowProvider;
  v5[5] = v12;
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v5[10] = sub_140470();
  v5[11] = 0xD000000000000018;
  v5[12] = 0x800000000014A4B0;
  if (qword_17B2E0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_141170();
  sub_33D8(v13, (uint64_t)qword_17F888);
  swift_bridgeObjectRetain_n();
  id v14 = a2;
  uint64_t v15 = sub_141160();
  os_log_type_t v16 = sub_141480();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v34[0] = v30;
    *(_DWORD *)uint64_t v17 = 134218242;
    uint64_t v31 = a4;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1417D0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1415C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = v14;
    id v19 = objc_msgSend(v18, "description", v17 + 14, v30);
    uint64_t v20 = sub_141250();
    unint64_t v22 = v21;

    sub_58C0(v20, v22, v34);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v15, v16, "ResponseTimerDisambiguationFlowProvider.init with %ld items and intent: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a4 = v31;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v7[2] = a1;
  v7[13] = v14;
  uint64_t v23 = v7[10];
  sub_5830(a4);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v24 + qword_17F928;
  uint64_t v26 = sub_13F2C0();
  char v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  *(void *)(v24 + qword_17F930) = 0x8000000000000000;
  *(void *)(v24 + qword_17F938) = 0;
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = v23;
  *(unsigned char *)(v24 + 32) = a3;
  v7[3] = v24;
  sub_5830(a5);
  uint64_t v28 = swift_allocObject();
  v27(v28 + qword_17F928, 1, 1, v26);
  *(void *)(v28 + qword_17F930) = 0x8000000000000000;
  *(void *)(v28 + qword_17F938) = 0;
  *(void *)(v28 + 16) = a1;
  *(void *)(v28 + 24) = v23;
  *(unsigned char *)(v28 + 32) = a3;
  v7[4] = v28;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  return v7;
}

uint64_t sub_F3E88(void *a1, uint64_t a2)
{
  *a1 = sub_F3344(a2, &qword_17E550, &qword_17FB28, &qword_17FB58, &qword_17FB60);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_71374(v3);
}

unint64_t sub_F3F80()
{
  unint64_t result = qword_17FB38;
  if (!qword_17FB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FB38);
  }
  return result;
}

unint64_t sub_F3FD4()
{
  unint64_t result = qword_17FB40;
  if (!qword_17FB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FB40);
  }
  return result;
}

void *sub_F4028()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17F588);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v1;
  uint64_t v50 = &type metadata for Double;
  uint64_t v51 = &protocol witness table for Double;
  uint64_t v52 = &protocol witness table for Double;
  *(void *)&long long v49 = v5;
  sub_34AF0(&v49, &v47);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  os_log_type_t v53 = &_swiftEmptyDictionarySingleton;
  uint64_t v7 = sub_18874((uint64_t)&v47, v48);
  __chkstk_darwin(v7);
  id v9 = (double *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(double *))(v10 + 16))(v9);
  sub_47774(0x6E6F697461727564, 0xE800000000000000, isUniquelyReferenced_nonNull_native, &v53, *v9);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v47);
  uint64_t v11 = v53;
  swift_bridgeObjectRelease();
  uint64_t v12 = v1[1];
  uint64_t v51 = &protocol witness table for Int;
  uint64_t v52 = &protocol witness table for Int;
  uint64_t v50 = &type metadata for Int;
  *(void *)&long long v49 = v12;
  sub_34AF0(&v49, &v47);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  os_log_type_t v53 = v11;
  uint64_t v14 = sub_18874((uint64_t)&v47, v48);
  __chkstk_darwin(v14);
  os_log_type_t v16 = (uint64_t *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  sub_47968(*v16, 0x756F4372656D6974, 0xEA0000000000746ELL, v13, &v53);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v47);
  id v18 = v53;
  swift_bridgeObjectRelease();
  char v19 = *((unsigned char *)v1 + 16);
  uint64_t v50 = &type metadata for Bool;
  uint64_t v51 = &protocol witness table for Bool;
  uint64_t v52 = &protocol witness table for Bool;
  LOBYTE(v49) = v19;
  sub_34AF0(&v49, &v47);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v46 = v18;
  uint64_t v21 = sub_18874((uint64_t)&v47, v48);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  sub_47B64(*v23, 0xD000000000000018, 0x800000000014A530, v20, &v46);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v47);
  os_log_type_t v53 = v46;
  swift_bridgeObjectRelease();
  uint64_t v25 = type metadata accessor for TimeSuggestionExecutionParameters();
  sub_DB838((uint64_t)v1 + *(int *)(v25 + 28), (uint64_t)v4);
  uint64_t v26 = sub_1403A0();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v26) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17F588);
    sub_BCC2C(0x65736E6F70736572, 0xEC00000065646F4DLL, &v49);
    sub_904C((uint64_t)&v49, &qword_17FBC0);
    uint64_t v28 = v53;
  }
  else
  {
    uint64_t v50 = (void *)v26;
    uint64_t v29 = sub_F4840(&qword_17FBC8);
    uint64_t v51 = (void *)v29;
    uint64_t v30 = sub_F4840(&qword_17FBD0);
    uint64_t v52 = (void *)v30;
    uint64_t v31 = sub_187EC((uint64_t *)&v49);
    (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 32))(v31, v4, v26);
    sub_34AF0(&v49, &v47);
    uint64_t v32 = v53;
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v46 = v32;
    os_log_type_t v53 = (void *)0x8000000000000000;
    uint64_t v34 = sub_18874((uint64_t)&v47, v48);
    __chkstk_darwin(v34);
    unint64_t v36 = (char *)&v46 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v36);
    sub_F4884((uint64_t)v36, 0x65736E6F70736572, 0xEC00000065646F4DLL, v33, &v46, v26, v29, v30);
    _s20HandleIntentStrategyVwxx_1((uint64_t)&v47);
    uint64_t v28 = v46;
    swift_bridgeObjectRelease();
  }
  char v38 = *((unsigned char *)v1 + *(int *)(v25 + 32));
  uint64_t v50 = &type metadata for Bool;
  uint64_t v51 = &protocol witness table for Bool;
  uint64_t v52 = &protocol witness table for Bool;
  LOBYTE(v49) = v38;
  sub_34AF0(&v49, &v47);
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v46 = v28;
  uint64_t v40 = sub_18874((uint64_t)&v47, v48);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v46 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v43 + 16))(v42);
  sub_47B64(*v42, 0xD00000000000001ALL, 0x800000000014A550, v39, &v46);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v47);
  BOOL v44 = v46;
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_F47A0()
{
  sub_140B80();
  swift_allocObject();
  uint64_t result = sub_140B90();
  qword_181170 = result;
  return result;
}

uint64_t type metadata accessor for TimeSuggestionExecutionParameters()
{
  uint64_t result = qword_17FC30;
  if (!qword_17FC30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_F4840(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1403A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_F4884(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v37 = a8;
  os_log_type_t v16 = sub_187EC((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v16, a1, a6);
  uint64_t v17 = (void *)*a5;
  unint64_t v19 = sub_16F44(a2, a3);
  uint64_t v20 = v17[2];
  BOOL v21 = (v18 & 1) == 0;
  uint64_t v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v23 = v18;
  uint64_t v24 = v17[3];
  if (v24 >= v22 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v25 = (void *)*a5;
    if (v23)
    {
LABEL_8:
      uint64_t v26 = (_OWORD *)(v25[7] + 48 * v19);
      _s20HandleIntentStrategyVwxx_1((uint64_t)v26);
      return sub_34AF0(&v34, v26);
    }
    goto LABEL_11;
  }
  if (v24 >= v22 && (a4 & 1) == 0)
  {
    sub_BDC34();
    goto LABEL_7;
  }
  sub_BD1C8(v22, a4 & 1);
  unint64_t v28 = sub_16F44(a2, a3);
  if ((v23 & 1) != (v29 & 1))
  {
LABEL_14:
    uint64_t result = (_OWORD *)sub_141AE0();
    __break(1u);
    return result;
  }
  unint64_t v19 = v28;
  uint64_t v25 = (void *)*a5;
  if (v23) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v30 = sub_18874((uint64_t)&v34, v35);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_F4AC4(v19, a2, a3, (uint64_t)v32, v25, a6, a7, a8);
  _s20HandleIntentStrategyVwxx_1((uint64_t)&v34);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_F4AC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v21 = a6;
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  uint64_t v14 = sub_187EC((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v14, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v15 = (void *)(a5[6] + 16 * a1);
  *uint64_t v15 = a2;
  v15[1] = a3;
  uint64_t result = sub_34AF0(&v20, (_OWORD *)(a5[7] + 48 * a1));
  uint64_t v17 = a5[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a5[2] = v19;
  }
  return result;
}

void *sub_F4BA0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1403A0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_5830(&qword_17F588);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 32)) = *((unsigned char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t sub_F4D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_1403A0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_F4DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1403A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_5830(&qword_17F588);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_F4F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1403A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17F588);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_F50D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1403A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_5830(&qword_17F588);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_F5210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1403A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17F588);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_F53B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F53C8);
}

uint64_t sub_F53C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_5830(&qword_17F588);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_F547C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F5490);
}

uint64_t sub_F5490(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17F588);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_F5538()
{
  sub_F55E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_F55E0()
{
  if (!qword_17FC40)
  {
    sub_1403A0();
    unint64_t v0 = sub_1415B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_17FC40);
    }
  }
}

uint64_t type metadata accessor for DismissTimerCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_17FC80);
}

uint64_t sub_F5658()
{
  return swift_initClassMetadata2();
}

uint64_t sub_F5698()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unsigned int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v20 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  sub_5830(&qword_17F3D0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1434E0;
  uint64_t v11 = (uint64_t *)(v10 + 48);
  *(void *)(v10 + 32) = 0x614E656369766564;
  *(void *)(v10 + 40) = 0xEA0000000000656DLL;
  sub_8FE8(v0, (uint64_t)v9, &qword_17BE78);
  uint64_t v12 = sub_140500();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v9, 1, v12) == 1)
  {
    sub_904C((uint64_t)v9, &qword_17BE78);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
  }
  else
  {
    *(void *)(v10 + 72) = v12;
    uint64_t v15 = sub_187EC(v11);
    (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 32))(v15, v9, v12);
  }
  *(void *)(v10 + 80) = 0x7954676F6C616964;
  *(void *)(v10 + 88) = 0xEA00000000006570;
  os_log_type_t v16 = (int *)type metadata accessor for DismissTimerHandledRemoteParameters(0);
  sub_8FE8(v0 + v16[5], (uint64_t)v7, &qword_17BE78);
  if (v14(v7, 1, v12) == 1)
  {
    sub_904C((uint64_t)v7, &qword_17BE78);
    *(_OWORD *)(v10 + 96) = 0u;
    *(_OWORD *)(v10 + 112) = 0u;
  }
  else
  {
    *(void *)(v10 + 120) = v12;
    uint64_t v17 = sub_187EC((uint64_t *)(v10 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 32))(v17, v7, v12);
  }
  *(void *)(v10 + 128) = 0x537373696D736964;
  *(void *)(v10 + 136) = 0xEF796C746E656C69;
  *(unsigned char *)(v10 + 144) = *(unsigned char *)(v0 + v16[6]);
  *(void *)(v10 + 168) = &type metadata for Bool;
  *(void *)(v10 + 176) = 0x656D614E6D6F6F72;
  *(void *)(v10 + 184) = 0xE800000000000000;
  sub_8FE8(v0 + v16[7], (uint64_t)v4, &qword_17BE78);
  if (v14(v4, 1, v12) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17BE78);
    *(_OWORD *)(v10 + 192) = 0u;
    *(_OWORD *)(v10 + 208) = 0u;
  }
  else
  {
    *(void *)(v10 + 216) = v12;
    BOOL v18 = sub_187EC((uint64_t *)(v10 + 192));
    (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 32))(v18, v4, v12);
  }
  return v10;
}

uint64_t sub_F59E0()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v26 = (uint64_t)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v25 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  sub_5830(&qword_17F3D0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_145D80;
  uint64_t v13 = (uint64_t *)(v12 + 48);
  strcpy((char *)(v12 + 32), "cancelAction");
  *(unsigned char *)(v12 + 45) = 0;
  *(_WORD *)(v12 + 46) = -5120;
  sub_8FE8(v0, (uint64_t)v11, &qword_17BE78);
  uint64_t v14 = sub_140500();
  uint64_t v15 = *(void *)(v14 - 8);
  os_log_type_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v11, 1, v14) == 1)
  {
    sub_904C((uint64_t)v11, &qword_17BE78);
    *(_OWORD *)uint64_t v13 = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
  }
  else
  {
    *(void *)(v12 + 72) = v14;
    uint64_t v17 = sub_187EC(v13);
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v17, v11, v14);
  }
  strcpy((char *)(v12 + 80), "confirmAction");
  *(_WORD *)(v12 + 94) = -4864;
  BOOL v18 = (int *)type metadata accessor for DismissTimerPromptConfirmDismissParameters(0);
  sub_8FE8(v0 + v18[5], (uint64_t)v9, &qword_17BE78);
  if (v16(v9, 1, v14) == 1)
  {
    sub_904C((uint64_t)v9, &qword_17BE78);
    *(_OWORD *)(v12 + 96) = 0u;
    *(_OWORD *)(v12 + 112) = 0u;
  }
  else
  {
    *(void *)(v12 + 120) = v14;
    uint64_t v19 = sub_187EC((uint64_t *)(v12 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v19, v9, v14);
  }
  *(void *)(v12 + 128) = 0x614E656369766564;
  *(void *)(v12 + 136) = 0xEA0000000000656DLL;
  sub_8FE8(v0 + v18[6], (uint64_t)v6, &qword_17BE78);
  if (v16(v6, 1, v14) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)(v12 + 144) = 0u;
    *(_OWORD *)(v12 + 160) = 0u;
  }
  else
  {
    *(void *)(v12 + 168) = v14;
    uint64_t v20 = sub_187EC((uint64_t *)(v12 + 144));
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v20, v6, v14);
  }
  *(void *)(v12 + 176) = 0x6E756D6D6F437369;
  *(void *)(v12 + 184) = 0xEA00000000006C61;
  *(unsigned char *)(v12 + 192) = *(unsigned char *)(v0 + v18[7]);
  *(void *)(v12 + 216) = &type metadata for Bool;
  *(void *)(v12 + 224) = 0x6E6F737265507369;
  *(void *)(v12 + 232) = 0xEA00000000006C61;
  *(unsigned char *)(v12 + 240) = *(unsigned char *)(v0 + v18[8]);
  *(void *)(v12 + 264) = &type metadata for Bool;
  *(void *)(v12 + 272) = 0x656D614E6D6F6F72;
  *(void *)(v12 + 280) = 0xE800000000000000;
  uint64_t v21 = v0 + v18[9];
  uint64_t v22 = v26;
  sub_8FE8(v21, v26, &qword_17BE78);
  if (v16((char *)v22, 1, v14) == 1)
  {
    sub_904C(v22, &qword_17BE78);
    *(_OWORD *)(v12 + 288) = 0u;
    *(_OWORD *)(v12 + 304) = 0u;
  }
  else
  {
    *(void *)(v12 + 312) = v14;
    uint64_t v23 = sub_187EC((uint64_t *)(v12 + 288));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 32))(v23, v22, v14);
  }
  return v12;
}

uint64_t sub_F5E10(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 88) = a1;
  *(void *)(v4 + 40) = type metadata accessor for DismissTimerHandledRemoteParameters(0);
  *(void *)(v4 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_F5EAC, 0, 0);
}

uint64_t sub_F5EAC()
{
  uint64_t v2 = *(int **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 88);
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  v6(v1 + v2[5], 1, 1, v5);
  v6(v1 + v2[7], 1, 1, v5);
  *(unsigned char *)(v1 + v2[6]) = v4;
  v3(v1);
  uint64_t v7 = sub_F5698();
  *(void *)(v0 + 56) = v7;
  uint64_t v10 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_F603C;
  return v10(0xD00000000000001ALL, 0x800000000014A5E0, v7);
}

uint64_t sub_F603C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_F6210;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_F6188;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_F6188()
{
  sub_F692C(v0[6], type metadata accessor for DismissTimerHandledRemoteParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

uint64_t sub_F6210()
{
  sub_F692C(*(void *)(v0 + 48), type metadata accessor for DismissTimerHandledRemoteParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_F6294(char a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 16) = a3;
  *(unsigned char *)(v5 + 89) = a2;
  *(unsigned char *)(v5 + 88) = a1;
  *(void *)(v5 + 40) = type metadata accessor for DismissTimerPromptConfirmDismissParameters(0);
  *(void *)(v5 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_F6334, 0, 0);
}

uint64_t sub_F6334()
{
  uint64_t v2 = *(int **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 89);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  v7(v1 + v2[5], 1, 1, v6);
  v7(v1 + v2[6], 1, 1, v6);
  v7(v1 + v2[9], 1, 1, v6);
  *(unsigned char *)(v1 + v2[7]) = v5;
  *(unsigned char *)(v1 + v2[8]) = v4;
  v3(v1);
  uint64_t v8 = sub_F59E0();
  *(void *)(v0 + 56) = v8;
  uint64_t v11 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  void *v9 = v0;
  v9[1] = sub_F64F4;
  return v11(0xD000000000000021, 0x800000000014A5B0, v8);
}

uint64_t sub_F64F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    char v5 = sub_F66C8;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    char v5 = sub_F6640;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_F6640()
{
  sub_F692C(v0[6], type metadata accessor for DismissTimerPromptConfirmDismissParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[10];
  return v1(v2);
}

uint64_t sub_F66C8()
{
  sub_F692C(*(void *)(v0 + 48), type metadata accessor for DismissTimerPromptConfirmDismissParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_F674C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_F68E4()
{
  return type metadata accessor for DismissTimerCATPatternsExecutor(0);
}

uint64_t type metadata accessor for DismissTimerPromptConfirmDismissParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17FDD0);
}

uint64_t type metadata accessor for DismissTimerHandledRemoteParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_17FD38);
}

uint64_t sub_F692C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_F698C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_140500();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_5830(&qword_17BE78);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_5830(&qword_17BE78);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v17 = (char *)a1 + v16;
    BOOL v18 = (char *)a2 + v16;
    if (v9((uint64_t *)v18, 1, v7))
    {
      uint64_t v19 = sub_5830(&qword_17BE78);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_F6C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v7, 1, v4);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v4);
  }
  return result;
}

char *sub_F6DB4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(v16, 1, v6))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *sub_F7020(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  a1[a3[6]] = a2[a3[6]];
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

char *sub_F73AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(v16, 1, v6))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *sub_F7618(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

uint64_t sub_F79A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F79B4);
}

uint64_t sub_F79B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_F7A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F7A9C);
}

uint64_t sub_F7A9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

void sub_F7B5C()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_F7BF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_140500();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_5830(&qword_17BE78);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_5830(&qword_17BE78);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = sub_5830(&qword_17BE78);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    uint64_t v20 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[9];
    int v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    if (v9((uint64_t *)v23, 1, v7))
    {
      uint64_t v24 = sub_5830(&qword_17BE78);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v22, v23, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_F7F58(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_140500();
  uint64_t v11 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + a2[6];
  if (!v5(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v8, 1, v4);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v4);
  }
  return result;
}

char *sub_F8104(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v18] = a2[v18];
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  if (v8(v21, 1, v6))
  {
    uint64_t v22 = sub_5830(&qword_17BE78);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  return a1;
}

char *sub_F8418(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1, v6);
  int v28 = v8(v26, 1, v6);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
    goto LABEL_24;
  }
  if (v28)
  {
LABEL_24:
    uint64_t v29 = sub_5830(&qword_17BE78);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  return a1;
}

char *sub_F88AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_5830(&qword_17BE78);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v18] = a2[v18];
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  int v21 = &a2[v19];
  if (v8(v21, 1, v6))
  {
    uint64_t v22 = sub_5830(&qword_17BE78);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  return a1;
}

char *sub_F8BC0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v24] = a2[v24];
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  int v27 = &a2[v25];
  int v28 = v8(&a1[v25], 1, v6);
  int v29 = v8(v27, 1, v6);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v26, v27, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
    goto LABEL_24;
  }
  if (v29)
  {
LABEL_24:
    uint64_t v30 = sub_5830(&qword_17BE78);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v26, v27, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
  return a1;
}

uint64_t sub_F9050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F9064);
}

uint64_t sub_F9064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_F9138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F914C);
}

uint64_t sub_F914C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

void sub_F920C()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_F92A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140280();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_F9314(uint64_t a1)
{
  uint64_t v2 = sub_140280();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_F9378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_F93DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_F9440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_F94A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_F9508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F951C);
}

uint64_t sub_F951C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140280();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_F9588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F959C);
}

uint64_t sub_F959C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140280();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_F960C()
{
  uint64_t result = sub_140280();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_F9698()
{
  return sub_FCA90((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
}

uint64_t sub_F96E0()
{
  return sub_FCA90(&qword_17D480, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
}

id sub_F9728()
{
  uint64_t v0 = sub_140610();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5830(&qword_17BF08);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B338 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_FCA90((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  if (v35 == 36) {
    goto LABEL_12;
  }
  if (sub_FAF04(v35) == 6647407 && v7 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_141AA0();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
LABEL_12:
      if (qword_17B300 != -1) {
        swift_once();
      }
      sub_13F940();
      if (v36)
      {
        NSString v12 = sub_141240();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v12 = 0;
      }
      sub_140EA0();
      id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      NSString v14 = sub_141240();
      id v15 = [v13 initWithIdentifier:v12 displayString:v14];

      if (qword_17B308 != -1) {
        swift_once();
      }
      sub_13F940();
      NSString v16 = v36;
      if (v36)
      {
        sub_141280();
        swift_bridgeObjectRelease();
        id v17 = objc_allocWithZone((Class)INSpeakableString);
        NSString v18 = sub_141240();
        swift_bridgeObjectRelease();
        NSString v16 = [v17 initWithSpokenPhrase:v18];

        if (v16)
        {
          id v19 = [v16 spokenPhrase];

          sub_141250();
          NSString v16 = sub_141240();
          swift_bridgeObjectRelease();
        }
      }
      [v15 setLabel:v16];

      sub_FB2F0();
      Class isa = sub_1413D0().super.super.isa;
      [v15 setDuration:isa];

      [self defaultDuration];
      Class v21 = sub_1413D0().super.super.isa;
      [v15 setRemainingTime:v21];

      [v15 setState:0];
      if (qword_17B318 != -1) {
        swift_once();
      }
      sub_13F940();
      if ((_BYTE)v35) {
        uint64_t v22 = 0;
      }
      else {
        uint64_t v22 = 2;
      }
      [v15 setType:v22];
      sub_F9F00();
      Class v23 = sub_1413A0().super.super.isa;
      [v15 setShouldMatchAny:v23];

      return v15;
    }
  }
  sub_13FD20();
  swift_allocObject();
  sub_13FD10();
  uint64_t v9 = sub_13FA40();
  swift_release();
  if (!v9) {
    goto LABEL_12;
  }
  sub_140600();
  sub_1405F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v10 = sub_141200();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    swift_release();
    sub_904C((uint64_t)v6, &qword_17BF08);
    goto LABEL_12;
  }
  sub_140EA0();
  uint64_t v25 = (void *)sub_1411D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
  if (!v25)
  {
    swift_release();
    goto LABEL_12;
  }
  if (qword_17B2F0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_141170();
  sub_33D8(v26, (uint64_t)qword_17FE18);
  id v15 = v25;
  int v27 = sub_141160();
  os_log_type_t v28 = sub_141480();
  if (os_log_type_enabled(v27, v28))
  {
    int v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)int v29 = 136315138;
    v34[1] = v29 + 4;
    id v15 = v15;
    id v30 = [v15 description];
    uint64_t v31 = sub_141250();
    unint64_t v33 = v32;

    v34[2] = sub_58C0(v31, v33, &v35);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v27, v28, "getSiriTimer: Resolved timer %s from SRR. Using it to search timer.", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_release();
  return v15;
}

uint64_t sub_F9F00()
{
  uint64_t v1 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B330 != -1) {
    swift_once();
  }
  sub_FCA90((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  int v4 = v10;
  if (v10 == 6)
  {
    sub_303C0(v0, (uint64_t)v3);
  }
  else
  {
    sub_303C0(v0, (uint64_t)v3);
    if (v4 == 3)
    {
      char v5 = 1;
      goto LABEL_15;
    }
  }
  if (qword_17B338 != -1) {
    swift_once();
  }
  sub_13F940();
  if (v9 == 36)
  {
    char v5 = 0;
  }
  else if (sub_FAF04(v9) == 2037277037 && v6 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v5 = 1;
  }
  else
  {
    char v5 = sub_141AA0();
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_30364((uint64_t)v3);
  return v5 & 1;
}

id sub_FA0F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17CD10);
  __chkstk_darwin(v2 - 8);
  int v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v5);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_17B2F8 != -1) {
    swift_once();
  }
  sub_FCA90((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  switch(v24[15])
  {
    case 1:
      sub_303C0(v0, (uint64_t)v7);
      id v8 = [objc_allocWithZone((Class)sub_140CD0()) init];
      id v9 = sub_F9728();
      [v8 setTargetTimer:v9];

      [v8 setTargetingInfo:0];
      goto LABEL_9;
    case 2:
      goto LABEL_24;
    case 3:
      sub_140C40();
      sub_303C0(v0, (uint64_t)v7);
      return sub_10C1D0((uint64_t)v7);
    case 4:
      sub_303C0(v0, (uint64_t)v7);
      id v11 = sub_F9728();
      sub_F9F00();
      NSString v12 = (void *)sub_1413B0();
      id v13 = (objc_class *)sub_140C10();
      goto LABEL_8;
    case 5:
      sub_303C0(v0, (uint64_t)v7);
      id v11 = sub_F9728();
      sub_F9F00();
      NSString v12 = (void *)sub_1413B0();
      id v13 = (objc_class *)sub_140D00();
LABEL_8:
      id v8 = [objc_allocWithZone(v13) init];
      [v11 setShouldMatchAny:v12];
      id v14 = v11;
      [v8 setTargetTimer:v14];

LABEL_9:
      sub_30364((uint64_t)v7);
      return v8;
    case 6:
      sub_140BC0();
      sub_303C0(v0, (uint64_t)v7);
      return sub_10C284((uint64_t)v7);
    case 7:
      if (qword_17B2F0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_141170();
      sub_33D8(v15, (uint64_t)qword_17FE18);
      NSString v16 = sub_141160();
      os_log_type_t v17 = sub_141470();
      if (!os_log_type_enabled(v16, v17)) {
        goto LABEL_20;
      }
      NSString v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v18 = 0;
      id v19 = "TimerFlow doen't support nlv3 intent verb: add. Returning searchIntent anyways";
      goto LABEL_19;
    case 8:
      if (qword_17B2F0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_141170();
      sub_33D8(v20, (uint64_t)qword_17FE18);
      NSString v16 = sub_141160();
      os_log_type_t v17 = sub_141470();
      if (!os_log_type_enabled(v16, v17)) {
        goto LABEL_20;
      }
      NSString v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v18 = 0;
      id v19 = "TimerFlow doen't support nlv3 intent verb: substract. Returning searchIntent anyways";
LABEL_19:
      _os_log_impl(&dword_0, v16, v17, v19, v18, 2u);
      swift_slowDealloc();
LABEL_20:

LABEL_24:
      sub_140D40();
      sub_303C0(v1, (uint64_t)v7);
      id v10 = sub_10C468((uint64_t)v7);
      break;
    case 9:
      if (qword_17B320 != -1) {
        swift_once();
      }
      sub_13F940();
      uint64_t v21 = sub_13F7E0();
      int v22 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v4, 1, v21);
      sub_904C((uint64_t)v4, &qword_17CD10);
      if (v22 == 1) {
        goto LABEL_24;
      }
      goto LABEL_25;
    default:
LABEL_25:
      sub_140CA0();
      sub_303C0(v1, (uint64_t)v7);
      id v10 = sub_10BFF0((uint64_t)v7);
      break;
  }
  return v10;
}

uint64_t sub_FA64C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_17FE18);
  sub_33D8(v0, (uint64_t)qword_17FE18);
  return sub_140E60();
}

uint64_t sub_FA698(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FEE8, 0x72655672656D6974, 0xE900000000000062, &qword_181188);
}

uint64_t sub_FA6C4(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FEC8, 0x644972656D6974, 0xE700000000000000, &qword_181190);
}

uint64_t sub_FA6EC(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FEC8, 0x62614C72656D6974, 0xEA00000000006C65, &qword_181198);
}

uint64_t sub_FA718(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FEC8, 0x77654E72656D6974, 0xED00006C6562614CLL, &qword_1811A0);
}

uint64_t sub_FA74C(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FEE0, 0x70795472656D6974, 0xE900000000000065, &qword_1811A8);
}

uint64_t sub_FA778(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FED8, 0x6D695472656D6974, 0xE900000000000065, &qword_1811B0);
}

uint64_t sub_FA7A4(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FED8, 0x77654E72656D6974, 0xEC000000656D6954, &qword_1811B8);
}

uint64_t sub_FA7D4(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FF18, 0x74744172656D6974, 0xEF73657475626972, &qword_1811C0);
}

uint64_t sub_FA808(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FF28, 0x66655272656D6974, 0xEE0065636E657265, &qword_1811C8);
}

uint64_t sub_FA83C(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FF38, 0xD000000000000011, 0x80000000001493E0, &qword_1811D0);
}

uint64_t sub_FA868(uint64_t a1)
{
  return sub_FA894(a1, &qword_17FED8, 0x6D695472656D6974, 0xE900000000000065, &qword_1811D8);
}

uint64_t sub_FA894(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_5830(a2);
  swift_allocObject();
  uint64_t result = sub_13F720();
  *a5 = result;
  return result;
}

uint64_t sub_FA8F4()
{
  sub_5830(&qword_17FEF0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_145E80;
  if (qword_17B2F8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_181188;
  *(void *)(v0 + 56) = sub_5830(&qword_17FEE8);
  *(void *)(v0 + 64) = sub_B978(&qword_17FEF8, &qword_17FEE8);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = qword_17B300;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_181190;
  uint64_t v4 = sub_5830(&qword_17FEC8);
  *(void *)(v0 + 96) = v4;
  uint64_t v5 = sub_B978(&qword_17FF00, &qword_17FEC8);
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 72) = v3;
  uint64_t v6 = qword_17B308;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_181198;
  *(void *)(v0 + 136) = v4;
  *(void *)(v0 + 144) = v5;
  *(void *)(v0 + 112) = v7;
  uint64_t v8 = qword_17B318;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1811A8;
  *(void *)(v0 + 176) = sub_5830(&qword_17FEE0);
  *(void *)(v0 + 184) = sub_B978(&qword_17FF08, &qword_17FEE0);
  *(void *)(v0 + 152) = v9;
  uint64_t v10 = qword_17B320;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1811B0;
  uint64_t v12 = sub_5830(&qword_17FED8);
  *(void *)(v0 + 216) = v12;
  uint64_t v13 = sub_B978(&qword_17FF10, &qword_17FED8);
  *(void *)(v0 + 224) = v13;
  *(void *)(v0 + 192) = v11;
  uint64_t v14 = qword_17B328;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1811B8;
  *(void *)(v0 + 256) = v12;
  *(void *)(v0 + 264) = v13;
  *(void *)(v0 + 232) = v15;
  uint64_t v16 = qword_17B310;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1811A0;
  *(void *)(v0 + 296) = v4;
  *(void *)(v0 + 304) = v5;
  *(void *)(v0 + 272) = v17;
  uint64_t v18 = qword_17B330;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1811C0;
  *(void *)(v0 + 336) = sub_5830(&qword_17FF18);
  *(void *)(v0 + 344) = sub_B978(&qword_17FF20, &qword_17FF18);
  *(void *)(v0 + 312) = v19;
  uint64_t v20 = qword_17B338;
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_1811C8;
  *(void *)(v0 + 376) = sub_5830(&qword_17FF28);
  *(void *)(v0 + 384) = sub_B978(&qword_17FF30, &qword_17FF28);
  *(void *)(v0 + 352) = v21;
  uint64_t v22 = qword_17B340;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1811D0;
  *(void *)(v0 + 416) = sub_5830(&qword_17FF38);
  *(void *)(v0 + 424) = sub_B978(&qword_17FF40, &qword_17FF38);
  *(void *)(v0 + 392) = v23;
  sub_13F710();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_13F700();
  qword_1811E0 = result;
  return result;
}

void sub_FADEC(void *a1@<X8>)
{
  *a1 = &off_1743F0;
}

uint64_t sub_FADFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_FB27C(a1, a2, a3, (uint64_t (*)(void))sub_FDB04, (uint64_t (*)(void))sub_FDB58);
}

uint64_t sub_FAE38@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_174420;
  v7._object = v3;
  Swift::Int v5 = sub_141820(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_FAE8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_FCAD8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_FAEB4(void *a1@<X8>)
{
  *a1 = &off_174458;
}

uint64_t sub_FAEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_FB1B0(a1, a2, a3, (uint64_t (*)(void))sub_FDBAC, (uint64_t (*)(void))sub_FDC00, (uint64_t (*)(void))sub_FDC54);
}

uint64_t sub_FAF04(char a1)
{
  return *(void *)&aFirst_1[8 * a1];
}

void sub_FAF24(void *a1@<X8>)
{
  *a1 = &off_174480;
}

uint64_t sub_FAF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_FB27C(a1, a2, a3, (uint64_t (*)(void))sub_FDA5C, (uint64_t (*)(void))sub_FDAB0);
}

uint64_t sub_FAF60(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_FAF04(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_FAF04(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_141AA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_FAFEC()
{
  char v1 = *v0;
  sub_141B50();
  sub_FAF04(v1);
  sub_1412A0();
  swift_bridgeObjectRelease();
  return sub_141B70();
}

uint64_t sub_FB050()
{
  sub_FAF04(*v0);
  sub_1412A0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_FB0A4()
{
  char v1 = *v0;
  sub_141B50();
  sub_FAF04(v1);
  sub_1412A0();
  swift_bridgeObjectRelease();
  return sub_141B70();
}

uint64_t sub_FB104@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_FD90C();
  *a1 = result;
  return result;
}

uint64_t sub_FB134@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_FAF04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_FB160(void *a1@<X8>)
{
  *a1 = &off_174828;
}

uint64_t sub_FB170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_FB1B0(a1, a2, a3, (uint64_t (*)(void))sub_FD960, (uint64_t (*)(void))sub_FD9B4, (uint64_t (*)(void))sub_FDA08);
}

uint64_t sub_FB1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a4();
  uint64_t v11 = a5();
  uint64_t v12 = a6();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v10, v11, v12);
}

void sub_FB240(void *a1@<X8>)
{
  *a1 = &off_174870;
}

uint64_t sub_FB250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_FB27C(a1, a2, a3, (uint64_t (*)(void))sub_FD864, (uint64_t (*)(void))sub_FD8B8);
}

uint64_t sub_FB27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v8 = a4();
  uint64_t v9 = a5();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v8, v9);
}

double sub_FB2F0()
{
  uint64_t v0 = sub_5830(&qword_17CD18);
  __chkstk_darwin(v0 - 8);
  BOOL v80 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_5830(&qword_17FED0);
  __chkstk_darwin(v2 - 8);
  uint64_t v82 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_5830(&qword_17D4B0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v79 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v74 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v74 - v11;
  __chkstk_darwin(v10);
  uint64_t v81 = (uint64_t)&v74 - v13;
  uint64_t v14 = sub_5830(&qword_17D4A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_5830(&qword_17CD10);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_13F7E0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v83 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v84 = (char *)&v74 - v24;
  if (qword_17B320 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_FCA90((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_904C((uint64_t)v19, &qword_17CD10);
    [self defaultDuration];
    return v25;
  }
  int v27 = v84;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v84, v19, v20);
  sub_13F7A0();
  uint64_t v28 = sub_13F840();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v28) == 1)
  {
    sub_904C((uint64_t)v16, &qword_17D4A0);
    goto LABEL_26;
  }
  uint64_t v30 = sub_13F810();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v28);
  if (!v30)
  {
LABEL_26:
    uint64_t v57 = (uint64_t)v82;
    sub_13F7D0();
    uint64_t v58 = sub_13F880();
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58) == 1)
    {
      sub_904C(v57, &qword_17FED0);
      int v60 = 1;
      double v26 = 0.0;
    }
    else
    {
      *(double *)&uint64_t v61 = COERCE_DOUBLE(sub_13F870());
      int v60 = v62 & 1;
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
      double v26 = *(double *)&v61;
    }
    uint64_t v63 = v83;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v83, v27, v20);
    if (!v60) {
      goto LABEL_35;
    }
    uint64_t v64 = (uint64_t)v80;
    sub_13F7C0();
    uint64_t v65 = sub_13F860();
    uint64_t v66 = *(void *)(v65 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65) == 1)
    {
      sub_904C(v64, &qword_17CD18);
    }
    else
    {
      *(double *)&uint64_t v67 = COERCE_DOUBLE(sub_13F850());
      uint64_t v68 = v64;
      char v70 = v69;
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v65);
      if ((v70 & 1) == 0)
      {
        double v26 = *(double *)&v67;
LABEL_35:
        os_log_type_t v72 = *(void (**)(char *, uint64_t))(v21 + 8);
        v72(v63, v20);
        v72(v27, v20);
        return v26;
      }
    }
    [self defaultDuration];
    double v26 = v71;
    goto LABEL_35;
  }
  swift_retain();
  uint64_t v31 = sub_1405A0();
  swift_release();
  if (!v31)
  {
LABEL_25:
    swift_release();
    goto LABEL_26;
  }
  uint64_t v77 = v30;
  uint64_t v32 = v81;
  sub_1402A0();
  if (qword_17B2F0 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_141170();
  uint64_t v34 = sub_33D8(v33, (uint64_t)qword_17FE18);
  sub_FCA28(v32, (uint64_t)v12);
  uint64_t v78 = v34;
  uint64_t v35 = sub_141160();
  os_log_type_t v36 = sub_141480();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v76 = v31;
  if (v37)
  {
    char v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    double v85 = *(double *)&v75;
    *(_DWORD *)char v38 = 136315138;
    sub_FCA28((uint64_t)v12, (uint64_t)v9);
    uint64_t v39 = sub_141260();
    uint64_t v87 = sub_58C0(v39, v40, (uint64_t *)&v85);
    sub_1415C0();
    swift_bridgeObjectRelease();
    sub_904C((uint64_t)v12, &qword_17D4B0);
    _os_log_impl(&dword_0, v35, v36, "convertedDate: %s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v32 = v81;
    swift_slowDealloc();
  }
  else
  {
    sub_904C((uint64_t)v12, &qword_17D4B0);
  }

  uint64_t v41 = v79;
  sub_FCA28(v32, v79);
  uint64_t v42 = sub_13E500();
  uint64_t v43 = *(void *)(v42 - 8);
  int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42);
  if (v44 == 1)
  {
    sub_904C(v41, &qword_17D4B0);
    double v26 = 0.0;
  }
  else
  {
    sub_13E4E0();
    double v26 = v45;
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
  }
  uint64_t v46 = sub_141160();
  os_log_type_t v47 = sub_141480();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v87 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136315138;
    double v85 = v26;
    BOOL v86 = v44 == 1;
    sub_5830(&qword_17B580);
    uint64_t v49 = sub_141260();
    double v85 = COERCE_DOUBLE(sub_58C0(v49, v50, &v87));
    sub_1415C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v46, v47, "timeIntervalSinceNow: %s", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  int v27 = v84;
  if (v44 == 1 || v26 <= 0.0)
  {
    sub_904C(v81, &qword_17D4B0);
    swift_release();
    goto LABEL_25;
  }
  uint64_t v51 = v76;
  swift_retain_n();
  uint64_t v52 = sub_141160();
  os_log_type_t v53 = sub_141480();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    double v85 = COERCE_DOUBLE(swift_slowAlloc());
    *(_DWORD *)uint64_t v54 = 136315138;
    uint64_t v83 = (char *)(v54 + 4);
    uint64_t v87 = v51;
    sub_1402E0();
    sub_FCA90(&qword_17D4C8, (void (*)(uint64_t))&type metadata accessor for DateTime);
    uint64_t v55 = sub_141980();
    uint64_t v87 = sub_58C0(v55, v56, (uint64_t *)&v85);
    sub_1415C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v52, v53, "Resolved duration using absolute date %s", v54, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();

    sub_904C(v81, &qword_17D4B0);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v84, v20);
  }
  else
  {
    swift_release();
    swift_release_n();

    sub_904C(v81, &qword_17D4B0);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v20);
  }
  return v26;
}

double sub_FBEE4()
{
  uint64_t v0 = sub_5830(&qword_17CD18);
  __chkstk_darwin(v0 - 8);
  int v60 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_5830(&qword_17FED0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_5830(&qword_17D4B0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v59 = (char *)&v58 - v9;
  uint64_t v10 = sub_5830(&qword_17D4A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_5830(&qword_17CD10);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_13F7E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v61 = (char *)&v58 - v21;
  if (qword_17B328 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_FCA90((unint64_t *)&qword_17CD20, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);
  sub_13F940();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_904C((uint64_t)v15, &qword_17CD10);
    [self defaultDuration];
    return v22;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v61, v15, v16);
  sub_13F7A0();
  uint64_t v24 = sub_13F840();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v12, 1, v24) == 1)
  {
    double v26 = &qword_17D4A0;
    uint64_t v27 = (uint64_t)v12;
LABEL_7:
    sub_904C(v27, v26);
    goto LABEL_20;
  }
  uint64_t v28 = sub_13F810();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v24);
  if (!v28)
  {
LABEL_20:
    uint64_t v42 = v61;
    sub_13F7D0();
    uint64_t v43 = sub_13F880();
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v4, 1, v43) == 1)
    {
      sub_904C((uint64_t)v4, &qword_17FED0);
      int v45 = 1;
      double v23 = 0.0;
    }
    else
    {
      *(double *)&uint64_t v46 = COERCE_DOUBLE(sub_13F870());
      int v45 = v47 & 1;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v4, v43);
      double v23 = *(double *)&v46;
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v42, v16);
    if (!v45) {
      goto LABEL_29;
    }
    uint64_t v48 = (uint64_t)v60;
    sub_13F7C0();
    uint64_t v49 = sub_13F860();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49) == 1)
    {
      sub_904C(v48, &qword_17CD18);
    }
    else
    {
      *(double *)&uint64_t v51 = COERCE_DOUBLE(sub_13F850());
      uint64_t v52 = v48;
      char v54 = v53;
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v49);
      if ((v54 & 1) == 0)
      {
        double v23 = *(double *)&v51;
LABEL_29:
        unint64_t v56 = *(void (**)(char *, uint64_t))(v17 + 8);
        v56(v20, v16);
        v56(v42, v16);
        return v23;
      }
    }
    [self defaultDuration];
    double v23 = v55;
    goto LABEL_29;
  }
  swift_retain();
  uint64_t v29 = sub_1405A0();
  swift_release();
  if (!v29)
  {
LABEL_19:
    swift_release();
    goto LABEL_20;
  }
  uint64_t v58 = v28;
  uint64_t v30 = (uint64_t)v59;
  sub_1402A0();
  sub_FCA28(v30, (uint64_t)v8);
  uint64_t v31 = sub_13E500();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
  {
    swift_release();
    swift_release();
    sub_904C((uint64_t)v8, &qword_17D4B0);
    uint64_t v27 = v30;
    double v26 = &qword_17D4B0;
    goto LABEL_7;
  }
  sub_13E4E0();
  double v23 = v33;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v31);
  if (v23 <= 0.0)
  {
    sub_904C(v30, &qword_17D4B0);
    swift_release();
    goto LABEL_19;
  }
  if (qword_17B2F0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_141170();
  sub_33D8(v34, (uint64_t)qword_17FE18);
  swift_retain_n();
  uint64_t v35 = sub_141160();
  os_log_type_t v36 = sub_141480();
  if (os_log_type_enabled(v35, v36))
  {
    BOOL v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v62 = v29;
    uint64_t v63 = v38;
    *(_DWORD *)BOOL v37 = 136315138;
    int v60 = (char *)(v37 + 4);
    sub_1402E0();
    sub_FCA90(&qword_17D4C8, (void (*)(uint64_t))&type metadata accessor for DateTime);
    uint64_t v39 = sub_141980();
    uint64_t v62 = sub_58C0(v39, v40, &v63);
    sub_1415C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v35, v36, "Resolved toDuration using absolute date %s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();

    uint64_t v41 = (uint64_t)v59;
  }
  else
  {
    swift_release();
    swift_release_n();

    uint64_t v41 = v30;
  }
  sub_904C(v41, &qword_17D4B0);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v61, v16);
  return v23;
}

uint64_t sub_FC810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_140280();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_FC878()
{
  if (qword_17B350 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_FC8D4(uint64_t a1)
{
  uint64_t v2 = sub_FCA90(&qword_17FEC0, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);

  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_FC950(uint64_t a1)
{
  uint64_t v2 = sub_FCA90(&qword_17FEC0, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);

  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_FC9BC(uint64_t a1)
{
  uint64_t v2 = sub_FCA90(&qword_17FEC0, (void (*)(uint64_t))type metadata accessor for TimerNLv3Intent);

  return NLIntentWrapper.description.getter(a1, v2);
}

uint64_t sub_FCA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17D4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_FCA90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_FCAD8()
{
  return 0x7065656C73;
}

uint64_t getEnumTagSinglePayload for TimerNLv3Intent.TimerConfirmation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimerNLv3Intent.TimerConfirmation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFCC48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNLv3Intent.TimerConfirmation()
{
  return &type metadata for TimerNLv3Intent.TimerConfirmation;
}

uint64_t getEnumTagSinglePayload for TimerNLv3Intent.TimerReference(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDD) {
    goto LABEL_17;
  }
  if (a2 + 35 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 35) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 35;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x24;
  int v8 = v6 - 36;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimerNLv3Intent.TimerReference(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 35 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 35) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDC)
  {
    unsigned int v6 = ((a2 - 221) >> 8) + 1;
    *uint64_t result = a2 + 35;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFCDDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 35;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNLv3Intent.TimerReference()
{
  return &type metadata for TimerNLv3Intent.TimerReference;
}

uint64_t getEnumTagSinglePayload for TimerNLv3Intent.TimerAttributes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimerNLv3Intent.TimerAttributes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFCF70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNLv3Intent.TimerAttributes()
{
  return &type metadata for TimerNLv3Intent.TimerAttributes;
}

uint64_t getEnumTagSinglePayload for TimerNLv3Intent.Verb(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimerNLv3Intent.Verb(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xFD104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNLv3Intent.Verb()
{
  return &type metadata for TimerNLv3Intent.Verb;
}

unsigned char *storeEnumTagSinglePayload for TimerNLv3Intent.TimerType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xFD1D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimerNLv3Intent.TimerType()
{
  return &type metadata for TimerNLv3Intent.TimerType;
}

unint64_t sub_FD214()
{
  unint64_t result = qword_17FF48;
  if (!qword_17FF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FF48);
  }
  return result;
}

uint64_t sub_FD268()
{
  return sub_B978(&qword_17FF50, &qword_17FF58);
}

unint64_t sub_FD2A8()
{
  unint64_t result = qword_17FF60;
  if (!qword_17FF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FF60);
  }
  return result;
}

unint64_t sub_FD300()
{
  unint64_t result = qword_17FF68;
  if (!qword_17FF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FF68);
  }
  return result;
}

unint64_t sub_FD358()
{
  unint64_t result = qword_17FF70;
  if (!qword_17FF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FF70);
  }
  return result;
}

uint64_t sub_FD3AC()
{
  return sub_B978(&qword_17FF78, &qword_17FF80);
}

unint64_t sub_FD3EC()
{
  unint64_t result = qword_17FF88;
  if (!qword_17FF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FF88);
  }
  return result;
}

unint64_t sub_FD444()
{
  unint64_t result = qword_17FF90;
  if (!qword_17FF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FF90);
  }
  return result;
}

unint64_t sub_FD49C()
{
  unint64_t result = qword_17FF98;
  if (!qword_17FF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FF98);
  }
  return result;
}

uint64_t sub_FD4F0()
{
  return sub_B978(&qword_17FFA0, &qword_17FFA8);
}

unint64_t sub_FD530()
{
  unint64_t result = qword_17FFB0;
  if (!qword_17FFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FFB0);
  }
  return result;
}

unint64_t sub_FD588()
{
  unint64_t result = qword_17FFB8;
  if (!qword_17FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FFB8);
  }
  return result;
}

unint64_t sub_FD5E0()
{
  unint64_t result = qword_17FFC0;
  if (!qword_17FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FFC0);
  }
  return result;
}

uint64_t sub_FD634()
{
  return sub_B978(&qword_17FFC8, &qword_17FFD0);
}

unint64_t sub_FD674()
{
  unint64_t result = qword_17FFD8;
  if (!qword_17FFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FFD8);
  }
  return result;
}

unint64_t sub_FD6CC()
{
  unint64_t result = qword_17FFE0;
  if (!qword_17FFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FFE0);
  }
  return result;
}

unint64_t sub_FD724()
{
  unint64_t result = qword_17FFE8;
  if (!qword_17FFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17FFE8);
  }
  return result;
}

uint64_t sub_FD778()
{
  return sub_B978(&qword_17FFF0, &qword_17FFF8);
}

unint64_t sub_FD7B8()
{
  unint64_t result = qword_180000;
  if (!qword_180000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180000);
  }
  return result;
}

unint64_t sub_FD810()
{
  unint64_t result = qword_180008;
  if (!qword_180008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180008);
  }
  return result;
}

unint64_t sub_FD864()
{
  unint64_t result = qword_180010;
  if (!qword_180010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180010);
  }
  return result;
}

unint64_t sub_FD8B8()
{
  unint64_t result = qword_180018;
  if (!qword_180018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180018);
  }
  return result;
}

uint64_t sub_FD90C()
{
  unint64_t v0 = sub_141AC0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x24) {
    return 36;
  }
  else {
    return v0;
  }
}

unint64_t sub_FD960()
{
  unint64_t result = qword_180020;
  if (!qword_180020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180020);
  }
  return result;
}

unint64_t sub_FD9B4()
{
  unint64_t result = qword_180028;
  if (!qword_180028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180028);
  }
  return result;
}

unint64_t sub_FDA08()
{
  unint64_t result = qword_180030;
  if (!qword_180030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180030);
  }
  return result;
}

unint64_t sub_FDA5C()
{
  unint64_t result = qword_180038;
  if (!qword_180038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180038);
  }
  return result;
}

unint64_t sub_FDAB0()
{
  unint64_t result = qword_180040;
  if (!qword_180040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180040);
  }
  return result;
}

unint64_t sub_FDB04()
{
  unint64_t result = qword_180048;
  if (!qword_180048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180048);
  }
  return result;
}

unint64_t sub_FDB58()
{
  unint64_t result = qword_180050;
  if (!qword_180050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180050);
  }
  return result;
}

unint64_t sub_FDBAC()
{
  unint64_t result = qword_180058;
  if (!qword_180058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180058);
  }
  return result;
}

unint64_t sub_FDC00()
{
  unint64_t result = qword_180060;
  if (!qword_180060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180060);
  }
  return result;
}

unint64_t sub_FDC54()
{
  unint64_t result = qword_180068;
  if (!qword_180068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180068);
  }
  return result;
}

ValueMetadata *_s18NeedsValueStrategyVMa()
{
  return &_s18NeedsValueStrategyVN;
}

uint64_t sub_FDCC0()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180070);
  sub_33D8(v0, (uint64_t)qword_180070);
  return sub_140E60();
}

uint64_t sub_FDD0C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B358 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_180070);
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "SetTimerAttribute.NeedsValueStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = enum case for DecideAction.PromptExpectation.slot(_:);
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_61EF0(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_FDF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  uint64_t v5 = sub_13F540();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v6 = sub_13F500();
  v4[19] = v6;
  v4[20] = *(void *)(v6 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v7 = sub_13F460();
  v4[22] = v7;
  v4[23] = *(void *)(v7 - 8);
  v4[24] = swift_task_alloc();
  sub_5830(&qword_17D450);
  v4[25] = swift_task_alloc();
  uint64_t v8 = sub_13F430();
  v4[26] = v8;
  v4[27] = *(void *)(v8 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  uint64_t v9 = sub_13F410();
  v4[30] = v9;
  v4[31] = *(void *)(v9 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v10 = sub_13F380();
  v4[33] = v10;
  v4[34] = *(void *)(v10 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = type metadata accessor for TimerNLv3Intent();
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  uint64_t v11 = sub_140280();
  v4[43] = v11;
  v4[44] = *(void *)(v11 - 8);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  uint64_t v12 = sub_13F3E0();
  v4[47] = v12;
  v4[48] = *(void *)(v12 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  return _swift_task_switch(sub_FE3D4, 0, 0);
}

uint64_t sub_FE3D4()
{
  uint64_t v206 = v0;
  uint64_t v1 = v0;
  uint64_t v199 = v0 + 10;
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[48];
  uint64_t v4 = v1[47];
  sub_5830(&qword_17F4E8);
  uint64_t v5 = (void *)sub_13F1F0();
  sub_13F370();
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4);
  char v201 = v5;
  os_log_type_t v203 = v1;
  if (v6 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v7 = v1[50];
    uint64_t v8 = v1[46];
    uint64_t v10 = v1[43];
    uint64_t v9 = v1[44];
    uint64_t v11 = v1[42];
    (*(void (**)(uint64_t, void))(v1[48] + 96))(v7, v1[47]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v11, v8, v10);
    id v12 = sub_FFF5C(v11, v5);
    if (qword_17B358 != -1) {
      swift_once();
    }
    uint64_t v13 = v1[41];
    uint64_t v14 = v1[42];
    uint64_t v15 = sub_141170();
    sub_33D8(v15, (uint64_t)qword_180070);
    sub_303C0(v14, v13);
    uint64_t v16 = sub_141160();
    os_log_type_t v17 = sub_141480();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v1[41];
    if (v18)
    {
      id v195 = v12;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v204 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_30424(&qword_17D480);
      uint64_t v21 = sub_141980();
      v1[11] = sub_58C0(v21, v22, (uint64_t *)&v204);
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364(v19);
      _os_log_impl(&dword_0, v16, v17, "NLIntent:%s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v12 = v195;
      swift_slowDealloc();
    }
    else
    {
      sub_30364(v1[41]);
    }

    id v39 = v12;
    unint64_t v40 = sub_141160();
    os_log_type_t v41 = sub_141480();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v204 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      id v43 = v39;
      id v44 = [v43 description];
      uint64_t v45 = sub_141250();
      unint64_t v47 = v46;

      *uint64_t v199 = sub_58C0(v45, v47, (uint64_t *)&v204);
      sub_1415C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v40, v41, "UpdatedSKIntent:%s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v61 = v203[46];
    uint64_t v63 = v203[43];
    uint64_t v62 = v203[44];
    uint64_t v64 = v203[42];
    uint64_t v65 = v203[12];
    long long v204 = 0u;
    long long v205 = 0u;
    id v66 = v39;
    sub_141560();

    sub_140BC0();
    sub_13F080();

    sub_30364(v64);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
LABEL_35:
    uint64_t v102 = sub_5830(&qword_1800D0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v65, 0, 1, v102);
    goto LABEL_36;
  }
  if (v6 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v196 = v1 + 8;
    uint64_t v23 = v1[50];
    uint64_t v25 = v1[44];
    uint64_t v24 = v1[45];
    uint64_t v26 = v1[43];
    uint64_t v27 = v1[40];
    (*(void (**)(uint64_t, void))(v1[48] + 96))(v23, v1[47]);
    sub_5830((uint64_t *)&unk_17CD00);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v23, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v27, v24, v26);
    id v28 = sub_FFF5C(v27, v5);
    if (qword_17B358 != -1) {
      swift_once();
    }
    uint64_t v29 = v1[39];
    uint64_t v30 = v1[40];
    uint64_t v31 = sub_141170();
    sub_33D8(v31, (uint64_t)qword_180070);
    sub_303C0(v30, v29);
    uint64_t v32 = sub_141160();
    os_log_type_t v33 = sub_141480();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = v1[39];
    if (v34)
    {
      os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v204 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v36 = 136315138;
      sub_30424(&qword_17D480);
      uint64_t v37 = sub_141980();
      v1[9] = sub_58C0(v37, v38, (uint64_t *)&v204);
      sub_1415C0();
      swift_bridgeObjectRelease();
      sub_30364(v35);
      _os_log_impl(&dword_0, v32, v33, "NLIntent:%s", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_30364(v1[39]);
    }

    id v67 = v28;
    uint64_t v68 = sub_141160();
    os_log_type_t v69 = sub_141480();
    if (os_log_type_enabled(v68, v69))
    {
      char v70 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v204 = swift_slowAlloc();
      *(_DWORD *)char v70 = 136315138;
      id v71 = v67;
      id v72 = [v71 description];
      uint64_t v73 = sub_141250();
      unint64_t v75 = v74;

      *uint64_t v196 = sub_58C0(v73, v75, (uint64_t *)&v204);
      sub_1415C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v68, v69, "UpdatedSKIntent:%s", v70, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v97 = v203[44];
    uint64_t v98 = v203[45];
    uint64_t v99 = v203[43];
    uint64_t v100 = v203[40];
    uint64_t v65 = v203[12];
    long long v204 = 0u;
    long long v205 = 0u;
    id v101 = v67;
    sub_141560();

    sub_140BC0();
    sub_13F080();

    sub_30364(v100);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v98, v99);
    goto LABEL_35;
  }
  if (v6 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v6 != enum case for Parse.uso(_:))
    {
      if (qword_17B358 != -1) {
        swift_once();
      }
      uint64_t v106 = v1[34];
      uint64_t v105 = v1[35];
      uint64_t v107 = v1[33];
      uint64_t v108 = v1[13];
      uint64_t v109 = sub_141170();
      sub_33D8(v109, (uint64_t)qword_180070);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v105, v108, v107);
      unint64_t v110 = sub_141160();
      os_log_type_t v111 = sub_141470();
      if (os_log_type_enabled(v110, v111))
      {
        uint64_t v112 = v1[35];
        uint64_t v113 = v1[34];
        uint64_t v197 = v1[33];
        uint64_t v114 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v204 = swift_slowAlloc();
        *(_DWORD *)uint64_t v114 = 136315138;
        sub_13F370();
        uint64_t v115 = sub_141260();
        v1[2] = sub_58C0(v115, v116, (uint64_t *)&v204);
        sub_1415C0();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v197);
        _os_log_impl(&dword_0, v110, v111, "Received an unsupported input: %s", v114, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v1[34] + 8))(v1[35], v1[33]);
      }

      uint64_t v117 = v1[50];
      uint64_t v119 = v1[47];
      uint64_t v118 = v1[48];
      goto LABEL_62;
    }
    uint64_t v76 = v1[50];
    uint64_t v78 = v1[31];
    uint64_t v77 = v1[32];
    uint64_t v79 = v1[30];
    (*(void (**)(uint64_t, void))(v1[48] + 96))(v76, v1[47]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v77, v76, v79);
    if (qword_17B358 != -1) {
      swift_once();
    }
    uint64_t v80 = sub_141170();
    sub_33D8(v80, (uint64_t)qword_180070);
    uint64_t v81 = sub_141160();
    os_log_type_t v82 = sub_141480();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl(&dword_0, v81, v82, "Received an USO parse in CreateTimer.parseResponseValue().", v83, 2u);
      swift_slowDealloc();
    }
    uint64_t v85 = v1[23];
    uint64_t v84 = v1[24];
    uint64_t v86 = v1[22];

    sub_13F400();
    uint64_t v87 = sub_13F450();
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v86);
    uint64_t v88 = *(void *)(v87 + 16);
    if (v88)
    {
      uint64_t v89 = v5;
      uint64_t v90 = v1[20];
      uint64_t v93 = *(void (**)(void, unint64_t, void))(v90 + 16);
      uint64_t v91 = v90 + 16;
      uint64_t v92 = v93;
      unint64_t v94 = v87 + ((*(unsigned __int8 *)(v91 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 64));
      uint64_t v95 = *(void *)(v91 + 56);
      swift_bridgeObjectRetain();
      while (1)
      {
        v92(v1[21], v94, v1[19]);
        if (sub_13F470()) {
          break;
        }
        (*(void (**)(void, void))(v91 - 8))(v1[21], v1[19]);
        v94 += v95;
        if (!--v88)
        {
          swift_bridgeObjectRelease();
          uint64_t v96 = 1;
          goto LABEL_54;
        }
      }
      uint64_t v133 = v1[25];
      uint64_t v135 = v1[20];
      uint64_t v134 = v1[21];
      uint64_t v136 = v1[19];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 32))(v133, v134, v136);
      uint64_t v96 = 0;
LABEL_54:
      uint64_t v5 = v89;
    }
    else
    {
      uint64_t v96 = 1;
    }
    uint64_t v137 = v1[25];
    uint64_t v138 = v1[19];
    uint64_t v139 = v1[20];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56))(v137, v96, 1, v138);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138) == 1)
    {
      sub_904C(v1[25], &qword_17D450);
      (*(void (**)(void, void, void))(v1[34] + 16))(v1[36], v1[13], v1[33]);
      uint64_t v149 = sub_141160();
      os_log_type_t v150 = sub_141470();
      if (os_log_type_enabled(v149, v150))
      {
        uint64_t v152 = v1[36];
        uint64_t v153 = v1[34];
        uint64_t v198 = v1[33];
        uint64_t v154 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v204 = swift_slowAlloc();
        *(_DWORD *)uint64_t v154 = 136315138;
        sub_13F370();
        uint64_t v155 = sub_141260();
        v1[3] = sub_58C0(v155, v156, (uint64_t *)&v204);
        sub_1415C0();
        uint64_t v5 = v201;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v198);
        _os_log_impl(&dword_0, v149, v150, "Failed to parse userParse from parse: %s.", v154, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v1[34] + 8))(v1[36], v1[33]);
      }

      uint64_t v118 = v1[31];
      uint64_t v117 = v1[32];
      uint64_t v119 = v1[30];
LABEL_62:
      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      *uint64_t v157 = 0;
      swift_willThrow();

      goto LABEL_63;
    }
    uint64_t v141 = v1[28];
    uint64_t v140 = v1[29];
    uint64_t v142 = v1[27];
    uint64_t v193 = v1[26];
    uint64_t v143 = v1[25];
    uint64_t v145 = v1[19];
    uint64_t v144 = v1[20];
    uint64_t v146 = v1[17];
    uint64_t v147 = v1[18];
    uint64_t v148 = v1[16];
    sub_13F4C0();
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v143, v145);
    sub_13F510();
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v147, v148);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 32))(v140, v141, v193);
    sub_13F5C0();
    unint64_t v158 = sub_13F900();
    unint64_t v159 = v158;
    if (v158 >> 62)
    {
      if (sub_1417D0()) {
        goto LABEL_66;
      }
    }
    else if (*(void *)((char *)&dword_10 + (v158 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_66:
      if ((v159 & 0xC000000000000001) != 0)
      {
        sub_1416A0();
      }
      else
      {
        if (!*(void *)((char *)&dword_10 + (v159 & 0xFFFFFFFFFFFFFF8))) {
          __break(1u);
        }
        swift_retain();
      }
      uint64_t v160 = v1 + 5;
      swift_bridgeObjectRelease();
      sub_140BC0();
      id v161 = v201;
      uint64_t v162 = swift_retain();
      id v163 = sub_10B720(v162, v201);
      uint64_t v200 = v161;
      if (v163)
      {
        id v164 = v163;
        uint64_t v165 = sub_141160();
        os_log_type_t v166 = sub_141480();
        if (os_log_type_enabled(v165, v166))
        {
          uint64_t v167 = (uint8_t *)swift_slowAlloc();
          uint64_t v202 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v167 = 138412290;
          id v168 = [v164 targetTimer];
          if (v168) {
            v203[6] = v168;
          }
          else {
            *uint64_t v160 = 0;
          }
          sub_1415C0();
          *uint64_t v202 = v168;

          _os_log_impl(&dword_0, v165, v166, "[SetTimerAttribute.NeedsValueStrategy.parseValueResponse] Using target timer: %@", v167, 0xCu);
          sub_5830(&qword_17D478);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v179 = v203[31];
        uint64_t v178 = v203[32];
        uint64_t v181 = v203[29];
        uint64_t v180 = v203[30];
        uint64_t v183 = v203[26];
        uint64_t v182 = v203[27];
        uint64_t v184 = v203[12];
        long long v204 = 0u;
        long long v205 = 0u;
        sub_13F080();
        swift_release();

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v181, v183);
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v178, v180);
        uint64_t v185 = sub_5830(&qword_1800D0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v185 - 8) + 56))(v184, 0, 1, v185);
        goto LABEL_36;
      }
      swift_retain_n();
      v169 = sub_141160();
      os_log_type_t v170 = sub_141470();
      if (os_log_type_enabled(v169, v170))
      {
        uint64_t v171 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v204 = swift_slowAlloc();
        *(_DWORD *)uint64_t v171 = 136315138;
        uint64_t v172 = sub_140240();
        v1[4] = sub_58C0(v172, v173, (uint64_t *)&v204);
        sub_1415C0();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_0, v169, v170, "Could not create SetTimerAttributeIntent from given task: %s", v171, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }

      uint64_t v118 = v1[31];
      uint64_t v117 = v1[32];
      uint64_t v174 = v1[29];
      uint64_t v119 = v1[30];
      uint64_t v175 = v1[27];
      uint64_t v176 = v203[26];
      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      unsigned char *v177 = 0;
      swift_willThrow();
      swift_release();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v174, v176);
LABEL_63:
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v117, v119);
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    uint64_t v186 = sub_141160();
    os_log_type_t v187 = sub_141470();
    if (os_log_type_enabled(v186, v187))
    {
      uint64_t v188 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v188 = 0;
      _os_log_impl(&dword_0, v186, v187, "USO graph has no tasks.", v188, 2u);
      swift_slowDealloc();
    }
    uint64_t v118 = v1[31];
    uint64_t v117 = v1[32];
    uint64_t v189 = v1[29];
    uint64_t v119 = v1[30];
    uint64_t v190 = v1[26];
    uint64_t v191 = v1[27];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v192 = 0;
    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v189, v190);
    goto LABEL_63;
  }
  (*(void (**)(void, void))(v1[48] + 96))(v1[50], v1[47]);
  swift_getObjectType();
  if (SIRINLUUserDialogAct.firstUsoTask.getter())
  {
    uint64_t v48 = (objc_class *)sub_140BC0();
    uint64_t v49 = v5;
    id v50 = v5;
    uint64_t v51 = swift_retain();
    id v52 = sub_10B720(v51, v49);
    if (v52)
    {
      char v53 = v52;
      uint64_t v54 = v203[12];
      id v55 = [v50 targetTimer];
      id v56 = [v53 toDuration];
      id v57 = [v53 toLabel];
      id v58 = [objc_allocWithZone(v48) init];
      [v58 setTargetTimer:v55];
      [v58 setToDuration:v56];
      [v58 setToLabel:v57];

      long long v204 = 0u;
      long long v205 = 0u;
      id v59 = v58;
      sub_141560();

      sub_13F080();
      swift_release();

      swift_unknownObjectRelease();
      uint64_t v60 = sub_5830(&qword_1800D0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v54, 0, 1, v60);
      goto LABEL_36;
    }
    swift_release();
  }
  if (qword_17B358 != -1) {
    swift_once();
  }
  uint64_t v120 = v1[37];
  uint64_t v121 = v1[33];
  uint64_t v122 = v1[34];
  uint64_t v123 = v1[13];
  uint64_t v124 = sub_141170();
  sub_33D8(v124, (uint64_t)qword_180070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v120, v123, v121);
  uint64_t v125 = sub_141160();
  os_log_type_t v126 = sub_141470();
  if (os_log_type_enabled(v125, v126))
  {
    uint64_t v127 = v1[37];
    uint64_t v128 = v1[34];
    uint64_t v194 = v1[33];
    uint64_t v129 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v204 = swift_slowAlloc();
    *(_DWORD *)uint64_t v129 = 136315138;
    sub_13F370();
    uint64_t v130 = sub_141260();
    v203[7] = sub_58C0(v130, v131, (uint64_t *)&v204);
    sub_1415C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v127, v194);
    _os_log_impl(&dword_0, v125, v126, "Failed to parse userDialogAct into SetTimerAttributeIntent: %s", v129, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v1[34] + 8))(v1[37], v1[33]);
  }

  sub_5830((uint64_t *)&unk_17F3C0);
  sub_2F710();
  swift_allocError();
  *uint64_t v132 = 0;
  swift_willThrow();

  swift_unknownObjectRelease();
LABEL_36:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v103 = (uint64_t (*)(void))v203[1];
  return v103();
}

id sub_FFF5C(uint64_t a1, void *a2)
{
  if (qword_17B358 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_141170();
  sub_33D8(v3, (uint64_t)qword_180070);
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141480();
  if (os_log_type_enabled(v4, v5))
  {
    int v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v6 = 0;
    _os_log_impl(&dword_0, v4, v5, "correct setTimerAttributeIntent from nlIntent by supplementing timerId", v6, 2u);
    swift_slowDealloc();
  }

  id v7 = [a2 targetTimer];
  if (v7)
  {
    uint64_t v8 = v7;
    if (qword_17B300 != -1) {
      swift_once();
    }
    type metadata accessor for TimerNLv3Intent();
    sub_30424((unint64_t *)&qword_17CD20);
    sub_13F940();
    if (v28)
    {
      NSString v9 = sub_141240();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v9 = 0;
    }
    sub_140EA0();
    id v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    NSString v20 = sub_141240();
    id v21 = [v19 initWithIdentifier:v9 displayString:v20];

    id v22 = [v8 label];
    [v21 setLabel:v22];

    id v23 = [v8 duration];
    [v21 setDuration:v23];

    id v24 = [v8 remainingTime];
    [v21 setRemainingTime:v24];

    objc_msgSend(v21, "setState:", objc_msgSend(v8, "state"));
    objc_msgSend(v21, "setType:", objc_msgSend(v8, "type"));
    id v17 = v21;
    sub_FBEE4();
    v13.super.super.Class isa = sub_1413D0().super.super.isa;
    if (qword_17B310 != -1) {
      swift_once();
    }
    sub_13F940();
    id v14 = v28;
    if (v28)
    {
      sub_141280();
      swift_bridgeObjectRelease();
      id v25 = objc_allocWithZone((Class)INSpeakableString);
      NSString v26 = sub_141240();
      swift_bridgeObjectRelease();
      id v14 = [v25 initWithSpokenPhrase:v26];
    }
    id v18 = [objc_allocWithZone((Class)sub_140BC0()) init];
    [v18 setTargetTimer:v17];
    [v18 setToDuration:v13.super.super.isa];
    [v18 setToLabel:v14];
  }
  else
  {
    uint64_t v10 = sub_141160();
    os_log_type_t v11 = sub_141470();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "SetTimerAttribute+NeedsValueStrategy.correctedIntentFrom(): Could not get targetTimer from intent; returning Set"
        "TimerAttributeIntent without targetTimer.",
        v12,
        2u);
      swift_slowDealloc();
    }

    sub_FBEE4();
    v13.super.super.Class isa = sub_1413D0().super.super.isa;
    if (qword_17B310 != -1) {
      swift_once();
    }
    type metadata accessor for TimerNLv3Intent();
    sub_30424((unint64_t *)&qword_17CD20);
    sub_13F940();
    id v14 = v28;
    if (v28)
    {
      sub_141280();
      swift_bridgeObjectRelease();
      id v15 = objc_allocWithZone((Class)INSpeakableString);
      NSString v16 = sub_141240();
      swift_bridgeObjectRelease();
      id v14 = [v15 initWithSpokenPhrase:v16];
    }
    id v17 = [objc_allocWithZone((Class)sub_140BC0()) init];
    [v17 setTargetTimer:0];
    [v17 setToDuration:v13.super.super.isa];
    [v17 setToLabel:v14];
    id v18 = v17;
  }

  return v18;
}

uint64_t sub_100548(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_13F040();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_141170();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_140680();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v6 = sub_1406A0();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v7 = sub_140730();
  v2[19] = v7;
  v2[20] = *(void *)(v7 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v2[22] = v8;
  v2[23] = *(void *)(v8 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v9 = sub_13ECE0();
  v2[25] = v9;
  v2[26] = *(void *)(v9 - 8);
  v2[27] = swift_task_alloc();
  uint64_t v10 = sub_13F0B0();
  v2[28] = v10;
  v2[29] = *(void *)(v10 - 8);
  v2[30] = swift_task_alloc();
  return _swift_task_switch(sub_1008A8, 0, 0);
}

uint64_t sub_1008A8()
{
  uint64_t v62 = v0;
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[28];
  sub_5830(&qword_17F4E8);
  sub_13F210();
  uint64_t v4 = sub_13F0A0();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_13EC70();
  swift_bridgeObjectRetain();
  v7._rawValue = &off_174898;
  v64._countAndFlagsBits = v4;
  v64._object = v6;
  Swift::Int v8 = sub_141820(v7, v64);
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (v8 != 1)
    {
      if (qword_17B358 != -1) {
        swift_once();
      }
      sub_33D8(v0[10], (uint64_t)qword_180070);
      swift_bridgeObjectRetain();
      BOOL v34 = sub_141160();
      os_log_type_t v35 = sub_141470();
      if (os_log_type_enabled(v34, v35))
      {
        os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v36 = 136315138;
        swift_bridgeObjectRetain();
        v0[2] = sub_58C0(v4, (unint64_t)v6, &v61);
        sub_1415C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v34, v35, "NeedsValueStrategy error: Unexpected parameter name: %s", v36, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v44 = v0[26];
      uint64_t v43 = v0[27];
      uint64_t v45 = v0[25];
      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      *unint64_t v46 = 4;
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
LABEL_41:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v58 = (uint64_t (*)(void))v0[1];
      return v58();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_141AA0();
    swift_bridgeObjectRelease();
    char v9 = 0;
    if ((v10 & 1) == 0) {
      goto LABEL_6;
    }
  }
  uint64_t v12 = v0[20];
  uint64_t v11 = v0[21];
  uint64_t v13 = v0[19];
  sub_140720();
  BOOL v14 = sub_140710();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  if (!v14)
  {
    uint64_t v37 = v0[24];
    if (v9)
    {
      sub_11A5FC(v37);
      if (qword_17B258 != -1) {
        swift_once();
      }
      id v59 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
      unint64_t v38 = (void *)swift_task_alloc();
      v0[43] = v38;
      *unint64_t v38 = v0;
      v38[1] = sub_101CE4;
      uint64_t v39 = v0[7];
      unint64_t v40 = 0xD000000000000026;
      os_log_type_t v41 = "setTimerAttribute#promptForTargetTimer";
    }
    else
    {
      sub_11A130(v37);
      if (qword_17B258 != -1) {
        swift_once();
      }
      id v59 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
      unint64_t v47 = (void *)swift_task_alloc();
      v0[41] = v47;
      *unint64_t v47 = v0;
      v47[1] = sub_10191C;
      uint64_t v39 = v0[8];
      unint64_t v40 = 0xD000000000000025;
      os_log_type_t v41 = "setTimerAttribute#promptForToDuration";
    }
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v59)(v39, v40, (unint64_t)(v41 - 32) | 0x8000000000000000, _swiftEmptyArrayStorage);
  }
LABEL_6:
  (*(void (**)(void, void, void))(v0[14] + 104))(v0[15], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[13]);
  if (qword_17B358 != -1) {
    swift_once();
  }
  uint64_t v16 = v0[11];
  uint64_t v15 = v0[12];
  uint64_t v17 = v0[10];
  uint64_t v18 = sub_33D8(v17, (uint64_t)qword_180070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v18, v17);
  mach_absolute_time();
  sub_1406B0();
  if (v9)
  {
    id v19 = (void *)sub_13F050();

    uint64_t v21 = sub_1415A0();
    uint64_t v23 = v22;

    v0[33] = v23;
    if (v23)
    {
      id v24 = (void *)sub_13F050();
      NSString v26 = v25;

      uint64_t v27 = sub_1415A0();
      uint64_t v29 = v28;

      v0[34] = v29;
      if (v29)
      {
        sub_11A5FC(v0[24]);
        if (qword_17B268 != -1) {
          swift_once();
        }
        uint64_t v30 = v0[4];
        uint64_t v31 = (void *)swift_task_alloc();
        v0[35] = v31;
        v31[2] = v30;
        v31[3] = v27;
        v31[4] = v29;
        v31[5] = v21;
        v31[6] = v23;
        uint64_t v32 = (void *)swift_task_alloc();
        v0[36] = v32;
        *uint64_t v32 = v0;
        v32[1] = sub_1014C0;
        return sub_91F88((uint64_t)sub_102C40, (uint64_t)v31);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v48 = sub_141160();
    os_log_type_t v49 = sub_141470();
    if (os_log_type_enabled(v48, v49))
    {
      id v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v50 = 0;
      _os_log_impl(&dword_0, v48, v49, "Could not create direct invocation for confirm or reject actions.", v50, 2u);
      swift_slowDealloc();
    }
    uint64_t v52 = v0[26];
    uint64_t v51 = v0[27];
    uint64_t v53 = v0[25];
    uint64_t v55 = v0[17];
    uint64_t v54 = v0[18];
    uint64_t v56 = v0[16];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *id v57 = 0;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
    goto LABEL_41;
  }
  sub_11A130(v0[24]);
  if (qword_17B268 != -1) {
    swift_once();
  }
  uint64_t v60 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v42 = (void *)swift_task_alloc();
  v0[31] = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_1011DC;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v60)(0xD000000000000020, 0x800000000014A670, _swiftEmptyArrayStorage);
}

uint64_t sub_1011DC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_101378, 0, 0);
  }
  else
  {
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1016B8;
    uint64_t v7 = v4[27];
    uint64_t v8 = v4[24];
    uint64_t v9 = v4[18];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_101378()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1014C0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 296) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_1020B0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[38] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[39] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1016B8;
    uint64_t v7 = v4[27];
    uint64_t v8 = v4[24];
    uint64_t v9 = v4[18];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_1016B8()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1021F8;
  }
  else {
    uint64_t v2 = sub_1017CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1017CC()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 184);
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10191C()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_101BBC;
  }
  else {
    uint64_t v2 = sub_101A30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_101A30()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = (uint64_t *)v0[3];
  (*(void (**)(void, void, void))(v0[6] + 32))(v0[9], v0[8], v0[5]);
  sub_53A58(v1, (unint64_t)_swiftEmptyArrayStorage, v2, v3);
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[27];
  uint64_t v7 = v0[24];
  uint64_t v6 = v0[25];
  uint64_t v8 = v0[22];
  uint64_t v9 = v0[23];
  (*(void (**)(void, void))(v0[6] + 8))(v0[9], v0[5]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_101BBC()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_101CE4()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_101F88;
  }
  else {
    uint64_t v2 = sub_101DF8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_101DF8()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = (uint64_t *)v0[3];
  (*(void (**)(void, void, void))(v0[6] + 32))(v0[9], v0[7], v0[5]);
  sub_53A58(v1, (unint64_t)_swiftEmptyArrayStorage, v2, v3);
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[27];
  uint64_t v7 = v0[24];
  uint64_t v6 = v0[25];
  uint64_t v8 = v0[22];
  uint64_t v9 = v0[23];
  (*(void (**)(void, void))(v0[6] + 8))(v0[9], v0[5]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_101F88()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1020B0()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1021F8()
{
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_102350(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5830(&qword_17F4E8);
  uint64_t v5 = (void *)sub_13F1F0();
  id v6 = [v5 targetTimer];

  if (v6)
  {
    uint64_t v7 = sub_174C0(0, 0);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = type metadata accessor for SetTimerAttributePromptExistingParameters(0);
  uint64_t v9 = *(int *)(v8 + 24);
  swift_release();
  *(void *)(a1 + v9) = v7;
  swift_bridgeObjectRetain();
  sub_1404D0();
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v4, 0, 1, v10);
  sub_2D248((uint64_t)v4, a1);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v11(v4, 0, 1, v10);
  return sub_2D248((uint64_t)v4, a1 + *(int *)(v8 + 20));
}

uint64_t sub_102508@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FDD0C(a1, a2);
}

uint64_t sub_102520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1025D0;
  return sub_FDF8C(a1, a2, a3);
}

uint64_t sub_1025D0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_102704, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_102704()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1027C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10286C;
  return sub_100548(a1, a2);
}

uint64_t sub_10286C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1029A0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1029A0()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_102A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_159A4;
  return NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)(a1, a2, a3, a4);
}

uint64_t sub_102B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1D95C;
  return NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:)(a1, a2, a3, a4);
}

unint64_t sub_102BEC()
{
  unint64_t result = qword_180098[0];
  if (!qword_180098[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_180098);
  }
  return result;
}

uint64_t sub_102C40(uint64_t a1)
{
  return sub_102350(a1);
}

ValueMetadata *_s20HandleIntentStrategyVMa_4()
{
  return &_s20HandleIntentStrategyVN_4;
}

uint64_t sub_102C60()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_1800D8);
  sub_33D8(v0, (uint64_t)qword_1800D8);
  return sub_140E60();
}

uint64_t sub_102CAC(uint64_t a1, uint64_t a2)
{
  v2[45] = a1;
  v2[46] = a2;
  uint64_t v3 = sub_13F1E0();
  v2[47] = v3;
  v2[48] = *(void *)(v3 - 8);
  v2[49] = swift_task_alloc();
  v2[50] = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
  v2[51] = swift_task_alloc();
  sub_5830(&qword_17C4A0);
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  uint64_t v4 = sub_140730();
  v2[55] = v4;
  v2[56] = *(void *)(v4 - 8);
  v2[57] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v2[58] = v5;
  v2[59] = *(void *)(v5 - 8);
  v2[60] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v2[61] = v6;
  v2[62] = *(void *)(v6 - 8);
  v2[63] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v2[64] = v7;
  v2[65] = *(void *)(v7 - 8);
  v2[66] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[67] = v8;
  v2[68] = *(void *)(v8 - 8);
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  uint64_t v9 = sub_13EFF0();
  v2[73] = v9;
  v2[74] = *(void *)(v9 - 8);
  v2[75] = swift_task_alloc();
  return _swift_task_switch(sub_10308C, 0, 0);
}

uint64_t sub_10308C()
{
  if (qword_17B360 != -1) {
    swift_once();
  }
  *(void *)(v0 + 608) = sub_33D8(*(void *)(v0 + 464), (uint64_t)qword_1800D8);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "ResetTimer.HandleIntentStrategy.makeIntentHandledResponse() called", v3, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_180140);
  uint64_t v4 = (void *)sub_13F140();
  id v5 = [v4 resetTimers];

  if (!v5) {
    goto LABEL_65;
  }
  sub_140EA0();
  unint64_t v6 = sub_141310();
  *(void *)(v0 + 616) = v6;

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_8;
    }
    goto LABEL_64;
  }
  swift_bridgeObjectRetain();
  if (!sub_1417D0())
  {
LABEL_64:
    swift_bridgeObjectRelease_n();
LABEL_65:
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v88 = 5;
    swift_willThrow();
LABEL_66:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v89 = *(uint64_t (**)(void))(v0 + 8);
    return v89();
  }
LABEL_8:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)sub_1416A0();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_71;
    }
    id v8 = *(id *)(v6 + 32);
  }
  uint64_t v9 = v8;
  *(void *)(v0 + 624) = v8;
  uint64_t v10 = *(void *)(v0 + 600);
  swift_bridgeObjectRelease();
  sub_5830(&qword_17BF00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142E80;
  *(void *)(inited + 32) = v9;
  unint64_t v101 = inited;
  sub_141330();
  id v12 = v9;
  sub_15E9C(v101, v10);
  swift_bridgeObjectRelease();
  sub_13EC50();
  unint64_t v13 = swift_bridgeObjectRetain();
  *(void *)(v0 + 632) = sub_5311C(v13);
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  }
  *(void *)(v0 + 640) = v14;
  if (v14 == 1)
  {
    sub_140DF0();
    sub_140DE0();
    uint64_t v15 = *(void *)(v0 + 240);
    uint64_t v16 = *(void *)(v0 + 248);
    sub_90A8((void *)(v0 + 216), v15);
    id v17 = [v12 identifier];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_141250();
      uint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v21 = 0;
    }
    *(void *)(v0 + 648) = v21;
    id v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 656) = v58;
    *id v58 = v0;
    v58[1] = sub_103F58;
    return dispatch thunk of SessionManaging.sessionIDString(for:)(v19, v21, v15, v16);
  }
  *(_OWORD *)(v0 + 680) = 0u;
  uint64_t v22 = *(void *)(v0 + 496);
  uint64_t v23 = *(void *)(v0 + 504);
  uint64_t v24 = *(void *)(v0 + 480);
  uint64_t v91 = *(void *)(v0 + 488);
  uint64_t v25 = *(void *)(v0 + 472);
  uint64_t v92 = *(void *)(v0 + 464);
  uint64_t v94 = *(void *)(v0 + 608);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 96), *(void *)(v0 + 120));
  sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v23, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v91);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v94, v92);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  char v26 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  if (v26)
  {
    id v27 = sub_79174(*(void *)(v0 + 616), 13);
    *(void *)(v0 + 808) = v27;
    swift_bridgeObjectRelease();
    if (v27)
    {
      uint64_t v28 = self;
      *(void *)(v0 + 344) = 0;
      id v29 = [v28 archivedDataWithRootObject:v27 requiringSecureCoding:1 error:v0 + 344];
      uint64_t v30 = *(void **)(v0 + 344);
      if (v29)
      {
        uint64_t v31 = v29;
        id v32 = v30;
        uint64_t v33 = sub_13E4D0();
        uint64_t v35 = v34;

        *(void *)(v0 + 816) = v33;
        *(void *)(v0 + 824) = v35;
        if (qword_17B1B8 != -1) {
          swift_once();
        }
        uint64_t v36 = *(void *)(v0 + 368);
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 832) = v37;
        v37[2] = v33;
        _OWORD v37[3] = v35;
        v37[4] = v36;
        unint64_t v38 = (void *)swift_task_alloc();
        *(void *)(v0 + 840) = v38;
        *unint64_t v38 = v0;
        v38[1] = sub_106234;
        uint64_t v39 = *(void *)(v0 + 632);
        return sub_71C60(v39, (uint64_t)sub_108E40, (uint64_t)v37);
      }
      os_log_type_t v82 = *(void **)(v0 + 624);
      uint64_t v83 = *(void *)(v0 + 592);
      uint64_t v98 = *(void *)(v0 + 584);
      uint64_t v100 = *(void *)(v0 + 600);
      uint64_t v84 = *(void *)(v0 + 544);
      uint64_t v93 = *(void *)(v0 + 536);
      uint64_t v96 = *(void *)(v0 + 576);
      uint64_t v90 = *(void *)(v0 + 528);
      uint64_t v85 = *(void *)(v0 + 520);
      uint64_t v86 = *(void *)(v0 + 512);
      id v87 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v90, v86);
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v96, v93);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v100, v98);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_type_t v69 = sub_141160();
      uint64_t v70 = sub_141480();
      if (os_log_type_enabled(v69, (os_log_type_t)v70))
      {
        id v71 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v71 = 0;
        _os_log_impl(&dword_0, v69, (os_log_type_t)v70, "Could not get timer action from timer.", v71, 2u);
        swift_slowDealloc();
      }
      id v72 = *(void **)(v0 + 624);
      uint64_t v73 = *(void *)(v0 + 592);
      uint64_t v97 = *(void *)(v0 + 584);
      uint64_t v99 = *(void *)(v0 + 600);
      uint64_t v95 = *(void *)(v0 + 576);
      uint64_t v74 = *(void *)(v0 + 544);
      uint64_t v75 = *(void *)(v0 + 536);
      uint64_t v76 = *(void *)(v0 + 528);
      uint64_t v77 = *(void *)(v0 + 520);
      uint64_t v78 = *(void *)(v0 + 512);

      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      *uint64_t v79 = 1;
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v95, v75);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v99, v97);
    }
    goto LABEL_66;
  }
  uint64_t v42 = *(void *)(v0 + 448);
  uint64_t v41 = *(void *)(v0 + 456);
  uint64_t v43 = *(void *)(v0 + 440);
  sub_140720();
  BOOL v44 = sub_1406C0();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  if (v44)
  {
    uint64_t v45 = sub_141160();
    os_log_type_t v46 = sub_141480();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v47 = 0;
      _os_log_impl(&dword_0, v45, v46, "[ResetTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer RF 2.0 path", v47, 2u);
      swift_slowDealloc();
    }

    uint64_t v48 = *(void *)(v0 + 640);
    if (!v48) {
      goto LABEL_49;
    }
    sub_470FC(0, v48 & ~(v48 >> 63), 0);
    if ((v48 & 0x8000000000000000) == 0)
    {
      uint64_t v49 = 0;
      uint64_t v50 = *(void *)(v0 + 400);
      uint64_t v51 = *(void *)(v0 + 616) + 32;
      do
      {
        if ((*(void *)(v0 + 616) & 0xC000000000000001) != 0) {
          id v52 = (id)sub_1416A0();
        }
        else {
          id v52 = *(id *)(v51 + 8 * v49);
        }
        uint64_t v53 = v52;
        sub_1B94C(*(void **)(v0 + 408));

        unint64_t v55 = _swiftEmptyArrayStorage[2];
        unint64_t v54 = _swiftEmptyArrayStorage[3];
        if (v55 >= v54 >> 1) {
          sub_470FC(v54 > 1, v55 + 1, 1);
        }
        uint64_t v56 = *(void *)(v0 + 640);
        uint64_t v57 = *(void *)(v0 + 408);
        ++v49;
        _swiftEmptyArrayStorage[2] = v55 + 1;
        sub_A4B7C(v57, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v55, type metadata accessor for SiriTimerSnippetModel);
      }
      while (v49 != v56);
LABEL_49:
      uint64_t v63 = *(void **)(v0 + 432);
      *uint64_t v63 = _swiftEmptyArrayStorage;
      uint64_t v64 = type metadata accessor for SiriTimePluginModel(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
      if (qword_17B1A8 != -1) {
        swift_once();
      }
      uint64_t v65 = *(void *)(v0 + 632);
      sub_5830(&qword_17F3D0);
      uint64_t v66 = swift_allocObject();
      *(void *)(v0 + 696) = v66;
      *(_OWORD *)(v66 + 16) = xmmword_142D50;
      *(void *)(v66 + 32) = 0x6D69547465736572;
      *(void *)(v66 + 40) = 0xEB00000000737265;
      *(void *)(v66 + 72) = sub_5830(&qword_17C508);
      *(void *)(v66 + 48) = v65;
      uint64_t v67 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_bridgeObjectRetain();
      uint64_t v68 = (void *)swift_task_alloc();
      *(void *)(v0 + 704) = v68;
      *uint64_t v68 = v0;
      v68[1] = sub_104C28;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                                  + v67))(0xD000000000000020, 0x800000000014A850, v66);
    }
    __break(1u);
    goto LABEL_73;
  }
  unint64_t v59 = *(void *)(v0 + 632);
  swift_bridgeObjectRelease();
  if (!(v59 >> 62))
  {
    uint64_t v60 = *(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFFF8));
    goto LABEL_44;
  }
LABEL_71:
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_1417D0();
  swift_bridgeObjectRelease();
LABEL_44:
  if (v60 >= 2)
  {
    if (qword_17B1B8 == -1)
    {
LABEL_46:
      uint64_t v61 = (void *)swift_task_alloc();
      *(void *)(v0 + 776) = v61;
      *uint64_t v61 = v0;
      v61[1] = sub_105C8C;
      uint64_t v62 = *(void *)(v0 + 632);
      return sub_71B08(v62);
    }
LABEL_73:
    swift_once();
    goto LABEL_46;
  }
  if (qword_17B1B8 != -1) {
    swift_once();
  }
  uint64_t v80 = (void *)swift_task_alloc();
  *(void *)(v0 + 792) = v80;
  *uint64_t v80 = v0;
  v80[1] = sub_105F60;
  uint64_t v81 = *(void *)(v0 + 632);
  return sub_7209C(v81);
}

uint64_t sub_103F58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 664) = a1;
  *(void *)(v3 + 672) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1040A8, 0, 0);
}

uint64_t sub_1040A8()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 664);
  *(void *)(v0 + 688) = v1;
  *(void *)(v0 + 680) = v2;
  uint64_t v76 = *(void *)(v0 + 608);
  uint64_t v3 = *(void *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 480);
  uint64_t v71 = *(void *)(v0 + 504);
  uint64_t v73 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v74 = *(void *)(v0 + 464);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 96), *(void *)(v0 + 120));
  int v6 = sub_13EC10() & (v1 != 0);
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v71, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v73);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v76, v74);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  char v7 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  if ((v7 & 1) == 0 || v6)
  {
    uint64_t v23 = *(void *)(v0 + 448);
    uint64_t v22 = *(void *)(v0 + 456);
    uint64_t v24 = *(void *)(v0 + 440);
    sub_140720();
    BOOL v25 = sub_1406C0();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    if (v25)
    {
      char v26 = sub_141160();
      os_log_type_t v27 = sub_141480();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_0, v26, v27, "[ResetTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer RF 2.0 path", v28, 2u);
        swift_slowDealloc();
      }

      if (v6)
      {
        uint64_t v29 = *(void *)(v0 + 432);
        uint64_t v30 = type metadata accessor for SiriTimePluginModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
      }
      else
      {
        uint64_t v46 = *(void *)(v0 + 640);
        if (v46)
        {
          sub_470FC(0, v46 & ~(v46 >> 63), 0);
          if (v46 < 0) {
            __break(1u);
          }
          uint64_t v47 = 0;
          uint64_t v48 = *(void *)(v0 + 400);
          uint64_t v49 = *(void *)(v0 + 616) + 32;
          do
          {
            if ((*(void *)(v0 + 616) & 0xC000000000000001) != 0) {
              id v50 = (id)sub_1416A0();
            }
            else {
              id v50 = *(id *)(v49 + 8 * v47);
            }
            uint64_t v51 = v50;
            sub_1B94C(*(void **)(v0 + 408));

            unint64_t v53 = _swiftEmptyArrayStorage[2];
            unint64_t v52 = _swiftEmptyArrayStorage[3];
            if (v53 >= v52 >> 1) {
              sub_470FC(v52 > 1, v53 + 1, 1);
            }
            uint64_t v54 = *(void *)(v0 + 640);
            uint64_t v55 = *(void *)(v0 + 408);
            ++v47;
            _swiftEmptyArrayStorage[2] = v53 + 1;
            sub_A4B7C(v55, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v53, type metadata accessor for SiriTimerSnippetModel);
          }
          while (v47 != v54);
        }
        id v58 = *(void **)(v0 + 432);
        *id v58 = _swiftEmptyArrayStorage;
        uint64_t v59 = type metadata accessor for SiriTimePluginModel(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
      }
      if (qword_17B1A8 != -1) {
        swift_once();
      }
      uint64_t v60 = *(void *)(v0 + 632);
      sub_5830(&qword_17F3D0);
      uint64_t v61 = swift_allocObject();
      *(void *)(v0 + 696) = v61;
      *(_OWORD *)(v61 + 16) = xmmword_142D50;
      *(void *)(v61 + 32) = 0x6D69547465736572;
      *(void *)(v61 + 40) = 0xEB00000000737265;
      *(void *)(v61 + 72) = sub_5830(&qword_17C508);
      *(void *)(v61 + 48) = v60;
      uint64_t v62 = async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_bridgeObjectRetain();
      uint64_t v63 = (void *)swift_task_alloc();
      *(void *)(v0 + 704) = v63;
      *uint64_t v63 = v0;
      v63[1] = sub_104C28;
      return ((uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                                  + v62))(0xD000000000000020, 0x800000000014A850, v61);
    }
    else
    {
      unint64_t v31 = *(void *)(v0 + 632);
      swift_bridgeObjectRelease();
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_1417D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = *(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8));
      }
      if (v32 < 2)
      {
        if (qword_17B1B8 != -1) {
          swift_once();
        }
        uint64_t v56 = (void *)swift_task_alloc();
        *(void *)(v0 + 792) = v56;
        *uint64_t v56 = v0;
        v56[1] = sub_105F60;
        uint64_t v57 = *(void *)(v0 + 632);
        return sub_7209C(v57);
      }
      else
      {
        if (qword_17B1B8 != -1) {
          swift_once();
        }
        uint64_t v33 = (void *)swift_task_alloc();
        *(void *)(v0 + 776) = v33;
        void *v33 = v0;
        v33[1] = sub_105C8C;
        uint64_t v34 = *(void *)(v0 + 632);
        return sub_71B08(v34);
      }
    }
  }
  else
  {
    id v8 = sub_79174(*(void *)(v0 + 616), 13);
    *(void *)(v0 + 808) = v8;
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v9 = self;
      *(void *)(v0 + 344) = 0;
      id v10 = [v9 archivedDataWithRootObject:v8 requiringSecureCoding:1 error:v0 + 344];
      uint64_t v11 = *(void **)(v0 + 344);
      if (v10)
      {
        id v12 = v10;
        id v13 = v11;
        uint64_t v14 = sub_13E4D0();
        uint64_t v16 = v15;

        *(void *)(v0 + 816) = v14;
        *(void *)(v0 + 824) = v16;
        if (qword_17B1B8 != -1) {
          swift_once();
        }
        uint64_t v17 = *(void *)(v0 + 368);
        uint64_t v18 = (void *)swift_task_alloc();
        *(void *)(v0 + 832) = v18;
        v18[2] = v14;
        void v18[3] = v16;
        v18[4] = v17;
        uint64_t v19 = (void *)swift_task_alloc();
        *(void *)(v0 + 840) = v19;
        void *v19 = v0;
        v19[1] = sub_106234;
        uint64_t v20 = *(void *)(v0 + 632);
        return sub_71C60(v20, (uint64_t)sub_108E40, (uint64_t)v18);
      }
      uint64_t v64 = *(void **)(v0 + 624);
      uint64_t v65 = *(void *)(v0 + 592);
      uint64_t v80 = *(void *)(v0 + 584);
      uint64_t v82 = *(void *)(v0 + 600);
      uint64_t v66 = *(void *)(v0 + 544);
      uint64_t v75 = *(void *)(v0 + 536);
      uint64_t v78 = *(void *)(v0 + 576);
      uint64_t v72 = *(void *)(v0 + 528);
      uint64_t v67 = *(void *)(v0 + 520);
      uint64_t v68 = *(void *)(v0 + 512);
      id v69 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_13E460();

      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v72, v68);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v78, v75);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v82, v80);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_141160();
      os_log_type_t v36 = sub_141480();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_0, v35, v36, "Could not get timer action from timer.", v37, 2u);
        swift_slowDealloc();
      }
      unint64_t v38 = *(void **)(v0 + 624);
      uint64_t v39 = *(void *)(v0 + 592);
      uint64_t v79 = *(void *)(v0 + 584);
      uint64_t v81 = *(void *)(v0 + 600);
      uint64_t v77 = *(void *)(v0 + 576);
      uint64_t v40 = *(void *)(v0 + 544);
      uint64_t v41 = *(void *)(v0 + 536);
      uint64_t v42 = *(void *)(v0 + 528);
      uint64_t v43 = *(void *)(v0 + 520);
      uint64_t v44 = *(void *)(v0 + 512);

      sub_5830((uint64_t *)&unk_17F3C0);
      sub_2F710();
      swift_allocError();
      *uint64_t v45 = 1;
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v77, v41);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v81, v79);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v70 = *(uint64_t (**)(void))(v0 + 8);
    return v70();
  }
}

uint64_t sub_104C28(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 712) = a1;
  *(void *)(v3 + 720) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1052E4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_104D88;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_104D88()
{
  uint64_t v37 = v0;
  unint64_t v1 = *(void *)(v0 + 688);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_141160();
    os_log_type_t v3 = sub_141480();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = *(void *)(v0 + 680);
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 336) = sub_58C0(v4, v1, &v36);
      sub_1415C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v2, v3, "[ResetTimer.HandleIntentStrategy.makeIntentHandledResponse] We have a live activity: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v11 = *(void *)(v0 + 424);
    uint64_t v10 = *(void *)(v0 + 432);
    sub_13EC50();
    sub_4ED1C(v10, v11);
    uint64_t v12 = type metadata accessor for SiriTimePluginModel(0);
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
    uint64_t v14 = *(void *)(v0 + 424);
    if (v13 == 1)
    {
      sub_904C(*(void *)(v0 + 424), &qword_17C4A0);
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      *(void *)(v0 + 88) = 0;
    }
    else
    {
      *(void *)(v0 + 80) = v12;
      *(void *)(v0 + 88) = sub_1BD1C();
      uint64_t v15 = sub_187EC((uint64_t *)(v0 + 56));
      sub_A4B7C(v14, (uint64_t)v15, type metadata accessor for SiriTimePluginModel);
    }
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 728) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1054F4;
    uint64_t v17 = *(void *)(v0 + 688);
    uint64_t v18 = *(void *)(v0 + 680);
    uint64_t v19 = *(void *)(v0 + 600);
    uint64_t v20 = *(void *)(v0 + 568);
    uint64_t v21 = *(void *)(v0 + 528);
    uint64_t v22 = *(void *)(v0 + 360);
    unint64_t v39 = 0x80000000001489D0;
    uint64_t v23 = v0 + 56;
    unint64_t v24 = 0xD000000000000018;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = *(void *)(v0 + 640);
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134217984;
      *(void *)(v0 + 352) = v8;
      sub_1415C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v6, v7, "[ResetTimer.HandleIntentStrategy.makeIntentHandledResponse] Using multi-timer snippet model for %ld timers.", v9, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v25 = *(void *)(v0 + 432);
    uint64_t v26 = *(void *)(v0 + 416);
    sub_13EC50();
    sub_4ED1C(v25, v26);
    uint64_t v27 = type metadata accessor for SiriTimePluginModel(0);
    int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27);
    uint64_t v29 = *(void *)(v0 + 416);
    if (v28 == 1)
    {
      sub_904C(*(void *)(v0 + 416), &qword_17C4A0);
      *(_OWORD *)(v0 + 176) = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      *(void *)(v0 + 208) = 0;
    }
    else
    {
      *(void *)(v0 + 200) = v27;
      *(void *)(v0 + 208) = sub_1BD1C();
      uint64_t v30 = sub_187EC((uint64_t *)(v0 + 176));
      sub_A4B7C(v29, (uint64_t)v30, type metadata accessor for SiriTimePluginModel);
    }
    uint64_t v31 = *(void *)(v0 + 640);
    swift_bridgeObjectRelease();
    if (v31 <= 1) {
      unint64_t v32 = 0xD000000000000018;
    }
    else {
      unint64_t v32 = 0xD000000000000017;
    }
    if (v31 <= 1) {
      unint64_t v33 = 0x80000000001489D0;
    }
    else {
      unint64_t v33 = 0x8000000000148A10;
    }
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 752) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_1058AC;
    uint64_t v19 = *(void *)(v0 + 600);
    uint64_t v20 = *(void *)(v0 + 560);
    uint64_t v21 = *(void *)(v0 + 528);
    uint64_t v22 = *(void *)(v0 + 360);
    unint64_t v39 = v33;
    uint64_t v23 = v0 + 176;
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    unint64_t v24 = v32;
  }
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v22, v20, v19, v23, v21, v18, v17, v24);
}

uint64_t sub_1052E4()
{
  unint64_t v1 = (void *)v0[78];
  uint64_t v2 = v0[74];
  uint64_t v12 = v0[73];
  uint64_t v13 = v0[75];
  uint64_t v3 = v0[68];
  uint64_t v10 = v0[67];
  uint64_t v11 = v0[72];
  uint64_t v9 = v0[66];
  uint64_t v4 = v0[65];
  uint64_t v5 = v0[64];
  uint64_t v6 = v0[54];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_904C(v6, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1054F4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 56;
  uint64_t v3 = *(void *)(*v0 + 568);
  uint64_t v4 = *(void *)(*v0 + 544);
  uint64_t v5 = *(void *)(*v0 + 536);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v1 + 736) = v6;
  *(void *)(v1 + 744) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  sub_904C(v2, &qword_17C350);
  return _swift_task_switch(sub_1056C8, 0, 0);
}

uint64_t sub_1056C8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
  uint64_t v2 = *(void **)(v0 + 624);
  uint64_t v13 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v12 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 512);
  uint64_t v9 = *(void *)(v0 + 432);

  sub_904C(v9, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1058AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 176;
  uint64_t v3 = *(void *)(*v0 + 560);
  uint64_t v4 = *(void *)(*v0 + 544);
  uint64_t v5 = *(void *)(*v0 + 536);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v1 + 760) = v6;
  *(void *)(v1 + 768) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  sub_904C(v2, &qword_17C350);
  return _swift_task_switch(sub_105AA8, 0, 0);
}

uint64_t sub_105AA8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
  uint64_t v2 = *(void **)(v0 + 624);
  uint64_t v13 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v12 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 528);
  uint64_t v7 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 512);
  uint64_t v9 = *(void *)(v0 + 432);

  sub_904C(v9, &qword_17C4A0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_105C8C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[32] = v2;
  v3[33] = a1;
  v3[34] = v1;
  v3[98] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1068B4;
  }
  else
  {
    uint64_t v4 = sub_105DF8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_105DF8()
{
  uint64_t v1 = v0[86];
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[75];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[69];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  v0[107] = v0[33];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v3;
  v8[3] = v2;
  v8[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[108] = v9;
  void *v9 = v0;
  v9[1] = sub_106550;
  uint64_t v10 = v0[66];
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v12, v11, v10);
}

uint64_t sub_105F60(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[35] = v2;
  v3[36] = a1;
  v3[37] = v1;
  v3[100] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_106A80;
  }
  else
  {
    uint64_t v4 = sub_1060CC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1060CC()
{
  uint64_t v1 = v0[86];
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[75];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[69];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  v0[107] = v0[36];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v8[2] = v3;
  v8[3] = v2;
  v8[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[108] = v9;
  void *v9 = v0;
  v9[1] = sub_106550;
  uint64_t v10 = v0[66];
  uint64_t v11 = v0[49];
  uint64_t v12 = v0[45];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v12, v11, v10);
}

uint64_t sub_106234(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[38] = v2;
  v3[39] = a1;
  v3[40] = v1;
  v3[106] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_106C4C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = sub_1063CC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1063CC()
{
  unint64_t v1 = *(void *)(v0 + 824);
  uint64_t v2 = *(void *)(v0 + 816);

  sub_34B88(v2, v1);
  uint64_t v3 = *(void *)(v0 + 688);
  uint64_t v4 = *(void *)(v0 + 680);
  uint64_t v5 = *(void *)(v0 + 600);
  uint64_t v6 = *(void *)(v0 + 576);
  uint64_t v7 = *(void *)(v0 + 552);
  uint64_t v8 = *(void *)(v0 + 544);
  uint64_t v9 = *(void *)(v0 + 536);
  *(void *)(v0 + 856) = *(void *)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v5;
  v10[3] = v4;
  v10[4] = v3;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 864) = v11;
  void *v11 = v0;
  v11[1] = sub_106550;
  uint64_t v12 = *(void *)(v0 + 528);
  uint64_t v13 = *(void *)(v0 + 392);
  uint64_t v14 = *(void *)(v0 + 360);
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v14, v13, v12);
}

uint64_t sub_106550()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 872) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[48] + 8))(v2[49], v2[47]);
  if (v0) {
    uint64_t v3 = sub_106E2C;
  }
  else {
    uint64_t v3 = sub_1066E4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1066E4()
{
  uint64_t v1 = *(void **)(v0 + 856);
  uint64_t v12 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1068B4()
{
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_106A80()
{
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_106C4C()
{
  uint64_t v1 = (void *)v0[101];
  uint64_t v2 = (void *)v0[78];
  uint64_t v3 = v0[74];
  uint64_t v12 = v0[73];
  uint64_t v13 = v0[75];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[68];
  uint64_t v6 = v0[67];
  uint64_t v7 = v0[66];
  uint64_t v8 = v0[65];
  uint64_t v9 = v0[64];
  sub_34B88(v0[102], v0[103]);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_106E2C()
{
  uint64_t v1 = *(void **)(v0 + 856);
  uint64_t v12 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_107004(uint64_t *a1)
{
  uint64_t v2 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13E4C0(0);
  sub_1404D0();
  uint64_t v5 = sub_140500();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = type metadata accessor for ResetTimerHandledOnWatchParameters(0);
  sub_2D248((uint64_t)v4, (uint64_t)a1 + *(int *)(v6 + 24));
  sub_1404A0();
  sub_5830(&qword_180140);
  sub_13F150();
  uint64_t v7 = sub_140490();
  uint64_t result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t sub_107130(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13EFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_13F1C0();
  swift_bridgeObjectRetain();
  return sub_13F1D0();
}

uint64_t sub_107254(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_141170();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  sub_140590();
  v2[13] = swift_task_alloc();
  uint64_t v6 = sub_13ECE0();
  v2[14] = v6;
  v2[15] = *(void *)(v6 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v7 = sub_13EFF0();
  v2[17] = v7;
  v2[18] = *(void *)(v7 - 8);
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_1074B0, 0, 0);
}

uint64_t sub_1074B0()
{
  if (qword_17B360 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_33D8(v0[4], (uint64_t)qword_1800D8);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "ResetTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse() called", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[5];
  uint64_t v29 = v0[4];

  sub_13EFE0();
  sub_13EC50();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[20] = sub_140470();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v30, v29);
  mach_absolute_time();
  sub_1406B0();
  sub_5830(&qword_180140);
  uint64_t v9 = (void *)sub_13F140();
  uint64_t v10 = sub_140C20();

  if (v10 != 100)
  {
    if (v10 == 101)
    {
      uint64_t v11 = v0[3];
      uint64_t v12 = swift_task_alloc();
      v0[21] = v12;
      *(void *)(v12 + 16) = v11;
      uint64_t v13 = (void *)swift_task_alloc();
      v0[22] = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_1079C0;
      return sub_11DBA8((uint64_t)sub_108E2C, v12);
    }
    uint64_t v18 = (void *)sub_13F160();
    id v19 = [v18 targetTimer];

    id v20 = [v19 shouldMatchAny];
    sub_2FF44();
    v21.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v21.super.super.isa;
    if (v20)
    {
      id v23 = v20;
      char v24 = sub_141590();

      if (v24)
      {
        if (qword_17B1B8 != -1) {
          swift_once();
        }
        uint64_t v31 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
        uint64_t v25 = (void *)swift_task_alloc();
        v0[26] = v25;
        *uint64_t v25 = v0;
        v25[1] = sub_107E28;
        unint64_t v26 = 0xD000000000000015;
        uint64_t v27 = "resetTimer#errorMulti";
LABEL_20:
        unint64_t v16 = (unint64_t)(v27 - 32) | 0x8000000000000000;
        unint64_t v17 = v26;
        goto LABEL_21;
      }
    }
    else
    {
    }
    if (qword_17B1B8 != -1) {
      swift_once();
    }
    uint64_t v31 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    int v28 = (void *)swift_task_alloc();
    v0[28] = v28;
    void *v28 = v0;
    v28[1] = sub_1080E4;
    unint64_t v26 = 0xD000000000000016;
    uint64_t v27 = "resetTimer#errorSingle";
    goto LABEL_20;
  }
  uint64_t v31 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v15 = (void *)swift_task_alloc();
  v0[24] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_107B6C;
  unint64_t v16 = 0x8000000000147BE0;
  unint64_t v17 = 0xD000000000000012;
LABEL_21:
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v31)(v17, v16, _swiftEmptyArrayStorage);
}

uint64_t sub_1079C0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_1085D8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    v4[30] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[31] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1083A0;
    uint64_t v7 = v4[19];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v8, v7, v9, 0);
  }
}

uint64_t sub_107B6C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_107D08, 0, 0);
  }
  else
  {
    v4[30] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[31] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1083A0;
    uint64_t v7 = v4[19];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v8, v7, v9, 0);
  }
}

uint64_t sub_107D08()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[10];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_107E28(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_107FC4, 0, 0);
  }
  else
  {
    v4[30] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[31] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1083A0;
    uint64_t v7 = v4[19];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v8, v7, v9, 0);
  }
}

uint64_t sub_107FC4()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[10];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1080E4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_108280, 0, 0);
  }
  else
  {
    v4[30] = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    v4[31] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1083A0;
    uint64_t v7 = v4[19];
    uint64_t v8 = v4[16];
    uint64_t v9 = v4[12];
    uint64_t v10 = v4[2];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v8, v7, v9, 0);
  }
}

uint64_t sub_108280()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[10];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1083A0()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1086F8;
  }
  else {
    uint64_t v2 = sub_1084B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1084B4()
{
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v12 = v0[17];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[10];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1085D8()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[10];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1086F8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 80);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_108820(uint64_t a1)
{
  sub_5830(&qword_180140);
  uint64_t v4 = (void *)sub_13F160();
  sub_140C40();
  sub_140F90();
  uint64_t v3 = v2;

  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_10889C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_108944;
  return sub_102CAC(a1, a2);
}

uint64_t sub_108944()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_108A78, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_108A78()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_108B38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_108BE0;
  return sub_107254(a1, a2);
}

uint64_t sub_108BE0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_108D14, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_108D14()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_108DD8()
{
  unint64_t result = qword_1800F8[0];
  if (!qword_1800F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1800F8);
  }
  return result;
}

void sub_108E2C(uint64_t a1)
{
}

uint64_t sub_108E34(uint64_t a1)
{
  return sub_107130(a1, *(void *)(v1 + 16));
}

uint64_t sub_108E40(uint64_t *a1)
{
  return sub_107004(a1);
}

ValueMetadata *_s25NeedsConfirmationStrategyVMa_2()
{
  return &_s25NeedsConfirmationStrategyVN_2;
}

uint64_t sub_108E5C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180150);
  sub_33D8(v0, (uint64_t)qword_180150);
  return sub_140E60();
}

uint64_t sub_108EA8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B368 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_180150);
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "PauseTimer.NeedsConfirmationStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = enum case for DecideAction.PromptExpectation.confirmation(_:);
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_61EF0(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_109128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a1;
  v3[8] = a3;
  sub_5830(&qword_17F3E0);
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_1091BC, 0, 0);
}

uint64_t sub_1091BC()
{
  if (qword_17B368 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_180150);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "PauseTimer.NeedsConfirmationStrategy.parseConfirmationResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17F4E8);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];

  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  int v7 = swift_dynamicCast();
  uint64_t v8 = v0[9];
  if (v7)
  {
    uint64_t v9 = (void *)v0[6];
    uint64_t v10 = (void *)sub_13F1F0();
    id v11 = [objc_allocWithZone((Class)sub_140BC0()) init];
    [v11 setTargetTimer:v9];
    id v12 = [v10 toDuration];
    [v11 setToDuration:v12];

    id v13 = [v10 toLabel];
    [v11 setToLabel:v13];

    uint64_t v14 = enum case for ConfirmationResponse.confirmed(_:);
    uint64_t v15 = sub_13F0C0();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(v8, v14, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
    id v17 = v11;
    sub_141560();

    sub_13F190();
  }
  else
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    unsigned char *v19 = 3;
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_10952C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a1;
  v3[18] = a3;
  sub_5830(&qword_17BE70);
  v3[19] = swift_task_alloc();
  uint64_t v4 = sub_13F040();
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[23] = v5;
  v3[24] = *(void *)(v5 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v3[26] = v6;
  v3[27] = *(void *)(v6 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v3[29] = v7;
  v3[30] = *(void *)(v7 - 8);
  v3[31] = swift_task_alloc();
  uint64_t v8 = sub_140730();
  v3[32] = v8;
  v3[33] = *(void *)(v8 - 8);
  v3[34] = swift_task_alloc();
  uint64_t v9 = sub_13EFF0();
  v3[35] = v9;
  v3[36] = *(void *)(v9 - 8);
  v3[37] = swift_task_alloc();
  uint64_t v10 = sub_13ECE0();
  v3[38] = v10;
  v3[39] = *(void *)(v10 - 8);
  v3[40] = swift_task_alloc();
  return _swift_task_switch(sub_109844, 0, 0);
}

uint64_t sub_109844()
{
  if (qword_17B368 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[23], (uint64_t)qword_180150);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "PauseTimer.NeedsConfirmationStrategy.makePromptForConfirmation() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17F4E8);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];

  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (!swift_dynamicCast())
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v30 = 3;
    swift_willThrow();
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = (uint64_t (*)(void))v0[1];
    return v45();
  }
  uint64_t v8 = v0[33];
  uint64_t v7 = v0[34];
  uint64_t v9 = v0[32];
  uint64_t v10 = (void *)v0[16];
  v0[41] = v10;
  sub_13EC60();
  sub_11838C(5);
  sub_140720();
  BOOL v11 = sub_140710();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (v11)
  {
    uint64_t v12 = (void *)sub_13F050();

    uint64_t v14 = sub_1415A0();
    uint64_t v16 = v15;

    v0[42] = v16;
    if (v16)
    {
      id v17 = (void *)sub_13F050();
      uint64_t v19 = v18;

      uint64_t v20 = sub_1415A0();
      uint64_t v22 = v21;

      v0[43] = v22;
      if (v22)
      {
        uint64_t v47 = v20;
        uint64_t v48 = v14;
        uint64_t v23 = v0[25];
        uint64_t v24 = v0[23];
        uint64_t v25 = v0[24];
        (*(void (**)(void, void, void))(v0[27] + 104))(v0[28], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[26]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v1, v24);
        mach_absolute_time();
        sub_1406B0();
        if (qword_17B268 != -1) {
          swift_once();
        }
        uint64_t v26 = qword_181118;
        uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_17DB90
                                                                                           + dword_17DB90);
        id v27 = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v28 = (void *)swift_task_alloc();
        v0[44] = v28;
        void *v28 = v0;
        v28[1] = sub_109EE0;
        return v46(v26, (uint64_t)v27, v47, v22, v48, v16);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v35 = sub_141160();
    os_log_type_t v36 = sub_141470();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_0, v35, v36, "Could not create direct invocation for confirm or reject actions.", v37, 2u);
      swift_slowDealloc();
    }
    uint64_t v39 = v0[39];
    uint64_t v38 = v0[40];
    uint64_t v41 = v0[37];
    uint64_t v40 = v0[38];
    uint64_t v42 = v0[35];
    uint64_t v43 = v0[36];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v44 = 0;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    goto LABEL_24;
  }
  if (qword_17B258 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_174C0(0, 0);
  v0[49] = v31;
  sub_5830(&qword_17F3D0);
  uint64_t v32 = swift_allocObject();
  v0[50] = v32;
  *(_OWORD *)(v32 + 16) = xmmword_142D50;
  strcpy((char *)(v32 + 32), "speakableTimer");
  *(unsigned char *)(v32 + 47) = -18;
  *(void *)(v32 + 72) = type metadata accessor for TimerTimer(0);
  *(void *)(v32 + 48) = v31;
  uint64_t v49 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
                                                                                     + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  swift_retain();
  unint64_t v33 = (void *)swift_task_alloc();
  v0[51] = v33;
  void *v33 = v0;
  v33[1] = sub_10A490;
  uint64_t v34 = v0[22];
  return v49(v34, 0xD000000000000024, 0x800000000014A910, v32);
}

uint64_t sub_109EE0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v3 + 360) = a1;
  *(void *)(v3 + 368) = v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (v1)
  {
    return _swift_task_switch(sub_10A218, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 376) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_10A0E4;
    uint64_t v6 = *(void *)(v3 + 320);
    uint64_t v7 = *(void *)(v3 + 296);
    uint64_t v8 = *(void *)(v3 + 248);
    uint64_t v9 = *(void *)(v3 + 136);
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v9, v6, v7, v8, 0);
  }
}

uint64_t sub_10A0E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_10AC38;
  }
  else {
    uint64_t v3 = sub_10A354;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10A218()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10A354()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10A490()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10AB14, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_17DDE8 + dword_17DDE8);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 424) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_10A628;
    return v5(12);
  }
}

uint64_t sub_10A628(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 432) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10A9D8;
  }
  else
  {
    *(void *)(v4 + 440) = a1;
    uint64_t v5 = sub_10A750;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10A750()
{
  uint64_t v10 = *(void **)(v0 + 328);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v14 = *(void *)(v0 + 304);
  uint64_t v15 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 312);
  uint64_t v5 = *(uint64_t **)(v0 + 136);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_13EBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v1, v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  uint64_t v6 = sub_13F420();
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  v5[3] = v6;
  v5[4] = (uint64_t)&protocol witness table for AceOutput;
  sub_187EC(v5);
  sub_13EE90();

  swift_bridgeObjectRelease();
  sub_904C(v0 + 56, &qword_17BE88);
  sub_904C(v4, &qword_17BE70);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v12);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10A9D8()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v9 = *(void *)(v0 + 160);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10AB14()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = (void *)v0[41];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[39];
  uint64_t v6 = v0[36];
  uint64_t v5 = v0[37];
  uint64_t v7 = v0[35];
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10AC38()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10AD74@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_108EA8(a1, a2);
}

uint64_t sub_10AD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10AE3C;
  return sub_109128(a1, a2, a3);
}

uint64_t sub_10AE3C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10AF70, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10AF70()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10B030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10B0E0;
  return sub_10952C(a1, a2, a3);
}

uint64_t sub_10B0E0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10B214, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10B214()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_10B2D8()
{
  unint64_t result = qword_180178[0];
  if (!qword_180178[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_180178);
  }
  return result;
}

id sub_10B32C()
{
  if (sub_DB9F8())
  {
    id v1 = [objc_allocWithZone(v0) init];
    id v2 = [objc_allocWithZone((Class)NSNumber) initWithDouble:UsoEntity_common_Timer.duration.getter()];
    [v1 setDuration:v2];

    sub_13F9E0();
    NSString v4 = v3;
    if (v3)
    {
      sub_141280();
      swift_bridgeObjectRelease();
      id v5 = objc_allocWithZone((Class)INSpeakableString);
      NSString v6 = sub_141240();
      swift_bridgeObjectRelease();
      NSString v4 = [v5 initWithSpokenPhrase:v6];

      if (v4)
      {
        id v7 = [v4 spokenPhrase];

        sub_141250();
        NSString v4 = sub_141240();
        swift_bridgeObjectRelease();
      }
    }
    [v1 setLabel:v4];

    [v1 setState:UsoEntity_common_Timer.timerState.getter()];
    [v1 setType:UsoEntity_common_Timer.timerType.getter()];
    swift_release();
  }
  else
  {
    id v8 = [objc_allocWithZone(v0) init];
    uint64_t v9 = self;
    id v1 = v8;
    [v9 defaultDuration];
    id v11 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v10];
    [v1 setDuration:v11];

    [v1 setLabel:0];
    [v1 setState:0];
    [v1 setType:1];
  }

  sub_140E30();
  sub_132AC();
  sub_140E0();
  uint64_t v12 = (void *)sub_140E20();
  [v1 setTargetingInfo:v12];

  swift_release();
  return v1;
}

id sub_10B5F4()
{
  id v1 = v0;
  id v2 = sub_130874();
  if (sub_DB9F8())
  {
    v3.super.super.Class isa = UsoEntity_common_Timer.isMultiple.getter().super.super.isa;
    swift_release();
  }
  else
  {
    v3.super.super.Class isa = 0;
  }
  id v4 = objc_allocWithZone(v1);
  id v5 = v2;
  id v6 = [v4 init];
  [v5 setShouldMatchAny:v3.super.super.isa];
  id v7 = v5;
  [v6 setTargetTimer:v7];

  sub_140E30();
  sub_132AC();
  sub_140E0();
  id v8 = (void *)sub_140E20();
  [v6 setTargetingInfo:v8];

  swift_release();
  return v6;
}

id sub_10B720(uint64_t a1, void *a2)
{
  NSNumber v3 = v2;
  sub_13FA30();
  sub_1BC94((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    sub_13FC90();
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_13FF40();
      swift_release();
      if (v22[0])
      {
        sub_13F9E0();
        Class v6 = v5;
        if (v5)
        {
          sub_141280();
          swift_bridgeObjectRelease();
          id v7 = objc_allocWithZone((Class)INSpeakableString);
          NSString v8 = sub_141240();
          swift_bridgeObjectRelease();
          Class v6 = (Class)[v7 initWithSpokenPhrase:v8];
          swift_release();
        }
        else
        {
          swift_release();
        }
      }
      else
      {
        Class v6 = 0;
      }
      swift_retain();
      sub_13FF40();
      swift_release();
      if (v22[0])
      {
        UsoEntity_common_Timer.duration.getter();
        swift_release();
      }
      else
      {
        [self defaultDuration];
      }
      id v17 = sub_130874();
      if (a2 && (id v18 = [a2 targetTimer]) != 0)
      {
        id v19 = v18;
        sub_140E80();
      }
      else
      {
        id v19 = v17;
      }
      id v9 = v19;
      Class isa = sub_1413D0().super.super.isa;
      id v12 = [objc_allocWithZone(v3) init];
      [v12 setTargetTimer:v9];
      [v12 setToDuration:isa];
      [v12 setToLabel:v6];

      swift_release();
      id v11 = v9;
LABEL_29:

      sub_140E30();
      sub_132AC();
      sub_140E0();
      uint64_t v20 = (void *)sub_140E20();
      [v12 setTargetingInfo:v20];
      swift_release();

      goto LABEL_30;
    }
  }
  else
  {
    sub_10C908((uint64_t)v22);
  }
  sub_1BC94((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    sub_13FCA0();
    if (swift_dynamicCast())
    {
      swift_release();
      id v9 = sub_130874();
      if (!SiriTimer.isDefault()()
        || (Class isa = (Class)[a2 targetTimer]) == 0)
      {
        Class isa = (Class)v9;
      }
      [self defaultDuration];
      Class v6 = sub_1413D0().super.super.isa;
      id v11 = [objc_allocWithZone(v3) init];
      [v11 setTargetTimer:isa];
      [v11 setToDuration:v6];
      [v11 setToLabel:0];
      id v12 = v11;
      goto LABEL_29;
    }
  }
  else
  {
    sub_10C908((uint64_t)v22);
  }
  if (qword_17B370 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_141170();
  sub_33D8(v13, (uint64_t)qword_1801D0);
  uint64_t v14 = sub_141160();
  os_log_type_t v15 = sub_141470();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "NLv4TranslationParse: Dialog act is not a resolvable INSetTimerAttributeIntent parse, cannot support input", v16, 2u);
    swift_slowDealloc();
  }
  swift_release();

  id v12 = 0;
LABEL_30:
  sub_10C908((uint64_t)v24);
  return v12;
}

id sub_10BBB8()
{
  id v1 = sub_130874();
  uint64_t v2 = sub_DDECC();
  if (v2)
  {
    uint64_t v3 = v2;
    sub_140EA0();
    swift_retain();
    Class v4 = (Class)v1;
    id v5 = sub_12DCDC(v3);
    id v6 = [objc_allocWithZone(v0) init];
    sub_2FF44();
    id v7 = v6;
    Class isa = sub_141570(0).super.super.isa;
    [(objc_class *)v4 setShouldMatchAny:isa];

    [v7 setTargetTimer:v4];
    [v7 setToTimer:v5];
    swift_release();
  }
  else
  {
    if (sub_DB9F8())
    {
      Class v4 = UsoEntity_common_Timer.isMultiple.getter().super.super.isa;
      swift_release();
    }
    else
    {
      Class v4 = 0;
    }
    id v9 = objc_allocWithZone(v0);
    id v5 = v1;
    id v7 = [v9 init];
    [v5 setShouldMatchAny:v4];
    [v7 setTargetTimer:v5];
    [v7 setToTimer:0];
  }

  sub_140E30();
  sub_132AC();
  sub_140E0();
  double v10 = (void *)sub_140E20();
  [v7 setTargetingInfo:v10];

  swift_release();
  return v7;
}

id sub_10BDB0(uint64_t a1, char a2)
{
  id v4 = [objc_allocWithZone(v2) init];
  sub_13F9E0();
  id v6 = v5;
  if (v5)
  {
    sub_141280();
    swift_bridgeObjectRelease();
    id v7 = objc_allocWithZone((Class)INSpeakableString);
    NSString v8 = sub_141240();
    swift_bridgeObjectRelease();
    id v6 = [v7 initWithSpokenPhrase:v8];
  }
  [v4 setLabel:v6];

  if (a2)
  {
    if (sub_13F9C0())
    {
      sub_13FAB0();
      swift_release();
    }
    else
    {
      [self defaultDuration];
    }
  }
  else
  {
    UsoEntity_common_Timer.duration.getter();
  }
  sub_140C90();
  [v4 setType:UsoEntity_common_Timer.timerType.getter()];
  [v4 setTargetingInfo:0];

  swift_release();
  return v4;
}

id sub_10BF24(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone(v2) init];
  id v5 = v4;
  if (a2)
  {
    id v6 = (void *)sub_141290();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  [v4 setLabel:v6];

  sub_140C90();
  [v4 setType:1];
  [v4 setTargetingInfo:0];

  return v4;
}

id sub_10BFF0(uint64_t a1)
{
  id v3 = [objc_allocWithZone(v1) init];
  uint64_t v4 = qword_17B308;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_10C410();
  sub_13F940();
  id v6 = v12;
  if (v12)
  {
    sub_141280();
    swift_bridgeObjectRelease();
    id v7 = objc_allocWithZone((Class)INSpeakableString);
    NSString v8 = sub_141240();
    swift_bridgeObjectRelease();
    id v6 = [v7 initWithSpokenPhrase:v8];
  }
  [v5 setLabel:v6];

  sub_FB2F0();
  sub_140C90();
  if (qword_17B318 != -1) {
    swift_once();
  }
  sub_13F940();
  if (v11) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = 2;
  }
  [v5 setType:v9];
  [v5 setTargetingInfo:0];

  sub_30364(a1);
  return v5;
}

id sub_10C1D0(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = sub_F9728();
  sub_F9F00();
  id v5 = (void *)sub_1413B0();
  id v6 = [objc_allocWithZone(v2) init];
  [v4 setShouldMatchAny:v5];
  [v6 setTargetTimer:v4];
  [v6 setToTimer:0];

  sub_30364(a1);
  return v6;
}

id sub_10C284(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = sub_F9728();
  sub_FBEE4();
  v5.super.super.Class isa = sub_1413D0().super.super.isa;
  if (qword_17B310 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_10C410();
  sub_13F940();
  id v6 = v11;
  if (v11)
  {
    sub_141280();
    swift_bridgeObjectRelease();
    id v7 = objc_allocWithZone((Class)INSpeakableString);
    NSString v8 = sub_141240();
    swift_bridgeObjectRelease();
    id v6 = [v7 initWithSpokenPhrase:v8];
  }
  id v9 = [objc_allocWithZone(v2) init];
  [v9 setTargetTimer:v4];
  [v9 setToDuration:v5.super.super.isa];
  [v9 setToLabel:v6];

  sub_30364(a1);
  return v9;
}

unint64_t sub_10C410()
{
  unint64_t result = qword_17CD20;
  if (!qword_17CD20)
  {
    type metadata accessor for TimerNLv3Intent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_17CD20);
  }
  return result;
}

id sub_10C468(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [objc_allocWithZone(v2) init];
  uint64_t v5 = qword_17B308;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  type metadata accessor for TimerNLv3Intent();
  sub_10C410();
  sub_13F940();
  NSString v7 = v15;
  if (v15)
  {
    sub_141280();
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone((Class)INSpeakableString);
    NSString v9 = sub_141240();
    swift_bridgeObjectRelease();
    NSString v7 = [v8 initWithSpokenPhrase:v9];

    if (v7)
    {
      id v10 = [v7 spokenPhrase];

      sub_141250();
      NSString v7 = sub_141240();
      swift_bridgeObjectRelease();
    }
  }
  [v6 setLabel:v7];

  id v11 = [objc_allocWithZone((Class)NSNumber) initWithDouble:sub_FB2F0()];
  [v6 setDuration:v11];

  [v6 setState:0];
  if (qword_17B318 != -1) {
    swift_once();
  }
  sub_13F940();
  if (v14) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = 2;
  }
  [v6 setType:v12];

  sub_30364(a1);
  return v6;
}

uint64_t sub_10C6CC()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_1801D0);
  sub_33D8(v0, (uint64_t)qword_1801D0);
  return sub_140E60();
}

id sub_10C718()
{
  id v1 = v0;
  if ((sub_13F980() & 1) != 0
    && (uint64_t v2 = (void *)sub_13F970()) != 0
    && (id v3 = v2,
        [v2 doubleValue],
        double v5 = v4,
        v3,
        [self minimumDuration],
        v6 < v5))
  {
    id v7 = [objc_allocWithZone(v1) init];
    sub_13F9A0();
    if (v8)
    {
      NSString v9 = (void *)sub_141290();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v9 = 0;
    }
    [v7 setLabel:v9];

    sub_140C90();
    [v7 setType:1];
    [v7 setTargetingInfo:0];

    swift_release();
  }
  else
  {
    if (qword_17B370 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_141170();
    sub_33D8(v10, (uint64_t)qword_1801D0);
    id v11 = sub_141160();
    os_log_type_t v12 = sub_141480();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v11, v12, "Timer domain received an alarm entity that it cannot handle. Rejecting parse.", v13, 2u);
      swift_slowDealloc();
    }

    swift_release();
    return 0;
  }
  return v7;
}

uint64_t sub_10C908(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17B9B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PauseTimerCATsSimple()
{
  uint64_t result = qword_1801E8;
  if (!qword_1801E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10C9B4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10C9F4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10CA14, 0, 0);
}

uint64_t sub_10CA14()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  strcpy((char *)(v2 + 32), "pausedTimers");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  *(void *)(v2 + 72) = sub_5830(&qword_17C508);
  *(void *)(v2 + 48) = v1;
  double v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_bridgeObjectRetain();
  id v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *id v3 = v0;
  v3[1] = sub_4F0A4;
  return v5(0xD000000000000020, 0x8000000000149C30, v2);
}

uint64_t sub_10CB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_10CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_10CDE0()
{
  return type metadata accessor for PauseTimerCATsSimple();
}

ValueMetadata *type metadata accessor for UnsupportedCreateSleepTimerFlow()
{
  return &type metadata for UnsupportedCreateSleepTimerFlow;
}

uint64_t sub_10CDF8()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180240);
  sub_33D8(v0, (uint64_t)qword_180240);
  return sub_140E60();
}

uint64_t sub_10CE44()
{
  uint64_t v0 = sub_140660();
  sub_2D2B0(v0, qword_1811F8);
  uint64_t v1 = sub_33D8(v0, (uint64_t)qword_1811F8);
  uint64_t v2 = enum case for SiriTimeEventSender.TaskType.createTimerIntent(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_10CECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  uint64_t v4 = sub_13F040();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v5 = sub_13EFF0();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v6 = sub_141170();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v7 = sub_140680();
  v3[16] = v7;
  v3[17] = *(void *)(v7 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v8 = sub_1406A0();
  v3[19] = v8;
  v3[20] = *(void *)(v8 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v9 = sub_140730();
  v3[22] = v9;
  v3[23] = *(void *)(v9 - 8);
  v3[24] = swift_task_alloc();
  uint64_t v10 = sub_13ECE0();
  v3[25] = v10;
  v3[26] = *(void *)(v10 - 8);
  v3[27] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v3[28] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v3[29] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v3[30] = swift_task_alloc();
  uint64_t v11 = sub_13ED60();
  v3[31] = v11;
  v3[32] = *(void *)(v11 - 8);
  v3[33] = swift_task_alloc();
  return _swift_task_switch(sub_10D2A4, 0, 0);
}

uint64_t sub_10D2A4()
{
  if (qword_17B378 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[13], (uint64_t)qword_180240);
  v0[34] = v1;
  uint64_t v29 = v1;
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "In UnsupportedCreateSleepTimerFlow execute()", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[33];
  uint64_t v7 = v0[31];

  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v6, enum case for ActivityType.failed(_:), v7);
  if (qword_17B380 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[30];
  uint64_t v11 = v0[28];
  uint64_t v10 = v0[29];
  uint64_t v30 = v0[33];
  uint64_t v13 = v0[23];
  uint64_t v12 = v0[24];
  uint64_t v31 = v0[31];
  uint64_t v32 = v0[22];
  uint64_t v14 = sub_140660();
  sub_33D8(v14, (uint64_t)qword_1811F8);
  uint64_t v15 = enum case for SiriKitReliabilityCodes.unsupportedParameter(_:);
  uint64_t v16 = sub_13EB70();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(v9, v15, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  uint64_t v18 = sub_140670();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  uint64_t v19 = enum case for SiriTimeEventSender.ReasonDescription.sleepUnavailable(_:);
  uint64_t v20 = sub_140650();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v11, v19, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
  sub_140640();
  sub_904C(v11, &qword_17C068);
  sub_904C(v10, &qword_17C070);
  sub_904C(v9, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v30, v31);
  sub_13EC50();
  sub_140720();
  LOBYTE(v19) = sub_140710();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v32);
  if (v19)
  {
    uint64_t v22 = v0[15];
    uint64_t v23 = v0[13];
    uint64_t v24 = v0[14];
    (*(void (**)(void, void, void))(v0[17] + 104))(v0[18], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[16]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v29, v23);
    mach_absolute_time();
    sub_1406B0();
    unint64_t v33 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    uint64_t v25 = (void *)swift_task_alloc();
    v0[35] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10D7CC;
    return ((uint64_t (*)(unint64_t, unint64_t, void *))v33)(0xD00000000000001CLL, 0x8000000000148580, _swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v34 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
        + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
    id v27 = (void *)swift_task_alloc();
    v0[39] = v27;
    *id v27 = v0;
    v27[1] = sub_10DECC;
    uint64_t v28 = v0[9];
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v34)(v28, 0xD000000000000027, 0x800000000014AA00, _swiftEmptyArrayStorage);
  }
}

uint64_t sub_10D7CC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 288) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10DC40;
  }
  else
  {
    *(void *)(v4 + 296) = a1;
    uint64_t v5 = sub_10D8F4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10D8F4()
{
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[38] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10D9A4;
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[4];
  return PatternExecutionResult.generateFlowPatternResponse(phase:contextUpdate:measure:)(v5, v2, v4, v3);
}

uint64_t sub_10D9A4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 296);
  uint64_t v2 = *(void *)(*(void *)v0 + 96);
  uint64_t v3 = *(void *)(*(void *)v0 + 88);
  uint64_t v4 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10DB14, 0, 0);
}

uint64_t sub_10DB14()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10DC40()
{
  uint64_t v14 = v0;
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  uint64_t v1 = v0[36];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v13 = v5;
    v0[2] = v1;
    swift_errorRetain();
    sub_5830(&qword_17BFD0);
    uint64_t v6 = sub_141260();
    v0[3] = sub_58C0(v6, v7, &v13);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "Failed to execute DialogEngine: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = v0[26];
  uint64_t v8 = v0[27];
  uint64_t v10 = v0[25];
  sub_13EF00();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10DECC()
{
  uint64_t v2 = (void *)*v1;
  v2[40] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10E1B8, 0, 0);
  }
  else
  {
    os_log_type_t v3 = (void *)swift_task_alloc();
    v2[41] = v3;
    *os_log_type_t v3 = v2;
    v3[1] = sub_10E048;
    uint64_t v4 = v2[27];
    uint64_t v5 = v2[4];
    return sub_5535C(v5, 0, v4);
  }
}

uint64_t sub_10E048()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_10E538;
  }
  else {
    uint64_t v5 = sub_10E42C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10E1B8()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[40];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v13 = v5;
    v0[2] = v1;
    swift_errorRetain();
    sub_5830(&qword_17BFD0);
    uint64_t v6 = sub_141260();
    v0[3] = sub_58C0(v6, v7, &v13);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "Failed to execute DialogEngine: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = v0[26];
  uint64_t v8 = v0[27];
  uint64_t v10 = v0[25];
  sub_13EF00();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10E42C()
{
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10E538()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[42];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v13 = v5;
    v0[2] = v1;
    swift_errorRetain();
    sub_5830(&qword_17BFD0);
    uint64_t v6 = sub_141260();
    v0[3] = sub_58C0(v6, v7, &v13);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "Failed to execute DialogEngine: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = v0[26];
  uint64_t v8 = v0[27];
  uint64_t v10 = v0[25];
  sub_13EF00();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10E7AC(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_159A4;
  return sub_10CECC(a1, v5, v4);
}

uint64_t type metadata accessor for PauseTimerCATs_Async()
{
  uint64_t result = qword_180270;
  if (!qword_180270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10E8A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10E8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_10EA68()
{
  return type metadata accessor for PauseTimerCATs_Async();
}

uint64_t sub_10EA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_13ED80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16)
    && (unint64_t v8 = sub_16F44(0xD00000000000001CLL, 0x800000000014AA70), (v9 & 1) != 0)
    && (sub_5B50(*(void *)(a1 + 56) + 32 * v8, (uint64_t)v21), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v11 = v19;
    unint64_t v10 = v20;
    sub_34B1C(v19, v20);
    sub_13ED70();
    if (qword_17B388 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_141170();
    sub_33D8(v12, (uint64_t)qword_1802C0);
    uint64_t v13 = sub_141160();
    os_log_type_t v14 = sub_141480();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "Followup PluginAction available.", v15, 2u);
      swift_slowDealloc();

      sub_34B88(v11, v10);
    }
    else
    {
      sub_34B88(v11, v10);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v16, 1, v4);
}

uint64_t sub_10EDB8()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_1802C0);
  sub_33D8(v0, (uint64_t)qword_1802C0);
  return sub_140E60();
}

uint64_t sub_10EE04(void *a1, uint64_t a2)
{
  *a1 = sub_F388C(a2);
  os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_71374(v3);
}

unint64_t sub_10EED8()
{
  unint64_t result = qword_1802E0;
  if (!qword_1802E0)
  {
    sub_23FA8(&qword_17FB68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1802E0);
  }
  return result;
}

unint64_t sub_10EF34()
{
  unint64_t result = qword_1802E8;
  if (!qword_1802E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1802E8);
  }
  return result;
}

unint64_t sub_10EF88()
{
  unint64_t result = qword_1802F0;
  if (!qword_1802F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1802F0);
  }
  return result;
}

unint64_t sub_10EFDC()
{
  unint64_t result = qword_1802F8;
  if (!qword_1802F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1802F8);
  }
  return result;
}

unint64_t sub_10F030()
{
  unint64_t result = qword_180300;
  if (!qword_180300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180300);
  }
  return result;
}

uint64_t sub_10F084(uint64_t a1)
{
  return a1;
}

uint64_t sub_10F0D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10F12C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10F180(uint64_t a1)
{
  return a1;
}

uint64_t sub_10F1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v18 = _s20HandleIntentStrategyVMa_5();
  __chkstk_darwin(v18);
  uint64_t v19 = (uint64_t)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s21ConfirmIntentStrategyVMa_0();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140D80();
  sub_140D60();
  sub_13EA30();
  if (qword_17B240 != -1) {
    swift_once();
  }
  sub_13E970();
  sub_5830(&qword_17CF00);
  sub_13E9E0();
  sub_3410(a1, (uint64_t)v6);
  unint64_t v7 = &v6[*(int *)(v4 + 20)];
  uint64_t v8 = sub_140980();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v17 = v6;
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v12 = v7;
  uint64_t v13 = v20;
  v11(v12, v20, v8);
  sub_10F5A0(&qword_180308, (void (*)(uint64_t))_s21ConfirmIntentStrategyVMa_0);
  sub_13E9A0();
  sub_13E9F0();
  uint64_t v14 = v19;
  sub_3410(a1, v19);
  v11((char *)(v14 + *(int *)(v18 + 20)), v13, v8);
  sub_10F5A0(&qword_180310, (void (*)(uint64_t))_s20HandleIntentStrategyVMa_5);
  sub_13E960();
  sub_13E9D0();
  sub_3410(a1, (uint64_t)v21);
  sub_5830(&qword_180318);
  sub_10F5E8();
  sub_13E9B0();
  sub_13EA00();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v8);
  _s20HandleIntentStrategyVwxx_1(a1);
  sub_10F644((uint64_t)v21);
  sub_10F6A4(v14, (uint64_t (*)(void))_s20HandleIntentStrategyVMa_5);
  return sub_10F6A4((uint64_t)v17, (uint64_t (*)(void))_s21ConfirmIntentStrategyVMa_0);
}

BOOL sub_10F544()
{
  sub_5830(&qword_17F7E0);
  uint64_t v0 = (void *)sub_13F140();
  sub_140D50();

  uint64_t v1 = sub_140D70();
  return v1 == sub_140D70();
}

uint64_t sub_10F5A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10F5E8()
{
  unint64_t result = qword_180320;
  if (!qword_180320)
  {
    sub_23FA8(&qword_180318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180320);
  }
  return result;
}

uint64_t sub_10F644(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_180318);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10F6A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *UndoCreateTimerFlow.__allocating_init()()
{
  sub_140F30();
  swift_allocObject();
  uint64_t v0 = sub_140F20();
  id v1 = [objc_allocWithZone((Class)MTTimerManager) init];
  type metadata accessor for UndoCreateTimerFlow();
  uint64_t v2 = (void *)swift_allocObject();

  return sub_115118(v0, (uint64_t)v1, v2);
}

uint64_t type metadata accessor for UndoCreateTimerFlow()
{
  uint64_t result = qword_1803A0;
  if (!qword_1803A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_10F7D8()
{
  id v1 = v0;
  uint64_t v2 = sub_13E550();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140EA0();
  id v6 = [v1 timerID];
  sub_13E530();

  sub_13E520();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v8 = sub_141240();
  swift_bridgeObjectRelease();
  NSString v9 = sub_141240();
  id v10 = [v7 initWithIdentifier:v8 displayString:v9];

  [v1 type];
  [v10 setType:sub_141440()];
  unint64_t v11 = (unint64_t)[v1 state];
  uint64_t v12 = 0;
  if (v11 <= 4) {
    uint64_t v12 = qword_146B10[v11];
  }
  [v10 setState:v12];
  [v1 duration];
  id v14 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v13];
  [v10 setDuration:v14];

  [v1 remainingTime];
  id v16 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v15];
  [v10 setRemainingTime:v16];

  id v17 = [v1 title];
  [v10 setLabel:v17];

  return v10;
}

uint64_t sub_10FA70()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180328);
  sub_33D8(v0, (uint64_t)qword_180328);
  return sub_140E60();
}

uint64_t sub_10FABC(uint64_t a1)
{
  return sub_7A65C(a1, (uint64_t (*)(void))&type metadata accessor for SiriTimeEventSender.TaskType, qword_181220, &enum case for SiriTimeEventSender.TaskType.undoCreateTimer(_:));
}

uint64_t sub_10FAE4(uint64_t a1)
{
  return sub_7A65C(a1, (uint64_t (*)(void))&type metadata accessor for SiriTimeEventSender.Attribute, qword_181238, &enum case for SiriTimeEventSender.Attribute.corrections(_:));
}

uint64_t UndoCreateTimerFlow.on(input:)()
{
  uint64_t v0 = sub_5830(&qword_17D740);
  __chkstk_darwin(v0 - 8);
  uint64_t v62 = (uint64_t)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_140920();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  __chkstk_darwin(v2);
  uint64_t v64 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_140900();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v67 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v58 - v8;
  uint64_t v10 = sub_13F3C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_13F3E0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F370();
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) != enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
  uint64_t v18 = sub_13F3B0();
  uint64_t v19 = v13;
  if (!v18)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  uint64_t v20 = v18;
  uint64_t v60 = v10;
  uint64_t v61 = v19;
  uint64_t v21 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v21(v9, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v4);
  uint64_t v22 = sub_1408F0();
  uint64_t v24 = v23;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v9, v4);
  if (*(void *)(v20 + 16) && (unint64_t v26 = sub_16F44(v22, v24), (v27 & 1) != 0))
  {
    sub_5B50(*(void *)(v20 + 56) + 32 * v26, (uint64_t)&v70);
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v71 + 1)) {
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  int v28 = sub_CC640();
  if (v28 == 19)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v61, v60);
    swift_bridgeObjectRelease();
    return 0;
  }
  int v59 = v28;
  uint64_t v30 = v67;
  v21(v67, enum case for DirectInvocationUtils.Timer.UserInfoKey.timerId(_:), v4);
  uint64_t v31 = sub_1408F0();
  uint64_t v33 = v32;
  v25(v30, v4);
  if (*(void *)(v20 + 16) && (unint64_t v34 = sub_16F44(v31, v33), (v35 & 1) != 0))
  {
    sub_5B50(*(void *)(v20 + 56) + 32 * v34, (uint64_t)&v70);
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  uint64_t v36 = v11;
  swift_bridgeObjectRelease();
  if (!*((void *)&v71 + 1))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_904C((uint64_t)&v70, &qword_17B9B0);
LABEL_15:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v61, v60);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v37 = v20;
  uint64_t v58 = v68;
  uint64_t v67 = v69;
  uint64_t v38 = sub_13F3A0();
  uint64_t v40 = v39;
  uint64_t v41 = v64;
  uint64_t v42 = v65;
  uint64_t v43 = v66;
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v66);
  uint64_t v44 = sub_140910();
  uint64_t v46 = v45;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  if (v38 == v44 && v40 == v46)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v47 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0) {
      goto LABEL_38;
    }
  }
  if (sub_642C(v59) != 0x6574656C6564 || v48 != 0xE600000000000000)
  {
    char v49 = sub_141AA0();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_33;
    }
LABEL_38:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v61, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
LABEL_33:
  if (qword_17B390 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_141170();
  sub_33D8(v50, (uint64_t)qword_180328);
  uint64_t v51 = sub_141160();
  os_log_type_t v52 = sub_141480();
  if (os_log_type_enabled(v51, v52))
  {
    unint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v53 = 0;
    _os_log_impl(&dword_0, v51, v52, "UndoCreateTimerFlow: accepting input.", v53, 2u);
    swift_slowDealloc();
  }

  uint64_t v54 = v63;
  uint64_t v55 = v67;
  *(void *)(v63 + 80) = v58;
  *(void *)(v54 + 88) = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = v62;
  sub_10EA70(v37, v62);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v61, v60);
  uint64_t v57 = v54 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin19UndoCreateTimerFlow_followupPluginAction;
  swift_beginAccess();
  sub_115258(v56, v57);
  swift_endAccess();
  return 1;
}

uint64_t UndoCreateTimerFlow.execute(completion:)()
{
  return sub_13EA80();
}

uint64_t UndoCreateTimerFlow.execute()(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  sub_5830(&qword_17D740);
  v2[17] = swift_task_alloc();
  uint64_t v3 = sub_13ED80();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v4 = sub_140730();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  uint64_t v5 = sub_140650();
  v2[24] = v5;
  v2[25] = *(void *)(v5 - 8);
  v2[26] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v2[27] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v2[28] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v2[29] = swift_task_alloc();
  uint64_t v6 = sub_140660();
  v2[30] = v6;
  v2[31] = *(void *)(v6 - 8);
  v2[32] = swift_task_alloc();
  uint64_t v7 = sub_13ED60();
  v2[33] = v7;
  v2[34] = *(void *)(v7 - 8);
  v2[35] = swift_task_alloc();
  return _swift_task_switch(sub_110688, 0, 0);
}

uint64_t sub_110688()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 272) + 104))(*(void *)(v0 + 280), enum case for ActivityType.correction(_:), *(void *)(v0 + 264));
  if (qword_17B398 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = sub_33D8(v3, (uint64_t)qword_181220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v6 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_17B3A0 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 248);
  uint64_t v71 = *(void *)(v0 + 256);
  uint64_t v72 = *(void *)(v0 + 280);
  uint64_t v9 = *(void *)(v0 + 232);
  uint64_t v73 = *(void *)(v0 + 240);
  uint64_t v11 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 224);
  uint64_t v13 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 200);
  uint64_t v74 = *(void *)(v0 + 128);
  uint64_t v75 = *(void *)(v0 + 264);
  uint64_t v14 = sub_140670();
  uint64_t v15 = sub_33D8(v14, (uint64_t)qword_181238);
  uint64_t v16 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v10, v15, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v13);
  sub_140640();
  sub_904C(v11, &qword_17C068);
  sub_904C(v10, &qword_17C070);
  sub_904C(v9, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v71, v73);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v72, v75);
  if (*(void *)(v74 + 88))
  {
    uint64_t v18 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 184);
    uint64_t v19 = *(void *)(v0 + 168);
    sub_140720();
    BOOL v20 = sub_1406C0();
    *(unsigned char *)(v0 + 432) = v20;
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    *(void *)(v0 + 104) = 0;
    if (v20)
    {
      if (qword_17B390 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_141170();
      *(void *)(v0 + 328) = sub_33D8(v21, (uint64_t)qword_180328);
      uint64_t v22 = sub_141160();
      os_log_type_t v23 = sub_141480();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_0, v22, v23, "UndoCreateTimerFlow: Multi-timer handling", v24, 2u);
        swift_slowDealloc();
      }
      uint64_t v25 = *(void *)(v0 + 128);

      unint64_t v26 = *(void **)(v25 + 72);
      *(void *)(v0 + 336) = v26;
      id v27 = v26;
      id v28 = [v27 timers];
      *(void *)(v0 + 344) = v28;
      if (v28)
      {
        uint64_t v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 352) = v29;
        v29[2] = v28;
        uint64_t v30 = (void *)swift_task_alloc();
        *(void *)(v0 + 360) = v30;
        uint64_t v31 = (char *)sub_5830(&qword_17D7A8);
        *uint64_t v30 = v0;
        v30[1] = sub_111874;
        unint64_t v32 = 0x8000000000148C70;
        uint64_t v33 = sub_90D78;
        unint64_t v34 = (void *)(v0 + 112);
        unint64_t v35 = 0xD000000000000010;
LABEL_13:
        return withCheckedContinuation<A>(isolation:function:_:)(v34, 0, 0, v35, v32, v33, v29, v31);
      }

      uint64_t v53 = *(void *)(v0 + 128);
      swift_retain();
      uint64_t v54 = sub_1152C0((unint64_t)_swiftEmptyArrayStorage, v53);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 104) = v54;
      if (v54)
      {
        uint64_t v55 = v54;
        id v56 = sub_10F7D8();

        *(void *)(v0 + 376) = v56;
        id v57 = v56;
        [v57 state];
        uint64_t v58 = sub_140F70();
        if (v58 != sub_140F70())
        {
          char v67 = *(unsigned char *)(v0 + 432);
          uint64_t v68 = *(void *)(v0 + 128);
          uint64_t v69 = swift_allocObject();
          *(void *)(v0 + 384) = v69;
          *(unsigned char *)(v69 + 16) = 1;
          uint64_t v29 = (void *)swift_task_alloc();
          *(void *)(v0 + 392) = v29;
          *((unsigned char *)v29 + 16) = v67;
          v29[3] = v68;
          v29[4] = v69;
          v29[5] = v0 + 104;
          unint64_t v34 = (void *)swift_task_alloc();
          *(void *)(v0 + 400) = v34;
          *unint64_t v34 = v0;
          v34[1] = sub_111E18;
          uint64_t v31 = (char *)&type metadata for () + 8;
          uint64_t v33 = sub_117F1C;
          unint64_t v35 = 0x2865747563657865;
          unint64_t v32 = 0xE900000000000029;
          goto LABEL_13;
        }

        if (qword_17B390 != -1) {
          swift_once();
        }
        sub_33D8(v21, (uint64_t)qword_180328);
        int v59 = sub_141160();
        os_log_type_t v60 = sub_141480();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v61 = 0;
          _os_log_impl(&dword_0, v59, v60, "UndoCreateTimerFlow: Timer has an unknown state (meaning there's no timer set on phone): No timers to delete.", v61, 2u);
          swift_slowDealloc();
        }

        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 424) = v62;
        *uint64_t v62 = v0;
        uint64_t v63 = sub_112584;
      }
      else
      {
        uint64_t v64 = sub_141160();
        os_log_type_t v65 = sub_141470();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v66 = 0;
          _os_log_impl(&dword_0, v64, v65, "UndoCreateTimerFlow: mtTimerManager.timersSync returned no timer with matching timerID: no timers to delete.", v66, 2u);
          swift_slowDealloc();
        }

        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 368) = v62;
        *uint64_t v62 = v0;
        uint64_t v63 = sub_111D1C;
      }
      v62[1] = v63;
      return sub_116AC0();
    }
    else
    {
      if (qword_17B390 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_141170();
      *(void *)(v0 + 296) = sub_33D8(v45, (uint64_t)qword_180328);
      uint64_t v46 = sub_141160();
      os_log_type_t v47 = sub_141480();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl(&dword_0, v46, v47, "UndoCreateTimerFlow: Single-timer handling", v48, 2u);
        swift_slowDealloc();
      }
      uint64_t v49 = *(void *)(v0 + 128);

      sub_3410(v49 + 32, v0 + 16);
      uint64_t v50 = *(void *)(v0 + 40);
      uint64_t v51 = *(void *)(v0 + 48);
      sub_90A8((void *)(v0 + 16), v50);
      os_log_type_t v52 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v52;
      *os_log_type_t v52 = v0;
      v52[1] = sub_111330;
      return dispatch thunk of SiriTimerManagerIOS.currentTimer()(v50, v51);
    }
  }
  else
  {
    if (qword_17B390 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_141170();
    sub_33D8(v36, (uint64_t)qword_180328);
    uint64_t v37 = sub_141160();
    os_log_type_t v38 = sub_141470();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_0, v37, v38, "UndoCreateTimerFlow: No timer id to delete! This should never happen.", v39, 2u);
      swift_slowDealloc();
    }
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v40 = *(void *)(v0 + 208);
    uint64_t v42 = *(void *)(v0 + 192);

    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v40, enum case for SiriTimeEventSender.ReasonDescription.noTimerToDelete(_:), v42);
    uint64_t v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v43;
    void *v43 = v0;
    v43[1] = sub_111100;
    uint64_t v44 = *(void *)(v0 + 208);
    return sub_115634(v44);
  }
}

uint64_t sub_111100()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208);
  uint64_t v2 = *(void *)(*(void *)v0 + 200);
  uint64_t v3 = *(void *)(*(void *)v0 + 192);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_111258, 0, 0);
}

uint64_t sub_111258()
{
  sub_13EF00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_111330(uint64_t a1)
{
  *(void *)(*(void *)v1 + 312) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_111430, 0, 0);
}

uint64_t sub_111430()
{
  uint64_t v1 = *(void *)(v0 + 312);
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  if (!v1)
  {
    uint64_t v11 = sub_141160();
    os_log_type_t v12 = sub_141470();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v11, v12, "UndoCreateTimerFlow: siriTimerManager.currentTimer get nil result: no timers to delete.", v13, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v9;
    void *v9 = v0;
    uint64_t v10 = sub_111778;
    goto LABEL_11;
  }
  uint64_t v2 = *(void **)(v0 + 312);
  *(void *)(v0 + 376) = v2;
  id v3 = v2;
  [v3 state];
  uint64_t v4 = sub_140F70();
  if (v4 == sub_140F70())
  {

    if (qword_17B390 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_141170();
    sub_33D8(v5, (uint64_t)qword_180328);
    uint64_t v6 = sub_141160();
    os_log_type_t v7 = sub_141480();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "UndoCreateTimerFlow: Timer has an unknown state (meaning there's no timer set on phone): No timers to delete.", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v9;
    void *v9 = v0;
    uint64_t v10 = sub_112584;
LABEL_11:
    v9[1] = v10;
    return sub_116AC0();
  }
  char v15 = *(unsigned char *)(v0 + 432);
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v17 = swift_allocObject();
  *(void *)(v0 + 384) = v17;
  *(unsigned char *)(v17 + 16) = 1;
  uint64_t v18 = swift_task_alloc();
  *(void *)(v0 + 392) = v18;
  *(unsigned char *)(v18 + 16) = v15;
  *(void *)(v18 + 24) = v16;
  *(void *)(v18 + 32) = v17;
  *(void *)(v18 + 40) = v0 + 104;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v19;
  void *v19 = v0;
  v19[1] = sub_111E18;
  return withCheckedContinuation<A>(isolation:function:_:)(v19, 0, 0, 0x2865747563657865, 0xE900000000000029, sub_117F1C, v18, (char *)&type metadata for () + 8);
}

uint64_t sub_111778()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_118388, 0, 0);
}

uint64_t sub_111874()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_11198C, 0, 0);
}

uint64_t sub_11198C()
{
  uint64_t v1 = *(void **)(v0 + 336);

  unint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 128);
  swift_retain();
  uint64_t v4 = sub_1152C0(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 104) = v4;
  if (!v4)
  {
    char v15 = sub_141160();
    os_log_type_t v16 = sub_141470();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "UndoCreateTimerFlow: mtTimerManager.timersSync returned no timer with matching timerID: no timers to delete.", v17, 2u);
      swift_slowDealloc();
    }

    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v13;
    *uint64_t v13 = v0;
    uint64_t v14 = sub_111D1C;
    goto LABEL_11;
  }
  uint64_t v5 = v4;
  id v6 = sub_10F7D8();

  *(void *)(v0 + 376) = v6;
  id v7 = v6;
  [v7 state];
  uint64_t v8 = sub_140F70();
  if (v8 == sub_140F70())
  {

    if (qword_17B390 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_141170();
    sub_33D8(v9, (uint64_t)qword_180328);
    uint64_t v10 = sub_141160();
    os_log_type_t v11 = sub_141480();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "UndoCreateTimerFlow: Timer has an unknown state (meaning there's no timer set on phone): No timers to delete.", v12, 2u);
      swift_slowDealloc();
    }

    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v13;
    *uint64_t v13 = v0;
    uint64_t v14 = sub_112584;
LABEL_11:
    v13[1] = v14;
    return sub_116AC0();
  }
  char v19 = *(unsigned char *)(v0 + 432);
  uint64_t v20 = *(void *)(v0 + 128);
  uint64_t v21 = swift_allocObject();
  *(void *)(v0 + 384) = v21;
  *(unsigned char *)(v21 + 16) = 1;
  uint64_t v22 = swift_task_alloc();
  *(void *)(v0 + 392) = v22;
  *(unsigned char *)(v22 + 16) = v19;
  *(void *)(v22 + 24) = v20;
  *(void *)(v22 + 32) = v21;
  *(void *)(v22 + 40) = v0 + 104;
  os_log_type_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v23;
  *os_log_type_t v23 = v0;
  v23[1] = sub_111E18;
  return withCheckedContinuation<A>(isolation:function:_:)(v23, 0, 0, 0x2865747563657865, 0xE900000000000029, sub_117F1C, v22, (char *)&type metadata for () + 8);
}

uint64_t sub_111D1C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_111258, 0, 0);
}

uint64_t sub_111E18()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_111F30, 0, 0);
}

uint64_t sub_111F30()
{
  uint64_t v1 = v0[48];
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    unint64_t v2 = (void *)swift_task_alloc();
    v0[51] = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_11207C;
    uint64_t v3 = v0[47];
    return sub_1132C4(v3);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[25] + 104))(v0[26], enum case for SiriTimeEventSender.ReasonDescription.failedToDeleteTimer(_:), v0[24]);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[52] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_112338;
    uint64_t v6 = v0[26];
    return sub_115634(v6);
  }
}

uint64_t sub_11207C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_112178, 0, 0);
}

uint64_t sub_112178()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 128) + OBJC_IVAR____TtC23TimerFlowDelegatePlugin19UndoCreateTimerFlow_followupPluginAction;
  swift_beginAccess();
  sub_8FE8(v4, v3, &qword_17D740);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_904C(*(void *)(v0 + 136), &qword_17D740);
    uint64_t v5 = *(void **)(v0 + 376);
    sub_13EF00();
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 376);
    uint64_t v8 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 144);
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v7, *(void *)(v0 + 136), v9);
    sub_13EF10();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_112338()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208);
  uint64_t v2 = *(void *)(*(void *)v0 + 200);
  uint64_t v3 = *(void *)(*(void *)v0 + 192);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_112490, 0, 0);
}

uint64_t sub_112490()
{
  uint64_t v1 = *(void **)(v0 + 376);
  sub_13EF00();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_112584()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_112680, 0, 0);
}

uint64_t sub_112680()
{
  uint64_t v1 = *(void **)(v0 + 376);
  sub_13EF00();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_112768(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_5830(&qword_1804E0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  if (a2)
  {
    id v13 = [*(id *)(a3 + 72) removeTimer:*a5];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
      v29((char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
      uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
      uint64_t v30 = a4;
      uint64_t v28 = v15 | 7;
      uint64_t v16 = swift_allocObject();
      id v27 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
      v27(v16 + ((v15 + 16) & ~v15), (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
      unint64_t v35 = sub_118160;
      uint64_t v36 = v16;
      aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      v26[1] = &v33;
      uint64_t v33 = sub_1207B0;
      unint64_t v34 = &unk_176690;
      uint64_t v17 = _Block_copy(&aBlock);
      id v18 = v14;
      swift_release();
      id v19 = [v18 addSuccessBlock:v17];
      _Block_release(v17);

      v29((char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v30;
      v27(v20 + ((v15 + 24) & ~v15), (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
      unint64_t v35 = sub_1182C0;
      uint64_t v36 = v20;
      aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      uint64_t v33 = sub_1207B8;
      unint64_t v34 = &unk_1766E0;
      uint64_t v21 = _Block_copy(&aBlock);
      swift_retain();
      id v22 = v18;
      swift_release();
      id v23 = [v22 addFailureBlock:v21];

      _Block_release(v21);
    }
  }
  else
  {
    sub_3410(a3 + 32, (uint64_t)&aBlock);
    sub_90A8(&aBlock, (uint64_t)v34);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a4;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v25 + v24, (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    swift_retain();
    sub_140EB0();
    swift_release();
    _s20HandleIntentStrategyVwxx_1((uint64_t)&aBlock);
  }
}

uint64_t sub_112B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140DD0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v29 - v9;
  uint64_t v11 = sub_5830(&qword_17DA30);
  __chkstk_darwin(v11);
  id v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8FE8(a1, (uint64_t)v13, &qword_17DA30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v14(v10, v13, v4);
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = 0;
    if (qword_17B390 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_141170();
    sub_33D8(v15, (uint64_t)qword_180328);
    uint64_t v16 = sub_141160();
    os_log_type_t v17 = sub_141470();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "UndoCreateTimerFlow: delete failed", v18, 2u);
      swift_slowDealloc();
    }

    uint64_t v19 = sub_140AB0();
    v29[3] = v19;
    v29[4] = (uint64_t)&protocol witness table for ABCReport;
    uint64_t v20 = sub_187EC(v29);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_118338(&qword_17DA38, (void (*)(uint64_t))&type metadata accessor for TimerOperationError);
    swift_allocError();
    v14(v21, v8, v4);
    *uint64_t v20 = sub_13E450();
    uint64_t v22 = enum case for ErrorSubType.managerReturnedError(_:);
    uint64_t v23 = sub_1407D0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v20, v22, v23);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, enum case for ABCReport.timerUndoHandle(_:), v19);
    sub_140820();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v29);
    swift_errorRelease();
  }
  else
  {
    if (qword_17B390 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_141170();
    sub_33D8(v24, (uint64_t)qword_180328);
    uint64_t v25 = sub_141160();
    os_log_type_t v26 = sub_141480();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "UndoCreateTimerFlow: timer stopped completion", v27, 2u);
      swift_slowDealloc();
    }
  }
  sub_5830(&qword_1804E0);
  return sub_1413C0();
}

uint64_t sub_112FE4()
{
  if (qword_17B390 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_141170();
  sub_33D8(v0, (uint64_t)qword_180328);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "UndoCreateTimerFlow: removed mtTimer successfully", v3, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_1804E0);
  return sub_1413C0();
}

uint64_t sub_1130D8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(unsigned char *)(a2 + 16) = 0;
  if (qword_17B390 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_141170();
  sub_33D8(v3, (uint64_t)qword_180328);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141480();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    sub_1415C0();
    *uint64_t v7 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v4, v5, "UndoCreateTimerFlow: remove mtTimer failed with error %@", v6, 0xCu);
    sub_5830(&qword_17D478);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_5830(&qword_1804E0);
  return sub_1413C0();
}

uint64_t sub_1132C4(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  sub_5830(&qword_17C068);
  v2[14] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v2[15] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v2[16] = swift_task_alloc();
  uint64_t v3 = sub_140660();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v4 = sub_13ED60();
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v2[26] = v6;
  v2[27] = *(void *)(v6 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v2[29] = v7;
  v2[30] = *(void *)(v7 - 8);
  v2[31] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[32] = v8;
  v2[33] = *(void *)(v8 - 8);
  v2[34] = swift_task_alloc();
  uint64_t v9 = sub_13EFF0();
  v2[35] = v9;
  v2[36] = *(void *)(v9 - 8);
  v2[37] = swift_task_alloc();
  return _swift_task_switch(sub_11363C, 0, 0);
}

uint64_t sub_11363C()
{
  if (qword_17B390 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[23], (uint64_t)qword_180328);
  v0[38] = v1;
  uint64_t v15 = v1;
  os_log_type_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoCreateTimerFlow.makeAndPublishSuccess() called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[27];
  uint64_t v5 = v0[28];
  uint64_t v8 = v0[25];
  uint64_t v7 = v0[26];
  uint64_t v9 = v0[24];
  uint64_t v14 = v0[23];

  sub_13EFE0();
  sub_13EC50();
  uint64_t v10 = sub_174C0(0, 0);
  v0[39] = v10;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v15, v14);
  mach_absolute_time();
  sub_1406B0();
  sub_5830(&qword_17BF00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_142E80;
  *(void *)(v11 + 32) = v10;
  uint64_t v16 = v11;
  sub_141330();
  v0[40] = v16;
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[41] = (uint64_t)v12;
  void *v12 = v0;
  v12[1] = sub_113898;
  return sub_A6B7C(v16);
}

uint64_t sub_113898(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[42] = a1;
  v3[43] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    return _swift_task_switch(sub_114138, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v3[44] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_113A5C;
    uint64_t v6 = v3[37];
    uint64_t v7 = v3[34];
    uint64_t v8 = v3[31];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v3 + 2, v7, v6, v8, 0);
  }
}

uint64_t sub_113A5C()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1145AC;
  }
  else {
    os_log_type_t v2 = sub_113B70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_113B70()
{
  sub_13F170();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  sub_90A8(v0 + 7, v1);
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[46] = v3;
  *os_log_type_t v3 = v0;
  v3[1] = sub_113C3C;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 2, v1, v2);
}

uint64_t sub_113C3C()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_114A30;
  }
  else {
    uint64_t v2 = sub_113D50;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_113D50()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ActivityType.completed(_:), v3);
  if (qword_17B398 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v7 = v0[16];
  uint64_t v6 = v0[17];
  uint64_t v8 = sub_33D8(v6, (uint64_t)qword_181220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8, v6);
  uint64_t v9 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  if (qword_17B3A0 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)v0[42];
  uint64_t v34 = v0[37];
  uint64_t v32 = v0[36];
  uint64_t v33 = v0[35];
  uint64_t v10 = v0[33];
  uint64_t v30 = v0[32];
  uint64_t v31 = v0[34];
  uint64_t v11 = v0[30];
  uint64_t v28 = v0[29];
  uint64_t v29 = v0[31];
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[18];
  uint64_t v23 = v0[19];
  uint64_t v24 = v0[22];
  uint64_t v14 = v0[16];
  uint64_t v26 = v0[17];
  uint64_t v27 = v0[20];
  uint64_t v16 = v0[14];
  uint64_t v15 = v0[15];
  uint64_t v17 = sub_140670();
  uint64_t v18 = sub_33D8(v17, (uint64_t)qword_181238);
  uint64_t v19 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v15, v18, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v17);
  uint64_t v20 = sub_140650();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
  sub_140640();

  swift_release();
  sub_904C(v16, &qword_17C068);
  sub_904C(v15, &qword_17C070);
  sub_904C(v14, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v23, v26);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v24, v27);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v28);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v31, v30);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_114138()
{
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  (*(void (**)(void, void, void))(v0[21] + 104))(v0[22], enum case for ActivityType.failed(_:), v0[20]);
  if (qword_17B398 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v5 = sub_33D8(v3, (uint64_t)qword_181220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v5, v3);
  uint64_t v6 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_17B3A0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[21];
  uint64_t v8 = v0[19];
  uint64_t v33 = v0[20];
  uint64_t v9 = v0[18];
  uint64_t v31 = v0[22];
  uint64_t v32 = v0[17];
  uint64_t v11 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v12 = v0[14];
  uint64_t v13 = sub_140670();
  uint64_t v14 = sub_33D8(v13, (uint64_t)qword_181238);
  uint64_t v15 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v13);
  uint64_t v16 = enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:);
  uint64_t v17 = sub_140650();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v12, v16, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
  sub_140640();
  sub_904C(v12, &qword_17C068);
  sub_904C(v11, &qword_17C070);
  sub_904C(v10, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v32);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v31, v33);
  uint64_t v19 = sub_141160();
  os_log_type_t v20 = sub_141470();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v23 = v0[36];
  uint64_t v22 = v0[37];
  uint64_t v25 = v0[34];
  uint64_t v24 = v0[35];
  uint64_t v27 = v0[32];
  uint64_t v26 = v0[33];
  if (v21)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v19, v20, "UndoCreateTimerFlow: Error publishing Success output.", v28, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_1145AC()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(void, void, void))(*(void *)(v0 + 168) + 104))(*(void *)(v0 + 176), enum case for ActivityType.failed(_:), *(void *)(v0 + 160));
  if (qword_17B398 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v8 = sub_33D8(v6, (uint64_t)qword_181220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v8, v6);
  uint64_t v9 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  if (qword_17B3A0 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 152);
  uint64_t v36 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v34 = *(void *)(v0 + 176);
  uint64_t v35 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v16 = sub_140670();
  uint64_t v17 = sub_33D8(v16, (uint64_t)qword_181238);
  uint64_t v18 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v14, v17, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v16);
  uint64_t v19 = enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:);
  uint64_t v20 = sub_140650();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v15, v19, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v20);
  sub_140640();
  sub_904C(v15, &qword_17C068);
  sub_904C(v14, &qword_17C070);
  sub_904C(v13, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v35);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v34, v36);
  uint64_t v22 = sub_141160();
  os_log_type_t v23 = sub_141470();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v26 = *(void *)(v0 + 288);
  uint64_t v25 = *(void *)(v0 + 296);
  uint64_t v28 = *(void *)(v0 + 272);
  uint64_t v27 = *(void *)(v0 + 280);
  uint64_t v30 = *(void *)(v0 + 256);
  uint64_t v29 = *(void *)(v0 + 264);
  if (v24)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_0, v22, v23, "UndoCreateTimerFlow: Error publishing Success output.", v31, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_114A30()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);

  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  (*(void (**)(void, void, void))(*(void *)(v0 + 168) + 104))(*(void *)(v0 + 176), enum case for ActivityType.failed(_:), *(void *)(v0 + 160));
  if (qword_17B398 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v8 = sub_33D8(v6, (uint64_t)qword_181220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v8, v6);
  uint64_t v9 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  if (qword_17B3A0 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 152);
  uint64_t v36 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v34 = *(void *)(v0 + 176);
  uint64_t v35 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v16 = sub_140670();
  uint64_t v17 = sub_33D8(v16, (uint64_t)qword_181238);
  uint64_t v18 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v14, v17, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v16);
  uint64_t v19 = enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:);
  uint64_t v20 = sub_140650();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v15, v19, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v20);
  sub_140640();
  sub_904C(v15, &qword_17C068);
  sub_904C(v14, &qword_17C070);
  sub_904C(v13, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v35);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v34, v36);
  uint64_t v22 = sub_141160();
  os_log_type_t v23 = sub_141470();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v26 = *(void *)(v0 + 288);
  uint64_t v25 = *(void *)(v0 + 296);
  uint64_t v28 = *(void *)(v0 + 272);
  uint64_t v27 = *(void *)(v0 + 280);
  uint64_t v30 = *(void *)(v0 + 256);
  uint64_t v29 = *(void *)(v0 + 264);
  if (v24)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_0, v22, v23, "UndoCreateTimerFlow: Error publishing Success output.", v31, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t UndoCreateTimerFlow.deinit()
{
  swift_release();
  swift_release();
  _s20HandleIntentStrategyVwxx_1(v0 + 32);

  swift_bridgeObjectRelease();
  sub_904C(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin19UndoCreateTimerFlow_followupPluginAction, &qword_17D740);
  return v0;
}

uint64_t UndoCreateTimerFlow.__deallocating_deinit()
{
  swift_release();
  swift_release();
  _s20HandleIntentStrategyVwxx_1(v0 + 32);

  swift_bridgeObjectRelease();
  sub_904C(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin19UndoCreateTimerFlow_followupPluginAction, &qword_17D740);

  return swift_deallocClassInstance();
}

uint64_t sub_114FB8()
{
  return UndoCreateTimerFlow.on(input:)() & 1;
}

uint64_t sub_114FE0()
{
  return sub_13EA80();
}

uint64_t sub_115040(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_159A4;
  return UndoCreateTimerFlow.execute()(a1);
}

uint64_t sub_1150DC()
{
  type metadata accessor for UndoCreateTimerFlow();

  return sub_13EAB0();
}

void *sub_115118(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_140590();
  __chkstk_darwin(v6 - 8);
  uint64_t v11 = sub_140F30();
  uint64_t v12 = &protocol witness table for SiriTimerManagerImpl;
  *(void *)&long long v10 = a1;
  type metadata accessor for DeleteTimerCATs_Async();
  sub_140580();
  a3[2] = sub_140470();
  type metadata accessor for DeleteTimerCATPatternsExecutor(0);
  sub_140580();
  a3[3] = sub_140470();
  a3[10] = 0;
  a3[11] = 0;
  uint64_t v7 = (char *)a3 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin19UndoCreateTimerFlow_followupPluginAction;
  uint64_t v8 = sub_13ED80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_3498(&v10, (uint64_t)(a3 + 4));
  a3[9] = a2;
  return a3;
}

uint64_t sub_115258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17D740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void (**sub_1152C0(unint64_t a1, uint64_t a2))(char *, uint64_t)
{
  uint64_t v3 = v2;
  uint64_t v33 = sub_13E4B0();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_13E550();
  uint64_t v9 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_1417D0())
  {
    uint64_t v28 = v3;
    uint64_t v29 = v12;
    uint64_t v31 = (void (**)(char *, uint64_t))(v9 + 8);
    unint64_t v32 = a1 & 0xC000000000000001;
    uint64_t v30 = v6 + 1;
    uint64_t v3 = 4;
    while (1)
    {
      uint64_t v9 = v3 - 4;
      uint64_t v13 = v32
          ? (void (**)(char *, uint64_t))sub_1416A0()
          : (void (**)(char *, uint64_t))*(id *)(a1 + 8 * v3);
      uint64_t v6 = v13;
      uint64_t v14 = v3 - 3;
      if (__OFADD__(v9, 1)) {
        break;
      }
      id v15 = [v13 timerID];
      sub_13E530();

      uint64_t v16 = sub_13E520();
      uint64_t v18 = v17;
      (*v31)(v11, v34);
      uint64_t v19 = *(void *)(a2 + 88);
      if (v19)
      {
        if (v16 == *(void *)(a2 + 80) && v19 == v18)
        {
LABEL_21:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v6;
        }
        char v20 = sub_141AA0();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_22;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v21 = objc_msgSend(v6, "timerURL", v28);
      sub_13E490();

      uint64_t v22 = sub_13E470();
      uint64_t v24 = v23;
      (*v30)(v8, v33);
      uint64_t v25 = *(void *)(a2 + 88);
      if (v25)
      {
        if (v22 == *(void *)(a2 + 80) && v25 == v24) {
          goto LABEL_21;
        }
        char v26 = sub_141AA0();
        swift_bridgeObjectRelease();
        if (v26)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          return v6;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v3;
      if (v14 == v29) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_115634(uint64_t a1)
{
  v1[12] = a1;
  sub_140590();
  v1[13] = swift_task_alloc();
  uint64_t v2 = sub_141170();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  uint64_t v3 = sub_140680();
  v1[17] = v3;
  v1[18] = *(void *)(v3 - 8);
  v1[19] = swift_task_alloc();
  uint64_t v4 = sub_1406A0();
  v1[20] = v4;
  v1[21] = *(void *)(v4 - 8);
  v1[22] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v1[23] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v1[24] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v1[25] = swift_task_alloc();
  uint64_t v5 = sub_140660();
  v1[26] = v5;
  v1[27] = *(void *)(v5 - 8);
  v1[28] = swift_task_alloc();
  uint64_t v6 = sub_13ED60();
  v1[29] = v6;
  v1[30] = *(void *)(v6 - 8);
  v1[31] = swift_task_alloc();
  uint64_t v7 = sub_13EFF0();
  v1[32] = v7;
  v1[33] = *(void *)(v7 - 8);
  v1[34] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v1[35] = v8;
  v1[36] = *(void *)(v8 - 8);
  v1[37] = swift_task_alloc();
  return _swift_task_switch(sub_1159D8, 0, 0);
}

uint64_t sub_1159D8()
{
  if (qword_17B390 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[14], (uint64_t)qword_180328);
  v0[38] = v1;
  uint64_t v37 = v1;
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoCreateTimerFlow.makeAndPublishGenericFailure() called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[30];
  uint64_t v5 = v0[31];
  uint64_t v7 = v0[29];

  sub_13EC80();
  sub_13EFE0();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for ActivityType.failed(_:), v7);
  if (qword_17B398 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[27];
  uint64_t v8 = v0[28];
  uint64_t v11 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v12 = sub_33D8(v10, (uint64_t)qword_181220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v12, v10);
  uint64_t v13 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  if (qword_17B3A0 != -1) {
    swift_once();
  }
  uint64_t v14 = v0[30];
  uint64_t v15 = v0[27];
  uint64_t v29 = v0[28];
  uint64_t v30 = v0[31];
  uint64_t v16 = v0[24];
  uint64_t v28 = v0[25];
  uint64_t v17 = v0[23];
  uint64_t v18 = v0[18];
  uint64_t v31 = v0[26];
  uint64_t v32 = v0[19];
  uint64_t v33 = v0[17];
  uint64_t v34 = v0[29];
  uint64_t v19 = v0[15];
  uint64_t v35 = v0[16];
  uint64_t v36 = v0[14];
  uint64_t v20 = v0[12];
  uint64_t v21 = sub_140670();
  uint64_t v22 = sub_33D8(v21, (uint64_t)qword_181238);
  uint64_t v23 = *(void *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v16, v22, v21);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v21);
  uint64_t v24 = sub_140650();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v17, v20, v24);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
  sub_140640();
  sub_904C(v17, &qword_17C068);
  sub_904C(v16, &qword_17C070);
  sub_904C(v28, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v29, v31);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v30, v34);
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v32, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v35, v37, v36);
  mach_absolute_time();
  sub_1406B0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[39] = sub_140470();
  os_log_type_t v38 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  char v26 = (void *)swift_task_alloc();
  v0[40] = v26;
  void *v26 = v0;
  v26[1] = sub_115ED8;
  return ((uint64_t (*)(uint64_t, unint64_t, void *))v38)(0x73614272656D6974, 0xEF726F7272652365, _swiftEmptyArrayStorage);
}

uint64_t sub_115ED8(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[41] = a1;
  v3[42] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_116190, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (void *)swift_task_alloc();
    v3[43] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_11607C;
    uint64_t v6 = v3[37];
    uint64_t v7 = v3[34];
    uint64_t v8 = v3[22];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v3 + 2, v6, v7, v8, 0);
  }
}

uint64_t sub_11607C()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1166D0;
  }
  else {
    uint64_t v2 = sub_11637C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_116190()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141470();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v8 = v0[36];
  uint64_t v7 = v0[37];
  uint64_t v10 = v0[34];
  uint64_t v9 = v0[35];
  uint64_t v12 = v0[32];
  uint64_t v11 = v0[33];
  if (v6)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v4, v5, "UndoCreateTimerFlow: Error publishing GenericFailure.", v13, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_11637C()
{
  sub_13F170();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  sub_90A8(v0 + 7, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[45] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_116448;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 2, v1, v2);
}

uint64_t sub_116448()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1168BC;
  }
  else {
    uint64_t v2 = sub_11655C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_11655C()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v11 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 160);

  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1166D0()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141470();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v8 = *(void *)(v0 + 288);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v10 = *(void *)(v0 + 272);
  uint64_t v9 = *(void *)(v0 + 280);
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v11 = *(void *)(v0 + 264);
  if (v6)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v4, v5, "UndoCreateTimerFlow: Error publishing GenericFailure.", v13, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1168BC()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);

  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141470();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v8 = *(void *)(v0 + 288);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v10 = *(void *)(v0 + 272);
  uint64_t v9 = *(void *)(v0 + 280);
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v11 = *(void *)(v0 + 264);
  if (v6)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v4, v5, "UndoCreateTimerFlow: Error publishing GenericFailure.", v13, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_116AC0()
{
  sub_140590();
  v0[12] = swift_task_alloc();
  uint64_t v1 = sub_141170();
  v0[13] = v1;
  v0[14] = *(void *)(v1 - 8);
  v0[15] = swift_task_alloc();
  uint64_t v2 = sub_140680();
  v0[16] = v2;
  v0[17] = *(void *)(v2 - 8);
  v0[18] = swift_task_alloc();
  uint64_t v3 = sub_1406A0();
  v0[19] = v3;
  v0[20] = *(void *)(v3 - 8);
  v0[21] = swift_task_alloc();
  uint64_t v4 = sub_13EFF0();
  v0[22] = v4;
  v0[23] = *(void *)(v4 - 8);
  v0[24] = swift_task_alloc();
  uint64_t v5 = sub_13ECE0();
  v0[25] = v5;
  v0[26] = *(void *)(v5 - 8);
  v0[27] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v0[28] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v0[29] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v0[30] = swift_task_alloc();
  uint64_t v6 = sub_140660();
  v0[31] = v6;
  v0[32] = *(void *)(v6 - 8);
  v0[33] = swift_task_alloc();
  uint64_t v7 = sub_13ED60();
  v0[34] = v7;
  v0[35] = *(void *)(v7 - 8);
  v0[36] = swift_task_alloc();
  return _swift_task_switch(sub_116E60, 0, 0);
}

uint64_t sub_116E60()
{
  if (qword_17B390 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[13], (uint64_t)qword_180328);
  v0[37] = v1;
  uint64_t v37 = v1;
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "UndoCreateTimerFlow.makeAndPublishFailureResponseTimerNotFound() called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[35];
  uint64_t v5 = v0[36];
  uint64_t v7 = v0[34];

  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for ActivityType.failed(_:), v7);
  if (qword_17B398 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[32];
  uint64_t v8 = v0[33];
  uint64_t v11 = v0[30];
  uint64_t v10 = v0[31];
  uint64_t v12 = sub_33D8(v10, (uint64_t)qword_181220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v12, v10);
  uint64_t v13 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  if (qword_17B3A0 != -1) {
    swift_once();
  }
  uint64_t v14 = v0[35];
  uint64_t v15 = v0[32];
  uint64_t v29 = v0[33];
  uint64_t v30 = v0[36];
  uint64_t v16 = v0[29];
  uint64_t v28 = v0[30];
  uint64_t v17 = v0[28];
  uint64_t v31 = v0[31];
  uint64_t v32 = v0[34];
  uint64_t v18 = v0[17];
  uint64_t v33 = v0[18];
  uint64_t v34 = v0[16];
  uint64_t v19 = v0[14];
  uint64_t v35 = v0[15];
  uint64_t v36 = v0[13];
  uint64_t v20 = sub_140670();
  uint64_t v21 = sub_33D8(v20, (uint64_t)qword_181238);
  uint64_t v22 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v16, v21, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v20);
  uint64_t v23 = enum case for SiriTimeEventSender.ReasonDescription.timerNotFound(_:);
  uint64_t v24 = sub_140650();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v17, v23, v24);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
  sub_140640();
  sub_904C(v17, &qword_17C068);
  sub_904C(v16, &qword_17C070);
  sub_904C(v28, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v29, v31);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v30, v32);
  sub_13EC80();
  sub_13EFE0();
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v33, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v35, v37, v36);
  mach_absolute_time();
  sub_1406B0();
  type metadata accessor for TimerBaseCATPatternsExecutor(0);
  sub_140580();
  v0[38] = sub_140470();
  os_log_type_t v38 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  char v26 = (void *)swift_task_alloc();
  v0[39] = (uint64_t)v26;
  void *v26 = v0;
  v26[1] = sub_117368;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v38)(0xD000000000000012, 0x8000000000147BE0, _swiftEmptyArrayStorage);
}

uint64_t sub_117368(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_117620, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (void *)swift_task_alloc();
    v3[42] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_11750C;
    uint64_t v6 = v3[27];
    uint64_t v7 = v3[24];
    uint64_t v8 = v3[21];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v3 + 2, v6, v7, v8, 0);
  }
}

uint64_t sub_11750C()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_117B48;
  }
  else {
    uint64_t v2 = sub_1177F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_117620()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  uint64_t v8 = v0[20];
  uint64_t v7 = v0[21];
  uint64_t v9 = v0[19];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v10 = sub_141160();
  os_log_type_t v11 = sub_141470();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "UndoCreateTimerFlow: Error publishing FailureResponseTimerNotFound.", v12, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1177F4()
{
  sub_13F170();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  sub_90A8(v0 + 7, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[44] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1178C0;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 2, v1, v2);
}

uint64_t sub_1178C0()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_117D1C;
  }
  else {
    uint64_t v2 = sub_1179D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1179D4()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v11 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 152);

  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_117B48()
{
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v9 = *(void *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v10 = sub_141160();
  os_log_type_t v11 = sub_141470();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "UndoCreateTimerFlow: Error publishing FailureResponseTimerNotFound.", v12, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_117D1C()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 152);

  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v2);
  _s20HandleIntentStrategyVwxx_1(v0 + 56);
  uint64_t v9 = sub_141160();
  os_log_type_t v10 = sub_141470();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "UndoCreateTimerFlow: Error publishing FailureResponseTimerNotFound.", v11, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_117F0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_117F1C(uint64_t a1)
{
  sub_112768(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_117F2C()
{
  return type metadata accessor for UndoCreateTimerFlow();
}

void sub_117F34()
{
  sub_117FF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_117FF8()
{
  if (!qword_17D800)
  {
    sub_13ED80();
    unint64_t v0 = sub_1415B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_17D800);
    }
  }
}

uint64_t sub_118054(uint64_t a1)
{
  sub_5830(&qword_1804E0);
  uint64_t v3 = *(void *)(v1 + 16);

  return sub_112B5C(a1, v3);
}

uint64_t sub_1180CC()
{
  uint64_t v1 = sub_5830(&qword_1804E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_118160()
{
  sub_5830(&qword_1804E0);

  return sub_112FE4();
}

uint64_t sub_1181D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1181E4()
{
  return swift_release();
}

uint64_t sub_1181F0()
{
  uint64_t v1 = sub_5830(&qword_1804E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1182C0(uint64_t a1)
{
  sub_5830(&qword_1804E0);
  uint64_t v3 = *(void *)(v1 + 16);

  return sub_1130D8(a1, v3);
}

uint64_t sub_118338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_11838C(char a1)
{
  uint64_t v2 = sub_5830(&qword_180500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_13F580();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - v13;
  sub_13EFE0();
  sub_11AADC(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_904C((uint64_t)v4, &qword_180500);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
    if (qword_17B3A8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_141170();
    sub_33D8(v15, (uint64_t)qword_1804E8);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v16(v12, v14, v5);
    uint64_t v17 = sub_141160();
    os_log_type_t v18 = sub_141480();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      int v29 = v19;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v32 = v30;
      uint64_t v27 = v21;
      os_log_t v28 = v17;
      *(_DWORD *)uint64_t v21 = 136315138;
      v16(v9, v12, v5);
      uint64_t v22 = sub_141260();
      uint64_t v31 = sub_58C0(v22, v23, &v32);
      sub_1415C0();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
      v24(v12, v5);
      os_log_t v25 = v28;
      _os_log_impl(&dword_0, v28, (os_log_type_t)v29, "Submitting NLv4 dialog act: %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
      v24(v12, v5);
    }
    sub_13EF20();
    v24(v14, v5);
  }
  sub_13EFA0();
  sub_13EF70();
  sub_13EF90();
  sub_13EFC0();
  return sub_13EFB0();
}

uint64_t sub_11877C@<X0>(uint64_t a1@<X8>)
{
  return sub_11A178((void (*)(void))&type metadata accessor for UsoTaskBuilder_create_common_Timer, (void (*)(void))&UsoTaskBuilder_create_common_Timer.init(), (void (*)(uint64_t))&dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:), a1);
}

uint64_t sub_1187C4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v141 = sub_13F580();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v139 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_13F5B0();
  uint64_t v138 = *(void *)(v142 - 8);
  uint64_t v5 = __chkstk_darwin(v142);
  uint64_t v135 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v137 = (char *)&v116 - v7;
  uint64_t v147 = sub_13FBE0();
  uint64_t v146 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v145 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_13F430();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v148 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::OpaquePointer v151 = (char *)&v116 - v13;
  __chkstk_darwin(v12);
  uint64_t v157 = (char *)&v116 - v14;
  uint64_t v15 = sub_13F540();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v161 = v15;
  uint64_t v162 = v16;
  uint64_t v17 = __chkstk_darwin(v15);
  os_log_type_t v150 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v152 = (char *)&v116 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v154 = (char *)&v116 - v22;
  __chkstk_darwin(v21);
  id v163 = (char *)&v116 - v23;
  uint64_t v24 = sub_13F500();
  uint64_t v159 = *(void *)(v24 - 8);
  uint64_t v160 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v134 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v149 = (char *)&v116 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v143 = (char *)&v116 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  unint64_t v155 = (unint64_t)&v116 - v32;
  __chkstk_darwin(v31);
  id v164 = (char *)&v116 - v33;
  unint64_t v158 = (void *)sub_13F730();
  uint64_t v165 = (void *)*(v158 - 1);
  uint64_t v34 = __chkstk_darwin(v158);
  uint64_t v153 = (char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v116 - v36;
  uint64_t v38 = sub_5830(&qword_17F5C0);
  __chkstk_darwin(v38 - 8);
  uint64_t v40 = (char *)&v116 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = a2;
  sub_11838C(a1);
  uint64_t v41 = sub_11CA10((unsigned int *)&enum case for UsoEntity_common_UserEntity.DefinedValues.common_UserEntity_Everywhere(_:));
  uint64_t v42 = sub_11CA10((unsigned int *)&enum case for UsoEntity_common_UserEntity.DefinedValues.common_UserEntity_Here(_:));
  unint64_t v168 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v43 = sub_5830(&qword_17BF00);
  uint64_t v44 = swift_allocObject();
  long long v166 = xmmword_142E80;
  *(_OWORD *)(v44 + 16) = xmmword_142E80;
  *(void *)(v44 + 32) = v41;
  uint64_t v167 = v44;
  sub_141330();
  uint64_t v45 = sub_13F8E0();
  uint64_t v46 = *(void *)(v45 - 8);
  os_log_type_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
  uint64_t v48 = v46 + 56;
  v47(v40, 1, 1, v45);
  swift_retain();
  uint64_t v49 = sub_13F8A0();
  swift_bridgeObjectRelease();
  sub_904C((uint64_t)v40, &qword_17F5C0);
  uint64_t v144 = v43;
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = v166;
  *(void *)(v50 + 32) = v42;
  uint64_t v167 = v50;
  sub_141330();
  v47(v40, 1, 1, v45);
  swift_retain();
  uint64_t v51 = sub_13F8A0();
  swift_bridgeObjectRelease();
  sub_904C((uint64_t)v40, &qword_17F5C0);
  unint64_t v156 = v37;
  sub_140220();
  uint64_t v124 = v48;
  uint64_t v125 = v40;
  os_log_type_t v126 = v47;
  uint64_t v127 = v45;
  uint64_t v131 = v41;
  uint64_t v130 = v42;
  uint64_t v133 = v51;
  uint64_t v132 = v49;
  uint64_t v52 = sub_5595C(0, &qword_180530);
  uint64_t v53 = v156;
  uint64_t v129 = v52;
  uint64_t v54 = (void *)sub_1414B0();
  uint64_t v55 = (void (*)(char *, void *))v165[1];
  ++v165;
  uint64_t v128 = v55;
  v55(v53, v158);
  id v56 = objc_allocWithZone((Class)SIRINLUUserStatedTask);
  unint64_t v156 = (char *)v54;
  id v57 = [v56 initWithTask:v54];
  sub_1412E0();
  if (*(void *)((char *)&dword_10 + (v168 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v168 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_141350();
  sub_141380();
  sub_141330();
  uint64_t v58 = v164;
  sub_13F4F0();
  int v59 = v163;
  sub_13F530();
  sub_13F5D0();
  uint64_t v60 = v159;
  uint64_t v61 = v160;
  id v123 = v57;
  sub_13F520();
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
  uint64_t v157 = (char *)(v162 + 16);
  uint64_t v122 = v62;
  v62(v154, v59, v161);
  sub_13F4D0();
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v121 = v60 + 16;
  uint64_t v120 = v63;
  v63((char *)v155, v58, v61);
  unint64_t v64 = sub_E08BC(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v66 = *(void *)(v64 + 16);
  unint64_t v65 = *(void *)(v64 + 24);
  uint64_t v67 = v61;
  if (v66 >= v65 >> 1) {
    unint64_t v64 = sub_E08BC(v65 > 1, v66 + 1, 1, v64);
  }
  uint64_t v68 = v153;
  *(void *)(v64 + 16) = v66 + 1;
  uint64_t v69 = *(void (**)(unint64_t, unint64_t, uint64_t))(v60 + 32);
  unint64_t v70 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v71 = *(void *)(v60 + 72);
  unint64_t v72 = v64 + v70 + v71 * v66;
  unint64_t v73 = v64;
  v69(v72, v155, v67);
  sub_140220();
  uint64_t v117 = v71;
  uint64_t v118 = v60 + 32;
  unint64_t v119 = v70;
  uint64_t v153 = (char *)v69;
  unint64_t v155 = v73;
  uint64_t v74 = (void *)sub_1414B0();
  v128(v68, v158);
  id v75 = objc_allocWithZone((Class)SIRINLUUserStatedTask);
  uint64_t v165 = v74;
  uint64_t v76 = [v75 initWithTask:v74];
  sub_1412E0();
  if (*(void *)((char *)&dword_10 + (v168 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v168 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_141350();
  sub_141380();
  sub_141330();
  swift_bridgeObjectRelease();
  uint64_t v77 = v152;
  sub_13F530();
  sub_13F5D0();
  uint64_t v78 = v161;
  uint64_t v79 = v164;
  unint64_t v158 = v76;
  sub_13F520();
  v122(v154, v77, v78);
  sub_13F4D0();
  uint64_t v80 = v143;
  v120(v143, v79, v160);
  uint64_t v81 = v155;
  unint64_t v83 = *(void *)(v155 + 16);
  unint64_t v82 = *(void *)(v155 + 24);
  uint64_t v84 = v78;
  if (v83 >= v82 >> 1) {
    uint64_t v81 = sub_E08BC(v82 > 1, v83 + 1, 1, v155);
  }
  uint64_t v85 = (void (*)(unint64_t, char *, uint64_t))v153;
  unint64_t v86 = v119;
  uint64_t v87 = v117;
  unint64_t v155 = v81;
  *(void *)(v81 + 16) = v83 + 1;
  v85(v81 + v86 + v83 * v87, v80, v160);
  sub_140150();
  swift_allocObject();
  uint64_t v88 = sub_140140();
  sub_13FE40();
  swift_allocObject();
  uint64_t v89 = sub_13FE30();
  sub_140030();
  swift_allocObject();
  sub_140020();
  uint64_t v90 = v146;
  uint64_t v91 = v145;
  uint64_t v92 = v147;
  (*(void (**)(char *, void, uint64_t))(v146 + 104))(v145, enum case for UsoEntity_common_Quantifier.DefinedValues.common_Quantifier_All(_:), v147);
  sub_140010();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
  swift_retain();
  sub_13FB30();
  swift_release();
  sub_13F680();
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = v166;
  *(void *)(v93 + 32) = v88;
  uint64_t v167 = v93;
  sub_141330();
  uint64_t v94 = (uint64_t)v125;
  v126(v125, 1, 1, v127);
  swift_retain();
  uint64_t v95 = sub_13F8A0();
  swift_bridgeObjectRelease();
  sub_904C(v94, &qword_17F5C0);
  uint64_t v96 = v149;
  sub_13F4F0();
  uint64_t v97 = v150;
  sub_13F530();
  sub_13F5D0();
  uint64_t v147 = v95;
  *(void *)&long long v166 = v88;
  sub_13F520();
  v122(v154, v97, v84);
  sub_13F4D0();
  uint64_t v98 = v134;
  v120(v134, v96, v160);
  uint64_t v99 = v155;
  unint64_t v101 = *(void *)(v155 + 16);
  unint64_t v100 = *(void *)(v155 + 24);
  Swift::OpaquePointer v151 = (char *)v89;
  if (v101 >= v100 >> 1) {
    uint64_t v99 = sub_E08BC(v100 > 1, v101 + 1, 1, v155);
  }
  uint64_t v102 = v141;
  uint64_t v103 = v139;
  uint64_t v104 = v138;
  uint64_t v105 = (void (*)(unint64_t, char *, uint64_t))v153;
  unint64_t v106 = v119;
  uint64_t v107 = v117;
  *(void *)(v99 + 16) = v101 + 1;
  v105(v99 + v106 + v101 * v107, v98, v160);
  uint64_t v108 = v137;
  sub_13F5A0();
  sub_13F590();
  sub_13F570();
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v135, v108, v142);
  sub_13F560();
  sub_5830(&qword_180538);
  uint64_t v109 = v140;
  unint64_t v110 = (*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_142D50;
  (*(void (**)(unint64_t, char *, uint64_t))(v109 + 16))(v111 + v110, v103, v102);
  sub_13EF60();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v103, v102);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v108, v142);
  uint64_t v112 = *(void (**)(char *, uint64_t))(v162 + 8);
  v112(v150, v84);
  uint64_t v113 = v160;
  uint64_t v114 = *(void (**)(char *, uint64_t))(v159 + 8);
  v114(v149, v160);
  v112(v152, v84);
  v112(v163, v84);
  return ((uint64_t (*)(char *, uint64_t))v114)(v164, v113);
}

uint64_t sub_119A84(unint64_t a1, int a2, char a3)
{
  LODWORD(v49) = a2;
  uint64_t v5 = sub_13E550();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  uint64_t v51 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_180500);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_13F580();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v47 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v44 - v15;
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v44 - v17;
  sub_13EFE0();
  sub_13EFA0();
  sub_13EF70();
  sub_13EF90();
  sub_5830(&qword_17F5D0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1434E0;
  *(void *)(v18 + 32) = 0xD00000000000001CLL;
  *(void *)(v18 + 40) = 0x8000000000147640;
  *(void *)(v18 + 48) = 0xD00000000000001BLL;
  *(void *)(v18 + 56) = 0x80000000001473A0;
  *(void *)(v18 + 64) = 0xD000000000000020;
  *(void *)(v18 + 72) = 0x800000000014AB20;
  *(void *)(v18 + 80) = 0xD00000000000001BLL;
  *(void *)(v18 + 88) = 0x8000000000147660;
  if (a3)
  {
    uint64_t v46 = (uint64_t)v16;
    unint64_t v48 = a1;
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_141680(20);
    swift_bridgeObjectRelease();
    uint64_t v54 = 0xD000000000000012;
    unint64_t v55 = 0x800000000014AB50;
    v57._countAndFlagsBits = sub_141280();
    sub_1412B0(v57);
    swift_bridgeObjectRelease();
    uint64_t v19 = v54;
    unint64_t v20 = v55;
    unint64_t v22 = *(void *)(v18 + 16);
    unint64_t v21 = *(void *)(v18 + 24);
    if (v22 >= v21 >> 1) {
      uint64_t v18 = (uint64_t)sub_E0380((char *)(v21 > 1), v22 + 1, 1, (char *)v18);
    }
    *(void *)(v18 + 16) = v22 + 1;
    uint64_t v23 = v18 + 16 * v22;
    *(void *)(v23 + 32) = v19;
    *(void *)(v23 + 40) = v20;
    sub_13EFB0();
    a1 = v48;
    uint64_t v16 = (char *)v46;
  }
  swift_bridgeObjectRetain();
  sub_13EFC0();
  sub_11B9E0(a1);
  sub_13EF50();
  sub_13EFD0();
  sub_11AE40((char)v49, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_904C((uint64_t)v9, &qword_180500);
  }
  else
  {
    uint64_t v24 = v50;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v50, v9, v10);
    if (qword_17B3A8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_141170();
    sub_33D8(v25, (uint64_t)qword_1804E8);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v26(v16, v24, v10);
    uint64_t v27 = sub_141160();
    os_log_type_t v28 = sub_141480();
    int v29 = v28;
    os_log_t v49 = v27;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      unint64_t v48 = a1;
      uint64_t v31 = (uint8_t *)v30;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v54 = v46;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v44 = v31 + 4;
      int v45 = v29;
      v26(v47, v16, v10);
      uint64_t v32 = sub_141260();
      uint64_t v56 = sub_58C0(v32, v33, &v54);
      sub_1415C0();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v11 + 8);
      v34(v16, v10);
      os_log_t v35 = v49;
      _os_log_impl(&dword_0, v49, (os_log_type_t)v45, "Submitting Timer Disambiguation NLv4 dialog act: %s", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, uint64_t))(v11 + 8);
      v34(v16, v10);
    }
    uint64_t v36 = v50;
    sub_13EF20();
    v34(v36, v10);
  }
  uint64_t v37 = v51;
  sub_13E540();
  uint64_t v38 = sub_13E520();
  uint64_t v40 = v39;
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v37, v53);
  __chkstk_darwin(v41);
  *(&v44 - 2) = (uint8_t *)v38;
  *(&v44 - 1) = v40;
  unint64_t v42 = swift_bridgeObjectRetain();
  sub_11C6B4(v42, (void (*)(uint64_t, id))sub_11C680);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_13EF40();
}

uint64_t sub_11A130@<X0>(uint64_t a1@<X8>)
{
  return sub_11A178((void (*)(void))&type metadata accessor for UsoTaskBuilder_update_common_Timer, (void (*)(void))&UsoTaskBuilder_update_common_Timer.init(), (void (*)(uint64_t))&dispatch thunk of Uso_VerbTemplateBuilder_ReferenceTarget.setTarget(value:), a1);
}

uint64_t sub_11A178@<X0>(void (*a1)(void)@<X1>, void (*a2)(void)@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_5830(&qword_180500);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_13F580();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v37 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v38 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v33 - v17;
  sub_11AFB0();
  a1(0);
  swift_allocObject();
  a2();
  sub_13FD20();
  swift_allocObject();
  uint64_t v19 = sub_13FD10();
  sub_13FEA0();
  swift_allocObject();
  sub_13FE90();
  sub_13FCF0();
  swift_release();
  a3(v19);
  sub_140840();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_904C((uint64_t)v10, &qword_180500);
  }
  uint64_t v36 = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v10, v11);
  unint64_t v21 = v18;
  if (qword_17B3A8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_141170();
  sub_33D8(v22, (uint64_t)qword_1804E8);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v24 = v38;
  v23(v38, v18, v11);
  uint64_t v25 = sub_141160();
  os_log_type_t v26 = sub_141480();
  os_log_t v35 = v25;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v34 = v18;
    uint64_t v40 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    unint64_t v33 = v27 + 4;
    v23(v37, v24, v11);
    uint64_t v29 = sub_141260();
    uint64_t v39 = sub_58C0(v29, v30, &v40);
    sub_1415C0();
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
    v31(v24, v11);
    os_log_t v32 = v35;
    _os_log_impl(&dword_0, v35, v26, "Submitting NLv4 dialog act: %s", v27, 0xCu);
    swift_arrayDestroy();
    unint64_t v21 = v34;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
    v31(v24, v11);
  }
  sub_13EF20();
  return ((uint64_t (*)(char *, uint64_t))v31)(v21, v11);
}

uint64_t sub_11A5FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_5830(&qword_180500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_13F580();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - v13;
  sub_11AFB0();
  sub_140060();
  swift_allocObject();
  sub_140050();
  sub_13FD20();
  swift_allocObject();
  sub_13FD10();
  sub_13FDF0();
  sub_140840();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_904C((uint64_t)v4, &qword_180500);
  }
  uint64_t v29 = a1;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  if (qword_17B3A8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_141170();
  sub_33D8(v16, (uint64_t)qword_1804E8);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v17(v12, v14, v5);
  uint64_t v18 = sub_141160();
  os_log_type_t v19 = sub_141480();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    os_log_t v27 = v18;
    unint64_t v21 = (uint8_t *)v20;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v31 = v28;
    *(_DWORD *)unint64_t v21 = 136315138;
    os_log_type_t v26 = v21 + 4;
    v17(v9, v12, v5);
    uint64_t v22 = sub_141260();
    uint64_t v30 = sub_58C0(v22, v23, &v31);
    sub_1415C0();
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v12, v5);
    os_log_t v25 = v27;
    _os_log_impl(&dword_0, v27, v19, "Submitting NLv4 dialog act: %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v12, v5);
  }
  sub_13EF20();
  return ((uint64_t (*)(char *, uint64_t))v24)(v14, v5);
}

uint64_t sub_11AA14()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_1804E8);
  sub_33D8(v0, (uint64_t)qword_1804E8);
  return sub_140E60();
}

void sub_11AA60()
{
  qword_181250 = 0x644972656D6974;
  *(void *)algn_181258 = 0xE700000000000000;
}

void sub_11AA84()
{
  qword_181260 = 0x62614C72656D6974;
  *(void *)algn_181268 = 0xEA00000000006C65;
}

void sub_11AAAC()
{
  algn_181278[7] = -18;
}

uint64_t sub_11AADC(char a1)
{
  switch(a1)
  {
    case 1:
      goto LABEL_9;
    case 2:
    case 10:
      sub_140080();
      swift_allocObject();
      sub_140070();
      break;
    case 3:
      sub_140170();
      swift_allocObject();
      sub_140160();
      break;
    case 4:
      sub_140130();
      swift_allocObject();
      sub_140120();
      break;
    case 5:
      sub_13FF70();
      swift_allocObject();
      sub_13FF60();
      break;
    case 7:
    case 17:
    case 18:
      sub_13FF90();
      swift_allocObject();
      sub_13FF80();
      break;
    case 8:
      sub_1400C0();
      swift_allocObject();
      sub_1400B0();
      break;
    case 9:
      sub_13FFB0();
      swift_allocObject();
      sub_13FFA0();
      break;
    case 12:
      sub_1400E0();
      swift_allocObject();
      sub_1400D0();
      break;
    case 13:
    case 14:
    case 15:
      if (qword_17B3A8 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_141170();
      sub_33D8(v1, (uint64_t)qword_1804E8);
      uint64_t v2 = sub_141160();
      os_log_type_t v3 = sub_141470();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        uint64_t v8 = swift_slowAlloc();
        *(_DWORD *)uint64_t v4 = 136315138;
        uint64_t v5 = sub_141260();
        sub_58C0(v5, v6, &v8);
        sub_1415C0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v2, v3, "Unsupported verb for confirmTimer: %s", v4, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

LABEL_9:
      sub_140060();
      swift_allocObject();
      sub_140050();
      break;
    default:
      sub_140190();
      swift_allocObject();
      sub_140180();
      break;
  }
  sub_140850();
  return swift_release();
}

uint64_t sub_11AE40(char a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  }
  if (v4)
  {
    uint64_t result = sub_141730();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_1416A0();
      }
      else {
        id v7 = *(id *)(a2 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      sub_1677C();
      sub_11CBB4(a1);

      swift_release();
      sub_141700();
      sub_141740();
      sub_141750();
      sub_141710();
    }
    while (v4 != v6);
  }
  sub_13F550();

  return swift_bridgeObjectRelease();
}

uint64_t sub_11AFB0()
{
  return sub_13EFB0();
}

uint64_t sub_11B020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_5830(&qword_180500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_13F580();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v25 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  sub_11AFB0();
  sub_140060();
  swift_allocObject();
  sub_140050();
  sub_13FD20();
  swift_allocObject();
  sub_13FD10();
  sub_13FD00();
  sub_13FDF0();
  sub_140840();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_904C((uint64_t)v4, &qword_180500);
  }
  uint64_t v28 = a1;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  if (qword_17B3A8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_141170();
  sub_33D8(v16, (uint64_t)qword_1804E8);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v17(v12, v14, v5);
  uint64_t v18 = sub_141160();
  os_log_type_t v19 = sub_141480();
  os_log_t v27 = v18;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v20 = 136315138;
    os_log_t v25 = v20 + 4;
    v17(v9, v12, v5);
    uint64_t v21 = sub_141260();
    uint64_t v29 = sub_58C0(v21, v22, &v30);
    sub_1415C0();
    swift_bridgeObjectRelease();
    unint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v12, v5);
    os_log_t v24 = v27;
    _os_log_impl(&dword_0, v27, v19, "Submitting NLv4 dialog act: %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v12, v5);
  }
  sub_13EF20();
  return ((uint64_t (*)(char *, uint64_t))v23)(v14, v5);
}

uint64_t sub_11B450(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_E0490(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_13ED00() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

uint64_t sub_11B600(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1417D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1417D0();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((char *)&dword_18 + (v6 & 0xFFFFFFFFFFFFFF8)) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1416B0();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_11B7CC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1417D0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_141330();
}

uint64_t sub_11B7CC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_11CFB4();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_5830(&qword_180520);
          uint64_t v12 = sub_D1704(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_5595C(0, &qword_17C700);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_141810();
  __break(1u);
  return result;
}

uint64_t sub_11B9E0(unint64_t a1)
{
  uint64_t v86 = sub_13F250();
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_5830(&qword_180508);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v95 = (uint64_t)&v82 - v7;
  uint64_t v8 = sub_13EDA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v103 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v97 = (char *)&v82 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v94 = (char *)&v82 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v82 - v17;
  __chkstk_darwin(v16);
  uint64_t v92 = (char *)&v82 - v18;
  uint64_t v19 = sub_5830(&qword_180510);
  __chkstk_darwin(v19 - 8);
  BOOL v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_13ED00();
  uint64_t v101 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  *(void *)&long long v96 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v99 = (char *)&v82 - v25;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1417D0();
    if (v26)
    {
LABEL_3:
      if (v26 < 1)
      {
        __break(1u);
LABEL_60:
        swift_once();
        goto LABEL_53;
      }
      unint64_t v83 = a1 >> 62;
      uint64_t v98 = v8;
      uint64_t v88 = v6;
      uint64_t v27 = 0;
      unint64_t v108 = a1 & 0xC000000000000001;
      uint64_t v104 = (void (**)(char *, char *, uint64_t))(v9 + 32);
      uint64_t v91 = (void (**)(char *, char *, uint64_t))(v9 + 16);
      uint64_t v87 = v9;
      uint64_t v90 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
      uint64_t v102 = (unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48);
      uint64_t v28 = (void (**)(char *, char *, uint64_t))(v101 + 32);
      unint64_t v106 = (char *)&_swiftEmptyArrayStorage;
      unint64_t v89 = 0x8000000000147640;
      unint64_t v100 = a1;
      uint64_t v105 = v26;
      uint64_t v29 = (char *)v96;
      do
      {
        if (v108) {
          id v30 = (id)sub_1416A0();
        }
        else {
          id v30 = *(id *)(a1 + 8 * v27 + 32);
        }
        uint64_t v31 = v30;
        id v32 = [v30 label];
        if (v32)
        {
          unint64_t v33 = v32;
          uint64_t v34 = sub_141250();
          unint64_t v36 = v35;

          uint64_t v37 = HIBYTE(v36) & 0xF;
          if ((v36 & 0x2000000000000000) == 0) {
            uint64_t v37 = v34 & 0xFFFFFFFFFFFFLL;
          }
          if (v37)
          {
            if (qword_17B3B8 != -1) {
              swift_once();
            }
            swift_bridgeObjectRetain();
            uint64_t v38 = v93;
            sub_13ED90();
            uint64_t v39 = v92;
            uint64_t v40 = v98;
            (*v104)(v92, v38, v98);
            sub_D4A64(v95);
            (*v91)(v94, v39, v40);
            sub_13ECF0();
            (*v90)(v39, v40);
            uint64_t v41 = 0;
            a1 = v100;
            uint64_t v26 = v105;
            uint64_t v29 = (char *)v96;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v41 = 1;
            a1 = v100;
          }
        }
        else
        {
          uint64_t v41 = 1;
        }
        (*v107)(v21, v41, 1, v22);

        if ((*v102)(v21, 1, v22) == 1)
        {
          sub_904C((uint64_t)v21, &qword_180510);
        }
        else
        {
          unint64_t v42 = *v28;
          uint64_t v43 = v99;
          (*v28)(v99, v21, v22);
          v42(v29, v43, v22);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v106 = (char *)sub_E0490(0, *((void *)v106 + 2) + 1, 1, (unint64_t)v106);
          }
          unint64_t v45 = *((void *)v106 + 2);
          unint64_t v44 = *((void *)v106 + 3);
          if (v45 >= v44 >> 1) {
            unint64_t v106 = (char *)sub_E0490(v44 > 1, v45 + 1, 1, (unint64_t)v106);
          }
          uint64_t v46 = v106;
          *((void *)v106 + 2) = v45 + 1;
          v42(&v46[((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(void *)(v101 + 72) * v45], v29, v22);
        }
        ++v27;
      }
      while (v26 != v27);
      swift_bridgeObjectRelease();
      uint64_t v47 = v87;
      uint64_t v101 = v87 + 48;
      uint64_t v102 = (unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 56);
      swift_bridgeObjectRetain();
      uint64_t v48 = 0;
      uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))&_swiftEmptyArrayStorage;
      *(void *)&long long v49 = 136315138;
      long long v96 = v49;
      uint64_t v95 = (uint64_t)&type metadata for Any + 8;
      uint64_t v99 = (char *)0x8000000000149EE0;
      uint64_t v50 = (uint64_t)v88;
      uint64_t v51 = v98;
      do
      {
        if (v108) {
          id v52 = (id)sub_1416A0();
        }
        else {
          id v52 = *(id *)(a1 + 8 * v48 + 32);
        }
        uint64_t v53 = v52;
        id v54 = [v52 identifier];
        if (v54)
        {
          unint64_t v55 = v54;
          sub_141250();

          if (qword_17B3B0 != -1) {
            swift_once();
          }
          swift_bridgeObjectRetain();
          sub_13ED90();
          uint64_t v56 = 0;
        }
        else
        {
          if (qword_17B2B0 != -1) {
            swift_once();
          }
          uint64_t v57 = sub_141170();
          sub_33D8(v57, (uint64_t)qword_17F500);
          id v58 = v53;
          int v59 = sub_141160();
          os_log_type_t v60 = sub_141470();
          if (os_log_type_enabled(v59, v60))
          {
            uint64_t v61 = swift_slowAlloc();
            uint64_t v109 = swift_slowAlloc();
            *(_DWORD *)uint64_t v61 = v96;
            id v62 = v58;
            id v63 = [v62 description];
            uint64_t v64 = sub_141250();
            unint64_t v66 = v65;

            uint64_t v50 = (uint64_t)v88;
            *(void *)(v61 + 4) = sub_58C0(v64, v66, &v109);

            uint64_t v47 = v87;
            uint64_t v51 = v98;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v59, v60, "Error making descriptive hint for timer. Missing identifier: %s", (uint8_t *)v61, 0xCu);
            uint64_t v56 = 1;
            swift_arrayDestroy();
            a1 = v100;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v56 = 1;
          }
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v102)(v50, v56, 1, v51);

        int v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))v101)(v50, 1, v51);
        uint64_t v68 = v105;
        if (v67 == 1)
        {
          sub_904C(v50, &qword_180508);
        }
        else
        {
          uint64_t v69 = *v104;
          unint64_t v70 = v97;
          (*v104)(v97, (char *)v50, v51);
          v69(v103, v70, v51);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))sub_E04C4(0, (int64_t)v107[2] + 1, 1, (unint64_t)v107);
          }
          unint64_t v72 = (unint64_t)v107[2];
          unint64_t v71 = (unint64_t)v107[3];
          if (v72 >= v71 >> 1) {
            uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))sub_E04C4(v71 > 1, v72 + 1, 1, (unint64_t)v107);
          }
          unint64_t v73 = v107;
          v107[2] = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v72 + 1);
          v69((char *)v73+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v72, v103, v51);
        }
        ++v48;
      }
      while (v68 != v48);
      swift_bridgeObjectRelease();
      if (!v83) {
        goto LABEL_47;
      }
      goto LABEL_50;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v106 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))&_swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
LABEL_47:
    uint64_t v74 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    goto LABEL_51;
  }
LABEL_50:
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_1417D0();
  swift_bridgeObjectRelease();
LABEL_51:
  if ((void (*)(char *, uint64_t, uint64_t, uint64_t))v74 == v107[2]) {
    goto LABEL_56;
  }
  if (qword_17B3A8 != -1) {
    goto LABEL_60;
  }
LABEL_53:
  uint64_t v75 = sub_141170();
  sub_33D8(v75, (uint64_t)qword_1804E8);
  uint64_t v76 = sub_141160();
  os_log_type_t v77 = sub_141470();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v78 = 0;
    _os_log_impl(&dword_0, v76, v77, "makeTimerDisplayHints: Incorrect label value count during conversion of timer hints", v78, 2u);
    swift_slowDealloc();
  }

LABEL_56:
  if (qword_17B3C0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v79 = v84;
  sub_13F230();
  uint64_t v80 = sub_13F240();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v79, v86);
  uint64_t v109 = (uint64_t)v106;
  sub_11B450(v80);
  return v109;
}

uint64_t sub_11C680@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_12EADC(*(void *)(v2 + 16), *(void *)(v2 + 24), a1, 0, a2);
}

void *sub_11C6B4(unint64_t a1, void (*a2)(uint64_t, id))
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  uint64_t v5 = sub_5830(&qword_17BF08);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_141200();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v33 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v27 = (char *)&v25 - v11;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_1417D0())
  {
    uint64_t v25 = v3;
    unint64_t v32 = a1 & 0xC000000000000001;
    uint64_t v29 = v28 + 32;
    id v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    unint64_t v35 = _swiftEmptyArrayStorage;
    uint64_t v13 = 4;
    unint64_t v26 = a1;
    uint64_t v31 = v12;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    while (1)
    {
      uint64_t v3 = v8;
      uint64_t v8 = v13 - 4;
      id v15 = v32 ? (id)sub_1416A0() : *(id *)(a1 + 8 * v13);
      uint64_t v16 = v15;
      uint64_t v17 = v13 - 3;
      if (__OFADD__(v8, 1)) {
        break;
      }
      v34(v13 - 4, v15);

      uint64_t v8 = v3;
      if ((*v30)(v7, 1, v3) == 1)
      {
        sub_904C((uint64_t)v7, &qword_17BF08);
      }
      else
      {
        uint64_t v18 = *v14;
        uint64_t v19 = v27;
        (*v14)(v27, v7, v3);
        v18(v33, v19, v3);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v20 = (unint64_t)v35;
        }
        else {
          unint64_t v20 = sub_E0778(0, v35[2] + 1, 1, (unint64_t)v35);
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1) {
          unint64_t v20 = sub_E0778(v21 > 1, v22 + 1, 1, v20);
        }
        *(void *)(v20 + 16) = v22 + 1;
        unint64_t v23 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        unint64_t v35 = (void *)v20;
        uint64_t v8 = v3;
        v18((char *)(v20 + v23 + *(void *)(v28 + 72) * v22), v33, v3);
        a1 = v26;
      }
      ++v13;
      if (v17 == v31)
      {
        swift_bridgeObjectRelease();
        return v35;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_11CA10(unsigned int *a1)
{
  uint64_t v2 = sub_13F650();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F6F0();
  swift_allocObject();
  sub_13F6E0();
  swift_allocObject();
  sub_13F6E0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *a1, v2);
  sub_13F6D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_retain();
  sub_13F6C0();
  swift_release();
  sub_140150();
  swift_allocObject();
  uint64_t v6 = sub_140140();
  swift_retain();
  sub_13F670();
  swift_release_n();
  swift_release();
  return v6;
}

uint64_t sub_11CBB4(char a1)
{
  if (qword_17B3A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_141170();
  sub_33D8(v2, (uint64_t)qword_1804E8);
  uint64_t v3 = sub_141160();
  os_log_type_t v4 = sub_141480();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = sub_642C(a1);
    sub_58C0(v6, v7, &v12);
    sub_1415C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v3, v4, "In timerNLBuilder(for:commonTimer:), verb = %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  switch(a1)
  {
    case 1:
      sub_140060();
      swift_allocObject();
      return sub_140050();
    case 2:
      sub_140080();
      swift_allocObject();
      uint64_t v9 = sub_140070();
      goto LABEL_18;
    case 3:
      sub_140170();
      swift_allocObject();
      return sub_140160();
    case 4:
      sub_140130();
      swift_allocObject();
      return sub_140120();
    case 5:
      sub_13FF70();
      swift_allocObject();
      uint64_t v9 = sub_13FF60();
      goto LABEL_18;
    case 6:
    case 13:
      sub_140100();
      swift_allocObject();
      uint64_t v10 = sub_1400F0();
      sub_1401A0();
      return v10;
    case 7:
    case 17:
    case 18:
      sub_13FF90();
      swift_allocObject();
      uint64_t v8 = sub_13FF80();
      goto LABEL_20;
    case 8:
      sub_1400C0();
      swift_allocObject();
      uint64_t v9 = sub_1400B0();
      goto LABEL_18;
    case 9:
      sub_13FFB0();
      swift_allocObject();
      uint64_t v10 = sub_13FFA0();
      sub_13FDF0();
      return v10;
    case 10:
      sub_13FEF0();
      swift_allocObject();
      uint64_t v9 = sub_13FEE0();
      goto LABEL_18;
    case 11:
    case 15:
    case 16:
      sub_140190();
      swift_allocObject();
      uint64_t v9 = sub_140180();
      goto LABEL_18;
    case 12:
      sub_1400E0();
      swift_allocObject();
      uint64_t v8 = sub_1400D0();
LABEL_20:
      uint64_t v10 = v8;
      sub_1401B0();
      break;
    case 14:
      sub_1400A0();
      swift_allocObject();
      uint64_t v10 = sub_140090();
      sub_13F680();
      break;
    default:
      sub_140210();
      swift_allocObject();
      uint64_t v9 = sub_140200();
LABEL_18:
      uint64_t v10 = v9;
      sub_13FFC0();
      break;
  }
  return v10;
}

unint64_t sub_11CFB4()
{
  unint64_t result = qword_180528;
  if (!qword_180528)
  {
    sub_23FA8(&qword_180520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180528);
  }
  return result;
}

uint64_t type metadata accessor for TimerBaseCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_180540);
}

uint64_t sub_11D030()
{
  return swift_initClassMetadata2();
}

uint64_t sub_11D070()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  os_log_type_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v32 - v5;
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_144F40;
  *(void *)(v7 + 32) = 7368801;
  *(void *)(v7 + 40) = 0xE300000000000000;
  uint64_t v8 = *v0;
  if (*v0)
  {
    uint64_t v9 = sub_1404A0();
    uint64_t v10 = v8;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    *(void *)(v7 + 56) = 0;
    *(void *)(v7 + 64) = 0;
  }
  *(void *)(v7 + 48) = v10;
  *(void *)(v7 + 72) = v9;
  *(void *)(v7 + 80) = 0x6E69577473726966;
  *(void *)(v7 + 88) = 0xEF657A6953776F64;
  char v11 = *((unsigned char *)v0 + 16);
  unint64_t v33 = v4;
  if (v11)
  {
    uint64_t v12 = 0;
    *(void *)(v7 + 104) = 0;
    *(void *)(v7 + 112) = 0;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = v0[1];
    uint64_t v12 = &type metadata for Double;
  }
  *(void *)(v7 + 96) = v13;
  *(void *)(v7 + 120) = v12;
  strcpy((char *)(v7 + 128), "isConclusion");
  *(unsigned char *)(v7 + 141) = 0;
  *(_WORD *)(v7 + 142) = -5120;
  *(unsigned char *)(v7 + 144) = *((unsigned char *)v0 + 17);
  *(void *)(v7 + 168) = &type metadata for Bool;
  strcpy((char *)(v7 + 176), "isFirstWindow");
  *(_WORD *)(v7 + 190) = -4864;
  *(unsigned char *)(v7 + 192) = *((unsigned char *)v0 + 18);
  *(void *)(v7 + 216) = &type metadata for Bool;
  strcpy((char *)(v7 + 224), "isLastWindow");
  *(unsigned char *)(v7 + 237) = 0;
  *(_WORD *)(v7 + 238) = -5120;
  *(unsigned char *)(v7 + 240) = *((unsigned char *)v0 + 19);
  *(void *)(v7 + 264) = &type metadata for Bool;
  *(void *)(v7 + 272) = 0xD000000000000016;
  *(void *)(v7 + 280) = 0x8000000000149AA0;
  *(unsigned char *)(v7 + 288) = *((unsigned char *)v0 + 20);
  *(void *)(v7 + 312) = &type metadata for Bool;
  *(void *)(v7 + 320) = 0x6D6F727065527369;
  *(void *)(v7 + 328) = 0xEA00000000007470;
  *(unsigned char *)(v7 + 336) = *((unsigned char *)v0 + 21);
  *(void *)(v7 + 360) = &type metadata for Bool;
  *(void *)(v7 + 368) = 0x736D657469;
  *(void *)(v7 + 376) = 0xE500000000000000;
  uint64_t v14 = v0[3];
  uint64_t v15 = sub_5830(&qword_17C508);
  *(void *)(v7 + 384) = v14;
  *(void *)(v7 + 408) = v15;
  *(void *)(v7 + 416) = 0xD000000000000013;
  *(void *)(v7 + 424) = 0x8000000000149AC0;
  if (v0[5])
  {
    uint64_t v16 = 0;
    *(void *)(v7 + 440) = 0;
    *(void *)(v7 + 448) = 0;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = v0[4];
    uint64_t v16 = &type metadata for Double;
  }
  *(void *)(v7 + 432) = v17;
  *(void *)(v7 + 456) = v16;
  *(void *)(v7 + 464) = 0x6574496C61746F74;
  *(void *)(v7 + 472) = 0xEA0000000000736DLL;
  char v18 = *((unsigned char *)v0 + 56);
  uint64_t v32 = v8;
  if (v18)
  {
    uint64_t v19 = 0;
    *(void *)(v7 + 488) = 0;
    *(void *)(v7 + 496) = 0;
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = v0[6];
    uint64_t v19 = &type metadata for Double;
  }
  *(void *)(v7 + 480) = v20;
  *(void *)(v7 + 504) = v19;
  *(void *)(v7 + 512) = 0x6174614477656976;
  *(void *)(v7 + 520) = 0xE800000000000000;
  unint64_t v21 = (int *)type metadata accessor for TimerBaseDisambiguationParameters(0);
  sub_8FE8((uint64_t)v0 + v21[14], (uint64_t)v6, &qword_17BE78);
  uint64_t v22 = sub_140500();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v24(v6, 1, v22) == 1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)(v7 + 528) = 0u;
    *(_OWORD *)(v7 + 544) = 0u;
  }
  else
  {
    *(void *)(v7 + 552) = v22;
    uint64_t v25 = sub_187EC((uint64_t *)(v7 + 528));
    (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(v25, v6, v22);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = (uint64_t)v33;
  *(void *)(v7 + 560) = 0xD000000000000018;
  *(void *)(v7 + 568) = 0x800000000014AC30;
  sub_8FE8((uint64_t)v0 + v21[15], v26, &qword_17BE78);
  if (v24((char *)v26, 1, v22) == 1)
  {
    sub_904C(v26, &qword_17BE78);
    *(_OWORD *)(v7 + 576) = 0u;
    *(_OWORD *)(v7 + 592) = 0u;
  }
  else
  {
    *(void *)(v7 + 600) = v22;
    uint64_t v27 = sub_187EC((uint64_t *)(v7 + 576));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v23 + 32))(v27, v26, v22);
  }
  *(void *)(v7 + 608) = 0x6953776F646E6977;
  *(void *)(v7 + 616) = 0xEA0000000000657ALL;
  uint64_t v28 = (uint64_t *)((char *)v0 + v21[16]);
  if (v28[1])
  {
    uint64_t v29 = 0;
    *(_OWORD *)(v7 + 632) = 0u;
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = *v28;
    uint64_t v29 = &type metadata for Double;
  }
  *(void *)(v7 + 624) = v30;
  *(void *)(v7 + 648) = v29;
  return v7;
}

uint64_t sub_11D578(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_5830(&qword_17BE78);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  v2[6] = type metadata accessor for TimerBaseAppNotInstalledParameters(0);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_11D64C, 0, 0);
}

uint64_t sub_11D64C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v19 = v0[4];
  uint64_t v4 = (void *)v0[3];
  uint64_t v5 = sub_140500();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v1, 1, 1, v5);
  uint64_t v7 = *(int *)(v2 + 20);
  *(void *)(v1 + v7) = 0;
  sub_90A8(v4, v4[3]);
  sub_140A70();
  sub_2D248(v3, v1);
  sub_90A8(v4, v4[3]);
  uint64_t v8 = sub_140A80();
  swift_release();
  *(void *)(v1 + v7) = v8;
  uint64_t v9 = v6;
  sub_5830(&qword_17F3D0);
  uint64_t v10 = swift_allocObject();
  v0[8] = v10;
  *(_OWORD *)(v10 + 16) = xmmword_142FC0;
  char v11 = (uint64_t *)(v10 + 48);
  *(void *)(v10 + 32) = 0xD000000000000014;
  *(void *)(v10 + 40) = 0x800000000014ABB0;
  sub_8FE8(v1, v19, &qword_17BE78);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5);
  uint64_t v13 = v0[4];
  if (v12 == 1)
  {
    sub_904C(v0[4], &qword_17BE78);
    *(_OWORD *)char v11 = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
  }
  else
  {
    *(void *)(v10 + 72) = v5;
    uint64_t v14 = sub_187EC(v11);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 32))(v14, v13, v5);
  }
  *(void *)(v10 + 80) = 0x656369766564;
  *(void *)(v10 + 88) = 0xE600000000000000;
  uint64_t v15 = *(void *)(v1 + v7);
  if (v15)
  {
    uint64_t v16 = sub_140560();
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(v10 + 104) = 0;
    *(void *)(v10 + 112) = 0;
  }
  *(void *)(v10 + 96) = v15;
  *(void *)(v10 + 120) = v16;
  uint64_t v20 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[9] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_11D918;
  return v20(0xD000000000000019, 0x800000000014ABD0, v10);
}

uint64_t sub_11D918(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_11DB08;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_11DA64;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_11DA64()
{
  sub_11E948(v0[7], type metadata accessor for TimerBaseAppNotInstalledParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[11];
  return v1(v2);
}

uint64_t sub_11DB08()
{
  sub_11E948(*(void *)(v0 + 56), type metadata accessor for TimerBaseAppNotInstalledParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_11DBA8(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_11DBCC, 0, 0);
}

uint64_t sub_11DBCC()
{
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 32);
  *(unsigned char *)(v0 + 24) = 1;
  v1(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 24);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_142D50;
  *(void *)(v4 + 32) = 0xD000000000000011;
  *(void *)(v4 + 40) = 0x800000000014ABF0;
  if (v3 == 1)
  {
    uint64_t v6 = 0;
    *(void *)(v4 + 56) = 0;
    *(void *)(v4 + 64) = 0;
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v6 = &type metadata for Double;
  }
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 72) = v6;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_11DD30;
  return v9(0xD000000000000012, 0x800000000014AC10, v5);
}

uint64_t sub_11DD30(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_11DE7C;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_11DE60;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_11DE60()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 80));
}

uint64_t sub_11DE7C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_11DEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_11E078()
{
  return type metadata accessor for TimerBaseCATPatternsExecutor(0);
}

uint64_t type metadata accessor for TimerBaseAppNotInstalledParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_1806C8);
}

uint64_t sub_11E0A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_11E0C0, 0, 0);
}

uint64_t sub_11E0C0()
{
  v0[2] = *(void *)(v0[4] + 64);
  sub_140D40();
  sub_140F90();
  uint64_t v2 = v1;
  sub_5830(&qword_17F3D0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 32) = 0xD000000000000011;
  *(void *)(v3 + 40) = 0x800000000014ABF0;
  *(void *)(v3 + 72) = &type metadata for Double;
  uint64_t v6 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_142D50;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_487FC;
  return v6(0xD000000000000012, 0x800000000014AC10, v3);
}

uint64_t sub_11E210(char a1, char a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 48) = v12;
  *(void *)(v8 + 24) = a7;
  *(void *)(v8 + 32) = a8;
  *(void *)(v8 + 16) = a6;
  *(unsigned char *)(v8 + 116) = a5;
  *(unsigned char *)(v8 + 115) = a4;
  *(unsigned char *)(v8 + 114) = a3;
  *(unsigned char *)(v8 + 113) = a2;
  *(unsigned char *)(v8 + 112) = a1;
  sub_5830(&qword_17BE78);
  *(void *)(v8 + 56) = swift_task_alloc();
  *(void *)(v8 + 64) = type metadata accessor for TimerBaseDisambiguationParameters(0);
  *(void *)(v8 + 72) = swift_task_alloc();
  return _swift_task_switch(sub_11E2F8, 0, 0);
}

uint64_t sub_11E2F8()
{
  uint64_t v2 = *(int **)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 16);
  char v28 = *(unsigned char *)(v0 + 115);
  char v29 = *(unsigned char *)(v0 + 116);
  char v26 = *(unsigned char *)(v0 + 113);
  char v27 = *(unsigned char *)(v0 + 114);
  char v4 = *(unsigned char *)(v0 + 112);
  uint64_t v5 = v1 + v2[14];
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v6);
  uint64_t v25 = v1 + v2[15];
  v7();
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 1;
  *(unsigned char *)(v1 + 17) = v4;
  *(unsigned char *)(v1 + 18) = v26;
  *(unsigned char *)(v1 + 19) = v27;
  *(unsigned char *)(v1 + 20) = v28;
  *(unsigned char *)(v1 + 21) = v29;
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 1;
  uint64_t v8 = v1 + v2[16];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  sub_1404A0();
  uint64_t v9 = qword_17B240;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = *(uint64_t **)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 48);
  swift_retain();
  *uint64_t v10 = sub_140490();
  sub_13E4C0(0);
  sub_1404D0();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v7)(v11, 0, 1, v6);
  sub_2D248(v11, v5);
  *(double *)(v1 + 48) = (double)v12;
  *(unsigned char *)(v1 + 56) = 0;
  uint64_t v13 = (void *)sub_13F050();

  sub_1415A0();
  uint64_t v16 = v15;

  if (v16)
  {
    uint64_t v17 = *(void *)(v0 + 56);
    sub_1404E0();
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v7)(v17, 0, 1, v6);
    sub_2D248(v17, v25);
  }
  else
  {
    if (qword_17B2E0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_141170();
    sub_33D8(v18, (uint64_t)qword_17F888);
    uint64_t v19 = sub_141160();
    os_log_type_t v20 = sub_141470();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "Error generating base64 action for 'windowPromptButtonAction'", v21, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v22 = sub_11D070();
  *(void *)(v0 + 80) = v22;
  uint64_t v30 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_11E6B8;
  return v30(0xD000000000000018, 0x800000000014A4B0, v22);
}

uint64_t sub_11E6B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_11E898;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v5 = sub_11E804;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_11E804()
{
  sub_11E948(v0[9], type metadata accessor for TimerBaseDisambiguationParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[13];
  return v1(v2);
}

uint64_t sub_11E898()
{
  sub_11E948(*(void *)(v0 + 72), type metadata accessor for TimerBaseDisambiguationParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for TimerBaseDisambiguationParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_180608);
}

uint64_t sub_11E948(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_11E9A8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_DWORD *)(a1 + 17) = *(_DWORD *)((char *)a2 + 17);
    *(unsigned char *)(a1 + 21) = *((unsigned char *)a2 + 21);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v9 = a3[14];
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_140500();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_5830(&qword_17BE78);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v15 = a3[15];
    uint64_t v16 = (void *)(v7 + v15);
    uint64_t v17 = (char *)a2 + v15;
    if (v13((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = sub_5830(&qword_17BE78);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = a3[16];
    uint64_t v20 = v7 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  }
  return v7;
}

uint64_t sub_11EC38(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 56);
  uint64_t v5 = sub_140500();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 60);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t sub_11ED68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 17) = *(_DWORD *)(a2 + 17);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a3[14];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_140500();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[15];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    uint64_t v18 = sub_5830(&qword_17BE78);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[16];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  return a1;
}

uint64_t sub_11EFA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = a3[14];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_140500();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_5830(&qword_17BE78);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[15];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v19, v20, v12);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_5830(&qword_17BE78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v19, v20, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
LABEL_13:
  uint64_t v24 = a3[16];
  uint64_t v25 = a1 + v24;
  char v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  return a1;
}

uint64_t sub_11F2C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 17) = *(_DWORD *)(a2 + 17);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = a3[14];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_140500();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_5830(&qword_17BE78);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[15];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    uint64_t v19 = sub_5830(&qword_17BE78);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[16];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  return a1;
}

uint64_t sub_11F4DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = a3[14];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_5830(&qword_17BE78);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[15];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_5830(&qword_17BE78);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[16];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  return a1;
}

uint64_t sub_11F7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11F800);
}

uint64_t sub_11F800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17BE78);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_11F8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11F8C8);
}

uint64_t sub_11F8C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_11F974()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_11FA3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_140500();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_5830(&qword_17BE78);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_11FBB4(uint64_t a1)
{
  uint64_t v2 = sub_140500();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_release();
}

char *sub_11FC80(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  return a1;
}

char *sub_11FDAC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_11FF48(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_120070(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_140500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_5830(&qword_17BE78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_120204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_120218);
}

uint64_t sub_120218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1202E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1202FC);
}

uint64_t sub_1202FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

void sub_1203BC()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_120450()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180700);
  sub_33D8(v0, (uint64_t)qword_180700);
  return sub_140E40();
}

id sub_12049C@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)sub_1204D8(a1);
  *a2 = v3;

  return v3;
}

unint64_t sub_1204D8(unint64_t result)
{
  uint64_t v2 = v1;
  unint64_t v3 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1417D0();
    swift_bridgeObjectRelease();
    if (v12 >= 2) {
      goto LABEL_3;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_1417D0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v4 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    if (v4 > 1)
    {
LABEL_3:
      if (qword_17B3C8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_141170();
      sub_33D8(v5, (uint64_t)qword_180700);
      uint64_t v6 = sub_141160();
      os_log_type_t v7 = sub_141480();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_0, v6, v7, "Disambiguation selection returned multiple choices. Using original targetTimer with shouldMatchAny = true", v8, 2u);
        swift_slowDealloc();
      }

      id v9 = [v2 targetTimer];
      if (!v9) {
        return (unint64_t)v2;
      }
      unint64_t v10 = v9;
      sub_2FF44();
      v11.super.super.Class isa = sub_141570(1).super.super.isa;
      [v10 setShouldMatchAny:v11.super.super.isa];

      goto LABEL_16;
    }
  }
  if (!v4) {
    return (unint64_t)v2;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v11.super.super.Class isa = (Class)sub_1416A0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8)))
  {
    v11.super.super.Class isa = (Class)*(id *)(v3 + 32);
LABEL_15:
    [v2 setTargetTimer:v11.super.super.isa];
LABEL_16:

    return (unint64_t)v2;
  }
  __break(1u);
  return result;
}

uint64_t RecreateDeletedTimerFlow.__allocating_init()()
{
  sub_140F30();
  swift_allocObject();
  uint64_t v0 = sub_140F20();
  id v1 = [objc_allocWithZone((Class)MTTimerManager) init];
  type metadata accessor for RecreateDeletedTimerFlow();
  uint64_t v2 = swift_allocObject();

  return sub_129CD0(v0, (uint64_t)v1, v2);
}

uint64_t type metadata accessor for RecreateDeletedTimerFlow()
{
  uint64_t result = qword_180788;
  if (!qword_180788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1207B0(uint64_t a1, void *a2)
{
}

void sub_1207B8(uint64_t a1, void *a2)
{
}

void sub_1207C0(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_12082C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180718);
  sub_33D8(v0, (uint64_t)qword_180718);
  return sub_140E60();
}

uint64_t sub_120878(uint64_t a1)
{
  return sub_7A65C(a1, (uint64_t (*)(void))&type metadata accessor for SiriTimeEventSender.TaskType, qword_181290, &enum case for SiriTimeEventSender.TaskType.undoDeleteTimer(_:));
}

uint64_t sub_1208A0(uint64_t a1)
{
  return sub_7A65C(a1, (uint64_t (*)(void))&type metadata accessor for SiriTimeEventSender.Attribute, qword_1812A8, &enum case for SiriTimeEventSender.Attribute.corrections(_:));
}

uint64_t RecreateDeletedTimerFlow.on(input:)()
{
  uint64_t v0 = sub_5830(&qword_17D740);
  __chkstk_darwin(v0 - 8);
  uint64_t v82 = (uint64_t)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_140920();
  uint64_t v85 = *(void *)(v2 - 8);
  uint64_t v86 = v2;
  __chkstk_darwin(v2);
  uint64_t v84 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_140900();
  uint64_t v4 = *(void *)(v88 - 8);
  uint64_t v5 = __chkstk_darwin(v88);
  uint64_t v87 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v74 - v8;
  __chkstk_darwin(v7);
  NSNumber v11 = (char *)&v74 - v10;
  uint64_t v12 = sub_13F3C0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_13F3E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  int v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F370();
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v19, v16) != enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v19, v12);
  uint64_t v20 = sub_13F3B0();
  uint64_t v21 = v12;
  uint64_t v22 = v15;
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  uint64_t v23 = v20;
  uint64_t v81 = v22;
  uint64_t v24 = v4;
  uint64_t v25 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  uint64_t v26 = v88;
  uint64_t v80 = v25;
  v25(v11, enum case for DirectInvocationUtils.Timer.UserInfoKey.verb(_:), v88);
  uint64_t v27 = sub_1408F0();
  uint64_t v29 = v28;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v31 = v11;
  uint64_t v79 = v24 + 8;
  uint64_t v32 = v30;
  v30(v31, v26);
  if (*(void *)(v23 + 16) && (unint64_t v33 = sub_16F44(v27, v29), (v34 & 1) != 0))
  {
    sub_5B50(*(void *)(v23 + 56) + 32 * v33, (uint64_t)&v91);
  }
  else
  {
    long long v91 = 0u;
    long long v92 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v92 + 1)) {
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  int v35 = sub_CC640();
  if (v35 == 19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v81, v12);
    swift_bridgeObjectRelease();
    return 0;
  }
  int v78 = v35;
  v80(v9, enum case for DirectInvocationUtils.Timer.UserInfoKey.usoEntity(_:), v26);
  uint64_t v36 = sub_1408F0();
  uint64_t v38 = v37;
  v32(v9, v26);
  if (*(void *)(v23 + 16) && (unint64_t v39 = sub_16F44(v36, v38), (v40 & 1) != 0))
  {
    sub_5B50(*(void *)(v23 + 56) + 32 * v39, (uint64_t)&v91);
  }
  else
  {
    long long v91 = 0u;
    long long v92 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v92 + 1))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    sub_904C((uint64_t)&v91, &qword_17B9B0);
LABEL_22:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v81, v12);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_21;
  }
  unint64_t v41 = v90;
  uint64_t v77 = v89;
  sub_13E3D0();
  swift_allocObject();
  sub_13E3C0();
  sub_140290();
  sub_1F164((unint64_t *)&unk_17EB50, (void (*)(uint64_t))&type metadata accessor for UsoEntity);
  unint64_t v76 = v41;
  sub_13E3B0();
  swift_release();
  sub_13FA00();
  swift_retain();
  sub_13FB40();
  swift_release();
  if (!(void)v91)
  {
    swift_bridgeObjectRelease();
    sub_34B88(v77, v76);
    swift_release();
    goto LABEL_22;
  }
  uint64_t v75 = v91;
  uint64_t v43 = v87;
  v80(v87, enum case for DirectInvocationUtils.Timer.UserInfoKey.paused(_:), v26);
  uint64_t v44 = sub_1408F0();
  uint64_t v46 = v45;
  v32(v43, v26);
  if (*(void *)(v23 + 16) && (unint64_t v47 = sub_16F44(v44, v46), (v48 & 1) != 0))
  {
    sub_5B50(*(void *)(v23 + 56) + 32 * v47, (uint64_t)&v91);
  }
  else
  {
    long long v91 = 0u;
    long long v92 = 0u;
  }
  long long v49 = v81;
  swift_bridgeObjectRelease();
  if (!*((void *)&v92 + 1))
  {
    swift_bridgeObjectRelease();
    sub_34B88(v77, v76);
    swift_release();
    swift_release();
    sub_904C((uint64_t)&v91, &qword_17B9B0);
LABEL_37:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v49, v21);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_34B88(v77, v76);
    swift_release();
    swift_release();
    goto LABEL_37;
  }
  uint64_t v88 = v23;
  LODWORD(v87) = v89;
  uint64_t v50 = sub_13F3A0();
  uint64_t v52 = v51;
  uint64_t v53 = v84;
  uint64_t v54 = v85;
  uint64_t v55 = v86;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for DirectInvocationUtils.Timer.URI.undo(_:), v86);
  uint64_t v56 = sub_140910();
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
  if (v50 == v56 && v52 == v58)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v59 = v88;
  }
  else
  {
    char v60 = sub_141AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = v88;
    if ((v60 & 1) == 0) {
      goto LABEL_48;
    }
  }
  if (sub_642C(v78) != 0x657461657263 || v61 != 0xE600000000000000)
  {
    char v62 = sub_141AA0();
    swift_bridgeObjectRelease();
    if (v62) {
      goto LABEL_43;
    }
LABEL_48:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v81, v21);
    sub_34B88(v77, v76);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return 0;
  }
  swift_bridgeObjectRelease();
LABEL_43:
  uint64_t v63 = v83;
  *(void *)(v83 + 88) = v75;
  swift_retain();
  swift_release();
  *(unsigned char *)(v63 + 96) = (_BYTE)v87;
  uint64_t v64 = v82;
  sub_10EA70(v59, v82);
  swift_bridgeObjectRelease();
  uint64_t v65 = v63 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24RecreateDeletedTimerFlow_followupPluginAction;
  swift_beginAccess();
  sub_90C18(v64, v65, &qword_17D740);
  swift_endAccess();
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v66 = sub_141170();
  sub_33D8(v66, (uint64_t)qword_180718);
  int v67 = sub_141160();
  os_log_type_t v68 = sub_141480();
  BOOL v69 = os_log_type_enabled(v67, v68);
  unint64_t v70 = v81;
  unint64_t v71 = v76;
  uint64_t v72 = v77;
  if (v69)
  {
    unint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v73 = 0;
    _os_log_impl(&dword_0, v67, v68, "RecreateDeletedTimerFlow accepting input.", v73, 2u);
    swift_slowDealloc();
  }
  sub_34B88(v72, v71);

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v70, v21);
  return 1;
}

uint64_t RecreateDeletedTimerFlow.execute()(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  sub_5830(&qword_17D740);
  v2[23] = swift_task_alloc();
  uint64_t v3 = sub_13ED80();
  v2[24] = v3;
  v2[25] = *(void *)(v3 - 8);
  v2[26] = swift_task_alloc();
  uint64_t v4 = sub_140650();
  v2[27] = v4;
  v2[28] = *(void *)(v4 - 8);
  v2[29] = swift_task_alloc();
  uint64_t v5 = sub_140730();
  v2[30] = v5;
  v2[31] = *(void *)(v5 - 8);
  v2[32] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v2[33] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v2[34] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v2[35] = swift_task_alloc();
  uint64_t v6 = sub_140660();
  v2[36] = v6;
  v2[37] = *(void *)(v6 - 8);
  v2[38] = swift_task_alloc();
  uint64_t v7 = sub_13ED60();
  v2[39] = v7;
  v2[40] = *(void *)(v7 - 8);
  v2[41] = swift_task_alloc();
  return _swift_task_switch(sub_121644, 0, 0);
}

uint64_t sub_121644()
{
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_180718);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "In RecreateDeletedTimerFlow async execute()", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[40];
  uint64_t v6 = v0[41];
  uint64_t v7 = v0[39];

  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v6, enum case for ActivityType.correction(_:), v7);
  if (qword_17B3D8 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[37];
  uint64_t v9 = v0[38];
  uint64_t v11 = v0[35];
  uint64_t v10 = v0[36];
  uint64_t v12 = sub_33D8(v10, (uint64_t)qword_181290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v12, v10);
  uint64_t v13 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  if (qword_17B3E0 != -1) {
    swift_once();
  }
  uint64_t v14 = v0[40];
  uint64_t v15 = v0[37];
  uint64_t v59 = v0[38];
  uint64_t v60 = v0[41];
  uint64_t v16 = v0[35];
  uint64_t v61 = v0[36];
  uint64_t v18 = v0[33];
  uint64_t v17 = v0[34];
  uint64_t v20 = v0[27];
  uint64_t v19 = v0[28];
  uint64_t v62 = v0[22];
  uint64_t v63 = v0[39];
  uint64_t v21 = sub_140670();
  uint64_t v22 = sub_33D8(v21, (uint64_t)qword_1812A8);
  uint64_t v23 = *(void *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v17, v22, v21);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, 1, 1, v20);
  sub_140640();
  sub_904C(v18, &qword_17C068);
  sub_904C(v17, &qword_17C070);
  sub_904C(v16, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v59, v61);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v60, v63);
  uint64_t v24 = *(void *)(v62 + 88);
  v0[42] = v24;
  if (v24)
  {
    uint64_t v26 = v0[31];
    uint64_t v25 = v0[32];
    uint64_t v27 = v0[30];
    uint64_t v28 = swift_allocObject();
    v0[43] = v28;
    *(unsigned char *)(v28 + 16) = 0;
    uint64_t v29 = swift_allocObject();
    v0[44] = v29;
    *(void *)(v29 + 16) = 0;
    swift_retain();
    sub_140720();
    BOOL v30 = sub_1406C0();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    uint64_t v31 = v0[22];
    if (v30)
    {
      uint64_t v32 = (void *)swift_task_alloc();
      v0[45] = v32;
      _OWORD v32[2] = v31;
      v32[3] = v24;
      v32[4] = v28;
      v32[5] = v29;
      unint64_t v33 = (void *)swift_task_alloc();
      v0[46] = v33;
      void *v33 = v0;
      v33[1] = sub_121E54;
      char v34 = (char *)&type metadata for () + 8;
      int v35 = sub_129E8C;
LABEL_20:
      return withCheckedContinuation<A>(isolation:function:_:)(v33, 0, 0, 0x2865747563657865, 0xE900000000000029, v35, v32, v34);
    }
    sub_3410(v31 + 40, (uint64_t)(v0 + 2));
    sub_90A8(v0 + 2, v0[5]);
    uint64_t v44 = (void *)sub_140EF0();

    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
    if (!v44) {
      goto LABEL_19;
    }
    uint64_t v45 = sub_141160();
    os_log_type_t v46 = sub_141480();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v47 = 0;
      _os_log_impl(&dword_0, v45, v46, "We have an existing valid timer. This is unexpected. Attempting to stop current timer.", v47, 2u);
      swift_slowDealloc();
    }

    sub_3410(v31 + 40, (uint64_t)(v0 + 7));
    sub_90A8(v0 + 7, v0[10]);
    char v48 = sub_140EC0();
    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
    if (v48)
    {
LABEL_19:
      uint64_t v49 = v0[22];
      uint64_t v32 = (void *)swift_task_alloc();
      v0[48] = v32;
      _OWORD v32[2] = v49;
      v32[3] = v24;
      v32[4] = v29;
      v32[5] = v28;
      unint64_t v33 = (void *)swift_task_alloc();
      v0[49] = v33;
      void *v33 = v0;
      v33[1] = sub_122248;
      char v34 = (char *)&type metadata for () + 8;
      int v35 = sub_129E80;
      goto LABEL_20;
    }
    uint64_t v50 = sub_141160();
    os_log_type_t v51 = sub_141470();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_0, v50, v51, "Failed to stop current timer using siriTimerManager.stopCurrentTimerSync", v52, 2u);
      swift_slowDealloc();
    }
    uint64_t v54 = v0[28];
    uint64_t v53 = v0[29];
    uint64_t v55 = v0[27];

    (*(void (**)(uint64_t, void, uint64_t))(v54 + 104))(v53, enum case for SiriTimeEventSender.ReasonDescription.failedToStopCurrentTimer(_:), v55);
    unint64_t v42 = (void *)swift_task_alloc();
    v0[47] = v42;
    *unint64_t v42 = v0;
    uint64_t v43 = sub_1220F0;
  }
  else
  {
    uint64_t v36 = sub_141160();
    os_log_type_t v37 = sub_141470();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_0, v36, v37, "timerUsoEntity is nil! RecreateDeletedTimerFlow execute() has no timer to recreate.", v38, 2u);
      swift_slowDealloc();
    }
    uint64_t v40 = v0[28];
    uint64_t v39 = v0[29];
    uint64_t v41 = v0[27];

    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v39, enum case for SiriTimeEventSender.ReasonDescription.noTimerToCreate(_:), v41);
    unint64_t v42 = (void *)swift_task_alloc();
    v0[53] = v42;
    *unint64_t v42 = v0;
    uint64_t v43 = sub_12287C;
  }
  v42[1] = v43;
  uint64_t v56 = v0[29];
  uint64_t v57 = v0[21];
  return sub_124174(v57, v56);
}

uint64_t sub_121E54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_121F6C, 0, 0);
}

uint64_t sub_121F6C()
{
  uint64_t v1 = v0[44];
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  v0[50] = v2;
  if (v2)
  {
    uint64_t v3 = v0[43];
    swift_beginAccess();
    char v4 = *(unsigned char *)(v3 + 16);
    id v5 = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[51] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_122360;
    return sub_125028((uint64_t)v5, v4);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[28] + 104))(v0[29], enum case for SiriTimeEventSender.ReasonDescription.failedToCreateTimer(_:), v0[27]);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[52] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_122638;
    uint64_t v9 = v0[29];
    uint64_t v10 = v0[21];
    return sub_124174(v10, v9);
  }
}

uint64_t sub_1220F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  uint64_t v2 = *(void *)(*(void *)v0 + 224);
  uint64_t v3 = *(void *)(*(void *)v0 + 216);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_12A8F8, 0, 0);
}

uint64_t sub_122248()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_12A8E8, 0, 0);
}

uint64_t sub_122360()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_12245C, 0, 0);
}

uint64_t sub_12245C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[22] + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24RecreateDeletedTimerFlow_followupPluginAction;
  swift_beginAccess();
  sub_8FE8(v4, v3, &qword_17D740);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v6 = (void *)v0[50];
  if (v5 == 1)
  {
    uint64_t v7 = v0[23];

    sub_904C(v7, &qword_17D740);
    sub_13EF00();
    swift_release();
  }
  else
  {
    uint64_t v9 = v0[25];
    uint64_t v8 = v0[26];
    uint64_t v10 = v0[24];
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 32))(v8, v0[23], v10);
    sub_13EF10();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_122638()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  uint64_t v2 = *(void *)(*(void *)v0 + 224);
  uint64_t v3 = *(void *)(*(void *)v0 + 216);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_122790, 0, 0);
}

uint64_t sub_122790()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_12287C()
{
  uint64_t v1 = *(void *)(*v0 + 232);
  uint64_t v2 = *(void *)(*v0 + 224);
  uint64_t v3 = *(void *)(*v0 + 216);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
  return v5();
}

void sub_122ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a5;
  uint64_t v45 = a4;
  uint64_t v7 = sub_5830(&qword_1804E0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v43 = v9;
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a2 + 96)) {
    uint64_t v11 = 2;
  }
  else {
    uint64_t v11 = 3;
  }
  if (sub_13F9C0())
  {
    sub_13FAB0();
    double v13 = v12;
    swift_release();
  }
  else
  {
    [self defaultDuration];
    double v13 = v14;
  }
  id v46 = [objc_allocWithZone((Class)MTMutableTimer) initWithState:v11 duration:v13];
  sub_13F9E0();
  NSString v16 = v15;
  if (v15)
  {
    sub_141280();
    swift_bridgeObjectRelease();
    id v17 = objc_allocWithZone((Class)INSpeakableString);
    NSString v18 = sub_141240();
    swift_bridgeObjectRelease();
    NSString v16 = [v17 initWithSpokenPhrase:v18];

    if (v16)
    {
      id v19 = [v16 spokenPhrase];

      sub_141250();
      NSString v16 = sub_141240();
      swift_bridgeObjectRelease();
    }
  }
  [v46 setTitle:v16];

  id v20 = [*(id *)(a2 + 80) addTimer:v46];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v40 = v8 + 16;
    unint64_t v42 = v22;
    uint64_t v37 = a1;
    v22(v10, a1, v7);
    uint64_t v38 = v10;
    uint64_t v23 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v41 = v23 | 7;
    uint64_t v24 = (char *)swift_allocObject();
    uint64_t v25 = v45;
    *((void *)v24 + 2) = v46;
    *((void *)v24 + 3) = v25;
    uint64_t v26 = v44;
    *((void *)v24 + 4) = a2;
    *((void *)v24 + 5) = v26;
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v39(&v24[(v23 + 48) & ~v23], v10, v7);
    os_log_type_t v51 = sub_12A434;
    uint64_t v52 = v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_1207B0;
    uint64_t v50 = &unk_176810;
    uint64_t v27 = _Block_copy(&aBlock);
    id v28 = v21;
    id v29 = v46;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    id v30 = [v28 addSuccessBlock:v27];
    _Block_release(v27);

    uint64_t v31 = v38;
    v42(v38, v37, v7);
    uint64_t v32 = swift_allocObject();
    v39((char *)(v32 + ((v23 + 16) & ~v23)), v31, v7);
    os_log_type_t v51 = sub_12A55C;
    uint64_t v52 = (void *)v32;
    aBlock = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_1207B8;
    uint64_t v50 = &unk_176860;
    unint64_t v33 = _Block_copy(&aBlock);
    id v34 = v28;
    swift_release();
    id v35 = [v34 addFailureBlock:v33];

    _Block_release(v33);
  }
  else
  {
    id v36 = v46;
  }
}

uint64_t sub_122FB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_141170();
  sub_33D8(v9, (uint64_t)qword_180718);
  id v10 = a2;
  uint64_t v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t type = v12;
    double v13 = (uint8_t *)swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)double v13 = 136315138;
    buf = v13;
    uint64_t v14 = a3;
    id v15 = [v10 timerIDString];
    uint64_t v16 = sub_141250();
    unint64_t v18 = v17;

    a3 = v14;
    sub_58C0(v16, v18, v25);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, type, "RecreateDeletedTimerFlow: Added mtTimer successfully with ID %s", buf, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  char v19 = *(unsigned char *)(a4 + 96);
  swift_beginAccess();
  *(unsigned char *)(a3 + 16) = v19;
  id v20 = sub_10F7D8();
  swift_beginAccess();
  uint64_t v21 = *(void **)(a5 + 16);
  *(void *)(a5 + 16) = v20;

  sub_5830(&qword_1804E0);
  return sub_1413C0();
}

uint64_t sub_123220()
{
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_141170();
  sub_33D8(v0, (uint64_t)qword_180718);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141470();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    sub_1415C0();
    *uint64_t v4 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "RecreateDeletedTimerFlow: Added mtTimer failed with error %@", v3, 0xCu);
    sub_5830(&qword_17D478);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_5830(&qword_1804E0);
  return sub_1413C0();
}

uint64_t sub_1233F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = a5;
  uint64_t v8 = sub_5830(&qword_1804E0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_3410(a2 + 40, (uint64_t)v18);
  v16[1] = v18[4];
  v16[0] = sub_90A8(v18, v18[3]);
  sub_140CA0();
  uint64_t v11 = swift_retain();
  id v12 = sub_10BDB0(v11, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a4;
  *((void *)v14 + 3) = a2;
  *((void *)v14 + 4) = v17;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_140EE0();

  swift_release();
  return _s20HandleIntentStrategyVwxx_1((uint64_t)v18);
}

void sub_1235CC(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v51 = a5;
  uint64_t v48 = a4;
  uint64_t v49 = a3;
  uint64_t v7 = sub_140DD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)v45 - v12;
  uint64_t v50 = sub_5830(&qword_1804E0);
  uint64_t v47 = *(void *)(v50 - 8);
  uint64_t v14 = *(void *)(v47 + 64);
  __chkstk_darwin(v50);
  id v46 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_5830(&qword_17DA40);
  __chkstk_darwin(v15);
  uint64_t v17 = (void **)((char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_8FE8(a1, (uint64_t)v17, &qword_17DA40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v18 = *(void (**)(char *, void **, uint64_t))(v8 + 32);
    v18(v13, v17, v7);
    if (qword_17B3D0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_141170();
    sub_33D8(v19, (uint64_t)qword_180718);
    id v20 = sub_141160();
    os_log_type_t v21 = sub_141480();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "Failed to create timer", v22, 2u);
      swift_slowDealloc();
    }

    sub_1413C0();
    uint64_t v23 = sub_140AB0();
    uint64_t v53 = v23;
    uint64_t v54 = &protocol witness table for ABCReport;
    uint64_t v24 = sub_187EC(v52);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    sub_1F164(&qword_17DA38, (void (*)(uint64_t))&type metadata accessor for TimerOperationError);
    swift_allocError();
    v18(v25, (void **)v11, v7);
    *uint64_t v24 = sub_13E450();
    uint64_t v26 = enum case for ErrorSubType.managerReturnedError(_:);
    uint64_t v27 = sub_1407D0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v24, v26, v27);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v24, enum case for ABCReport.timerUndoHandle(_:), v23);
    sub_140820();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v52);
    swift_errorRelease();
  }
  else
  {
    id v28 = *v17;
    if (qword_17B3D0 != -1) {
      swift_once();
    }
    id v29 = (void **)(a2 + 16);
    uint64_t v30 = sub_141170();
    sub_33D8(v30, (uint64_t)qword_180718);
    uint64_t v31 = sub_141160();
    os_log_type_t v32 = sub_141480();
    if (os_log_type_enabled(v31, v32))
    {
      unint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v33 = 0;
      _os_log_impl(&dword_0, v31, v32, "Successfully created", v33, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    id v34 = *v29;
    *id v29 = v28;
    id v35 = v28;

    if (v49[96] == 1)
    {
      sub_3410((uint64_t)(v49 + 40), (uint64_t)v52);
      uint64_t v49 = v54;
      v45[1] = sub_90A8(v52, v53);
      sub_2FF44();
      id v36 = v35;
      Class isa = sub_141570(0).super.super.isa;
      id v38 = [objc_allocWithZone((Class)sub_140C10()) init];
      [v36 setShouldMatchAny:isa];
      id v39 = v36;
      [v38 setTargetTimer:v39];

      uint64_t v41 = v46;
      uint64_t v40 = v47;
      uint64_t v42 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v51, v50);
      unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = v48;
      (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v44 + v43, v41, v42);
      swift_retain();
      sub_140ED0();
      swift_release();

      _s20HandleIntentStrategyVwxx_1((uint64_t)v52);
    }
    else
    {
      sub_1413C0();
    }
  }
}

uint64_t sub_123C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140DD0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31[-1] - v9;
  uint64_t v11 = sub_5830(&qword_17DA30);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v31[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8FE8(a1, (uint64_t)v13, &qword_17DA30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v14(v10, v13, v4);
    if (qword_17B3D0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_141170();
    sub_33D8(v15, (uint64_t)qword_180718);
    uint64_t v16 = sub_141160();
    os_log_type_t v17 = sub_141480();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "failed to pause the created timer", v18, 2u);
      swift_slowDealloc();
    }

    uint64_t v19 = sub_140AB0();
    v31[3] = v19;
    v31[4] = (uint64_t)&protocol witness table for ABCReport;
    id v20 = sub_187EC(v31);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_1F164(&qword_17DA38, (void (*)(uint64_t))&type metadata accessor for TimerOperationError);
    swift_allocError();
    v14(v21, v8, v4);
    *id v20 = sub_13E450();
    uint64_t v22 = enum case for ErrorSubType.managerReturnedError(_:);
    uint64_t v23 = sub_1407D0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v20, v22, v23);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, enum case for ABCReport.timerUndoHandle(_:), v19);
    sub_140820();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _s20HandleIntentStrategyVwxx_1((uint64_t)v31);
    swift_errorRelease();
  }
  else
  {
    if (qword_17B3D0 != -1) {
      swift_once();
    }
    uint64_t v24 = (unsigned char *)(a2 + 16);
    uint64_t v25 = sub_141170();
    sub_33D8(v25, (uint64_t)qword_180718);
    uint64_t v26 = sub_141160();
    os_log_type_t v27 = sub_141480();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "Successfully paused", v28, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    *uint64_t v24 = 1;
  }
  sub_5830(&qword_1804E0);
  return sub_1413C0();
}

uint64_t RecreateDeletedTimerFlow.execute(completion:)()
{
  return sub_13EA80();
}

uint64_t sub_124174(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_13EFF0();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_13ECE0();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v6 = sub_141170();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v7 = sub_140680();
  v3[14] = v7;
  v3[15] = *(void *)(v7 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v8 = sub_1406A0();
  v3[17] = v8;
  v3[18] = *(void *)(v8 - 8);
  v3[19] = swift_task_alloc();
  sub_5830(&qword_17C068);
  v3[20] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v3[21] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v3[22] = swift_task_alloc();
  uint64_t v9 = sub_140660();
  v3[23] = v9;
  v3[24] = *(void *)(v9 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v10 = sub_13ED60();
  v3[26] = v10;
  v3[27] = *(void *)(v10 - 8);
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_1244F0, 0, 0);
}

uint64_t sub_1244F0()
{
  (*(void (**)(void, void, void))(v0[27] + 104))(v0[28], enum case for ActivityType.failed(_:), v0[26]);
  if (qword_17B3D8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = sub_33D8(v3, (uint64_t)qword_181290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v6 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_17B3E0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[24];
  uint64_t v28 = v0[25];
  uint64_t v29 = v0[28];
  uint64_t v9 = v0[22];
  uint64_t v30 = v0[23];
  uint64_t v31 = v0[26];
  uint64_t v11 = v0[20];
  uint64_t v10 = v0[21];
  uint64_t v12 = v0[15];
  uint64_t v32 = v0[14];
  uint64_t v33 = v0[16];
  uint64_t v13 = v0[3];
  uint64_t v14 = sub_140670();
  uint64_t v15 = sub_33D8(v14, (uint64_t)qword_1812A8);
  uint64_t v16 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v10, v15, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v14);
  uint64_t v17 = sub_140650();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v11, v13, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
  sub_140640();
  sub_904C(v11, &qword_17C068);
  sub_904C(v10, &qword_17C070);
  sub_904C(v9, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v28, v30);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v31);
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v33, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v32);
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v20 = v0[12];
  uint64_t v19 = v0[13];
  uint64_t v21 = v0[11];
  uint64_t v22 = sub_33D8(v21, (uint64_t)qword_180718);
  v0[29] = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v22, v21);
  mach_absolute_time();
  sub_1406B0();
  uint64_t v23 = sub_140560();
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  uint64_t v24 = sub_140550();
  v0[30] = v24;
  sub_5830(&qword_17F3D0);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 32) = 0x656369766564;
  *(void *)(v25 + 40) = 0xE600000000000000;
  *(void *)(v25 + 72) = v23;
  id v34 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  v0[31] = v25;
  *(_OWORD *)(v25 + 16) = xmmword_142D50;
  *(void *)(v25 + 48) = v24;
  swift_retain();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[32] = v26;
  void *v26 = v0;
  v26[1] = sub_1249B4;
  return v34(0xD000000000000011, 0x8000000000147810, v25);
}

uint64_t sub_1249B4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 264) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_124E98;
  }
  else
  {
    *(void *)(v4 + 272) = a1;
    uint64_t v5 = sub_124B00;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_124B00()
{
  swift_release();
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[35] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_124BC8;
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[2];
  return PatternExecutionResult.generateFlowPatternResponse(phase:contextUpdate:measure:)(v5, v3, v4, v2);
}

uint64_t sub_124BC8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 272);
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = *(void *)(*(void *)v0 + 72);
  uint64_t v4 = *(void *)(*(void *)v0 + 64);
  uint64_t v5 = *(void *)(*(void *)v0 + 56);
  uint64_t v6 = *(void *)(*(void *)v0 + 48);
  uint64_t v7 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_124D9C, 0, 0);
}

uint64_t sub_124D9C()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_124E98()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_141160();
  os_log_type_t v5 = sub_141470();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_0, v4, v5, "Failed to produce Incomplete response.", v6, 2u);
    swift_slowDealloc();
  }

  sub_13EF00();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_125028(uint64_t a1, char a2)
{
  sub_5830(&qword_17C068);
  v2[12] = swift_task_alloc();
  sub_5830(&qword_17C070);
  v2[13] = swift_task_alloc();
  sub_5830(&qword_17C078);
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_140660();
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v6 = sub_13ED60();
  v2[18] = v6;
  v2[19] = *(void *)(v6 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v2[21] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_125224;
  return sub_126054((uint64_t)(v2 + 2), a1, a2);
}

uint64_t sub_125224()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_125830;
  }
  else {
    uint64_t v2 = sub_125338;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_125338()
{
  sub_13F170();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  sub_90A8(v0 + 7, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[23] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_125404;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 2, v1, v2);
}

uint64_t sub_125404()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_125C38;
  }
  else {
    uint64_t v2 = sub_125518;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_125518()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ActivityType.completed(_:), v3);
  if (qword_17B3D8 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v7 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v8 = sub_33D8(v6, (uint64_t)qword_181290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8, v6);
  uint64_t v9 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  if (qword_17B3E0 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[19];
  uint64_t v10 = v0[20];
  uint64_t v12 = v0[17];
  uint64_t v24 = v0[18];
  uint64_t v13 = v0[16];
  uint64_t v23 = v0[15];
  uint64_t v15 = v0[13];
  uint64_t v14 = v0[14];
  uint64_t v16 = v0[12];
  uint64_t v17 = sub_140670();
  uint64_t v18 = sub_33D8(v17, (uint64_t)qword_1812A8);
  uint64_t v19 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v15, v18, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v17);
  uint64_t v20 = sub_140650();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
  sub_140640();
  sub_904C(v16, &qword_17C068);
  sub_904C(v15, &qword_17C070);
  sub_904C(v14, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v23);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v24);
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_125830()
{
  (*(void (**)(void, void, void))(v0[19] + 104))(v0[20], enum case for ActivityType.failed(_:), v0[18]);
  if (qword_17B3D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = sub_33D8(v3, (uint64_t)qword_181290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v5, v3);
  uint64_t v6 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_17B3E0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[19];
  uint64_t v8 = v0[17];
  uint64_t v27 = v0[18];
  uint64_t v9 = v0[16];
  uint64_t v25 = v0[20];
  uint64_t v26 = v0[15];
  uint64_t v11 = v0[13];
  uint64_t v10 = v0[14];
  uint64_t v12 = v0[12];
  uint64_t v13 = sub_140670();
  uint64_t v14 = sub_33D8(v13, (uint64_t)qword_1812A8);
  uint64_t v15 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v13);
  uint64_t v16 = enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:);
  uint64_t v17 = sub_140650();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v12, v16, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
  sub_140640();
  sub_904C(v12, &qword_17C068);
  sub_904C(v11, &qword_17C070);
  sub_904C(v10, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v26);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v27);
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_180718);
  uint64_t v20 = sub_141160();
  os_log_type_t v21 = sub_141470();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "Error producing and submitting output", v22, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_125C38()
{
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 7));
  (*(void (**)(void, void, void))(v0[19] + 104))(v0[20], enum case for ActivityType.failed(_:), v0[18]);
  if (qword_17B3D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = sub_33D8(v3, (uint64_t)qword_181290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v5, v3);
  uint64_t v6 = sub_13EB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  if (qword_17B3E0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[19];
  uint64_t v8 = v0[17];
  uint64_t v27 = v0[18];
  uint64_t v9 = v0[16];
  uint64_t v25 = v0[20];
  uint64_t v26 = v0[15];
  uint64_t v11 = v0[13];
  uint64_t v10 = v0[14];
  uint64_t v12 = v0[12];
  uint64_t v13 = sub_140670();
  uint64_t v14 = sub_33D8(v13, (uint64_t)qword_1812A8);
  uint64_t v15 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v11, v14, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v13);
  uint64_t v16 = enum case for SiriTimeEventSender.ReasonDescription.errorProducingOutput(_:);
  uint64_t v17 = sub_140650();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v12, v16, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
  sub_140640();
  sub_904C(v12, &qword_17C068);
  sub_904C(v11, &qword_17C070);
  sub_904C(v10, &qword_17C078);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v26);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v27);
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_180718);
  uint64_t v20 = sub_141160();
  os_log_type_t v21 = sub_141470();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "Error producing and submitting output", v22, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_126054(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 352) = a2;
  *(void *)(v4 + 360) = v3;
  *(unsigned char *)(v4 + 896) = a3;
  *(void *)(v4 + 344) = a1;
  *(void *)(v4 + 368) = type metadata accessor for CreateTimerHandledOnWatchParameters(0);
  *(void *)(v4 + 376) = swift_task_alloc();
  uint64_t v5 = sub_13F1E0();
  *(void *)(v4 + 384) = v5;
  *(void *)(v4 + 392) = *(void *)(v5 - 8);
  *(void *)(v4 + 400) = swift_task_alloc();
  *(void *)(v4 + 408) = swift_task_alloc();
  *(void *)(v4 + 416) = type metadata accessor for SiriTimePluginModel(0);
  *(void *)(v4 + 424) = swift_task_alloc();
  uint64_t v6 = sub_13ECE0();
  *(void *)(v4 + 432) = v6;
  *(void *)(v4 + 440) = *(void *)(v6 - 8);
  *(void *)(v4 + 448) = swift_task_alloc();
  *(void *)(v4 + 456) = swift_task_alloc();
  *(void *)(v4 + 464) = swift_task_alloc();
  sub_5830(&qword_17BE78);
  *(void *)(v4 + 472) = swift_task_alloc();
  *(void *)(v4 + 480) = swift_task_alloc();
  uint64_t v7 = sub_140730();
  *(void *)(v4 + 488) = v7;
  *(void *)(v4 + 496) = *(void *)(v7 - 8);
  *(void *)(v4 + 504) = swift_task_alloc();
  uint64_t v8 = sub_141170();
  *(void *)(v4 + 512) = v8;
  *(void *)(v4 + 520) = *(void *)(v8 - 8);
  *(void *)(v4 + 528) = swift_task_alloc();
  uint64_t v9 = sub_140680();
  *(void *)(v4 + 536) = v9;
  *(void *)(v4 + 544) = *(void *)(v9 - 8);
  *(void *)(v4 + 552) = swift_task_alloc();
  uint64_t v10 = sub_1406A0();
  *(void *)(v4 + 560) = v10;
  *(void *)(v4 + 568) = *(void *)(v10 - 8);
  *(void *)(v4 + 576) = swift_task_alloc();
  uint64_t v11 = sub_13EFF0();
  *(void *)(v4 + 584) = v11;
  *(void *)(v4 + 592) = *(void *)(v11 - 8);
  *(void *)(v4 + 600) = swift_task_alloc();
  uint64_t v12 = sub_1405D0();
  *(void *)(v4 + 608) = v12;
  *(void *)(v4 + 616) = *(void *)(v12 - 8);
  *(void *)(v4 + 624) = swift_task_alloc();
  uint64_t v13 = sub_1405C0();
  *(void *)(v4 + 632) = v13;
  *(void *)(v4 + 640) = *(void *)(v13 - 8);
  *(void *)(v4 + 648) = swift_task_alloc();
  return _swift_task_switch(sub_1264F4, 0, 0);
}

uint64_t sub_1264F4()
{
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 640);
  uint64_t v3 = *(void *)(v0 + 632);
  uint64_t v4 = *(void *)(v0 + 624);
  uint64_t v5 = *(void *)(v0 + 616);
  uint64_t v6 = *(void *)(v0 + 608);
  uint64_t v7 = *(void *)(v0 + 600);
  int v25 = *(unsigned __int8 *)(v0 + 896);
  uint64_t v8 = *(void **)(v0 + 352);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for TipKitSiriTimeSource.timerPlugin(_:), v3);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for TipKitSiriTimeContext.timerCreatedWithSiri(_:), v6);
  sub_1409D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v0 + 656) = sub_5830(&qword_17BF00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_142E80;
  *(void *)(inited + 32) = v8;
  unint64_t v26 = inited;
  sub_141330();
  v8;
  sub_15E9C(v26, v7);
  swift_bridgeObjectRelease();
  sub_140450();
  uint64_t v10 = (void *)sub_140440();
  uint64_t v11 = sub_174C0(0, v10);

  *(void *)(v0 + 328) = v11;
  if (v25 == 1)
  {
    uint64_t v12 = sub_129FEC();
    swift_release();
    *(void *)(v0 + 328) = v12;
  }
  else if (*(unsigned char *)(*(void *)(v0 + 360) + 96) == 1)
  {
    if (qword_17B3D0 != -1) {
      swift_once();
    }
    sub_33D8(*(void *)(v0 + 512), (uint64_t)qword_180718);
    uint64_t v13 = sub_141160();
    os_log_type_t v14 = sub_141480();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "Created the timer but its running even though it should have been paused.", v15, 2u);
      swift_slowDealloc();
    }
  }
  id v16 = [*(id *)(v0 + 352) identifier];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_141250();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  *(void *)(v0 + 664) = v20;
  sub_140DF0();
  sub_140DE0();
  uint64_t v21 = *(void *)(v0 + 120);
  uint64_t v22 = *(void *)(v0 + 128);
  sub_90A8((void *)(v0 + 96), v21);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 672) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_126870;
  return dispatch thunk of SessionManaging.sessionIDString(for:)(v18, v20, v21, v22);
}

uint64_t sub_126870(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 680) = a1;
  *(void *)(v3 + 688) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1269C0, 0, 0);
}

uint64_t sub_1269C0()
{
  uint64_t v81 = (void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 552);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 536);
  _s20HandleIntentStrategyVwxx_1(v0 + 96);
  sub_1408B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8((void *)(v0 + 136), *(void *)(v0 + 160));
  char v5 = sub_13EC10();
  *(unsigned char *)(v0 + 897) = v5 & 1;
  char v6 = v5 & (v1 != 0);
  _s20HandleIntentStrategyVwxx_1(v0 + 136);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v4);
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 512);
  uint64_t v10 = sub_33D8(v9, (uint64_t)qword_180718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
  mach_absolute_time();
  sub_1406B0();
  sub_1408A0();
  sub_140890();
  swift_release();
  sub_90A8(v81, *(void *)(v0 + 200));
  char v11 = sub_13EC10();
  _s20HandleIntentStrategyVwxx_1((uint64_t)v81);
  if (v6 & 1 | ((v11 & 1) == 0))
  {
    uint64_t v12 = (char *)[*(id *)(v0 + 352) type];
    if ((unint64_t)v12 < 2)
    {
      uint64_t v14 = *(void *)(v0 + 496);
      uint64_t v13 = *(void *)(v0 + 504);
      uint64_t v15 = *(void *)(v0 + 488);
      sub_140720();
      BOOL v16 = sub_1406C0();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
      if (v16)
      {
        uint64_t v17 = *(void *)(v0 + 328);
        *(void *)(v0 + 696) = v17;
        uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration);
        uint64_t v19 = *(void *)(v0 + 480);
        if (v18)
        {
          swift_retain();
          swift_retain();
          sub_185D4((uint64_t *)(v0 + 56));
          sub_188C4(v18, (void *)(v0 + 56), v19);
          _s20HandleIntentStrategyVwxx_1(v0 + 56);
          swift_release();
          uint64_t v20 = sub_140500();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
        }
        else
        {
          uint64_t v78 = sub_140500();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v19, 1, 1, v78);
          swift_retain();
        }
        uint64_t v79 = (void *)swift_task_alloc();
        *(void *)(v0 + 704) = v79;
        *uint64_t v79 = v0;
        v79[1] = sub_127514;
        uint64_t v80 = *(void *)(v0 + 480);
        return sub_1A198(v17, v80);
      }
      uint64_t v50 = *(void *)(*(void *)(v0 + 360) + 32);
      uint64_t v51 = &dword_17C7E8;
      uint64_t v52 = dword_17C7E8;
      uint64_t v53 = (void *)swift_task_alloc();
      *(void *)(v0 + 736) = v53;
      *uint64_t v53 = v0;
      uint64_t v54 = sub_127ADC;
      goto LABEL_20;
    }
    if (v12 == (unsigned char *)&dword_0 + 2)
    {
      uint64_t v50 = *(void *)(*(void *)(v0 + 360) + 32);
      uint64_t v51 = &dword_17C7F0;
      uint64_t v52 = dword_17C7F0;
      uint64_t v53 = (void *)swift_task_alloc();
      *(void *)(v0 + 776) = v53;
      *uint64_t v53 = v0;
      uint64_t v54 = sub_1280EC;
LABEL_20:
      v53[1] = v54;
      return ((uint64_t (*)(uint64_t, uint64_t))((char *)v51 + v52))(v50, v0 + 328);
    }
    uint64_t v66 = sub_140560();
    sub_1408A0();
    sub_140890();
    swift_release();
    uint64_t v67 = sub_140550();
    *(void *)(v0 + 792) = v67;
    sub_5830(&qword_17F3D0);
    uint64_t v68 = swift_allocObject();
    *(void *)(v0 + 800) = v68;
    *(_OWORD *)(v68 + 16) = xmmword_142D50;
    *(void *)(v68 + 32) = 0x656369766564;
    *(void *)(v68 + 40) = 0xE600000000000000;
    *(void *)(v68 + 72) = v66;
    *(void *)(v68 + 48) = v67;
    uint64_t v69 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
    swift_retain();
    unint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 808) = v70;
    *unint64_t v70 = v0;
    v70[1] = sub_128394;
    id v46 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                              + v69);
    unint64_t v47 = 0x8000000000147810;
    unint64_t v48 = 0xD000000000000011;
    uint64_t v49 = v68;
    goto LABEL_23;
  }
  uint64_t v21 = *(void **)(v0 + 352);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_142E80;
  *(void *)(v22 + 32) = v21;
  unint64_t v83 = v22;
  sub_141330();
  id v23 = v21;
  id v24 = sub_79174(v83, 13);
  *(void *)(v0 + 824) = v24;
  swift_bridgeObjectRelease();
  if (v24)
  {
    int v25 = self;
    *(void *)(v0 + 336) = 0;
    id v26 = [v25 archivedDataWithRootObject:v24 requiringSecureCoding:1 error:v0 + 336];
    uint64_t v27 = *(void **)(v0 + 336);
    if (v26)
    {
      uint64_t v28 = v26;
      uint64_t v29 = *(void *)(v0 + 472);
      uint64_t v31 = *(void *)(v0 + 368);
      uint64_t v30 = *(void **)(v0 + 376);
      id v32 = v27;
      uint64_t v33 = sub_13E4D0();
      unint64_t v35 = v34;

      *(void *)(v0 + 832) = v33;
      *(void *)(v0 + 840) = v35;
      sub_34B1C(v33, v35);
      *uint64_t v30 = 0;
      v30[1] = 0;
      id v36 = (char *)v30 + *(int *)(v31 + 24);
      uint64_t v37 = sub_140500();
      id v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
      v38(v36, 1, 1, v37);
      uint64_t v39 = (uint64_t)v30 + *(int *)(v31 + 28);
      v38((char *)v39, 1, 1, v37);
      sub_13E4C0(0);
      sub_1404D0();
      v38((char *)v29, 0, 1, v37);
      sub_90C18(v29, v39, &qword_17BE78);
      uint64_t v40 = *(void *)(v0 + 328);
      swift_retain();
      swift_release();
      v30[1] = v40;
      sub_1404A0();
      if (qword_17B240 != -1) {
        swift_once();
      }
      uint64_t v41 = *(uint64_t **)(v0 + 376);
      swift_retain();
      uint64_t v42 = sub_140490();
      swift_release();
      *uint64_t v41 = v42;
      uint64_t v43 = sub_574C4();
      *(void *)(v0 + 848) = v43;
      uint64_t v44 = async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v45 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v45;
      *uint64_t v45 = v0;
      v45[1] = sub_128830;
      id v46 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                                + v44);
      unint64_t v47 = 0x8000000000148650;
      unint64_t v48 = 0xD00000000000001ALL;
      uint64_t v49 = v43;
LABEL_23:
      return v46(v48, v47, v49);
    }
    uint64_t v82 = *(void *)(v0 + 600);
    uint64_t v71 = *(void *)(v0 + 592);
    uint64_t v72 = *(void *)(v0 + 584);
    uint64_t v73 = *(void *)(v0 + 576);
    uint64_t v74 = *(void *)(v0 + 568);
    uint64_t v75 = *(void *)(v0 + 560);
    id v76 = v27;
    swift_bridgeObjectRelease();
    sub_13E460();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v82, v72);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_141160();
    uint64_t v56 = sub_141480();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl(&dword_0, v55, (os_log_type_t)v56, "Could not get timer action from timer.", v57, 2u);
      swift_slowDealloc();
    }
    uint64_t v58 = *(void *)(v0 + 600);
    uint64_t v59 = *(void *)(v0 + 592);
    uint64_t v60 = *(void *)(v0 + 584);
    uint64_t v61 = *(void *)(v0 + 576);
    uint64_t v62 = *(void *)(v0 + 568);
    uint64_t v63 = *(void *)(v0 + 560);

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v64 = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v77 = *(uint64_t (**)(void))(v0 + 8);
  return v77();
}

uint64_t sub_127514(uint64_t a1)
{
  uint64_t v3 = *v2;
  v3[89] = a1;
  v3[90] = v1;
  swift_task_dealloc();
  sub_904C(v3[60], &qword_17BE78);
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_129240;
  }
  else
  {
    uint64_t v4 = sub_1276C0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1276C0()
{
  uint64_t v1 = (_OWORD *)(v0 + 216);
  int v2 = *(unsigned __int8 *)(v0 + 897);
  uint64_t v3 = *(void *)(v0 + 688);
  sub_13EC50();
  if (v2 != 1 || v3 == 0)
  {
    uint64_t v6 = *(void *)(v0 + 416);
    char v5 = *(uint64_t **)(v0 + 424);
    sub_5830(&qword_17C358);
    uint64_t v7 = *(void *)(type metadata accessor for SiriTimerSnippetModel(0) - 8);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_142D50;
    sub_1B94C((void *)(v9 + v8));
    *char v5 = v9;
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 240) = v6;
    *(void *)(v0 + 248) = sub_1F164((unint64_t *)&qword_17C348, (void (*)(uint64_t))type metadata accessor for SiriTimePluginModel);
    uint64_t v10 = sub_187EC((uint64_t *)(v0 + 216));
    sub_4ED84((uint64_t)v5, (uint64_t)v10);
  }
  else
  {
    *(void *)(v0 + 248) = 0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
  }
  char v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 728) = v11;
  void *v11 = v0;
  v11[1] = sub_127900;
  uint64_t v12 = *(void *)(v0 + 688);
  uint64_t v13 = *(void *)(v0 + 680);
  uint64_t v14 = *(void *)(v0 + 600);
  uint64_t v15 = *(void *)(v0 + 576);
  uint64_t v16 = *(void *)(v0 + 464);
  uint64_t v17 = *(void *)(v0 + 344);
  return DialogExecutionResult.generateOutput(dialogPhase:context:resultModel:measure:sessionID:responseViewId:)(v17, v16, v14, v1, v15, v13, v12, 0xD000000000000013);
}

uint64_t sub_127900()
{
  uint64_t v1 = *(void *)v0 + 216;
  int v2 = *(void **)(*(void *)v0 + 712);
  uint64_t v3 = *(void *)(*(void *)v0 + 464);
  uint64_t v4 = *(void *)(*(void *)v0 + 440);
  uint64_t v5 = *(void *)(*(void *)v0 + 432);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_904C(v1, &qword_17C350);
  return _swift_task_switch(sub_12A874, 0, 0);
}

uint64_t sub_127ADC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 744) = a1;
  *(void *)(v3 + 752) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_129400;
  }
  else
  {
    uint64_t v4 = sub_127C30;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_127C30()
{
  uint64_t v1 = v0[86];
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[75];
  sub_13EC50();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[95] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_127D7C;
  uint64_t v6 = v0[72];
  uint64_t v7 = v0[51];
  uint64_t v8 = v0[43];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v8, v7, v6);
}

uint64_t sub_127D7C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 768) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[93];
  (*(void (**)(void, void))(v2[49] + 8))(v2[51], v2[48]);

  if (v0) {
    uint64_t v4 = sub_1295C0;
  }
  else {
    uint64_t v4 = sub_127F30;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_127F30()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  (*(void (**)(void, void))(v0[71] + 8))(v0[72], v0[70]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1280EC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[32] = v2;
  v3[33] = a1;
  v3[34] = v1;
  v3[98] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_129080;
  }
  else
  {
    uint64_t v4 = sub_128244;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_128244()
{
  uint64_t v1 = v0[86];
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[75];
  v0[109] = v0[33];
  sub_13EC50();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[110] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_128D20;
  uint64_t v6 = v0[72];
  uint64_t v7 = v0[50];
  uint64_t v8 = v0[43];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v8, v7, v6);
}

uint64_t sub_128394(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[35] = v2;
  v3[36] = a1;
  v3[37] = v1;
  v3[102] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_128654;
  }
  else {
    uint64_t v4 = sub_1284FC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1284FC()
{
  swift_release();
  uint64_t v1 = v0[86];
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[75];
  v0[109] = v0[36];
  sub_13EC50();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[110] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_128D20;
  uint64_t v6 = v0[72];
  uint64_t v7 = v0[50];
  uint64_t v8 = v0[43];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v8, v7, v6);
}

uint64_t sub_128654()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  uint64_t v4 = v0[72];
  uint64_t v5 = v0[71];
  uint64_t v6 = v0[70];
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_128830(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[38] = v2;
  v3[39] = a1;
  v3[40] = v1;
  v3[108] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_128B18;
  }
  else {
    uint64_t v4 = sub_128998;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_128998()
{
  unint64_t v1 = v0[105];
  uint64_t v2 = v0[104];
  uint64_t v3 = (void *)v0[103];
  sub_129F90(v0[47]);
  sub_34B88(v2, v1);

  sub_34B88(v2, v1);
  uint64_t v4 = v0[86];
  uint64_t v5 = v0[85];
  uint64_t v6 = v0[75];
  v0[109] = v0[39];
  sub_13EC50();
  uint64_t v7 = (void *)swift_task_alloc();
  v7[2] = v6;
  v7[3] = v5;
  v7[4] = v4;
  sub_13F1B0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[110] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_128D20;
  uint64_t v9 = v0[72];
  uint64_t v10 = v0[50];
  uint64_t v11 = v0[43];
  return PatternExecutionResult.generatePatternOutput(manifest:measure:)(v11, v10, v9);
}

uint64_t sub_128B18()
{
  unint64_t v1 = v0[105];
  uint64_t v2 = v0[104];
  uint64_t v3 = (void *)v0[103];
  uint64_t v11 = v0[75];
  uint64_t v4 = v0[74];
  uint64_t v5 = v0[73];
  uint64_t v6 = v0[72];
  uint64_t v7 = v0[71];
  uint64_t v8 = v0[70];
  sub_129F90(v0[47]);
  sub_34B88(v2, v1);
  swift_bridgeObjectRelease();
  sub_34B88(v2, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v5);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_128D20()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 888) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[49] + 8))(v2[50], v2[48]);
  if (v0) {
    uint64_t v3 = sub_129780;
  }
  else {
    uint64_t v3 = sub_128EB4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_128EB4()
{
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 568);
  uint64_t v6 = *(void *)(v0 + 560);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_129080()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  (*(void (**)(void, void))(v0[71] + 8))(v0[72], v0[70]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_129240()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  (*(void (**)(void, void))(v0[71] + 8))(v0[72], v0[70]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_129400()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  (*(void (**)(void, void))(v0[71] + 8))(v0[72], v0[70]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1295C0()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  (*(void (**)(void, void))(v0[71] + 8))(v0[72], v0[70]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_129780()
{
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 568);
  uint64_t v6 = *(void *)(v0 + 560);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_129950(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5830(&qword_17BE70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_13EFF0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_13F1C0();
  swift_bridgeObjectRetain();
  return sub_13F1D0();
}

uint64_t RecreateDeletedTimerFlow.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  _s20HandleIntentStrategyVwxx_1(v0 + 40);

  swift_release();
  sub_904C(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24RecreateDeletedTimerFlow_followupPluginAction, &qword_17D740);
  return v0;
}

uint64_t RecreateDeletedTimerFlow.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  _s20HandleIntentStrategyVwxx_1(v0 + 40);

  swift_release();
  sub_904C(v0 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24RecreateDeletedTimerFlow_followupPluginAction, &qword_17D740);

  return swift_deallocClassInstance();
}

uint64_t sub_129B70()
{
  return RecreateDeletedTimerFlow.on(input:)() & 1;
}

uint64_t sub_129B98()
{
  return sub_13EA80();
}

uint64_t sub_129BF8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_159A4;
  return RecreateDeletedTimerFlow.execute()(a1);
}

uint64_t sub_129C94()
{
  type metadata accessor for RecreateDeletedTimerFlow();

  return sub_13EAB0();
}

uint64_t sub_129CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_140590();
  __chkstk_darwin(v6 - 8);
  uint64_t v11 = sub_140F30();
  uint64_t v12 = &protocol witness table for SiriTimerManagerImpl;
  *(void *)&long long v10 = a1;
  type metadata accessor for CreateTimerCATsSimple();
  sub_140580();
  *(void *)(a3 + 16) = sub_140530();
  type metadata accessor for CreateTimerCATs_Async();
  sub_140580();
  *(void *)(a3 + 24) = sub_140470();
  type metadata accessor for CreateTimerCATPatternsExecutor(0);
  sub_140580();
  *(void *)(a3 + 32) = sub_140470();
  *(void *)(a3 + 88) = 0;
  *(unsigned char *)(a3 + 96) = 0;
  uint64_t v7 = a3 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin24RecreateDeletedTimerFlow_followupPluginAction;
  uint64_t v8 = sub_13ED80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_3498(&v10, a3 + 40);
  *(void *)(a3 + 80) = a2;
  return a3;
}

uint64_t sub_129E38()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_129E48()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_129E80(uint64_t a1)
{
  return sub_1233F0(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_129E8C(uint64_t a1)
{
  sub_122ACC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_129E98()
{
  return type metadata accessor for RecreateDeletedTimerFlow();
}

void sub_129EA0()
{
  sub_117FF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_129F70(uint64_t a1)
{
  return sub_129950(a1, *(void *)(v1 + 16));
}

uint64_t sub_129F90(uint64_t a1)
{
  uint64_t TimerHandledOnWatchParameters = type metadata accessor for CreateTimerHandledOnWatchParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(TimerHandledOnWatchParameters - 8) + 8))(a1, TimerHandledOnWatchParameters);
  return a1;
}

uint64_t sub_129FEC()
{
  uint64_t v0 = sub_5830(&qword_17BE78);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v21 - v4;
  if (qword_17B3D0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_141170();
  sub_33D8(v6, (uint64_t)qword_180718);
  uint64_t v7 = sub_141160();
  os_log_type_t v8 = sub_141480();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "Producing dialog to indicate we created a paused timer.", v9, 2u);
    swift_slowDealloc();
  }

  sub_140450();
  long long v10 = (void *)sub_140440();
  uint64_t v11 = sub_174C0(0, v10);

  type metadata accessor for TimerTimer.Builder(0);
  swift_allocObject();
  uint64_t v12 = sub_17FA8();
  uint64_t v13 = v11 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_label;
  uint64_t v14 = v12 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_label;
  swift_beginAccess();
  sub_1816C(v13, v14);
  swift_endAccess();
  uint64_t v15 = v11 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_type;
  uint64_t v16 = v12 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_type;
  swift_beginAccess();
  sub_1816C(v15, v16);
  swift_endAccess();
  sub_140F60();
  uint64_t v17 = sub_140500();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 0, 1, v17);
  sub_18554((uint64_t)v5, (uint64_t)v3);
  uint64_t v18 = v12 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_state;
  swift_beginAccess();
  sub_90C18((uint64_t)v3, v18, &qword_17BE78);
  swift_endAccess();
  *(void *)(v12 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_remainingTime) = *(void *)(v11 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_remainingTime);
  swift_retain();
  swift_release();
  *(void *)(v12 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_duration) = *(void *)(v11 + OBJC_IVAR____TtC23TimerFlowDelegatePlugin10TimerTimer_duration);
  swift_retain();
  swift_release();
  type metadata accessor for TimerTimer(0);
  swift_allocObject();
  uint64_t v19 = sub_1822C(v12);
  swift_release();
  swift_release();
  return v19;
}

uint64_t sub_12A34C()
{
  uint64_t v1 = sub_5830(&qword_1804E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_12A434(uint64_t a1)
{
  sub_5830(&qword_1804E0);
  uint64_t v3 = (void *)v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];

  return sub_122FB0(a1, v3, v4, v5, v6);
}

uint64_t sub_12A4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_12A4C0()
{
  return swift_release();
}

uint64_t sub_12A4C8()
{
  uint64_t v1 = sub_5830(&qword_1804E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_12A55C()
{
  sub_5830(&qword_1804E0);

  return sub_123220();
}

uint64_t sub_12A5D0()
{
  uint64_t v1 = sub_5830(&qword_1804E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_12A6B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_5830(&qword_1804E0) - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = (unsigned char *)v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1235CC(a1, v4, v5, v6, v7);
}

uint64_t sub_12A72C()
{
  uint64_t v1 = sub_5830(&qword_1804E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_12A7FC(uint64_t a1)
{
  sub_5830(&qword_1804E0);
  uint64_t v3 = *(void *)(v1 + 16);

  return sub_123C58(a1, v3);
}

uint64_t sub_12A874()
{
  return sub_127F30();
}

uint64_t sub_12A8FC(uint64_t a1)
{
  return sub_12A93C(a1, (void (*)(void))type metadata accessor for DeleteTimerCATs_Async, &qword_1812C0);
}

uint64_t sub_12A91C(uint64_t a1)
{
  return sub_12A93C(a1, (void (*)(void))type metadata accessor for DeleteTimerCATPatternsExecutor, &qword_1812C8);
}

uint64_t sub_12A93C(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  uint64_t v5 = sub_140590();
  __chkstk_darwin(v5 - 8);
  a2(0);
  sub_140580();
  uint64_t result = sub_140470();
  *a3 = result;
  return result;
}

uint64_t static Transformer<>.timerToAlarmParseTransformer.getter()
{
  sub_13F3E0();

  return sub_140360();
}

uint64_t sub_12AA34()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180908);
  sub_33D8(v0, (uint64_t)qword_180908);
  return sub_140E60();
}

uint64_t sub_12AA80@<X0>(NSObject *a1@<X0>, char *a2@<X8>)
{
  v301 = a1;
  v293 = a2;
  uint64_t v264 = sub_13F540();
  uint64_t v263 = *(void *)(v264 - 8);
  __chkstk_darwin(v264);
  v262 = (char *)&v243 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v279 = (os_log_t)sub_13F500();
  Class isa = v279[-1].isa;
  __chkstk_darwin(v279);
  uint64_t v4 = (char *)&v243 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_13F460();
  uint64_t v271 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  uint64_t v270 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_5830(&qword_17D450);
  __chkstk_darwin(v6 - 8);
  v273 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = sub_13F430();
  uint64_t v266 = *(void *)(v275 - 8);
  uint64_t v8 = __chkstk_darwin(v275);
  uint64_t v261 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v274 = (char *)&v243 - v10;
  v280 = (void *)sub_13F410();
  uint64_t v11 = *(v280 - 1);
  uint64_t v12 = __chkstk_darwin(v280);
  v259 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v276 = (char *)&v243 - v15;
  __chkstk_darwin(v14);
  v285 = (char *)&v243 - v16;
  uint64_t v281 = sub_13E440();
  uint64_t v283 = *(void *)(v281 - 8);
  uint64_t v17 = __chkstk_darwin(v281);
  uint64_t v19 = (char *)&v243 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v268 = (char *)&v243 - v20;
  uint64_t v269 = sub_13F3C0();
  uint64_t v267 = *(void *)(v269 - 8);
  uint64_t v21 = __chkstk_darwin(v269);
  uint64_t v245 = (char *)&v243 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  v256 = (char *)&v243 - v24;
  __chkstk_darwin(v23);
  id v26 = (char *)&v243 - v25;
  uint64_t v27 = sub_5830(&qword_180920);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v250 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  id v32 = (char *)&v243 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v253 = (char *)&v243 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v255 = (char *)&v243 - v36;
  __chkstk_darwin(v35);
  uint64_t v265 = (uint64_t)&v243 - v37;
  uint64_t v38 = sub_5830(&qword_17D4A0);
  __chkstk_darwin(v38 - 8);
  uint64_t v40 = (char *)&v243 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v284 = sub_13F840();
  uint64_t v286 = *(void *)(v284 - 8);
  uint64_t v41 = __chkstk_darwin(v284);
  uint64_t v247 = (char *)&v243 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  v254 = (char *)&v243 - v44;
  __chkstk_darwin(v43);
  v277 = (char *)&v243 - v45;
  uint64_t v46 = sub_5830(&qword_17CD10);
  __chkstk_darwin(v46 - 8);
  unint64_t v48 = (char *)&v243 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_13F7E0();
  uint64_t v290 = *(void *)(v49 - 8);
  uint64_t v291 = v49;
  __chkstk_darwin(v49);
  v287 = (char *)&v243 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v289 = type metadata accessor for TimerNLv3Intent();
  __chkstk_darwin(v289);
  uint64_t v292 = (uint64_t)&v243 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v288 = sub_140280();
  v296 = *(uint8_t **)(v288 - 8);
  __chkstk_darwin(v288);
  v295 = (char *)&v243 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_13F3E0();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v299 = v53;
  uint64_t v300 = v54;
  uint64_t v55 = __chkstk_darwin(v53);
  BOOL v244 = (char *)&v243 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v246 = (char *)&v243 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v249 = (char *)&v243 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v257 = (char *)&v243 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  unint64_t v251 = (char *)&v243 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  v252 = (char *)&v243 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  v260 = (char *)&v243 - v68;
  __chkstk_darwin(v67);
  unint64_t v70 = (char *)&v243 - v69;
  if (qword_17B3F8 != -1) {
    swift_once();
  }
  uint64_t v258 = v26;
  v248 = v19;
  uint64_t v282 = v11;
  uint64_t v71 = sub_141170();
  v297 = sub_33D8(v71, (uint64_t)qword_180908);
  uint64_t v72 = sub_141160();
  os_log_type_t v73 = sub_141480();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v74 = 0;
    _os_log_impl(&dword_0, v72, v73, "Transforming timer parse to alarm parse", v74, 2u);
    swift_slowDealloc();
  }

  uint64_t v75 = v300;
  uint64_t v77 = v300 + 16;
  id v76 = *(void (**)(char *, NSObject *, uint64_t))(v300 + 16);
  uint64_t v78 = v299;
  v76(v70, v301, v299);
  int v79 = (*(uint64_t (**)(char *, uint64_t))(v75 + 88))(v70, v78);
  v294 = (void (*)(char *, char *, uint64_t))v76;
  if (v79 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v79 == enum case for Parse.NLv4IntentOnly(_:))
    {
      uint64_t v243 = v77;
      (*(void (**)(char *, uint64_t))(v300 + 96))(v70, v78);
      swift_getObjectType();
      uint64_t v88 = SIRINLUUserDialogAct.firstUsoTask.getter();
      if (v88)
      {
        uint64_t v89 = v88;
        sub_12D488(v88, v32);
        uint64_t v90 = v283;
        uint64_t v91 = v281;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v283 + 48))(v32, 1, v281) == 1)
        {
          sub_904C((uint64_t)v32, &qword_180920);
        }
        else
        {
          uint64_t v134 = v268;
          (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v268, v32, v91);
          sub_13E420();
          if (v135)
          {
            (*(void (**)(char *, uint64_t))(v90 + 8))(v134, v91);
          }
          else
          {
            sub_13E430();
            if ((v136 & 1) == 0)
            {
              if (sub_6FEC())
              {
                sub_13F9E0();
                uint64_t v137 = v256;
                if (v138)
                {
                  sub_141280();
                  swift_bridgeObjectRelease();
                  id v139 = objc_allocWithZone((Class)INSpeakableString);
                  NSString v140 = sub_141240();
                  swift_bridgeObjectRelease();
                  id v141 = [v139 initWithSpokenPhrase:v140];
                  swift_release();

                  if (v141)
                  {
                    id v142 = [v141 spokenPhrase];

                    sub_141250();
                  }
                  uint64_t v78 = v299;
                }
                else
                {
                  swift_release();
                }
              }
              else
              {
                uint64_t v137 = v256;
              }
              sub_1408E0();
              swift_bridgeObjectRelease();
              uint64_t v218 = v257;
              (*(void (**)(char *, char *, uint64_t))(v267 + 16))(v257, v137, v269);
              uint64_t v219 = v300;
              (*(void (**)(char *, void, uint64_t))(v300 + 104))(v218, enum case for Parse.directInvocation(_:), v78);
              uint64_t v220 = v249;
              uint64_t v221 = v294;
              v294(v249, v218, v78);
              uint64_t v222 = (uint8_t *)sub_141160();
              os_log_type_t v223 = sub_141480();
              if (os_log_type_enabled((os_log_t)v222, v223))
              {
                uint64_t v224 = swift_slowAlloc();
                v297 = v222;
                uint64_t v225 = (uint8_t *)v224;
                v301 = swift_slowAlloc();
                v302 = v301;
                *(_DWORD *)uint64_t v225 = 136315138;
                v296 = v225 + 4;
                v221(v251, v220, v299);
                uint64_t v226 = sub_141260();
                uint64_t v303 = sub_58C0(v226, v227, (uint64_t *)&v302);
                uint64_t v78 = v299;
                uint64_t v219 = v300;
                sub_1415C0();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v219 + 8))(v220, v78);
                uint64_t v228 = (uint8_t *)v297;
                _os_log_impl(&dword_0, v297, v223, "Reformed alarm parse: %s", v225, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                swift_release();
                swift_unknownObjectRelease();
              }
              else
              {
                swift_unknownObjectRelease();

                (*(void (**)(char *, uint64_t))(v219 + 8))(v220, v78);
                swift_release();
              }
              (*(void (**)(char *, uint64_t))(v267 + 8))(v256, v269);
              (*(void (**)(char *, uint64_t))(v283 + 8))(v268, v281);
              return (*(uint64_t (**)(char *, char *, uint64_t))(v219 + 32))(v293, v257, v78);
            }
            (*(void (**)(char *, uint64_t))(v283 + 8))(v134, v91);
          }
        }
        swift_retain_n();
        uint64_t v131 = sub_141160();
        os_log_type_t v173 = sub_141470();
        if (!os_log_type_enabled(v131, v173))
        {

          swift_unknownObjectRelease();
          swift_release_n();
          return ((uint64_t (*)(char *, NSObject *, uint64_t))v294)(v293, v301, v78);
        }
        uint64_t v174 = (uint8_t *)swift_slowAlloc();
        v302 = swift_slowAlloc();
        *(_DWORD *)uint64_t v174 = 136315138;
        uint64_t v303 = v89;
        sub_140260();
        swift_retain();
        uint64_t v175 = sub_141260();
        uint64_t v303 = sub_58C0(v175, v176, (uint64_t *)&v302);
        uint64_t v78 = v299;
        sub_1415C0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v131, v173, "Could not get valid dateComponents from task: %s", v174, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();
        goto LABEL_67;
      }
      uint64_t v131 = sub_141160();
      os_log_type_t v132 = sub_141470();
      if (os_log_type_enabled(v131, v132))
      {
        uint64_t v133 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v133 = 0;
        _os_log_impl(&dword_0, v131, v132, "Timer to alarm transformer: NLv4Intent has no task in userDialogAct.", v133, 2u);
        swift_slowDealloc();
LABEL_67:
        swift_unknownObjectRelease();

        return ((uint64_t (*)(char *, NSObject *, uint64_t))v294)(v293, v301, v78);
      }

      swift_unknownObjectRelease();
      return ((uint64_t (*)(void, void, void))v294)(v293, v301, v78);
    }
    if (v79 != enum case for Parse.uso(_:))
    {
      uint64_t v125 = sub_141160();
      os_log_type_t v126 = sub_141470();
      BOOL v127 = os_log_type_enabled(v125, v126);
      uint64_t v128 = v300;
      if (v127)
      {
        uint64_t v129 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v129 = 0;
        _os_log_impl(&dword_0, v125, v126, "Transformer should only be called for NLv4 parse. Check the caller to make sure it's not mis-used.", v129, 2u);
        swift_slowDealloc();
      }

      v294(v293, (char *)v301, v78);
      return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v70, v78);
    }
    (*(void (**)(char *, uint64_t))(v300 + 96))(v70, v78);
    uint64_t v97 = v280;
    (*(void (**)(char *, char *, void *))(v282 + 32))(v285, v70, v280);
    uint64_t v98 = v270;
    sub_13F400();
    uint64_t v99 = sub_13F450();
    (*(void (**)(char *, uint64_t))(v271 + 8))(v98, v272);
    uint64_t v100 = *(void *)(v99 + 16);
    uint64_t v243 = v77;
    if (v100)
    {
      uint64_t v101 = (void (*)(char *, unint64_t, os_log_t))*((void *)isa + 2);
      unint64_t v102 = v99 + ((*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80));
      uint64_t v103 = (void (**)(char *, os_log_t))((char *)isa + 8);
      uint64_t v104 = *((void *)isa + 9);
      v296 = (uint8_t *)v99;
      swift_bridgeObjectRetain();
      os_log_t v105 = v279;
      while (1)
      {
        v101(v4, v102, v105);
        if (sub_13F470()) {
          break;
        }
        (*v103)(v4, v105);
        v102 += v104;
        if (!--v100)
        {
          swift_bridgeObjectRelease();
          uint64_t v106 = 1;
          uint64_t v78 = v299;
          uint64_t v97 = v280;
          Class v107 = isa;
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      Class v107 = isa;
      uint64_t v146 = (uint64_t)v273;
      (*((void (**)(char *, char *, os_log_t))isa + 4))(v273, v4, v105);
      uint64_t v106 = 0;
      uint64_t v78 = v299;
      uint64_t v97 = v280;
    }
    else
    {
      uint64_t v106 = 1;
      Class v107 = isa;
LABEL_43:
      uint64_t v146 = (uint64_t)v273;
    }
    os_log_t v147 = v279;
    (*((void (**)(uint64_t, uint64_t, uint64_t, os_log_t))v107 + 7))(v146, v106, 1, v279);
    swift_bridgeObjectRelease();
    int v148 = (*((uint64_t (**)(uint64_t, uint64_t, os_log_t))v107 + 6))(v146, 1, v147);
    uint64_t v149 = v275;
    os_log_type_t v150 = v274;
    if (v148 == 1)
    {
      sub_904C(v146, &qword_17D450);
    }
    else
    {
      Swift::OpaquePointer v151 = v262;
      sub_13F4C0();
      (*((void (**)(uint64_t, os_log_t))v107 + 1))(v146, v147);
      uint64_t v152 = v261;
      sub_13F510();
      (*(void (**)(char *, uint64_t))(v263 + 8))(v151, v264);
      uint64_t v153 = v266;
      (*(void (**)(char *, char *, uint64_t))(v266 + 32))(v150, v152, v149);
      uint64_t v154 = v298;
      sub_13F5C0();
      if (!v154)
      {
        uint64_t v298 = 0;
        unint64_t v166 = sub_13F900();
        unint64_t v167 = v166;
        if (v166 >> 62) {
          uint64_t result = sub_1417D0();
        }
        else {
          uint64_t result = *(void *)((char *)&dword_10 + (v166 & 0xFFFFFFFFFFFFFF8));
        }
        unint64_t v168 = v250;
        uint64_t v169 = v281;
        if (!result)
        {
          swift_bridgeObjectRelease();
          uint64_t v207 = sub_141160();
          os_log_type_t v208 = sub_141470();
          if (os_log_type_enabled(v207, v208))
          {
            uint64_t v209 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v209 = 0;
            _os_log_impl(&dword_0, v207, v208, "Timer to alarm transformer: USO graph has no tasks.", v209, 2u);
            swift_slowDealloc();
          }

          swift_release();
          (*(void (**)(char *, uint64_t))(v266 + 8))(v274, v275);
          (*(void (**)(char *, void *))(v282 + 8))(v285, v97);
          return ((uint64_t (*)(char *, NSObject *, uint64_t))v294)(v293, v301, v78);
        }
        if ((v167 & 0xC000000000000001) != 0)
        {
          uint64_t v170 = sub_1416A0();
        }
        else
        {
          if (!*(void *)((char *)&dword_10 + (v167 & 0xFFFFFFFFFFFFFF8)))
          {
            __break(1u);
            return result;
          }
          uint64_t v170 = *(void *)(v167 + 32);
          swift_retain();
        }
        uint64_t v171 = v248;
        swift_bridgeObjectRelease();
        sub_12D488(v170, v168);
        uint64_t v172 = v283;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v283 + 48))(v168, 1, v169) == 1)
        {
          sub_904C((uint64_t)v168, &qword_180920);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v171, v168, v169);
          sub_13E420();
          if (v210)
          {
            (*(void (**)(char *, uint64_t))(v172 + 8))(v171, v169);
          }
          else
          {
            sub_13E430();
            if ((v211 & 1) == 0)
            {
              if (sub_6FEC())
              {
                sub_13F9E0();
                os_log_type_t v212 = v245;
                if (v213)
                {
                  sub_141280();
                  swift_bridgeObjectRelease();
                  id v214 = objc_allocWithZone((Class)INSpeakableString);
                  NSString v215 = sub_141240();
                  swift_bridgeObjectRelease();
                  id v216 = [v214 initWithSpokenPhrase:v215];
                  swift_release();

                  if (v216)
                  {
                    id v217 = [v216 spokenPhrase];

                    sub_141250();
                  }
                  uint64_t v78 = v299;
                }
                else
                {
                  swift_release();
                }
              }
              else
              {
                os_log_type_t v212 = v245;
              }
              uint64_t v234 = v300;
              sub_1408E0();
              swift_bridgeObjectRelease();
              uint64_t v235 = v246;
              (*(void (**)(char *, char *, uint64_t))(v267 + 16))(v246, v212, v269);
              (*(void (**)(char *, void, uint64_t))(v234 + 104))(v235, enum case for Parse.directInvocation(_:), v78);
              unint64_t v236 = v244;
              char v237 = v294;
              v294(v244, v235, v78);
              char v238 = sub_141160();
              os_log_type_t v239 = sub_141480();
              if (os_log_type_enabled(v238, v239))
              {
                uint64_t v240 = (uint8_t *)swift_slowAlloc();
                v301 = swift_slowAlloc();
                v302 = v301;
                v297 = v240;
                *(_DWORD *)uint64_t v240 = 136315138;
                v296 = v240 + 4;
                v237(v251, v236, v299);
                uint64_t v241 = sub_141260();
                uint64_t v303 = sub_58C0(v241, v242, (uint64_t *)&v302);
                uint64_t v78 = v299;
                uint64_t v234 = v300;
                sub_1415C0();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v234 + 8))(v236, v78);
                _os_log_impl(&dword_0, v238, v239, "Reformed alarm parse: %s", (uint8_t *)v297, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                swift_release();
              }
              else
              {

                swift_release();
                (*(void (**)(char *, uint64_t))(v234 + 8))(v236, v78);
              }
              swift_release();
              (*(void (**)(char *, uint64_t))(v267 + 8))(v245, v269);
              (*(void (**)(char *, uint64_t))(v283 + 8))(v248, v281);
              (*(void (**)(char *, uint64_t))(v266 + 8))(v274, v275);
              (*(void (**)(char *, void *))(v282 + 8))(v285, v280);
              return (*(uint64_t (**)(char *, char *, uint64_t))(v234 + 32))(v293, v246, v78);
            }
            (*(void (**)(char *, uint64_t))(v283 + 8))(v171, v169);
          }
        }
        swift_retain_n();
        uint64_t v229 = sub_141160();
        os_log_type_t v230 = sub_141470();
        if (os_log_type_enabled(v229, v230))
        {
          uint64_t v231 = (uint8_t *)swift_slowAlloc();
          v302 = swift_slowAlloc();
          *(_DWORD *)uint64_t v231 = 136315138;
          uint64_t v303 = v170;
          sub_140260();
          swift_retain();
          uint64_t v232 = sub_141260();
          uint64_t v303 = sub_58C0(v232, v233, (uint64_t *)&v302);
          uint64_t v78 = v299;
          sub_1415C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v229, v230, "Could not get valid dateComponents from task: %s", v231, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_release();

          swift_release();
          (*(void (**)(char *, uint64_t))(v266 + 8))(v274, v275);
          (*(void (**)(char *, void *))(v282 + 8))(v285, v280);
        }
        else
        {
          swift_release_n();

          swift_release();
          (*(void (**)(char *, uint64_t))(v266 + 8))(v274, v275);
          (*(void (**)(char *, void *))(v282 + 8))(v285, v97);
        }
        return ((uint64_t (*)(void, void, void))v294)(v293, v301, v78);
      }
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v149);
      uint64_t v298 = 0;
    }
    uint64_t v155 = v282;
    unint64_t v156 = *(void (**)(char *, char *, void *))(v282 + 16);
    uint64_t v157 = v276;
    unint64_t v158 = v285;
    v156(v276, v285, v97);
    uint64_t v159 = sub_141160();
    os_log_type_t v160 = sub_141470();
    if (os_log_type_enabled(v159, v160))
    {
      uint64_t v161 = (uint8_t *)swift_slowAlloc();
      uint64_t v300 = swift_slowAlloc();
      v302 = v300;
      *(_DWORD *)uint64_t v161 = 136315138;
      v297 = (v161 + 4);
      v156(v259, v157, v97);
      uint64_t v162 = sub_141260();
      uint64_t v303 = sub_58C0(v162, v163, (uint64_t *)&v302);
      sub_1415C0();
      swift_bridgeObjectRelease();
      id v164 = *(void (**)(char *, void *))(v155 + 8);
      v164(v276, v97);
      _os_log_impl(&dword_0, v159, v160, "Timer to alarm transformer: Failed to parse usoParse: %s", v161, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v164(v285, v97);
    }
    else
    {

      uint64_t v165 = *(void (**)(char *, void *))(v155 + 8);
      v165(v157, v97);
      v165(v158, v97);
    }
    return ((uint64_t (*)(char *, NSObject *, uint64_t))v294)(v293, v301, v299);
  }
  (*(void (**)(char *, uint64_t))(v75 + 96))(v70, v78);
  uint64_t v81 = v295;
  uint64_t v80 = v296;
  uint64_t v82 = v70;
  uint64_t v83 = v288;
  (*((void (**)(char *, char *, uint64_t))v296 + 4))(v295, v82, v288);
  uint64_t v84 = v292;
  (*((void (**)(uint64_t, char *, uint64_t))v80 + 2))(v292, v81, v83);
  if (qword_17B320 != -1) {
    swift_once();
  }
  unint64_t v85 = sub_10C410();
  sub_13F940();
  uint64_t v86 = v290;
  uint64_t v87 = v291;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v290 + 48))(v48, 1, v291) == 1)
  {
    sub_904C((uint64_t)v48, &qword_17CD10);
LABEL_39:
    uint64_t v143 = sub_141160();
    os_log_type_t v144 = sub_141470();
    if (os_log_type_enabled(v143, v144))
    {
      uint64_t v145 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v145 = 0;
      _os_log_impl(&dword_0, v143, v144, "Not able to parse alarm time from timer NLv3 intent", v145, 2u);
      uint64_t v84 = v292;
      swift_slowDealloc();
    }

    sub_30364(v84);
    (*((void (**)(char *, uint64_t))v296 + 1))(v295, v83);
    return ((uint64_t (*)(char *, NSObject *, uint64_t))v294)(v293, v301, v78);
  }
  v285 = (char *)v85;
  long long v92 = v287;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v287, v48, v87);
  uint64_t v93 = v87;
  uint64_t v94 = v86;
  sub_13F7A0();
  uint64_t v95 = v286;
  uint64_t v96 = v284;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v286 + 48))(v40, 1, v284) == 1)
  {
    (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v93);
    sub_904C((uint64_t)v40, &qword_17D4A0);
LABEL_38:
    uint64_t v78 = v299;
    goto LABEL_39;
  }
  unint64_t v108 = v277;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v277, v40, v96);
  uint64_t v109 = sub_13F830();
  if (v110)
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v108, v96);
    (*(void (**)(char *, uint64_t))(v290 + 8))(v287, v291);
    goto LABEL_38;
  }
  uint64_t v111 = v109;
  uint64_t v112 = sub_13F820();
  uint64_t v113 = v291;
  uint64_t v78 = v299;
  if (v114)
  {
    (*(void (**)(char *, uint64_t))(v286 + 8))(v108, v96);
    (*(void (**)(char *, uint64_t))(v290 + 8))(v287, v113);
    goto LABEL_39;
  }
  v301 = v112;
  uint64_t v282 = v111;
  uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v286 + 16);
  uint64_t v116 = v254;
  v115(v254, v108, v96);
  uint64_t v117 = sub_141160();
  os_log_type_t v118 = sub_141480();
  BOOL v119 = os_log_type_enabled(v117, v118);
  uint64_t v243 = v77;
  if (v119)
  {
    uint64_t v120 = v96;
    uint64_t v121 = (uint8_t *)swift_slowAlloc();
    v302 = swift_slowAlloc();
    os_log_t v279 = v117;
    *(_DWORD *)uint64_t v121 = 136315138;
    v280 = v121 + 4;
    v115(v247, v116, v120);
    uint64_t v122 = sub_141260();
    uint64_t v303 = sub_58C0(v122, v123, (uint64_t *)&v302);
    sub_1415C0();
    swift_bridgeObjectRelease();
    v280 = *(void **)(v286 + 8);
    ((void (*)(char *, uint64_t))v280)(v116, v120);
    os_log_t v124 = v279;
    _os_log_impl(&dword_0, v279, v118, "Converting to alarmTime from timerTime %s", v121, 0xCu);
    swift_arrayDestroy();
    uint64_t v78 = v299;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v280 = *(void **)(v286 + 8);
    ((void (*)(char *, uint64_t))v280)(v116, v96);
  }
  uint64_t v177 = (uint64_t)v253;
  sub_13F7B0();
  uint64_t v178 = sub_1405A0();
  swift_release();
  uint64_t v179 = (uint64_t)v255;
  if (v178)
  {
    uint64_t v180 = v265;
    sub_1402C0();
    swift_release();
    uint64_t v181 = v283;
    uint64_t v182 = v281;
  }
  else
  {
    uint64_t v181 = v283;
    uint64_t v180 = v265;
    uint64_t v182 = v281;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56))(v265, 1, 1, v281);
  }
  sub_12DACC(v180, v179);
  uint64_t v183 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
  if (v183(v179, 1, v182) == 1)
  {
    sub_904C(v179, &qword_180920);
  }
  else
  {
    sub_13E420();
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v179, v182);
    uint64_t v180 = v265;
  }
  uint64_t v184 = v252;
  sub_12DACC(v180, v177);
  if (v183(v177, 1, v182) == 1)
  {
    sub_904C(v177, &qword_180920);
  }
  else
  {
    uint64_t v185 = sub_13E430();
    char v187 = v186;
    (*(void (**)(uint64_t, uint64_t))(v283 + 8))(v177, v182);
    uint64_t v188 = v301;
    if ((v187 & 1) == 0) {
      uint64_t v188 = v185;
    }
    v301 = v188;
  }
  uint64_t v189 = v267;
  uint64_t v190 = v269;
  uint64_t v191 = v258;
  if (qword_17B308 != -1) {
    swift_once();
  }
  sub_13F940();
  sub_1408E0();
  swift_bridgeObjectRelease();
  os_log_type_t v192 = v260;
  (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v260, v191, v190);
  uint64_t v193 = v300;
  (*(void (**)(char *, void, uint64_t))(v300 + 104))(v192, enum case for Parse.directInvocation(_:), v78);
  uint64_t v194 = v184;
  id v195 = v184;
  uint64_t v196 = v294;
  v294(v194, v192, v78);
  uint64_t v197 = sub_141160();
  os_log_type_t v198 = sub_141480();
  uint64_t v199 = v193;
  int v200 = v198;
  if (os_log_type_enabled(v197, v198))
  {
    LODWORD(v301) = v200;
    char v201 = (uint8_t *)swift_slowAlloc();
    v297 = swift_slowAlloc();
    v302 = v297;
    *(_DWORD *)char v201 = 136315138;
    uint64_t v289 = (uint64_t)(v201 + 4);
    v196(v251, v195, v78);
    uint64_t v202 = sub_141260();
    uint64_t v303 = sub_58C0(v202, v203, (uint64_t *)&v302);
    sub_1415C0();
    swift_bridgeObjectRelease();
    uint64_t v204 = v300;
    (*(void (**)(char *, uint64_t))(v300 + 8))(v195, v78);
    _os_log_impl(&dword_0, v197, (os_log_type_t)v301, "Inference reformed alarm parse: %s", v201, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v267 + 8))(v258, v269);
    sub_904C(v265, &qword_180920);
    ((void (*)(char *, uint64_t))v280)(v277, v284);
    (*(void (**)(char *, uint64_t))(v290 + 8))(v287, v291);
    sub_30364(v292);
    (*((void (**)(char *, uint64_t))v296 + 1))(v295, v288);
    long long v205 = v293;
    uint64_t v206 = v204;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v199 + 8))(v195, v78);
    (*(void (**)(char *, uint64_t))(v189 + 8))(v191, v269);
    sub_904C(v265, &qword_180920);
    ((void (*)(char *, uint64_t))v280)(v277, v284);
    (*(void (**)(char *, uint64_t))(v290 + 8))(v287, v291);
    sub_30364(v292);
    (*((void (**)(char *, uint64_t))v296 + 1))(v295, v288);
    long long v205 = v293;
    uint64_t v206 = v199;
  }
  return (*(uint64_t (**)(char *, char *, uint64_t))(v206 + 32))(v205, v260, v78);
}

uint64_t sub_12D488@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_5830(&qword_180920);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = sub_13E440();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_6FEC())
  {
    uint64_t v13 = sub_13F9F0();
    swift_release();
    if (v13)
    {
      sub_13FA60();
      uint64_t v14 = sub_1405A0();
      swift_release();
      if (!v14) {
        goto LABEL_21;
      }
      uint64_t v15 = (void *)sub_1402B0(1, 0);
      if (v15)
      {
        uint64_t v16 = v15;
        id v17 = [v15 startDateComponents];

        if (v17)
        {
          sub_13E410();

          uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
          v18(v6, 0, 1, v9);
        }
        else
        {
          uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
          v18(v6, 1, 1, v9);
        }
        sub_12DB34((uint64_t)v6, (uint64_t)v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
        {
          id v26 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
          v26(v12, v8, v9);
          sub_13E420();
          if (v27)
          {
            swift_release();
          }
          else
          {
            sub_13E430();
            char v29 = v28;
            swift_release();
            if ((v29 & 1) == 0)
            {
              swift_release();
              uint64_t v30 = v39;
              v26(v39, v12, v9);
              return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v18)(v30, 0, 1, v9);
            }
          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_21:
          if (qword_17B3F8 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_141170();
          sub_33D8(v32, (uint64_t)qword_180908);
          swift_retain_n();
          uint64_t v20 = sub_141160();
          os_log_type_t v33 = sub_141470();
          if (os_log_type_enabled(v20, v33))
          {
            uint64_t v34 = (uint8_t *)swift_slowAlloc();
            uint64_t v35 = swift_slowAlloc();
            uint64_t v40 = v13;
            uint64_t v41 = v35;
            *(_DWORD *)uint64_t v34 = 136315138;
            sub_13FAA0();
            swift_retain();
            uint64_t v36 = sub_141260();
            uint64_t v40 = sub_58C0(v36, v37, &v41);
            sub_1415C0();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v20, v33, "Transformer is invalid: failed to resolve alarm time from %s.", v34, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_release();

            return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v39, 1, 1, v9);
          }
LABEL_25:

          swift_release_n();
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v39, 1, 1, v9);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      }
      swift_release();
      sub_904C((uint64_t)v8, &qword_180920);
      goto LABEL_21;
    }
  }
  if (qword_17B3F8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_180908);
  swift_retain_n();
  uint64_t v20 = sub_141160();
  os_log_type_t v21 = sub_141470();
  if (!os_log_type_enabled(v20, v21)) {
    goto LABEL_25;
  }
  uint64_t v22 = (uint8_t *)swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  uint64_t v40 = a1;
  uint64_t v41 = v23;
  *(_DWORD *)uint64_t v22 = 136315138;
  sub_140260();
  swift_retain();
  uint64_t v24 = sub_141260();
  uint64_t v40 = sub_58C0(v24, v25, &v41);
  sub_1415C0();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_0, v20, v21, "Transformer is invalid: uso graph don't have valid endTime %s.", v22, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v39, 1, 1, v9);
}

uint64_t sub_12DACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_180920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_12DB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_180920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_12DB9C(uint64_t a1)
{
  return sub_12DC38(a1, (void (*)(void))type metadata accessor for ResumeTimerCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:), &qword_1812D0);
}

uint64_t sub_12DBD0(uint64_t a1)
{
  return sub_12DC38(a1, (void (*)(void))type metadata accessor for ResumeTimerCATs_Async, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_1812D8);
}

uint64_t sub_12DC04(uint64_t a1)
{
  return sub_12DC38(a1, (void (*)(void))type metadata accessor for ResumeTimerCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_1812E0);
}

uint64_t sub_12DC38(uint64_t a1, void (*a2)(void), uint64_t (*a3)(char *, void), uint64_t *a4)
{
  uint64_t v7 = sub_140590();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  sub_140580();
  uint64_t result = a3(v9, 0);
  *a4 = result;
  return result;
}

id sub_12DCDC(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  NSString v4 = sub_141240();
  id v5 = [v3 initWithIdentifier:0 displayString:v4];

  if (a1)
  {
    id v6 = v5;
    swift_retain();
    sub_13F9E0();
    NSString v8 = v7;
    if (v7)
    {
      sub_141280();
      swift_bridgeObjectRelease();
      id v9 = objc_allocWithZone((Class)INSpeakableString);
      NSString v10 = sub_141240();
      swift_bridgeObjectRelease();
      NSString v8 = [v9 initWithSpokenPhrase:v10];
      swift_release();

      if (v8)
      {
        id v11 = [v8 spokenPhrase];

        sub_141250();
        NSString v8 = sub_141240();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    id v12 = v5;
    NSString v8 = 0;
  }
  [v5 setLabel:v8];

  if (a1)
  {
    swift_retain();
    UsoEntity_common_Timer.duration.getter();
    swift_release();
  }
  else
  {
    [self defaultDuration];
  }
  Class isa = sub_1413D0().super.super.isa;
  [v5 setDuration:isa];

  if (a1)
  {
    swift_retain();
    if (sub_13F9C0())
    {
      sub_13FAB0();
      swift_release();
    }
    else
    {
      [self defaultDuration];
    }
    swift_release();
  }
  else
  {
    [self defaultDuration];
  }
  Class v14 = sub_1413D0().super.super.isa;
  [v5 setRemainingTime:v14];

  if (a1)
  {
    swift_retain();
    uint64_t v15 = UsoEntity_common_Timer.timerState.getter();
    swift_release();
    [v5 setState:v15];
    swift_retain();
    uint64_t v16 = UsoEntity_common_Timer.timerType.getter();
    swift_release();
    [v5 setType:v16];
    swift_retain();
    v17.super.super.Class isa = UsoEntity_common_Timer.isMultiple.getter().super.super.isa;
    swift_release();
  }
  else
  {
    [v5 setState:0];
    [v5 setType:0];
    v17.super.super.Class isa = 0;
  }
  [v5 setShouldMatchAny:v17.super.super.isa];

  swift_release();
  return v5;
}

uint64_t sub_12E02C(uint64_t a1, uint64_t a2)
{
  v7[5] = a1;
  v7[2] = a2;
  v7[3] = a1;
  uint64_t v2 = sub_141390();
  uint64_t v3 = type metadata accessor for TimerTimer(0);
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_12E0D4((void (*)(char *, char *))sub_12F53C, (uint64_t)v7, v2, v3, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v5);
}

uint64_t sub_12E0D4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  os_log_type_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  id v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  Class v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  NSNumber v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_141400();
  if (!v18) {
    return sub_141370();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = sub_141770();
  uint64_t v32 = sub_141780();
  sub_141720(v19);
  uint64_t v36 = v8;
  uint64_t result = sub_1413F0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      os_log_type_t v21 = (void (*)(char *, void))sub_141430();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_141760();
      sub_141410();
      --v19;
      id v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

id sub_12E4D4()
{
  id v1 = objc_allocWithZone(v0);
  NSString v2 = sub_141240();
  swift_bridgeObjectRelease();
  NSString v3 = sub_141240();
  id v4 = [v1 initWithIdentifier:v2 displayString:v3];

  id v5 = v4;
  [v5 setLabel:0];
  id v6 = self;
  [v6 defaultDuration];
  Class isa = sub_1413D0().super.super.isa;
  [v5 setDuration:isa];

  [v6 defaultDuration];
  Class v8 = sub_1413D0().super.super.isa;
  [v5 setRemainingTime:v8];

  [v5 setState:0];
  return v5;
}

uint64_t sub_12E5F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = sub_5830(&qword_17B520);
  __chkstk_darwin(v4 - 8);
  uint64_t v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1407B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_5830(&qword_17B528);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [v2 identifier];
  if (v13)
  {
    Class v14 = v13;
    uint64_t v15 = sub_141250();
    uint64_t v40 = v16;
    uint64_t v41 = v15;
  }
  else
  {
    uint64_t v40 = 0xE000000000000000;
    uint64_t v41 = 0;
  }
  uint64_t v17 = sub_13F3C0();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v12, a1, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
  id v19 = [v2 label];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v38 = sub_141250();
    uint64_t v39 = v21;
  }
  else
  {
    uint64_t v38 = 0x72656D6954;
    uint64_t v39 = 0xE500000000000000;
  }
  id v22 = [v2 duration];
  uint64_t v23 = v22;
  if (v22)
  {
    [v22 doubleValue];
    uint64_t v25 = v24;

    uint64_t v37 = v25;
  }
  else
  {
    uint64_t v37 = 0;
  }
  id v26 = [v2 remainingTime];
  uint64_t v27 = v26;
  if (v26)
  {
    [v26 doubleValue];
    uint64_t v29 = v28;

    uint64_t v30 = v29;
  }
  else
  {
    uint64_t v30 = 0;
  }
  unsigned __int8 v31 = v27 == 0;
  [v2 state];
  uint64_t v32 = sub_140F70();
  uint64_t v33 = v6;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for PunchOutApp.timer(_:), v6);
  uint64_t v34 = (uint64_t)v42;
  sub_1407A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v33);
  return SiriTimerSnippetModel.init(timerIdentifier:directInvocation:label:duration:remainingTime:state:punchoutURL:)(v41, v40, (uint64_t)v12, v38, v39, v37, v23 == 0, v30, v43, v31, v32, 0, v34);
}

Swift::Bool __swiftcall SiriTimer.isDefault()()
{
  id v1 = [v0 duration];
  NSString v2 = v1;
  if (v1)
  {
    [v1 doubleValue];
    double v4 = v3;
  }
  else
  {
    double v4 = 0.0;
  }
  uint64_t v5 = self;
  [v5 defaultDuration];
  if (v2) {
    BOOL v7 = v4 == v6;
  }
  else {
    BOOL v7 = 0;
  }
  if (!v7) {
    return 0;
  }
  id v9 = [v0 remainingTime];
  uint64_t v10 = v9;
  if (v9)
  {
    [v9 doubleValue];
    double v12 = v11;
  }
  else
  {
    double v12 = 0.0;
  }
  [v5 defaultDuration];
  Swift::Bool result = 0;
  if (v10 && v12 == v13)
  {
    id v14 = [v0 identifier];
    if (v14)
    {

      return 0;
    }
    else
    {
      [v0 state];
      uint64_t v15 = sub_140F70();
      return v15 == sub_140F70();
    }
  }
  return result;
}

uint64_t sub_12EADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char *a5@<X8>)
{
  int v58 = a4;
  uint64_t v63 = a5;
  uint64_t v9 = sub_5830(&qword_180518);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  double v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v53 - v13;
  uint64_t v15 = sub_5830(&qword_17BF08);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_141200();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v59 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = v5;
  if (sub_1EA94())
  {
    uint64_t v54 = v12;
    uint64_t v56 = a3;
    uint64_t v61 = v19;
    id v21 = [v64 identifier];
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = sub_141250();
      uint64_t v25 = v24;
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v55 = a1;
    uint64_t v57 = a2;
    uint64_t v62 = (uint8_t *)v18;
    v65[0] = v23;
    v65[1] = v25;
    sub_5830(&qword_17B570);
    sub_141260();
    uint64_t v60 = v26;
    if (qword_17B230 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_141190();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v30 = v28 + 56;
    v29(v14, 1, 1, v27);
    sub_140EA0();
    swift_bridgeObjectRetain();
    swift_retain();
    id v31 = v64;
    sub_1411E0();
    uint64_t v60 = v30;
    id v64 = v29;
    uint64_t v47 = v61;
    uint64_t v46 = v62;
    unint64_t v48 = *(void (**)(char *, void, uint64_t, uint8_t *))(v61 + 56);
    v48(v17, 0, 1, v62);
    uint64_t v49 = *(void (**)(char *, char *, uint8_t *))(v47 + 32);
    uint64_t v50 = v59;
    v49(v59, v17, v46);
    if (v57)
    {
      if ((v58 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = v54;
        sub_141180();
        ((void (*)(char *, void, uint64_t, uint64_t))v64)(v51, 0, 1, v27);
        sub_1411F0();
      }
    }
    swift_release();
    uint64_t v52 = v63;
    v49(v63, v50, v46);
    return ((uint64_t (*)(char *, void, uint64_t, uint8_t *))v48)(v52, 0, 1, v46);
  }
  else
  {
    if (qword_17B418 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_141170();
    sub_33D8(v32, (uint64_t)qword_180928);
    id v33 = v64;
    uint64_t v34 = sub_141160();
    os_log_type_t v35 = sub_141470();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      id v64 = (id)swift_slowAlloc();
      v65[0] = (uint64_t)v64;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v62 = v36 + 4;
      id v37 = v33;
      uint64_t v38 = v18;
      id v39 = [v37 description];
      uint64_t v40 = v19;
      uint64_t v41 = sub_141250();
      unint64_t v43 = v42;

      uint64_t v18 = v38;
      uint64_t v44 = v41;
      uint64_t v19 = v40;
      v65[2] = sub_58C0(v44, v43, v65);
      sub_1415C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v34, v35, "Fail to build rr entity from timer %s", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v63, 1, 1, v18);
  }
}

uint64_t sub_12F0C8()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180928);
  sub_33D8(v0, (uint64_t)qword_180928);
  return sub_140E40();
}

uint64_t sub_12F114@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v33 = a2;
  double v6 = *a1;
  type metadata accessor for TimerTimer.Builder(0);
  swift_allocObject();
  uint64_t v7 = sub_17FA8();
  uint64_t v8 = sub_141370();
  id v9 = [v6 device];
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = [v9 roomID];

    if (v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_141250();
      uint64_t v14 = v13;

      uint64_t WitnessTable = &v30;
      uint64_t v32 = a4;
      uint64_t v34 = v33;
      __chkstk_darwin(v15);
      v29[2] = a3;
      v29[3] = v12;
      v29[4] = v14;
      uint64_t v29[5] = v6;
      sub_141390();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v8 = sub_1416F0();
      swift_bridgeObjectRelease();
      a4 = v32;
    }
  }
  id v16 = [v6 label];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_141250();
    unint64_t v20 = v19;

    uint64_t v21 = swift_bridgeObjectRelease();
    uint64_t v22 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0) {
      uint64_t v22 = v18 & 0xFFFFFFFFFFFFLL;
    }
    if (v22)
    {
      uint64_t v34 = v8;
      __chkstk_darwin(v21);
      uint64_t v32 = a4;
      v29[-2] = a3;
      v29[-1] = v6;
      sub_141390();
      swift_bridgeObjectRetain();
      uint64_t WitnessTable = (uint64_t *)swift_getWitnessTable();
      char v23 = sub_1412D0();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v7 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueInRoom) = (v23 & 1) == 0;
      uint64_t v34 = v33;
      __chkstk_darwin(v33);
      v29[-2] = a3;
      v29[-1] = v6;
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v34 = sub_1416F0();
      __chkstk_darwin(v34);
      v29[-2] = a3;
      v29[-1] = v6;
      char v24 = sub_1412D0();
      a4 = v32;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v7 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isLabelUniqueAcrossGroup) = (v24 & 1) == 0;
    }
  }
  uint64_t v34 = v8;
  sub_141390();
  swift_getWitnessTable();
  char v25 = sub_141420();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + OBJC_IVAR____TtCC23TimerFlowDelegatePlugin10TimerTimer7Builder_isOnlyMatchingTimerInRoom) = v25 & 1;
  uint64_t v26 = swift_retain();
  uint64_t v27 = sub_174C0(v26, 0);
  uint64_t result = swift_release_n();
  *a4 = v27;
  return result;
}

uint64_t sub_12F53C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_12F114(a1, *(void *)(v2 + 24), *(void *)(v2 + 16), a2);
}

uint64_t sub_12F55C(id *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = *a1;
  id v8 = [*a1 device];
  if (!v8) {
    goto LABEL_23;
  }
  id v9 = v8;
  id v10 = [v8 roomID];

  if (!v10) {
    goto LABEL_23;
  }
  uint64_t v11 = sub_141250();
  uint64_t v13 = v12;

  if (v11 == a2 && v13 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_141AA0();
    swift_bridgeObjectRelease();
    char v16 = 0;
    if ((v15 & 1) == 0) {
      return v16 & 1;
    }
  }
  id v17 = [v7 identifier];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_141250();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  id v22 = [a4 identifier];
  if (!v22)
  {
    if (v21) {
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  char v23 = v22;
  uint64_t v24 = sub_141250();
  uint64_t v26 = v25;

  if (!v21)
  {
    if (v26) {
      goto LABEL_22;
    }
LABEL_23:
    char v16 = 0;
    return v16 & 1;
  }
  if (v26)
  {
    if (v19 != v24 || v21 != v26)
    {
      char v28 = sub_141AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v16 = v28 ^ 1;
      return v16 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_12F730(id *a1, void *a2)
{
  id v3 = [*a1 identifier];
  if (v3)
  {
    double v4 = v3;
    uint64_t v5 = sub_141250();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = [a2 identifier];
  if (!v8)
  {
    if (v7) {
      goto LABEL_15;
    }
    goto LABEL_17;
  }
  id v9 = v8;
  uint64_t v10 = sub_141250();
  uint64_t v12 = v11;

  if (!v7)
  {
    if (v12)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      char v15 = 1;
      return v15 & 1;
    }
LABEL_17:
    char v15 = 0;
    return v15 & 1;
  }
  if (!v12) {
    goto LABEL_15;
  }
  if (v5 == v10 && v7 == v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v14 = sub_141AA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v15 = v14 ^ 1;
  return v15 & 1;
}

uint64_t sub_12F850(id *a1, void *a2)
{
  id v3 = [*a1 label];
  if (v3)
  {
    double v4 = v3;
    uint64_t v5 = sub_141250();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = [a2 label];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = sub_141250();
    uint64_t v12 = v11;

    if (v7)
    {
      if (v12)
      {
        if (v5 == v10 && v7 == v12)
        {
          swift_bridgeObjectRelease();
          char v14 = 1;
        }
        else
        {
          char v14 = sub_141AA0();
          swift_bridgeObjectRelease();
        }
        goto LABEL_18;
      }
      goto LABEL_13;
    }
    if (v12)
    {
      char v14 = 0;
      goto LABEL_18;
    }
  }
  else if (v7)
  {
LABEL_13:
    char v14 = 0;
LABEL_18:
    swift_bridgeObjectRelease();
    return v14 & 1;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_12F968(id *a1)
{
  return sub_12F850(a1, *(void **)(v1 + 24)) & 1;
}

uint64_t sub_12F988(id *a1)
{
  return sub_12F730(a1, *(void **)(v1 + 24)) & 1;
}

uint64_t sub_12F9A8(id *a1)
{
  return sub_12F55C(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40)) & 1;
}

id sub_12F9CC(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17BF08);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_140610();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_11;
  }
  sub_13F740();
  sub_140600();
  swift_retain();
  char v9 = sub_1405E0();
  swift_release();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v6 + 8);
  v10(v8, v5);
  if ((v9 & 1) == 0) {
    goto LABEL_10;
  }
  sub_140600();
  sub_1405F0();
  v10(v8, v5);
  uint64_t v11 = sub_141200();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) == 1)
  {
    swift_release();
    sub_904C((uint64_t)v4, &qword_17BF08);
LABEL_11:
    sub_140EA0();
    uint64_t v23 = swift_retain();
    return sub_12DCDC(v23);
  }
  sub_140EA0();
  uint64_t v13 = (void *)sub_1411D0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v4, v11);
  if (!v13)
  {
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  if (qword_17B418 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_141170();
  sub_33D8(v14, (uint64_t)qword_180928);
  id v15 = v13;
  char v16 = sub_141160();
  os_log_type_t v17 = sub_141480();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    v25[0] = v18 + 4;
    id v15 = v15;
    id v19 = [v15 description];
    uint64_t v20 = sub_141250();
    unint64_t v22 = v21;

    v25[1] = sub_58C0(v20, v22, &v26);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v16, v17, "toSiriTimer: Resolved timer %s from SRR. Using it to search timer.", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  return v15;
}

void *sub_12FE08(uint64_t a1)
{
  uint64_t v2 = sub_140610();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v60 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_5830(&qword_17BF08);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_13FDC0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v62 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_5830(&qword_180940);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_5830(&qword_180948);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  char v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  id v19 = (char *)&v58 - v18;
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v58 - v20;
  if (!a1)
  {
    if (qword_17B418 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_141170();
    sub_33D8(v24, (uint64_t)qword_180928);
    uint64_t v25 = sub_141160();
    os_log_type_t v26 = sub_141480();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "Failed parsing NoEntity reference: nil", v27, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v58 = v3;
  uint64_t v59 = v2;
  swift_retain();
  uint64_t v22 = sub_13F740();
  swift_retain();
  uint64_t v23 = sub_13F8D0();
  swift_release();
  uint64_t v63 = a1;
  uint64_t v64 = v22;
  if (v23)
  {
    sub_13FDB0();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v21, 1, 1, v7);
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v19, enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:), v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
  uint64_t v28 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_130C48((uint64_t)v21, (uint64_t)v12);
  sub_130C48((uint64_t)v19, v28);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v29((uint64_t)v12, 1, v7) == 1)
  {
    sub_904C((uint64_t)v19, &qword_180948);
    sub_904C((uint64_t)v21, &qword_180948);
    if (v29(v28, 1, v7) == 1)
    {
      sub_904C((uint64_t)v12, &qword_180948);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  sub_130C48((uint64_t)v12, (uint64_t)v16);
  if (v29(v28, 1, v7) == 1)
  {
    sub_904C((uint64_t)v19, &qword_180948);
    sub_904C((uint64_t)v21, &qword_180948);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
LABEL_15:
    sub_904C((uint64_t)v12, &qword_180940);
LABEL_21:
    if (qword_17B418 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_141170();
    sub_33D8(v38, (uint64_t)qword_180928);
    swift_retain_n();
    id v39 = sub_141160();
    os_log_type_t v40 = sub_141480();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      sub_13FA50();
      uint64_t v42 = sub_13F750();
      unint64_t v44 = v43;
      swift_release();
      uint64_t v65 = sub_58C0(v42, v44, (uint64_t *)&v66);
      sub_1415C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v39, v40, "Failed to resolve NoEntity reference to Timer entity:\n %s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
      swift_release();
    }
    else
    {

      swift_release_n();
      swift_release();
    }
    return 0;
  }
  uint64_t v30 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v62, v28, v7);
  sub_130CB0();
  char v31 = sub_141230();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v8 + 8);
  v32(v30, v7);
  sub_904C((uint64_t)v19, &qword_180948);
  sub_904C((uint64_t)v21, &qword_180948);
  v32(v16, v7);
  sub_904C((uint64_t)v12, &qword_180948);
  if ((v31 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_17:
  sub_13FD20();
  swift_allocObject();
  sub_13FD10();
  uint64_t v33 = sub_13FA40();
  swift_release();
  if (!v33) {
    goto LABEL_21;
  }
  uint64_t v34 = v60;
  sub_140600();
  uint64_t v35 = (uint64_t)v61;
  sub_1405F0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v59);
  uint64_t v36 = sub_141200();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
  {
    swift_release();
    sub_904C(v35, &qword_17BF08);
    goto LABEL_21;
  }
  sub_140EA0();
  uint64_t v46 = (void *)sub_1411D0();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  if (!v46)
  {
    swift_release();
    goto LABEL_21;
  }
  if (qword_17B418 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_141170();
  sub_33D8(v47, (uint64_t)qword_180928);
  id v48 = v46;
  uint64_t v49 = sub_141160();
  os_log_type_t v50 = sub_141480();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (_DWORD *)swift_slowAlloc();
    uint64_t v62 = (char *)swift_slowAlloc();
    uint64_t v66 = v62;
    *uint64_t v51 = 136315138;
    uint64_t v61 = (char *)(v51 + 1);
    uint64_t v52 = (uint8_t *)v51;
    id v53 = v48;
    id v54 = [v53 description];
    uint64_t v55 = sub_141250();
    unint64_t v57 = v56;

    uint64_t v65 = sub_58C0(v55, v57, (uint64_t *)&v66);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v49, v50, "resolvedNoEntityReference: Resolved NoEntity reference %s from SRR. Using it to search timer.", v52, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
  }
  swift_release();
  return v46;
}

id sub_130874()
{
  uint64_t v0 = sub_DB9F8();
  if (v0)
  {
    id v1 = sub_12F9CC(v0);
    swift_release();
    return v1;
  }
  uint64_t v3 = sub_DF1E4();
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v4 = sub_12FE08(v3);
  if (!v4)
  {
    swift_release();
LABEL_10:
    if (qword_17B418 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_141170();
    sub_33D8(v15, (uint64_t)qword_180928);
    swift_retain_n();
    char v16 = sub_141160();
    os_log_type_t v17 = sub_141470();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      sub_140260();
      swift_retain();
      uint64_t v19 = sub_141260();
      sub_58C0(v19, v20, &v21);
      sub_1415C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v16, v17, "Failed to find timer reference from task: %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_140EA0();
    return sub_12DCDC(0);
  }
  uint64_t v5 = v4;
  if (qword_17B418 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_141170();
  sub_33D8(v6, (uint64_t)qword_180928);
  id v7 = v5;
  uint64_t v8 = sub_141160();
  os_log_type_t v9 = sub_141480();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    id v7 = v7;
    id v11 = [v7 description];
    uint64_t v12 = sub_141250();
    unint64_t v14 = v13;

    sub_58C0(v12, v14, &v21);
    sub_1415C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, v9, "Found NoEntity reference: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_release();
  return v7;
}

uint64_t sub_130C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_180948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_130CB0()
{
  unint64_t result = qword_180950;
  if (!qword_180950)
  {
    sub_13FDC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180950);
  }
  return result;
}

uint64_t sub_130D08(id *a1)
{
  return sub_12F968(a1) & 1;
}

uint64_t sub_130D24(void *a1, uint64_t a2)
{
  *a1 = sub_F38C4(a2);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_71374(v3);
}

unint64_t sub_130DF8()
{
  unint64_t result = qword_180968;
  if (!qword_180968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180968);
  }
  return result;
}

unint64_t sub_130E4C()
{
  unint64_t result = qword_180970;
  if (!qword_180970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180970);
  }
  return result;
}

uint64_t sub_130EA0(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_180978);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_130F00(uint64_t a1)
{
  return a1;
}

uint64_t sub_130F54(uint64_t a1)
{
  return a1;
}

uint64_t sub_130FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_130FBC);
}

uint64_t sub_130FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_140980();
    os_log_type_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_13106C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_131080);
}

uint64_t sub_131080(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_140980();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s20HandleIntentStrategyVMa_5()
{
  uint64_t result = qword_1809F8;
  if (!qword_1809F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_131174()
{
  uint64_t result = sub_140980();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_13120C()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180988);
  sub_33D8(v0, (uint64_t)qword_180988);
  return sub_140E60();
}

uint64_t sub_131258(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  sub_5830(&qword_180A80);
  v2[9] = swift_task_alloc();
  uint64_t v3 = sub_141080();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v4 = sub_140FC0();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  sub_5830(&qword_17F5A0);
  v2[16] = swift_task_alloc();
  uint64_t v5 = sub_13E550();
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_131440, 0, 0);
}

uint64_t sub_131440()
{
  sub_13EBB0();
  sub_90A8(v0 + 2, v0[5]);
  sub_13F120();
  if (v1)
  {
    uint64_t v2 = v0[17];
    uint64_t v3 = v0[18];
    uint64_t v4 = v0[16];
    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
    sub_13E510();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) != 1)
    {
      uint64_t v9 = v0[20];
      uint64_t v21 = v0[19];
      uint64_t v11 = v0[17];
      uint64_t v10 = v0[18];
      uint64_t v12 = (uint64_t *)v0[15];
      uint64_t v13 = v0[14];
      uint64_t v14 = v0[11];
      uint64_t v22 = v0[12];
      uint64_t v23 = v0[10];
      uint64_t v24 = v0[9];
      uint64_t v25 = v0[13];
      (*(void (**)(uint64_t, void, uint64_t))(v10 + 32))(v9, v0[16], v11);
      _s20HandleIntentStrategyVMa_5();
      uint64_t v15 = (void *)sub_140960();
      sub_141050();
      sub_141040();
      sub_5830(&qword_180AA8);
      sub_5830(&qword_17BF00);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_142E80;
      *(void *)(v16 + 32) = v15;
      uint64_t v26 = v16;
      sub_141330();
      uint64_t *v12 = v26;
      v12[1] = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v21, v9, v11);
      (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v22, enum case for ExecutionInfo.Action.timerDismiss(_:), v23);
      uint64_t v17 = sub_141070();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v24, 1, 1, v17);
      id v18 = v15;
      sub_141060();
      (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v12, enum case for CrossDeviceCommandExecution.started(_:), v25);
      sub_141030();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v12, v25);
      sub_13ED20();
      sub_13ED10();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      goto LABEL_11;
    }
    sub_904C(v0[16], &qword_17F5A0);
  }
  else
  {
    _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
  }
  if (qword_17B420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_141170();
  sub_33D8(v5, (uint64_t)qword_180988);
  uint64_t v6 = sub_141160();
  os_log_type_t v7 = sub_141480();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "DismissTimer.HandleIntentStrategy.makePreHandleIntentOutput() returning - selectedDevice not found in halInfo", v8, 2u);
    swift_slowDealloc();
  }

  sub_13ED20();
  sub_13ED10();
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_13186C(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = sub_13EFF0();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v5 = sub_13ECE0();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v6 = sub_141170();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v7 = sub_140680();
  v3[19] = v7;
  v3[20] = *(void *)(v7 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v8 = sub_1406A0();
  v3[22] = v8;
  v3[23] = *(void *)(v8 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  sub_5830(&qword_180A80);
  v3[26] = swift_task_alloc();
  uint64_t v9 = sub_141080();
  v3[27] = v9;
  v3[28] = *(void *)(v9 - 8);
  v3[29] = swift_task_alloc();
  uint64_t v10 = sub_140FC0();
  v3[30] = v10;
  v3[31] = *(void *)(v10 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v11 = sub_140FB0();
  v3[33] = v11;
  v3[34] = *(void *)(v11 - 8);
  v3[35] = swift_task_alloc();
  sub_5830(&qword_17F5A0);
  v3[36] = swift_task_alloc();
  uint64_t v12 = sub_13E550();
  v3[37] = v12;
  v3[38] = *(void *)(v12 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  return _swift_task_switch(sub_131C90, 0, 0);
}

uint64_t sub_131C90()
{
  if (qword_17B420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(*(void *)(v0 + 128), (uint64_t)qword_180988);
  *(void *)(v0 + 328) = v1;
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "DismissTimer.HandleIntentStrategy.makeIntentHandledResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_13EBB0();
  sub_90A8((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v5 = sub_13F120();
  *(void *)(v0 + 336) = v6;
  if (!v6)
  {
    _s20HandleIntentStrategyVwxx_1(v0 + 16);
    goto LABEL_9;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v10 = *(void *)(v0 + 304);
  uint64_t v11 = *(void *)(v0 + 288);
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  sub_13E510();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    uint64_t v12 = *(void *)(v0 + 288);
    swift_bridgeObjectRelease();
    sub_904C(v12, &qword_17F5A0);
LABEL_9:
    uint64_t v13 = *(void *)(v0 + 328);
    uint64_t v15 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 136);
    sub_13EC50();
    sub_13EFE0();
    _s20HandleIntentStrategyVMa_5();
    sub_140980();
    char v20 = sub_140880() & 1;
    *(unsigned char *)(v0 + 416) = v20;
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v14, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v13, v19);
    mach_absolute_time();
    sub_1406B0();
    if (qword_17B290 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v22 = swift_task_alloc();
    *(void *)(v0 + 368) = v22;
    *(void *)(v22 + 16) = v21;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1326AC;
    return sub_F5E10(v20, (uint64_t)sub_13480C, v22);
  }
  uint64_t v25 = *(void *)(v0 + 304);
  uint64_t v40 = *(void *)(v0 + 296);
  uint64_t v41 = *(void *)(v0 + 320);
  uint64_t v26 = *(void *)(v0 + 280);
  uint64_t v27 = *(void *)(v0 + 272);
  uint64_t v39 = *(void *)(v0 + 264);
  uint64_t v28 = *(void *)(v0 + 256);
  uint64_t v46 = *(void *)(v0 + 248);
  uint64_t v47 = *(void *)(v0 + 240);
  uint64_t v42 = *(void *)(v0 + 232);
  uint64_t v43 = *(void *)(v0 + 312);
  uint64_t v55 = v7;
  uint64_t v29 = *(void *)(v0 + 224);
  uint64_t v44 = *(void *)(v0 + 216);
  uint64_t v45 = *(void *)(v0 + 208);
  uint64_t v48 = *(void *)(v0 + 160);
  uint64_t v49 = *(void *)(v0 + 168);
  uint64_t v50 = *(void *)(v0 + 152);
  uint64_t v52 = *(void *)(v0 + 144);
  uint64_t v51 = *(void *)(v0 + 136);
  uint64_t v53 = *(void *)(v0 + 128);
  (*(void (**)(void))(v25 + 32))();
  sub_5830(&qword_17F7E0);
  uint64_t v30 = (void *)sub_13F140();
  sub_140D50();

  uint64_t v31 = sub_140D70();
  uint64_t v32 = sub_140D70();
  uint64_t v33 = (unsigned int *)&enum case for CrossDeviceCommandExecution.Result.success(_:);
  if (v31 != v32) {
    uint64_t v33 = (unsigned int *)&enum case for CrossDeviceCommandExecution.Result.error(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v26, *v33, v39);
  sub_141050();
  sub_141040();
  uint64_t v38 = v28 + *(int *)(sub_5830(&qword_180A98) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v43, v41, v40);
  (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v42, enum case for ExecutionInfo.Action.timerDismiss(_:), v44);
  uint64_t v34 = sub_141070();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v45, 1, 1, v34);
  sub_141060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v38, v26, v39);
  (*(void (**)(uint64_t, void, uint64_t))(v46 + 104))(v28, enum case for CrossDeviceCommandExecution.ended(_:), v47);
  sub_141030();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v28, v47);
  (*(void (**)(uint64_t, void, uint64_t))(v48 + 104))(v49, enum case for SiriTimeMeasurement.LogDescription.siriSuggestionsDonation(_:), v50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v52, v1, v53);
  mach_absolute_time();
  sub_1406B0();
  unint64_t v35 = sub_33868((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 344) = v35;
  unint64_t v36 = sub_33868((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 352) = v36;
  id v54 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t))((char *)&dword_180D10 + dword_180D10);
  uint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_132324;
  return v54(v55, v8, 0xD00000000000005FLL, 0x800000000014A4D0, v35, v36);
}

uint64_t sub_132324()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_13247C, 0, 0);
}

uint64_t sub_13247C()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 200);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v9 = *(void *)(v0 + 184);
  sub_140690();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v10 = *(void *)(v0 + 328);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v11 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 136);
  sub_13EC50();
  sub_13EFE0();
  _s20HandleIntentStrategyVMa_5();
  sub_140980();
  char v17 = sub_140880() & 1;
  *(unsigned char *)(v0 + 416) = v17;
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v11, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v10, v16);
  mach_absolute_time();
  sub_1406B0();
  if (qword_17B290 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v0 + 72);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 368) = v19;
  *(void *)(v19 + 16) = v18;
  char v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v20;
  *char v20 = v0;
  v20[1] = sub_1326AC;
  return sub_F5E10(v17, (uint64_t)sub_13480C, v19);
}

uint64_t sub_1326AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 384) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_132B04, 0, 0);
  }
  else
  {
    *(void *)(v4 + 392) = a1;
    swift_task_dealloc();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v4 + 400) = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_13286C;
    uint64_t v7 = *(unsigned __int8 *)(v4 + 416);
    uint64_t v8 = *(void *)(v4 + 192);
    uint64_t v9 = *(void *)(v4 + 120);
    uint64_t v10 = *(void *)(v4 + 96);
    uint64_t v11 = *(void *)(v4 + 56);
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v11, v9, v10, v8, v7);
  }
}

uint64_t sub_13286C()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 392);
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_132C78;
  }
  else {
    uint64_t v3 = sub_132998;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_132998()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_132B04()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_132C78()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_132DEC(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17BE78);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v23 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  _s20HandleIntentStrategyVMa_5();
  sub_140980();
  uint64_t v11 = sub_140870();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    sub_140FE0();

    uint64_t v13 = sub_140500();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 0, 1, v13);
  }
  else
  {
    uint64_t v14 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 1, 1, v14);
  }
  uint64_t v15 = type metadata accessor for DismissTimerHandledRemoteParameters(0);
  sub_2D248((uint64_t)v10, a1 + *(int *)(v15 + 20));
  uint64_t v16 = sub_140870();
  if (v16)
  {
    char v17 = (void *)v16;
    sub_140FF0();
  }
  else
  {
    uint64_t v18 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  }
  sub_2D248((uint64_t)v8, a1 + *(int *)(v15 + 28));
  uint64_t v19 = sub_140870();
  if (v19)
  {
    char v20 = (void *)v19;
    sub_140FD0();
  }
  else
  {
    uint64_t v21 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
  }
  return sub_2D248((uint64_t)v5, a1);
}

uint64_t sub_13306C(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  sub_140590();
  v2[9] = swift_task_alloc();
  uint64_t v3 = sub_141170();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v6 = sub_13EFF0();
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = sub_13ECE0();
  v2[22] = v7;
  v2[23] = *(void *)(v7 - 8);
  v2[24] = swift_task_alloc();
  sub_5830(&qword_180A80);
  v2[25] = swift_task_alloc();
  uint64_t v8 = sub_141080();
  v2[26] = v8;
  v2[27] = *(void *)(v8 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v9 = sub_140FC0();
  v2[29] = v9;
  v2[30] = *(void *)(v9 - 8);
  v2[31] = swift_task_alloc();
  sub_5830(&qword_17F5A0);
  v2[32] = swift_task_alloc();
  uint64_t v10 = sub_13E550();
  v2[33] = v10;
  v2[34] = *(void *)(v10 - 8);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  return _swift_task_switch(sub_13344C, 0, 0);
}

uint64_t sub_13344C()
{
  if (qword_17B420 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_33D8(v0[10], (uint64_t)qword_180988);
  uint64_t v1 = sub_141160();
  os_log_type_t v2 = sub_141480();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "DismissTimer.HandleIntentStrategy.makeFailureHandlingIntentResponse() called", v3, 2u);
    swift_slowDealloc();
  }

  _s20HandleIntentStrategyVMa_5();
  sub_140980();
  uint64_t v4 = (void *)sub_140870();

  if (v4)
  {
    sub_13EBB0();
    sub_90A8(v0 + 2, v0[5]);
    sub_13F120();
    if (v5)
    {
      uint64_t v6 = v0[33];
      uint64_t v7 = v0[34];
      uint64_t v8 = v0[32];
      _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
      sub_13E510();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
      {
        sub_904C(v0[32], &qword_17F5A0);
      }
      else
      {
        uint64_t v9 = v0[36];
        uint64_t v10 = v0[33];
        uint64_t v11 = v0[34];
        uint64_t v12 = v0[31];
        uint64_t v13 = v0[30];
        uint64_t v31 = v0[29];
        uint64_t v14 = v0[27];
        uint64_t v15 = v0[28];
        uint64_t v16 = v0[25];
        uint64_t v28 = v0[35];
        uint64_t v29 = v0[26];
        (*(void (**)(uint64_t, void, uint64_t))(v11 + 32))(v9, v0[32], v10);
        sub_141050();
        sub_141040();
        uint64_t v30 = v12 + *(int *)(sub_5830(&qword_180A88) + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v28, v9, v10);
        (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v15, enum case for ExecutionInfo.Action.timerDismiss(_:), v29);
        uint64_t v17 = sub_141070();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
        sub_141060();
        uint64_t v18 = enum case for CrossDeviceCommandExecution.FailureReason.unknown(_:);
        uint64_t v19 = sub_140FA0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v30, v18, v19);
        (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v12, enum case for CrossDeviceCommandExecution.failed(_:), v31);
        sub_141030();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v31);
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    else
    {
      _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 2));
    }
  }
  uint64_t v21 = v0[14];
  uint64_t v20 = v0[15];
  uint64_t v23 = v0[12];
  uint64_t v22 = v0[13];
  uint64_t v25 = v0[10];
  uint64_t v24 = v0[11];
  sub_13EC80();
  sub_13EFE0();
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v32, v25);
  mach_absolute_time();
  sub_1406B0();
  type metadata accessor for DeleteTimerCATPatternsExecutor(0);
  sub_140580();
  v0[37] = sub_140470();
  uint64_t v33 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
      + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
  uint64_t v26 = (void *)swift_task_alloc();
  v0[38] = v26;
  void *v26 = v0;
  v26[1] = sub_13391C;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v33)(0xD000000000000017, 0x800000000014AD50, _swiftEmptyArrayStorage);
}

uint64_t sub_13391C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_133BEC, 0, 0);
  }
  else
  {
    v4[40] = a1;
    swift_release();
    uint64_t v6 = (void *)swift_task_alloc();
    v4[41] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_133AC0;
    uint64_t v7 = v4[24];
    uint64_t v8 = v4[21];
    uint64_t v9 = v4[18];
    uint64_t v10 = v4[7];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_133AC0()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 320);
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_133EBC;
  }
  else {
    uint64_t v3 = sub_133D5C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_133BEC()
{
  swift_release();
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[19];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_133D5C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[19];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_133EBC()
{
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[19];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_134024(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_159A4;
  return sub_131258(a1);
}

uint64_t sub_1340BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_134164;
  return sub_13186C(a1, a2);
}

uint64_t sub_134164()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_134298, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_134298()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_134358(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_134400;
  return sub_13306C(a1);
}

uint64_t sub_134400()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_134534, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_134534()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1345F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = v3;
  v4[5] = a3;
  v4[2] = a1;
  v4[3] = a2;
  sub_5830(&qword_17CD30);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_13468C, 0, 0);
}

uint64_t sub_13468C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[4] + *(int *)(v0[5] + 20);
  uint64_t v5 = sub_140980();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v4, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  uint64_t v7 = sub_152A8(v3, v2, v1);
  sub_904C(v1, &qword_17CD30);
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v7);
}

unint64_t sub_1347B4()
{
  unint64_t result = qword_180A38[0];
  if (!qword_180A38[0])
  {
    _s20HandleIntentStrategyVMa_5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_180A38);
  }
  return result;
}

uint64_t sub_13480C(uint64_t a1)
{
  return sub_132DEC(a1);
}

uint64_t type metadata accessor for PauseTimerCATPatternsExecutor(uint64_t a1)
{
  return sub_181D4(a1, (uint64_t *)&unk_180AB0);
}

uint64_t sub_134834()
{
  return swift_initClassMetadata2();
}

uint64_t sub_134874()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_142FB0;
  *(void *)(v4 + 32) = 7368801;
  *(void *)(v4 + 40) = 0xE300000000000000;
  uint64_t v5 = *v0;
  if (*v0)
  {
    uint64_t v6 = sub_1404A0();
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    *(void *)(v4 + 56) = 0;
    *(void *)(v4 + 64) = 0;
  }
  *(void *)(v4 + 48) = v7;
  *(void *)(v4 + 72) = v6;
  strcpy((char *)(v4 + 80), "pausedTimers");
  *(unsigned char *)(v4 + 93) = 0;
  *(_WORD *)(v4 + 94) = -5120;
  uint64_t v8 = v0[1];
  uint64_t v9 = sub_5830(&qword_17C508);
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 120) = v9;
  *(void *)(v4 + 128) = 0x6174614477656976;
  *(void *)(v4 + 136) = 0xE800000000000000;
  uint64_t v10 = type metadata accessor for PauseTimerHandledOnWatchParameters(0);
  sub_8FE8((uint64_t)v0 + *(int *)(v10 + 24), (uint64_t)v3, &qword_17BE78);
  uint64_t v11 = sub_140500();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_904C((uint64_t)v3, &qword_17BE78);
    *(_OWORD *)(v4 + 144) = 0u;
    *(_OWORD *)(v4 + 160) = 0u;
  }
  else
  {
    *(void *)(v4 + 168) = v11;
    uint64_t v13 = sub_187EC((uint64_t *)(v4 + 144));
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v13, v3, v11);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_134A90()
{
  uint64_t v1 = sub_5830(&qword_17BE78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  sub_5830(&qword_17F3D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_142FB0;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  strcpy((char *)(v7 + 32), "cancelAction");
  *(unsigned char *)(v7 + 45) = 0;
  *(_WORD *)(v7 + 46) = -5120;
  sub_8FE8(v0, (uint64_t)v6, &qword_17BE78);
  uint64_t v9 = sub_140500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v6, 1, v9) == 1)
  {
    sub_904C((uint64_t)v6, &qword_17BE78);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    uint64_t v12 = sub_187EC(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v12, v6, v9);
  }
  strcpy((char *)(v7 + 80), "confirmAction");
  *(_WORD *)(v7 + 94) = -4864;
  uint64_t v13 = type metadata accessor for PauseTimerPromptConfirmParameters(0);
  sub_8FE8(v0 + *(int *)(v13 + 20), (uint64_t)v4, &qword_17BE78);
  if (v11(v4, 1, v9) == 1)
  {
    sub_904C((uint64_t)v4, &qword_17BE78);
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
  }
  else
  {
    *(void *)(v7 + 120) = v9;
    uint64_t v14 = sub_187EC((uint64_t *)(v7 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v14, v4, v9);
  }
  strcpy((char *)(v7 + 128), "speakableTimer");
  *(unsigned char *)(v7 + 143) = -18;
  uint64_t v15 = *(void *)(v0 + *(int *)(v13 + 24));
  if (v15)
  {
    uint64_t v16 = type metadata accessor for TimerTimer(0);
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(v7 + 152) = 0;
    *(void *)(v7 + 160) = 0;
  }
  *(void *)(v7 + 144) = v15;
  *(void *)(v7 + 168) = v16;
  swift_retain();
  return v7;
}

uint64_t sub_134D40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_5830(&qword_17BE78);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  sub_5830(&qword_17F3D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_142FC0;
  uint64_t v9 = (uint64_t *)(v8 + 48);
  strcpy((char *)(v8 + 32), "cancelAction");
  *(unsigned char *)(v8 + 45) = 0;
  *(_WORD *)(v8 + 46) = -5120;
  sub_8FE8(v1, (uint64_t)v7, &qword_17BE78);
  uint64_t v10 = sub_140500();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v7, 1, v10) == 1)
  {
    sub_904C((uint64_t)v7, &qword_17BE78);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }
  else
  {
    *(void *)(v8 + 72) = v10;
    uint64_t v13 = sub_187EC(v9);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v13, v7, v10);
  }
  strcpy((char *)(v8 + 80), "confirmAction");
  *(_WORD *)(v8 + 94) = -4864;
  uint64_t v14 = type metadata accessor for PauseTimerPromptConfirmAllParameters(0);
  sub_8FE8(v1 + *(int *)(v14 + 20), (uint64_t)v5, &qword_17BE78);
  if (v12(v5, 1, v10) == 1)
  {
    sub_904C((uint64_t)v5, &qword_17BE78);
    *(_OWORD *)(v8 + 96) = 0u;
    *(_OWORD *)(v8 + 112) = 0u;
  }
  else
  {
    *(void *)(v8 + 120) = v10;
    uint64_t v15 = sub_187EC((uint64_t *)(v8 + 96));
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(v15, v5, v10);
  }
  return v8;
}

uint64_t sub_134F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for PauseTimerHandledOnWatchParameters(0);
  v4[7] = swift_task_alloc();
  return _swift_task_switch(sub_135034, 0, 0);
}

uint64_t sub_135034()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void (*)(void *))v0[3];
  uint64_t v3 = v0[2];
  uint64_t v4 = (char *)v1 + *(int *)(v0[6] + 24);
  uint64_t v5 = sub_140500();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *uint64_t v1 = 0;
  v1[1] = v3;
  swift_bridgeObjectRetain();
  v2(v1);
  uint64_t v6 = sub_134874();
  v0[8] = v6;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_135180;
  return v9(0xD000000000000019, 0x8000000000148C10, v6);
}

uint64_t sub_135180(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_135354;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_1352CC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1352CC()
{
  sub_1364A8(v0[7], type metadata accessor for PauseTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[11];
  return v1(v2);
}

uint64_t sub_135354()
{
  sub_1364A8(*(void *)(v0 + 56), type metadata accessor for PauseTimerHandledOnWatchParameters);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1353D8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1353F8, 0, 0);
}

uint64_t sub_1353F8()
{
  uint64_t v1 = v0[2];
  sub_5830(&qword_17F3D0);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_142D50;
  strcpy((char *)(v2 + 32), "pausedTimers");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  *(void *)(v2 + 72) = sub_5830(&qword_17C508);
  *(void *)(v2 + 48) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_4F0A4;
  return v5(0xD000000000000018, 0x8000000000148BF0, v2);
}

uint64_t sub_135530(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 32) = a2;
  *(unsigned char *)(v4 + 96) = a1;
  return _swift_task_switch(sub_135558, 0, 0);
}

uint64_t sub_135558()
{
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 96);
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 32);
  *(void *)(v0 + 24) = 0;
  v1(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  sub_5830(&qword_17F3D0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_142FC0;
  *(void *)(v4 + 32) = 0xD000000000000011;
  *(void *)(v4 + 40) = 0x800000000014AE20;
  *(unsigned char *)(v4 + 48) = v2;
  *(void *)(v4 + 72) = &type metadata for Bool;
  strcpy((char *)(v4 + 80), "remainingTime");
  *(_WORD *)(v4 + 94) = -4864;
  uint64_t v5 = 0;
  if (v3)
  {
    uint64_t v5 = sub_140430();
  }
  else
  {
    *(void *)(v4 + 104) = 0;
    *(void *)(v4 + 112) = 0;
  }
  *(void *)(v0 + 64) = v3;
  *(void *)(v4 + 96) = v3;
  *(void *)(v4 + 120) = v5;
  uint64_t v8 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1356F8;
  return v8(0xD000000000000021, 0x800000000014AE40, v4);
}

uint64_t sub_1356F8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1358AC;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_135844;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_135844()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 88);
  return v1(v2);
}

uint64_t sub_1358AC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_135910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_8FE8(a1, (uint64_t)v10, &qword_17B520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140460();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_904C(a1, &qword_17B520);
  return v11;
}

uint64_t sub_135AA8()
{
  return type metadata accessor for PauseTimerCATPatternsExecutor(0);
}

uint64_t sub_135AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_135AC4);
}

uint64_t sub_135AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_5830(&qword_17BE78);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_135B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_135B8C);
}

uint64_t sub_135B8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_5830(&qword_17BE78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PauseTimerHandledOnWatchParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_180B70);
}

void sub_135C58()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_135CFC(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  *(unsigned char *)(v3 + 72) = a1;
  return _swift_task_switch(sub_135D20, 0, 0);
}

uint64_t sub_135D20()
{
  uint64_t v1 = *(void **)(v0 + 24);
  sub_140420();
  swift_allocObject();
  sub_140410();
  id v2 = [v1 remainingTime];
  uint64_t v3 = v2;
  if (v2)
  {
    [v2 doubleValue];
  }
  char v4 = *(unsigned char *)(v0 + 72);
  sub_140400();
  swift_release();
  uint64_t v5 = sub_1403F0();
  *(void *)(v0 + 32) = v5;
  swift_release();
  sub_5830(&qword_17F3D0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 40) = v6;
  *(_OWORD *)(v6 + 16) = xmmword_142FC0;
  *(void *)(v6 + 32) = 0xD000000000000011;
  *(void *)(v6 + 40) = 0x800000000014AE20;
  *(unsigned char *)(v6 + 48) = v4;
  *(void *)(v6 + 72) = &type metadata for Bool;
  strcpy((char *)(v6 + 80), "remainingTime");
  *(_WORD *)(v6 + 94) = -4864;
  *(void *)(v6 + 120) = sub_140430();
  *(void *)(v6 + 96) = v5;
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_58654;
  return v9(0xD000000000000021, 0x800000000014AE40, v6);
}

uint64_t type metadata accessor for PauseTimerPromptConfirmAllParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_180CB0);
}

uint64_t sub_135F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_5830(&qword_17BE78);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for PauseTimerPromptConfirmParameters(0);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_13600C, 0, 0);
}

uint64_t sub_13600C()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_140500();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v1, 1, 1, v4);
  uint64_t v6 = v1 + *(int *)(v2 + 20);
  v5(v6, 1, 1, v4);
  uint64_t v7 = *(int *)(v2 + 24);
  *(void *)(v1 + v7) = 0;
  *(void *)(v1 + v7) = sub_174C0(0, 0);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v6);
  swift_bridgeObjectRetain();
  sub_1404D0();
  v5(v3, 0, 1, v4);
  sub_2D248(v3, v1);
  uint64_t v8 = sub_134A90();
  v0[11] = v8;
  uint64_t v11 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
                                                                            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[12] = v9;
  void *v9 = v0;
  v9[1] = sub_136218;
  return v11(0xD000000000000018, 0x800000000014AE90, v8);
}

uint64_t sub_136218(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1363F8;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_136364;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_136364()
{
  sub_1364A8(v0[10], type metadata accessor for PauseTimerPromptConfirmParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[14];
  return v1(v2);
}

uint64_t sub_1363F8()
{
  sub_1364A8(*(void *)(v0 + 80), type metadata accessor for PauseTimerPromptConfirmParameters);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for PauseTimerPromptConfirmParameters(uint64_t a1)
{
  return sub_181D4(a1, qword_180C18);
}

uint64_t sub_1364A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_136508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13651C);
}

uint64_t sub_13651C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5830(&qword_17BE78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1365EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_136600);
}

uint64_t sub_136600(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_5830(&qword_17BE78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_1366C0()
{
  sub_59B64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_136758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13676C);
}

uint64_t sub_13676C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1367DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1367F0);
}

uint64_t sub_1367F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_17BE78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_136864@<X0>(uint64_t a1@<X8>)
{
  return sub_AE204(v1, a1);
}

uint64_t sub_136870(uint64_t a1)
{
  return sub_2D248(a1, v1);
}

uint64_t sub_136878()
{
  return swift_retain();
}

uint64_t sub_136884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 20);
  uint64_t result = swift_release();
  *(void *)(v2 + v4) = a1;
  return result;
}

TimerFlowDelegatePlugin::TimerSnippetModel (__swiftcall *sub_1368BC())(Swift::OpaquePointer timers)
{
  return TimerSnippetModel.init(timers:);
}

uint64_t sub_1368E0(uint64_t a1, uint64_t a2)
{
  v3[7] = a1;
  v3[8] = a2;
  v3[9] = *v2;
  return _swift_task_switch(sub_136908, 0, 0);
}

uint64_t sub_136908()
{
  uint64_t v1 = (void (*)(uint64_t *))v0[7];
  uint64_t v2 = type metadata accessor for TimerBaseAppNotInstalledParameters(0);
  v0[5] = v2;
  v0[6] = sub_136C38();
  uint64_t v3 = sub_187EC(v0 + 2);
  uint64_t v4 = sub_140500();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(uint64_t *)((char *)v3 + *(int *)(v2 + 20)) = 0;
  v1(v0 + 2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_180598 + dword_180598);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_136A44;
  uint64_t v6 = v0[9];
  return v8(v6, (uint64_t)(v0 + 2));
}

uint64_t sub_136A44(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_136BD4;
  }
  else
  {
    *(void *)(v4 + 96) = a1;
    uint64_t v5 = sub_136B6C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_136B6C()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 96);
  return v1(v2);
}

uint64_t sub_136BD4()
{
  _s20HandleIntentStrategyVwxx_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_136C38()
{
  unint64_t result = qword_180CF0;
  if (!qword_180CF0)
  {
    type metadata accessor for TimerBaseAppNotInstalledParameters(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180CF0);
  }
  return result;
}

uint64_t sub_136C90()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180CF8);
  sub_33D8(v0, (uint64_t)qword_180CF8);
  return sub_140780();
}

uint64_t sub_136CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[48] = a5;
  v6[49] = a6;
  v6[46] = a3;
  v6[47] = a4;
  v6[44] = a1;
  v6[45] = a2;
  uint64_t v7 = sub_140B70();
  v6[50] = v7;
  v6[51] = *(void *)(v7 - 8);
  v6[52] = swift_task_alloc();
  return _swift_task_switch(sub_136DA4, 0, 0);
}

uint64_t sub_136DA4()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 144;
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v4 = *(void **)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v7 = *(void *)(v0 + 384);
  *uint64_t v4 = *(void *)(v0 + 368);
  v4[1] = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v4, enum case for IntentType.inIntent(_:), v5);
  sub_140B60();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_140B20();
  uint64_t v8 = sub_140B30();
  *(void *)(v0 + 424) = v8;
  swift_release();
  uint64_t v37 = v7 + 64;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 64);
  int64_t v38 = (unint64_t)(63 - v10) >> 6;
  uint64_t v12 = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v11) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v19 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  unint64_t v20 = v19 | (v18 << 6);
LABEL_7:
  uint64_t v21 = (void *)(*(void *)(v7 + 48) + 16 * v20);
  uint64_t v22 = v21[1];
  *(void *)(v0 + 80) = *v21;
  *(void *)(v0 + 88) = v22;
  sub_BFC68(*(void *)(v7 + 56) + 48 * v20, v0 + 96);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_137B30(v0 + 80, v0 + 16);
    if (!*(void *)(v0 + 24))
    {
      uint64_t v26 = *(void *)(v0 + 392);
      swift_release();
      if (!*(void *)(v26 + 16))
      {
        sub_140AF0();
        sub_140AE0();
        uint64_t v1 = *(void *)(v0 + 256);
        uint64_t v2 = *(void *)(v0 + 264);
        sub_90A8((void *)(v0 + 232), v1);
        uint64_t v8 = sub_140B40();
        *(void *)(v0 + 448) = v8;
        if (qword_17B2E8 != -1) {
          goto LABEL_36;
        }
        goto LABEL_32;
      }
      sub_140AF0();
      sub_140AE0();
      uint64_t v27 = *(void *)(v0 + 216);
      uint64_t v28 = *(void *)(v0 + 224);
      sub_90A8((void *)(v0 + 192), v27);
      uint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 432) = v29;
      uint64_t v30 = *(void *)(v28 + 8);
      *uint64_t v29 = v0;
      v29[1] = sub_137268;
      uint64_t v31 = *(void *)(v0 + 392);
      uint64_t v33 = *(void *)(v0 + 352);
      uint64_t v32 = *(void *)(v0 + 360);
      return SiriSuggestionsBaseAPIClient.submitExecutionParams(for:executionParams:)(v33, v32, v31, v27, v30);
    }
    sub_34AF0((long long *)(v0 + 32), (_OWORD *)(v0 + 144));
    sub_140B50();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = _s20HandleIntentStrategyVwxx_1(v0 + 144);
    if (v11) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v23 < v38)
    {
      unint64_t v24 = *(void *)(v37 + 8 * v23);
      if (v24) {
        goto LABEL_11;
      }
      int64_t v25 = v18 + 2;
      ++v18;
      if (v23 + 1 < v38)
      {
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (v24) {
          goto LABEL_14;
        }
        int64_t v18 = v23 + 1;
        if (v23 + 2 < v38)
        {
          unint64_t v24 = *(void *)(v37 + 8 * (v23 + 2));
          if (v24)
          {
            v23 += 2;
            goto LABEL_11;
          }
          int64_t v25 = v23 + 3;
          int64_t v18 = v23 + 2;
          if (v23 + 3 < v38)
          {
            unint64_t v24 = *(void *)(v37 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  break;
                }
                if (v23 >= v38)
                {
                  int64_t v18 = v38 - 1;
                  goto LABEL_25;
                }
                unint64_t v24 = *(void *)(v37 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_11;
                }
              }
              __break(1u);
              return SiriSuggestionsBaseAPIClient.submitCurrentIntent(for:intent:owner:)(v12, v13, v14, v15, v16, v17);
            }
LABEL_14:
            int64_t v23 = v25;
LABEL_11:
            unint64_t v11 = (v24 - 1) & v24;
            unint64_t v20 = __clz(__rbit64(v24)) + (v23 << 6);
            int64_t v18 = v23;
            goto LABEL_7;
          }
        }
      }
    }
LABEL_25:
    unint64_t v11 = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  __break(1u);
LABEL_36:
  swift_once();
LABEL_32:
  uint64_t v34 = qword_181170;
  *(void *)(v0 + 296) = sub_140B80();
  *(void *)(v0 + 304) = sub_137B98();
  *(void *)(v0 + 272) = v34;
  swift_retain();
  unint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v35;
  uint64_t v17 = *(void *)(v2 + 8);
  void *v35 = v0;
  v35[1] = sub_1374E8;
  uint64_t v13 = *(void *)(v0 + 360);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v14 = v8;
  uint64_t v15 = v0 + 272;
  uint64_t v16 = v1;
  return SiriSuggestionsBaseAPIClient.submitCurrentIntent(for:intent:owner:)(v12, v13, v14, v15, v16, v17);
}

uint64_t sub_137268()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_13769C;
  }
  else {
    uint64_t v2 = sub_13737C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_13737C()
{
  _s20HandleIntentStrategyVwxx_1((uint64_t)(v0 + 24));
  sub_140AF0();
  sub_140AE0();
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[33];
  sub_90A8(v0 + 29, v1);
  uint64_t v3 = sub_140B40();
  v0[56] = v3;
  if (qword_17B2E8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_181170;
  v0[37] = sub_140B80();
  v0[38] = sub_137B98();
  v0[34] = v4;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[57] = v5;
  uint64_t v6 = *(void *)(v2 + 8);
  *uint64_t v5 = v0;
  v5[1] = sub_1374E8;
  uint64_t v8 = v0[44];
  uint64_t v7 = v0[45];
  return SiriSuggestionsBaseAPIClient.submitCurrentIntent(for:intent:owner:)(v8, v7, v3, v0 + 34, v1, v6);
}

uint64_t sub_1374E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1378E0;
  }
  else
  {
    _s20HandleIntentStrategyVwxx_1(v2 + 272);
    uint64_t v3 = sub_137628;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_137628()
{
  swift_release();
  _s20HandleIntentStrategyVwxx_1(v0 + 232);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_13769C()
{
  uint64_t v10 = v0;
  _s20HandleIntentStrategyVwxx_1(v0 + 192);
  if (qword_17B428 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_180CF8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = sub_141B00();
    *(void *)(v0 + 344) = sub_58C0(v5, v6, &v9);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "SuggestionsProvider.submitIntentToSiriSuggestions caught error: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1378E0()
{
  uint64_t v10 = v0;
  _s20HandleIntentStrategyVwxx_1(v0 + 272);
  _s20HandleIntentStrategyVwxx_1(v0 + 232);
  if (qword_17B428 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_180CF8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141470();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = sub_141B00();
    *(void *)(v0 + 344) = sub_58C0(v5, v6, &v9);
    sub_1415C0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "SuggestionsProvider.submitIntentToSiriSuggestions caught error: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_137B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5830(&qword_180D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_137B98()
{
  unint64_t result = qword_180D20;
  if (!qword_180D20)
  {
    sub_140B80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_180D20);
  }
  return result;
}

uint64_t sub_137BF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  char v10 = sub_13EC00();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11(v9, v2, a1);
  if (v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_13EBE0();
  }
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v9, a1);
  v11(v7, v2, a1);
  if (v12) {
    char v14 = 1;
  }
  else {
    char v14 = sub_13EBF0();
  }
  v13(v7, a1);
  return v14 & 1;
}

uint64_t sub_137D78(uint64_t a1)
{
  return sub_137DE0(a1, (void (*)(void))type metadata accessor for SearchForTimersCATsSimple, (uint64_t (*)(char *, void))&CATWrapperSimple.__allocating_init(options:globals:), &qword_1812F8);
}

uint64_t sub_137DAC(uint64_t a1)
{
  return sub_137DE0(a1, (void (*)(void))type metadata accessor for SearchForTimersCATPatternsExecutor, (uint64_t (*)(char *, void))&CATWrapper.__allocating_init(options:globals:), &qword_181300);
}

uint64_t sub_137DE0(uint64_t a1, void (*a2)(void), uint64_t (*a3)(char *, void), uint64_t *a4)
{
  uint64_t v7 = sub_140590();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  sub_140580();
  uint64_t result = a3(v9, 0);
  *a4 = result;
  return result;
}

ValueMetadata *_s11descr173B51O25NeedsConfirmationStrategyVMa()
{
  return &_s11descr173B51O25NeedsConfirmationStrategyVN;
}

uint64_t sub_137E94()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180D28);
  sub_33D8(v0, (uint64_t)qword_180D28);
  return sub_140E60();
}

uint64_t sub_137EE0()
{
  uint64_t v0 = sub_140730();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  os_log_type_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_140720();
  BOOL v4 = sub_1406E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    sub_5830(&qword_17FBA8);
    uint64_t v5 = (void *)sub_13F1F0();
    id v6 = [v5 targetTimer];

    id v7 = [v6 shouldMatchAny];
    sub_2FF44();
    v8.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v8.super.super.isa;
    if (v7)
    {
      id v10 = v7;
      char v11 = sub_141590();

      if (v11)
      {
        char v12 = (void *)sub_13F1F0();
        id v13 = [v12 targetingInfo];

        if (!v13)
        {
          if (qword_17B440 != -1) {
            swift_once();
          }
          uint64_t v14 = sub_141170();
          sub_33D8(v14, (uint64_t)qword_180D28);
          uint64_t v15 = sub_141160();
          os_log_type_t v16 = sub_141480();
          if (!os_log_type_enabled(v15, v16))
          {
            uint64_t v18 = 1;
            goto LABEL_16;
          }
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v17 = 0;
          _os_log_impl(&dword_0, v15, v16, "ResolveRecord indicates we are searching for a room confirmation", v17, 2u);
          uint64_t v18 = 1;
          goto LABEL_14;
        }
      }
    }
    else
    {
    }
  }
  if (qword_17B440 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_141170();
  sub_33D8(v19, (uint64_t)qword_180D28);
  uint64_t v15 = sub_141160();
  os_log_type_t v20 = sub_141480();
  if (!os_log_type_enabled(v15, v20))
  {
    uint64_t v18 = 0;
    goto LABEL_16;
  }
  uint64_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v21 = 0;
  _os_log_impl(&dword_0, v15, v20, "ResolveRecord not searching for room confirmation", v21, 2u);
  uint64_t v18 = 0;
LABEL_14:
  swift_slowDealloc();
LABEL_16:

  return v18;
}

uint64_t sub_1381FC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5830((uint64_t *)&unk_17EB90);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_5830(&qword_17CD30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_17B440 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_141170();
  sub_33D8(v10, (uint64_t)qword_180D28);
  char v11 = sub_141160();
  os_log_type_t v12 = sub_141480();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "PauseTimer.NeedsConfirmationStrategy.actionForInput() called)", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = sub_140980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  char v15 = sub_137EE0();
  uint64_t v16 = sub_1407C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.roomConfirmation(_:);
  if ((v15 & 1) == 0) {
    uint64_t v18 = (unsigned int *)&enum case for DecideAction.PromptExpectation.confirmation(_:);
  }
  (*(void (**)(char *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v6, *v18, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_61F34(a1, (uint64_t)v9, 0, (uint64_t)v6, a2);
  sub_904C((uint64_t)v6, (uint64_t *)&unk_17EB90);
  return sub_904C((uint64_t)v9, &qword_17CD30);
}

uint64_t sub_1384A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  sub_5830(&qword_17F3E0);
  v4[11] = swift_task_alloc();
  uint64_t v5 = sub_13EDF0();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_1385AC, 0, 0);
}

uint64_t sub_1385AC()
{
  if (qword_17B440 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_141170();
  sub_33D8(v1, (uint64_t)qword_180D28);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "PauseTimer.NeedsConfirmationStrategy.parseConfirmationResponse() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17FBA8);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];

  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (swift_dynamicCast())
  {
    uint64_t v7 = (void *)v0[6];
    uint64_t v8 = (void *)sub_13F1F0();
    id v9 = [v8 targetTimer];

    id v10 = [v9 shouldMatchAny];
    id v11 = objc_allocWithZone((Class)sub_140C10());
    id v12 = v7;
    id v13 = [v11 init];
    [v12 setShouldMatchAny:v10];
    id v14 = v12;
    [v13 setTargetTimer:v14];

    if (sub_137EE0())
    {
      sub_B6610(v0[8], 1, v0[15]);
      switch(sub_BBA44())
      {
        case 1u:
          uint64_t v23 = sub_141160();
          os_log_type_t v24 = sub_141480();
          if (os_log_type_enabled(v23, v24))
          {
            int64_t v25 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int64_t v25 = 0;
            _os_log_impl(&dword_0, v23, v24, "Received explicit 'here' confirmation – only local timers for pauseMultiple", v25, 2u);
            swift_slowDealloc();
          }

          id v26 = [v13 targetTimer];
          if (v26) {
            goto LABEL_21;
          }
          goto LABEL_23;
        case 3u:
          uint64_t v27 = v0[14];
          uint64_t v28 = v0[12];
          uint64_t v29 = v0[13];
          sub_13EDD0();
          char v30 = sub_13EDB0();
          uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
          v50(v27, v28);
          uint64_t v31 = sub_141160();
          os_log_type_t v32 = sub_141480();
          BOOL v33 = os_log_type_enabled(v31, v32);
          if ((v30 & 1) == 0)
          {
            if (v33)
            {
              uint64_t v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v42 = 0;
              _os_log_impl(&dword_0, v31, v32, "Defaulting confirmation to reject for no/cancel", v42, 2u);
              swift_slowDealloc();
            }
            uint64_t v49 = v0[15];
            uint64_t v44 = v0[11];
            uint64_t v43 = v0[12];

            uint64_t v45 = enum case for ConfirmationResponse.rejected(_:);
            uint64_t v46 = sub_13F0C0();
            uint64_t v47 = *(void *)(v46 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 104))(v44, v45, v46);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
            id v48 = v13;
            sub_141560();

            sub_13F190();
            v50(v49, v43);
            goto LABEL_25;
          }
          if (v33)
          {
            uint64_t v34 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v34 = 0;
            _os_log_impl(&dword_0, v31, v32, "Confirming use only local timers for pauseMultiple", v34, 2u);
            swift_slowDealloc();
          }

          id v26 = [v13 targetTimer];
          if (v26)
          {
LABEL_21:
            uint64_t v19 = v26;
            Swift::Bool v20 = 0;
LABEL_22:
            sub_2FF44();
            Class isa = sub_141570(v20).super.super.isa;
            [v19 setShouldMatchRemote:isa];
          }
LABEL_23:
          (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
          break;
        default:
          char v15 = sub_141160();
          os_log_type_t v16 = sub_141480();
          if (os_log_type_enabled(v15, v16))
          {
            uint64_t v17 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v17 = 0;
            _os_log_impl(&dword_0, v15, v16, "Received explicit 'everywhere' confirmation to include remote timers for pauseMultiple", v17, 2u);
            swift_slowDealloc();
          }

          id v18 = [v13 targetTimer];
          if (!v18) {
            goto LABEL_23;
          }
          uint64_t v19 = v18;
          Swift::Bool v20 = 1;
          goto LABEL_22;
      }
    }
    uint64_t v36 = v0[11];
    uint64_t v37 = enum case for ConfirmationResponse.confirmed(_:);
    uint64_t v38 = sub_13F0C0();
    uint64_t v39 = *(void *)(v38 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 104))(v36, v37, v38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    id v40 = v13;
    sub_141560();

    sub_13F190();
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v21 = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
  }
  return v22();
}

uint64_t sub_138D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a1;
  v3[21] = a3;
  sub_5830(&qword_17BE70);
  v3[22] = swift_task_alloc();
  uint64_t v4 = sub_13F040();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  sub_5830(&qword_17BE78);
  v3[28] = swift_task_alloc();
  v3[29] = type metadata accessor for PauseTimerPromptConfirmAllParameters(0);
  v3[30] = swift_task_alloc();
  sub_140590();
  v3[31] = swift_task_alloc();
  uint64_t v5 = sub_141170();
  v3[32] = v5;
  v3[33] = *(void *)(v5 - 8);
  v3[34] = swift_task_alloc();
  uint64_t v6 = sub_140680();
  v3[35] = v6;
  v3[36] = *(void *)(v6 - 8);
  v3[37] = swift_task_alloc();
  uint64_t v7 = sub_1406A0();
  v3[38] = v7;
  v3[39] = *(void *)(v7 - 8);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  uint64_t v8 = sub_13EFF0();
  v3[43] = v8;
  v3[44] = *(void *)(v8 - 8);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  uint64_t v9 = sub_140730();
  v3[48] = v9;
  v3[49] = *(void *)(v9 - 8);
  v3[50] = swift_task_alloc();
  uint64_t v10 = sub_13ECE0();
  v3[51] = v10;
  v3[52] = *(void *)(v10 - 8);
  v3[53] = swift_task_alloc();
  return _swift_task_switch(sub_139148, 0, 0);
}

uint64_t sub_139148()
{
  if (qword_17B440 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_33D8(v0[32], (uint64_t)qword_180D28);
  uint64_t v2 = sub_141160();
  os_log_type_t v3 = sub_141480();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "PauseTimer.NeedsConfirmationStrategy.makePromptForConfirmation() called", v4, 2u);
    swift_slowDealloc();
  }

  sub_5830(&qword_17FBA8);
  uint64_t v5 = (void *)sub_13F200();
  id v6 = [v5 itemToConfirm];

  sub_1415F0();
  swift_unknownObjectRelease();
  sub_140EA0();
  if (!swift_dynamicCast())
  {
    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *char v30 = 2;
    swift_willThrow();
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
  uint64_t v8 = v0[49];
  uint64_t v7 = v0[50];
  uint64_t v9 = v0[48];
  uint64_t v10 = (void *)v0[19];
  v0[54] = v10;
  sub_13EC60();
  sub_140720();
  BOOL v11 = sub_1406E0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v7, v9);
  if (v11)
  {
    id v13 = [v10 shouldMatchAny];
    sub_2FF44();
    v14.super.super.Class isa = sub_141580(1).super.super.isa;
    Class isa = v14.super.super.isa;
    if (v13)
    {
      id v16 = v13;
      char v17 = sub_141590();

      if (v17)
      {
        id v18 = (void *)sub_13F1F0();
        id v19 = [v18 targetingInfo];

        if (!v19)
        {
          uint64_t v21 = v0[36];
          uint64_t v20 = v0[37];
          uint64_t v23 = v0[34];
          uint64_t v22 = v0[35];
          uint64_t v24 = v0[32];
          uint64_t v25 = v0[33];
          sub_1187C4(5, v0[47]);
          (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v22);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v1, v24);
          mach_absolute_time();
          sub_1406B0();
          type metadata accessor for PauseTimerCATsSimple();
          sub_140580();
          v0[55] = sub_140530();
          uint64_t v104 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
               + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
          id v26 = (void *)swift_task_alloc();
          v0[56] = v26;
          void *v26 = v0;
          v26[1] = sub_E3934;
          unint64_t v27 = 0x800000000014AFA0;
          uint64_t v28 = _swiftEmptyArrayStorage;
          unint64_t v29 = 0xD000000000000020;
LABEL_18:
          return ((uint64_t (*)(unint64_t, unint64_t, void *))v104)(v29, v27, v28);
        }
      }
    }
    else
    {
    }
    id v33 = [v10 device];

    if (v33)
    {
      uint64_t v35 = v0[36];
      uint64_t v34 = v0[37];
      uint64_t v37 = v0[34];
      uint64_t v36 = v0[35];
      uint64_t v39 = v0[32];
      uint64_t v38 = v0[33];
      sub_11838C(5);
      (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v34, enum case for SiriTimeMeasurement.LogDescription.dialogResponseTime(_:), v36);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v37, v1, v39);
      mach_absolute_time();
      sub_1406B0();
      type metadata accessor for TimerBaseCATsSimple();
      sub_140580();
      v0[60] = sub_140530();
      uint64_t v40 = sub_174C0(0, 0);
      v0[61] = v40;
      sub_5830(&qword_17F3D0);
      uint64_t v41 = swift_allocObject();
      v0[62] = v41;
      *(_OWORD *)(v41 + 16) = xmmword_142D50;
      *(void *)(v41 + 32) = 0x72656D6974;
      *(void *)(v41 + 40) = 0xE500000000000000;
      *(void *)(v41 + 72) = type metadata accessor for TimerTimer(0);
      *(void *)(v41 + 48) = v40;
      uint64_t v104 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
           + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
      swift_retain();
      uint64_t v42 = (void *)swift_task_alloc();
      v0[63] = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_E3F6C;
      unint64_t v27 = 0x80000000001495B0;
      unint64_t v29 = 0xD000000000000023;
      uint64_t v28 = (void *)v41;
      goto LABEL_18;
    }
  }
  uint64_t v43 = v0[50];
  uint64_t v44 = v0[48];
  sub_11838C(5);
  sub_140720();
  BOOL v45 = sub_140710();
  v12(v43, v44);
  if (!v45)
  {
    id v76 = [v10 shouldMatchAny];
    sub_2FF44();
    v77.super.super.Class isa = sub_141580(1).super.super.isa;
    Class v78 = v77.super.super.isa;
    if (v76)
    {
      id v79 = v76;
      char v80 = sub_141590();

      if (v80)
      {
        if (qword_17B150 != -1) {
          swift_once();
        }
        uint64_t v106 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
             + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
        uint64_t v81 = (void *)swift_task_alloc();
        v0[77] = v81;
        *uint64_t v81 = v0;
        v81[1] = sub_13A34C;
        uint64_t v82 = v0[26];
        unint64_t v83 = 0x800000000014AF70;
        uint64_t v84 = _swiftEmptyArrayStorage;
        unint64_t v85 = 0xD000000000000023;
LABEL_38:
        return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v106)(v82, v85, v83, v84);
      }
    }
    else
    {
    }
    if (qword_17B150 != -1) {
      swift_once();
    }
    uint64_t v86 = sub_174C0(0, 0);
    v0[79] = v86;
    sub_5830(&qword_17F3D0);
    uint64_t v87 = swift_allocObject();
    v0[80] = v87;
    *(_OWORD *)(v87 + 16) = xmmword_142D50;
    strcpy((char *)(v87 + 32), "speakableTimer");
    *(unsigned char *)(v87 + 47) = -18;
    *(void *)(v87 + 72) = type metadata accessor for TimerTimer(0);
    *(void *)(v87 + 48) = v86;
    uint64_t v106 = (char *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:)
         + async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:);
    swift_retain();
    uint64_t v88 = (void *)swift_task_alloc();
    v0[81] = v88;
    *uint64_t v88 = v0;
    v88[1] = sub_13A51C;
    uint64_t v82 = v0[25];
    unint64_t v85 = 0xD00000000000001DLL;
    unint64_t v83 = 0x800000000014AF50;
    uint64_t v84 = (void *)v87;
    goto LABEL_38;
  }
  uint64_t v46 = (void *)sub_13F050();

  uint64_t v48 = sub_1415A0();
  uint64_t v50 = v49;

  v0[67] = v50;
  if (!v50)
  {
LABEL_42:
    uint64_t v89 = sub_141160();
    os_log_type_t v90 = sub_141470();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v91 = 0;
      _os_log_impl(&dword_0, v89, v90, "Could not create direct invocation for confirm or reject actions.", v91, 2u);
      swift_slowDealloc();
    }
    uint64_t v92 = v0[52];
    uint64_t v93 = v0[53];
    uint64_t v94 = v0[51];
    uint64_t v96 = v0[44];
    uint64_t v95 = v0[45];
    uint64_t v97 = v0[43];

    sub_5830((uint64_t *)&unk_17F3C0);
    sub_2F710();
    swift_allocError();
    *uint64_t v98 = 0;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v97);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v94);
    goto LABEL_12;
  }
  uint64_t v51 = (void *)sub_13F050();
  uint64_t v53 = v52;

  uint64_t v54 = sub_1415A0();
  uint64_t v56 = v55;

  v0[68] = v56;
  if (!v56)
  {
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v102 = v48;
  uint64_t v105 = v54;
  unint64_t v57 = v10;
  uint64_t v58 = v0[34];
  uint64_t v60 = v0[32];
  uint64_t v59 = v0[33];
  (*(void (**)(void, void, void))(v0[36] + 104))(v0[37], enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v0[35]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v58, v1, v60);
  mach_absolute_time();
  uint64_t v61 = v57;
  sub_1406B0();
  id v62 = [v57 shouldMatchAny];
  sub_2FF44();
  v63.super.super.Class isa = sub_141580(1).super.super.isa;
  Class v64 = v63.super.super.isa;
  if (v62)
  {
    id v65 = v62;
    char v66 = sub_141590();

    uint64_t v67 = v102;
    if (v66)
    {
      if (qword_17B158 != -1) {
        swift_once();
      }
      uint64_t v69 = v0[29];
      uint64_t v68 = v0[30];
      uint64_t v70 = v0[28];
      uint64_t v71 = sub_140500();
      uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
      v72(v68, 1, 1, v71);
      uint64_t v73 = v68 + *(int *)(v69 + 20);
      v72(v73, 1, 1, v71);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v72(v70, 0, 1, v71);
      sub_2D248(v70, v73);
      swift_bridgeObjectRetain();
      sub_1404D0();
      v72(v70, 0, 1, v71);
      sub_2D248(v70, v68);
      uint64_t v74 = sub_134D40();
      v0[69] = v74;
      uint64_t v104 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
           + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v75 = (void *)swift_task_alloc();
      v0[70] = v75;
      *uint64_t v75 = v0;
      v75[1] = sub_139F64;
      unint64_t v27 = 0x800000000014AE70;
      unint64_t v29 = 0xD00000000000001BLL;
      uint64_t v28 = (void *)v74;
      goto LABEL_18;
    }
  }
  else
  {

    uint64_t v67 = v102;
  }
  if (qword_17B158 != -1) {
    swift_once();
  }
  uint64_t v99 = qword_180E88;
  uint64_t v103 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_180BB8 + dword_180BB8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v100 = v61;
  uint64_t v101 = (void *)swift_task_alloc();
  v0[72] = v101;
  *uint64_t v101 = v0;
  v101[1] = sub_E49B4;
  return v103(v99, v100, v67, v50, v105, v56);
}

uint64_t sub_139F64(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  v3[16] = v2;
  v3[17] = a1;
  v3[18] = v1;
  v3[71] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_13A170;
  }
  else {
    uint64_t v4 = sub_13A0A0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_13A0A0()
{
  sub_13ACA8(v0[30]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[74] = v0[17];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[75] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_E4D74;
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[40];
  uint64_t v5 = v0[20];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_13A170()
{
  uint64_t v1 = (void *)v0[54];
  uint64_t v2 = v0[52];
  uint64_t v11 = v0[51];
  uint64_t v12 = v0[53];
  uint64_t v3 = v0[44];
  uint64_t v10 = v0[45];
  uint64_t v4 = v0[43];
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[40];
  uint64_t v7 = v0[38];
  sub_13ACA8(v0[30]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_13A34C()
{
  *(void *)(*(void *)v1 + 624) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_E5214;
  }
  else {
    uint64_t v2 = sub_13A460;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_13A460()
{
  (*(void (**)(void, void, void))(v0[24] + 32))(v0[27], v0[26], v0[23]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[83] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_E5740;
  return v3(5);
}

uint64_t sub_13A51C()
{
  *(void *)(*(void *)v1 + 656) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_E5594;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_13A644;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_13A644()
{
  (*(void (**)(void, void, void))(v0[24] + 32))(v0[27], v0[25], v0[23]);
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_17DDE8 + dword_17DDE8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[83] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_E5740;
  return v3(5);
}

uint64_t sub_13A708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_13A7B8;
  return sub_1384A8(a1, a2, a3);
}

uint64_t sub_13A7B8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_13A8EC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_13A8EC()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_13A9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_13AA5C;
  return sub_138D50(a1, a2, a3);
}

uint64_t sub_13AA5C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_13AB90, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_13AB90()
{
  v0[3] = v0[5];
  sub_5830(&qword_17BFD0);
  sub_140830();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_13AC54()
{
  unint64_t result = qword_180D50[0];
  if (!qword_180D50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_180D50);
  }
  return result;
}

uint64_t sub_13ACA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PauseTimerPromptConfirmAllParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *_s24UnsupportedValueStrategyVMa_0()
{
  return &_s24UnsupportedValueStrategyVN_0;
}

uint64_t sub_13AD14()
{
  uint64_t v0 = sub_141170();
  sub_2D2B0(v0, qword_180DA8);
  sub_33D8(v0, (uint64_t)qword_180DA8);
  return sub_140E60();
}

uint64_t sub_13AD60(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  sub_140590();
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_141170();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_140680();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = sub_1406A0();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_5830(&qword_17DD00);
  v2[16] = swift_task_alloc();
  uint64_t v6 = sub_140DB0();
  v2[17] = v6;
  v2[18] = *(void *)(v6 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v7 = sub_13EFF0();
  v2[21] = v7;
  v2[22] = *(void *)(v7 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  uint64_t v8 = sub_13ECE0();
  v2[27] = v8;
  v2[28] = *(void *)(v8 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  uint64_t v9 = sub_5830((uint64_t *)&unk_17CCE0);
  v2[33] = v9;
  v2[34] = *(void *)(v9 - 8);
  v2[35] = swift_task_alloc();
  return _swift_task_switch(sub_13B118, 0, 0);
}

uint64_t sub_13B118()
{
  if (qword_17B448 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_33D8(v0[6], (uint64_t)qword_180DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  uint64_t v54 = v5;
  uint64_t v6 = sub_141160();
  os_log_type_t v7 = sub_141480();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[34];
  uint64_t v9 = v0[35];
  uint64_t v11 = v0[33];
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134217984;
    uint64_t v13 = (void *)sub_13F200();
    id v14 = [v13 unsupportedReason];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    v0[2] = v14;
    sub_1415C0();
    _os_log_impl(&dword_0, v6, v7, "CreateTimer.UnsupportedValueStrategy.makeUnsupportedValueOutput() called with unsupportedReason: %ld", v12, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[35], v0[33]);
  }

  uint64_t v15 = v0[26];
  uint64_t v16 = v0[17];
  uint64_t v17 = v0[18];
  uint64_t v18 = v0[16];
  sub_13EC70();
  sub_140420();
  swift_allocObject();
  sub_140410();
  id v19 = (void *)sub_13F1F0();
  sub_140C80();

  sub_140400();
  swift_release();
  uint64_t v20 = sub_1403F0();
  v0[36] = v20;
  swift_release();
  sub_11B020(v15);
  uint64_t v21 = (void *)sub_13F200();
  [v21 unsupportedReason];

  sub_140DA0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
  {
    uint64_t v23 = v0[10];
    uint64_t v22 = v0[11];
    uint64_t v25 = v0[8];
    uint64_t v24 = v0[9];
    uint64_t v26 = v0[6];
    uint64_t v27 = v0[7];
    sub_13E020(v0[16]);
    (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v22, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v54, v26);
    mach_absolute_time();
    sub_1406B0();
    if (qword_17B1A0 != -1) {
      swift_once();
    }
    uint64_t v28 = v0[4];
    uint64_t v29 = swift_task_alloc();
    v0[68] = v29;
    *(void *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v20;
    char v30 = (void *)swift_task_alloc();
    v0[69] = v30;
    *char v30 = v0;
    v30[1] = sub_13D004;
    return sub_58D08((uint64_t)sub_13E080, v29);
  }
  else
  {
    uint64_t v32 = v0[20];
    uint64_t v33 = v0[17];
    uint64_t v34 = v0[18];
    uint64_t v53 = v0[19];
    uint64_t v35 = v0[10];
    uint64_t v36 = v0[11];
    uint64_t v38 = v0[8];
    uint64_t v37 = v0[9];
    uint64_t v40 = v0[6];
    uint64_t v39 = v0[7];
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 32))(v32, v0[16], v33);
    (*(void (**)(uint64_t, void, uint64_t))(v35 + 104))(v36, enum case for SiriTimeMeasurement.LogDescription.dialogPatternResponseTime(_:), v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v54, v40);
    mach_absolute_time();
    sub_1406B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v53, v32, v33);
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v53, v33);
    if (v41 == enum case for TimerHandlerError.durationTooLong(_:))
    {
      type metadata accessor for CreateTimerCATPatternsExecutor(0);
      sub_140580();
      v0[38] = sub_140470();
      uint64_t v55 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
          + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
      uint64_t v42 = (void *)swift_task_alloc();
      v0[39] = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_13B88C;
      unint64_t v43 = 0x8000000000147C90;
      uint64_t v44 = _swiftEmptyArrayStorage;
      unint64_t v45 = 0xD000000000000020;
    }
    else
    {
      int v46 = v41;
      int v47 = enum case for TimerHandlerError.createSleepTimerNothingPlaying(_:);
      type metadata accessor for CreateTimerCATPatternsExecutor(0);
      sub_140580();
      v0[37] = sub_140470();
      if (v46 == v47)
      {
        uint64_t v55 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
        uint64_t v48 = (void *)swift_task_alloc();
        v0[48] = v48;
        *uint64_t v48 = v0;
        v48[1] = sub_13C030;
        unint64_t v43 = 0x8000000000148580;
        uint64_t v44 = _swiftEmptyArrayStorage;
        unint64_t v45 = 0xD00000000000001CLL;
      }
      else
      {
        uint64_t v49 = sub_140560();
        sub_1408B0();
        sub_1408A0();
        sub_140890();
        swift_release();
        uint64_t v50 = sub_140550();
        v0[57] = v50;
        sub_5830(&qword_17F3D0);
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 32) = 0x656369766564;
        *(void *)(v51 + 40) = 0xE600000000000000;
        *(void *)(v51 + 72) = v49;
        uint64_t v55 = (char *)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:)
            + async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:);
        v0[58] = v51;
        *(_OWORD *)(v51 + 16) = xmmword_142D50;
        *(void *)(v51 + 48) = v50;
        swift_retain();
        uint64_t v52 = (void *)swift_task_alloc();
        v0[59] = v52;
        *uint64_t v52 = v0;
        v52[1] = sub_13C7D0;
        unint64_t v43 = 0x8000000000147810;
        unint64_t v45 = 0xD000000000000011;
        uint64_t v44 = (void *)v51;
      }
    }
    return ((uint64_t (*)(unint64_t, unint64_t, void *))v55)(v45, v43, v44);
  }
}

uint64_t sub_13B88C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 320) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_13BC90;
  }
  else
  {
    *(void *)(v4 + 328) = a1;
    swift_release();
    uint64_t v5 = sub_13B9BC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_13B9BC()
{
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[42] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_13BA7C;
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[3];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_13BA7C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void **)(*(void *)v1 + 328);
  uint64_t v13 = *(void *)(*(void *)v1 + 248);
  uint64_t v4 = *(void *)(*(void *)v1 + 224);
  uint64_t v5 = *(void *)(*(void *)v1 + 216);
  uint64_t v6 = *(void *)(*(void *)v1 + 200);
  uint64_t v7 = *(void *)(*(void *)v1 + 176);
  uint64_t v8 = *(void *)(*(void *)v1 + 168);
  v2[43] = v0;
  swift_task_dealloc();

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v2[44] = v9;
  v2[45] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v6, v8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[46] = v10;
  v2[47] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v13, v5);
  if (v0) {
    uint64_t v11 = sub_13D4A0;
  }
  else {
    uint64_t v11 = sub_13BE74;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_13BC90()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[22];
  uint64_t v11 = v0[21];
  uint64_t v12 = v0[26];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  (*(void (**)(void, void))(v1 + 8))(v0[32], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_13BE74()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 256), *(void *)(v0 + 216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_13C030(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_13C434;
  }
  else
  {
    *(void *)(v4 + 400) = a1;
    swift_release();
    uint64_t v5 = sub_13C160;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_13C160()
{
  sub_13ECA0();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[51] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_13C220;
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[3];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_13C220()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void **)(*(void *)v1 + 400);
  uint64_t v13 = *(void *)(*(void *)v1 + 240);
  uint64_t v4 = *(void *)(*(void *)v1 + 224);
  uint64_t v5 = *(void *)(*(void *)v1 + 216);
  uint64_t v6 = *(void *)(*(void *)v1 + 192);
  uint64_t v7 = *(void *)(*(void *)v1 + 176);
  uint64_t v8 = *(void *)(*(void *)v1 + 168);
  v2[52] = v0;
  swift_task_dealloc();

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v2[53] = v9;
  v2[54] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v6, v8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[55] = v10;
  v2[56] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v13, v5);
  if (v0) {
    uint64_t v11 = sub_13D664;
  }
  else {
    uint64_t v11 = sub_13C614;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_13C434()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[22];
  uint64_t v11 = v0[21];
  uint64_t v12 = v0[26];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  (*(void (**)(void, void))(v1 + 8))(v0[32], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_13C614()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  (*(void (**)(void, void))(v0 + 440))(*(void *)(v0 + 256), *(void *)(v0 + 216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_13C7D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 480) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_13CC18;
  }
  else
  {
    *(void *)(v4 + 488) = a1;
    uint64_t v5 = sub_13C91C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_13C91C()
{
  swift_release();
  swift_release();
  sub_13EC80();
  sub_13EFE0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[62] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_13C9FC;
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[3];
  return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v5, v2, v3, v4, 0);
}

uint64_t sub_13C9FC()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void **)(*(void *)v1 + 488);
  uint64_t v13 = *(void *)(*(void *)v1 + 232);
  uint64_t v4 = *(void *)(*(void *)v1 + 224);
  uint64_t v5 = *(void *)(*(void *)v1 + 216);
  uint64_t v6 = *(void *)(*(void *)v1 + 184);
  uint64_t v7 = *(void *)(*(void *)v1 + 176);
  uint64_t v8 = *(void *)(*(void *)v1 + 168);
  v2[63] = v0;
  swift_task_dealloc();

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v2[64] = v9;
  v2[65] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v6, v8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[66] = v10;
  v2[67] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v13, v5);
  if (v0) {
    uint64_t v11 = sub_13D828;
  }
  else {
    uint64_t v11 = sub_13CE1C;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_13CC18()
{
  uint64_t v1 = v0[28];
  uint64_t v14 = v0[27];
  uint64_t v15 = v0[32];
  uint64_t v2 = v0[22];
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[26];
  uint64_t v11 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[13];
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v14);
  v8(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_13CE1C()
{
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[66];
  uint64_t v14 = v0[32];
  uint64_t v1 = v0[26];
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[64];
  uint64_t v13 = v0[27];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v3, v5);
  v12(v1, v2);
  v15(v14, v13);
  v9(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_13D004(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 560) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_13DA18, 0, 0);
  }
  else
  {
    v4[71] = a1;
    swift_task_dealloc();
    uint64_t v6 = (void *)swift_task_alloc();
    v4[72] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_13D1C4;
    uint64_t v7 = v4[32];
    uint64_t v8 = v4[26];
    uint64_t v9 = v4[14];
    uint64_t v10 = v4[3];
    return PatternExecutionResult.generateStandardPatternOutput(phase:contextUpdate:measure:dismissAssistant:)(v10, v7, v8, v9, 0);
  }
}

uint64_t sub_13D1C4()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 568);
  *(void *)(*(void *)v1 + 584) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_13DBD0;
  }
  else {
    uint64_t v3 = sub_13D2F0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_13D2F0()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v7 = v0[12];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(void, void))(v1 + 8))(v0[32], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_13D4A0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 256), *(void *)(v0 + 216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_13D664()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  (*(void (**)(void, void))(v0 + 440))(*(void *)(v0 + 256), *(void *)(v0 + 216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_13D828()
{
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[66];
  uint64_t v14 = v0[32];
  uint64_t v1 = v0[26];
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[64];
  uint64_t v13 = v0[27];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v3, v5);
  v12(v1, v2);
  v15(v14, v13);
  v9(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_13DA18()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v7 = v0[12];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(void, void))(v1 + 8))(v0[32], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_13DBD0()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v7 = v0[12];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(void, void))(v1 + 8))(v0[32], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_13DD88(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_5830(&qword_17BE78);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5830((uint64_t *)&unk_17CCE0);
  uint64_t v8 = (void *)sub_13F1F0();
  id v9 = [v8 label];

  if (v9)
  {
    sub_1414A0();

    uint64_t v10 = sub_140500();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_140500();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
  }
  uint64_t TimerPromptLabelDuplicateParameters = type metadata accessor for CreateTimerPromptLabelDuplicateParameters(0);
  sub_2D248((uint64_t)v7, (uint64_t)a1 + *(int *)(TimerPromptLabelDuplicateParameters + 20));
  swift_retain();
  uint64_t result = swift_release();
  *a1 = a3;
  return result;
}

uint64_t sub_13DEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_159A4;
  return sub_13AD60(a1, a2);
}

uint64_t sub_13DF90(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_13DFB0, 0, 0);
}

uint64_t sub_13DFB0()
{
  sub_5830((uint64_t *)&unk_17CCE0);
  uint64_t v1 = sub_13F1F0();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_13E020(uint64_t a1)
{
  uint64_t v2 = sub_5830(&qword_17DD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_13E080(void *a1)
{
  return sub_13DD88(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for DeleteTimerCATsSimple()
{
  uint64_t result = qword_180DE0;
  if (!qword_180DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_13E0D4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_13E114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_140590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_5830(&qword_17B520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_2D66C(a1, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v11 = sub_140510();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_2D6D4(a1);
  return v11;
}

uint64_t sub_13E298(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_140590();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  uint64_t v7 = sub_140520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v7;
}

uint64_t sub_13E3A8()
{
  return type metadata accessor for DeleteTimerCATsSimple();
}

uint64_t sub_13E3B0()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_13E3C0()
{
  return JSONDecoder.init()();
}

uint64_t sub_13E3D0()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_13E3E0()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_13E3F0()
{
  return JSONEncoder.init()();
}

uint64_t sub_13E400()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_13E410()
{
  return static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_13E420()
{
  return DateComponents.hour.getter();
}

uint64_t sub_13E430()
{
  return DateComponents.minute.getter();
}

uint64_t sub_13E440()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_13E450()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_13E460()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_13E470()
{
  return URL.absoluteString.getter();
}

void sub_13E480(NSURL *retstr@<X8>)
{
}

uint64_t sub_13E490()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_13E4A0()
{
  return URL.init(string:)();
}

uint64_t sub_13E4B0()
{
  return type metadata accessor for URL();
}

uint64_t sub_13E4C0(NSDataBase64EncodingOptions options)
{
  return Data.base64EncodedString(options:)(options)._countAndFlagsBits;
}

uint64_t sub_13E4D0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_13E4E0()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_13E4F0()
{
  return Date.init()();
}

uint64_t sub_13E500()
{
  return type metadata accessor for Date();
}

uint64_t sub_13E510()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_13E520()
{
  return UUID.uuidString.getter();
}

uint64_t sub_13E530()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_13E540()
{
  return UUID.init()();
}

uint64_t sub_13E550()
{
  return type metadata accessor for UUID();
}

uint64_t sub_13E560()
{
  return Locale.identifier.getter();
}

uint64_t sub_13E570()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t sub_13E580()
{
  return type metadata accessor for Locale.LanguageCode();
}

uint64_t sub_13E590()
{
  return Locale.Region.identifier.getter();
}

uint64_t sub_13E5A0()
{
  return type metadata accessor for Locale.Region();
}

uint64_t sub_13E5B0()
{
  return Locale.region.getter();
}

uint64_t sub_13E5C0()
{
  return Locale.Language.languageCode.getter();
}

uint64_t sub_13E5D0()
{
  return type metadata accessor for Locale.Language();
}

uint64_t sub_13E5E0()
{
  return Locale.language.getter();
}

uint64_t sub_13E5F0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_13E600()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t sub_13E610()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t sub_13E620()
{
  return Calendar.date(from:)();
}

uint64_t sub_13E630()
{
  return static Calendar.current.getter();
}

uint64_t sub_13E640()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_13E650()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_13E660()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t sub_13E670()
{
  return Loggable.wrappedValue.modify();
}

uint64_t sub_13E680()
{
  return Loggable.wrappedValue.getter();
}

uint64_t sub_13E690()
{
  return Loggable.wrappedValue.setter();
}

uint64_t sub_13E6A0()
{
  return type metadata accessor for Loggable();
}

uint64_t sub_13E700()
{
  return HandleIntentFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t sub_13E7F0()
{
  return type metadata accessor for AsyncConstructingFlow();
}

uint64_t sub_13E800()
{
  return AsyncConstructingFlow.init(_:)();
}

uint64_t sub_13E830()
{
  return NeedsConfirmationFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t sub_13E8E0()
{
  return type metadata accessor for AnyFlow();
}

uint64_t sub_13E8F0()
{
  return static PromptFlowProviderType.continuation<A>(_:)();
}

uint64_t sub_13E900()
{
  return PatternFlowProvider.init(outputPublisher:responseGenerator:)();
}

uint64_t sub_13E910()
{
  return type metadata accessor for PatternFlowProvider();
}

uint64_t sub_13E920()
{
  return PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)();
}

uint64_t sub_13E940()
{
  return static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)();
}

uint64_t sub_13E950()
{
  return static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:responseFlowProducer:)();
}

uint64_t sub_13E960()
{
  return static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)();
}

uint64_t sub_13E970()
{
  return static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)();
}

uint64_t sub_13E980()
{
  return static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)();
}

uint64_t sub_13E990()
{
  return static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A, B>(_:)();
}

uint64_t sub_13E9A0()
{
  return static RCHChildFlowFactoryHelper.makeConditionalConfirmIntentFlowProducer<A>(strategy:_:)();
}

uint64_t sub_13E9B0()
{
  return static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)();
}

uint64_t sub_13E9C0()
{
  return RCHChildFlowProducersAsync.needsValueFlowProducer.setter();
}

uint64_t sub_13E9D0()
{
  return RCHChildFlowProducersAsync.handleIntentFlowProducer.setter();
}

uint64_t sub_13E9E0()
{
  return RCHChildFlowProducersAsync.appResolutionFlowProducer.setter();
}

uint64_t sub_13E9F0()
{
  return RCHChildFlowProducersAsync.confirmIntentFlowProducer.setter();
}

uint64_t sub_13EA00()
{
  return RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter();
}

uint64_t sub_13EA10()
{
  return RCHChildFlowProducersAsync.needsConfirmationFlowProducer.setter();
}

uint64_t sub_13EA20()
{
  return RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter();
}

uint64_t sub_13EA30()
{
  return RCHChildFlowProducersAsync.init()();
}

uint64_t sub_13EA40()
{
  return RCHChildFlowFactory.init(producers:)();
}

uint64_t sub_13EA50()
{
  return ResultSetFlowProvider.makeNarrowingPromptFlowIfNeeded()();
}

uint64_t sub_13EA60()
{
  return Flow.eraseToAnyFlow()();
}

uint64_t sub_13EA70()
{
  return Flow.eraseToAnyValueFlow()();
}

uint64_t sub_13EA80()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t sub_13EA90()
{
  return Flow.flexibleExecutionSupport.getter();
}

uint64_t sub_13EAB0()
{
  return Flow<>.exitValue.getter();
}

uint64_t sub_13EAC0()
{
  return static FlowSearchResult.noFlow.getter();
}

uint64_t sub_13EAD0()
{
  return FlowSearchResult.flow.getter();
}

uint64_t sub_13EAE0()
{
  return static FlowSearchResult.flow(_:)();
}

uint64_t sub_13EAF0()
{
  return static FlowSearchResult.reform(transformer:exclude:)();
}

uint64_t sub_13EB00()
{
  return type metadata accessor for FlowSearchResult();
}

uint64_t sub_13EB10()
{
  return FlowPlugin.findFlowFor(parse:)();
}

uint64_t sub_13EB20()
{
  return FlowPlugin.makeFlowFrame(parse:)();
}

void sub_13EB30(Swift::String refId)
{
}

void sub_13EB40()
{
}

uint64_t sub_13EB50()
{
  return SiriKitIntentHandler.init<A>(app:intentHandler:intent:)();
}

uint64_t sub_13EB60()
{
  return type metadata accessor for SiriKitIntentHandler();
}

uint64_t sub_13EB70()
{
  return type metadata accessor for SiriKitReliabilityCodes();
}

uint64_t sub_13EB80()
{
  return static SiriKitIntentExecutionBehavior.remoteIntentExecution(targetDevice:)();
}

uint64_t sub_13EB90()
{
  return static SiriKitIntentExecutionBehavior.embeddedIntentHandler(intentHandler:)();
}

uint64_t sub_13EBA0()
{
  return type metadata accessor for SiriKitIntentExecutionBehavior();
}

uint64_t sub_13EBB0()
{
  return static AceService.currentAsync.getter();
}

uint64_t sub_13EBC0()
{
  return DeviceState.isPhoneOrPad.getter();
}

uint64_t sub_13EBD0()
{
  return dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
}

uint64_t sub_13EBE0()
{
  return dispatch thunk of DeviceState.isPad.getter();
}

uint64_t sub_13EBF0()
{
  return dispatch thunk of DeviceState.isPod.getter();
}

uint64_t sub_13EC00()
{
  return dispatch thunk of DeviceState.isPhone.getter();
}

uint64_t sub_13EC10()
{
  return dispatch thunk of DeviceState.isWatch.getter();
}

uint64_t sub_13EC20()
{
  return dispatch thunk of DeviceState.isAppleTV.getter();
}

uint64_t sub_13EC30()
{
  return dispatch thunk of DeviceState.isHomePod.getter();
}

uint64_t sub_13EC40()
{
  return DeviceState.asInvocationContext.getter();
}

uint64_t sub_13EC50()
{
  return static DialogPhase.completion.getter();
}

uint64_t sub_13EC60()
{
  return static DialogPhase.confirmation.getter();
}

uint64_t sub_13EC70()
{
  return static DialogPhase.clarification.getter();
}

uint64_t sub_13EC80()
{
  return static DialogPhase.error.getter();
}

uint64_t sub_13EC90()
{
  return static DialogPhase.status.getter();
}

uint64_t sub_13ECA0()
{
  return static DialogPhase.summary.getter();
}

uint64_t sub_13ECB0()
{
  return DialogPhase.aceValue.getter();
}

uint64_t sub_13ECC0()
{
  return static DialogPhase.canceled.getter();
}

uint64_t sub_13ECD0()
{
  return static DialogPhase.confirmed.getter();
}

uint64_t sub_13ECE0()
{
  return type metadata accessor for DialogPhase();
}

uint64_t sub_13ECF0()
{
  return DisplayHint.init(idValue:displayValue:)();
}

uint64_t sub_13ED00()
{
  return type metadata accessor for DisplayHint();
}

uint64_t sub_13ED10()
{
  return static EmptyOutput.instance.getter();
}

uint64_t sub_13ED20()
{
  return type metadata accessor for EmptyOutput();
}

uint64_t sub_13ED30()
{
  return ViewFactory.init(ttsEnabled:)();
}

uint64_t sub_13ED40()
{
  return dispatch thunk of ViewFactory.makeUtteranceViews(template:listenAfterSpeaking:canUseServerTTS:)();
}

uint64_t sub_13ED50()
{
  return type metadata accessor for ViewFactory();
}

uint64_t sub_13ED60()
{
  return type metadata accessor for ActivityType();
}

uint64_t sub_13ED70()
{
  return PluginAction.init(data:)();
}

uint64_t sub_13ED80()
{
  return type metadata accessor for PluginAction();
}

uint64_t sub_13ED90()
{
  return SemanticValue.init(string:label:nodeClass:)();
}

uint64_t sub_13EDA0()
{
  return type metadata accessor for SemanticValue();
}

uint64_t sub_13EDB0()
{
  return static ActionForInput.== infix(_:_:)();
}

uint64_t sub_13EDC0()
{
  return static ActionForInput.cancel()();
}

uint64_t sub_13EDD0()
{
  return static ActionForInput.handle()();
}

uint64_t sub_13EDE0()
{
  return static ActionForInput.ignore()();
}

uint64_t sub_13EDF0()
{
  return type metadata accessor for ActionForInput();
}

uint64_t sub_13EE00()
{
  return RCHFlowFactory.makeAppResolvingRCHFlow()();
}

uint64_t sub_13EE10()
{
  return RCHFlowFactory.makeRCHFlowWithResolvedApp(_:intent:)();
}

uint64_t sub_13EE20()
{
  return RCHFlowFactory.init(strategy:childFlowFactory:)();
}

uint64_t sub_13EE30()
{
  return TemplatingText.text.getter();
}

uint64_t sub_13EE40()
{
  return type metadata accessor for TemplatingText();
}

uint64_t sub_13EE50()
{
  return static AceOutputHelper.makeSummaryViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_13EE60()
{
  return static AceOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_13EE70()
{
  return static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)();
}

uint64_t sub_13EE80()
{
  return static AceOutputHelper.makeCancellationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:canUseServerTTS:flowActivity:)();
}

uint64_t sub_13EE90()
{
  return static AceOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_13EEA0()
{
  return static AceOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_13EEB0()
{
  return static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_13EEC0()
{
  return static ExecuteResponse.ongoing(requireInput:)();
}

uint64_t sub_13EED0()
{
  return static ExecuteResponse.ongoing<A>(next:childCompletion:)();
}

uint64_t sub_13EEE0()
{
  return static ExecuteResponse.ongoing(next:)();
}

uint64_t sub_13EEF0()
{
  return static ExecuteResponse.complete<A>(next:)();
}

uint64_t sub_13EF00()
{
  return static ExecuteResponse.complete()();
}

uint64_t sub_13EF10()
{
  return static ExecuteResponse.redirect(nextPluginAction:)();
}

uint64_t sub_13EF20()
{
  return NLContextUpdate.add(nluSystemDialogAct:)();
}

uint64_t sub_13EF30()
{
  return NLContextUpdate.set(undoDirectInvocation:)();
}

uint64_t sub_13EF40()
{
  return NLContextUpdate.rrEntities.setter();
}

uint64_t sub_13EF50()
{
  return NLContextUpdate.displayHints.setter();
}

uint64_t sub_13EF60()
{
  return NLContextUpdate.nluSystemDialogActs.setter();
}

uint64_t sub_13EF70()
{
  return NLContextUpdate.weightedPromptStrict.setter();
}

uint64_t sub_13EF80()
{
  return NLContextUpdate.applicationContextObjects.setter();
}

uint64_t sub_13EF90()
{
  return NLContextUpdate.weightedPromptAbortValues.setter();
}

uint64_t sub_13EFA0()
{
  return NLContextUpdate.weightedPromptTargetDomain.setter();
}

uint64_t sub_13EFB0()
{
  return NLContextUpdate.weightedPromptResponseOptions.setter();
}

uint64_t sub_13EFC0()
{
  return NLContextUpdate.weightedPromptResponseTargets.setter();
}

uint64_t sub_13EFD0()
{
  return NLContextUpdate.disambiguationPromptAbortValues.setter();
}

uint64_t sub_13EFE0()
{
  return NLContextUpdate.init()();
}

uint64_t sub_13EFF0()
{
  return type metadata accessor for NLContextUpdate();
}

uint64_t sub_13F000()
{
  return ResponseFactory.init()();
}

uint64_t sub_13F010()
{
  return type metadata accessor for ResponseFactory();
}

uint64_t sub_13F020()
{
  return TemplatingResult.templateIdentifier.getter();
}

uint64_t sub_13F030()
{
  return TemplatingResult.sections.getter();
}

uint64_t sub_13F040()
{
  return type metadata accessor for TemplatingResult();
}

uint64_t sub_13F050()
{
  return static InvocationFactory.makeConfirmAndRejectActions()();
}

uint64_t sub_13F060()
{
  return TemplatingSection.content.getter();
}

uint64_t sub_13F070()
{
  return type metadata accessor for TemplatingSection();
}

uint64_t sub_13F080()
{
  return IntentPromptAnswer.init(answeredValue:updatedIntent:)();
}

uint64_t sub_13F090()
{
  return ConfirmIntentAnswer.init(confirmationResponse:intent:)();
}

uint64_t sub_13F0A0()
{
  return ParameterIdentifier.name.getter();
}

uint64_t sub_13F0B0()
{
  return type metadata accessor for ParameterIdentifier();
}

uint64_t sub_13F0C0()
{
  return type metadata accessor for ConfirmationResponse();
}

uint64_t sub_13F0F0()
{
  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)();
}

uint64_t sub_13F100()
{
  return NamedParseTransformer.init(transformer:)();
}

uint64_t sub_13F110()
{
  return type metadata accessor for NamedParseTransformer();
}

uint64_t sub_13F120()
{
  return dispatch thunk of AceServiceInvokerAsync.currentStartRequestId()();
}

uint64_t sub_13F140()
{
  return IntentResolutionRecord.intentResponse.getter();
}

uint64_t sub_13F150()
{
  return IntentResolutionRecord.app.getter();
}

uint64_t sub_13F160()
{
  return IntentResolutionRecord.intent.getter();
}

uint64_t sub_13F170()
{
  return static OutputPublisherFactory.makeOutputPublisherAsync()();
}

uint64_t sub_13F180()
{
  return WindowingConfiguration.init(promptFlowProviderType:padding:windowSizeOverride:)();
}

uint64_t sub_13F190()
{
  return NeedsConfirmationAnswer.init(answeredValue:updatedIntent:)();
}

uint64_t sub_13F1A0()
{
  return static OutputGenerationManifest.defaultManifest(for:contextUpdate:sessionID:responseViewId:dismissAssistant:)();
}

uint64_t sub_13F1B0()
{
  return OutputGenerationManifest.init(dialogPhase:_:)();
}

uint64_t sub_13F1C0()
{
  return OutputGenerationManifest.nlContextUpdate.setter();
}

uint64_t sub_13F1D0()
{
  return OutputGenerationManifest.applicationSessionID.setter();
}

uint64_t sub_13F1E0()
{
  return type metadata accessor for OutputGenerationManifest();
}

uint64_t sub_13F1F0()
{
  return ParameterResolutionRecord.intent.getter();
}

uint64_t sub_13F200()
{
  return ParameterResolutionRecord.result.getter();
}

uint64_t sub_13F210()
{
  return ParameterResolutionRecord.parameter.getter();
}

uint64_t sub_13F220()
{
  return type metadata accessor for ParameterResolutionRecord();
}

uint64_t sub_13F230()
{
  return OrdinalDisplayHintsBuilder.init(referenceNode:)();
}

uint64_t sub_13F240()
{
  return OrdinalDisplayHintsBuilder.build(for:)();
}

uint64_t sub_13F250()
{
  return type metadata accessor for OrdinalDisplayHintsBuilder();
}

uint64_t sub_13F260()
{
  return WindowedPaginationParameters.isNextWindowLastWindow.getter();
}

uint64_t sub_13F270()
{
  return static WindowedPaginationParameters.makeNoPagination()();
}

uint64_t sub_13F280()
{
  return WindowedPaginationParameters.windowSize.getter();
}

uint64_t sub_13F290()
{
  return WindowedPaginationParameters.isConclusion.getter();
}

uint64_t sub_13F2A0()
{
  return WindowedPaginationParameters.isLastWindow.getter();
}

uint64_t sub_13F2B0()
{
  return WindowedPaginationParameters.isFirstWindow.getter();
}

uint64_t sub_13F2C0()
{
  return type metadata accessor for WindowedPaginationParameters();
}

uint64_t sub_13F2F0()
{
  return static WindowingDisambiguationInputType.unsupported()();
}

uint64_t sub_13F300()
{
  return static WindowingDisambiguationInputType.proceedToNextWindow()();
}

uint64_t sub_13F310()
{
  return static WindowingDisambiguationInputType.disambiguationChoice()();
}

uint64_t sub_13F320()
{
  return static WindowingDisambiguationInputType.cancel()();
}

uint64_t sub_13F330()
{
  return type metadata accessor for WindowingDisambiguationInputType();
}

uint64_t sub_13F340()
{
  return SimpleConfirmationResponseProvider.init(_:)();
}

uint64_t sub_13F370()
{
  return Input.parse.getter();
}

uint64_t sub_13F380()
{
  return type metadata accessor for Input();
}

uint64_t sub_13F390()
{
  return Parse.DirectInvocation.init(identifier:userData:)();
}

uint64_t sub_13F3A0()
{
  return Parse.DirectInvocation.identifier.getter();
}

uint64_t sub_13F3B0()
{
  return Parse.DirectInvocation.userData.getter();
}

uint64_t sub_13F3C0()
{
  return type metadata accessor for Parse.DirectInvocation();
}

uint64_t sub_13F3D0()
{
  return Parse.ServerConversion.siriKitIntent.getter();
}

uint64_t sub_13F3E0()
{
  return type metadata accessor for Parse();
}

uint64_t sub_13F3F0()
{
  return Output.generateFlow()();
}

uint64_t sub_13F400()
{
  return USOParse.userParse.getter();
}

uint64_t sub_13F410()
{
  return type metadata accessor for USOParse();
}

uint64_t sub_13F420()
{
  return type metadata accessor for AceOutput();
}

uint64_t sub_13F430()
{
  return type metadata accessor for Siri_Nlu_External_UsoGraph();
}

uint64_t sub_13F440()
{
  return Siri_Nlu_External_UserParse.firstUsoTask.getter();
}

uint64_t sub_13F450()
{
  return Siri_Nlu_External_UserParse.userDialogActs.getter();
}

uint64_t sub_13F460()
{
  return type metadata accessor for Siri_Nlu_External_UserParse();
}

uint64_t sub_13F470()
{
  return Siri_Nlu_External_UserDialogAct.hasUserStatedTask.getter();
}

uint64_t sub_13F480()
{
  return Siri_Nlu_External_UserDialogAct.getFirstTask()();
}

uint64_t sub_13F490()
{
  return Siri_Nlu_External_UserDialogAct.hasAccepted.getter();
}

uint64_t sub_13F4A0()
{
  return Siri_Nlu_External_UserDialogAct.hasRejected.getter();
}

uint64_t sub_13F4B0()
{
  return Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
}

uint64_t sub_13F4C0()
{
  return Siri_Nlu_External_UserDialogAct.userStatedTask.getter();
}

uint64_t sub_13F4D0()
{
  return Siri_Nlu_External_UserDialogAct.userStatedTask.setter();
}

uint64_t sub_13F4E0()
{
  return Siri_Nlu_External_UserDialogAct.hasWantedToProceed.getter();
}

uint64_t sub_13F4F0()
{
  return Siri_Nlu_External_UserDialogAct.init()();
}

uint64_t sub_13F500()
{
  return type metadata accessor for Siri_Nlu_External_UserDialogAct();
}

uint64_t sub_13F510()
{
  return Siri_Nlu_External_UserStatedTask.task.getter();
}

uint64_t sub_13F520()
{
  return Siri_Nlu_External_UserStatedTask.task.setter();
}

uint64_t sub_13F530()
{
  return Siri_Nlu_External_UserStatedTask.init()();
}

uint64_t sub_13F540()
{
  return type metadata accessor for Siri_Nlu_External_UserStatedTask();
}

uint64_t sub_13F550()
{
  return static Siri_Nlu_External_SystemDialogAct.buildDisambiguationDialogActFrom(_:includeBinaryPrompt:)();
}

uint64_t sub_13F560()
{
  return Siri_Nlu_External_SystemDialogAct.gaveOptions.setter();
}

uint64_t sub_13F570()
{
  return Siri_Nlu_External_SystemDialogAct.init()();
}

uint64_t sub_13F580()
{
  return type metadata accessor for Siri_Nlu_External_SystemDialogAct();
}

uint64_t sub_13F590()
{
  return Siri_Nlu_External_SystemGaveOptions.choices.setter();
}

uint64_t sub_13F5A0()
{
  return Siri_Nlu_External_SystemGaveOptions.init()();
}

uint64_t sub_13F5B0()
{
  return type metadata accessor for Siri_Nlu_External_SystemGaveOptions();
}

uint64_t sub_13F5C0()
{
  return static UsoGraphProtoReader.fromSwiftProtobuf(protobufGraph:vocabManager:)();
}

uint64_t sub_13F5D0()
{
  return static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
}

uint64_t sub_13F5E0()
{
  return dispatch thunk of Uso_VerbTemplate_NoVerb.userEntities.getter();
}

uint64_t sub_13F5F0()
{
  return dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
}

uint64_t sub_13F600()
{
  return dispatch thunk of UsoEntity_appleTimer_TimerAttribute.definedValue.getter();
}

uint64_t sub_13F610()
{
  return type metadata accessor for UsoEntity_appleTimer_TimerAttribute.DefinedValues();
}

uint64_t sub_13F620()
{
  return type metadata accessor for UsoEntity_appleTimer_TimerAttribute();
}

uint64_t sub_13F630()
{
  return dispatch thunk of UsoEntity_common_UserEntity.associatedUserEntities.getter();
}

uint64_t sub_13F640()
{
  return dispatch thunk of UsoEntity_common_UserEntity.definedValue.getter();
}

uint64_t sub_13F650()
{
  return type metadata accessor for UsoEntity_common_UserEntity.DefinedValues();
}

uint64_t sub_13F660()
{
  return dispatch thunk of UsoEntity_common_UserEntity.names.getter();
}

uint64_t sub_13F670()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.addUserEntities(value:)();
}

uint64_t sub_13F680()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.setEntity(value:)();
}

uint64_t sub_13F690()
{
  return dispatch thunk of UsoEntityBuilder_appleTimer_TimerAttribute.setDefinedValue(value:)();
}

uint64_t sub_13F6A0()
{
  return UsoEntityBuilder_appleTimer_TimerAttribute.init()();
}

uint64_t sub_13F6B0()
{
  return type metadata accessor for UsoEntityBuilder_appleTimer_TimerAttribute();
}

uint64_t sub_13F6C0()
{
  return dispatch thunk of UsoEntityBuilder_common_UserEntity.addAssociatedUserEntities(value:)();
}

uint64_t sub_13F6D0()
{
  return dispatch thunk of UsoEntityBuilder_common_UserEntity.setDefinedValue(value:)();
}

uint64_t sub_13F6E0()
{
  return UsoEntityBuilder_common_UserEntity.init()();
}

uint64_t sub_13F6F0()
{
  return type metadata accessor for UsoEntityBuilder_common_UserEntity();
}

uint64_t sub_13F700()
{
  return DomainOntologyNode.init(name:childNodes:isInEventTree:)();
}

uint64_t sub_13F710()
{
  return type metadata accessor for DomainOntologyNode();
}

uint64_t sub_13F720()
{
  return TerminalOntologyNode.init(name:multicardinal:)();
}

uint64_t sub_13F730()
{
  return type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph();
}

uint64_t sub_13F740()
{
  return CodeGenBase.entity.getter();
}

uint64_t sub_13F750()
{
  return static UsoPrintUtils.flattenUsoGraph(graph:printIdentifiers:)();
}

uint64_t sub_13F790()
{
  return TerminalElement.DateTimeValue.startDate.getter();
}

uint64_t sub_13F7A0()
{
  return TerminalElement.DateTimeValue.startTime.getter();
}

uint64_t sub_13F7B0()
{
  return TerminalElement.DateTimeValue.toDateTimeWithMeridiemSetByUser()();
}

uint64_t sub_13F7C0()
{
  return TerminalElement.DateTimeValue.duration.getter();
}

uint64_t sub_13F7D0()
{
  return TerminalElement.DateTimeValue.interval.getter();
}

uint64_t sub_13F7E0()
{
  return type metadata accessor for TerminalElement.DateTimeValue();
}

uint64_t sub_13F7F0()
{
  return TerminalElement.Date.qualifier.getter();
}

uint64_t sub_13F800()
{
  return type metadata accessor for TerminalElement.Date();
}

uint64_t sub_13F810()
{
  return TerminalElement.Time.toDateTimeWithMeridiemSetByUser()();
}

uint64_t sub_13F820()
{
  return TerminalElement.Time.minute.getter();
}

uint64_t sub_13F830()
{
  return TerminalElement.Time.hourOfDay.getter();
}

uint64_t sub_13F840()
{
  return type metadata accessor for TerminalElement.Time();
}

uint64_t sub_13F850()
{
  return TerminalElement.Duration.duration.getter();
}

uint64_t sub_13F860()
{
  return type metadata accessor for TerminalElement.Duration();
}

uint64_t sub_13F870()
{
  return TerminalElement.Interval.quantity.getter();
}

uint64_t sub_13F880()
{
  return type metadata accessor for TerminalElement.Interval();
}

uint64_t sub_13F890()
{
  return type metadata accessor for TerminalElement.Qualifier();
}

uint64_t sub_13F8A0()
{
  return static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
}

uint64_t sub_13F8B0()
{
  return dispatch thunk of CodeGenListEntry.entry.getter();
}

uint64_t sub_13F8C0()
{
  return dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter();
}

uint64_t sub_13F8D0()
{
  return dispatch thunk of CodeGenGlobalArgs.usoReferenceType.getter();
}

uint64_t sub_13F8E0()
{
  return type metadata accessor for UsoBuilderOptions();
}

uint64_t sub_13F8F0()
{
  return static UsoGraphUnitIndex.NAMES.getter();
}

uint64_t sub_13F900()
{
  return static UsoConversionUtils.convertGraphToTasks(graph:)();
}

uint64_t sub_13F910()
{
  return static UsoConversionUtils.convertUserDialogActToTasks(userDialogAct:)();
}

uint64_t sub_13F920()
{
  return UsoGraphVocabManager.init(withListOfNames:)();
}

uint64_t sub_13F930()
{
  return type metadata accessor for UsoGraphVocabManager();
}

uint64_t sub_13F940()
{
  return IntentNodeTraversable.value<A>(forNode:)();
}

uint64_t sub_13F950()
{
  return NonTerminalIntentNode.ontologyNodeName.getter();
}

uint64_t sub_13F960()
{
  return type metadata accessor for NonTerminalIntentNode();
}

uint64_t sub_13F970()
{
  return UsoEntity_common_Alarm.relativeOffsetInMinutes.getter();
}

uint64_t sub_13F980()
{
  return UsoEntity_common_Alarm.eligibleForTimerReformation.getter();
}

uint64_t sub_13F990()
{
  return dispatch thunk of UsoEntity_common_Alarm.endDateTime.getter();
}

uint64_t sub_13F9A0()
{
  return dispatch thunk of UsoEntity_common_Alarm.name.getter();
}

uint64_t sub_13F9B0()
{
  return dispatch thunk of UsoEntity_common_Timer.attributes.getter();
}

uint64_t sub_13F9C0()
{
  return dispatch thunk of UsoEntity_common_Timer.timeRemaining.getter();
}

uint64_t sub_13F9D0()
{
  return dispatch thunk of UsoEntity_common_Timer.totalDuration.getter();
}

uint64_t sub_13F9E0()
{
  return dispatch thunk of UsoEntity_common_Timer.name.getter();
}

uint64_t sub_13F9F0()
{
  return dispatch thunk of UsoEntity_common_Timer.endTime.getter();
}

uint64_t sub_13FA00()
{
  return type metadata accessor for UsoEntity_common_Timer();
}

uint64_t sub_13FA10()
{
  return dispatch thunk of Uso_VerbTemplate_Target.userEntities.getter();
}

uint64_t sub_13FA20()
{
  return dispatch thunk of Uso_VerbTemplate_Target.target.getter();
}

uint64_t sub_13FA30()
{
  return static UsoTask_CodegenConverter.convert(task:)();
}

uint64_t sub_13FA40()
{
  return static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)();
}

uint64_t sub_13FA50()
{
  return static UsoBuilderConversionUtils.convertEntityToGraph(entity:)();
}

uint64_t sub_13FA60()
{
  return UsoEntity_common_DateTime.toDateTimeWithMeridiemSetByUser()();
}

uint64_t sub_13FA70()
{
  return dispatch thunk of UsoEntity_common_DateTime.offsetValue.getter();
}

uint64_t sub_13FA80()
{
  return dispatch thunk of UsoEntity_common_DateTime.definedValue.getter();
}

uint64_t sub_13FA90()
{
  return type metadata accessor for UsoEntity_common_DateTime.DefinedValues();
}

uint64_t sub_13FAA0()
{
  return type metadata accessor for UsoEntity_common_DateTime();
}

uint64_t sub_13FAB0()
{
  return UsoEntity_common_Duration.valueInSeconds.getter();
}

uint64_t sub_13FAC0()
{
  return dispatch thunk of UsoEntity_common_Duration.components.getter();
}

uint64_t sub_13FAD0()
{
  return type metadata accessor for UsoEntity_common_Duration.DefinedValues();
}

uint64_t sub_13FAE0()
{
  return type metadata accessor for UsoEntity_common_TimeUnit.DefinedValues();
}

uint64_t sub_13FAF0()
{
  return type metadata accessor for UsoTask_open_uso_NoEntity();
}

uint64_t sub_13FB00()
{
  return type metadata accessor for UsoTask_read_uso_NoEntity();
}

uint64_t sub_13FB10()
{
  return type metadata accessor for UsoTask_stop_common_Timer();
}

uint64_t sub_13FB20()
{
  return type metadata accessor for UsoTask_stop_uso_NoEntity();
}

uint64_t sub_13FB30()
{
  return dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoQuantifier(value:)();
}

uint64_t sub_13FB40()
{
  return static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
}

uint64_t sub_13FB50()
{
  return type metadata accessor for UsoTask_close_uso_NoEntity();
}

uint64_t sub_13FB60()
{
  return type metadata accessor for UsoTask_pause_common_Timer();
}

uint64_t sub_13FB70()
{
  return type metadata accessor for UsoTask_pause_uso_NoEntity();
}

uint64_t sub_13FB80()
{
  return type metadata accessor for UsoTask_reset_common_Timer();
}

uint64_t sub_13FB90()
{
  return type metadata accessor for UsoTask_start_common_Timer();
}

uint64_t sub_13FBA0()
{
  return type metadata accessor for UsoTask_start_uso_NoEntity();
}

uint64_t sub_13FBB0()
{
  return dispatch thunk of Uso_VerbTemplate_Reference.userEntities.getter();
}

uint64_t sub_13FBC0()
{
  return dispatch thunk of Uso_VerbTemplate_Reference.reference.getter();
}

uint64_t sub_13FBD0()
{
  return dispatch thunk of UsoEntity_common_Quantifier.definedValue.getter();
}

uint64_t sub_13FBE0()
{
  return type metadata accessor for UsoEntity_common_Quantifier.DefinedValues();
}

uint64_t sub_13FBF0()
{
  return type metadata accessor for UsoTask_create_common_Alarm();
}

uint64_t sub_13FC00()
{
  return type metadata accessor for UsoTask_create_common_Timer();
}

uint64_t sub_13FC10()
{
  return type metadata accessor for UsoTask_delete_common_Timer();
}

uint64_t sub_13FC20()
{
  return type metadata accessor for UsoTask_delete_uso_NoEntity();
}

uint64_t sub_13FC30()
{
  return type metadata accessor for UsoTask_noVerb_common_Alarm();
}

uint64_t sub_13FC40()
{
  return type metadata accessor for UsoTask_noVerb_common_Timer();
}

uint64_t sub_13FC50()
{
  return type metadata accessor for UsoTask_noVerb_uso_NoEntity();
}

uint64_t sub_13FC60()
{
  return type metadata accessor for UsoTask_repeat_uso_NoEntity();
}

uint64_t sub_13FC70()
{
  return type metadata accessor for UsoTask_resume_common_Timer();
}

uint64_t sub_13FC80()
{
  return type metadata accessor for UsoTask_resume_uso_NoEntity();
}

uint64_t sub_13FC90()
{
  return type metadata accessor for UsoTask_update_common_Timer();
}

uint64_t sub_13FCA0()
{
  return type metadata accessor for UsoTask_update_uso_NoEntity();
}

uint64_t sub_13FCB0()
{
  return type metadata accessor for UsoTask_request_common_Timer();
}

uint64_t sub_13FCC0()
{
  return type metadata accessor for UsoTask_restart_uso_NoEntity();
}

uint64_t sub_13FCD0()
{
  return dispatch thunk of UsoEntityBuilder_common_Timer.addAttributes(value:)();
}

uint64_t sub_13FCE0()
{
  return dispatch thunk of UsoEntityBuilder_common_Timer.setTimeRemaining(value:)();
}

uint64_t sub_13FCF0()
{
  return dispatch thunk of UsoEntityBuilder_common_Timer.setTotalDuration(value:)();
}

uint64_t sub_13FD00()
{
  return dispatch thunk of UsoEntityBuilder_common_Timer.setName(value:)();
}

uint64_t sub_13FD10()
{
  return UsoEntityBuilder_common_Timer.init()();
}

uint64_t sub_13FD20()
{
  return type metadata accessor for UsoEntityBuilder_common_Timer();
}

uint64_t sub_13FD30()
{
  return dispatch thunk of UsoEntity_common_EventTrigger.dateTimeRangeTrigger.getter();
}

uint64_t sub_13FD40()
{
  return dispatch thunk of UsoEntity_common_EventTrigger.dateTimeTrigger.getter();
}

uint64_t sub_13FD50()
{
  return type metadata accessor for UsoTask_enable_common_Setting();
}

uint64_t sub_13FD60()
{
  return type metadata accessor for UsoTask_noVerb_common_Setting();
}

uint64_t sub_13FD70()
{
  return type metadata accessor for UsoTask_stop_common_MediaItem();
}

uint64_t sub_13FD80()
{
  return dispatch thunk of UsoEntity_common_DateTimeRange.at.getter();
}

uint64_t sub_13FD90()
{
  return dispatch thunk of UsoEntity_common_DateTimeRange.start.getter();
}

uint64_t sub_13FDA0()
{
  return dispatch thunk of UsoEntity_common_DateTimeRange.duration.getter();
}

uint64_t sub_13FDB0()
{
  return dispatch thunk of UsoEntity_common_ReferenceType.definedValue.getter();
}

uint64_t sub_13FDC0()
{
  return type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues();
}

uint64_t sub_13FDD0()
{
  return type metadata accessor for UsoTask_disable_common_Setting();
}

uint64_t sub_13FDE0()
{
  return type metadata accessor for UsoTask_summarise_common_Timer();
}

uint64_t sub_13FDF0()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)();
}

uint64_t sub_13FE00()
{
  return dispatch thunk of UsoEntityBuilder_common_Integer.setIntegerValue(value:)();
}

uint64_t sub_13FE10()
{
  return UsoEntityBuilder_common_Integer.init()();
}

uint64_t sub_13FE20()
{
  return type metadata accessor for UsoEntityBuilder_common_Integer();
}

uint64_t sub_13FE30()
{
  return UsoEntityBuilder_common_Setting.init()();
}

uint64_t sub_13FE40()
{
  return type metadata accessor for UsoEntityBuilder_common_Setting();
}

uint64_t sub_13FE70()
{
  return dispatch thunk of UsoEntityBuilder_common_Duration.addComponents(value:)();
}

uint64_t sub_13FE80()
{
  return dispatch thunk of UsoEntityBuilder_common_Duration.setDefinedValue(value:)();
}

uint64_t sub_13FE90()
{
  return UsoEntityBuilder_common_Duration.init()();
}

uint64_t sub_13FEA0()
{
  return type metadata accessor for UsoEntityBuilder_common_Duration();
}

uint64_t sub_13FEB0()
{
  return dispatch thunk of UsoEntityBuilder_common_TimeUnit.setDefinedValue(value:)();
}

uint64_t sub_13FEC0()
{
  return UsoEntityBuilder_common_TimeUnit.init()();
}

uint64_t sub_13FED0()
{
  return type metadata accessor for UsoEntityBuilder_common_TimeUnit();
}

uint64_t sub_13FEE0()
{
  return UsoTaskBuilder_stop_common_Timer.init()();
}

uint64_t sub_13FEF0()
{
  return type metadata accessor for UsoTaskBuilder_stop_common_Timer();
}

uint64_t sub_13FF00()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceSelect.userEntities.getter();
}

uint64_t sub_13FF10()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceSelect.select.getter();
}

uint64_t sub_13FF20()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceSelect.reference.getter();
}

uint64_t sub_13FF30()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTarget.userEntities.getter();
}

uint64_t sub_13FF40()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter();
}

uint64_t sub_13FF50()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTarget.reference.getter();
}

uint64_t sub_13FF60()
{
  return UsoTaskBuilder_pause_common_Timer.init()();
}

uint64_t sub_13FF70()
{
  return type metadata accessor for UsoTaskBuilder_pause_common_Timer();
}

uint64_t sub_13FF80()
{
  return UsoTaskBuilder_reset_common_Timer.init()();
}

uint64_t sub_13FF90()
{
  return type metadata accessor for UsoTaskBuilder_reset_common_Timer();
}

uint64_t sub_13FFA0()
{
  return UsoTaskBuilder_start_common_Timer.init()();
}

uint64_t sub_13FFB0()
{
  return type metadata accessor for UsoTaskBuilder_start_common_Timer();
}

uint64_t sub_13FFC0()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_Reference.setReference(value:)();
}

uint64_t sub_13FFD0()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceControl.trigger.getter();
}

uint64_t sub_13FFE0()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter();
}

uint64_t sub_13FFF0()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTrigger.userEntities.getter();
}

uint64_t sub_140000()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTrigger.trigger.getter();
}

uint64_t sub_140010()
{
  return dispatch thunk of UsoEntityBuilder_common_Quantifier.setDefinedValue(value:)();
}

uint64_t sub_140020()
{
  return UsoEntityBuilder_common_Quantifier.init()();
}

uint64_t sub_140030()
{
  return type metadata accessor for UsoEntityBuilder_common_Quantifier();
}

uint64_t sub_140040()
{
  return UsoEntity_common_DurationComponent.valueInSeconds.getter();
}

uint64_t sub_140050()
{
  return UsoTaskBuilder_create_common_Timer.init()();
}

uint64_t sub_140060()
{
  return type metadata accessor for UsoTaskBuilder_create_common_Timer();
}

uint64_t sub_140070()
{
  return UsoTaskBuilder_delete_common_Timer.init()();
}

uint64_t sub_140080()
{
  return type metadata accessor for UsoTaskBuilder_delete_common_Timer();
}

uint64_t sub_140090()
{
  return UsoTaskBuilder_noVerb_common_Timer.init()();
}

uint64_t sub_1400A0()
{
  return type metadata accessor for UsoTaskBuilder_noVerb_common_Timer();
}

uint64_t sub_1400B0()
{
  return UsoTaskBuilder_resume_common_Timer.init()();
}

uint64_t sub_1400C0()
{
  return type metadata accessor for UsoTaskBuilder_resume_common_Timer();
}

uint64_t sub_1400D0()
{
  return UsoTaskBuilder_update_common_Timer.init()();
}

uint64_t sub_1400E0()
{
  return type metadata accessor for UsoTaskBuilder_update_common_Timer();
}

uint64_t sub_1400F0()
{
  return UsoTaskBuilder_request_common_Timer.init()();
}

uint64_t sub_140100()
{
  return type metadata accessor for UsoTaskBuilder_request_common_Timer();
}

uint64_t sub_140110()
{
  return type metadata accessor for UsoTask_checkExistence_common_Timer();
}

uint64_t sub_140120()
{
  return UsoTaskBuilder_enable_common_Setting.init()();
}

uint64_t sub_140130()
{
  return type metadata accessor for UsoTaskBuilder_enable_common_Setting();
}

uint64_t sub_140140()
{
  return UsoTaskBuilder_noVerb_common_Setting.init()();
}

uint64_t sub_140150()
{
  return type metadata accessor for UsoTaskBuilder_noVerb_common_Setting();
}

uint64_t sub_140160()
{
  return UsoTaskBuilder_disable_common_Setting.init()();
}

uint64_t sub_140170()
{
  return type metadata accessor for UsoTaskBuilder_disable_common_Setting();
}

uint64_t sub_140180()
{
  return UsoTaskBuilder_summarise_common_Timer.init()();
}

uint64_t sub_140190()
{
  return type metadata accessor for UsoTaskBuilder_summarise_common_Timer();
}

uint64_t sub_1401A0()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_ReferenceSelect.setReference(value:)();
}

uint64_t sub_1401B0()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_ReferenceTarget.setReference(value:)();
}

uint64_t sub_1401C0()
{
  return dispatch thunk of UsoEntityBuilder_common_DurationComponent.setUnit(value:)();
}

uint64_t sub_1401D0()
{
  return dispatch thunk of UsoEntityBuilder_common_DurationComponent.setValue(value:)();
}

uint64_t sub_1401E0()
{
  return UsoEntityBuilder_common_DurationComponent.init()();
}

uint64_t sub_1401F0()
{
  return type metadata accessor for UsoEntityBuilder_common_DurationComponent();
}

uint64_t sub_140200()
{
  return UsoTaskBuilder_checkExistence_common_Timer.init()();
}

uint64_t sub_140210()
{
  return type metadata accessor for UsoTaskBuilder_checkExistence_common_Timer();
}

uint64_t sub_140220()
{
  return Graph.protobufGraphSiriNl(vocabManager:)();
}

uint64_t sub_140230()
{
  return UsoTask.alarmEntity.getter();
}

uint64_t sub_140240()
{
  return UsoTask.verbString.getter();
}

uint64_t sub_140250()
{
  return UsoTask.baseEntityAsString.getter();
}

uint64_t sub_140260()
{
  return type metadata accessor for UsoTask();
}

uint64_t sub_140270()
{
  return NLIntent.domainNode.getter();
}

uint64_t sub_140280()
{
  return type metadata accessor for NLIntent();
}

uint64_t sub_140290()
{
  return type metadata accessor for UsoEntity();
}

uint64_t sub_1402A0()
{
  return DateTime.asDate()();
}

unint64_t sub_1402B0(Swift::Bool shouldUseInferredMeridiem, Swift::Bool insertToEndTime)
{
  return (unint64_t)DateTime.asTimePoint(shouldUseInferredMeridiem:insertToEndTime:)(shouldUseInferredMeridiem, insertToEndTime);
}

uint64_t sub_1402C0()
{
  return DateTime.dateComponentsIn24HourClock(shouldUseInferredMeridiem:)();
}

BOOL sub_1402D0()
{
  return DateTime.isValidForReformationFromTimer()();
}

uint64_t sub_1402E0()
{
  return type metadata accessor for DateTime();
}

uint64_t sub_1402F0()
{
  return SiriEnvironment.currentRequest.getter();
}

uint64_t sub_140300()
{
  return SiriEnvironment.currentDevice.getter();
}

uint64_t sub_140310()
{
  return static SiriEnvironment.forCurrentTask.getter();
}

uint64_t sub_140320()
{
  return static SiriEnvironment.default.getter();
}

uint64_t sub_140330()
{
  return type metadata accessor for SiriEnvironment();
}

uint64_t sub_140340()
{
  return static DeviceIdiom.== infix(_:_:)();
}

uint64_t sub_140350()
{
  return type metadata accessor for DeviceIdiom();
}

uint64_t sub_140360()
{
  return Transformer.init(transform:)();
}

uint64_t sub_140370()
{
  return static ResponseMode.displayOnly.getter();
}

uint64_t sub_140380()
{
  return static ResponseMode.== infix(_:_:)();
}

uint64_t sub_140390()
{
  return static ResponseMode.voiceOnly.getter();
}

uint64_t sub_1403A0()
{
  return type metadata accessor for ResponseMode();
}

uint64_t sub_1403B0()
{
  return dispatch thunk of CurrentDevice.siriLocale.getter();
}

uint64_t sub_1403C0()
{
  return dispatch thunk of DialogDuration.mockGlobals.setter();
}

uint64_t sub_1403D0()
{
  return dispatch thunk of DialogDuration.descriptivePeriod.getter();
}

uint64_t sub_1403E0()
{
  return DialogDuration.secs.getter();
}

uint64_t sub_1403F0()
{
  return dispatch thunk of DialogDuration.Builder.build()();
}

uint64_t sub_140400()
{
  return dispatch thunk of DialogDuration.Builder.withSecs(_:)();
}

uint64_t sub_140410()
{
  return DialogDuration.Builder.init()();
}

uint64_t sub_140420()
{
  return type metadata accessor for DialogDuration.Builder();
}

uint64_t sub_140430()
{
  return type metadata accessor for DialogDuration();
}

uint64_t sub_140440()
{
  return CATGlobals.__allocating_init()();
}

uint64_t sub_140450()
{
  return type metadata accessor for CATGlobals();
}

uint64_t sub_140460()
{
  return CATWrapper.init(templateDir:options:globals:)();
}

uint64_t sub_140470()
{
  return CATWrapper.__allocating_init(options:globals:)();
}

uint64_t sub_140480()
{
  return CATWrapper.deinit();
}

uint64_t sub_140490()
{
  return SirikitApp.init(app:)();
}

uint64_t sub_1404A0()
{
  return type metadata accessor for SirikitApp();
}

uint64_t sub_1404B0()
{
  return static CATExecutor.registerBundle(bundle:templateDir:)();
}

uint64_t sub_1404C0()
{
  return type metadata accessor for CATExecutor();
}

uint64_t sub_1404D0()
{
  return SpeakableString.init(serializedValue:)();
}

uint64_t sub_1404E0()
{
  return SpeakableString.init(print:speak:)();
}

uint64_t sub_1404F0()
{
  return SpeakableString.print.getter();
}

uint64_t sub_140500()
{
  return type metadata accessor for SpeakableString();
}

uint64_t sub_140510()
{
  return CATWrapperSimple.init(templateDir:options:globals:)();
}

uint64_t sub_140520()
{
  return CATWrapperSimple.init(useResponseMode:options:)();
}

uint64_t sub_140530()
{
  return CATWrapperSimple.__allocating_init(options:globals:)();
}

uint64_t sub_140540()
{
  return CATWrapperSimple.deinit();
}

uint64_t sub_140550()
{
  return SirikitDeviceState.__allocating_init(from:)();
}

uint64_t sub_140560()
{
  return type metadata accessor for SirikitDeviceState();
}

uint64_t sub_140570()
{
  return CATType.toDictionary.getter();
}

uint64_t sub_140580()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_140590()
{
  return type metadata accessor for CATOption();
}

uint64_t sub_1405A0()
{
  return static DateTimeInferenceUtils.inferDateTime(from:anchorDate:)();
}

uint64_t sub_1405B0()
{
  return static DateTimeInferenceUtils.dateComponents(forDateTime:)();
}

uint64_t sub_1405C0()
{
  return type metadata accessor for TipKitSiriTimeSource();
}

uint64_t sub_1405D0()
{
  return type metadata accessor for TipKitSiriTimeContext();
}

uint64_t sub_1405E0()
{
  return SiriReferenceResolutionResolver.hasReference(usoEntity:)();
}

uint64_t sub_1405F0()
{
  return SiriReferenceResolutionResolver.resolveReferenceEntity(referenceEntity:)();
}

uint64_t sub_140600()
{
  return static SiriReferenceResolutionResolver.shared.getter();
}

uint64_t sub_140610()
{
  return type metadata accessor for SiriReferenceResolutionResolver();
}

uint64_t sub_140620()
{
  return SiriTimeAppBundleId.rawValue.getter();
}

uint64_t sub_140630()
{
  return type metadata accessor for SiriTimeAppBundleId();
}

uint64_t sub_140640()
{
  return static SiriTimeEventSender.sendEvent(activityType:taskType:reason:attribute:description:)();
}

uint64_t sub_140650()
{
  return type metadata accessor for SiriTimeEventSender.ReasonDescription();
}

uint64_t sub_140660()
{
  return type metadata accessor for SiriTimeEventSender.TaskType();
}

uint64_t sub_140670()
{
  return type metadata accessor for SiriTimeEventSender.Attribute();
}

uint64_t sub_140680()
{
  return type metadata accessor for SiriTimeMeasurement.LogDescription();
}

void sub_140690()
{
}

uint64_t sub_1406A0()
{
  return type metadata accessor for SiriTimeMeasurement();
}

uint64_t sub_1406B0()
{
  return SiriTimeMeasurement.init(_:log:startTime:)();
}

BOOL sub_1406C0()
{
  return SiriTimeFeatureFlagsImpl.isMultiTimerEnabled()();
}

BOOL sub_1406D0()
{
  return SiriTimeFeatureFlagsImpl.isTimerSmartEnabled()();
}

BOOL sub_1406E0()
{
  return SiriTimeFeatureFlagsImpl.isCrossDeviceEnabled()();
}

BOOL sub_1406F0()
{
  return SiriTimeFeatureFlagsImpl.isSuggestionHintsEnabled()();
}

BOOL sub_140700()
{
  return SiriTimeFeatureFlagsImpl.isTimerBobcatLocaleExpansionEnabled()();
}

BOOL sub_140710()
{
  return SiriTimeFeatureFlagsImpl.isConfirmationsResponseFrameworkEnabled()();
}

uint64_t sub_140720()
{
  return static SiriTimeFeatureFlagsImpl.instance.getter();
}

uint64_t sub_140730()
{
  return type metadata accessor for SiriTimeFeatureFlagsImpl();
}

uint64_t sub_140740()
{
  return SiriTimeDeviceContextProvider.init(sharedContext:)();
}

uint64_t sub_140770()
{
  return type metadata accessor for SiriTimeDeviceContextProvider();
}

uint64_t sub_140780()
{
  return static SiriTimeLog.suggestions.getter();
}

uint64_t sub_140790()
{
  return PunchOutApp.toResponseFrameworkCommandAction()();
}

uint64_t sub_1407A0()
{
  return PunchOutApp.url.getter();
}

uint64_t sub_1407B0()
{
  return type metadata accessor for PunchOutApp();
}

uint64_t sub_1407C0()
{
  return type metadata accessor for DecideAction.PromptExpectation();
}

uint64_t sub_1407D0()
{
  return type metadata accessor for ErrorSubType();
}

uint64_t sub_1407E0()
{
  return AppInstallUtil.isAppInstalled.getter();
}

uint64_t sub_1407F0()
{
  return type metadata accessor for AppInstallUtil.Domain();
}

uint64_t sub_140800()
{
  return AppInstallUtil.init(domain:)();
}

uint64_t sub_140810()
{
  return type metadata accessor for AppInstallUtil();
}

uint64_t sub_140820()
{
  return static BarbaraWalters.stopThePresses(for:)();
}

uint64_t sub_140830()
{
  return static BarbaraWalters.logAndReturnError<A>(context:_:)();
}

uint64_t sub_140840()
{
  return static DialogActBuilder.buildPromptValueDialogActFrom(_:forDomain:)();
}

uint64_t sub_140850()
{
  return static DialogActBuilder.buildPromptConfirmationDialogActFrom(_:forDomain:)();
}

uint64_t sub_140860()
{
  return HALDeviceContext.isCommunal.getter();
}

uint64_t sub_140870()
{
  return HALDeviceContext.remoteDevice.getter();
}

uint64_t sub_140880()
{
  return HALDeviceContext.shouldDismissSilently.getter();
}

uint64_t sub_140890()
{
  return ApplicationContext.deviceState.getter();
}

uint64_t sub_1408A0()
{
  return static ApplicationContext.shared.getter();
}

uint64_t sub_1408B0()
{
  return type metadata accessor for ApplicationContext();
}

uint64_t sub_1408C0()
{
  return static DirectInvocationUtils.isQuickStopDirectInvocation(_:)();
}

uint64_t sub_1408D0()
{
  return static DirectInvocationUtils.siriKitConfirmationResponse(_:)();
}

uint64_t sub_1408E0()
{
  return static DirectInvocationUtils.Timer.makeReformedAlarmInvocation(hour:minute:label:)();
}

uint64_t sub_1408F0()
{
  return DirectInvocationUtils.Timer.UserInfoKey.rawValue.getter();
}

uint64_t sub_140900()
{
  return type metadata accessor for DirectInvocationUtils.Timer.UserInfoKey();
}

uint64_t sub_140910()
{
  return DirectInvocationUtils.Timer.URI.rawValue.getter();
}

uint64_t sub_140920()
{
  return type metadata accessor for DirectInvocationUtils.Timer.URI();
}

uint64_t sub_140930()
{
  return HALTimerDeviceContext.toDismissTimerIntent.getter();
}

uint64_t sub_140940()
{
  return HALTimerDeviceContext.firingTimers.getter();
}

uint64_t sub_140950()
{
  return HALTimerDeviceContext.remoteExecutionId.getter();
}

uint64_t sub_140960()
{
  return HALTimerDeviceContext.device.getter();
}

uint64_t sub_140970()
{
  return HALTimerDeviceContext.timers.getter();
}

uint64_t sub_140980()
{
  return type metadata accessor for HALTimerDeviceContext();
}

uint64_t sub_140990()
{
  return static ResponseDisambigUtils.windowingResponse(for:)();
}

uint64_t sub_1409A0()
{
  return static ResponseDisambigUtils.windowingResponse(for:)();
}

uint64_t sub_1409B0()
{
  return static ResponseDisambigUtils.calculateWindow<A>(windowItems:allItems:windowSize:)();
}

uint64_t sub_1409D0()
{
  return static TipKitDonationService.signalEventToTipKit(from:withContext:)();
}

uint64_t sub_1409E0()
{
  return type metadata accessor for UnhandledAbortSubtype();
}

uint64_t sub_1409F0()
{
  return type metadata accessor for DialogLayerErrorSubType();
}

uint64_t sub_140A00()
{
  return YesNoSearchWindowStrategy.init(manifest:responseGenerator:rejectionOutputProducer:cancellationOutputProducer:nlv3ActionForInput:nlv3ParseConfirmation:promptPatternExecutionProducer:)();
}

uint64_t sub_140A10()
{
  return type metadata accessor for YesNoSearchWindowStrategy();
}

uint64_t sub_140A30()
{
  return AppInstallDialogOutputUtil.init(domain:fallbackCAT:)();
}

uint64_t sub_140A40()
{
  return type metadata accessor for AppInstallDialogOutputUtil();
}

uint64_t sub_140A50()
{
  return UnsupportedAppNotInstalledFlow.init(domain:patternExecutor:legacyBuilder:)();
}

uint64_t sub_140A60()
{
  return type metadata accessor for UnsupportedAppNotInstalledFlow();
}

uint64_t sub_140A70()
{
  return dispatch thunk of UnsupportedAppPatternParameters.buttonPunchoutAction.getter();
}

uint64_t sub_140A80()
{
  return dispatch thunk of UnsupportedAppPatternParameters.device.getter();
}

uint64_t sub_140A90()
{
  return NoOpFlow.init()();
}

uint64_t sub_140AA0()
{
  return type metadata accessor for NoOpFlow();
}

uint64_t sub_140AB0()
{
  return type metadata accessor for ABCReport();
}

uint64_t sub_140AC0()
{
  return App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
}

uint64_t sub_140AD0()
{
  return type metadata accessor for App();
}

uint64_t sub_140AE0()
{
  return static SiriSuggestionsAPIClients.get()();
}

uint64_t sub_140AF0()
{
  return type metadata accessor for SiriSuggestionsAPIClients();
}

uint64_t sub_140B20()
{
  return SuggestionsIntentBuilder.init(intentName:)();
}

uint64_t sub_140B30()
{
  return dispatch thunk of SuggestionsIntentBuilder.verb(_:)();
}

uint64_t sub_140B40()
{
  return dispatch thunk of SuggestionsIntentBuilder.build()();
}

uint64_t sub_140B50()
{
  return dispatch thunk of SuggestionsIntentBuilder.parameter(name:value:)();
}

uint64_t sub_140B60()
{
  return type metadata accessor for SuggestionsIntentBuilder();
}

uint64_t sub_140B70()
{
  return type metadata accessor for IntentType();
}

uint64_t sub_140B80()
{
  return type metadata accessor for DomainOwner();
}

uint64_t sub_140B90()
{
  return DomainOwner.init(_:)();
}

uint64_t sub_140BA0()
{
  return static SharedContext.current.getter();
}

uint64_t sub_140BB0()
{
  return CurrentRequest.responseMode.getter();
}

uint64_t sub_140BC0()
{
  return type metadata accessor for SetTimerAttributeIntent();
}

uint64_t sub_140BD0()
{
  return dispatch thunk of SetTimerAttributeIntentResponse.code.getter();
}

uint64_t sub_140BE0()
{
  return type metadata accessor for SetTimerAttributeIntentResponse();
}

uint64_t sub_140BF0()
{
  return dispatch thunk of PauseTimerIntentResponse.code.getter();
}

uint64_t sub_140C00()
{
  return type metadata accessor for PauseTimerIntentResponse();
}

uint64_t sub_140C10()
{
  return type metadata accessor for PauseTimerIntent();
}

uint64_t sub_140C20()
{
  return dispatch thunk of ResetTimerIntentResponse.code.getter();
}

uint64_t sub_140C30()
{
  return type metadata accessor for ResetTimerIntentResponse();
}

uint64_t sub_140C40()
{
  return type metadata accessor for ResetTimerIntent();
}

uint64_t sub_140C50()
{
  return dispatch thunk of CreateTimerIntentResponse.code.getter();
}

uint64_t sub_140C60()
{
  return type metadata accessor for CreateTimerIntentResponse();
}

uint64_t sub_140C70()
{
  return CreateTimerIntentResponseCode.rawValue.getter();
}

uint64_t sub_140C80()
{
  return CreateTimerIntent.duration.getter();
}

uint64_t sub_140C90()
{
  return CreateTimerIntent.duration.setter();
}

uint64_t sub_140CA0()
{
  return type metadata accessor for CreateTimerIntent();
}

uint64_t sub_140CB0()
{
  return dispatch thunk of DeleteTimerIntentResponse.code.getter();
}

uint64_t sub_140CC0()
{
  return type metadata accessor for DeleteTimerIntentResponse();
}

uint64_t sub_140CD0()
{
  return type metadata accessor for DeleteTimerIntent();
}

uint64_t sub_140CE0()
{
  return dispatch thunk of ResumeTimerIntentResponse.code.getter();
}

uint64_t sub_140CF0()
{
  return type metadata accessor for ResumeTimerIntentResponse();
}

uint64_t sub_140D00()
{
  return type metadata accessor for ResumeTimerIntent();
}

uint64_t sub_140D10()
{
  return dispatch thunk of SearchTimerIntentResponse.code.getter();
}

uint64_t sub_140D20()
{
  return type metadata accessor for SearchTimerIntentResponse();
}

uint64_t sub_140D30()
{
  return SearchTimerIntentResponseCode.rawValue.getter();
}

uint64_t sub_140D40()
{
  return type metadata accessor for SearchTimerIntent();
}

uint64_t sub_140D50()
{
  return dispatch thunk of DismissTimerIntentResponse.code.getter();
}

uint64_t sub_140D60()
{
  return type metadata accessor for DismissTimerIntentResponse();
}

uint64_t sub_140D70()
{
  return DismissTimerIntentResponseCode.rawValue.getter();
}

uint64_t sub_140D80()
{
  return type metadata accessor for DismissTimerIntent();
}

uint64_t sub_140D90()
{
  return type metadata accessor for SiriDevice();
}

uint64_t sub_140DA0()
{
  return static TimerHandlerError.from(unsupportedReason:)();
}

uint64_t sub_140DB0()
{
  return type metadata accessor for TimerHandlerError();
}

uint64_t sub_140DC0()
{
  return static TimerDeviceSupport.supportsSleepTimers()();
}

uint64_t sub_140DD0()
{
  return type metadata accessor for TimerOperationError();
}

uint64_t sub_140DE0()
{
  return static TimerSessionManager.shared.getter();
}

uint64_t sub_140DF0()
{
  return type metadata accessor for TimerSessionManager();
}

uint64_t sub_140E00()
{
  return static TimerIntentHandlerRouter.getIntentHandler(intent:)();
}

uint64_t sub_140E10()
{
  return type metadata accessor for TimerGrouping();
}

uint64_t sub_140E20()
{
  return SiriRemoteTimerTarget.__allocating_init(deviceNames:deviceReferenceNames:)();
}

uint64_t sub_140E30()
{
  return type metadata accessor for SiriRemoteTimerTarget();
}

uint64_t sub_140E40()
{
  return static SiriTimeLog.timerPlugin.getter();
}

uint64_t sub_140E50()
{
  return static SiriTimeLog.timerExtensionOSLogObject.getter();
}

uint64_t sub_140E60()
{
  return static SiriTimeLog.timerFlow.getter();
}

uint64_t sub_140E70()
{
  return SiriTimer.__allocating_init(mtTimer:)();
}

uint64_t sub_140E80()
{
  return SiriTimer.merge(with:)();
}

uint64_t sub_140E90()
{
  return SiriTimer.matches(targetTimer:ignoreRemainingTime:)();
}

uint64_t sub_140EA0()
{
  return type metadata accessor for SiriTimer();
}

uint64_t sub_140EB0()
{
  return dispatch thunk of SiriTimerManagerIOS.stopCurrentTimer(completion:)();
}

uint64_t sub_140EC0()
{
  return dispatch thunk of SiriTimerManagerIOS.stopCurrentTimerSync()();
}

uint64_t sub_140ED0()
{
  return dispatch thunk of SiriTimerManagerIOS.pauseCurrentTimer(intent:completion:)();
}

uint64_t sub_140EE0()
{
  return dispatch thunk of SiriTimerManagerIOS.startCurrentTimer(intent:completion:)();
}

uint64_t sub_140EF0()
{
  return dispatch thunk of SiriTimerManagerIOS.getCurrentValidTimer()();
}

uint64_t sub_140F00()
{
  return dispatch thunk of SiriTimerManagerIOS.setTimerDurationAndStart(intent:completion:)();
}

uint64_t sub_140F20()
{
  return SiriTimerManagerImpl.init()();
}

uint64_t sub_140F30()
{
  return type metadata accessor for SiriTimerManagerImpl();
}

uint64_t sub_140F40()
{
  return SiriTimerType.toSpeakableString()();
}

uint64_t sub_140F50()
{
  return SiriTimerType.rawValue.getter();
}

uint64_t sub_140F60()
{
  return SiriTimerState.toSpeakableString()();
}

uint64_t sub_140F70()
{
  return SiriTimerState.rawValue.getter();
}

uint64_t sub_140F90()
{
  return IntentTargetable.knownHomePodCount.getter();
}

uint64_t sub_140FA0()
{
  return type metadata accessor for CrossDeviceCommandExecution.FailureReason();
}

uint64_t sub_140FB0()
{
  return type metadata accessor for CrossDeviceCommandExecution.Result();
}

uint64_t sub_140FC0()
{
  return type metadata accessor for CrossDeviceCommandExecution();
}

uint64_t sub_140FD0()
{
  return DeviceUnit.deviceName.getter();
}

uint64_t sub_140FE0()
{
  return DeviceUnit.dialogType.getter();
}

uint64_t sub_140FF0()
{
  return DeviceUnit.room.getter();
}

uint64_t sub_141000()
{
  return DeviceUnit.identifier.getter();
}

uint64_t sub_141010()
{
  return DeviceUnit.name.getter();
}

uint64_t sub_141020()
{
  return DeviceUnit.roomName.getter();
}

uint64_t sub_141030()
{
  return dispatch thunk of DeviceResolutionAnalyticsImpl.logCommandExecution(_:)();
}

uint64_t sub_141040()
{
  return static DeviceResolutionService.sharedAnalytics.getter();
}

uint64_t sub_141050()
{
  return type metadata accessor for DeviceResolutionService();
}

uint64_t sub_141060()
{
  return ExecutionInfo.init(executionId:action:quickStopActionResult:)();
}

uint64_t sub_141070()
{
  return type metadata accessor for ExecutionInfo.QuickStopActionResult();
}

uint64_t sub_141080()
{
  return type metadata accessor for ExecutionInfo.Action();
}

uint64_t sub_141090()
{
  return dispatch thunk of NLGDialogBuilder.identifier(_:)();
}

uint64_t sub_1410A0()
{
  return dispatch thunk of NLGDialogBuilder.text(_:)();
}

uint64_t sub_1410B0()
{
  return dispatch thunk of NLGDialogBuilder.build()();
}

uint64_t sub_1410C0()
{
  return NLGDialogBuilder.init()();
}

uint64_t sub_1410D0()
{
  return type metadata accessor for NLGDialogBuilder();
}

uint64_t sub_1410E0()
{
  return static NLGDialogScorers.createTFIDFScorer(query:localeIdentifier:stopWords:)();
}

uint64_t sub_1410F0()
{
  return dispatch thunk of NLGDialogSelector.select(from:)();
}

uint64_t sub_141100()
{
  return static NLGDialogSelectors.highestScoring(using:)();
}

uint64_t sub_141110()
{
  return static NLGUtteranceProvider.currentUtterance.getter();
}

uint64_t sub_141120()
{
  return dispatch thunk of NLGDialog.identifier.getter();
}

uint64_t sub_141130()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t sub_141140()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t sub_141150()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_141160()
{
  return Logger.logObject.getter();
}

uint64_t sub_141170()
{
  return type metadata accessor for Logger();
}

uint64_t sub_141180()
{
  return GroupIdentifier.init(id:seq:)();
}

uint64_t sub_141190()
{
  return type metadata accessor for GroupIdentifier();
}

uint64_t sub_1411A0()
{
  return dispatch thunk of GroupIdentifierGenerator.addGroupIdentifier()();
}

uint64_t sub_1411B0()
{
  return GroupIdentifierGenerator.init()();
}

uint64_t sub_1411C0()
{
  return type metadata accessor for GroupIdentifierGenerator();
}

uint64_t sub_1411D0()
{
  return RREntity.convertData<A>(to:)();
}

uint64_t sub_1411E0()
{
  return RREntity.init<A>(id:appBundleId:usoEntity:intentEntity:group:)();
}

uint64_t sub_1411F0()
{
  return RREntity.group.setter();
}

uint64_t sub_141200()
{
  return type metadata accessor for RREntity();
}

NSDictionary sub_141210()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_141220()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_141230()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_141240()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_141250()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_141260()
{
  return String.init<A>(describing:)();
}

uint64_t sub_141270()
{
  return String.toSpeakableString.getter();
}

uint64_t sub_141280()
{
  return String.labelCapitalization()()._countAndFlagsBits;
}

uint64_t sub_141290()
{
  return String.toINSpeakableString.getter();
}

uint64_t sub_1412A0()
{
  return String.hash(into:)();
}

void sub_1412B0(Swift::String a1)
{
}

Swift::Int sub_1412C0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1412D0()
{
  return Sequence.contains(where:)();
}

uint64_t sub_1412E0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1412F0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_141300()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_141310()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_141320()
{
  return Array.description.getter();
}

uint64_t sub_141330()
{
  return specialized Array._endMutation()();
}

uint64_t sub_141340()
{
  return Array<A>.firingDevices()();
}

uint64_t sub_141350()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_141360()
{
  return Array<A>.analyzeGrouping()();
}

uint64_t sub_141370()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_141380()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_141390()
{
  return type metadata accessor for Array();
}

NSNumber sub_1413A0()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_1413B0()
{
  return Bool.number.getter();
}

uint64_t sub_1413C0()
{
  return CheckedContinuation.resume(returning:)();
}

NSNumber sub_1413D0()
{
  return Double._bridgeToObjectiveC()();
}

uint64_t sub_1413E0()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_1413F0()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_141400()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_141410()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_141420()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_141430()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_141440()
{
  return INTimerType.toTimerType()();
}

uint64_t sub_141450()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_141460()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_141470()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_141480()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_141490()
{
  return SASTButtonItem.init(label:commands:)();
}

uint64_t sub_1414A0()
{
  return INSpeakableString.toSpeakableString.getter();
}

uint64_t sub_1414B0()
{
  return static USOSerializedGraph.fromProto(protoGraph:)();
}

uint64_t sub_1414C0()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_1414D0()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_141550()
{
  return INIntent.withIntentId.getter();
}

uint64_t sub_141560()
{
  return INIntent.withEndpointId.getter();
}

NSNumber sub_141570(Swift::Bool BOOLeanLiteral)
{
  return NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

NSNumber sub_141580(Swift::Int integerLiteral)
{
  return NSNumber.init(integerLiteral:)(integerLiteral);
}

uint64_t sub_141590()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1415A0()
{
  return AceObject.serializeToBase64()().value._countAndFlagsBits;
}

uint64_t sub_1415B0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1415C0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1415D0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1415E0()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_1415F0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_141600()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_141610()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_141620()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_141630()
{
  return __CocoaSet.Iterator.next()();
}

Swift::Int sub_141640(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_141650()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_141660()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_141670()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_141680(Swift::Int a1)
{
}

uint64_t sub_141690()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1416A0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1416B0()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1416C0()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1416D0()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_1416E0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1416F0()
{
  return _ArrayProtocol.filter(_:)();
}

uint64_t sub_141700()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_141710()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_141720(Swift::Int a1)
{
}

uint64_t sub_141730()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_141740()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_141750()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_141760()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_141770()
{
  return ContiguousArray.init()();
}

uint64_t sub_141780()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_141790()
{
  return ContinuousClock.init()();
}

uint64_t sub_1417A0()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t sub_1417B0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1417C0()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_1417D0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1417E0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1417F0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_141800()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_141810()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_141820(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_141830()
{
  return KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
}

uint64_t sub_141840()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_141850()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_141860()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_141870()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_141880()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_141890()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1418A0()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1418B0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1418C0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1418D0()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_1418E0()
{
  return KeyedDecodingContainer.decodeNil(forKey:)();
}

uint64_t sub_1418F0()
{
  return KeyedEncodingContainer.nestedUnkeyedContainer(forKey:)();
}

uint64_t sub_141900()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_141910()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_141920()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_141930()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_141940()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_141950()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_141960()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_141970()
{
  return KeyedEncodingContainer.encodeNil(forKey:)();
}

uint64_t sub_141980()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1419A0()
{
  return dispatch thunk of UnkeyedDecodingContainer.nestedContainer<A>(keyedBy:)();
}

uint64_t sub_1419B0()
{
  return dispatch thunk of UnkeyedDecodingContainer.nestedUnkeyedContainer()();
}

uint64_t sub_1419C0()
{
  return dispatch thunk of UnkeyedDecodingContainer.decodeIfPresent(_:)();
}

uint64_t sub_1419D0()
{
  return dispatch thunk of UnkeyedDecodingContainer.decodeIfPresent(_:)();
}

uint64_t sub_1419E0()
{
  return dispatch thunk of UnkeyedDecodingContainer.decodeIfPresent(_:)();
}

uint64_t sub_1419F0()
{
  return dispatch thunk of UnkeyedDecodingContainer.decodeIfPresent(_:)();
}

uint64_t sub_141A00()
{
  return dispatch thunk of UnkeyedDecodingContainer.isAtEnd.getter();
}

uint64_t sub_141A10()
{
  return dispatch thunk of UnkeyedDecodingContainer.decodeNil()();
}

uint64_t sub_141A20()
{
  return dispatch thunk of UnkeyedEncodingContainer.nestedContainer<A>(keyedBy:)();
}

uint64_t sub_141A30()
{
  return dispatch thunk of UnkeyedEncodingContainer.nestedUnkeyedContainer()();
}

uint64_t sub_141A40()
{
  return dispatch thunk of UnkeyedEncodingContainer.encode(_:)();
}

uint64_t sub_141A50()
{
  return dispatch thunk of UnkeyedEncodingContainer.encode(_:)();
}

uint64_t sub_141A60()
{
  return dispatch thunk of UnkeyedEncodingContainer.encode(_:)();
}

uint64_t sub_141A70()
{
  return dispatch thunk of UnkeyedEncodingContainer.encode(_:)();
}

uint64_t sub_141A80()
{
  return dispatch thunk of UnkeyedEncodingContainer.encodeNil()();
}

uint64_t sub_141AA0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_141AB0()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_141AC0()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_141AD0()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_141AE0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_141AF0()
{
  return Clock.measure(_:)();
}

uint64_t sub_141B00()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_141B10()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_141B20()
{
  return Error._code.getter();
}

uint64_t sub_141B30()
{
  return Error._domain.getter();
}

uint64_t sub_141B40()
{
  return Error._userInfo.getter();
}

uint64_t sub_141B50()
{
  return Hasher.init(_seed:)();
}

void sub_141B60(Swift::UInt a1)
{
}

Swift::Int sub_141B70()
{
  return Hasher._finalize()();
}

uint64_t sub_141B80()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_141B90()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_141BA0()
{
  return Duration.description.getter();
}

uint64_t sub_141BB0()
{
  return static Duration.< infix(_:_:)();
}

uint64_t sub_141BC0()
{
  return static Duration.+= infix(_:_:)();
}

uint64_t sub_141BD0()
{
  return static Duration.zero.getter();
}

uint64_t sub_141C00()
{
  return _typeName(_:qualified:)();
}

uint64_t AFDeviceSupportsEchoCancellation()
{
  return _AFDeviceSupportsEchoCancellation();
}

uint64_t MSVDeviceIsAppleTV()
{
  return _MSVDeviceIsAppleTV();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

void bzero(void *a1, size_t a2)
{
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return _swift_dynamicCastUnknownClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}