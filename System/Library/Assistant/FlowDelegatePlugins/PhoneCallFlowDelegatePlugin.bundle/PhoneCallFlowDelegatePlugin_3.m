void outlined bridged method (mbnn) of @objc SAAceConfirmationContext.reason.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;
  uint64_t vars8;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setReason:v4];
}

uint64_t type metadata completion function for IncomingCallNLContextProvider()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for IncomingCallNLContextProvider()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t type metadata accessor for INIntent()
{
  unint64_t result = lazy cache variable for type metadata for INIntent;
  if (!lazy cache variable for type metadata for INIntent)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for INIntent);
  }
  return result;
}

void OUTLINED_FUNCTION_3_57()
{
  uint64_t v1 = 0x2E65756C61562ELL;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_6_45()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t OUTLINED_FUNCTION_14_27(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return v1 - 176;
}

void *static Transformer<>.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:)(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for ContactGroupResolver();
  uint64_t v6 = OUTLINED_FUNCTION_0_45(v5, (uint64_t)&v88);
  uint64_t v77 = v7;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v76 = v8;
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = OUTLINED_FUNCTION_0_45(v9, (uint64_t)&v89);
  uint64_t v79 = v11;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_3_1();
  v78 = v12;
  id v13 = [objc_allocWithZone((Class)INSearchCallHistoryIntent) init];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v14 = v13;
  v81 = a1;
  v82 = v14;
  v80 = a3;
  if (PhoneCallNLIntent.isPlayVoiceMail()())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
    v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "#PhoneCallNLIntent->INSearchCallHistoryIntent transformer: creating INSearchCallHistoryIntent to return voicemail.", v18, 2u);
      OUTLINED_FUNCTION_6();
    }

    [v14 setCallTypes:16];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v19 = OUTLINED_FUNCTION_2_67();
    uint64_t v21 = v20(v19);
    if (v21)
    {
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        uint64_t v23 = 0;
        v24 = (unsigned __int8 *)(v21 + 32);
        OUTLINED_FUNCTION_3_58((uint64_t)&type metadata for Any);
        do
        {
          int v26 = *v24++;
          int v25 = v26;
          if (v26 == 6)
          {
            v23 |= 8uLL;
          }
          else
          {
            v27 = Logger.logObject.getter();
            os_log_type_t v28 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v27, v28))
            {
              uint64_t v29 = swift_slowAlloc();
              aBlock[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v29 = 136315138;
              unint64_t v30 = 0xE600000000000000;
              unint64_t v31 = 0x64657373696DLL;
              switch(v25)
              {
                case 1:
                  unint64_t v30 = 0xE300000000000000;
                  unint64_t v31 = 7824750;
                  break;
                case 2:
                  unint64_t v31 = 0x746E65636572;
                  break;
                case 3:
                  unint64_t v30 = 0xE700000000000000;
                  unint64_t v31 = OUTLINED_FUNCTION_10_30();
                  break;
                case 4:
                  unint64_t v30 = 0xE800000000000000;
                  unint64_t v31 = OUTLINED_FUNCTION_15_23();
                  break;
                case 5:
                  unint64_t v30 = 0xE800000000000000;
                  unint64_t v31 = OUTLINED_FUNCTION_37_12();
                  break;
                case 6:
                  __break(1u);
                  JUMPOUT(0x1B32C4);
                case 7:
                  unint64_t v30 = 0xE800000000000000;
                  unint64_t v31 = OUTLINED_FUNCTION_13_23();
                  break;
                case 8:
                  unint64_t v30 = 0xE700000000000000;
                  unint64_t v31 = OUTLINED_FUNCTION_18_21();
                  break;
                case 9:
                  unint64_t v30 = 0xE700000000000000;
                  unint64_t v31 = OUTLINED_FUNCTION_11_3();
                  break;
                case 10:
                  unint64_t v31 = 0x646C6F486E6FLL;
                  break;
                case 11:
                  unint64_t v31 = OUTLINED_FUNCTION_119();
                  unint64_t v30 = 0xE900000000000065;
                  break;
                case 12:
                  unint64_t v31 = OUTLINED_FUNCTION_17_19();
                  unint64_t v30 = 0xEC0000006C69616DLL;
                  break;
                case 13:
                  unint64_t v30 = v74 | 0x8000000000000000;
                  unint64_t v31 = 0xD000000000000014;
                  break;
                default:
                  break;
              }
              *(void *)(v29 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v30, aBlock);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v27, v28, "#PhoneCallNLIntent->INSearchCallHistoryIntent attribute: %s is not supported for play voicemail and will be ignored", (uint8_t *)v29, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_6();
            }
          }
          --v22;
        }
        while (v22);
      }
      else
      {
        uint64_t v23 = 0;
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v82, "setCallTypes:", (unint64_t)objc_msgSend(v82, "callTypes") | v23);
    }
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v32 = OUTLINED_FUNCTION_2_67();
    uint64_t v34 = v33(v32);
    if (v34)
    {
      uint64_t v35 = *(void *)(v34 + 16);
      uint64_t v36 = 0;
      if (v35)
      {
        v37 = (unsigned __int8 *)(v34 + 32);
        OUTLINED_FUNCTION_3_58((uint64_t)&type metadata for Any);
        v38 = &unk_583000;
        do
        {
          int v40 = *v37++;
          int v39 = v40;
          if (v40)
          {
            if (v39 == 6)
            {
              v36 |= 8uLL;
            }
            else
            {
              if (v38[466] != -1) {
                swift_once();
              }
              uint64_t v41 = type metadata accessor for Logger();
              __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
              v42 = Logger.logObject.getter();
              os_log_type_t v43 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v42, v43))
              {
                uint64_t v44 = swift_slowAlloc();
                aBlock[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v44 = 136315138;
                unint64_t v45 = 0xE300000000000000;
                unint64_t v46 = 7824750;
                switch(v39)
                {
                  case 2:
                    unint64_t v45 = 0xE600000000000000;
                    unint64_t v46 = 0x746E65636572;
                    break;
                  case 3:
                    unint64_t v45 = 0xE700000000000000;
                    unint64_t v46 = OUTLINED_FUNCTION_10_30();
                    break;
                  case 4:
                    unint64_t v45 = 0xE800000000000000;
                    unint64_t v46 = OUTLINED_FUNCTION_15_23();
                    break;
                  case 5:
                    unint64_t v45 = 0xE800000000000000;
                    unint64_t v46 = OUTLINED_FUNCTION_37_12();
                    break;
                  case 6:
                    unint64_t v45 = 0xE400000000000000;
                    unint64_t v46 = 1953718636;
                    break;
                  case 7:
                    unint64_t v45 = 0xE800000000000000;
                    unint64_t v46 = OUTLINED_FUNCTION_13_23();
                    break;
                  case 8:
                    unint64_t v45 = 0xE700000000000000;
                    unint64_t v46 = OUTLINED_FUNCTION_18_21();
                    break;
                  case 9:
                    unint64_t v45 = 0xE700000000000000;
                    unint64_t v46 = OUTLINED_FUNCTION_11_3();
                    break;
                  case 10:
                    unint64_t v45 = 0xE600000000000000;
                    unint64_t v46 = 0x646C6F486E6FLL;
                    break;
                  case 11:
                    unint64_t v46 = OUTLINED_FUNCTION_119();
                    unint64_t v45 = 0xE900000000000065;
                    break;
                  case 12:
                    unint64_t v46 = OUTLINED_FUNCTION_17_19();
                    unint64_t v45 = 0xEC0000006C69616DLL;
                    break;
                  case 13:
                    unint64_t v45 = v74 | 0x8000000000000000;
                    unint64_t v46 = 0xD000000000000014;
                    break;
                  default:
                    break;
                }
                *(void *)(v44 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v45, aBlock);
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v42, v43, "#PhoneCallNLIntent->INSearchCallHistoryIntent attribute: %s is not supported and will be ignored", (uint8_t *)v44, 0xCu);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_6();
                OUTLINED_FUNCTION_6();

                v38 = (void *)&unk_583000;
              }
              else
              {
              }
            }
          }
          else
          {
            v36 |= 2uLL;
          }
          --v35;
        }
        while (v35);
      }
      else
      {
        v38 = &unk_583000;
      }
      swift_bridgeObjectRelease();
      if (v38[466] != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for Logger();
      __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
      v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        v87[0] = swift_slowAlloc();
        *(_DWORD *)v50 = 136315138;
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = _swiftEmptyArrayStorage;
        v85 = OUTLINED_FUNCTION_9_28;
        uint64_t v86 = v51;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@unowned _INPBCallRecordType) -> ();
        v84 = &block_descriptor_2;
        v52 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        INCallRecordTypeOptionsEnumerateBackingTypes();
        _Block_release(v52);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v53 = Array.description.getter();
        unint64_t v55 = v54;
        swift_bridgeObjectRelease();
        aBlock[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v55, v87);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v48, v49, "#PhoneCallNLIntent->INSearchCallHistoryIntent Creating INSearchCallHistoryIntent to return the latest call record: %s.", v50, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }

      [v82 setCallTypes:v36];
    }
  }
  __swift_project_boxed_opaque_existential_1(v81, v81[3]);
  uint64_t v56 = OUTLINED_FUNCTION_3_35();
  uint64_t v58 = *(void *)(v57(v56) + 16);
  swift_bridgeObjectRelease();
  if (v58)
  {
    __swift_project_boxed_opaque_existential_1(v80, v80[3]);
    uint64_t v59 = OUTLINED_FUNCTION_3_35();
    uint64_t v61 = v60(v59);
    char v62 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 224))(v61);
    swift_release();
    uint64_t v63 = v81[3];
    uint64_t v64 = v81[4];
    __swift_project_boxed_opaque_existential_1(v81, v63);
    v65 = *(uint64_t (**)(uint64_t, uint64_t))(v64 + 128);
    v66 = v82;
    id v67 = v82;
    uint64_t v68 = v65(v63, v64);
    if (v62)
    {
      static SiriKitEventSender.current.getter();
      type metadata accessor for EmergencyContactResolution();
      uint64_t v69 = swift_allocObject();
      ContactGroupResolver.init()();
      specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)(v67, v68, 0, a2, v81, (uint64_t)v80, 0, 1, aBlock, v69);

      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t))(v77 + 8))(v76);
    }
    else
    {
      uint64_t v70 = v80[3];
      uint64_t v71 = v80[4];
      __swift_project_boxed_opaque_existential_1(v80, v70);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v71 + 8))(aBlock, v70, v71);
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v84);
      dispatch thunk of DeviceState.siriLocale.getter();
      static SiriKitEventSender.current.getter();
      type metadata accessor for EmergencyContactResolution();
      uint64_t v72 = swift_allocObject();
      specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(v67, v68, 0, 0, v78, v81, v80, 0, 1, v87, v72);

      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      (*(void (**)(void *))(v79 + 8))(v78);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }
  else
  {
    v66 = v82;
  }
  return v66;
}

uint64_t static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  id v12;
  void v14[5];
  long long __dst[11];
  void v16[3];
  uint64_t v17;
  uint64_t v18;
  long long v19;
  void v20[4];
  uint64_t v21;
  uint64_t v22;

  outlined init with copy of SignalProviding(a1, (uint64_t)v16);
  if (a2)
  {
    uint64_t v6 = a2;
  }
  else
  {
    if (one-time initialization token for instance != -1) {
      swift_once();
    }
    memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
    type metadata accessor for PhoneCallFeatureManager();
    uint64_t inited = swift_initStackObject();
    v20[1] = &type metadata for PhoneCallFeatureFlags;
    v20[2] = &protocol witness table for PhoneCallFeatureFlags;
    *(void *)&uint64_t v19 = swift_allocObject();
    memcpy((void *)(v19 + 16), __dst, 0xB0uLL);
    outlined init with take of AppSelectionSignalComponent(&v19, inited + 16);
    uint64_t v8 = v17;
    uint64_t v9 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8);
    outlined retain of PhoneCallFeatureFlags((uint64_t)__dst);
    v10(v14, v8, v9);
    FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v14, (uint64_t)&v19);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v22 = *((void *)&v19 + 1);
    uint64_t v6 = v19;
    outlined release of Set<String>((uint64_t)&v22);
    outlined init with take of String?((uint64_t)v20, (uint64_t)v14);
    outlined release of String?((uint64_t)v14);
    uint64_t v21 = v20[3];
    outlined release of Set<String>((uint64_t)&v21);
  }
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  outlined init with copy of SignalProviding(a1, (uint64_t)__dst);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  outlined init with take of AppSelectionSignalComponent(__dst, v11 + 24);
  *(void *)(v11 + 64) = a3;
  v12 = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INSearchCallHistoryIntent);
  return Transformer.init(transform:)();
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v8 = static Transformer<>.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:)(a1, a2, a3);
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(a2, a4);
  *a5 = v8;
}

uint64_t specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(void *a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, char a9, void *a10, uint64_t a11)
{
  v108 = a5;
  uint64_t v18 = type metadata accessor for ResolvedSiriKitContact();
  uint64_t v106 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Locale();
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ContactResolverConfigHashable();
  __chkstk_darwin(v24 - 8);
  v109 = (uint64_t *)((char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a3 & 1) == 0) {
    goto LABEL_13;
  }
  v110 = (void (*)(char *, unint64_t, uint64_t))a2;
  v107 = a6;
  int v26 = v20;
  uint64_t v27 = v18;
  uint64_t v28 = a4;
  swift_getObjectType();
  uint64_t v29 = dynamic_cast_existential_1_conditional((uint64_t)a1);
  uint64_t v31 = one-time initialization token for siriPhone;
  if (!v29)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    __swift_project_value_buffer(v42, (uint64_t)static Logger.siriPhone);
    os_log_type_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v45 = 0;
      _os_log_impl(&dword_0, v43, v44, "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!", v45, 2u);
      swift_slowDealloc();
    }

    a4 = v28;
    uint64_t v18 = v27;
    v20 = v26;
    a6 = v107;
    a2 = (uint64_t)v110;
LABEL_13:
    uint64_t result = specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(a6, a1, a2);
    if (result) {
      return result;
    }
    v110 = (void (*)(char *, unint64_t, uint64_t))a2;
    uint64_t v104 = a8;
    uint64_t v105 = a4;
    if (a4 && (uint64_t v46 = App.appIdentifier.getter(), v47))
    {
      uint64_t v48 = v46;
      uint64_t v49 = v47;
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      unint64_t v52 = v50[2];
      unint64_t v51 = v50[3];
      v108 = v50;
      if (v52 >= v51 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v108 = v101;
      }
      uint64_t v53 = v108;
      v108[2] = v52 + 1;
      unint64_t v54 = &v53[2 * v52];
      v54[4] = v48;
      v54[5] = v49;
    }
    else
    {
      v108 = _swiftEmptyArrayStorage;
    }
    v107 = a6;
    if (one-time initialization token for emptyStartCallIntent != -1) {
      swift_once();
    }
    id v55 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v58 = v57;

    uint64_t v60 = a7[3];
    uint64_t v59 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v60);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v59 + 8))(&v112, v60, v59);
    __swift_project_boxed_opaque_existential_1(&v112, v113);
    DeviceState.siriInputLocale.getter();
    outlined init with copy of SignalProviding((uint64_t)a7, (uint64_t)v111);
    id v61 = a1;
    uint64_t v62 = (uint64_t)v108;
    swift_bridgeObjectRetain();
    uint64_t v63 = v109;
    ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)(v56, v58, (uint64_t)v23, v62, v61, (uint64_t)&protocol witness table for INSearchCallHistoryIntent, (uint64_t)v111, v109);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
    uint64_t v64 = a7[3];
    uint64_t v65 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v64);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v65 + 96))(&v112, v64, v65);
    uint64_t v66 = v113;
    id v67 = v114;
    __swift_project_boxed_opaque_existential_1(&v112, v113);
    uint64_t v68 = ((uint64_t (*)(void (*)(char *, unint64_t, uint64_t), uint64_t *, uint64_t, _UNKNOWN **))v67[2])(v110, v63, v66, v67);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
    __swift_project_boxed_opaque_existential_1(a10, a10[3]);
    type metadata accessor for SiriKitEvent();
    id v103 = v61;
    id v69 = [v61 typeName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    outlined init with copy of SignalProviding((uint64_t)v107, (uint64_t)&v112);
    uint64_t v70 = swift_allocObject();
    v107 = (void *)v68;
    *(void *)(v70 + 16) = v105;
    outlined init with take of AppSelectionSignalComponent(&v112, v70 + 24);
    *(void *)(v70 + 64) = v107;
    uint64_t v71 = (uint64_t)v107;
    swift_retain();
    swift_bridgeObjectRetain();
    LOBYTE(v111[0]) = 0;
    SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
    dispatch thunk of SiriKitEventSending.send(_:)();
    swift_release();
    uint64_t v72 = *(void *)(v71 + 16);
    if (v72)
    {
      *(void *)&long long v112 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      v110 = *(void (**)(char *, unint64_t, uint64_t))(v106 + 16);
      unint64_t v73 = v71 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
      uint64_t v74 = *(void *)(v106 + 72);
      v75 = (void (**)(char *, uint64_t))(v106 + 8);
      do
      {
        v110(v20, v73, v18);
        ResolvedSiriKitContact.person.getter();
        (*v75)(v20, v18);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v73 += v74;
        --v72;
      }
      while (v72);
      v76._rawValue = (void *)v112;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v76._rawValue = _swiftEmptyArrayStorage;
    }
    uint64_t v77 = v109;
    if ((unint64_t)v76._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v78 = *(void *)((char *)&dword_10 + ((unint64_t)v76._rawValue & 0xFFFFFFFFFFFFFF8));
    }
    if (v78)
    {
      uint64_t v79 = static ContactResolution.dedupeContacts(contacts:)();
      swift_bridgeObjectRelease();
      v76._rawValue = v79;
    }
    if (a9)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v87 = type metadata accessor for Logger();
      __swift_project_value_buffer(v87, (uint64_t)static Logger.siriPhone);
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v88, v89)) {
        goto LABEL_74;
      }
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      v91 = "#ContactResolution multicardinalIndex is nil, overwriting contacts slot";
      goto LABEL_73;
    }
    id v80 = INSearchCallHistoryIntent.contacts.getter();
    if (!v80)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v92 = type metadata accessor for Logger();
      __swift_project_value_buffer(v92, (uint64_t)static Logger.siriPhone);
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v88, v89)) {
        goto LABEL_74;
      }
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      v91 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
      goto LABEL_73;
    }
    *(void *)&long long v112 = v80;
    if ((unint64_t)v76._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v81 = *(void *)((char *)&dword_10 + ((unint64_t)v76._rawValue & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v81)
      {
LABEL_35:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, ((unint64_t)v76._rawValue & 0xC000000000000001) == 0, v76._rawValue);
        if (((unint64_t)v76._rawValue & 0xC000000000000001) != 0) {
          id v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v82 = *((id *)v76._rawValue + 4);
        }
        v83 = v82;
        swift_bridgeObjectRelease();
        unint64_t v84 = v112;
        if ((unint64_t)v112 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v85 = *(void *)((char *)&dword_10 + (v112 & 0xFFFFFFFFFFFFFF8));
        }
        if (v85 > v104)
        {
          if ((unint64_t)v76._rawValue >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            unint64_t v84 = v112;
          }
          else
          {
            uint64_t v86 = *(void *)((char *)&dword_10 + ((unint64_t)v76._rawValue & 0xFFFFFFFFFFFFFF8));
          }
          if (v84 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v93 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v93 = *(void *)((char *)&dword_10 + (v84 & 0xFFFFFFFFFFFFFF8));
          }
          if (v93 >= v86)
          {
            swift_bridgeObjectRelease();
            if (one-time initialization token for siriPhone != -1) {
              swift_once();
            }
            uint64_t v94 = type metadata accessor for Logger();
            __swift_project_value_buffer(v94, (uint64_t)static Logger.siriPhone);
            v95 = Logger.logObject.getter();
            os_log_type_t v96 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v95, v96))
            {
              v97 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v97 = 134217984;
              v111[0] = v104;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl(&dword_0, v95, v96, "#ContactResolution updating person at index %ld", v97, 0xCu);
              swift_slowDealloc();
            }

            uint64_t v98 = v112;
            id v99 = v83;
            uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
            if (!result || v98 < 0 || (v98 & 0x4000000000000000) != 0)
            {
              uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()(v98);
              uint64_t v98 = result;
              *(void *)&long long v112 = result;
            }
            if (v104 < 0)
            {
              __break(1u);
            }
            else if (*(void *)((char *)&dword_10 + (v98 & 0xFFFFFFFFFFFFFF8)) > (unint64_t)v104)
            {
              v100 = *(void **)((char *)&stru_20.cmd + 8 * v104 + (v98 & 0xFFFFFFFFFFFFFF8));
              *(void *)((char *)&stru_20.cmd + 8 * v104 + (v98 & 0xFFFFFFFFFFFFFF8)) = v99;

              specialized Array._endMutation()();
              INSearchCallHistoryIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v112);

LABEL_75:
              swift_bridgeObjectRelease();
              return outlined destroy of ContactResolverConfigHashable((uint64_t)v77);
            }
            __break(1u);
            return result;
          }
        }

        goto LABEL_69;
      }
    }
    swift_bridgeObjectRelease();
LABEL_69:
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v102 = type metadata accessor for Logger();
    __swift_project_value_buffer(v102, (uint64_t)static Logger.siriPhone);
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v88, v89)) {
      goto LABEL_74;
    }
    v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v90 = 0;
    v91 = "#ContactResolution: overwriting contacts slot";
LABEL_73:
    _os_log_impl(&dword_0, v88, v89, v91, v90, 2u);
    swift_slowDealloc();
LABEL_74:

    INSearchCallHistoryIntent.overwriteContacts(newContacts:)(v76);
    goto LABEL_75;
  }
  uint64_t v32 = v29;
  uint64_t v33 = v30;
  id v34 = a1;
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_0, v36, v37, "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.", v38, 2u);
    swift_slowDealloc();
  }

  id v39 = [objc_allocWithZone((Class)HKHealthStore) init];
  id v40 = [objc_allocWithZone((Class)HKMedicalIDStore) initWithHealthStore:v39];

  uint64_t v113 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for HKMedicalIDStore);
  v114 = &protocol witness table for HKMedicalIDStore;
  *(void *)&long long v112 = v40;
  (*(void (**)(uint64_t, uint64_t, void *, long long *))(*(void *)a11 + 80))(v32, v33, v108, &v112);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
}

uint64_t specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)(void *a1, void *a2, uint64_t a3)
{
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)a2))
  {
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
    uint64_t v10 = a2;
    if (v9(ObjectType, v7) == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
LABEL_63:
      }
        swift_once();
      uint64_t v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
      v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        id v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v14 = 0;
        _os_log_impl(&dword_0, v12, v13, "#ContactResolution intent is emergency call. bypassing contact resolution", v14, 2u);
        swift_slowDealloc();

LABEL_71:
        return 1;
      }

      return 1;
    }
  }
  if (a3)
  {
    if (*(void *)(a3 + 16)) {
      return 0;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    v12 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v12, v25)) {
      goto LABEL_71;
    }
    int v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v26 = 0;
    uint64_t v27 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
LABEL_70:
    _os_log_impl(&dword_0, v12, v25, v27, v26, 2u);
    swift_slowDealloc();
    goto LABEL_71;
  }
  unint64_t v16 = (unint64_t)INSearchCallHistoryIntent.contacts.getter();
  if (!v16)
  {
LABEL_66:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
    v12 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v12, v25)) {
      goto LABEL_71;
    }
    int v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v26 = 0;
    uint64_t v27 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
    goto LABEL_70;
  }
  unint64_t v17 = v16;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (char *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_13;
    }
    goto LABEL_65;
  }
  uint64_t v10 = *(char **)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8));
  if (!v10)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
LABEL_13:
  unint64_t v18 = v17 & 0xC000000000000001;
  if ((v17 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v19 = *(void **)(v17 + 32);
    swift_bridgeObjectRetain();
    id v20 = v19;
  }
  uint64_t v21 = v20;
  BOOL v22 = INPerson.hasHandleValue.getter();

  if (!v22) {
    goto LABEL_43;
  }
  if (v10 == (unsigned char *)&dword_0 + 1)
  {
LABEL_39:
    swift_bridgeObjectRelease_n();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    v12 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v12, v25)) {
      goto LABEL_71;
    }
    int v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v26 = 0;
    uint64_t v27 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_70;
  }
  id v23 = v18 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v17 + 40);
  uint64_t v28 = v23;
  BOOL v29 = INPerson.hasHandleValue.getter();

  if (!v29)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v39 = 4;
    do
    {
      if (v18) {
        id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v40 = *(id *)(v17 + 8 * v39);
      }
      uint64_t v35 = v40;
      uint64_t v41 = (char *)(v39 - 3);
      if (__OFADD__(v39 - 4, 1))
      {
        __break(1u);
        goto LABEL_63;
      }
      id v42 = [v40 personHandle];
      if (v42)
      {
        os_log_type_t v43 = v42;
        uint64_t v33 = (uint64_t)[v42 emergencyType];

        if (v33)
        {
          swift_bridgeObjectRelease_n();
          if (one-time initialization token for siriPhone != -1) {
            goto LABEL_76;
          }
          goto LABEL_58;
        }
      }

      ++v39;
    }
    while (v41 != v10);
    swift_bridgeObjectRelease();
    uint64_t v44 = a1[3];
    uint64_t v45 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v44);
    uint64_t v46 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45) + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v60);
    if (!v46)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      return 0;
    }
    uint64_t v47 = v61;
    uint64_t v48 = v62;
    __swift_project_boxed_opaque_existential_1(v60, v61);
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 24))(v47, v48);
    char v50 = specialized Sequence.allSatisfy(_:)(v49, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    if ((v50 & 1) == 0) {
      return 0;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    __swift_project_value_buffer(v51, (uint64_t)static Logger.siriPhone);
    v12 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v25))
    {
      int v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v26 = 0;
      uint64_t v27 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_70;
    }
    goto LABEL_71;
  }
  if (v10 == (unsigned char *)&dword_0 + 2) {
    goto LABEL_39;
  }
  if (v18) {
    id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v30 = *(id *)(v17 + 48);
  }
  uint64_t v31 = v30;
  BOOL v32 = INPerson.hasHandleValue.getter();

  if (!v32) {
    goto LABEL_43;
  }
  if (v10 == (unsigned char *)&dword_0 + 3) {
    goto LABEL_39;
  }
  uint64_t v33 = 7;
  while (1)
  {
    id v34 = v18 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v17 + 8 * v33);
    uint64_t v35 = v34;
    uint64_t v36 = (char *)(v33 - 3);
    if (__OFADD__(v33 - 4, 1)) {
      break;
    }
    BOOL v37 = INPerson.hasHandleValue.getter();

    if (!v37) {
      goto LABEL_43;
    }
    ++v33;
    if (v36 == v10) {
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_76:
  swift_once();
LABEL_58:
  uint64_t v52 = type metadata accessor for Logger();
  __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v53, v54))
  {

    return 1;
  }
  id v55 = (uint8_t *)swift_slowAlloc();
  v60[0] = swift_slowAlloc();
  *(_DWORD *)id v55 = 136315138;
  uint64_t v63 = v33;
  type metadata accessor for INPersonHandleEmergencyType(0);
  uint64_t v56 = String.init<A>(describing:)();
  uint64_t v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, v60);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_0, v53, v54, "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution", v55, 0xCu);
  uint64_t v15 = 1;
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  return v15;
}

void specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t a6, void *a7, int a8, void *a9, uint64_t a10)
{
  int v43 = a8;
  int v47 = a3;
  uint64_t v49 = a2;
  uint64_t v45 = a9;
  uint64_t v46 = a10;
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v48 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v44 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = (unint64_t)specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)a1, a4, a5, (uint8_t *)a6);
  v18._rawValue = (void *)v17;
  unint64_t v20 = v19;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void **)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
  }
  id v50 = v21;
  if (v21)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    id v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = v15;
      *(_WORD *)os_log_type_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "#ReferenceContactResolutionWrapper updated SKIntent with contacts", v25, 2u);
      uint64_t v15 = v42;
      swift_slowDealloc();
    }

    INSearchCallHistoryIntent.overwriteContacts(newContacts:)(v18);
  }
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_11;
    }
  }
  else if (*(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_11:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      BOOL v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v29 = 0;
      _os_log_impl(&dword_0, v27, v28, "#ReferenceContactResolutionWrapper updated SKIntent with groups", v29, 2u);
      swift_slowDealloc();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v50)
  {
    id v50 = a7;
    char v38 = v43 & 1;
    uint64_t v39 = *(void *)(a6 + 24);
    uint64_t v40 = *(void *)(a6 + 32);
    __swift_project_boxed_opaque_existential_1((void *)a6, v39);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v40 + 8))(v51, v39, v40);
    __swift_project_boxed_opaque_existential_1(v51, v51[3]);
    uint64_t v41 = v44;
    dispatch thunk of DeviceState.siriLocale.getter();
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(a1, v49, v47 & 1, a4, v41, a5, (void *)a6, (uint64_t)v50, v38, v45, v46);
    (*(void (**)(void *, uint64_t))(v48 + 8))(v41, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    return;
  }
LABEL_19:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
  id v50 = a1;
  BOOL v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    id v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    *(_DWORD *)id v34 = 138412290;
    v51[0] = v50;
    id v36 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v35 = v50;

    _os_log_impl(&dword_0, v32, v33, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@", v34, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v37 = v50;
  }
}

uint64_t sub_1B5364()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1B53B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_1B546C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return _swift_deallocObject(v0, 72, 7);
}

void partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t *a1@<X0>, void *a2@<X8>)
{
  closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, *(void *)(v2 + 16), (void *)(v2 + 24), *(void **)(v2 + 64), a2);
}

void *specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint8_t *a4)
{
  v156 = a4;
  uint64_t v149 = a2;
  uint64_t v142 = a1;
  uint64_t v138 = type metadata accessor for RREntity();
  uint64_t v136 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RRCandidate();
  uint64_t v154 = *(void *)(v6 - 8);
  uint64_t v155 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  v158 = (void (*)(char *, char *, uint64_t))((char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  v141 = (char *)&v134 - v10;
  __chkstk_darwin(v9);
  v143 = (char *)&v134 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRResult?);
  __chkstk_darwin(v12 - 8);
  v148 = (void (*)(char *, char *, uint64_t))((char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v150 = type metadata accessor for RRResult();
  uint64_t v146 = *(void *)(v150 - 8);
  uint64_t v14 = __chkstk_darwin(v150);
  v135 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  v151 = (uint64_t *)((char *)&v134 - v17);
  __chkstk_darwin(v16);
  v144 = (char *)&v134 - v18;
  uint64_t v19 = type metadata accessor for MatchedResultsSetting();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  v147 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  os_log_type_t v24 = (char *)&v134 - v23;
  uint64_t v25 = type metadata accessor for ContactGroupResolver();
  __chkstk_darwin(v25);
  uint64_t v28 = v27;
  BOOL v29 = *(void (**)(void))(v27 + 16);
  uint64_t v157 = (uint64_t)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v30;
  v29();
  uint64_t v32 = a3[3];
  uint64_t v33 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v32);
  unint64_t v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 144))(v32, v33);
  v152 = v24;
  uint64_t v153 = v20;
  id v34 = *(void (**)(char *, void, uint64_t))(v20 + 104);
  uint64_t v35 = v24;
  uint64_t v36 = v19;
  v34(v35, enum case for MatchedResultsSetting.defaultMatching(_:), v19);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  if (PhoneCallNLIntent.hasOnlyCallVerb()() && App.isFirstParty()() && static UsoUtils.buildDummyReferenceEntity()())
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((char *)&dword_10 + (v161 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v161 & 0xFFFFFFFFFFFFFF8)) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    id v37 = v152;
    (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v19);
    v34(v37, enum case for MatchedResultsSetting.extremelySalientResultsOnly(_:), v19);
  }
  if (v161 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((char *)&dword_10 + (v161 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v39 = v31;
  uint64_t v40 = v28;
  if (!v38)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    __swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.debug.getter();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v54 = v157;
    if (v53)
    {
      id v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v55 = 0;
      _os_log_impl(&dword_0, v51, v52, "#ReferenceContactResolutionWrapper - No references found", v55, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v36);
    goto LABEL_23;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v145 = v36;
  uint64_t v41 = type metadata accessor for Logger();
  uint64_t v134 = __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v140 = v28;
  if (v44)
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v139 = v39;
    uint64_t v46 = (uint8_t *)v45;
    v160[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315138;
    uint64_t v47 = (uint64_t)v152;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v153 + 16))(v147, v47, v145);
    uint64_t v48 = String.init<A>(describing:)();
    uint64_t v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v160);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v42, v43, "#ReferenceContactResolutionWrapper Querying SRR with match setting: %s", v46, 0xCu);
    swift_arrayDestroy();
    uint64_t v40 = v140;
    swift_slowDealloc();
    uint64_t v39 = v139;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v47 = (uint64_t)v152;
  }
  uint64_t v56 = v156;
  unint64_t v57 = v151;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v59 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  __chkstk_darwin(v59);
  *(&v134 - 4) = (uint64_t)&v161;
  *(&v134 - 3) = v47;
  *(&v134 - 2) = (uint64_t)v56;
  static SiriKitEventSender.current.getter();
  specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v160);
  uint64_t v60 = (uint64_t)v148;
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v61 = v150;
  if (__swift_getEnumTagSinglePayload(v60, 1, v150) == 1)
  {
    outlined destroy of SubmitCommandError?(v60, &demangling cache variable for type metadata for RRResult?);
    uint64_t v54 = v157;
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v47, v145);
LABEL_23:
    uint64_t v62 = _swiftEmptyArrayStorage;
    goto LABEL_49;
  }
  uint64_t v63 = v146;
  uint64_t v64 = v144;
  (*(void (**)(char *, uint64_t, uint64_t))(v146 + 32))(v144, v60, v61);
  uint64_t v65 = *(void (**)(uint64_t *, char *, uint64_t))(v63 + 16);
  v65(v57, v64, v61);
  int v66 = (*(uint64_t (**)(uint64_t *, uint64_t))(v63 + 88))(v57, v61);
  if (v66 == enum case for RRResult.foundMatch(_:))
  {
    v151 = a3;
    uint64_t v139 = v39;
    (*(void (**)(uint64_t *, uint64_t))(v63 + 96))(v57, v61);
    uint64_t v67 = v154;
    uint64_t v68 = v155;
    id v69 = v143;
    (*(void (**)(char *, uint64_t *, uint64_t))(v154 + 32))(v143, v57, v155);
    uint64_t v70 = v141;
    v158 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v158(v141, v69, v68);
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v71, v72))
    {
      unint64_t v73 = (uint8_t *)swift_slowAlloc();
      v160[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v73 = 136315138;
      lazy protocol witness table accessor for type RRResult and conformance RRResult(&lazy protocol witness table cache variable for type RRCandidate and conformance RRCandidate, (void (*)(uint64_t))&type metadata accessor for RRCandidate);
      uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v75, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      Swift::OpaquePointer v76 = *(void (**)(char *, uint64_t))(v67 + 8);
      v76(v141, v68);
      _os_log_impl(&dword_0, v71, v72, "#ReferenceContactResolutionWrapper .foundMatch %s", v73, 0xCu);
      swift_arrayDestroy();
      uint64_t v61 = v150;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      Swift::OpaquePointer v76 = *(void (**)(char *, uint64_t))(v67 + 8);
      v76(v70, v68);
    }

    uint64_t v84 = v149;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RRCandidate>);
    unint64_t v85 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    uint64_t v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_467710;
    unint64_t v87 = v86 + v85;
    uint64_t v88 = v143;
    v158((char *)v87, v143, v68);
    uint64_t v54 = v157;
    uint64_t v62 = specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v86, v142, v84, (uint64_t)v151, v156, v157);
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    v76(v88, v68);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v144, v61);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v145);
    uint64_t v39 = v139;
    goto LABEL_48;
  }
  if (v66 != enum case for RRResult.needsDisambiguation(_:))
  {
    if (v66 != enum case for RRResult.foundMatchPlural(_:))
    {
      uint64_t v54 = v157;
      if (v66 == enum case for RRResult.noMatch(_:))
      {
        v115 = Logger.logObject.getter();
        os_log_type_t v116 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v115, v116))
        {
          v117 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v117 = 0;
          _os_log_impl(&dword_0, v115, v116, "#ReferenceContactResolutionWrapper found a .nomatch", v117, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v61);
      }
      else
      {
        v65((uint64_t *)v135, v64, v61);
        v124 = Logger.logObject.getter();
        v125 = v64;
        uint64_t v126 = v61;
        os_log_type_t v127 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v124, v127))
        {
          v128 = (uint8_t *)swift_slowAlloc();
          v158 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
          v160[0] = (uint64_t)v158;
          v156 = v128;
          *(_DWORD *)v128 = 136315138;
          lazy protocol witness table accessor for type RRResult and conformance RRResult(&lazy protocol witness table cache variable for type RRResult and conformance RRResult, (void (*)(uint64_t))&type metadata accessor for RRResult);
          v129 = v135;
          uint64_t v130 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, v160);
          uint64_t v54 = v157;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v132 = *(void (**)(char *, uint64_t))(v63 + 8);
          v132(v129, v126);
          _os_log_impl(&dword_0, v124, v127, "#ReferenceContactResolutionWrapper dropping result of type %s!", v156, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v133 = v144;
        }
        else
        {

          v132 = *(void (**)(char *, uint64_t))(v63 + 8);
          v132(v135, v126);
          v133 = v125;
        }
        v132(v133, v126);
        v132((char *)v151, v126);
      }
      uint64_t v47 = (uint64_t)v152;
      goto LABEL_22;
    }
    v151 = a3;
    (*(void (**)(uint64_t *, uint64_t))(v63 + 96))(v57, v61);
    uint64_t v89 = *v57;
    swift_bridgeObjectRetain_n();
    v90 = Logger.logObject.getter();
    os_log_type_t v91 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      v160[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v92 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v93 = Array.description.getter();
      uint64_t v94 = v39;
      unint64_t v96 = v95;
      swift_bridgeObjectRelease();
      uint64_t v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v93, v96, v160);
      uint64_t v56 = v156;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v97 = v94;
      uint64_t v64 = v144;
      uint64_t v98 = v145;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v90, v91, "#ReferenceContactResolutionWrapper .foundMatchPlural %s", v92, 0xCu);
      swift_arrayDestroy();
      uint64_t v61 = v150;
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v54 = v157;
      uint64_t v99 = v149;
      uint64_t v100 = v142;
    }
    else
    {
      uint64_t v97 = v39;

      swift_bridgeObjectRelease_n();
      uint64_t v54 = v157;
      uint64_t v99 = v149;
      uint64_t v100 = v142;
      uint64_t v98 = v145;
    }
    uint64_t v62 = specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v89, v100, v99, (uint64_t)v151, v56, v54);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v146 + 8))(v64, v61);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v98);
    uint64_t v39 = v97;
LABEL_48:
    uint64_t v40 = v140;
    goto LABEL_49;
  }
  uint64_t v139 = v39;
  (*(void (**)(uint64_t *, uint64_t))(v63 + 96))(v57, v61);
  uint64_t v77 = (char *)*v57;
  swift_bridgeObjectRetain_n();
  uint64_t v78 = Logger.logObject.getter();
  os_log_type_t v79 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v78, v79))
  {
    id v80 = (uint8_t *)swift_slowAlloc();
    v151 = (uint64_t *)swift_slowAlloc();
    v160[0] = (uint64_t)v151;
    *(_DWORD *)id v80 = 136315138;
    uint64_t v63 = v146;
    v148 = (void (*)(char *, char *, uint64_t))(v80 + 4);
    swift_bridgeObjectRetain();
    uint64_t v81 = Array.description.getter();
    unint64_t v83 = v82;
    swift_bridgeObjectRelease();
    uint64_t v159 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v83, v160);
    uint64_t v56 = v156;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v78, v79, "#ReferenceContactResolutionWrapper found a .needsDisambiguation match %s", v80, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v160[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v101 = *((void *)v77 + 2);
  uint64_t v102 = (char *)v158;
  if (v101)
  {
    v151 = a3;
    v148 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
    unint64_t v103 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    v143 = v77;
    uint64_t v104 = &v77[v103];
    v147 = *(char **)(v154 + 72);
    uint64_t v105 = (void (**)(uint64_t, uint64_t))(v136 + 8);
    v154 += 16;
    uint64_t v106 = (void (**)(char *, uint64_t))(v154 - 8);
    uint64_t v107 = v149;
    uint64_t v108 = v142;
    uint64_t v109 = v155;
    uint64_t v110 = v138;
    uint64_t v111 = (uint64_t)v137;
    do
    {
      v148(v102, v104, v109);
      RRCandidate.entity.getter();
      long long v112 = specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v111, v108, v107, (uint64_t)v151, v156, v157);
      (*v105)(v111, v110);
      swift_bridgeObjectRelease();
      unint64_t v113 = (unint64_t)v112;
      uint64_t v109 = v155;
      specialized Array.append<A>(contentsOf:)(v113);
      uint64_t v102 = (char *)v158;
      (*v106)((char *)v158, v109);
      uint64_t v104 = &v147[(void)v104];
      --v101;
    }
    while (v101);
    swift_bridgeObjectRelease();
    v114 = (void *)v160[0];
    uint64_t v63 = v146;
    uint64_t v64 = v144;
    uint64_t v56 = v156;
  }
  else
  {
    swift_bridgeObjectRelease();
    v114 = _swiftEmptyArrayStorage;
  }
  static ReferenceContactResolutionWrapper.dedupePersons(persons:sharedGlobals:)((unint64_t)v114, v56);
  uint64_t v119 = v118;
  swift_bridgeObjectRelease();
  v160[0] = v119;
  static ReferenceContactResolutionWrapper.skeletonINPerson(persons:)();
  uint64_t v121 = v120;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = xmmword_46A030;
  *(void *)(v122 + 32) = v121;
  uint64_t v159 = v122;
  specialized Array._endMutation()();
  uint64_t v62 = (void *)v159;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v150);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v145);
  uint64_t v39 = v139;
  uint64_t v40 = v140;
  uint64_t v54 = v157;
LABEL_49:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v54, v39);
  return v62;
}

uint64_t partial apply for closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)@<X0>(void *a1@<X8>)
{
  return closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

void *specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RREntity();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v17 = type metadata accessor for ContactGroupResolver();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a6, v17);
  specialized Collection.first.getter();
  uint64_t v21 = type metadata accessor for RRCandidate();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v21) == 1)
  {
    outlined destroy of SubmitCommandError?((uint64_t)v9, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate", v25, 2u);
      swift_slowDealloc();
    }

    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  else
  {
    RRCandidate.entity.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v9, v21);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    uint64_t v26 = specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v16, v28, v29, v30, v31, (uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v26;
}

void *specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v51 = a4;
  os_log_type_t v52 = a5;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v8 = type metadata accessor for ContactGroupResolver();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a6, v8);
  static Signpost.begin(_:)();
  uint64_t v53 = v12;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  uint64_t v13 = (void *)RREntity.convertData<A>(to:)();
  Signpost.OpenSignpost.end()();
  if (v13)
  {
    uint64_t v14 = one-time initialization token for siriPhone;
    id v15 = v13;
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_0, v17, v18, "#ReferenceContactResolutionWrapper resolved to an INPerson", v19, 2u);
      swift_slowDealloc();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_46A030;
    *(void *)(v20 + 32) = v15;
    uint64_t v54 = (void *)v20;
    uint64_t v21 = specialized Array._endMutation()();
    uint64_t v22 = v54;
    goto LABEL_14;
  }
  RREntity.usoEntity.getter();
  type metadata accessor for UsoEntity_common_Person();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  swift_release();
  if (v54)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    os_log_type_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "#ReferenceContactResolutionWrapper resolved to a common_Person", v26, 2u);
      swift_slowDealloc();
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
    type metadata accessor for ContactQuery();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_467710;
    UsoEntity_common_Person.toContactQuery()();
LABEL_13:
    specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)();
    uint64_t v22 = v27;
    swift_bridgeObjectRelease();
    uint64_t v21 = swift_release();
    goto LABEL_14;
  }
  RREntity.usoEntity.getter();
  type metadata accessor for UsoEntity_common_Group();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
  swift_release();
  uint64_t v30 = (uint64_t)v54;
  if (v54)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "#ReferenceContactResolutionWrapper resolved to a common_Group", v34, 2u);
      swift_slowDealloc();
    }

    specialized static ReferenceContactResolutionWrapper.resolveCommonGroup(group:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(v30, v49, v50, v51, v52, (uint64_t)v11);
    uint64_t v22 = v35;
    uint64_t v21 = swift_release();
  }
  else
  {
    RREntity.usoEntity.getter();
    type metadata accessor for UsoEntity_common_Agent();
    static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
    swift_release();
    if (v54)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
      id v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl(&dword_0, v37, v38, "#ReferenceContactResolutionWrapper resolved to a common_Agent", v39, 2u);
        swift_slowDealloc();
      }

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
      type metadata accessor for ContactQuery();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_467710;
      UsoEntity_common_Agent.toContactQuery()();
      goto LABEL_13;
    }
    RREntity.usoEntity.getter();
    type metadata accessor for UsoEntity_common_App();
    static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
    swift_release();
    if (v54)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v41, v42))
      {
        os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v43 = 0;
        _os_log_impl(&dword_0, v41, v42, "#ReferenceContactResolutionWrapper resolved to a common_app - Not convertible to INPerson", v43, 2u);
        swift_slowDealloc();
      }

      uint64_t v21 = swift_release();
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for Logger();
      __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&dword_0, v45, v46, "#ReferenceContactResolutionWrapper resolved entity was not recognized as a person or group", v47, 2u);
        swift_slowDealloc();
      }
    }
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
LABEL_14:
  __chkstk_darwin(v21);
  *(&v48 - 2) = a1;
  uint64_t v28 = specialized Sequence.compactMap<A>(_:)((uint64_t)partial apply for closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:), (uint64_t)(&v48 - 4), (unint64_t)v22);
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v28;
}

uint64_t lazy protocol witness table accessor for type RRResult and conformance RRResult(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(a1, a2);
}

void specialized static ReferenceContactResolutionWrapper.resolveCommonGroup(group:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  void (*v32)(long long *__return_ptr, void *);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void v44[3];
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  long long v50[2];
  long long v51[2];
  void v52[5];
  uint64_t v53[6];

  uint64_t v47 = a3;
  os_log_type_t v46 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for ContactQuery();
  uint64_t v14 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v45 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ContactGroupResolver();
  v53[3] = v16;
  v53[4] = (uint64_t)&protocol witness table for ContactGroupResolver;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1, a6, v16);
  uint64_t v18 = dispatch thunk of UsoEntity_common_Group.name.getter();
  LOBYTE(v16) = specialized Optional<A>.isNilOrEmpty.getter(v18, v19);
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0 || (unint64_t v20 = dispatch thunk of UsoEntity_common_Group.members.getter()) == 0)
  {
    uint64_t v24 = v11;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "#ReferenceContactResolutionWrapper resolved to a named common_Group", v28, 2u);
      swift_slowDealloc();
    }

    uint64_t v29 = a5[3];
    uint64_t v30 = a5[4];
    __swift_project_boxed_opaque_existential_1(a5, v29);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v30 + 8))(v52, v29, v30);
    outlined init with copy of SignalProviding((uint64_t)v52, (uint64_t)v51);
    outlined init with copy of SignalProviding((uint64_t)v53, (uint64_t)v50);
    uint64_t v31 = swift_allocObject();
    outlined init with take of AppSelectionSignalComponent(v51, v31 + 16);
    outlined init with take of AppSelectionSignalComponent(v50, v31 + 56);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
    Transformer.init(transform:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    uint64_t v32 = (void (*)(long long *__return_ptr, void *))Transformer.transform.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SmsGroup>);
    os_log_type_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_467710;
    *(void *)(v33 + 56) = type metadata accessor for UsoEntity_common_Group();
    *(void *)(v33 + 64) = &protocol witness table for UsoEntity_common_Group;
    *(void *)(v33 + 32) = a1;
    v52[0] = v33;
    swift_retain();
    v32(v51, v52);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v10);
    goto LABEL_40;
  }
  unint64_t v21 = v20;
  v52[0] = _swiftEmptyArrayStorage;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    if (v22) {
      goto LABEL_5;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    id v34 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v22 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v22) {
    goto LABEL_22;
  }
LABEL_5:
  if (v22 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }
  for (uint64_t i = 0; i != v22; ++i)
  {
    if ((v21 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    dispatch thunk of CodeGenListEntry.entry.getter();
    swift_release();
    if (*(void *)&v51[0])
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + (v52[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v52[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  id v34 = v52[0];
LABEL_23:
  swift_bridgeObjectRelease();
  if (!(v34 >> 62))
  {
    uint64_t v35 = *(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8));
    if (v35) {
      goto LABEL_25;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v43 = 0;
      _os_log_impl(&dword_0, v41, v42, "#ReferenceContactResolutionWrapper resolved to an unnamed common_Group", v43, 2u);
      swift_slowDealloc();
    }

    specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)();
    swift_bridgeObjectRelease();
LABEL_40:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_35;
  }
LABEL_25:
  v44[1] = a4;
  v44[2] = a5;
  v52[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v48 = v35;
  if ((v35 & 0x8000000000000000) == 0)
  {
    uint64_t v36 = 0;
    id v37 = v52[0];
    os_log_type_t v38 = v45;
    do
    {
      if ((v34 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      UsoEntity_common_Agent.toContactQuery()();
      swift_release();
      v52[0] = v37;
      uint64_t v39 = *(void *)(v37 + 16);
      if (v39 >= *(void *)(v37 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        id v37 = v52[0];
      }
      ++v36;
      *(void *)(v37 + 16) = v39 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v37+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v39, v38, v49);
    }
    while (v48 != v36);
    goto LABEL_35;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1B7F30()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1B7F70()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t OUTLINED_FUNCTION_0_45@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_67()
{
  return v0;
}

void OUTLINED_FUNCTION_3_58(uint64_t a1@<X8>)
{
  *(void *)(v2 - 248) = a1 + 8;
  *(void *)(v2 - 328) = v1 - 32;
}

void *specialized PhoneFlow.init(sharedGlobals:)(long long *a1)
{
  return specialized PhoneFlow.init(sharedGlobals:)(a1, &demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
}

{
  return specialized PhoneFlow.init(sharedGlobals:)(a1, &demangling cache variable for type metadata for PhoneCallFlowState<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
}

{
  return specialized PhoneFlow.init(sharedGlobals:)(a1, &demangling cache variable for type metadata for PhoneCallFlowState<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
}

{
  return specialized PhoneFlow.init(sharedGlobals:)(a1, &demangling cache variable for type metadata for PhoneCallFlowState<INStartCallIntent, INStartCallIntentResponse>);
}

void *specialized PhoneFlow.init(sharedGlobals:)(long long *a1, uint64_t *a2)
{
  v2[2] = 0x6F6C46656E6F6850;
  v2[3] = 0xE900000000000077;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_storeEnumTagMultiPayload();
  outlined init with take of AppSelectionSignalComponent(a1, (uint64_t)v2 + *(void *)(*v2 + 120));
  return v2;
}

uint64_t specialized PhoneFlow.deinit()
{
  return specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>);
}

{
  return specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
}

{
  return specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
}

{
  return specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INStartCallIntent, INStartCallIntentResponse>);
}

uint64_t specialized PhoneFlow.deinit(uint64_t *a1)
{
  swift_bridgeObjectRelease();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1 + *(void *)(*(void *)v1 + 112), a1);
  __swift_destroy_boxed_opaque_existential_1(v1 + *(void *)(*(void *)v1 + 120));
  return v1;
}

uint64_t one-time initialization function for typeName()
{
  type metadata accessor for AddCallParticipantFlow();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AddCallParticipantFlow.Type);
  uint64_t result = String.init<A>(describing:)();
  static AddCallParticipantFlow.typeName = result;
  unk_58D730 = v1;
  return result;
}

{
  uint64_t result;
  uint64_t v1;

  type metadata accessor for DismissSiriFlow();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DismissSiriFlow.Type);
  uint64_t result = String.init<A>(describing:)();
  static DismissSiriFlow.typeName = result;
  unk_58F280 = v1;
  return result;
}

void *AddCallParticipantFlow.__allocating_init(nlIntent:app:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AddCallParticipantFlow.init(nlIntent:app:sharedGlobals:)(a1, a2, a3);
}

void *AddCallParticipantFlow.init(nlIntent:app:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  outlined init with copy of SignalProviding(a1, v3 + direct field offset for AddCallParticipantFlow.nlIntent);
  *(void *)(v3 + direct field offset for AddCallParticipantFlow.app) = a2;
  outlined init with copy of SignalProviding(a3, (uint64_t)v9);
  uint64_t v7 = specialized PhoneFlow.init(sharedGlobals:)(v9, &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v7;
}

uint64_t AddCallParticipantFlow.execute()(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  type metadata accessor for CATOption();
  v2[20] = swift_task_alloc();
  v2[21] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return _swift_task_switch(AddCallParticipantFlow.execute(), 0, 0);
}

uint64_t AddCallParticipantFlow.execute()()
{
  void (*v20)(uint64_t *__return_ptr, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  os_log_type_t v29;
  uint64_t v30[5];
  uint64_t v31;
  uint64_t v32;

  uint64_t v31 = v0;
  uint64_t v1 = *(void (**)(void))(**(void **)(v0 + 152) + 128);
  v1();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v2 = **(void **)(v0 + 184);
      (*(void (**)(void))(**(void **)(v0 + 152) + 152))();
      type metadata accessor for AddCallParticipantCATsSimple();
      static CATOption.defaultMode.getter();
      uint64_t v3 = CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for AddCallParticipantGuardFlowFactory();
      uint64_t v4 = swift_allocObject();
      outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 56), v4 + 16);
      *(void *)(v4 + 56) = v3;
      uint64_t v5 = AddCallParticipantGuardFlowFactory.makeGuardFlow()();
      swift_release();
      *(void *)(v0 + 104) = v2;
      *(void *)(v0 + 112) = v5;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>>);
      type metadata accessor for GuardFlow();
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>>);
      *(void *)(v0 + 120) = Flow.guarded<A>(by:)();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConditionalFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>>);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type ConditionalFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>> and conformance ConditionalFlow<A>, &demangling cache variable for type metadata for ConditionalFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>>);
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_10;
    case 5u:
      uint64_t v17 = *(uint64_t **)(v0 + 176);
      uint64_t v18 = *(void *)(v0 + 152);
      type metadata accessor for AddCallParticipantRCHFlow();
      outlined init with copy of SignalProviding(v18 + direct field offset for AddCallParticipantFlow.nlIntent, v0 + 16);
      uint64_t v19 = *(void *)(v18 + direct field offset for AddCallParticipantFlow.app);
      unint64_t v20 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v18 + 152);
      unint64_t v21 = swift_retain();
      v20(v30, v21);
      *(void *)(v0 + 136) = AddCallParticipantRCHFlow.__allocating_init(phoneCallNLIntent:app:sharedGlobals:)(v0 + 16, v19, (uint64_t)v30);
      lazy protocol witness table accessor for type AddCallParticipantRCHFlow and conformance PhoneIntentRCHFlow<A, B>(&lazy protocol witness table cache variable for type AddCallParticipantRCHFlow and conformance PhoneIntentRCHFlow<A, B>, (void (*)(uint64_t))type metadata accessor for AddCallParticipantRCHFlow);
      uint64_t v22 = Flow.eraseToAnyValueFlow()();
      swift_release();
      *uint64_t v17 = v22;
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = *(void (**)(uint64_t *))(*(void *)v18 + 136);
      swift_retain();
      v23(v17);
      static ExecuteResponse.ongoing(requireInput:)();
LABEL_10:
      swift_release();
      break;
    case 6u:
      (*(void (**)(void))(**(void **)(v0 + 152) + 232))();
      break;
    case 7u:
      static ExecuteResponse.complete()();
      break;
    default:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
      swift_retain_n();
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v29 = v8;
        uint64_t v9 = swift_slowAlloc();
        v30[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 136315394;
        if (one-time initialization token for typeName != -1) {
          swift_once();
        }
        uint64_t v10 = *(void *)(v0 + 176);
        uint64_t v11 = static AddCallParticipantFlow.typeName;
        unint64_t v12 = unk_58D730;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v13 = swift_bridgeObjectRelease();
        *(_WORD *)(v9 + 12) = 2080;
        ((void (*)(uint64_t))v1)(v13);
        unint64_t v14 = specialized PhoneCallFlowState.description.getter(&demangling cache variable for type metadata for RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>, &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>>, &lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>> and conformance AnyValueFlow<A>);
        unint64_t v16 = v15;
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v10, &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
        *(void *)(v0 + 96) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_0, v7, v29, "%s: execute called with flow in unexpected state: %s", (uint8_t *)v9, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }

      uint64_t v25 = *(void *)(v0 + 176);
      uint64_t v24 = *(void *)(v0 + 184);
      uint64_t v26 = *(void *)(v0 + 152);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t))(*(void *)v26 + 136))(v25);
      static ExecuteResponse.ongoing(requireInput:)();
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v24, &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
      break;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

void AddCallParticipantFlow.init(sharedGlobals:)()
{
}

void AddCallParticipantFlow.init(state:sharedGlobals:)()
{
}

uint64_t AddCallParticipantFlow.__ivar_destroyer()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for AddCallParticipantFlow.nlIntent);

  return swift_release();
}

uint64_t AddCallParticipantFlow.deinit()
{
  uint64_t v0 = specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for AddCallParticipantFlow.nlIntent);
  swift_release();
  return v0;
}

uint64_t AddCallParticipantFlow.__deallocating_deinit()
{
  AddCallParticipantFlow.deinit();

  return swift_deallocClassInstance();
}

unint64_t specialized PhoneCallFlowState.description.getter()
{
  return specialized PhoneCallFlowState.description.getter(&demangling cache variable for type metadata for RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>, &demangling cache variable for type metadata for PhoneCallFlowState<INHangUpCallIntent, INHangUpCallIntentResponse>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>, &lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>);
}

unint64_t specialized PhoneCallFlowState.description.getter(uint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_4();
  uint64_t v19 = v18 - v17;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_4();
  uint64_t v23 = v22 - v21;
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(v4, v22 - v21, a2);
  unint64_t v24 = 0x6C616974696E692ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v28 = (long long *)(v23
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState))
                                + 64));
      uint64_t v29 = OUTLINED_FUNCTION_1_62();
      v30(v29);
      outlined init with take of AppSelectionSignalComponent(v28, (uint64_t)&v40);
      _StringGuts.grow(_:)(32);
      OUTLINED_FUNCTION_5_45((uint64_t)".runIntentConversion(");
      type metadata accessor for App();
      lazy protocol witness table accessor for type AddCallParticipantRCHFlow and conformance PhoneIntentRCHFlow<A, B>((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, (void (*)(uint64_t))&type metadata accessor for App);
      v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      v32._countAndFlagsBits = 8236;
      v32._object = (void *)0xE200000000000000;
      String.append(_:)(v32);
      lazy protocol witness table accessor for type AddCallParticipantRCHFlow and conformance PhoneIntentRCHFlow<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, (void (*)(uint64_t))&type metadata accessor for Input);
      v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      v34._countAndFlagsBits = 8236;
      v34._object = (void *)0xE200000000000000;
      String.append(_:)(v34);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DeviceState);
      _print_unlocked<A, B>(_:_:)();
      OUTLINED_FUNCTION_6_46();
      swift_release();
      unint64_t v24 = 0;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      goto LABEL_4;
    case 2u:
      unint64_t v40 = 0x284843526E75722ELL;
      unint64_t v41 = 0xE800000000000000;
      __swift_instantiateConcreteTypeFromMangledName(a3);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](a4, a3);
      v35._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 3u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v23, v6);
      OUTLINED_FUNCTION_2_68();
      _StringGuts.grow(_:)(24);
      OUTLINED_FUNCTION_5_45((uint64_t)".offerFollowUpAction(");
      _print_unlocked<A, B>(_:_:)();
      OUTLINED_FUNCTION_6_46();
      unint64_t v24 = v40;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
      return v24;
    case 4u:
      OUTLINED_FUNCTION_2_68();
      _StringGuts.grow(_:)(16);
      v36._countAndFlagsBits = 0x6F707075736E752ELL;
      v36._object = (void *)0xED00002864657472;
      String.append(_:)(v36);
      type metadata accessor for SimpleOutputFlowAsync();
      _print_unlocked<A, B>(_:_:)();
LABEL_8:
      OUTLINED_FUNCTION_6_46();
      swift_release();
      unint64_t v24 = v40;
      break;
    case 5u:
      return v24;
    case 6u:
      unint64_t v24 = 0x7373696D7369642ELL;
      break;
    case 7u:
      unint64_t v24 = 0x706F74732ELL;
      break;
    default:
      uint64_t v25 = OUTLINED_FUNCTION_1_62();
      v26(v25);
      OUTLINED_FUNCTION_2_68();
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v40 = 0xD000000000000012;
      unint64_t v41 = 0x8000000000495EC0;
      lazy protocol witness table accessor for type AddCallParticipantRCHFlow and conformance PhoneIntentRCHFlow<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, (void (*)(uint64_t))&type metadata accessor for Input);
      v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_46();
      unint64_t v24 = 0xD000000000000012;
LABEL_4:
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
      break;
  }
  return v24;
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AddCallParticipantFlow.execute()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t type metadata accessor for AddCallParticipantFlow()
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantFlow;
  if (!type metadata singleton initialization cache for AddCallParticipantFlow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantFlow()
{
  return swift_initClassMetadata2();
}

uint64_t lazy protocol witness table accessor for type AddCallParticipantRCHFlow and conformance PhoneIntentRCHFlow<A, B>(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_62()
{
  return v0;
}

void OUTLINED_FUNCTION_2_68()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_6_46()
{
  uint64_t v1 = 41;
  unint64_t v2 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t TemplatingParallelizer.__allocating_init(name:timeout:qos:)(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  TemplatingParallelizer.init(name:timeout:qos:)(a1, a2, a3 & 0x1FF, a4, a5);
  return v10;
}

uint64_t TemplatingParallelizer.init(name:timeout:qos:)(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v32 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  OUTLINED_FUNCTION_1();
  uint64_t v30 = v12;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  uint64_t v31 = v15 - v14;
  uint64_t v16 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v16 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v29 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_1();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_4();
  uint64_t v22 = v21 - v20;
  *(void *)(v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_catCalls) = _swiftEmptyArrayStorage;
  *(void *)(v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results) = _swiftEmptyArrayStorage;
  uint64_t v23 = v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name;
  *(void *)uint64_t v23 = a1;
  *(void *)(v23 + 8) = a2;
  *(unsigned char *)(v23 + 16) = a3;
  *(unsigned char *)(v23 + 17) = HIBYTE(a3) & 1;
  uint64_t v24 = v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_timeout;
  uint64_t v25 = type metadata accessor for DispatchTimeInterval();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, a4, v25);
  type metadata accessor for OS_dispatch_queue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, a5, v29);
  static OS_dispatch_queue.Attributes.concurrent.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v31, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v32);
  uint64_t v27 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a5, v29);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a4, v25);
  *(void *)(v6 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_queue) = v27;
  return v6;
}

unint64_t type metadata accessor for OS_dispatch_queue()
{
  unint64_t result = lazy cache variable for type metadata for OS_dispatch_queue;
  if (!lazy cache variable for type metadata for OS_dispatch_queue)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  }
  return result;
}

uint64_t TemplatingParallelizer.addCall(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for PhoneError();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_5_1();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_catCalls);
  OUTLINED_FUNCTION_3_59();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v15 = *(void *)(*v14 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  uint64_t v16 = *v14;
  *(void *)(v16 + 16) = v15 + 1;
  uint64_t v17 = v16 + 16 * v15;
  *(void *)(v17 + 32) = _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TRTA;
  *(void *)(v17 + 40) = v13;
  swift_endAccess();
  *(_OWORD *)uint64_t v10 = xmmword_472DC0;
  *(void *)(v10 + 16) = 0xD000000000000038;
  *(void *)(v10 + 24) = 0x8000000000495EE0;
  *(_OWORD *)(v10 + 32) = xmmword_472DD0;
  *(void *)(v10 + 48) = 55;
  *(unsigned char *)(v10 + 56) = 0;
  swift_storeEnumTagMultiPayload();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
  uint64_t v18 = swift_allocError();
  PhoneError.logged()(v19);
  outlined destroy of PhoneError(v10);
  *uint64_t v3 = v18;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results);
  OUTLINED_FUNCTION_3_59();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v21 = *(void *)(*v20 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  uint64_t v22 = *v20;
  *(void *)(v22 + 16) = v21 + 1;
  outlined init with take of Result<TemplatingResult, Error>((uint64_t)v3, v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v21);
  swift_endAccess();
  return swift_retain();
}

uint64_t _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TR(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  a2(partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>) -> (@out ()), v5);

  return swift_release();
}

uint64_t sub_1B9910()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TRTA(uint64_t *a1)
{
  return _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TR(a1, *(void (**)(uint64_t (*)(), uint64_t))(v1 + 16));
}

uint64_t TemplatingParallelizer.execute(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_1();
  uint64_t v28 = v8;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_1();
  uint64_t v26 = v11;
  uint64_t v27 = v10;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v14 = v13 - v12;
  static Signpost.begin(_:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  __int16 v22 = v21;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v4;
  *(void *)(v23 + 24) = v16;
  *(void *)(v23 + 32) = v18;
  *(void *)(v23 + 40) = v20;
  *(unsigned char *)(v23 + 48) = v22;
  *(unsigned char *)(v23 + 49) = HIBYTE(v22) & 1;
  *(void *)(v23 + 56) = a1;
  *(void *)(v23 + 64) = a2;
  aBlock[4] = partial apply for closure #1 in TemplatingParallelizer.execute(_:);
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  uint64_t aBlock[3] = &block_descriptor_3;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_2(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v14, v27);
  return swift_release();
}

uint64_t closure #1 in TemplatingParallelizer.execute(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v60 = a6;
  uint64_t v61 = a2;
  int v59 = a5;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v64 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v63 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v62 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for DispatchTime();
  uint64_t v55 = *(void *)(v56 - 8);
  uint64_t v14 = __chkstk_darwin(v56);
  uint64_t v53 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v54 = (char *)&v50 - v16;
  uint64_t v17 = dispatch_group_create();
  uint64_t v18 = a1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_catCalls;
  swift_beginAccess();
  uint64_t v19 = *(void *)(*(void *)v18 + 16);
  uint64_t v65 = v9;
  uint64_t v66 = a7;
  if (v19)
  {
    uint64_t v51 = v12;
    uint64_t v52 = v10;
    uint64_t v20 = 0;
    uint64_t v50 = swift_bridgeObjectRetain();
    uint64_t v21 = v50 + 40;
    do
    {
      __int16 v22 = *(void (**)(uint64_t *))(v21 - 8);
      swift_retain();
      dispatch_group_enter(v17);
      uint64_t v23 = (void *)swift_allocObject();
      v23[2] = a1;
      v23[3] = v20;
      v23[4] = v17;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = partial apply for closure #1 in closure #1 in TemplatingParallelizer.execute(_:);
      *(void *)(v24 + 24) = v23;
      uint64_t aBlock = (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>) -> ();
      uint64_t v69 = v24;
      swift_retain();
      uint64_t v25 = v17;
      swift_retain();
      v22(&aBlock);
      swift_release();
      swift_release();
      swift_release();
      v21 += 16;
      ++v20;
    }
    while (v19 != v20);
    swift_bridgeObjectRelease();
    uint64_t v10 = v52;
    uint64_t v12 = v51;
  }
  uint64_t v26 = v53;
  static DispatchTime.now()();
  uint64_t v27 = v10;
  uint64_t v28 = v54;
  + infix(_:_:)();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v30 = v56;
  v29(v26, v56);
  LOBYTE(v26) = OS_dispatch_group.wait(timeout:)();
  uint64_t v31 = v28;
  uint64_t v32 = v27;
  uint64_t v33 = v66;
  v29(v31, v30);
  uint64_t v34 = v12;
  if (v26)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    Swift::String v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      uint64_t v52 = v32;
      *(_DWORD *)os_log_type_t v38 = 136315138;
      uint64_t v39 = StaticString.description.getter();
      uint64_t v67 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, &aBlock);
      uint64_t v32 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      uint64_t v34 = v12;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v36, v37, "Timed out for parallel CAT task: %s", v38, 0xCu);
      swift_arrayDestroy();
      uint64_t v33 = v66;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  type metadata accessor for OS_dispatch_queue();
  unint64_t v41 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v61;
  *(void *)(v42 + 16) = a1;
  *(void *)(v42 + 24) = v43;
  uint64_t v44 = v58;
  *(void *)(v42 + 32) = v57;
  *(void *)(v42 + 40) = v44;
  BYTE1(v44) = BYTE1(v59);
  *(unsigned char *)(v42 + 48) = v59;
  *(unsigned char *)(v42 + 49) = BYTE1(v44) & 1;
  *(void *)(v42 + 56) = v60;
  *(void *)(v42 + 64) = v33;
  os_log_type_t v72 = partial apply for closure #2 in closure #1 in TemplatingParallelizer.execute(_:);
  uint64_t v73 = v42;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v69 = 1107296256;
  uint64_t v70 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  uint64_t v71 = &block_descriptor_22;
  uint64_t v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  os_log_type_t v46 = v62;
  static DispatchQoS.unspecified.getter();
  uint64_t v67 = _swiftEmptyArrayStorage;
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_2(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  uint64_t v47 = v64;
  uint64_t v48 = v65;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v45);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v47, v48);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v46, v34);
  return swift_release();
}

void closure #1 in closure #1 in TemplatingParallelizer.execute(_:)(uint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4)
{
  uint64_t v7 = (uint64_t *)(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results);
  swift_beginAccess();
  uint64_t v8 = *v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v8;
  if (isUniquelyReferenced_nonNull_native)
  {
    if ((a3 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew()(v8);
  *uint64_t v7 = v8;
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v8 + 16) > a3)
  {
    uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>)
                    - 8);
    outlined assign with copy of Result<TemplatingResult, Error>(a1, v8+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * a3);
    swift_endAccess();
    dispatch_group_leave(a4);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t closure #2 in closure #1 in TemplatingParallelizer.execute(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    swift_beginAccess();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v11 = StaticString.description.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, v9, "Sending back %ld results for parallel CAT task: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  Signpost.OpenSignpost.end()();
  swift_beginAccess();
  uint64_t v13 = swift_bridgeObjectRetain();
  a6(v13);
  return swift_bridgeObjectRelease();
}

uint64_t TemplatingParallelizer.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_timeout;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TemplatingParallelizer.__deallocating_deinit()
{
  TemplatingParallelizer.deinit();

  return swift_deallocClassInstance();
}

uint64_t partial apply for closure #1 in TemplatingParallelizer.execute(_:)()
{
  return partial apply for closure #1 in TemplatingParallelizer.execute(_:)((uint64_t (*)(void, void, void, void, void, void, void))closure #1 in TemplatingParallelizer.execute(_:));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A];
  if (!lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  }
  return result;
}

uint64_t ObjC metadata update function for TemplatingParallelizer()
{
  return type metadata accessor for TemplatingParallelizer();
}

uint64_t type metadata accessor for TemplatingParallelizer()
{
  uint64_t result = type metadata singleton initialization cache for TemplatingParallelizer;
  if (!type metadata singleton initialization cache for TemplatingParallelizer) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for TemplatingParallelizer()
{
  uint64_t result = type metadata accessor for DispatchTimeInterval();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BA998()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in closure #1 in TemplatingParallelizer.execute(_:)(uint64_t a1)
{
  closure #1 in closure #1 in TemplatingParallelizer.execute(_:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>) -> ()()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t objectdestroy_2Tm_2()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t partial apply for closure #2 in closure #1 in TemplatingParallelizer.execute(_:)()
{
  return partial apply for closure #1 in TemplatingParallelizer.execute(_:)((uint64_t (*)(void, void, void, void, void, void, void))closure #2 in closure #1 in TemplatingParallelizer.execute(_:));
}

uint64_t partial apply for closure #1 in TemplatingParallelizer.execute(_:)(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 49)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), v2 | *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t outlined assign with copy of Result<TemplatingResult, Error>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>) -> (@out ())()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t OUTLINED_FUNCTION_3_59()
{
  return swift_beginAccess();
}

Swift::Bool __swiftcall EntitlementChecker.isEntitledToAnswerCallNotificationsFromBackground(appIdentifier:)(Swift::String appIdentifier)
{
  object = appIdentifier._object;
  uint64_t countAndFlagsBits = appIdentifier._countAndFlagsBits;
  static Signpost.begin(_:)();
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for RBSProcessPredicate);
  swift_bridgeObjectRetain();
  id v3 = @nonobjc RBSProcessPredicate.__allocating_init(matchingBundleIdentifier:)();
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for RBSProcessHandle);
  id v4 = v3;
  id v5 = @nonobjc RBSProcessHandle.__allocating_init(for:)(v4);
  uint64_t v14 = v5;
  if (!v5)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = (void *)Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_21_19(v8))
    {
      swift_slowAlloc();
      *(void *)token.val = OUTLINED_FUNCTION_11_29();
      dword_0 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v9 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, (uint64_t *)&token);
      OUTLINED_FUNCTION_8_44(v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_22_6(&dword_0, v10, v11, "#EntitlementChecker: Could not find processHandle for App %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

LABEL_6:
LABEL_9:
      Swift::Bool v12 = 0;
      goto LABEL_10;
    }

    swift_bridgeObjectRelease_n();
LABEL_8:

    goto LABEL_9;
  }
  [v5 auditToken];
  SecTaskRef v15 = SecTaskCreateWithAuditToken(0, &token);
  if (!v15)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = (void *)Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_21_19(v30))
    {
      swift_slowAlloc();
      *(void *)token.val = OUTLINED_FUNCTION_11_29();
      dword_0 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, (uint64_t *)&token);
      OUTLINED_FUNCTION_8_44(v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_22_6(&dword_0, v32, v33, "#EntitlementChecker: Could not create SecTask for App %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      goto LABEL_9;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  uint64_t v16 = v15;
  uint64_t type = countAndFlagsBits;
  *(void *)token.val = 0;
  uint64_t v17 = (__CFString *)String._bridgeToObjectiveC()();
  CFTypeRef v18 = SecTaskCopyValueForEntitlement(v16, v17, (CFErrorRef *)&token);

  uint64_t v52 = v16;
  if (!v18)
  {
    if (*(void *)token.val)
    {
      uint64_t v34 = one-time initialization token for siriPhone;
      id v35 = *(id *)token.val;
      if (v34 != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
      id v37 = v35;
      os_log_type_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_21_19(v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        OUTLINED_FUNCTION_5_46();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v40 + 12) = 2080;
        type metadata accessor for CFErrorRef(0);
        id v4 = v41;
        id v42 = v37;
        uint64_t v43 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v55);
        OUTLINED_FUNCTION_3_60();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v38, OS_LOG_TYPE_DEFAULT, "#EntitlementChecker: Could not get value for entitlement %s: %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
      }
      uint64_t v16 = v52;
    }
    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
      uint64_t v47 = (void *)Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_21_19(v48))
      {
        swift_slowAlloc();
        uint64_t v55 = OUTLINED_FUNCTION_11_29();
        *(_DWORD *)uint64_t v16 = 136315138;
        OUTLINED_FUNCTION_5_46();
        OUTLINED_FUNCTION_3_60();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_22_6(&dword_0, v49, v50, "#EntitlementChecker: Missing value for entitlement %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
    }
    uint64_t v7 = *(void **)token.val;

    if (!v7) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  uint64_t v19 = (const void *)swift_unknownObjectRetain();
  int v20 = CFEqual(v19, kCFBooleanTrue);
  Swift::Bool v12 = v20 != 0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n();
  __int16 v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    log = v22;
    unint64_t v24 = (unint64_t)object;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(type, v24, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    if (v20) {
      uint64_t v26 = 0;
    }
    else {
      uint64_t v26 = 544501614;
    }
    if (v20) {
      unint64_t v27 = 0xE000000000000000;
    }
    else {
      unint64_t v27 = 0xE400000000000000;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, log, v23, "#EntitlementChecker: App %s is %sentitled to answer call notifications from background.", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease();
  }
  uint64_t v45 = *(void **)token.val;
  swift_unknownObjectRelease();

  if (v45) {
LABEL_10:
  }
  Signpost.OpenSignpost.end()();
  swift_release();
  return v12;
}

id @nonobjc RBSProcessPredicate.__allocating_init(matchingBundleIdentifier:)()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() predicateMatchingBundleIdentifier:v0];

  return v1;
}

id @nonobjc RBSProcessHandle.__allocating_init(for:)(void *a1)
{
  id v6 = 0;
  id v2 = [(id)swift_getObjCClassFromMetadata() handleForPredicate:a1 error:&v6];
  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v2;
}

ValueMetadata *type metadata accessor for EntitlementChecker()
{
  return &type metadata for EntitlementChecker;
}

uint64_t _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo23SAUIConfirmationOptionsCTg50125_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV22getConfirmationOptionsyyys6a7OySo016f5T0Cs5E56_pGcFyAGySS4call_SS6canceltsAJ_pGcfU_AISSAL_SSAMt_tXEfU_So32SAIntentGroupLaunchAppWithIntentC9launchApp_So20SAClientBoundCommand_p0D7CommandtTf1cn_n(uint64_t a1, void *a2, uint64_t a3)
{
  outlined init with take of AnnotatedApp?(a1, (uint64_t)v13, &demangling cache variable for type metadata for Result<(call: String, cancel: String), Error>);
  uint64_t v7 = v13[0];
  uint64_t v6 = v13[1];
  uint64_t v9 = v13[2];
  uint64_t v8 = v13[3];
  outlined init with take of AnnotatedApp?(a1, (uint64_t)v14, &demangling cache variable for type metadata for Result<(call: String, cancel: String), Error>);
  if (v14[32])
  {
    swift_errorRetain();
  }
  else
  {
    v12[0] = v7;
    v12[1] = v6;
    v12[2] = v9;
    v12[3] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    closure #1 in closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)(v12, a2, a3, &v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v11;
  }
  swift_unknownObjectRelease();

  return v7;
}

uint64_t _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo25SASTSideBySideButtonsItemCTg50101_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV09gethg66S7Buttons10callAction06cancelW0_ySo019SASTCommandTemplateW0C_AIys6a18OySo08SASTSidetsU4j3Cs5E51_pGctFyAKySS0V0_SS0X0tsAN_pGcfU_AMSSAP_SSAQt_tXEfU_So25SASTCommandTemplateActionCALTf1cn_n(uint64_t a1, void *a2, void *a3)
{
  outlined init with take of AnnotatedApp?(a1, (uint64_t)v16, &demangling cache variable for type metadata for Result<(call: String, cancel: String), Error>);
  uint64_t v7 = v16[0];
  uint64_t v6 = v16[1];
  uint64_t v9 = v16[2];
  uint64_t v8 = v16[3];
  outlined init with take of AnnotatedApp?(a1, (uint64_t)v17, &demangling cache variable for type metadata for Result<(call: String, cancel: String), Error>);
  if (v17[32])
  {
    swift_errorRetain();
  }
  else
  {
    id v10 = objc_allocWithZone((Class)SASTSideBySideButtonsItem);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = [v10 init];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    outlined bridged method (mbnn) of @objc SASTSideBySideButtonsItem.buttonsViewStyle.setter(v12, v13, v11);
    [v11 setPrimaryButtonAction:a2];
    [v11 setPrimaryButtonEnabled:1];
    outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.primaryButtonLabel.setter(v7, v6, v11);
    uint64_t v14 = (void *)static ColorFactory.white.getter();
    [v11 setPrimaryButtonTextColor:v14];

    [v11 setSecondaryButtonAction:a3];
    [v11 setSecondaryButtonEnabled:1];
    outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.secondaryButtonLabel.setter(v9, v8, v11);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (uint64_t)v11;
  }

  return v7;
}

uint64_t _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSaySo9SAAceViewCGTg5(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v3 = type metadata accessor for TemplatingResult();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Result<TemplatingResult, Error>(v1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(void *)v9;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  a1(&v11, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11;
}

uint64_t _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSS4call_SS6canceltTg5@<X0>(void (*a1)(_OWORD *__return_ptr, char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TemplatingResult();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  outlined init with copy of Result<TemplatingResult, Error>(v2, (uint64_t)v11);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    *(void *)&long long v13 = *v11;
    long long v14 = 0uLL;
    char v15 = 1;
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v6 + 32))(v8, v11, v5);
    a1(v16, v8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v13 = v16[0];
    long long v14 = v16[1];
    char v15 = v17;
  }
  *(_OWORD *)a2 = v13;
  *(_OWORD *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 32) = v15;
  return result;
}

id static StartCallViewBuilders.makeEmergencyCountdownViewBuilder(templatingService:app:intent:intentResponse:sharedGlobals:isDirectInvocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  long long v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "#StartCallViewBuilders Providing EmergencyCountdownBuilder", v16, 2u);
    swift_slowDealloc();
  }

  outlined init with copy of SignalProviding(a5, a7 + 32);
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 72) = a6 & 1;
  swift_retain();
  swift_retain();
  id v17 = a3;

  return a4;
}

void EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v8 = (void *)EmergencyCountdownBuilder.getButtonCommands()();
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_46A030;
  *(void *)(v11 + 32) = v8;
  __src[0] = v11;
  specialized Array._endMutation()();
  id v12 = objc_allocWithZone((Class)SASTCommandTemplateAction);
  id v22 = v8;
  id v13 = [v12 init];
  outlined bridged method (mbnn) of @objc SASTCommandTemplateAction.commands.setter(__src[0], (uint64_t)v13);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_46A030;
  *(void *)(v14 + 32) = v10;
  __src[0] = v14;
  specialized Array._endMutation()();
  id v15 = objc_allocWithZone((Class)SASTCommandTemplateAction);
  swift_unknownObjectRetain();
  id v16 = [v15 init];
  outlined bridged method (mbnn) of @objc SASTCommandTemplateAction.commands.setter(__src[0], (uint64_t)v16);
  id v17 = *v3;
  outlined init with copy of EmergencyCountdownBuilder(v4, (uint64_t)__src);
  CFTypeRef v18 = (void *)swift_allocObject();
  memcpy(v18 + 2, __src, 0x49uLL);
  v18[12] = v13;
  v18[13] = v16;
  v18[14] = a2;
  v18[15] = a3;
  v18[16] = a1;
  uint64_t v19 = *(void (**)(uint64_t (*)(uint64_t), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                         + *v17
                                                                         + 152);
  id v20 = v13;
  id v21 = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  v19(partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:), v18);
  swift_release();

  swift_unknownObjectRelease();
}

uint64_t EmergencyCountdownBuilder.getButtonCommands()()
{
  uint64_t v1 = type metadata accessor for CommonDirectAction();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v13[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  uint64_t v4 = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
  if (*(unsigned char *)(v0 + 72) == 1)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 64);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 32), v6);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v13, v6, v5);
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SKIDirectInvocationPayload);
    CommonDirectAction.identifier.getter();
    id v7 = SKIDirectInvocationPayload.__allocating_init(identifier:)();
    uint64_t v8 = CommonDirectAction.userData.getter();
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v8);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v10, v7);
    SKIDirectInvocationPayload.toStartLocalRequest(deviceState:)(v13);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    outlined destroy of CommonDirectAction((uint64_t)v3);
  }
  else
  {
    if (one-time initialization token for cancelUtterance != -1) {
      swift_once();
    }
    static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)();
  }
  return v4;
}

uint64_t closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a7;
  uint64_t v26 = a4;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  outlined init with copy of EmergencyCountdownBuilder((uint64_t)a2, (uint64_t)__src);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (v15 + v14 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  outlined init with take of AnnotatedApp?((uint64_t)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v15, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  memcpy((void *)(v17 + ((v15 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)), __src, 0x49uLL);
  *(void *)(v17 + v16) = a3;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v25;
  CFTypeRef v18 = (void *)*a2;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = partial apply for closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:);
  v19[3] = v17;
  id v20 = v26;
  v19[4] = a3;
  v19[5] = v20;
  id v21 = *(void (**)(void (*)(uint64_t), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                      + *v18
                                                                      + 144);
  id v22 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v23 = v20;
  v21(partial apply for closure #1 in EmergencyCountdownBuilder.getSideBySideButtons(callAction:cancelAction:_:), v19);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  uint64_t v4 = _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSaySo9SAAceViewCGTg5((void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:));
  char v6 = v5 & 1;
  a3(v4, v5 & 1);
  return outlined consume of Result<[SAAceView], Error>(v4, v6);
}

void closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  char v6 = a1;
  if (a2)
  {
    swift_errorRetain();
  }
  else
  {
    uint64_t v11 = a1;
    outlined copy of Result<SABaseCommand, Error>(a1, 0);
    closure #1 in closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(&v11, a3, a4, (uint64_t *)&v10);
    outlined consume of Result<SABaseCommand, Error>(v6, 0);
    char v6 = v10;
  }
  *(void *)a5 = v6;
  *(unsigned char *)(a5 + 8) = a2 & 1;
}

void closure #1 in closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  id v7 = *a1;
  uint64_t v8 = (void *)TemplatingResult.print.getter();
  if (v8[2])
  {
    uint64_t v9 = v8[4];
    uint64_t v10 = v8[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v11 = EmergencyCountdownBuilder.makeCountdownItem(sashTitle:callAction:)(v9, v10, a3);
    swift_bridgeObjectRelease();
    id v12 = [objc_allocWithZone((Class)SASTItemGroup) init];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_469DA0;
    *(void *)(v13 + 32) = v11;
    *(void *)(v13 + 40) = v7;
    v20[0] = v13;
    specialized Array._endMutation()();
    id v14 = v11;
    id v15 = v7;
    outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(v20[0], (uint64_t)v12);
    type metadata accessor for SiriKitAceViewBuilder();
    unint64_t v16 = a2 + 4;
    uint64_t v18 = a2[7];
    uint64_t v17 = a2[8];
    __swift_project_boxed_opaque_existential_1(v16, v18);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v20, v18, v17);
    dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)();
    swift_release();
    dispatch thunk of SiriKitAceViewBuilder.addButtonGroup(buttonGroup:)();
    swift_release();
    uint64_t v19 = dispatch thunk of SiriKitAceViewBuilder.build()();
    swift_release();

    *a4 = v19;
  }
  else
  {
    __break(1u);
  }
}

id EmergencyCountdownBuilder.makeCountdownItem(sashTitle:callAction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)SASTCountdownTimerItem) init];
  [v6 setAction:a3];
  [v6 setActionDelayInSeconds:5];
  id v7 = (void *)static ColorFactory.white.getter();
  [v6 setBodyBackgroundColor:v7];

  uint64_t v8 = (void *)static ColorFactory.black.getter();
  [v6 setCountdownTextColor:v8];

  uint64_t v9 = (void *)static ColorFactory.white.getter();
  [v6 setHeaderBackgroundColor:v9];

  outlined bridged method (mbgnn) of @objc SASTCountdownTimerItem.headerText.setter(a1, a2, v6);
  uint64_t v10 = (void *)static ColorFactory.emergencyRed.getter();
  [v6 setHeaderTextColor:v10];

  return v6;
}

uint64_t EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [objc_allocWithZone((Class)SAPhoneCallEmergencySnippet) init];
  [v8 setCountDownSeconds:5];
  uint64_t v9 = (void *)static ColorFactory.emergencyRed.getter();
  OUTLINED_FUNCTION_1_2((uint64_t)v9, "setHeaderTextColor:");

  uint64_t v10 = (void *)static ColorFactory.white.getter();
  OUTLINED_FUNCTION_1_2((uint64_t)v10, "setHeaderBackgroundColor:");

  id v11 = (void *)static ColorFactory.black.getter();
  OUTLINED_FUNCTION_1_2((uint64_t)v11, "setBodyTextColor:");

  id v12 = (void *)static ColorFactory.white.getter();
  OUTLINED_FUNCTION_1_2((uint64_t)v12, "setBodyBackgroundColor:");

  outlined init with copy of EmergencyCountdownBuilder((uint64_t)v4, (uint64_t)__src);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = v8;
  memcpy(v13 + 5, __src, 0x49uLL);
  v13[15] = a1;
  id v14 = (void *)*v4;
  outlined init with copy of EmergencyCountdownBuilder((uint64_t)v4, (uint64_t)v19);
  id v15 = (void *)swift_allocObject();
  memcpy(v15 + 2, v19, 0x49uLL);
  v15[12] = partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:);
  v15[13] = v13;
  unint64_t v16 = *(void (**)(uint64_t (*)(), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                  + *v14
                                                                  + 144);
  swift_retain();
  id v17 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  v16(closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)partial apply, v15);
  swift_release();

  return swift_release();
}

uint64_t closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:)(void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, void *a5, void *a6)
{
  id v7 = a1;
  uint64_t v8 = a2 & 1;
  if (a2)
  {
    swift_errorRetain();
  }
  else
  {
    [a5 setConfirmationOptions:a1];
    type metadata accessor for SiriKitAceViewBuilder();
    uint64_t v10 = a6[7];
    uint64_t v11 = a6[8];
    __swift_project_boxed_opaque_existential_1(a6 + 4, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v14, v10, v11);
    dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)();
    swift_release();
    dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)();
    swift_release();
    uint64_t v12 = dispatch thunk of SiriKitAceViewBuilder.build()();
    swift_release();
    outlined consume of Result<SABaseCommand, Error>(v7, 0);
    id v7 = (void *)v12;
  }
  a3(v7, v8);
  return outlined consume of Result<[SAAceView], Error>((uint64_t)v7, v8);
}

uint64_t EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)static CasinoFactory.makePlaceholderCardSection()();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SACardSnippet);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_46A030;
  *(void *)(v8 + 32) = v7;
  v17[0] = v8;
  specialized Array._endMutation()();
  id v9 = v7;
  uint64_t v10 = (void *)static SACardSnippet.makeFromCardSectionsWithIntentData(cardSections:intent:intentResponse:shouldGenerateAceId:)();
  swift_bridgeObjectRelease();
  outlined init with copy of EmergencyCountdownBuilder((uint64_t)v3, (uint64_t)v17);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = v10;
  memcpy(v11 + 5, v17, 0x49uLL);
  v11[15] = a1;
  uint64_t v12 = (void *)*v3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:);
  *(void *)(v13 + 24) = v11;
  id v14 = *(void (**)(void *(*)(uint64_t), uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                        + *v12
                                                                        + 152);
  swift_retain();
  id v15 = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  v14(partial apply for closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:), v13);
  swift_release();

  return swift_release();
}

uint64_t closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  if (a3)
  {
    swift_errorRetain();
    a4(a1, 1);
    return outlined consume of Result<String, Error>(a1, a2, 1);
  }
  else
  {
    id v15 = [objc_allocWithZone((Class)SAUISash) init];
    unint64_t v16 = (void *)static ColorFactory.emergencyRed.getter();
    [v15 setBackgroundColor:v16];

    id v17 = (void *)static ColorFactory.white.getter();
    [v15 setTextColor:v17];

    outlined bridged method (mbgnn) of @objc SAUISash.title.setter(a1, a2, v15);
    [a6 setSash:v15];
    outlined init with copy of EmergencyCountdownBuilder((uint64_t)a7, (uint64_t)__src);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = a4;
    v18[3] = a5;
    v18[4] = a6;
    memcpy(v18 + 5, __src, 0x49uLL);
    v18[15] = a8;
    uint64_t v19 = (void *)*a7;
    outlined init with copy of EmergencyCountdownBuilder((uint64_t)a7, (uint64_t)v24);
    id v20 = (void *)swift_allocObject();
    memcpy(v20 + 2, v24, 0x49uLL);
    v20[12] = partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:);
    v20[13] = v18;
    id v21 = *(void (**)(void (*)(uint64_t), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                        + *v19
                                                                        + 144);
    swift_retain();
    id v22 = a6;
    swift_bridgeObjectRetain();
    swift_retain();
    v21(partial apply for closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:), v20);
    swift_release();

    return swift_release();
  }
}

void closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, void *a5, void *a6)
{
  if (a2)
  {
    swift_errorRetain();
    a3(a1, 1);
    outlined consume of Result<SABaseCommand, Error>(a1, 1);
  }
  else
  {
    [a5 setConfirmationOptions:a1];
    type metadata accessor for SiriKitAceViewBuilder();
    uint64_t v9 = a6[7];
    uint64_t v10 = a6[8];
    __swift_project_boxed_opaque_existential_1(a6 + 4, v9);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v12, v9, v10);
    dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)();
    swift_release();
    dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)();
    swift_release();
    uint64_t v11 = dispatch thunk of SiriKitAceViewBuilder.build()();
    swift_release();
    a3((void *)v11, 0);
    swift_bridgeObjectRelease();
    outlined consume of Result<SABaseCommand, Error>(a1, 0);
  }
}

void *closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:)(uint64_t a1, void (*a2)(uint64_t, uint64_t, BOOL))
{
  uint64_t v4 = type metadata accessor for TemplatingResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = *v10;
LABEL_5:
    a2(v13, v12, EnumCaseMultiPayload == 1);
    return (void *)outlined consume of Result<String, Error>(v13, v12, EnumCaseMultiPayload == 1);
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
  uint64_t result = (void *)TemplatingResult.print.getter();
  if (result[2])
  {
    uint64_t v13 = result[4];
    uint64_t v12 = result[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)(uint64_t a1, uint64_t a2, void (*a3)(void *, void))
{
  uint64_t v5 = (void *)EmergencyCountdownBuilder.getButtonCommands()();
  uint64_t v7 = v6;
  id v8 = v5;
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)_ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo23SAUIConfirmationOptionsCTg50125_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV22getConfirmationOptionsyyys6a7OySo016f5T0Cs5E56_pGcFyAGySS4call_SS6canceltsAJ_pGcfU_AISSAL_SSAMt_tXEfU_So32SAIntentGroupLaunchAppWithIntentC9launchApp_So20SAClientBoundCommand_p0D7CommandtTf1cn_n(a1, v8, v7);
  char v11 = v10 & 1;
  a3(v9, v10 & 1);
  swift_unknownObjectRelease();

  outlined consume of Result<SABaseCommand, Error>(v9, v11);
}

id closure #1 in closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v27 = a1[2];
  uint64_t v26 = a1[3];
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUIConfirmationOption);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_46A030;
  *(void *)(v13 + 32) = a2;
  uint64_t v29 = v13;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  id v14 = a2;
  id v15 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v5, v6, v7, v9, v10, v12, v29);
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_46A030;
  *(void *)(v22 + 32) = a3;
  uint64_t v30 = v22;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v23 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v27, v26, v16, v18, v19, v21, v30);
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAUIConfirmationOptions);
  id result = SAUIConfirmationOptions.init(denyOption:confirmOption:)(v23, v15);
  *a4 = result;
  return result;
}

void closure #1 in EmergencyCountdownBuilder.getSideBySideButtons(callAction:cancelAction:_:)(uint64_t a1, void (*a2)(void *, void), uint64_t a3, void *a4, void *a5)
{
  uint64_t v6 = (void *)_ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo25SASTSideBySideButtonsItemCTg50101_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV09gethg66S7Buttons10callAction06cancelW0_ySo019SASTCommandTemplateW0C_AIys6a18OySo08SASTSidetsU4j3Cs5E51_pGctFyAKySS0V0_SS0X0tsAN_pGcfU_AMSSAP_SSAQt_tXEfU_So25SASTCommandTemplateActionCALTf1cn_n(a1, a4, a5);
  char v8 = v7 & 1;
  a2(v6, v7 & 1);

  outlined consume of Result<SABaseCommand, Error>(v6, v8);
}

_UNKNOWN **sub_1BD4A4()
{
  return &protocol witness table for EmergencyCountdownBuilder;
}

uint64_t destroy for EmergencyCountdownBuilder(uint64_t a1)
{
  swift_release();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

uint64_t initializeWithCopy for EmergencyCountdownBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a2 + 32;
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  swift_retain();
  id v11 = v5;
  id v12 = v6;
  v10(a1 + 32, v7, v9);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 24);
  long long v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void *__swift_memcpy73_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for EmergencyCountdownBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownBuilder(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownBuilder()
{
  return &type metadata for EmergencyCountdownBuilder;
}

uint64_t outlined init with copy of EmergencyCountdownBuilder(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, char a3)
{
  return closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(a1, a2, a3 & 1, *(void (**)(uint64_t, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), (void *)(v3 + 40), *(void *)(v3 + 120));
}

uint64_t sub_1BD7E4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void *partial apply for closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:)(uint64_t a1)
{
  return closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:)(a1, *(void (**)(uint64_t, uint64_t, BOOL))(v1 + 16));
}

uint64_t outlined consume of Result<String, Error>(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void outlined bridged method (mbgnn) of @objc SASTCountdownTimerItem.headerText.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setHeaderText:v4];
}

void outlined bridged method (mbgnn) of @objc SAUISash.title.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setTitle:v4];
}

uint64_t partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, char a2)
{
  return partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void *, void))closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:));
}

void partial apply for closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)(uint64_t a1)
{
  closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)(a1, v1 + 16, *(void (**)(void *, void))(v1 + 96));
}

uint64_t objectdestroyTm_12()
{
  swift_release();

  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 9));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:)(uint64_t a1, char a2)
{
  return partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void *, void))closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:));
}

uint64_t partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, void, void, void, void, void *, void))
{
  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3 + 5, v3[15]);
}

uint64_t objectdestroy_9Tm()
{
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1BDA20()
{
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 6));
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1)
{
  return closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(a1, (void *)(v1 + 16), *(void **)(v1 + 96), *(void **)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128));
}

uint64_t sub_1BDAAC()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>)
                 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    type metadata accessor for TemplatingResult();
    OUTLINED_FUNCTION_15();
    (*(void (**)(uint64_t))(v5 + 8))(v0 + v3);
  }
  uint64_t v6 = v3 + v4;
  unint64_t v7 = (v3 + v4 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v2 | 7;
  uint64_t v9 = v0 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v9 + 32);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v8);
}

uint64_t partial apply for closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, char a2)
{
  uint64_t v4 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v5 = *(void (**)(uint64_t, void))(v2 + 16);

  return closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(a1, v4, v5);
}

uint64_t sub_1BDCDC()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in EmergencyCountdownBuilder.getSideBySideButtons(callAction:cancelAction:_:)(uint64_t a1)
{
  closure #1 in EmergencyCountdownBuilder.getSideBySideButtons(callAction:cancelAction:_:)(a1, *(void (**)(void *, void))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

void outlined bridged method (mbnn) of @objc SASTSideBySideButtonsItem.buttonsViewStyle.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setButtonsViewStyle:v4];
}

void outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.primaryButtonLabel.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setPrimaryButtonLabel:v4];
}

void outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.secondaryButtonLabel.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setSecondaryButtonLabel:v4];
}

void partial apply for closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1@<X8>)
{
  closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(*(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), a1);
}

NSObject *static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = (void *)OUTLINED_FUNCTION_0_12(a1, a2, a3, a4, a5, a6);

  return specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(v6, v7, v8, v9, v10, v11, v12, v13);
}

NSObject *specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(void *a1, uint64_t a2, void *a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v59)(NSObject **__return_ptr, void *);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  NSObject *v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  NSObject *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void (*v79)(NSObject **__return_ptr, void *);
  void (*v80)(char *, uint64_t);
  NSObject *v81;
  Swift::Bool v82;
  uint64_t v83;
  int v84;
  NSObject *v85;
  os_log_type_t v86;
  int v87;
  uint64_t v88;
  NSObject *v89;
  NSObject *v90;
  NSObject *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  os_log_t v104;
  int v105;
  char v106;
  NSObject *v107;
  int v108;
  int v109;
  int v110;
  int v111;
  NSObject *v112;
  NSObject *v113;
  NSObject *v114;
  uint64_t v115;
  NSObject *v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  NSObject *v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  NSObject *v144;
  Swift::Bool v145;
  NSObject *v146;
  os_log_type_t v147;
  uint8_t *v148;
  void *v149;
  NSObject *v150;
  NSObject *v151;
  uint64_t v152;
  void (*v153)(uint64_t);
  void (*v154)(void);
  void (*v155)(void);
  void (*v156)(void);
  void (*v157)(void);
  NSObject *v158;
  uint64_t v159;
  void *v160;
  void (*v161)(long long *__return_ptr, NSObject **);
  NSObject *v162;
  os_log_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  NSObject *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184[2];
  NSObject *v185;
  long long v186;
  NSObject *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[5];
  uint64_t v191[5];

  v181 = a4;
  v177 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordFilter?>);
  OUTLINED_FUNCTION_0_0();
  v170 = v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v21);
  v179 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_0_0();
  v176 = v22;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v24);
  v180 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_0_0();
  v175 = v25;
  __chkstk_darwin(v26);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v27);
  v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallCapability>);
  OUTLINED_FUNCTION_0_0();
  v174 = v28;
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_13_29(v30);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_0_0();
  v173 = v32;
  __chkstk_darwin(v33);
  id v35 = (char *)&v158 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191[3] = a7;
  v191[4] = a8;
  v168 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v191);
  id v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16);
  v167 = boxed_opaque_existential_1;
  v37(boxed_opaque_existential_1, a6, a7);
  OUTLINED_FUNCTION_9_42();
  if (PhoneCallNLIntent.hasAnyConfirmation()())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    os_log_type_t v39 = v181;
    uint64_t v40 = v181;
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      v190[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315138;
      v187 = v39;
      unint64_t v44 = v40;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent?);
      uint64_t v45 = String.init<A>(describing:)();
      v187 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, v190);
      os_log_type_t v39 = v181;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v41, v42, "#INStartCallIntentConversion is confirmation, returning previousIntent: %s.", v43, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    uint64_t v66 = v40;
    goto LABEL_13;
  }
  v166 = v19;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  v171 = v31;
  uint64_t v47 = type metadata accessor for Logger();
  v169 = __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
  os_log_type_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl(&dword_0, v48, v49, "#INStartCallIntentConversion makeIntentFromParse called with NLv4IntentOnly", v50, 2u);
    OUTLINED_FUNCTION_6();
  }

  uint64_t v51 = a3[3];
  uint64_t v52 = a3[4];
  uint64_t v53 = __swift_project_boxed_opaque_existential_1(a3, v51);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v52 + 8))(v190, v51, v52);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)&v187);
  uint64_t v54 = swift_allocObject();
  OUTLINED_FUNCTION_6_47(v54);
  v53[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0);
  v172 = v35;
  Transformer.init(transform:)();
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)&v187);
  uint64_t v55 = swift_allocObject();
  OUTLINED_FUNCTION_6_47(v55);
  uint64_t v56 = v177;
  v53[7] = v177;
  type metadata accessor for INCallCapability(0);
  swift_retain();
  Transformer.init(transform:)();
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)&v187);
  uint64_t v57 = swift_allocObject();
  OUTLINED_FUNCTION_6_47(v57);
  v53[7] = v56;
  type metadata accessor for INPreferredCallProvider(0);
  swift_retain();
  Transformer.init(transform:)();
  type metadata accessor for INCallDestinationType(0);
  Transformer.init(transform:)();
  outlined init with copy of SignalProviding((uint64_t)v190, (uint64_t)&v187);
  outlined init with copy of SignalProviding((uint64_t)v191, (uint64_t)&v186);
  uint64_t v58 = swift_allocObject();
  OUTLINED_FUNCTION_6_47(v58);
  outlined init with take of AppSelectionSignalComponent(&v186, (uint64_t)(v53 + 7));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)();
  int v59 = (void (*)(NSObject **__return_ptr, void *))Transformer.transform.getter();
  v59(&v187, a1);
  swift_release();
  uint64_t v60 = (uint64_t)v187;
  Transformer.transform.getter();
  uint64_t v61 = OUTLINED_FUNCTION_5_47();
  v62(v61);
  swift_release();
  uint64_t v63 = v187;
  Transformer.transform.getter();
  uint64_t v64 = OUTLINED_FUNCTION_5_47();
  v65(v64);
  v163 = v63;
  v164 = v60;
  swift_release();
  v162 = v187;
  uint64_t v68 = a1[3];
  uint64_t v69 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v68);
  uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 128))(v68, v69);
  v165 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_bridgeObjectRetain();
  LODWORD(v165) = PhoneCallNLIntent.isEmergencyContactCall()();
  Transformer.transform.getter();
  uint64_t v71 = OUTLINED_FUNCTION_5_47();
  v72(v71);
  uint64_t v159 = v70;
  swift_release();
  v158 = v187;
  unint64_t v161 = (void (*)(long long *__return_ptr, NSObject **))Transformer.transform.getter();
  uint64_t v74 = v73;
  Swift::OpaquePointer v76 = a1[3];
  unint64_t v75 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v76);
  v187 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 136))(v76, v75);
  v160 = (void *)v74;
  v161(&v186, &v187);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v161 = (void (*)(long long *__return_ptr, NSObject **))v186;
  OUTLINED_FUNCTION_9_42();
  uint64_t v77 = PhoneCallNLIntent.getPersons()();
  uint64_t v78 = swift_allocObject();
  *(void *)(v78 + 16) = v164;
  *(void *)(v78 + 24) = v77;
  v160 = v77;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
  Transformer.init(transform:)();
  os_log_type_t v79 = (void (*)(NSObject **__return_ptr, void *))Transformer.transform.getter();
  OUTLINED_FUNCTION_11_4();
  v80(v17, v13);
  v79(&v187, a1);
  swift_release();
  uint64_t v81 = v187;
  type metadata accessor for INStartCallIntent();
  OUTLINED_FUNCTION_9_42();
  unint64_t v82 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  v185 = INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:isGroupCall:callGroups:)(v81, 0, (uint64_t)v158, (uint64_t)v162, (uint64_t)v163, (uint64_t)v160, 0, v164, v82, (uint64_t)v161);
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)&v187);
  unint64_t v83 = v159;
  uint64_t v84 = v177;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v85 = OUTLINED_FUNCTION_12_28();
  uint64_t v86 = static os_log_type_t.debug.getter();
  unint64_t v87 = v86;
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v88 = swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    v162 = v89;
    v170 = swift_slowAlloc();
    v184[0] = v170;
    *(_DWORD *)uint64_t v88 = 138413058;
    LODWORD(v164) = v87;
    swift_beginAccess();
    v163 = v85;
    v90 = v185;
    v183 = (uint64_t)v185;
    os_log_type_t v91 = v185;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v89->isa = (Class)v90;
    *(_WORD *)(v88 + 12) = 2080;
    uint64_t v92 = dispatch thunk of App.debugDescription.getter();
    uint64_t v94 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v92, v93, v184);
    OUTLINED_FUNCTION_8_54(v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 22) = 2080;
    unint64_t v161 = (void (*)(long long *__return_ptr, NSObject **))(v88 + 24);
    unint64_t v95 = v188;
    unint64_t v96 = v189;
    __swift_project_boxed_opaque_existential_1(&v187, v188);
    (*(void (**)(uint64_t, uint64_t))(v96 + 24))(v95, v96);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
    uint64_t v97 = Array.description.getter();
    uint64_t v99 = v98;
    swift_bridgeObjectRelease();
    uint64_t v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v97, v99, v184);
    OUTLINED_FUNCTION_8_54(v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
    *(_WORD *)(v88 + 32) = 2080;
    type metadata accessor for ContactQuery();
    uint64_t v101 = Array.debugDescription.getter();
    unint64_t v103 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v101, v102, v184);
    OUTLINED_FUNCTION_8_54(v103);
    uint64_t v84 = v177;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v104 = v163;
    _os_log_impl(&dword_0, v163, (os_log_type_t)v164, "#INStartCallIntentConversion Starts with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s", (uint8_t *)v88, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  uint64_t v105 = (int)v181;
  uint64_t v106 = (char)v165;
  swift_beginAccess();
  uint64_t v107 = v185;
  long long v112 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)((int)v107, (int)a3, v84, v105, v108, v109, v110, v111, v158, v159, (uint64_t)v160, (uint64_t)v161, (uint64_t)v162, (uint64_t)v163, v164, (uint64_t)v165, v166, (uint64_t)v167, v168,
                       v169,
                       v170,
                       v171,
                       (uint64_t)v172,
                       v173);

  unint64_t v113 = v185;
  v185 = v112;

  type metadata accessor for App();
  v114 = v112;
  App.appIdentifier.getter();
  v115 = App.__allocating_init(appIdentifier:)();
  specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)((uint64_t)v114, v83, v106 & 1, v115, a1, a3, (uint64_t)v167, a7, v168);

  swift_bridgeObjectRelease();
  swift_release();
  os_log_type_t v116 = v114;
  v117 = outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v116);
  uint64_t v118 = one-time initialization token for instance;
  uint64_t v119 = v116;
  if (v118 != -1) {
    swift_once();
  }
  uint64_t v120 = static EligibleAppFinder.instance;
  swift_retain();
  specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)(a3, v117, a1, 0, v120);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v121 = v190[4];
  uint64_t v122 = __swift_project_boxed_opaque_existential_1(v190, v190[3]);
  if (dispatch thunk of DeviceState.isXRDevice.getter())
  {
    v123 = v119;
    if (outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v123))
    {
      OUTLINED_FUNCTION_81_3();
      if (v125)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_23;
        }
      }
      else if (*(void *)(v124 + 16))
      {
LABEL_23:
        OUTLINED_FUNCTION_7_49();
        if (v121) {
          uint64_t v126 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v126 = (id)v122[4];
        }
        os_log_type_t v127 = v126;
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v119 = v123;
    if (outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v119))
    {
      OUTLINED_FUNCTION_81_3();
      if (v138)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_45;
        }
      }
      else if (*(void *)(v137 + 16))
      {
LABEL_45:
        OUTLINED_FUNCTION_7_49();
        if (v121) {
          uint64_t v139 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v139 = (id)v122[4];
        }
        uint64_t v140 = v139;
        swift_bridgeObjectRelease();
        if (!outlined bridged method (ob) of @objc INPerson.siriMatches.getter(v140)) {
          goto LABEL_56;
        }
        OUTLINED_FUNCTION_81_3();
        if (v142)
        {
          if (_CocoaArrayWrapper.endIndex.getter()) {
            goto LABEL_50;
          }
        }
        else if (*(void *)(v141 + 16))
        {
LABEL_50:
          OUTLINED_FUNCTION_7_49();
          if (v140) {
            v143 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            v143 = (id)v122[4];
          }
          os_log_type_t v127 = v143;
LABEL_26:
          swift_bridgeObjectRelease();
          v128 = outlined bridged method (pb) of @objc INPerson.sourceAppBundleIdentifier.getter(v127);
          if (v129)
          {
            uint64_t v130 = v129;
          }
          else
          {
            v128 = 0;
            uint64_t v130 = 0xE000000000000000;
          }
          unint64_t v131 = static PhoneReferenceResolution.getContactSourceType(contactSource:)(v128, v130);
          swift_bridgeObjectRelease();
          if (static PhoneReferenceResolution.isTelephonyTargetFromSrr(contactSourceType:)(v131))
          {
            v132 = OUTLINED_FUNCTION_12_28();
            v133 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v132, v133))
            {
              uint64_t v134 = (uint8_t *)swift_slowAlloc();
              v184[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v134 = 136315138;
              if (v131)
              {
                if (v131 == 1)
                {
                  v135 = 0x800000000048E760;
                  uint64_t v136 = 0xD000000000000012;
                }
                else
                {
                  v135 = 0xED00007465677261;
                  uint64_t v136 = 0x54746C7561666564;
                }
              }
              else
              {
                v135 = 0xEB00000000737365;
                uint64_t v136 = 0x6E69737542727273;
              }
              v183 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v136, v135, v184);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v132, v133, "#INStartCallIntentConversion detected Telephony target(%s from srr, update PreferredCallProvider to telephonyProvider", v134, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_6();
            }
            else
            {
            }
            uint64_t v119 = v185;
            INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(1);
          }
          else
          {

            uint64_t v119 = v123;
          }
          goto LABEL_56;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
LABEL_56:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v144 = v119;
  uint64_t v145 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  INStartCallIntent.updateIsGroupCall(isGroupCall:)(v145);

  uint64_t v146 = OUTLINED_FUNCTION_12_28();
  v147 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v146, v147))
  {
    v148 = (uint8_t *)swift_slowAlloc();
    uint64_t v149 = (void *)swift_slowAlloc();
    *(_DWORD *)v148 = 138412290;
    uint64_t v150 = v185;
    v184[0] = (uint64_t)v185;
    v151 = v185;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v149 = v150;
    _os_log_impl(&dword_0, v146, v147, "#INStartCallIntentConversion ends with %@", v148, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  v152 = OUTLINED_FUNCTION_14_28();
  v153(v152);
  OUTLINED_FUNCTION_1_63();
  v154();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_1_63();
  v155();
  OUTLINED_FUNCTION_1_63();
  v156();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_1_63();
  v157();
  os_log_type_t v39 = v185;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v190);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v191);
  return v39;
}

ValueMetadata *type metadata accessor for StartCallIntentConversion()
{
  return &type metadata for StartCallIntentConversion;
}

uint64_t sub_1BF428()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, (void *)(v2 + 16), *(void *)(v2 + 56), a2);
}

uint64_t sub_1BF4B0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1BF4F0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id partial apply for closure #1 in static Transformer<>.transformer(device:callCapability:participants:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return closure #1 in static Transformer<>.transformer(device:callCapability:participants:)(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t OUTLINED_FUNCTION_6_47(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((long long *)(v1 - 208), a1 + 16);
}

uint64_t OUTLINED_FUNCTION_7_49()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_8_54(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return v1 - 280;
}

uint64_t OUTLINED_FUNCTION_9_42()
{
  __swift_project_boxed_opaque_existential_1(v1, v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_28()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_13_29(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  return *(void *)(v0 - 296);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.__allocating_init(rchRecord:sharedGlobals:patterns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
  OUTLINED_FUNCTION_0_41();
  __chkstk_darwin(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_38(v5, v10);
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_8_55();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.rchRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_rchRecord;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  OUTLINED_FUNCTION_10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SharedGlobalsProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals, a1);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.patterns.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SharedGlobalsProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns, a1);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.init(rchRecord:sharedGlobals:patterns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
  OUTLINED_FUNCTION_0_41();
  __chkstk_darwin(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_38(v5, v10);
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_8_55();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(AddCallParticipantHandleIntentFollowUpFlow.execute(), 0, 0);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.execute()()
{
  uint64_t v21 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v1 = (void *)IntentResolutionRecord.intentResponse.getter();
  uint64_t v2 = (char *)[v1 code];

  if (v2 == (unsigned char *)&dword_0 + 3)
  {
    uint64_t v3 = (void *)IntentResolutionRecord.intentResponse.getter();
    unint64_t v4 = outlined bridged method (ob) of @objc INAddCallParticipantIntentResponse.invites.getter(v3, (SEL *)&selRef_invites, &lazy cache variable for type metadata for INCallInvite);
    if (v4)
    {
      unint64_t v5 = v4;
      if (v4 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter())
        {
LABEL_5:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v5 & 0xC000000000000001) == 0, v5);
          if ((v5 & 0xC000000000000001) != 0) {
            id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v6 = *(id *)(v5 + 32);
          }
          id v7 = v6;
          swift_bridgeObjectRelease();
          if ([v7 inviteType] == (char *)&dword_0 + 3)
          {
            uint64_t v8 = *(void *)(v0 + 24);
            id v7 = v7;
            AddCallParticipantHandleIntentFollowUpFlow.handleFaceTimeLinkInvite(linkInvite:)(v7, v8);

LABEL_19:
            goto LABEL_20;
          }
LABEL_18:
          AddCallParticipantHandleIntentFollowUpFlow.handleInvite()();
          goto LABEL_19;
        }
      }
      else if (*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8)))
      {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
    }
    id v7 = 0;
    goto LABEL_18;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = (void *)IntentResolutionRecord.intentResponse.getter();
    [v13 code];

    id v14 = (id)INAddCallParticipantIntentResponseCodeGetName();
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v10, v11, "#AddCallParticipantHandleIntentFollowUpFlow intentResponse code: %s, not doing anything - errors should be provided by HandleIntentFlow", v12, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  static ExecuteResponse.complete()();
LABEL_20:
  OUTLINED_FUNCTION_47_0();
  return v18();
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.handleFaceTimeLinkInvite(linkInvite:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v32)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void v44[12];
  unsigned char v45[176];
  long long v46;
  void v47[4];
  uint64_t v48;
  unsigned char v49[16];
  uint64_t v50;

  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CATOption();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v41 - v11;
  id v13 = [a1 callURL];
  if (v13)
  {
    id v14 = v13;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = type metadata accessor for URL();
    uint64_t v16 = (uint64_t)v10;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v15 = type metadata accessor for URL();
    uint64_t v16 = (uint64_t)v10;
    uint64_t v17 = 1;
  }
  __swift_storeEnumTagSinglePayload(v16, v17, 1, v15);
  outlined init with take of URL?((uint64_t)v10, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for URL?);
  type metadata accessor for URL();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v15) == 1)
  {
    outlined destroy of FlowActivity?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for URL?);
LABEL_20:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    id v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_0, v38, v39, "#AddCallParticipantHandleIntentFollowUpFlow: Invalid call invite", v40, 2u);
      OUTLINED_FUNCTION_6();
    }

    return static ExecuteResponse.complete()();
  }
  uint64_t v18 = URL.absoluteString.getter();
  uint64_t v20 = v19;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v21();
  unint64_t v22 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(a1);
  if (!v22)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v23 = v22;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
  if (!*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_9:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_0, v25, v26, "#AddCallParticipantHandleIntentFollowUpFlow: Attempting to send a message with FaceTime Link", v27, 2u);
    OUTLINED_FUNCTION_6();
  }
  unint64_t v41 = v18;
  os_log_type_t v42 = v20;
  uint64_t v43 = a2;

  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  memcpy(v45, &static PhoneCallFeatureFlags.instance, sizeof(v45));
  type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject();
  v47[1] = &type metadata for PhoneCallFeatureFlags;
  v47[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&unint64_t v46 = swift_allocObject();
  memcpy((void *)(v46 + 16), v45, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v46, inited + 16);
  uint64_t v29 = (void *)(v3
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
  uint64_t v30 = *(void *)(v3
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                  + 24);
  uint64_t v31 = v29[4];
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v32 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v31 + 8);
  outlined retain of PhoneCallFeatureFlags((uint64_t)v45);
  v32(v44, v30, v31);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v44, (uint64_t)&v46);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  uint64_t v50 = *((void *)&v46 + 1);
  uint64_t v33 = v46;
  outlined release of Set<String>((uint64_t)&v50);
  outlined init with take of URL?((uint64_t)v47, (uint64_t)v49, &demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v49);
  os_log_type_t v48 = v47[3];
  outlined release of Set<String>((uint64_t)&v48);
  type metadata accessor for MessagesFaceTimeLinkCompletionFlow(0);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v29, (uint64_t)v44);
  type metadata accessor for StartCallCATs();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v34 = CATWrapper.__allocating_init(options:globals:)();
  v44[0] = MessagesFaceTimeLinkCompletionFlow.__allocating_init(faceTimeLink:recipients:app:sharedGlobals:startCallCATs:)(v41, v42, v23, v33, (uint64_t)v44, v34);
  lazy protocol witness table accessor for type AddCallParticipantHandleIntentFollowUpFlow and conformance AddCallParticipantHandleIntentFollowUpFlow(&lazy protocol witness table cache variable for type MessagesFaceTimeLinkCompletionFlow and conformance MessagesFaceTimeLinkCompletionFlow, (void (*)(uint64_t))type metadata accessor for MessagesFaceTimeLinkCompletionFlow);
  static ExecuteResponse.complete<A>(next:)();
  swift_release();
  return swift_release();
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.handleInvite()()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                 + 24);
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0+ OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals), v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 16))(v9, v1, v2);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v8[3] = v3;
  v8[4] = v4;
  __swift_allocate_boxed_opaque_existential_1(v8);
  OUTLINED_FUNCTION_10();
  (*(void (**)(void))(v5 + 16))();
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  swift_retain();
  uint64_t v6 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  v9[0] = v6;
  static ExecuteResponse.complete<A>(next:)();
  return swift_release();
}

uint64_t closure #1 in AddCallParticipantHandleIntentFollowUpFlow.handleInvite()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()();
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()()
{
  OUTLINED_FUNCTION_1_0();
  v1[18] = v2;
  v1[19] = v0;
  type metadata accessor for DialogPhase();
  v1[20] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for OutputGenerationManifest();
  v1[21] = v3;
  OUTLINED_FUNCTION_19_0(v3);
  v1[22] = v4;
  v1[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Locale();
  v1[24] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[25] = v6;
  v1[26] = swift_task_alloc();
  return _swift_task_switch(AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  void *v32;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  unint64_t v38;
  uint64_t (*v39)(void, uint64_t (*)(uint64_t *), void *, uint64_t, uint64_t);
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;

  os_log_type_t v42 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    unint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[17] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001BLL, 0x8000000000495FE0, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v2, v3, "#AddCallParticipantHandleIntentFollowUpFlow %s", v4, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v5 = (void *)IntentResolutionRecord.intentResponse.getter();
  uint64_t v6 = outlined bridged method (ob) of @objc INAddCallParticipantIntentResponse.invites.getter(v5, (SEL *)&selRef_invites, &lazy cache variable for type metadata for INCallInvite);
  if (!v6) {
    goto LABEL_14;
  }
  uint64_t v7 = v6;
  if (!(v6 >> 62))
  {
    if (*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v9 = 0;
    goto LABEL_15;
  }
LABEL_8:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v7 & 0xC000000000000001) == 0, v7);
  if ((v7 & 0xC000000000000001) != 0) {
    uint64_t v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    uint64_t v8 = *(id *)(v7 + 32);
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = outlined bridged method (ob) of @objc INAddCallParticipantIntentResponse.invites.getter(v9, (SEL *)&selRef_participants, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  if (v10)
  {
    uint64_t v11 = v10;
    goto LABEL_16;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_16:
  v0[27] = v9;
  unint64_t v41 = (uint64_t)_swiftEmptyArrayStorage;
  if (v11 >> 62) {
    goto LABEL_35;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
  swift_retain();
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v34 = v9;
    uint64_t v9 = &metadata instantiation cache for protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory;
    if (!v12) {
      break;
    }
    uint64_t v36 = v0 + 2;
    uint64_t v40 = v0;
    id v13 = v0[19];
    uint64_t v38 = v11 & 0xC000000000000001;
    type metadata accessor for PhonePerson(0);
    id v14 = 0;
    id v35 = (void *)(v13
                   + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
    id v37 = (void *)v11;
    while (1)
    {
      uint64_t v15 = v38 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v11 + 8 * v14 + 32);
      uint64_t v16 = v15;
      uint64_t v0 = (void *)(v14 + 1);
      if (__OFADD__(v14, 1)) {
        break;
      }
      uint64_t v17 = v40[26];
      uint64_t v18 = v35[3];
      uint64_t v19 = v35[4];
      __swift_project_boxed_opaque_existential_1(v35, v18);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
      __swift_project_boxed_opaque_existential_1(v36, v40[5]);
      dispatch thunk of DeviceState.siriLocale.getter();
      uint64_t v9 = (void *)static PhonePerson.make(phonePerson:options:locale:)(v16, 0, v17);
      uint64_t v11 = (unint64_t)v37;
      OUTLINED_FUNCTION_11();
      v20();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);

      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v41 & 0xFFFFFFFFFFFFFF8)) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v14;
      if (v0 == (void *)v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v40;
        uint64_t v21 = (void *)v41;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_35:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = _swiftEmptyArrayStorage;
LABEL_31:
  v0[28] = v21;
  unint64_t v22 = v0[19];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v22
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns
                  + 24);
  uint64_t v24 = *(void *)(v22
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns
                  + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns), v23);
  uint64_t v25 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals;
  v0[29] = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals;
  os_log_type_t v26 = *(void *)(v22 + v25 + 24);
  uint64_t v27 = *(void *)(v22 + v25 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v22 + v25), v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
  uint64_t v28 = v0[10];
  uint64_t v29 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v28);
  uint64_t v30 = DeviceState.supportsOnlyFaceTimeCalls.getter(v28, v29);
  uint64_t v31 = (void *)swift_task_alloc();
  v0[30] = v31;
  v31[2] = v22;
  v31[3] = v34;
  v31[4] = v21;
  os_log_type_t v39 = (uint64_t (*)(void, uint64_t (*)(uint64_t *), void *, uint64_t, uint64_t))(*(void *)(v24 + 8) + **(int **)(v24 + 8));
  uint64_t v32 = (void *)swift_task_alloc();
  v0[31] = v32;
  *uint64_t v32 = v0;
  v32[1] = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  return v39(v30 & 1, partial apply for closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse(), v31, v23, v24);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v6;

  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = v1;
  *(void *)(v1 + 256) = v3;
  *(void *)(v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 56);
    uint64_t v4 = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  }
  return _swift_task_switch(v4, 0, 0);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  uint64_t v1 = (void *)(v0[19] + v0[29]);
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 12, v4);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[34] = v7;
  *uint64_t v7 = v0;
  v7[1] = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[23];
  uint64_t v10 = v0[18];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v10, v8, v9, v4, v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v3 = v2;
  *(void *)(v4 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  }
  else {
    uint64_t v5 = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  }
  return _swift_task_switch(v5, 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v5();
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  uint64_t v1 = *(void **)(v0 + 216);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v5();
}

uint64_t closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SirikitDeviceState();
  uint64_t v11 = *(void *)(a2
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                  + 24);
  uint64_t v12 = *(void *)(a2
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                  + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a2+ OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals), v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v28, v11, v12);
  uint64_t v13 = SirikitDeviceState.__allocating_init(from:)();
  swift_release();
  a1[1] = v13;
  type metadata accessor for PhoneCallInvite.Builder(0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v14 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v16 = type metadata accessor for SpeakableString();
  uint64_t v17 = 1;
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
  *(void *)(v14 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  if (a3)
  {
    if (![a3 inviteType]) {
      goto LABEL_13;
    }
    uint64_t BackingType = INCallInviteTypeGetBackingType();
    switch(BackingType)
    {
      case 3:
        uint64_t v19 = @"LINK";
        break;
      case 2:
        uint64_t v19 = @"RING";
        break;
      case 1:
        uint64_t v19 = @"ADD";
        break;
      default:
        uint64_t v19 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        goto LABEL_12;
    }
    uint64_t v20 = v19;
LABEL_12:
    uint64_t v21 = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_13:
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v17, 1, v16);
  uint64_t v22 = PhoneCallInvite.Builder.withInviteType(_:)((uint64_t)v10);
  swift_release();
  outlined destroy of FlowActivity?((uint64_t)v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 176))(a4);
  uint64_t v24 = swift_release();
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)v23 + 184))(v24);
  swift_release();
  uint64_t result = swift_release();
  *a1 = v25;
  return result;
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.deinit()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v1();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns);
  return v0;
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.__deallocating_deinit()
{
  AddCallParticipantHandleIntentFollowUpFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance AddCallParticipantHandleIntentFollowUpFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance AddCallParticipantHandleIntentFollowUpFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for Flow.execute() in conformance AddCallParticipantHandleIntentFollowUpFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 120) + **(int **)(**(void **)v1 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AddCallParticipantHandleIntentFollowUpFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t outlined bridged method (pb) of @objc INCallInvite.participants.getter(void *a1)
{
  id v1 = [a1 participants];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (ob) of @objc INAddCallParticipantIntentResponse.invites.getter(void *a1, SEL *a2, unint64_t *a3)
{
  id v5 = [a1 *a2];

  if (!v5) {
    return 0;
  }
  type metadata accessor for CNContactStore(0, a3);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

uint64_t specialized AddCallParticipantHandleIntentFollowUpFlow.init(rchRecord:sharedGlobals:patterns:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t *)(a4
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns);
  v11[3] = a5;
  v11[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  uint64_t v13 = a4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_rchRecord;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a1, v14);
  outlined init with take of AppSelectionSignalComponent(a2, a4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
  return a4;
}

uint64_t type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow()
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantHandleIntentFollowUpFlow;
  if (!type metadata singleton initialization cache for AddCallParticipantHandleIntentFollowUpFlow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ObjC metadata update function for AddCallParticipantHandleIntentFollowUpFlow()
{
  return type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow();
}

void type metadata completion function for AddCallParticipantHandleIntentFollowUpFlow()
{
  type metadata accessor for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>()
{
  if (!lazy cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>)
  {
    type metadata accessor for CNContactStore(255, (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent);
    type metadata accessor for CNContactStore(255, &lazy cache variable for type metadata for INAddCallParticipantIntentResponse);
    unint64_t v0 = type metadata accessor for IntentResolutionRecord();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
    }
  }
}

uint64_t partial apply for closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()(uint64_t *a1)
{
  return closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C1904()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t outlined init with take of URL?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t lazy protocol witness table accessor for type AddCallParticipantHandleIntentFollowUpFlow and conformance AddCallParticipantHandleIntentFollowUpFlow(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in AddCallParticipantHandleIntentFollowUpFlow.handleInvite()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in AddCallParticipantHandleIntentFollowUpFlow.handleInvite()();
}

uint64_t OUTLINED_FUNCTION_8_55()
{
  return specialized AddCallParticipantHandleIntentFollowUpFlow.init(rchRecord:sharedGlobals:patterns:)(v2, v1, v5, v0, v3, v4);
}

INPerson __swiftcall INPerson.with(alternatives:)(Swift::OpaquePointer alternatives)
{
  outlined bridged method (mbgnn) of @objc INPerson.alternatives.setter((uint64_t)alternatives._rawValue, v1);

  return (INPerson)v3;
}

uint64_t INPerson.hasNameComponents.getter()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = OUTLINED_FUNCTION_38_12();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_27();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_46_9();
  id v10 = [v0 nameComponents];
  if (!v10)
  {
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v5);
    goto LABEL_12;
  }
  uint64_t v11 = v10;
  static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v12(v1, v2, v5);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v5);
  if (__swift_getEnumTagSinglePayload(v1, 1, v5) == 1)
  {
LABEL_12:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for PersonNameComponents?);
    return 0;
  }
  uint64_t v13 = OUTLINED_FUNCTION_75();
  ((void (*)(uint64_t))v12)(v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_469650;
  *(void *)(inited + 32) = PersonNameComponents.givenName.getter();
  *(void *)(inited + 40) = v15;
  *(void *)(inited + 48) = PersonNameComponents.middleName.getter();
  *(void *)(inited + 56) = v16;
  *(void *)(inited + 64) = PersonNameComponents.familyName.getter();
  *(void *)(inited + 72) = v17;
  uint64_t v18 = PersonNameComponents.nickname.getter();
  uint64_t v19 = 0;
  *(void *)(inited + 80) = v18;
  *(void *)(inited + 88) = v20;
  while (1)
  {
    unint64_t v21 = *(void *)(inited + v19 + 40);
    if (v21)
    {
      if ((v21 & 0x2000000000000000) != 0 ? HIBYTE(v21) & 0xF : *(void *)(inited + v19 + 32) & 0xFFFFFFFFFFFFLL) {
        break;
      }
    }
    v19 += 16;
    if (v19 == 64)
    {
      uint64_t v23 = 0;
      goto LABEL_14;
    }
  }
  uint64_t v23 = 1;
LABEL_14:
  uint64_t v24 = OUTLINED_FUNCTION_96();
  v25(v24);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit(&demangling cache variable for type metadata for String?);
  return v23;
}

id static INPlayVoicemailIntent.makeFirstPartyHandleIntent(identifier:)()
{
  objc_allocWithZone((Class)INPlayVoicemailIntent);
  swift_bridgeObjectRetain();
  uint64_t v0 = OUTLINED_FUNCTION_96();
  id v2 = @nonobjc INPlayVoicemailIntent.init(callRecordIdentifier:)(v0, v1);
  id v3 = [objc_allocWithZone((Class)_INPBIntentMetadata) init];
  uint64_t v4 = v3;
  if (v3)
  {
    uint64_t v5 = one-time initialization token for inCallServiceLaunchId;
    id v6 = v3;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = static PhoneCallAppNameConstants.inCallServiceLaunchId;
    uint64_t v8 = unk_5D4E20;
    swift_bridgeObjectRetain();
    outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.launchId.setter(v7, v8, v6);

    swift_bridgeObjectRelease();
    id v9 = v6;
    outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.systemExtensionBundleId.setter(0xD00000000000002FLL, 0x8000000000496030, v9);
  }
  [v2 _setMetadata:v4];
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAIntentGroupHandleIntent);
  id v10 = v2;
  id v11 = SAIntentGroupHandleIntent.init(intent:appIdentifier:)(v10, 0, 0);

  return v11;
}

unint64_t FollowUpOfferType.rawValue.getter(char a1)
{
  unint64_t result = 1162760014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x4C41435F44414552;
      break;
    default:
      return result;
  }
  return result;
}

void INSearchCallHistoryIntent.isSingleDateRequest.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v4 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_27();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_23_21();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_29_19();
  __chkstk_darwin(v9);
  id v11 = (char *)&v38 - v10;
  uint64_t v12 = type metadata accessor for Date();
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_46_0();
  uint64_t v18 = (char *)(v16 - v17);
  __chkstk_darwin(v19);
  unint64_t v21 = (char *)&v38 - v20;
  id v22 = [v4 dateCreated];
  if (!v22)
  {
    uint64_t v26 = OUTLINED_FUNCTION_54_10();
    OUTLINED_FUNCTION_67_6(v26, v27);
LABEL_7:
    uint64_t v30 = (uint64_t)v11;
    goto LABEL_15;
  }
  uint64_t v23 = v22;
  os_log_type_t v39 = v18;
  id v24 = [v22 startDate];

  if (v24)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  OUTLINED_FUNCTION_67_6(v3, v25);
  outlined init with take of AnnotatedApp?(v3, (uint64_t)v11, &demangling cache variable for type metadata for Date?);
  uint64_t v28 = OUTLINED_FUNCTION_54_10();
  if (__swift_getEnumTagSinglePayload(v28, v29, v12) == 1) {
    goto LABEL_7;
  }
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v31(v21, v11, v12);
  id v32 = [v4 dateCreated];
  if (v32)
  {
    uint64_t v33 = v32;
    id v34 = [v32 endDate];

    if (v34)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 1;
    }
    OUTLINED_FUNCTION_67_6(v2, v35);
    outlined init with take of AnnotatedApp?(v2, v0, &demangling cache variable for type metadata for Date?);
    if (__swift_getEnumTagSinglePayload(v0, 1, v12) != 1)
    {
      v31(v39, (char *)v0, v12);
      static Date.== infix(_:_:)();
      id v37 = *(void (**)(void))(v14 + 8);
      OUTLINED_FUNCTION_53_9();
      v37();
      OUTLINED_FUNCTION_53_9();
      v37();
      goto LABEL_16;
    }
  }
  else
  {
    OUTLINED_FUNCTION_67_6(v0, 1);
  }
  OUTLINED_FUNCTION_53_9();
  v36();
  uint64_t v30 = v0;
LABEL_15:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v30, &demangling cache variable for type metadata for Date?);
LABEL_16:
  OUTLINED_FUNCTION_26_1();
}

uint64_t INSearchCallHistoryIntent.isTimeRangeRequest.getter()
{
  id v1 = [v0 dateCreated];
  id v2 = [v1 allDay];

  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  v3.super.super.isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
  if (v2)
  {
    id v4 = v2;
    char v5 = static NSObject.== infix(_:_:)();
  }
  else
  {
    char v5 = 0;
  }

  return v5 & 1;
}

unint64_t INSearchCallHistoryIntentResponse.newRecordsCount.getter()
{
  unint64_t result = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v0, (SEL *)&selRef_callRecords, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
  if (!result) {
    return 0;
  }
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    if (v3) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
  unint64_t result = OUTLINED_FUNCTION_72_7();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_4:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      char v7 = INCallRecord.unseen.getter();
      if (v7 != 2 && (v7 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        OUTLINED_FUNCTION_73_4();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_23;
    }
LABEL_19:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage[2];
LABEL_21:
      swift_release();
      return v8;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

unint64_t INSearchCallHistoryIntentResponse.savedRecordsCount.getter()
{
  unint64_t result = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v0, (SEL *)&selRef_callRecords, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
  if (!result) {
    return 0;
  }
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    if (v3) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
  unint64_t result = OUTLINED_FUNCTION_72_7();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_4:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      if INCallRecord.unseen.getter() != 2 && (INCallRecord.unseen.getter())
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        OUTLINED_FUNCTION_73_4();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_23;
    }
LABEL_19:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
      uint64_t v7 = _swiftEmptyArrayStorage[2];
LABEL_21:
      swift_release();
      return v7;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void *INIntent.parameterMetadata.getter()
{
  unint64_t v1 = outlined bridged method (ob) of @objc INIntentDescription.slotDescriptions()([v0 _intentInstanceDescription]);
  if (!v1)
  {
LABEL_23:
    __break(1u);
    unint64_t result = (void *)swift_release();
    __break(1u);
    return result;
  }
  if (v1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v12 = v2;
    specialized MutableCollection<>.sort(by:)(&v12);
    swift_bridgeObjectRelease();
    uint64_t v3 = v12;
    if (v12 < 0 || (v12 & 0x4000000000000000) != 0) {
      break;
    }
    uint64_t v4 = *(void *)(v12 + 16);
    if (!v4) {
      goto LABEL_19;
    }
LABEL_7:
    uint64_t v12 = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v4 < 0)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v5 = 0;
    while (v4 != v5)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v3 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v6, (SEL *)&selRef_name);
      if (!v8) {
        goto LABEL_22;
      }
      ++v5;
      [v7 resolveSelector];
      type metadata accessor for SiriKitParameterMetadata();
      swift_allocObject();
      SiriKitParameterMetadata.init(parameterName:shouldResolve:confirmationStates:)();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v4 == v5)
      {
        uint64_t v9 = v12;
        swift_release();
        return (void *)v9;
      }
    }
    __break(1u);
LABEL_17:
    unint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v10, (void (*)(void *, uint64_t, unint64_t))specialized Array._copyContents(initializing:));
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v4) {
    goto LABEL_7;
  }
LABEL_19:
  swift_release();
  return _swiftEmptyArrayStorage;
}

uint64_t INPreferredCallProvider.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = INPreferredCallProviderGetBackingType();
    switch(v1)
    {
      case 4:
        uint64_t v2 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v2 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v2 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v2 = +[NSString stringWithFormat:@"(unknown: %i)", v1];
        goto LABEL_11;
    }
    uint64_t v3 = v2;
LABEL_11:
    uint64_t v4 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_24_25();
    return OUTLINED_FUNCTION_96();
  }
  OUTLINED_FUNCTION_0_17();
  return OUTLINED_FUNCTION_96();
}

uint64_t INCallCapability.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallCapabilityGetBackingType();
    if (BackingType == 2)
    {
      uint64_t v2 = @"VIDEO_CALL";
    }
    else
    {
      if (BackingType != 1)
      {
        uint64_t v2 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        goto LABEL_9;
      }
      uint64_t v2 = @"AUDIO_CALL";
    }
    uint64_t v3 = v2;
LABEL_9:
    uint64_t v4 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_24_25();
    return OUTLINED_FUNCTION_96();
  }
  OUTLINED_FUNCTION_0_17();
  return OUTLINED_FUNCTION_96();
}

uint64_t INCallAudioRoute.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallAudioRouteGetBackingType();
    switch(BackingType)
    {
      case 4:
        uint64_t v2 = @"HEY_SIRI_AUDIO_ROUTE";
        break;
      case 3:
        uint64_t v2 = @"BLUETOOTH_AUDIO_ROUTE";
        break;
      case 2:
        uint64_t v2 = @"SPEAKERPHONE_AUDIO_ROUTE";
        break;
      default:
        uint64_t v2 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        goto LABEL_11;
    }
    uint64_t v3 = v2;
LABEL_11:
    uint64_t v4 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_24_25();
    return OUTLINED_FUNCTION_96();
  }
  OUTLINED_FUNCTION_0_17();
  return OUTLINED_FUNCTION_96();
}

uint64_t INCallDestinationType.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallDestinationTypeGetBackingType();
    switch((int)BackingType)
    {
      case 1:
        uint64_t v2 = @"NORMAL_DESTINATION";
        goto LABEL_10;
      case 2:
        uint64_t v2 = @"EMERGENCY_DESTINATION";
        goto LABEL_10;
      case 3:
        uint64_t v2 = @"VOICEMAIL_DESTINATION";
        goto LABEL_10;
      case 4:
        uint64_t v2 = @"REDIAL_DESTINATION";
        goto LABEL_10;
      case 5:
        uint64_t v2 = @"CALL_BACK_DESTINATION";
LABEL_10:
        uint64_t v3 = v2;
        break;
      default:
        uint64_t v2 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        break;
    }
    uint64_t v4 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_24_25();
  }
  else
  {
    OUTLINED_FUNCTION_0_17();
  }
  return OUTLINED_FUNCTION_96();
}

Swift::Bool __swiftcall INStartCallIntent.isGroupCall()()
{
  id v1 = [v0 isGroupCall];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
    char v4 = static NSObject.== infix(_:_:)();

    LOBYTE(v1) = v4 & 1;
  }
  return (char)v1;
}

uint64_t INPerson.buildDisplayImage(supportsCompactView:isDeviceLocked:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  if (a1)
  {
    if (a2)
    {
      uint64_t v5 = self;
      INPerson.toCNContact.getter();
      uint64_t v7 = v6;
      id v8 = [v5 stringFromContact:v6 style:1002];

      if (v8)
      {
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        *a3 = v9;
        a3[1] = v11;
        uint64_t v12 = (unsigned int *)&enum case for Image.monogram(_:);
        goto LABEL_12;
      }
      *a3 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_10;
    }
    id v13 = [v3 image];
    if (v13)
    {
      *a3 = (uint64_t)v13;
      uint64_t v12 = (unsigned int *)&enum case for Image.fromApp(_:);
      goto LABEL_12;
    }
    uint64_t v14 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v3);
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v17 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_467710;
      *(void *)(v18 + 32) = v16;
      *(void *)(v18 + 40) = v17;
      *a3 = v18;
LABEL_10:
      uint64_t v12 = (unsigned int *)&enum case for Image.contact(_:);
      goto LABEL_12;
    }
  }
  uint64_t v12 = (unsigned int *)&enum case for Image.none(_:);
LABEL_12:
  uint64_t v19 = *v12;
  type metadata accessor for Image();
  OUTLINED_FUNCTION_15();
  id v22 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v21 + 104);

  return v22(a3, v19, v20);
}

uint64_t INIntent.typed<A>(as:)()
{
  id v1 = v0;
  uint64_t v2 = swift_dynamicCastUnknownClass();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = v1;
  }
  else
  {
    id v6 = (id)INTypedIntentWithIntent();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v3 = swift_dynamicCastUnknownClass();
      if (!v3) {
    }
      }
    else
    {
      return 0;
    }
  }
  return v3;
}

INStartAudioCallIntent_optional __swiftcall INStartCallIntent.toStartAudioCallIntent()()
{
  id v1 = [objc_allocWithZone((Class)INStartAudioCallIntent) init];
  if (outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v0, (SEL *)&selRef_contacts, (unint64_t *)&lazy cache variable for type metadata for INPerson))
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v2.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.Class isa = 0;
  }
  [v1 setContacts:v2.super.isa];

  objc_msgSend(v1, "setDestinationType:", objc_msgSend(v0, "destinationType"));
  self;
  uint64_t v3 = (objc_class *)swift_dynamicCastObjCClass();
  if (!v3)
  {

    uint64_t v3 = 0;
  }
  result.value.super.super.Class isa = v3;
  result.is_nil = v4;
  return result;
}

uint64_t INSearchCallHistoryIntentResponse.callRecordsCount.getter()
{
  if (!outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v0, (SEL *)&selRef_callRecords, (unint64_t *)&lazy cache variable for type metadata for INCallRecord))return 0; {
  OUTLINED_FUNCTION_0_43();
  }
  if (v2) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)(v1 + 16);
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t INCallRecordTypeOptions.INPBStringRepresentation.getter()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v1 = (uint64_t *)(v0 + 16);
  v5[4] = OUTLINED_FUNCTION_9_28;
  v5[5] = v0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = thunk for @escaping @callee_guaranteed (@unowned _INPBCallRecordType) -> ();
  v5[3] = &block_descriptor_4;
  uint64_t v2 = _Block_copy(v5);
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_52_10();
  INCallRecordTypeOptionsEnumerateBackingTypes();
  _Block_release(v2);
  OUTLINED_FUNCTION_62_9();
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  swift_release();
  return v3;
}

uint64_t INCallCapabilityOptions.INPBStringRepresentation.getter()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v1 = (uint64_t *)(v0 + 16);
  v5[4] = OUTLINED_FUNCTION_10_20;
  v5[5] = v0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = thunk for @escaping @callee_guaranteed (@unowned _INPBCallCapability) -> ();
  v5[3] = &block_descriptor_4_0;
  uint64_t v2 = _Block_copy(v5);
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_52_10();
  INCallCapabilityOptionsEnumerateBackingTypes();
  _Block_release(v2);
  OUTLINED_FUNCTION_62_9();
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  swift_release();
  return v3;
}

BOOL INPerson.hasHandleLabel.getter()
{
  id v1 = [v0 personHandle];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 label];

    if (v3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_24_25();
    }
  }
  uint64_t v4 = OUTLINED_FUNCTION_96();
  char v6 = specialized Optional<A>.isNilOrEmpty.getter(v4, v5);
  swift_bridgeObjectRelease();
  return (v6 & 1) == 0;
}

void INPersonRelationship.toSpeakableString(startCallCats:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v4 = v3;
  uint64_t v30 = v5;
  type metadata accessor for TemplatingResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v28 = v7;
  uint64_t v29 = v6;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_23_21();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<SpeakableString, Error>);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_17_21();
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v28 - v18);
  INPersonRelationship.nlString.getter();
  SpeakableString.init(print:speak:)();
  uint64_t v20 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_68_2();
  (*(void (**)(char *))(class metadata base offset for StartCallCATs + *v4 + 1464))(v11);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v11, &demangling cache variable for type metadata for SpeakableString?);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0((uint64_t)v15, (uint64_t)v0, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v19 = *v0;
  }
  else
  {
    uint64_t v21 = v28;
    id v22 = v0;
    uint64_t v23 = v29;
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v1, v22, v29);
    closure #1 in INPersonRelationship.toSpeakableString(startCallCats:)();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v23);
  }
  swift_storeEnumTagMultiPayload();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v15, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0((uint64_t)v19, (uint64_t)v2, &demangling cache variable for type metadata for Result<SpeakableString, Error>);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v25 = v30;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v31 = *v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    swift_willThrowTypedImpl();
    swift_errorRelease();
    uint64_t v26 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_10();
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v27 + 32))(v25, v2, v20);
    uint64_t v26 = 0;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v19, &demangling cache variable for type metadata for Result<SpeakableString, Error>);
  __swift_storeEnumTagSinglePayload(v25, v26, 1, v20);
  OUTLINED_FUNCTION_26_1();
}

unint64_t INSearchCallHistoryIntent.isPlayVoicemailIntent.getter()
{
  return ((unint64_t)[v0 callTypes] >> 4) & 1;
}

uint64_t INIntent.typedOrThrow<A>(as:)()
{
  type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_4();
  uint64_t v3 = v2 - v1;
  uint64_t result = INIntent.typed<A>(as:)();
  if (!result)
  {
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v5);
    outlined destroy of PhoneError(v3);
    return swift_willThrow();
  }
  return result;
}

void INSearchCallHistoryIntentResponse.totalCallRecordsCount.getter()
{
  unint64_t v1 = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v0, (SEL *)&selRef_callRecords, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
  unint64_t v2 = v1;
  if (!v1) {
    return;
  }
  if (v1 >> 62)
  {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    if (v3)
    {
LABEL_4:
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v3 < 0)
      {
LABEL_24:
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v3; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v2 + 8 * i + 32);
        }
        uint64_t v6 = v5;
        uint64_t v7 = INCallRecord.numberOfCalls.getter();
        char v9 = v8;

        if (v9) {
          uint64_t v10 = 1;
        }
        else {
          uint64_t v10 = v7;
        }
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        _swiftEmptyArrayStorage[2] = v11 + 1;
        _swiftEmptyArrayStorage[v11 + 4] = v10;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = _swiftEmptyArrayStorage[2];
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      uint64_t v15 = *v14++;
      BOOL v16 = __OFADD__(v13, v15);
      v13 += v15;
      if (v16) {
        break;
      }
      if (!--v12) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
LABEL_21:
  swift_bridgeObjectRelease();
}

INPerson __swiftcall INPerson.init(personHandle:)(INPersonHandle personHandle)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithPersonHandle:personHandle.super.isa nameComponents:0 displayName:0 image:0 contactIdentifier:0 customIdentifier:0];

  return (INPerson)v2;
}

BOOL INPerson.isProvidedByPlus.getter()
{
  return [v0 searchProvider] == (char *)&dword_0 + 1;
}

BOOL INStartCallIntent.isThirdPartyCallKitCallBack.getter()
{
  if ([v0 preferredCallProvider] != (char *)&dword_0 + 3) {
    return 0;
  }
  if ([v0 destinationType] == &dword_4) {
    return 1;
  }
  return [v0 destinationType] == (char *)&dword_4 + 1;
}

id INStartCallIntentResponse.thirdPartyCallKitCallBackBundleId.getter()
{
  id result = [v0 userActivity];
  if (result)
  {
    id v2 = result;
    id v3 = [result interaction];

    if (v3)
    {
      id v4 = [v3 intent];

      return (id)outlined bridged method (ob) of @objc INPersonHandle.value.getter(v4, (SEL *)&selRef_launchId);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t FollowUpOfferType.requiresConfirmation.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      char v3 = 0;
      if ((v2 & 1) == 0)
      {
        if (FollowUpOfferType.rawValue.getter(a1) == 0x4C41435F44414552 && v4 == 0xE90000000000004CLL) {
          goto LABEL_8;
        }
        char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        char v3 = v6 ^ 1;
      }
      break;
    default:
LABEL_8:
      swift_bridgeObjectRelease();
      char v3 = 0;
      break;
  }
  return v3 & 1;
}

id INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:isGroupCall:callGroups:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  if (a6)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    v17.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v17.super.Class isa = 0;
  }
  id v18 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithCallRecordFilter:a1 callRecordToCallBack:a2 audioRoute:a3 destinationType:a4 preferredCallProvider:a5 contacts:v17.super.isa ttyType:a7 callCapability:a8];

  id v19 = objc_allocWithZone((Class)NSNumber);
  id v20 = v18;
  id v21 = [v19 initWithBool:a9 & 1];
  [v20 setIsGroupCall:v21];

  if (a10)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INCallGroup);
    v22.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v22.super.Class isa = 0;
  }
  [v20 setCallGroups:v22.super.isa];

  return v20;
}

uint64_t INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(uint64_t a1)
{
  return INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(a1, 0xD000000000000015, 0x800000000048C170);
}

uint64_t INCallInviteType.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallInviteTypeGetBackingType();
    switch(BackingType)
    {
      case 3:
        char v2 = @"LINK";
        break;
      case 2:
        char v2 = @"RING";
        break;
      case 1:
        char v2 = @"ADD";
        break;
      default:
        char v2 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        goto LABEL_11;
    }
    char v3 = v2;
LABEL_11:
    uint64_t v4 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_24_25();
    return OUTLINED_FUNCTION_96();
  }
  OUTLINED_FUNCTION_0_17();
  return OUTLINED_FUNCTION_96();
}

id INIntent.copyMetadata(from:)(void *a1)
{
  id v1 = [a1 _metadata];
  [v3 _setMetadata:v1];

  return v3;
}

void INIntent.setPeerInfoMetadata(from:)(void *a1)
{
  char v2 = v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of PeerInfoProviding.getIdsIdentifier()();
  if (v4
    || (outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v1, (SEL *)&selRef__originatingDeviceIDSIdentifier), v5))
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  [v1 _setOriginatingDeviceIdsIdentifier:v6];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of PeerInfoProviding.getRapportEffectiveIdentifier()();
  if (v7
    || (outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v1, (SEL *)&selRef__originatingDeviceRapportEffectiveIdentifier), v8))
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  [v1 _setOriginatingDeviceRapportEffectiveIdentifier:v9];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  dispatch thunk of PeerInfoProviding.getMediaSystemIdentifier()();
  if (v10
    || (outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v1, (SEL *)&selRef__originatingDeviceRapportMediaSystemIdentifier), v11))
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = 0;
  }
  [v1 _setOriginatingDeviceRapportMediaSystemIdentifier:v12];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v13 = [objc_allocWithZone((Class)NSNumber) initWithBool:dispatch thunk of PeerInfoProviding.isOwnedByCurrentUser()() & 1];
  [v2 _setIsOwnedByCurrentUser:v13];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = dispatch thunk of PeerInfoProviding.getMediaRouteIdentifier()();
  if (v15)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    uint64_t v18 = outlined bridged method (pb) of @objc INIntent.airPlayRouteIds.getter(v2);
    if (v18 && (uint64_t v19 = *(void *)(v18 + 16), swift_bridgeObjectRelease(), v19))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_467710;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v17;
      outlined bridged method (mbnn) of @objc INIntent.airPlayRouteIds.setter(v20, v2);
    }
  }
}

void INIntent.setDeviceMetadata(from:)(void *a1)
{
  char v2 = v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  DeviceState.isPrimaryDisplayDisabled.getter();
  [v1 _setPrimaryDisplayDisabled:v4 & 1];
  id v5 = [v1 _metadata];
  if (v5)
  {
    NSString v6 = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    [v6 setIdiom:DeviceState.idiom.getter()];
  }
  id v7 = [v1 _metadata];
  if (v7 && (uint64_t v8 = v7, v9 = [v7 triggerMethod], v8, v9))
  {
    id v10 = [v2 _metadata];
    [v10 setTriggerMethod:v9];
  }
  else
  {
    id v10 = [v2 _metadata];
    if (!v10) {
      return;
    }
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    [v10 setTriggerMethod:DeviceState.triggerMethod.getter()];
  }
}

void INIntent.setAppMetadata(from:cachedApp:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  outlined init with take of AnnotatedApp?(a2, (uint64_t)v21, &demangling cache variable for type metadata for AnnotatedApp?);
  if (v21[0])
  {
    uint64_t v6 = v22;
    if (v22)
    {
      uint64_t v7 = v21[2];
      swift_bridgeObjectRetain();
LABEL_6:
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v7, v6, v3, (SEL *)&selRef__setLaunchId_);
      goto LABEL_8;
    }
  }
  if (!a1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v7 = App.appIdentifier.getter();
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_6;
  }
LABEL_8:
  outlined init with take of AnnotatedApp?(a2, (uint64_t)v20, &demangling cache variable for type metadata for AnnotatedApp?);
  if (v20[0])
  {
    uint64_t v9 = App.systemExtensionBundleId.getter();
    if (v10)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v10;
LABEL_13:
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v11, v12, v3, (SEL *)&selRef__setExtensionBundleId_);
      goto LABEL_15;
    }
  }
  if (!a1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v11 = App.systemExtensionBundleId.getter();
  uint64_t v12 = v13;
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_13;
  }
LABEL_15:
  outlined init with take of AnnotatedApp?(a2, (uint64_t)v19, &demangling cache variable for type metadata for AnnotatedApp?);
  if (v19[0])
  {
    uint64_t v14 = App.systemUIExtensionBundleId.getter();
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v17 = v15;
LABEL_20:
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v16, v17, v3, (SEL *)&selRef__setUiExtensionBundleId_);
      return;
    }
  }
  if (a1)
  {
    uint64_t v16 = App.systemUIExtensionBundleId.getter();
    uint64_t v17 = v18;
    swift_bridgeObjectRelease();
    if (!v17) {
      return;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
}

uint64_t INStartCallIntent.updateAudioRoute(audioRoute:)(uint64_t a1)
{
  return INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(a1, 0x756F526F69647561, 0xEA00000000006574);
}

uint64_t INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
  v7[3] = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  v7[0] = v5;
  NSObject.update(with:at:)((uint64_t)v7, a2, a3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t INStartCallIntent.updateCallCapability(callCapability:)(uint64_t a1)
{
  return INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(a1, 0x617061436C6C6163, 0xEE007974696C6962);
}

Swift::Void __swiftcall INStartCallIntent.overwriteCallGroups(newCallGroups:)(Swift::OpaquePointer newCallGroups)
{
  outlined bridged method (mbgnn) of @objc INStartCallIntent.callGroups.setter((uint64_t)newCallGroups._rawValue, v1, (unint64_t *)&lazy cache variable for type metadata for INCallGroup, (uint64_t)INCallGroup_ptr, (SEL *)&selRef_setCallGroups_);
  if ((unint64_t)newCallGroups._rawValue >> 62)
  {
    OUTLINED_FUNCTION_5_6();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + ((unint64_t)newCallGroups._rawValue & 0xFFFFFFFFFFFFFF8));
  }
  id v4 = [objc_allocWithZone((Class)NSNumber) initWithBool:v3 != 0];
  [v1 setIsGroupCall:v4];
}

void INStartCallIntent.setLaunchId(app:)()
{
  OUTLINED_FUNCTION_24_0();
  char v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_53();
  id v9 = [v0 _metadata];
  if (v9)
  {
    outlined bridged method (ob) of @objc INPersonHandle.value.getter(v9, (SEL *)&selRef_launchId);
    if (v10)
    {
      swift_bridgeObjectRelease();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
      unint64_t v44 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v44, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl(&dword_0, v44, v11, "launchId is already configured, nothing to do.", v12, 2u);
        OUTLINED_FUNCTION_6();
      }
      OUTLINED_FUNCTION_26_1();

      return;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_2_3(&dword_0, v18, v19, "No launchId configured for intent. Applying based on the resolved app.");
    OUTLINED_FUNCTION_6();
  }

  id v20 = [v2 _metadata];
  if (v20)
  {
    id v21 = v20;
    [v20 copy];

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for _INPBIntentMetadata);
    if (swift_dynamicCast())
    {
      id v22 = v45;
      goto LABEL_18;
    }
  }
  id v22 = [objc_allocWithZone((Class)_INPBIntentMetadata) init];
  if (v22)
  {
LABEL_18:
    if (v4)
    {
      uint64_t v23 = App.appIdentifier.getter();
      if (v24)
      {
        uint64_t v25 = v23;
        uint64_t v26 = v24;
        _StringGuts.grow(_:)(21);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_134();
        uint64_t v46 = v27;
        uint64_t v47 = v28;
        v29._uint64_t countAndFlagsBits = v25;
        v29._object = v26;
        String.append(_:)(v29);
        swift_bridgeObjectRelease();
        outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v46, v47, v22, (SEL *)&selRef_setLaunchId_);
      }
    }
    id v30 = v22;
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v34 = outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v30, (SEL *)&selRef_launchId);
      if (v35)
      {
        unint64_t v36 = v35;
      }
      else
      {
        uint64_t v34 = 0x3E6C696E3CLL;
        unint64_t v36 = 0xE500000000000000;
      }
      uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v46);
      OUTLINED_FUNCTION_60_7(v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v31, v32, "Updating intent metadata with app information: launchId=%s", v33, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    [v2 _setMetadata:v30];

    OUTLINED_FUNCTION_26_1();
    return;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v15, v5);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v38, v39))
  {
    swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    OUTLINED_FUNCTION_50_7(4.8149e-34);
    uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000024, v40, &v46);
    OUTLINED_FUNCTION_60_7(v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_9_27(&dword_0, v42, v43, "%s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)();
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_13_17();
  __break(1u);
}

Swift::Bool __swiftcall INStartCallIntent.isGroupFaceTimeCall()()
{
  if (INStartCallIntent.isGroupCall()()
    || !outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v0, (SEL *)&selRef_callGroups, (unint64_t *)&lazy cache variable for type metadata for INCallGroup))
  {
    Swift::Bool v4 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_0_43();
    if (v2) {
      uint64_t v3 = OUTLINED_FUNCTION_72_7();
    }
    else {
      uint64_t v3 = *(void *)(v1 + 16);
    }
    swift_bridgeObjectRelease();
    Swift::Bool v4 = v3 != 0;
  }
  return [v0 preferredCallProvider] == (char *)&dword_0 + 2 && v4;
}

void @nonobjc INStartCallIntent.callGroups.setter(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INCallGroup);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    Class isa = 0;
  }
  [v1 setCallGroups:isa];
}

void (*protocol witness for CallingIntent.callGroups.modify in conformance INStartCallIntent(uint64_t **a1))(void *a1)
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)INStartCallIntent.callGroups.modify(v2);
  return protocol witness for StaticAction.nextAction.modify in conformance PlayVoiceMailAction;
}

void (*INStartCallIntent.callGroups.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = (uint64_t)v1;
  *a1 = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v1, (SEL *)&selRef_callGroups, (unint64_t *)&lazy cache variable for type metadata for INCallGroup);
  return INStartCallIntent.callGroups.modify;
}

void INStartCallIntent.callGroups.modify(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  if (a2)
  {
    if (v3)
    {
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INCallGroup);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      Class isa = 0;
    }
    [(id)a1[1] setCallGroups:isa];
    swift_bridgeObjectRelease();
  }
  else if (v3)
  {
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INCallGroup);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [(id)a1[1] setCallGroups:isa];
  }
  else
  {
    Class isa = 0;
    [(id)a1[1] setCallGroups:0];
  }
}

uint64_t @nonobjc INStartCallIntent.faceTimeLink.getter()
{
  return outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v0, (SEL *)&selRef_faceTimeLink);
}

id @nonobjc INStartCallIntent.callRequestMetadata.getter()
{
  id v1 = [v0 callRequestMetadata];

  return v1;
}

void @nonobjc INStartCallIntent.callRequestMetadata.setter(void *a1)
{
  [v1 setCallRequestMetadata:a1];
}

void (*protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartCallIntent(void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = [v1 callRequestMetadata];
  return protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartCallIntent;
}

void protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartCallIntent(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[1], "setCallRequestMetadata:");
}

uint64_t (*protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartAudioCallIntent(void *a1))()
{
  a1[1] = v1;
  *a1 = [v1 callRequestMetadata];
  return protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartAudioCallIntent;
}

uint64_t @nonobjc INStartAudioCallIntent.contacts.getter()
{
  return outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v0);
}

uint64_t INStartAudioCallIntent.overwriteContacts(newContacts:)(uint64_t a1)
{
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  v4[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_45_4(inited, (__n128)xmmword_467710);
  swift_bridgeObjectRetain();
  NSObject.update(with:at:)((uint64_t)v4, (uint64_t)inited);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t INAddCallParticipantIntent.contacts.getter()
{
  return outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v0, (SEL *)&selRef_participants, (unint64_t *)&lazy cache variable for type metadata for INPerson);
}

Swift::Void __swiftcall INAddCallParticipantIntent.overwriteContacts(newContacts:)(Swift::OpaquePointer newContacts)
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v1 setParticipants:isa];
}

Swift::String __swiftcall INAddCallParticipantIntent.getContactsKeyPath()()
{
  uint64_t v0 = 0x7069636974726170;
  id v1 = (void *)0xEC00000073746E61;
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

id INSearchCallHistoryIntent.contacts.getter()
{
  id result = [v0 recipient];
  if (result)
  {
    id v2 = result;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_46A030;
    *(void *)(v3 + 32) = v2;
    uint64_t v4 = v3;
    specialized Array._endMutation()();
    return (id)v4;
  }
  return result;
}

Swift::Void __swiftcall INSearchCallHistoryIntent.overwriteContacts(newContacts:)(Swift::OpaquePointer newContacts)
{
  if ((unint64_t)newContacts._rawValue >> 62)
  {
    OUTLINED_FUNCTION_5_6();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return;
    }
  }
  else if (!*(void *)((char *)&dword_10 + ((unint64_t)newContacts._rawValue & 0xFFFFFFFFFFFFFF8)))
  {
    return;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, ((unint64_t)newContacts._rawValue & 0xC000000000000001) == 0, newContacts._rawValue);
  if (((unint64_t)newContacts._rawValue & 0xC000000000000001) != 0) {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v3 = *((id *)newContacts._rawValue + 4);
  }
  id v5 = v3;
  objc_msgSend(v1, "setRecipient:");
}

Swift::String __swiftcall INSearchCallHistoryIntent.getContactsKeyPath()()
{
  uint64_t v0 = 0x6E65697069636572;
  id v1 = (void *)0xE900000000000074;
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional __swiftcall FollowUpOfferType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of FollowUpOfferType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return (PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional)5;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance FollowUpOfferType()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance FollowUpOfferType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance FollowUpOfferType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance FollowUpOfferType(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance FollowUpOfferType@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional *a2@<X8>)
{
  result.value = FollowUpOfferType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance FollowUpOfferType@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FollowUpOfferType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id INAnswerCallIntentResponse.init(statusCode:callRecords:)(uint64_t a1, uint64_t a2)
{
  return INAnswerCallIntentResponse.init(statusCode:callRecords:)(a1, a2, 4);
}

Swift::Bool __swiftcall INAnswerCallIntentResponse.isSuccessCodeWithRingingCallRecord()()
{
  if ([v1 code] != &dword_4) {
    goto LABEL_10;
  }
  uint64_t v2 = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v1, (SEL *)&selRef_callRecords, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
  if (!v2) {
    return v2;
  }
  OUTLINED_FUNCTION_0_43();
  if (v4)
  {
    if (OUTLINED_FUNCTION_72_7()) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  if (!*(void *)(v3 + 16))
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    LOBYTE(v2) = 0;
    return v2;
  }
LABEL_5:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v0 & 0xC000000000000001) == 0);
  if ((v0 & 0xC000000000000001) != 0) {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v5 = *(id *)(v0 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = (char *)[v6 callRecordType];

  LOBYTE(v2) = v7 == (unsigned char *)&dword_4 + 2;
  return v2;
}

id INIdentifyIncomingCallerIntentResponse.init(statusCode:callRecords:)(uint64_t a1, uint64_t a2)
{
  return INAnswerCallIntentResponse.init(statusCode:callRecords:)(a1, a2, 3);
}

id INAnswerCallIntentResponse.init(statusCode:callRecords:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithCode:a3 userActivity:0];
  [v5 setStatusCode:a1];
  outlined bridged method (mbnn) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.setter(a2, v5);

  return v5;
}

BOOL INSearchCallHistoryIntentResponse.singleCallRecord.getter()
{
  return INSearchCallHistoryIntentResponse.callRecordsCount.getter() == 1;
}

INPerson __swiftcall INPerson.init(contactIdentifier:)(Swift::String contactIdentifier)
{
  object = contactIdentifier._object;
  uint64_t countAndFlagsBits = contactIdentifier._countAndFlagsBits;
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v4 = objc_allocWithZone((Class)INPersonHandle);
  id v5 = @nonobjc INPersonHandle.init(value:type:)(0, 0, 0);
  id v6 = outlined bridged method (mnnnnbnnn) of @objc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)((uint64_t)v5, 0, 0, 0, countAndFlagsBits, (uint64_t)object, 0, v3);

  return (INPerson)v6;
}

void *INPerson.base64Prefix.unsafeMutableAddressor()
{
  return &static INPerson.base64Prefix;
}

unint64_t static INPerson.base64Prefix.getter()
{
  return 0xD000000000000010;
}

id static INPerson.from(base64ContactId:)(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  OUTLINED_FUNCTION_134();
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_30_6();
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for NSData);
  v2._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_7_0();
  unint64_t v3 = (unint64_t)NSData.__allocating_init(base64Encoded:options:)(v2, 0);
  if (v3)
  {
    id v4 = (void *)v3;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v6 = objc_allocWithZone((Class)_INPBContactValue);
  uint64_t v7 = OUTLINED_FUNCTION_7_0();
  id v9 = @nonobjc _INPBContact.init(data:)(v7, v8);
  id v5 = (id)INIntentSlotValueTransformFromContactValue();

  return v5;
}

NSData_optional __swiftcall NSData.__allocating_init(base64Encoded:options:)(Swift::String base64Encoded, NSDataBase64DecodingOptions options)
{
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = (objc_class *)[v3 initWithBase64EncodedString:v4 options:options];

  uint64_t v7 = v5;
  result.value.super.Class isa = v7;
  result.is_nil = v6;
  return result;
}

Swift::String __swiftcall INPerson.toStartRequestUtterance()()
{
  type metadata accessor for MachineUtteranceBuilder();
  swift_allocObject();
  MachineUtteranceBuilder.init()();
  INPerson.asBase64()();
  dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = dispatch thunk of MachineUtteranceBuilder.build()();
  Swift::String v2 = v1;
  swift_release();
  uint64_t v3 = v0;
  NSString v4 = v2;
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

id INPerson.isEmergency.getter()
{
  id result = [v0 personHandle];
  if (result)
  {
    Swift::String v2 = result;
    id v3 = [result emergencyType];

    return (id)(v3 != 0);
  }
  return result;
}

INPerson __swiftcall INPerson.with(scoredAlternatives:)(Swift::OpaquePointer scoredAlternatives)
{
  outlined bridged method (mbgnn) of @objc INStartCallIntent.callGroups.setter((uint64_t)scoredAlternatives._rawValue, v1, (unint64_t *)&lazy cache variable for type metadata for INScoredPerson, (uint64_t)INScoredPerson_ptr, (SEL *)&selRef_setScoredAlternatives_);

  return (INPerson)v3;
}

void INPerson.isUnnamedPhoneNumber.getter()
{
  id v1 = [v0 personHandle];
  if (v1)
  {
    Swift::String v2 = v1;
    id v3 = (char *)[v1 type];

    if (v3 == (unsigned char *)&dword_0 + 2)
    {
      INPerson.isUnnamedHandle.getter();
    }
  }
}

void INPerson.isUnnamedHandle.getter()
{
  OUTLINED_FUNCTION_24_0();
  type metadata accessor for CharacterSet();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_39_12();
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_71_4();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_23_21();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_17_21();
  __chkstk_darwin(v7);
  id v9 = (char *)&v40 - v8;
  id v10 = [v0 personHandle];
  if (!v10) {
    goto LABEL_6;
  }
  os_log_type_t v11 = v10;
  uint64_t v45 = v2;
  uint64_t v12 = outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v10, (SEL *)&selRef_value);
  if (!v13)
  {

    goto LABEL_6;
  }
  uint64_t v14 = v12;
  unint64_t v15 = v13;
  if (INPerson.hasNameComponents.getter())
  {

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v50 = v14;
  uint64_t v16 = outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v0, (SEL *)&selRef__displayName);
  if (!v17)
  {
LABEL_47:
    swift_bridgeObjectRelease();

    goto LABEL_6;
  }
  uint64_t v18 = v16;
  unint64_t v19 = v17;
  uint64_t v20 = HIBYTE(v17) & 0xF;
  uint64_t v46 = v16 & 0xFFFFFFFFFFFFLL;
  uint64_t v47 = v20;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v20 = v16 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v48 = v20;
  unint64_t v49 = v15;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  if ([v11 type] == (char *)&dword_0 + 2)
  {
    CharacterSet.init(charactersIn:)();
    static CharacterSet.decimalDigits.getter();
    uint64_t v42 = v18;
    CharacterSet.union(_:)();
    uint64_t v43 = v9;
    id v21 = *(void (**)(void))(v45 + 8);
    OUTLINED_FUNCTION_7_50();
    v21();
    OUTLINED_FUNCTION_7_50();
    v21();
    static CharacterSet.controlCharacters.getter();
    CharacterSet.union(_:)();
    OUTLINED_FUNCTION_7_50();
    v21();
    OUTLINED_FUNCTION_7_50();
    v21();
    static CharacterSet.whitespacesAndNewlines.getter();
    id v22 = v43;
    CharacterSet.union(_:)();
    OUTLINED_FUNCTION_7_50();
    v21();
    OUTLINED_FUNCTION_7_50();
    uint64_t v23 = ((uint64_t (*)(void))v21)();
    __chkstk_darwin(v23);
    *(&v40 - 2) = (uint64_t)v22;
    swift_bridgeObjectRetain();
    uint64_t v24 = v42;
    char v25 = specialized Sequence.allSatisfy(_:)((uint64_t (*)(void *))partial apply for closure #1 in INPerson.isUnnamedHandle.getter, (uint64_t)(&v40 - 4), v42, v19);
    swift_bridgeObjectRelease();
    if (v25)
    {
      id v41 = v11;
      uint64_t v26 = 0;
      uint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      uint64_t v44 = (v19 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v45 = v19 & 0xFFFFFFFFFFFFFFLL;
      do
      {
        if ((v19 & 0x1000000000000000) != 0)
        {
          _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
        }
        else
        {
          if ((v19 & 0x2000000000000000) != 0)
          {
            uint64_t v51 = v24;
            uint64_t v52 = v45;
          }
          else if ((v24 & 0x1000000000000000) == 0)
          {
            _StringObject.sharedUTF8.getter();
          }
          _decodeScalar(_:startingAt:)();
        }
        uint64_t v28 = v27;
        static CharacterSet.decimalDigits.getter();
        char v29 = CharacterSet.contains(_:)();
        OUTLINED_FUNCTION_45_11();
        v21();
        if (v29) {
          String.UnicodeScalarView.append(_:)();
        }
        v26 += v28;
      }
      while (v26 < v48);
      swift_bridgeObjectRelease();
      uint64_t v44 = v53;
      uint64_t v45 = v54;
      uint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      unint64_t v30 = v49;
      uint64_t v47 = v50 & 0xFFFFFFFFFFFFLL;
      uint64_t v48 = HIBYTE(v49) & 0xF;
      if ((v49 & 0x2000000000000000) != 0) {
        uint64_t v31 = HIBYTE(v49) & 0xF;
      }
      else {
        uint64_t v31 = v50 & 0xFFFFFFFFFFFFLL;
      }
      if (v31)
      {
        uint64_t v32 = 0;
        uint64_t v46 = v49 & 0xFFFFFFFFFFFFFFLL;
        do
        {
          if ((v30 & 0x1000000000000000) != 0)
          {
            _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
          }
          else
          {
            if ((v30 & 0x2000000000000000) != 0)
            {
              uint64_t v51 = v50;
              uint64_t v52 = v46;
            }
            else if ((v50 & 0x1000000000000000) == 0)
            {
              _StringObject.sharedUTF8.getter();
            }
            _decodeScalar(_:startingAt:)();
          }
          uint64_t v34 = v33;
          static CharacterSet.decimalDigits.getter();
          char v35 = CharacterSet.contains(_:)();
          OUTLINED_FUNCTION_45_11();
          v21();
          if (v35) {
            String.UnicodeScalarView.append(_:)();
          }
          v32 += v34;
          unint64_t v30 = v49;
        }
        while (v32 < v31);
        swift_bridgeObjectRelease();
        uint64_t v36 = v53;
        unint64_t v37 = v54;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = 0;
        unint64_t v37 = 0xE000000000000000;
      }
      if (v44 != v36 || v45 != v37) {
        _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_45_11();
      v21();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_7_50();
      v21();
    }
  }
  else
  {
    if (v18 != v50 || v19 != v49) {
      _stringCompareWithSmolCheck(_:_:expecting:)();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_6:
  OUTLINED_FUNCTION_26_1();
}

void INPerson.isUnnamedUnknownHandle.getter()
{
  id v1 = [v0 personHandle];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 type];

    if (!v3)
    {
      INPerson.isUnnamedHandle.getter();
    }
  }
}

void INPerson.toCNContact.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v4 = v0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_27();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_39_12();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_17_21();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_46_9();
  id v10 = [objc_allocWithZone((Class)CNMutableContact) init];
  id v11 = [v0 nameComponents];
  if (v11)
  {
    uint64_t v12 = v11;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for PersonNameComponents();
    uint64_t v13 = v3;
    uint64_t v14 = 0;
  }
  else
  {
    type metadata accessor for PersonNameComponents();
    uint64_t v13 = OUTLINED_FUNCTION_54_10();
  }
  OUTLINED_FUNCTION_36_17(v13, v14);
  outlined init with take of AnnotatedApp?(v3, (uint64_t)v0, &demangling cache variable for type metadata for PersonNameComponents?);
  type metadata accessor for PersonNameComponents();
  if (OUTLINED_FUNCTION_35_18((uint64_t)v0))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v0, &demangling cache variable for type metadata for PersonNameComponents?);
  }
  else
  {
    PersonNameComponents.givenName.getter();
    uint64_t v16 = v15;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v0, &demangling cache variable for type metadata for PersonNameComponents?);
    if (v16) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setGivenName:v17];

  id v18 = [v4 nameComponents];
  if (v18)
  {
    unint64_t v19 = v18;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  OUTLINED_FUNCTION_36_17(v2, v20);
  outlined init with take of AnnotatedApp?(v2, v1, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_35_18(v1))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for PersonNameComponents?);
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  PersonNameComponents.familyName.getter();
  uint64_t v22 = v21;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for PersonNameComponents?);
  if (!v22) {
    goto LABEL_14;
  }
LABEL_15:
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setFamilyName:v23];

  OUTLINED_FUNCTION_26_1();
}

void INPerson.toIntentPerson.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v78 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_3_1();
  uint64_t v77 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentPerson.Handle?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_3_1();
  uint64_t v75 = v8;
  OUTLINED_FUNCTION_36();
  uint64_t v76 = type metadata accessor for IntentPerson.Name();
  OUTLINED_FUNCTION_0_0();
  uint64_t v74 = v9;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_8();
  uint64_t v72 = v11;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v12);
  uint64_t v70 = (uint64_t *)((char *)&v66 - v13);
  OUTLINED_FUNCTION_36();
  uint64_t v83 = type metadata accessor for IntentPerson.Identifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v73 = v14;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_5_8();
  uint64_t v82 = v16;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v17);
  uint64_t v68 = (uint64_t *)((char *)&v66 - v18);
  OUTLINED_FUNCTION_36();
  uint64_t v19 = type metadata accessor for IntentPerson.Handle.Label();
  OUTLINED_FUNCTION_0_0();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  OUTLINED_FUNCTION_4();
  uint64_t v25 = v24 - v23;
  uint64_t v71 = type metadata accessor for IntentPerson.Handle();
  OUTLINED_FUNCTION_0_0();
  uint64_t v69 = v26;
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_3_1();
  uint64_t v81 = v28;
  OUTLINED_FUNCTION_36();
  type metadata accessor for IntentPerson.Handle.Value();
  OUTLINED_FUNCTION_0_0();
  uint64_t v79 = v30;
  uint64_t v80 = v29;
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_46_0();
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)((char *)&v66 - v32);
  id v34 = [v0 personHandle];
  if (v34 && (uint64_t v35 = outlined bridged method (ob) of @objc INPersonHandle.value.getter(v34, (SEL *)&selRef_value), v36))
  {
    uint64_t v37 = v35;
    unint64_t v38 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
  }
  id v39 = [v1 personHandle];
  if (!v39) {
    goto LABEL_9;
  }
  uint64_t v40 = v39;
  uint64_t v41 = v19;
  uint64_t v42 = v1;
  uint64_t v43 = (char *)[v39 type];

  BOOL v44 = v43 == (unsigned char *)&dword_0 + 1;
  uint64_t v1 = v42;
  uint64_t v19 = v41;
  if (v44) {
    uint64_t v45 = (unsigned int *)&enum case for IntentPerson.Handle.Value.emailAddress(_:);
  }
  else {
LABEL_9:
  }
    uint64_t v45 = (unsigned int *)&enum case for IntentPerson.Handle.Value.phoneNumber(_:);
  *uint64_t v33 = v37;
  v33[1] = v38;
  uint64_t v46 = *v45;
  uint64_t v47 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v79 + 104);
  uint64_t v67 = v33;
  v47(v33, v46, v80);
  OUTLINED_FUNCTION_12();
  v48();
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v25, enum case for IntentPerson.Handle.Label.other(_:), v19);
  IntentPerson.Handle.init(_:label:)();
  INPerson.identifier.getter();
  unint64_t v49 = v68;
  *uint64_t v68 = v50;
  v49[1] = v51;
  uint64_t v52 = v73;
  (*(void (**)(void *, void, uint64_t))(v73 + 104))(v49, enum case for IntentPerson.Identifier.contact(_:), v83);
  id v53 = [v1 displayName];
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v55;

  uint64_t v57 = v70;
  *uint64_t v70 = v54;
  v57[1] = v56;
  uint64_t v58 = v74;
  uint64_t v59 = v76;
  (*(void (**)(uint64_t *, void, uint64_t))(v74 + 104))(v57, enum case for IntentPerson.Name.displayName(_:), v76);
  OUTLINED_FUNCTION_12();
  v60();
  OUTLINED_FUNCTION_12();
  v61();
  uint64_t v62 = v69;
  uint64_t v63 = v71;
  OUTLINED_FUNCTION_12();
  v64();
  OUTLINED_FUNCTION_68_2();
  uint64_t v65 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload(v77, 1, 1, v65);
  IntentPerson.init(identifier:name:handle:aliases:isMe:image:)();
  (*(void (**)(uint64_t *, uint64_t))(v58 + 8))(v57, v59);
  (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v83);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v81, v63);
  (*(void (**)(uint64_t *, uint64_t))(v79 + 8))(v67, v80);
  OUTLINED_FUNCTION_26_1();
}

void INPerson.siriRemembersContactName.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = OUTLINED_FUNCTION_38_12();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_46_9();
  id v13 = [v0 nameComponents];
  if (v13)
  {
    uint64_t v14 = v13;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v15(v1, v11, v5);
    OUTLINED_FUNCTION_66_3(v1, 0);
    if (__swift_getEnumTagSinglePayload(v1, 1, v5) != 1)
    {
      uint64_t v16 = OUTLINED_FUNCTION_75();
      ((void (*)(uint64_t))v15)(v16);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_472F90;
      *(void *)(v17 + 32) = PersonNameComponents.namePrefix.getter();
      *(void *)(v17 + 40) = v18;
      *(void *)(v17 + 48) = PersonNameComponents.givenName.getter();
      *(void *)(v17 + 56) = v19;
      *(void *)(v17 + 64) = PersonNameComponents.middleName.getter();
      *(void *)(v17 + 72) = v20;
      *(void *)(v17 + 80) = PersonNameComponents.familyName.getter();
      *(void *)(v17 + 88) = v21;
      *(void *)(v17 + 96) = PersonNameComponents.nameSuffix.getter();
      *(void *)(v17 + 104) = v22;
      *(void *)(v17 + 112) = PersonNameComponents.nickname.getter();
      *(void *)(v17 + 120) = v23;
      uint64_t v24 = OUTLINED_FUNCTION_52_10();
      v25(v24);
      uint64_t v26 = *(void *)(v17 + 16);
      if (!v26) {
        goto LABEL_19;
      }
      goto LABEL_7;
    }
  }
  else
  {
    OUTLINED_FUNCTION_66_3(v1, 1);
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for PersonNameComponents?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_467710;
  id v27 = [v0 displayName];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)(v17 + 32) = v28;
  *(void *)(v17 + 40) = v30;
  uint64_t v26 = 1;
LABEL_7:
  swift_bridgeObjectRetain();
  uint64_t v31 = (unint64_t *)(v17 + 40);
  uint64_t v32 = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v33 = *v31;
    if (*v31)
    {
      uint64_t v34 = *(v31 - 1);
      uint64_t v35 = HIBYTE(v33) & 0xF;
      if ((v33 & 0x2000000000000000) == 0) {
        uint64_t v35 = v34 & 0xFFFFFFFFFFFFLL;
      }
      if (v35)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v32 = v38;
        }
        unint64_t v36 = v32[2];
        if (v36 >= v32[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v32 = v39;
        }
        v32[2] = v36 + 1;
        uint64_t v37 = &v32[2 * v36];
        v37[4] = v34;
        v37[5] = v33;
      }
    }
    v31 += 2;
    --v26;
  }
  while (v26);
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v40 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v42 = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = HIBYTE(v42) & 0xF;
  if ((v42 & 0x2000000000000000) == 0) {
    uint64_t v43 = v40 & 0xFFFFFFFFFFFFLL;
  }
  if (!v43)
  {
    swift_bridgeObjectRelease();
    id v44 = [v2 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  OUTLINED_FUNCTION_26_1();
}

INPerson __swiftcall INPerson.init(phoneContact:)(CNContact phoneContact)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for PersonNameComponents();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_53();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v11 = OUTLINED_FUNCTION_11_0(v10);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_17_21();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v49 - v14;
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_29_19();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v49 - v17;
  id v19 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContact:v5];
  id v20 = [v19 nameComponents];
  if (v20)
  {
    uint64_t v21 = v20;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  OUTLINED_FUNCTION_66_3(v3, v22);
  outlined init with take of AnnotatedApp?(v3, (uint64_t)v18, &demangling cache variable for type metadata for PersonNameComponents?);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v6))
  {
    static PersonNameComponents.phoneticComponents(for:)(v5);
    OUTLINED_FUNCTION_66_3((uint64_t)v15, 0);
    PersonNameComponents.phoneticRepresentation.setter();
  }
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0((uint64_t)v18, v2, &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v23 = OUTLINED_FUNCTION_54_10();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, v24, v6);
  if (EnumTagSinglePayload == 1)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    uint64_t EnumTagSinglePayload = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
  }
  OUTLINED_FUNCTION_69_5(EnumTagSinglePayload, "setNameComponents:");

  id v27 = [v19 personHandle];
  if (!v27)
  {
    if ([v5 contactType] == (char *)&dword_0 + 1) {
      goto LABEL_14;
    }
    id v28 = [v19 displayName];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;

    swift_bridgeObjectRelease();
    uint64_t v32 = HIBYTE(v31) & 0xF;
    if ((v31 & 0x2000000000000000) == 0) {
      uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (!v32)
    {
LABEL_14:
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v50 = v8;
      uint64_t v33 = type metadata accessor for Logger();
      __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v34, v35))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_2_3(&dword_0, v36, v37, "#INPerson Using CNContactFormatter to follow user's display name preferences");
        OUTLINED_FUNCTION_6();
      }

      unint64_t v38 = self;
      id v39 = [v38 stringFromContact:v5 style:0];
      if (v39)
      {
        uint64_t v40 = v39;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      id v41 = [v38 stringFromContact:v5 style:1];
      if (v41)
      {
        unint64_t v42 = v41;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      PersonNameComponents.init(name:phoneticName:)();
      Class v43 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v1, v6);
      OUTLINED_FUNCTION_69_5(v44, "setNameComponents:");
    }
  }
  uint64_t v45 = outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v5, (SEL *)&selRef_phonemeData);
  if (v46)
  {
    NSString v47 = String._bridgeToObjectiveC()();
    uint64_t v45 = swift_bridgeObjectRelease();
  }
  else
  {
    NSString v47 = 0;
  }
  OUTLINED_FUNCTION_69_5(v45, "setPhonemeData:");

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v18, &demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_26_1();
  return result;
}

INPerson __swiftcall INPerson.mutableCopyOrCrash()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v8 = v7 - v6;
  [v1 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  if (swift_dynamicCast()) {
    return v16;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, v10, v2);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    OUTLINED_FUNCTION_50_7(4.8149e-34);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000033, v13, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_9_27(&dword_0, v14, v15, "%s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)();
  OUTLINED_FUNCTION_77();
  result.super.Class isa = (Class)OUTLINED_FUNCTION_13_17();
  __break(1u);
  return result;
}

void *INPerson.withTranslatedHandleLabel(locale:)()
{
  uint64_t v1 = v0;
  if (!INPerson.hasHandleLabel.getter()) {
    goto LABEL_14;
  }
  id v2 = [v0 personHandle];
  if (!v2) {
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  id v4 = [v2 label];
  if (!v4)
  {

LABEL_14:
    id v22 = v0;
    return v1;
  }
  uint64_t v5 = v4;
  id v6 = (id)INIntentSlotValueTransformToContactHandle();
  v28[0] = Locale.identifier.getter();
  v28[1] = v7;
  unint64_t v26 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_30_6();
  swift_bridgeObjectRelease();
  uint64_t v8 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_20;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    id v15 = v5;
    swift_bridgeObjectRetain_n();
    id v16 = v15;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t type = v18;
      uint64_t v19 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v17, type, "#INPerson Replacing handle label with translated label! %s => %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (!v6) {
LABEL_20:
    }
      swift_bridgeObjectRelease();
    else {
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v8, v10, v6, (SEL *)&selRef_setLabel_);
    }
  }
  id v24 = (id)INIntentSlotValueTransformFromContactHandle();
  objc_msgSend(v1, "setPersonHandle:", v24, &type metadata for String, v26, v26, v26);
  id v25 = v1;

  return v1;
}

uint64_t INPersonRelationship.nlString.getter()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v2) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v4) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v6) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v8) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v10) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v12) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v14) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v16) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v18) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v20) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v22) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v24) {
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_70;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v26)
  {
LABEL_69:
    swift_bridgeObjectRelease_n();
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_1_64();
  OUTLINED_FUNCTION_77_3();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
    return static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
LABEL_70:
  uint64_t BackingType = INPersonRelationshipGetBackingType();
  switch((int)BackingType)
  {
    case 0:
      unint64_t v30 = @"Father";
      goto LABEL_85;
    case 1:
      unint64_t v30 = @"Mother";
      goto LABEL_85;
    case 2:
      unint64_t v30 = @"Parent";
      goto LABEL_85;
    case 3:
      unint64_t v30 = @"Brother";
      goto LABEL_85;
    case 4:
      unint64_t v30 = @"Sister";
      goto LABEL_85;
    case 5:
      unint64_t v30 = @"Child";
      goto LABEL_85;
    case 6:
      unint64_t v30 = @"Friend";
      goto LABEL_85;
    case 7:
      unint64_t v30 = @"Spouse";
      goto LABEL_85;
    case 8:
      unint64_t v30 = @"Partner";
      goto LABEL_85;
    case 9:
      unint64_t v30 = @"Assistant";
      goto LABEL_85;
    case 10:
      unint64_t v30 = @"Manager";
      goto LABEL_85;
    case 11:
      unint64_t v30 = @"Son";
      goto LABEL_85;
    case 12:
      unint64_t v30 = @"Daughter";
LABEL_85:
      unint64_t v31 = v30;
      break;
    default:
      unint64_t v30 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
      break;
  }
  uint64_t v32 = v30;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_75();
  String.lowercased()();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_7_0();
}

uint64_t closure #1 in INPersonRelationship.toSpeakableString(startCallCats:)()
{
  uint64_t result = TemplatingResult.print.getter();
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = TemplatingResult.speak.getter();
  if (!*(void *)(result + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  return SpeakableString.init(print:speak:)();
}

uint64_t INCallRecord.callProviderApp.getter()
{
  type metadata accessor for App();
  outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v0, (SEL *)&selRef_providerBundleId);
  return App.__allocating_init(appIdentifier:)();
}

id INCallRecord.refinedCallDurationAsDouble.getter()
{
  id result = [v0 callDuration];
  uint64_t v2 = result;
  if (result)
  {
    Double.init(truncating:)();
    uint64_t v4 = v3;

    return (id)v4;
  }
  return result;
}

uint64_t INCallRecord.refinedIsCallerIDBlockedAsBool.getter()
{
  return INCallRecord.refinedIsCallerIDBlockedAsBool.getter((SEL *)&selRef_isCallerIdBlocked);
}

id INCallRecord.refinedNumberOfCallsAsInt.getter()
{
  id v1 = [v0 numberOfCalls];
  uint64_t v2 = v1;
  if (!v1) {
    return 0;
  }
  id v3 = [v1 integerValue];

  return v3;
}

uint64_t INCallRecord.refinedUnseenAsBool.getter()
{
  return INCallRecord.refinedIsCallerIDBlockedAsBool.getter((SEL *)&selRef_unseen);
}

uint64_t INCallRecord.refinedIsCallerIDBlockedAsBool.getter(SEL *a1)
{
  id v2 = [v1 *a1];
  if (!v2) {
    return 2;
  }
  id v3 = v2;
  id v4 = [v2 BOOLValue];

  return (uint64_t)v4;
}

uint64_t INCallRecordType.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallRecordTypeGetBackingType();
    switch((int)BackingType)
    {
      case 2:
        id v2 = @"OUTGOING";
        goto LABEL_13;
      case 3:
        id v2 = @"MISSED";
        goto LABEL_13;
      case 4:
        id v2 = @"RECEIVED";
        goto LABEL_13;
      case 5:
        id v2 = @"LATEST";
        goto LABEL_13;
      case 7:
        id v2 = @"VOICEMAIL";
        goto LABEL_13;
      case 8:
        id v2 = @"RINGING";
        goto LABEL_13;
      case 9:
        id v2 = @"IN_PROGRESS";
        goto LABEL_13;
      case 10:
        id v2 = @"ON_HOLD";
LABEL_13:
        id v3 = v2;
        break;
      default:
        id v2 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        break;
    }
    id v4 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_24_25();
  }
  else
  {
    OUTLINED_FUNCTION_0_17();
  }
  return OUTLINED_FUNCTION_96();
}

uint64_t closure #1 in INCallRecordTypeOptions.INPBStringRepresentation.getter(uint64_t a1)
{
  switch((int)a1)
  {
    case 2:
      id v1 = @"OUTGOING";
      goto LABEL_11;
    case 3:
      id v1 = @"MISSED";
      goto LABEL_11;
    case 4:
      id v1 = @"RECEIVED";
      goto LABEL_11;
    case 5:
      id v1 = @"LATEST";
      goto LABEL_11;
    case 7:
      id v1 = @"VOICEMAIL";
      goto LABEL_11;
    case 8:
      id v1 = @"RINGING";
      goto LABEL_11;
    case 9:
      id v1 = @"IN_PROGRESS";
      goto LABEL_11;
    case 10:
      id v1 = @"ON_HOLD";
LABEL_11:
      id v2 = v1;
      break;
    default:
      id v1 = +[NSString stringWithFormat:@"(unknown: %i)", a1];
      break;
  }
  id v3 = v1;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_61_7();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  return OUTLINED_FUNCTION_34_11();
}

uint64_t closure #1 in INCallCapabilityOptions.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1 == 2)
  {
    id v1 = @"VIDEO_CALL";
  }
  else
  {
    if (a1 != 1)
    {
      id v1 = +[NSString stringWithFormat:@"(unknown: %i)", a1];
      goto LABEL_7;
    }
    id v1 = @"AUDIO_CALL";
  }
  id v2 = v1;
LABEL_7:
  id v3 = v1;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_61_7();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  return OUTLINED_FUNCTION_34_11();
}

id @nonobjc INPlayVoicemailIntent.init(callRecordIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithCallRecordIdentifier:v3];

  return v4;
}

uint64_t specialized _ContiguousArrayStorage.__deallocating_deinit(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_arrayDestroy();
  OUTLINED_FUNCTION_17_7();

  return swift_deallocClassInstance();
}

void *specialized _copyCollectionToContiguousArray<A>(_:)(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v5 = (void *)OUTLINED_FUNCTION_76();
      _swift_stdlib_malloc_size(v5);
      OUTLINED_FUNCTION_15_26();
      v5[2] = v4;
      v5[3] = v6;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v7;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

id specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a4;
  uint64_t v8 = (char *)a2 - a1;
  uint64_t v9 = ((char *)a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 < v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, ((char *)a2 - a1) / 8, a4);
    uint64_t v12 = &v4[v9];
    if ((unint64_t)a2 < a3 && v8 >= 8)
    {
      uint64_t v16 = a2;
      uint64_t v17 = (void **)a1;
      unint64_t v48 = a3;
      uint64_t v50 = &v4[v9];
      while (1)
      {
        uint64_t v18 = v16;
        uint64_t v19 = *v4;
        id v20 = *v16;
        id v21 = v19;
        id result = [v20 rank];
        if (!result)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        uint64_t v23 = result;
        id v24 = [result integerValue];

        id result = [v21 rank];
        if (!result) {
          goto LABEL_47;
        }
        id v25 = result;
        id v26 = [result integerValue];

        if ((uint64_t)v24 < (uint64_t)v26) {
          break;
        }
        id v27 = v4;
        BOOL v29 = v17 == v4++;
        unint64_t v28 = v48;
        uint64_t v16 = v18;
        if (!v29) {
          goto LABEL_20;
        }
LABEL_21:
        ++v17;
        uint64_t v12 = v50;
        if (v4 >= v50 || (unint64_t)v16 >= v28)
        {
          uint64_t v14 = v17;
          goto LABEL_45;
        }
      }
      id v27 = v18;
      uint64_t v16 = v18 + 1;
      unint64_t v28 = v48;
      if (v17 == v18) {
        goto LABEL_21;
      }
LABEL_20:
      *uint64_t v17 = *v27;
      goto LABEL_21;
    }
    uint64_t v14 = (void **)a1;
LABEL_45:
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, v12 - v4, v14);
    return &dword_0 + 1;
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
  uint64_t v12 = &v4[v11];
  if (a1 >= (char *)a2 || v10 < 8)
  {
    uint64_t v14 = a2;
    goto LABEL_45;
  }
  unint64_t v31 = (void **)(a3 - 8);
  uint64_t v32 = &selRef_setBundleId_;
  uint64_t v14 = a2;
  uint64_t v45 = a1;
  uint64_t v46 = v4;
  while (1)
  {
    unint64_t v51 = (unint64_t)v12;
    uint64_t v33 = v12 - 1;
    uint64_t v49 = v14;
    os_log_type_t v35 = *(v14 - 1);
    uint64_t v34 = v14 - 1;
    id v36 = *(v12 - 1);
    id v37 = v35;
    id result = [v36 rank];
    if (!result) {
      goto LABEL_48;
    }
    unint64_t v38 = result;
    id v39 = [result v32[163]];

    id result = [v37 rank];
    if (!result) {
      break;
    }
    uint64_t v40 = result;
    NSString v47 = v31 + 1;
    id v41 = [result v32[163]];

    if ((uint64_t)v39 >= (uint64_t)v41)
    {
      BOOL v43 = v47 != (void **)v51 || (unint64_t)v31 >= v51;
      uint64_t v34 = v33;
      uint64_t v12 = v33;
      if (!v43) {
        goto LABEL_41;
      }
    }
    else
    {
      BOOL v42 = v47 != v49 || v31 >= v49;
      uint64_t v49 = v34;
      uint64_t v12 = (void **)v51;
      if (!v42) {
        goto LABEL_41;
      }
    }
    *unint64_t v31 = *v34;
LABEL_41:
    --v31;
    uint64_t v14 = v49;
    uint64_t v4 = v46;
    BOOL v44 = v49 > (void **)v45 && v12 > v46;
    uint64_t v32 = &selRef_setBundleId_;
    if (!v44) {
      goto LABEL_45;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(void *a1)
{
  return outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(a1, (SEL *)&selRef_participants, (unint64_t *)&lazy cache variable for type metadata for INPerson);
}

uint64_t outlined bridged method (ob) of @objc INPersonHandle.value.getter(void *a1)
{
  return outlined bridged method (ob) of @objc INPersonHandle.value.getter(a1, (SEL *)&selRef_value);
}

id outlined bridged method (mnnnnbnnn) of @objc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [a8 initWithPersonHandle:a1 nameComponents:a2 displayName:a3 image:a4 contactIdentifier:v14 customIdentifier:a7];

  return v15;
}

uint64_t outlined bridged method (pb) of @objc INPersonHandle.value.getter(void *a1)
{
  return outlined bridged method (pb) of @objc INCallGroup.groupName.getter(a1, (SEL *)&selRef_value);
}

void outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.systemExtensionBundleId.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setSystemExtensionBundleId:v4];
}

void outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.launchId.setter(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setLaunchId:v4];
}

uint64_t outlined bridged method (pb) of @objc INIntent.airPlayRouteIds.getter(void *a1)
{
  id v1 = [a1 airPlayRouteIds];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc INIntent.airPlayRouteIds.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 _setAirPlayRouteIds:isa];
}

uint64_t outlined bridged method (pb) of @objc INAnswerCallIntentResponse.callRecords.getter(void *a1)
{
  return outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(a1, (SEL *)&selRef_callRecords, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
}

uint64_t outlined bridged method (pb) of @objc INCallRecord.providerBundleId.getter(void *a1)
{
  return outlined bridged method (pb) of @objc INCallGroup.groupName.getter(a1, (SEL *)&selRef_providerBundleId);
}

uint64_t outlined bridged method (ob) of @objc INIntentDescription.slotDescriptions()(void *a1)
{
  id v2 = [a1 slotDescriptions];

  if (!v2) {
    return 0;
  }
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INIntentSlotDescription);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (pb) of @objc INStartCallIntent.callGroups.getter(void *a1)
{
  return outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(a1, (SEL *)&selRef_callGroups, (unint64_t *)&lazy cache variable for type metadata for INCallGroup);
}

uint64_t outlined bridged method (ob) of @objc INPersonHandle.value.getter(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_75();
}

void outlined bridged method (mbnn) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.setter(uint64_t a1, void *a2)
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCallRecords:isa];
}

void outlined bridged method (mbgnn) of @objc INPerson.scoredAlternatives.setter(uint64_t a1, void *a2)
{
}

void outlined bridged method (mbgnn) of @objc INStartCallIntent.callGroups.setter(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  type metadata accessor for CNContactStore(0, a3);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a2, *a5, isa);
}

void outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

uint64_t sub_1C9480()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t partial apply for closure #1 in INPerson.isUnnamedHandle.getter()
{
  return CharacterSet.contains(_:)() & 1;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    id result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;

  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    id result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;

  NSString v4 = a4;
  uint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for App();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_3(&lazy protocol witness table cache variable for type App and conformance App, (void (*)(uint64_t))&type metadata accessor for App);
    id result = Set.Iterator.init(_cocoa:)();
    NSString v4 = v26;
    uint64_t v8 = v27;
    unint64_t v9 = v28;
    uint64_t v10 = v29;
    uint64_t v11 = v30;
  }
  else
  {
    uint64_t v10 = 0;
    int64_t v12 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v8 = a4 + 56;
    unint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      int64_t v14 = ~(-1 << v13);
    }
    else {
      int64_t v14 = -1;
    }
    uint64_t v11 = v14 & *(void *)(a4 + 56);
  }
  if (!a2)
  {
    unint64_t v15 = 0;
LABEL_47:
    *uint64_t v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v10;
    void v7[4] = v11;
    return v15;
  }
  if (!a3)
  {
    unint64_t v15 = 0;
    goto LABEL_47;
  }
  if (a3 < 0) {
    goto LABEL_49;
  }
  unint64_t v15 = 0;
  id v24 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_46;
      }
      type metadata accessor for App();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v18 = v25;
      id result = swift_unknownObjectRelease();
      if (!v25) {
        goto LABEL_46;
      }
      goto LABEL_28;
    }
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v17 = v16 | (v10 << 6);
      goto LABEL_27;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v19 >= v24)
    {
      uint64_t v11 = 0;
      goto LABEL_46;
    }
    id v20 = *(void *)(v8 + 8 * v19);
    if (v20) {
      goto LABEL_26;
    }
    uint64_t v21 = v10 + 2;
    if (v10 + 2 >= v24)
    {
      uint64_t v11 = 0;
      ++v10;
      goto LABEL_46;
    }
    id v20 = *(void *)(v8 + 8 * v21);
    if (!v20)
    {
      if (v10 + 3 >= v24) {
        goto LABEL_43;
      }
      id v20 = *(void *)(v8 + 8 * (v10 + 3));
      if (v20)
      {
        int64_t v19 = v10 + 3;
        goto LABEL_26;
      }
      uint64_t v21 = v10 + 4;
      if (v10 + 4 >= v24)
      {
        uint64_t v11 = 0;
        v10 += 3;
        goto LABEL_46;
      }
      id v20 = *(void *)(v8 + 8 * v21);
      if (!v20)
      {
        int64_t v19 = v10 + 5;
        if (v10 + 5 >= v24)
        {
LABEL_43:
          uint64_t v11 = 0;
          uint64_t v10 = v21;
          goto LABEL_46;
        }
        id v20 = *(void *)(v8 + 8 * v19);
        if (!v20)
        {
          uint64_t v22 = v10 + 6;
          while (v22 < v24)
          {
            id v20 = *(void *)(v8 + 8 * v22++);
            if (v20)
            {
              int64_t v19 = v22 - 1;
              goto LABEL_26;
            }
          }
          uint64_t v11 = 0;
          uint64_t v10 = v24 - 1;
          goto LABEL_46;
        }
        goto LABEL_26;
      }
    }
    int64_t v19 = v21;
LABEL_26:
    uint64_t v11 = (v20 - 1) & v20;
    int64_t v17 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v10 = v19;
LABEL_27:
    unint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
    id result = swift_retain();
    if (!v18) {
      goto LABEL_46;
    }
LABEL_28:
    ++v15;
    *a2++ = v18;
    if (v15 == a3)
    {
      unint64_t v15 = a3;
LABEL_46:
      unint64_t v9 = v23;
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for FollowUpOfferType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *id result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for FollowUpOfferType()
{
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_3(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_64()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_2_69()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_10_31(uint64_t a1)
{
  return INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(a1, 0x74616E6974736564, 0xEF657079546E6F69);
}

void OUTLINED_FUNCTION_16_32(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((a1 - 32) / 16);
}

void OUTLINED_FUNCTION_24_25()
{
}

id OUTLINED_FUNCTION_32_13()
{
  unsigned int v4 = *(const char **)(v1 + 1112);
  uint64_t v5 = *(void **)(v2 - 104);
  return objc_msgSend(v5, v4, v0);
}

uint64_t OUTLINED_FUNCTION_34_11()
{
  uint64_t v5 = *(void *)(v0 + 16);
  *(void *)(v5 + 16) = v1 + 1;
  uint64_t v6 = v5 + 16 * v1;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v3;
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_35_18(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_36_17(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void *OUTLINED_FUNCTION_37_13()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_38_12()
{
  return type metadata accessor for PersonNameComponents();
}

uint64_t OUTLINED_FUNCTION_42_13()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_50_7(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_52_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_54_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_59_6()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_60_7(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t OUTLINED_FUNCTION_61_7()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_62_9()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_67_6(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

id OUTLINED_FUNCTION_69_5(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  return outlined consume of [String : Any].Iterator._Variant();
}

uint64_t OUTLINED_FUNCTION_72_7()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t OUTLINED_FUNCTION_73_4()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

Swift::Void __swiftcall SpringBoardServicesManager.undimScreen()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#SpringBoardServicesManager undimed screen.", v3, 2u);
    swift_slowDealloc();
  }

  _SBSUndimScreen();
}

ValueMetadata *type metadata accessor for SpringBoardServicesManager()
{
  return &type metadata for SpringBoardServicesManager;
}

void *one-time initialization function for kCNContactKeysToFetch()
{
  uint64_t result = (void *)closure #1 in variable initialization expression of kCNContactKeysToFetch();
  kCNContactKeysToFetch._rawValue = result;
  return result;
}

uint64_t closure #1 in variable initialization expression of kCNContactKeysToFetch()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_473280;
  uint64_t v1 = self;
  *(void *)(v0 + 32) = [v1 descriptorForRequiredKeysForStyle:0];
  *(void *)(v0 + 40) = [v1 descriptorForRequiredKeysForStyle:1];
  *(void *)(v0 + 48) = CNContactIdentifierKey;
  os_log_type_t v2 = (void *)CNContactPhonemeDataKey;
  *(void *)(v0 + 56) = CNContactPhonemeDataKey;
  uint64_t v9 = v0;
  specialized Array._endMutation()();
  uint64_t v3 = (void *)CNContactPronunciationGivenNameKey;
  uint64_t v4 = CNContactIdentifierKey;
  id v5 = v2;
  id v6 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                + (v9 & 0xFFFFFFFFFFFFFF8)) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v7 = CNContactPronunciationFamilyNameKey;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                + (v9 & 0xFFFFFFFFFFFFFF8)) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return v9;
}

Swift::OpaquePointer *kCNContactKeysToFetch.unsafeMutableAddressor()
{
  if (one-time initialization token for kCNContactKeysToFetch != -1) {
    swift_once();
  }
  return &kCNContactKeysToFetch;
}

INPerson_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CNContactStore.person(withIdentifier:)(Swift::String withIdentifier)
{
  OUTLINED_FUNCTION_0_46();
  if (v4)
  {
    unint64_t v5 = v3;
    uint64_t v6 = v2;
    static Signpost.begin(_:)();
    NSString v7 = String._bridgeToObjectiveC()();
    if (one-time initialization token for kCNContactKeysToFetch != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v19 = 0;
    id v9 = [v1 unifiedContactWithIdentifier:v7 keysToFetch:isa error:&v19];

    id v10 = v19;
    if (v9)
    {
      type metadata accessor for INPerson();
      id v11 = v10;
      v12.super.Class isa = INPerson.init(phoneContact:)((CNContact)v9).super.isa;
    }
    else
    {
      id v13 = v19;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
      swift_bridgeObjectRetain_n();
      unint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        int64_t v17 = (uint8_t *)swift_slowAlloc();
        id v19 = (id)swift_slowAlloc();
        *(_DWORD *)int64_t v17 = 136315138;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, (uint64_t *)&v19);
        OUTLINED_FUNCTION_2_0();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v15, v16, "Couldn't fetch contact for identifier: %s", v17, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      swift_errorRelease();

      v12.super.Class isa = 0;
    }
    Signpost.OpenSignpost.end()();
    swift_release();
  }
  else
  {
    v12.super.Class isa = 0;
  }
  unint64_t v18 = v12.super.isa;
  result.is_nil = v3;
  result.value.super.Class isa = v18;
  return result;
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CNContactStore.persons(withHandle:)(Swift::String withHandle)
{
  OUTLINED_FUNCTION_0_46();
  if (v4)
  {
    unint64_t v5 = v3;
    uint64_t v6 = v2;
    static Signpost.begin(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_467710;
    *(void *)(v7 + 32) = v6;
    *(void *)(v7 + 40) = v5;
    swift_bridgeObjectRetain();
    v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if (one-time initialization token for kCNContactKeysToFetch != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v27 = 0;
    id v10 = objc_msgSend(v1, "tu_contactsForContactHandles:keyDescriptors:error:", v8.super.isa, isa, &v27);

    id v11 = v27;
    if (!v10)
    {
      uint64_t v21 = v27;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        id v25 = (uint8_t *)swift_slowAlloc();
        id v27 = (void *)swift_slowAlloc();
        *(_DWORD *)id v25 = 136315138;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, (uint64_t *)&v27);
        OUTLINED_FUNCTION_2_0();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v23, v24, "Couldn't fetch contact for handle: %s", v25, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      swift_errorRelease();

      unint64_t v15 = 0;
      goto LABEL_24;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CNContact]);
    uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    id v13 = v11;

    specialized Collection.first.getter(v12);
    unint64_t v15 = v14;
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (v15)
    {
      swift_bridgeObjectRelease();
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
        if (v18)
        {
LABEL_8:
          id v27 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          if (v18 < 0) {
            __break(1u);
          }
          type metadata accessor for INPerson();
          uint64_t v19 = 0;
          do
          {
            if ((v17 & 0xC000000000000001) != 0) {
              id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v20 = *(id *)(v17 + 8 * v19 + 32);
            }
            ++v19;
            INPerson.init(phoneContact:)((CNContact)v20);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          while (v18 != v19);
          unint64_t v15 = v27;
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v15 = _swiftEmptyArrayStorage;
    }
LABEL_24:
    Signpost.OpenSignpost.end()();
    swift_release();
    goto LABEL_25;
  }
  unint64_t v15 = 0;
LABEL_25:
  id v26 = v15;
  result.is_nil = v3;
  result.value._rawValue = v26;
  return result;
}

unint64_t protocol witness for ContactStoring.person(withIdentifier:) in conformance CNContactStore(uint64_t a1, uint64_t a2)
{
  return (unint64_t)CNContactStore.person(withIdentifier:)(*(Swift::String *)&a1);
}

unint64_t protocol witness for ContactStoring.persons(withHandle:) in conformance CNContactStore(uint64_t a1, uint64_t a2)
{
  return (unint64_t)CNContactStore.persons(withHandle:)(*(Swift::String *)&a1);
}

uint64_t static PhoneCasinoFactory.makeConfirmationCardSection(person:image:sharedGlobals:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Image();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  id v11 = (id *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v50 = v13;
  uint64_t v51 = v12;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = a3[3];
  uint64_t v19 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v18);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v57, v18, v19);
  __swift_project_boxed_opaque_existential_1(v57, v57[3]);
  uint64_t v52 = v17;
  dispatch thunk of DeviceState.siriLocale.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  id v20 = [a1 personHandle];
  uint64_t v21 = v20;
  if (v20)
  {
    id v22 = [v20 label];

    if (v22)
    {
      v57[0] = Locale.identifier.getter();
      v57[1] = v23;
      uint64_t v55 = 45;
      unint64_t v56 = 0xE100000000000000;
      uint64_t v53 = 95;
      unint64_t v54 = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      swift_bridgeObjectRelease();
      uint64_t v24 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)();
      uint64_t v21 = v25;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v21 = 0;
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  (*(void (**)(id *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v6);
  int v26 = (*(uint64_t (**)(id *, uint64_t))(v8 + 88))(v11, v6);
  if (v26 == enum case for Image.fromApp(_:))
  {
    uint64_t v27 = OUTLINED_FUNCTION_1_65();
    v28(v27);

    id v29 = [a1 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v30 = [a1 image];
    OUTLINED_FUNCTION_4_52();
    uint64_t v31 = static CasinoFactory.makeRowCardSection(possibleTitle:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:shouldUseDefaultImageSize:)();
    swift_bridgeObjectRelease();

LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v42 = OUTLINED_FUNCTION_3_61();
    v43(v42);
    return v31;
  }
  if (v26 != enum case for Image.contact(_:))
  {
    if (v26 != enum case for Image.monogram(_:))
    {
      id v45 = [a1 displayName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_4_52();
      OUTLINED_FUNCTION_2_70();
      uint64_t v31 = static CasinoFactory.makeRowCardSection(possibleTitle:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:shouldUseDefaultImageSize:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = OUTLINED_FUNCTION_3_61();
      v47(v46);
      (*(void (**)(id *, uint64_t))(v8 + 8))(v11, v6);
      return v31;
    }
    uint64_t v39 = OUTLINED_FUNCTION_1_65();
    v40(v39);
    id v41 = [a1 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_2_70();
    uint64_t v31 = static CasinoFactory.makeRowCardSection(possibleTitle:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:shouldUseDefaultImageSize:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v32 = OUTLINED_FUNCTION_1_65();
  v33(v32);
  id v34 = *v11;
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SFDetailedRowCardSection);
  uint64_t v36 = (uint64_t)v49;
  uint64_t v35 = v50;
  uint64_t v38 = v51;
  id v37 = v52;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, v52, v51);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v57);
  uint64_t v31 = (uint64_t)SFDetailedRowCardSection.init(person:mappedLabel:contactIdentifiers:locale:sharedGlobals:titleMaxLines:)(a1, v24, (uint64_t)v21, (uint64_t)v34, v36, v57, 4);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
  return v31;
}

id static PhoneCasinoFactory.makeSash<A>(intent:app:deviceState:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  uint64_t v8 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(a2, v7, a3);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for SAUISash);
  return SAUISash.init(app:)(v8);
}

void *static SACardSnippet.makeFromCardSectionsWithConfirmationOptions(cardSections:intent:sash:confirmationOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)static SACardSnippet.makeFromCardSectionsWithIntentData(cardSections:intent:intentResponse:shouldGenerateAceId:)();
  [v6 setSash:a3];
  [v6 setConfirmationOptions:a4];
  return v6;
}

void *PhoneCasinoFactory.titleMaxLines.unsafeMutableAddressor()
{
  return &static PhoneCasinoFactory.titleMaxLines;
}

id SFDetailedRowCardSection.init(person:mappedLabel:contactIdentifiers:locale:sharedGlobals:titleMaxLines:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v12 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SFRichText);
  id v13 = v12;
  id v14 = [a1 displayName];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  id v18 = @nonobjc SFRichText.__allocating_init(string:)(v15, v17);
  [v13 setTitle:v18];

  uint64_t v19 = (void *)SFRichText.init(mappedLabel:titleMaxLines:)(a2, a3, a7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_46A030;
  *(void *)(v20 + 32) = v19;
  uint64_t v28 = v20;
  specialized Array._endMutation()();
  id v21 = v19;
  outlined bridged method (mbnn) of @objc SFDetailedRowCardSection.descriptions.setter(v28, v13);
  SFDetailedRowCardSection.setHintTextIfNeeded(sharedGlobals:person:)(a6);
  id v22 = [objc_allocWithZone((Class)SFContactImage) init];
  outlined bridged method (mbnn) of @objc SFContactImage.contactIdentifiers.setter(a4, v22);
  id v23 = v22;
  [v13 setThumbnail:v23];

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a6);
  uint64_t v24 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a5, v24);
  return v13;
}

uint64_t SFRichText.init(mappedLabel:titleMaxLines:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v6 = v5;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  [v5 setText:v7];

  if (a3 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    [v5 setMaxLines:a3];

    return (uint64_t)v5;
  }
  return result;
}

void SFDetailedRowCardSection.setHintTextIfNeeded(sharedGlobals:person:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (INPerson.isProvidedByPlus.getter())
  {
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v8);
    uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 176))(v8, v9);
    type metadata accessor for PhoneCallFlowDelegatePlugin();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v12 = [self bundleForClass:ObjCClassFromMetadata];
    static Locale.current.getter();
    uint64_t v13 = Locale.identifier.getter();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v23[4] = v13;
    v23[5] = v15;
    v23[2] = 45;
    v23[3] = 0xE100000000000000;
    v23[0] = 95;
    v23[1] = 0xE100000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v16 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = outlined bridged method (mbbnbnb) of @objc AFLocalization.localizedString(forKey:table:bundle:languageCode:)(0xD000000000000011, 0x8000000000493B90, 1396918608, 0xE400000000000000, (uint64_t)v12, v16, v18, v10);
    uint64_t v21 = v20;

    if (v21)
    {
      type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SFRichText);
      id v22 = @nonobjc SFRichText.__allocating_init(string:)(v19, v21);
      [v2 setFootnote:v22];
    }
  }
}

ValueMetadata *type metadata accessor for PhoneCasinoFactory()
{
  return &type metadata for PhoneCasinoFactory;
}

void outlined bridged method (mbnn) of @objc SFDetailedRowCardSection.descriptions.setter(uint64_t a1, void *a2)
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SFRichText);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setDescriptions:isa];
}

void outlined bridged method (mbnn) of @objc SFContactImage.contactIdentifiers.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setContactIdentifiers:isa];
}

uint64_t OUTLINED_FUNCTION_1_65()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_61()
{
  return *(void *)(v0 - 160);
}

uint64_t SearchCallHistoryBaseFlowStrategy.__allocating_init(sharedGlobals:responseGenerator:searchCallCatPatterns:appInfoBuilder:)(long long *a1, long long *a2, long long *a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  SearchCallHistoryBaseFlowStrategy.init(sharedGlobals:responseGenerator:searchCallCatPatterns:appInfoBuilder:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SearchCallHistoryBaseFlowStrategy.init(sharedGlobals:responseGenerator:searchCallCatPatterns:appInfoBuilder:)(long long *a1, long long *a2, long long *a3, long long *a4)
{
  outlined init with take of AppSelectionSignalComponent(a1, v4 + 16);
  outlined init with take of AppSelectionSignalComponent(a3, v4 + 56);
  outlined init with take of AppSelectionSignalComponent(a2, v4 + 96);
  outlined init with take of AppSelectionSignalComponent(a4, v4 + 136);
  return v4;
}

uint64_t SearchCallHistoryBaseFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v5 = type metadata accessor for PhoneError();
  __chkstk_darwin(v5);
  NSString v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "#SearchCallHistoryBaseFlowStrategy makeIntentHandledResponse should be overridden", v11, 2u);
    swift_slowDealloc();
  }

  swift_storeEnumTagMultiPayload();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
  uint64_t v12 = swift_allocError();
  PhoneError.logged()(v13);
  outlined destroy of PhoneError((uint64_t)v7);
  v15[0] = v12;
  char v16 = 1;
  a4(v15);
  return outlined destroy of Result<Output, Error>((uint64_t)v15);
}

uint64_t outlined destroy of Result<Output, Error>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<Output, Error>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SearchCallHistoryBaseFlowStrategy.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return v0;
}

uint64_t SearchCallHistoryBaseFlowStrategy.__deallocating_deinit()
{
  SearchCallHistoryBaseFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for HandleIntentFlowStrategy.authenticationPolicy.getter in conformance SearchCallHistoryBaseFlowStrategy()
{
  return HandleIntentFlowStrategy.authenticationPolicy.getter();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryBaseFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t protocol witness for IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:) in conformance SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for SearchCallHistoryBaseFlowStrategy();

  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t base witness table accessor for IntentExtensionCommunicating in SearchCallHistoryBaseFlowStrategy(uint64_t a1, uint64_t a2)
{
  return _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_4(&lazy protocol witness table cache variable for type SearchCallHistoryBaseFlowStrategy and conformance SearchCallHistoryBaseFlowStrategy, a2, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBaseFlowStrategy);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SearchCallHistoryBaseFlowStrategy()
{
  return self;
}

uint64_t StartVideoCallFlow.__allocating_init(app:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  return StartVideoCallFlow.init(app:sharedGlobals:)(a1, a2);
}

uint64_t StartVideoCallFlow.init(app:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + direct field offset for StartVideoCallFlow.flowName);
  *uint64_t v5 = 0xD000000000000012;
  v5[1] = 0x8000000000473400;
  outlined init with copy of SignalProviding(a2, (uint64_t)v8);
  uint64_t v6 = specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)(a1, 0xD000000000000012, 0x8000000000473400, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v6;
}

uint64_t StartVideoCallFlow.makeRCHFlow(input:intent:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v46 = v6;
  uint64_t v47 = v5;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v48 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v43 = v9;
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v45 = v10;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  __chkstk_darwin(v42);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CATOption();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v15 = *(void (**)(void))(*(void *)v3 + 152);
  ((void (*)(void *__return_ptr, uint64_t))v15)(v54, v14);
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  char v16 = (void *)static BiomeEventSender.instance;
  type metadata accessor for StartVideoCallRCHFlowDelegate();
  uint64_t v17 = swift_allocObject();
  id v18 = v16;
  swift_retain();
  uint64_t v19 = specialized StartVideoCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)((uint64_t)v54, a3, (uint64_t)v18, v17);
  uint64_t v41 = v19;
  OUTLINED_FUNCTION_2_54();
  v15();
  type metadata accessor for PhoneCallDisplayTextCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v20 = CATWrapperSimple.__allocating_init(options:globals:)();
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v21 = CATWrapperSimple.__allocating_init(options:globals:)();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  swift_allocObject();
  uint64_t v23 = specialized CallingIntentRCHFlowStrategy.init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)(v54, a3, v20, v21);
  swift_retain();
  specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)(v19, a3, v24, v25, v26, v27, v28, v29, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50,
    v51[0]);
  OUTLINED_FUNCTION_2_54();
  v15();
  uint64_t v30 = v55;
  uint64_t v31 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v31 + 104))(v51, v30, v31);
  uint64_t v33 = v52;
  uint64_t v32 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v50 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v45, &v12[*(int *)(v42 + 36)], v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v48, v12, v47);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  swift_allocObject();
  uint64_t v34 = RCHChildFlowFactory.init(producers:withFallbacks:)();
  uint64_t v35 = a3;
  uint64_t v36 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v32 + 8);
  unint64_t v37 = lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>();
  uint64_t v38 = v36(&v50, v34, v35, v49, v22, v37, v33, v32);
  swift_release();
  swift_release();
  outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>((uint64_t)v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v38;
}

void StartVideoCallFlow.init(app:flowName:sharedGlobals:)()
{
}

void StartVideoCallFlow.init(state:app:flowName:sharedGlobals:)()
{
}

uint64_t StartVideoCallFlow.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

uint64_t StartVideoCallFlow.deinit()
{
  uint64_t v0 = specialized CallingFlowAbstraction.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StartVideoCallFlow.__deallocating_deinit()
{
  specialized CallingFlowAbstraction.deinit();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>;
  if (!lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>);
  }
  return result;
}

uint64_t outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StartVideoCallFlow()
{
  uint64_t result = type metadata singleton initialization cache for StartVideoCallFlow;
  if (!type metadata singleton initialization cache for StartVideoCallFlow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for StartVideoCallFlow()
{
  return swift_initClassMetadata2();
}

uint64_t StartAudioCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:biomeEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_38(v5, v10);
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_6_48();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t StartAudioCallRCHFlowDelegate.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals, a1);
}

uint64_t StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_38(v5, v10);
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_6_48();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t StartAudioCallRCHFlowDelegate.makeAceViewProvider()()
{
  uint64_t v1 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  outlined init with copy of SignalProviding(v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals, (uint64_t)v3);
  type metadata accessor for StartAudioCallAceViewProvider();
  swift_allocObject();
  return StartAudioCallAceViewProvider.init(templatingService:sharedGlobals:)(v1, (uint64_t)v3);
}

uint64_t StartAudioCallRCHFlowDelegate.makeNLContextProvider()()
{
  uint64_t v1 = (void *)(v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals), *(void *)(v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 24));
  uint64_t v2 = OUTLINED_FUNCTION_5_48();
  v3(v2);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v4 = OUTLINED_FUNCTION_5_48();
  v5(v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  swift_allocObject();
  return specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v8, &v7);
}

uint64_t StartAudioCallRCHFlowDelegate.makeDialogTemplating()()
{
  uint64_t v1 = type metadata accessor for CATOption();
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_4();
  outlined init with copy of SignalProviding(v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals, (uint64_t)v9);
  type metadata accessor for StartCallCATs();
  static CATOption.defaultMode.getter();
  uint64_t v3 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallDisplayTextCATs();
  static CATOption.defaultMode.getter();
  uint64_t v4 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallCommonCATs();
  static CATOption.defaultMode.getter();
  uint64_t v5 = CATWrapper.__allocating_init(options:globals:)();
  type metadata accessor for AppInfoBuilder();
  uint64_t v6 = swift_allocObject();
  type metadata accessor for StartAudioCallCatTemplatingService();
  uint64_t v7 = (void *)swift_allocObject();
  return specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)((uint64_t)v9, v3, v4, v5, v6, v7);
}

uint64_t StartAudioCallRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:)()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "#StartAudioCallRCHFlowDelegate makeIntentFromParse", v5, 2u);
    swift_slowDealloc();
  }

  outlined init with copy of SignalProviding(v1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals, (uint64_t)v12);
  uint64_t v6 = *(void *)(v1 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFromParseFlowStrategyHelper<INStartAudioCallIntent>);
  uint64_t inited = swift_initStackObject();
  outlined init with take of AppSelectionSignalComponent(v12, inited + 24);
  *(void *)(inited + 16) = v6;
  swift_retain();
  specialized IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)();
  uint64_t v9 = v8;
  uint64_t v10 = swift_setDeallocating();
  specialized IntentFromParseFlowStrategyHelper.__deallocating_deinit(v10);
  return v9;
}

uint64_t StartAudioCallRCHFlowDelegate.makeConfirmationStateFromParse(parse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v85 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v88 = (uint64_t)&v81 - v8;
  __chkstk_darwin(v7);
  unint64_t v87 = (uint64_t *)((char *)&v81 - v9);
  uint64_t v10 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_1();
  uint64_t v86 = v11;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = v14 - v13;
  type metadata accessor for Logger();
  OUTLINED_FUNCTION_1();
  uint64_t v83 = v17;
  uint64_t v84 = v16;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_3_1();
  uint64_t v82 = v18;
  uint64_t v19 = type metadata accessor for PhoneCallNLv3Intent(0);
  uint64_t v20 = OUTLINED_FUNCTION_11_0(v19);
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_3_1();
  uint64_t v89 = v21;
  uint64_t v22 = type metadata accessor for NLIntent();
  OUTLINED_FUNCTION_1();
  uint64_t v24 = v23;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v81 - v29;
  uint64_t v31 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_1();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_4();
  uint64_t v37 = v36 - v35;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  uint64_t v90 = a1;
  v38(v37, a1, v31);
  int v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 88))(v37, v31);
  if (v39 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v39 != enum case for Parse.directInvocation(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v31);
LABEL_22:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BaseRCHFlowDelegate<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
      uint64_t v75 = (uint64_t (*)(uint64_t))method lookup function for BaseRCHFlowDelegate();
      return v75(v90);
    }
    uint64_t v51 = OUTLINED_FUNCTION_7_51();
    v52(v51);
    uint64_t v53 = v86;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32))(v15, v37, v10);
    unint64_t v54 = v87;
    static CommonDirectAction.from(_:)(v15, v87);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v15, v10);
    uint64_t v55 = (uint64_t)v54;
    uint64_t v56 = v88;
    outlined init with take of CommonDirectAction?(v55, v88);
    uint64_t v57 = type metadata accessor for CommonDirectAction();
    if (__swift_getEnumTagSinglePayload(v56, 1, v57) != 1)
    {
      uint64_t v58 = v85;
      outlined init with copy of CommonDirectAction?(v56, v85);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 7)
      {
        uint64_t v60 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
        goto LABEL_19;
      }
      if (EnumCaseMultiPayload == 6)
      {
        uint64_t v60 = (unsigned int *)&enum case for SiriKitConfirmationState.confirmed(_:);
LABEL_19:
        uint64_t v73 = *v60;
        type metadata accessor for SiriKitConfirmationState();
        OUTLINED_FUNCTION_15();
        (*(void (**)(uint64_t, uint64_t))(v74 + 104))(v92, v73);
        return outlined destroy of CommonDirectAction?(v56);
      }
      _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_2(v58, (void (*)(void))type metadata accessor for CommonDirectAction);
    }
    outlined destroy of CommonDirectAction?(v56);
    goto LABEL_22;
  }
  uint64_t v40 = OUTLINED_FUNCTION_7_51();
  v41(v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v30, v37, v22);
  uint64_t v42 = v91;
  uint64_t v43 = *(void *)(v91 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved);
  if (!v43)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v76 = v84;
    uint64_t v77 = __swift_project_value_buffer(v84, (uint64_t)static Logger.siriPhone);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v82, v77, v76);
    uint64_t v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      v93[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v80 = 136315138;
      v93[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000044, 0x8000000000496340, v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v78, v79, "%s", v80, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v28, v30, v22);
  swift_retain();
  uint64_t v44 = v89;
  PhoneCallNLv3Intent.init(intent:)((uint64_t)v28, v89);
  __swift_project_boxed_opaque_existential_1((void *)(v42 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals), *(void *)(v42 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 24));
  uint64_t v45 = OUTLINED_FUNCTION_5_48();
  v46(v45);
  swift_retain();
  uint64_t v47 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(v44, v43, 0, 0, (uint64_t)v93);
  swift_release();
  outlined destroy of SKTransformer((uint64_t)v93);
  if (!v47)
  {
    swift_release();
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_2(v44, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
    uint64_t v61 = OUTLINED_FUNCTION_1_66();
    v62(v61);
    goto LABEL_22;
  }
  if (specialized PhoneCallNLIntent.hasCallConfirmation(_:)(1))
  {
    swift_release();

    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_2(v44, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
    uint64_t v48 = OUTLINED_FUNCTION_1_66();
    v49(v48);
    uint64_t v50 = (unsigned int *)&enum case for SiriKitConfirmationState.rejected(_:);
LABEL_15:
    uint64_t v65 = *v50;
    type metadata accessor for SiriKitConfirmationState();
    OUTLINED_FUNCTION_15();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 104))(v92, v65);
  }
  if (specialized PhoneCallNLIntent.hasCallConfirmation(_:)(0))
  {
    swift_release();

    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_2(v44, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
    uint64_t v63 = OUTLINED_FUNCTION_1_66();
    v64(v63);
    uint64_t v50 = (unsigned int *)&enum case for SiriKitConfirmationState.confirmed(_:);
    goto LABEL_15;
  }
  char v68 = specialized PhoneCallNLIntent.hasCallConfirmation(_:)(2);
  swift_release();

  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_2(v44, (void (*)(void))type metadata accessor for PhoneCallNLv3Intent);
  uint64_t v69 = OUTLINED_FUNCTION_1_66();
  v70(v69);
  type metadata accessor for SiriKitConfirmationState();
  OUTLINED_FUNCTION_15();
  if (v68) {
    uint64_t v72 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
  }
  else {
    uint64_t v72 = (unsigned int *)&enum case for SiriKitConfirmationState.unset(_:);
  }
  return (*(uint64_t (**)(uint64_t, void))(v71 + 104))(v92, *v72);
}

uint64_t StartAudioCallRCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:)(int a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v14 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)(a1, a2, a3, a4, a5, v14, a6, a7);

  return swift_release();
}

uint64_t StartAudioCallRCHFlowDelegate.makeErrorDialogBehavior(app:intent:intentResponse:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ErrorDialogBehavior.openAppButton(_:);
  type metadata accessor for ErrorDialogBehavior();
  OUTLINED_FUNCTION_15();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);

  return v5(a1, v2, v3);
}

uint64_t StartAudioCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:)@<X0>(void *a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for RCHExecutionStep();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v10 - v9, enum case for RCHExecutionStep.handle(_:), v5);
  char v12 = static RCHExecutionStep.== infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  if ((v12 & 1) != 0 && a1 && [a1 code] == (char *)&dword_0 + 2)
  {
    uint64_t v13 = *(void *)(v2 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender + 24);
    uint64_t v14 = *(void *)(v2 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender), v13);
    uint64_t v15 = *(void *)(v2 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 24);
    uint64_t v16 = *(void *)(v2 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals), v15);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 112))(v15, v16);
    BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(v17, v13, v14);
    swift_release();
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
    *(void *)a2 = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
    *(_WORD *)(a2 + 8) = 256;
    uint64_t v18 = (unsigned int *)&enum case for LaunchAppBehavior.withAutomaticPunchOut(_:);
  }
  else
  {
    uint64_t v18 = (unsigned int *)&enum case for LaunchAppBehavior.withDialogAndButton(_:);
  }
  uint64_t v19 = *v18;
  type metadata accessor for LaunchAppBehavior();
  OUTLINED_FUNCTION_15();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 104))(a2, v19);
}

void StartAudioCallRCHFlowDelegate.init()()
{
}

uint64_t StartAudioCallRCHFlowDelegate.__ivar_destroyer()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender);

  return swift_release();
}

uint64_t StartAudioCallRCHFlowDelegate.deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender);
  swift_release();
  return v0;
}

uint64_t StartAudioCallRCHFlowDelegate.__deallocating_deinit()
{
  StartAudioCallRCHFlowDelegate.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance StartAudioCallRCHFlowDelegate@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(*v1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals, a1);
}

uint64_t specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v14[3] = a5;
  v14[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  outlined init with copy of SignalProviding(a1, a4 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  *(void *)(a4 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved) = a2;
  outlined init with copy of SignalProviding((uint64_t)v14, a4 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender);
  uint64_t v12 = BaseRCHFlowDelegate.init()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v12;
}

uint64_t specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = type metadata accessor for CATOption();
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_4();
  *(void *)((char *)a6 + direct field offset for StartAudioCallCatTemplatingService.catFamily) = a2;
  outlined init with copy of SignalProviding(a1, (uint64_t)v17);
  type metadata accessor for StartCallCATs();
  swift_retain();
  static CATOption.defaultMode.getter();
  uint64_t v14 = CATWrapper.__allocating_init(options:globals:)();
  swift_retain();
  uint64_t v15 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(0xD000000000000014, 0x800000000048C930, v17, a3, a4, a5, 0, 0, 0, 0, v14, a6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v15;
}

uint64_t outlined init with take of CommonDirectAction?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of CommonDirectAction?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_2(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentResponseType : DismissSiriDeclaringIntentResponse in StartAudioCallRCHFlowDelegate()
{
  return &protocol witness table for INStartAudioCallIntentResponse;
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentType : CallingIntent in StartAudioCallRCHFlowDelegate()
{
  return &protocol witness table for INStartAudioCallIntent;
}

uint64_t instantiation function for generic protocol witness table for StartAudioCallRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type StartAudioCallRCHFlowDelegate and conformance StartAudioCallRCHFlowDelegate(&lazy protocol witness table cache variable for type StartAudioCallRCHFlowDelegate and conformance StartAudioCallRCHFlowDelegate, (void (*)(uint64_t))type metadata accessor for StartAudioCallRCHFlowDelegate);
  *(void *)(a1 + 8) = result;
  return result;
}

{
  uint64_t result;

  uint64_t result = lazy protocol witness table accessor for type StartAudioCallRCHFlowDelegate and conformance StartAudioCallRCHFlowDelegate(&lazy protocol witness table cache variable for type StartAudioCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>, (void (*)(uint64_t))type metadata accessor for StartAudioCallRCHFlowDelegate);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for StartAudioCallRCHFlowDelegate()
{
  uint64_t result = type metadata singleton initialization cache for StartAudioCallRCHFlowDelegate;
  if (!type metadata singleton initialization cache for StartAudioCallRCHFlowDelegate) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for StartAudioCallRCHFlowDelegate()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for StartAudioCallRCHFlowDelegate()
{
  return type metadata accessor for StartAudioCallRCHFlowDelegate();
}

uint64_t sub_1CED74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t lazy protocol witness table accessor for type StartAudioCallRCHFlowDelegate and conformance StartAudioCallRCHFlowDelegate(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_48()
{
  return specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)(v2, v1, v5, v0, v3, v4);
}

uint64_t OUTLINED_FUNCTION_7_51()
{
  return v0;
}

uint64_t CarPlayDirectInvocationFlowStrategy.toAnyIntentFlowStrategy()(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  type metadata accessor for AnyIntentCarPlayDirectActionFlowStrategy();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2, a1);
  return AnyIntentCarPlayDirectActionFlowStrategy.__allocating_init<A>(_:)((uint64_t)v9, a1, a2);
}

uint64_t type metadata accessor for AnyIntentCarPlayDirectActionFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.init(rchFlowProvider:app:input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v8 = type metadata accessor for OnDeviceCarPlayWithInputFlowStrategy();
  *(void *)(a5 + *(int *)(v8 + 36)) = a2;
  uint64_t v9 = a5 + *(int *)(v8 + 40);
  uint64_t v10 = type metadata accessor for Input();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a3, v10);
}

uint64_t DefaultCarPlayDirectActionFlowStrategy.init(rchFlowProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t CarPlayDirectInvocationFlowStrategy.makeRCHFlow(app:skIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - v12;
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(a1, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
  return v15;
}

uint64_t CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NLContextUpdate();

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
}

uint64_t CarPlayDirectInvocationFlowStrategy.makeNLContextWithNLInput(verb:appId:)(unsigned __int8 a1)
{
  int v2 = a1;
  type metadata accessor for MachineUtteranceBuilder();
  swift_allocObject();
  MachineUtteranceBuilder.init()();
  if (v2 != 14) {
    PhoneCallVerbSemantics.rawValue.getter(a1);
  }
  dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)();
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for AppOntologyNode();
  static AppOntologyNode.applicationIdNode.getter();
  TerminalOntologyNode.name.getter();
  swift_release();
  dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)();
  swift_release();
  swift_bridgeObjectRelease();
  NLContextUpdate.init()();
  dispatch thunk of MachineUtteranceBuilder.build()();
  NLContextUpdate.nlInput.setter();

  return swift_release();
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(a1, a2, a3);
  return v6;
}

uint64_t type metadata accessor for OnDeviceCarPlayWithInputFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

void *AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v30 - v12;
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = CarPlayRCHFlowProviding.toAnyRCHFlowProvider()(AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
  v4[2] = v14;
  v4[6] = a2;
  __swift_allocate_boxed_opaque_existential_1(v4 + 3);
  OUTLINED_FUNCTION_1_44();
  uint64_t v16 = v15;
  (*(void (**)(void))(v15 + 16))();
  uint64_t v17 = OUTLINED_FUNCTION_3_62();
  v4[7] = implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(v17, v18, v19, v20);
  v4[8] = v21;
  uint64_t v22 = OUTLINED_FUNCTION_3_62();
  uint64_t v26 = implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(v22, v23, v24, v25);
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, a2);
  v4[9] = v26;
  v4[10] = v28;
  return v4;
}

uint64_t (*implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
}

uint64_t (*implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.makeRCHFlow(app:skIntent:)()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)()
{
  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.unbox<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  outlined init with copy of Any(v2 + 24, (uint64_t)&v7);
  int v5 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a2, v5 ^ 1u, 1, a1);
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.__deallocating_deinit()
{
  AnyIntentCarPlayDirectActionFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.rchFlowProvider.getter in conformance AnyIntentCarPlayDirectActionFlowStrategy<A>@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
  return swift_retain();
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.makeRCHFlow(app:skIntent:) in conformance AnyIntentCarPlayDirectActionFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:) in conformance AnyIntentCarPlayDirectActionFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.app.getter()
{
  return swift_retain();
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.input.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for Input();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.makeRCHFlow(app:skIntent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, void))(*(void *)(a3 + 24) + 16))(v3 + *(int *)(a3 + 40), *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.makeNLContextUpdate(app:)@<X0>(uint64_t a1@<X8>)
{
  App.appIdentifier.getter();
  swift_getWitnessTable();
  CarPlayDirectInvocationFlowStrategy.makeNLContextWithNLInput(verb:appId:)(0xEu);
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for NLContextUpdate();

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v2);
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:) in conformance OnDeviceCarPlayWithInputFlowStrategy<A>@<X0>(uint64_t a1@<X8>)
{
  return OnDeviceCarPlayWithInputFlowStrategy.makeNLContextUpdate(app:)(a1);
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.rchFlowProvider.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_2_71(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16), a2);
}

uint64_t DefaultCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)@<X0>(uint64_t a1@<X8>)
{
  if (App.isFirstParty()())
  {
    swift_getWitnessTable();
    CarPlayDirectInvocationFlowStrategy.makeNLContextWithNLInput(verb:appId:)(0);
  }
  else
  {
    App.appIdentifier.getter();
    swift_getWitnessTable();
    CarPlayDirectInvocationFlowStrategy.makeNLContextWithNLInput(verb:appId:)(0);
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = type metadata accessor for NLContextUpdate();

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v2);
}

uint64_t associated type witness table accessor for CarPlayDirectInvocationFlowStrategy.RCHFlowProviderType : CarPlayRCHFlowProviding in AnyIntentCarPlayDirectActionFlowStrategy<A>()
{
  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for CarPlayDirectInvocationFlowStrategy.RCHFlowProviderType : CarPlayRCHFlowProviding in OnDeviceCarPlayWithInputFlowStrategy<A>(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:) in conformance DefaultCarPlayDirectActionFlowStrategy<A>@<X0>(uint64_t a1@<X8>)
{
  return DefaultCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)(a1);
}

uint64_t type metadata completion function for AnyIntentCarPlayDirectActionFlowStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata instantiation function for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t type metadata completion function for OnDeviceCarPlayWithInputFlowStrategy()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Input();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OnDeviceCarPlayWithInputFlowStrategy(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for Input();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  unsigned int v12 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (((*(_DWORD *)(v6 + 80) | v10) & 0x100000) != 0
    || (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~(unint64_t)v10)
      + *(void *)(*(void *)(v8 - 8) + 64) <= 0x18
      ? (BOOL v13 = v12 > 7)
      : (BOOL v13 = 1),
        v13))
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v14 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v15 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v16;
    uint64_t v17 = ((unint64_t)v15 + v11 + 8) & ~v11;
    uint64_t v18 = ((unint64_t)v16 + v11 + 8) & ~v11;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_retain();
    v19(v17, v18, v14);
  }
  return a1;
}

uint64_t destroy for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = type metadata accessor for Input();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t initializeWithCopy for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = type metadata accessor for Input();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  swift_retain();
  v11(v13, v14, v9);
  return a1;
}

uint64_t assignWithCopy for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_retain();
  swift_release();
  uint64_t v9 = type metadata accessor for Input();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 24))(((unint64_t)v7 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), v9);
  return a1;
}

uint64_t initializeWithTake for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = type metadata accessor for Input();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)v7 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), v9);
  return a1;
}

uint64_t assignWithTake for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_release();
  uint64_t v9 = type metadata accessor for Input();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeviceCarPlayWithInputFlowStrategy(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = type metadata accessor for Input();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = v7;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v8;
  if (a2 <= v12) {
    goto LABEL_26;
  }
  unint64_t v16 = ((v14 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v14) + *(void *)(*(void *)(v8 - 8) + 64);
  char v17 = 8 * v16;
  if (v16 > 3) {
    goto LABEL_10;
  }
  unsigned int v20 = ((a2 - v12 + ~(-1 << v17)) >> v17) + 1;
  if (HIWORD(v20))
  {
    int v18 = *(_DWORD *)((char *)a1 + v16);
    if (v18) {
      goto LABEL_18;
    }
  }
  else
  {
    if (v20 <= 0xFF)
    {
      if (v20 < 2) {
        goto LABEL_26;
      }
LABEL_10:
      int v18 = *((unsigned __int8 *)a1 + v16);
      if (!*((unsigned char *)a1 + v16)) {
        goto LABEL_26;
      }
LABEL_18:
      int v21 = (v18 - 1) << v17;
      if (v16 > 3) {
        int v21 = 0;
      }
      if (v16)
      {
        if (v16 > 3) {
          LODWORD(v16) = 4;
        }
        switch((int)v16)
        {
          case 2:
            LODWORD(v16) = *a1;
            break;
          case 3:
            LODWORD(v16) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v16) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v16) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v12 + (v16 | v21) + 1;
    }
    int v18 = *(unsigned __int16 *)((char *)a1 + v16);
    if (*(unsigned __int16 *)((char *)a1 + v16)) {
      goto LABEL_18;
    }
  }
LABEL_26:
  if (v7 == v12)
  {
    uint64_t v22 = (uint64_t)a1;
    uint64_t v10 = v7;
    uint64_t v15 = v5;
LABEL_33:
    return __swift_getEnumTagSinglePayload(v22, v10, v15);
  }
  uint64_t v23 = (unint64_t *)(((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 0x80000000) != 0)
  {
    uint64_t v22 = ((unint64_t)v23 + v14 + 8) & ~v14;
    goto LABEL_33;
  }
  unint64_t v24 = *v23;
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void storeEnumTagSinglePayload for OnDeviceCarPlayWithInputFlowStrategy(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = type metadata accessor for Input();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v9 <= v12) {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  size_t v17 = ((v16 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16) + *(void *)(*(void *)(v10 - 8) + 64);
  char v18 = 8 * v17;
  if (a3 <= v14)
  {
    int v19 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v22))
    {
      int v19 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v22 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v20 = ~v14 + a2;
    if (v17 < 4)
    {
      int v21 = (v20 >> v18) + 1;
      if (v17)
      {
        int v23 = v20 & ~(-1 << v18);
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v17] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v21;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v17] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x1D0844);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v9 == v14)
      {
        uint64_t v24 = (uint64_t)a1;
        uint64_t v25 = a2;
        uint64_t v12 = v9;
        uint64_t v10 = v7;
      }
      else
      {
        uint64_t v26 = (void *)((unint64_t)&a1[v15 + 7] & 0xFFFFFFFFFFFFFFF8);
        if ((v13 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v27 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v27 = (a2 - 1);
          }
          *uint64_t v26 = v27;
          return;
        }
        uint64_t v24 = ((unint64_t)v26 + v16 + 8) & ~v16;
        uint64_t v25 = a2;
      }
      __swift_storeEnumTagSinglePayload(v24, v25, v12, v10);
      return;
  }
}

uint64_t type metadata completion function for DefaultCarPlayDirectActionFlowStrategy()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DefaultCarPlayDirectActionFlowStrategy(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t destroy for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t initializeWithCopy for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t assignWithCopy for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t initializeWithTake for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t assignWithTake for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultCarPlayDirectActionFlowStrategy(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void storeEnumTagSinglePayload for DefaultCarPlayDirectActionFlowStrategy(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1D0E70);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for DefaultCarPlayDirectActionFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 48))();
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)()
{
  OUTLINED_FUNCTION_1_44();
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t OUTLINED_FUNCTION_2_71@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  return a1(a2);
}

uint64_t OUTLINED_FUNCTION_3_62()
{
  return v0;
}

uint64_t key path getter for IncomingCallFollowUpFlow.state : <A, B>IncomingCallFollowUpFlow<A, B>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 128))();
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

void key path setter for IncomingCallFollowUpFlow.state : <A, B>IncomingCallFollowUpFlow<A, B>(unint64_t *a1, void *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = (void *)a1[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)*a2;
  swift_beginAccess();
  unint64_t v6 = v5[12];
  uint64_t v7 = (void *)v5[13];
  size_t v8 = (void *)v5[14];
  v5[12] = v2;
  v5[13] = v3;
  v5[14] = v4;
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(v2, v3, v4);
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v6, v7, v8);
}

unint64_t IncomingCallFollowUpFlow.state.getter()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 96);
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(v1, *(void **)(v0 + 104), *(void **)(v0 + 112));
  return v1;
}

unint64_t outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(unint64_t result, void *a2, void *a3)
{
  if (result >> 62 == 1)
  {
    return swift_retain();
  }
  else if (!(result >> 62))
  {
    swift_retain();
    id v5 = a2;
    return (unint64_t)a3;
  }
  return result;
}

uint64_t IncomingCallFollowUpFlow.__allocating_init(app:intent:intentResponse:strategy:sharedGlobals:)()
{
  OUTLINED_FUNCTION_37_5();
  outlined init with copy of SignalProviding(v6, (uint64_t)v10);
  outlined init with copy of SignalProviding(v0, (uint64_t)v9);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unsigned char *, unsigned char *))(v1 + 152))(v5, v4, v3, v10, v9);
  __swift_destroy_boxed_opaque_existential_1(v0);
  __swift_destroy_boxed_opaque_existential_1(v2);
  return v7;
}

uint64_t IncomingCallFollowUpFlow.__allocating_init(state:strategy:sharedGlobals:)()
{
  OUTLINED_FUNCTION_37_5();
  OUTLINED_FUNCTION_15_27();
  uint64_t v5 = swift_allocObject();
  IncomingCallFollowUpFlow.init(state:strategy:sharedGlobals:)(v4, v3, v2, v1, v0);
  return v5;
}

void *IncomingCallFollowUpFlow.init(state:strategy:sharedGlobals:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, long long *a5)
{
  v5[12] = a1;
  v5[13] = a2;
  v5[14] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(v5 + 2));
  outlined init with take of AppSelectionSignalComponent(a5, (uint64_t)(v5 + 7));
  return v5;
}

uint64_t IncomingCallFollowUpFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t type metadata accessor for IncomingCallFollowUpFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t IncomingCallFollowUpFlow.execute()(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *v1;
  return _swift_task_switch(IncomingCallFollowUpFlow.execute(), 0, 0);
}

uint64_t IncomingCallFollowUpFlow.execute()()
{
  unint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 64) + 128))();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  if (!(v1 >> 62))
  {
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v12 + 88);
    uint64_t v13 = *(void *)(v12 + 96);
    unsigned int v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
    swift_retain();
    id v41 = v3;
    id v40 = v5;
    char v16 = v15(v14, v13);
    if (FollowUpOfferType.rawValue.getter(v16) == 0xD000000000000011 && v17 == 0x800000000048DCD0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        goto LABEL_14;
      }
    }
    __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 64) + 56), *(void *)(*(void *)(v0 + 64) + 80));
    uint64_t v19 = OUTLINED_FUNCTION_16_2();
    v20(v19);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    char v21 = DeviceState.isAuthenticatedForPhone.getter();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    if ((v21 & 1) == 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      uint64_t v34 = OUTLINED_FUNCTION_25_0(v33, (uint64_t)static Logger.siriPhone);
      os_log_type_t v35 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v34, v35))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
        OUTLINED_FUNCTION_23_22(&dword_0, v36, v37, "#IncomingCallFollowUpFlow: Execute. Device is not authenticated for phone. Not offering follow callBack follow up.");
        OUTLINED_FUNCTION_6();
      }

      static ExecuteResponse.complete()();
      goto LABEL_24;
    }
LABEL_14:
    unsigned int v22 = *(void **)(v0 + 64);
    uint64_t v23 = v22[5];
    uint64_t v24 = v22[6];
    __swift_project_boxed_opaque_existential_1(v22 + 2, v23);
    (*(void (**)(unint64_t, id, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v1, v40, v22 + 7, v14, v13, v23, v24);
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    uint64_t v26 = OUTLINED_FUNCTION_25_0(v25, (uint64_t)static Logger.siriPhone);
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "#IncomingCallFollowUpFlow: Offer prompt. IncomingCallFlow is still ongoing.", v28, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v29 = *(void *)(v0 + 64);

    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = v29;
    v30[3] = v1;
    v30[4] = v41;
    v30[5] = v40;
    swift_retain();
    id v31 = v41;
    id v32 = v40;
    swift_retain();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)();
    swift_release();
    swift_release();

LABEL_24:
    swift_release();
    goto LABEL_25;
  }
  if (v1 >> 62 != 1)
  {
    static ExecuteResponse.complete()();
    goto LABEL_26;
  }
  uint64_t v6 = one-time initialization token for siriPhone;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  size_t v8 = OUTLINED_FUNCTION_25_0(v7, (uint64_t)static Logger.siriPhone);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_2_3(&dword_0, v10, v11, "#IncomingCallFollowUpFlow: Executing next RCHFlow.");
    OUTLINED_FUNCTION_6();
  }

  static ExecuteResponse.complete(next:)();
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v1, v3, v5);
LABEL_25:
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v1, v3, v5);
LABEL_26:
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

void outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(unint64_t a1, void *a2, void *a3)
{
  if (a1 >> 62 == 1)
  {
    swift_release();
  }
  else if (!(a1 >> 62))
  {
    swift_release();
  }
}

void IncomingCallFollowUpFlow.onOfferFlowComplete(app:intent:intentResponse:exitValue:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  int v11 = (*(unsigned __int8 (**)(void))(*(void *)(*(void *)v5 + 96) + 24))(*(void *)(*(void *)v5 + 88));
  if (v11 == 1 || v11 == 3)
  {
    IncomingCallFollowUpFlow.processCallPromptResponse(app:intent:intentResponse:promptResult:)(a1, v10, (uint64_t)a3, a4);
  }
  else if (v11 == 2)
  {
    IncomingCallFollowUpFlow.processAnswerCallPromptResponse(app:intent:intentResponse:promptResult:)(a1, a2, a3);
  }
  else
  {
    OUTLINED_FUNCTION_6_16();
    OUTLINED_FUNCTION_11_35();
  }
}

uint64_t IncomingCallFollowUpFlow.processCallPromptResponse(app:intent:intentResponse:promptResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v77 = a1;
  uint64_t v82 = *v5;
  uint64_t v83 = a3;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<IncomingCallIntentResponse, Input>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v78 = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Input?);
  __chkstk_darwin(v9 - 8);
  OUTLINED_FUNCTION_46_0();
  uint64_t v79 = v10 - v11;
  __chkstk_darwin(v12);
  uint64_t v80 = (char *)v74 - v13;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v86 = v14;
  uint64_t v87 = v15;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_3_1();
  uint64_t v85 = v16;
  uint64_t v84 = type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_46_0();
  uint64_t v22 = v20 - v21;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v76 = (char *)v74 - v25;
  __chkstk_darwin(v24);
  uint64_t v88 = (char *)v74 - v26;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<IncomingCallActionConfirmation>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_46_0();
  uint64_t v32 = v30 - v31;
  __chkstk_darwin(v33);
  os_log_type_t v35 = (char *)v74 - v34;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v37 = a4;
  uint64_t v39 = v38;
  v36((char *)v74 - v34, v37, v38);
  id v40 = *(unsigned int (**)(char *, uint64_t))(v28 + 88);
  uint64_t v89 = v35;
  if (v40(v35, v39) != enum case for PromptResult.answered<A>(_:)) {
    goto LABEL_4;
  }
  v36((char *)v32, (uint64_t)v89, v39);
  (*(void (**)(uint64_t, uint64_t))(v28 + 96))(v32, v39);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (newInput: Input));
  if (__swift_getEnumTagSinglePayload(v32, 1, v41) != 1)
  {
    uint64_t v75 = v39;
    uint64_t v42 = *(void (**)(void))(v18 + 32);
    v74[1] = v18 + 32;
    uint64_t v43 = v42;
    OUTLINED_FUNCTION_15_10();
    v44();
    uint64_t v45 = v85;
    Input.parse.getter();
    int v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 88))(v45, v86);
    if (v46 == enum case for Parse.NLv3IntentOnly(_:))
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallIntentResponse);
      Transformer.init(transform:)();
      uint64_t v47 = (void (*)(uint64_t *))Transformer.transform.getter();
      OUTLINED_FUNCTION_11();
      v48();
      uint64_t v49 = *(void *)(v82 + 96);
      uint64_t v90 = v83;
      uint64_t v91 = v49;
      uint64_t v50 = v79;
      v47(&v90);
      swift_release();
      OUTLINED_FUNCTION_16_3(v50, 0);
      OUTLINED_FUNCTION_15_10();
      v43();
      IncomingCallFollowUpFlow.getFollowUpActionWithStartCallFlow(app:input:)(v77, v22);
      uint64_t v56 = *(void (**)(void))(v18 + 8);
      OUTLINED_FUNCTION_2_72();
      v56();
      OUTLINED_FUNCTION_2_72();
      v56();
      OUTLINED_FUNCTION_1_67();
      unint64_t v57 = OUTLINED_FUNCTION_18_23();
LABEL_19:
      v5[13] = 0;
      outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v57, v58, v59);
      uint64_t v71 = OUTLINED_FUNCTION_20_22();
      v72(v71);
LABEL_20:
      uint64_t v39 = v75;
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v89, v39);
    }
    if (v46 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v87 + 96))(v85, v86);
      swift_unknownObjectRelease();
      uint64_t v51 = (uint64_t)v80;
    }
    else
    {
      uint64_t v51 = (uint64_t)v80;
      if (v46 != enum case for Parse.uso(_:))
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v65 = type metadata accessor for Logger();
        uint64_t v66 = (void *)OUTLINED_FUNCTION_25_0(v65, (uint64_t)static Logger.siriPhone);
        os_log_type_t v67 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_14_2(v67))
        {
          *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
          OUTLINED_FUNCTION_15_11(&dword_0, v68, v69, "#IncomingCallFollowUpFlow: Rely on FlowPlugin to provide next RCHFlow. IncomingCallFlow is now complete.");
          OUTLINED_FUNCTION_6();
        }

        OUTLINED_FUNCTION_2_72();
        v70();
        OUTLINED_FUNCTION_1_67();
        unint64_t v57 = OUTLINED_FUNCTION_10_32();
        goto LABEL_19;
      }
      uint64_t v52 = OUTLINED_FUNCTION_20_22();
      v53(v52);
    }
    if (one-time initialization token for transformer != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v81, (uint64_t)static Transformer<>.transformer);
    unint64_t v54 = (void (*)(uint64_t *))Transformer.transform.getter();
    uint64_t v55 = *(void *)(v82 + 96);
    uint64_t v90 = v83;
    uint64_t v91 = v55;
    v54(&v90);
    swift_release();
    OUTLINED_FUNCTION_16_3(v51, 0);
    uint64_t v60 = (uint64_t)v76;
    OUTLINED_FUNCTION_15_10();
    v43();
    IncomingCallFollowUpFlow.getFollowUpActionWithStartCallFlow(app:input:)(v77, v60);
    uint64_t v61 = *(void (**)(void))(v18 + 8);
    OUTLINED_FUNCTION_2_72();
    v61();
    OUTLINED_FUNCTION_2_72();
    v61();
    OUTLINED_FUNCTION_1_67();
    unint64_t v62 = OUTLINED_FUNCTION_18_23();
    v5[13] = 0;
    outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v62, v63, v64);
    goto LABEL_20;
  }
  _s27PhoneCallFlowDelegatePlugin0aB10NLv3IntentVWOhTm_0(v32, (void (*)(void))type metadata accessor for IncomingCallActionConfirmation);
LABEL_4:
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_11_35();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v89, v39);
}

uint64_t IncomingCallFollowUpFlow.getFollowUpActionWithStartCallFlow(app:input:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = v10 - v9;
  outlined init with copy of SignalProviding(v2 + 56, (uint64_t)v27);
  uint64_t v12 = swift_retain();
  default argument 2 of PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)(v26, v12);
  type metadata accessor for StartCallFlow();
  swift_allocObject();
  uint64_t v13 = StartCallFlow.init(app:sharedGlobals:appFinder:)(a1, (uint64_t)v27, (uint64_t)v26);
  (*(void (**)(uint64_t))(*(void *)v13 + 192))(a2);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, a2, v5);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    lazy protocol witness table accessor for type StartCallFlow and conformance PhoneFlow<A, B>((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, (void (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    v26[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v20 = OUTLINED_FUNCTION_28_18();
    v21(v20);
    _os_log_impl(&dword_0, v15, v16, "#IncomingCallFollowUpFlow: Initialized StartCallFlow for input %s, setting to followup action.", v17, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    uint64_t v22 = OUTLINED_FUNCTION_28_18();
    v23(v22);
  }

  v27[0] = v13;
  lazy protocol witness table accessor for type StartCallFlow and conformance PhoneFlow<A, B>(&lazy protocol witness table cache variable for type StartCallFlow and conformance PhoneFlow<A, B>, (void (*)(uint64_t))type metadata accessor for StartCallFlow);
  uint64_t v24 = Flow.eraseToAnyFlow()();
  swift_release();
  return v24 | 0x4000000000000000;
}

uint64_t IncomingCallFollowUpFlow.processAnswerCallPromptResponse(app:intent:intentResponse:promptResult:)(uint64_t a1, void *a2, void *a3)
{
  void (*v34)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  void *v44;
  void (*v45)(void);
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  void *v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  id v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void);
  unint64_t v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void);
  void v90[2];
  void *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  long long v102;
  uint64_t v103;
  uint64_t v104;
  unsigned char v105[40];
  void v106[2];
  long long v107;
  long long v108;
  uint64_t v109;
  char v110[8];
  uint64_t v111;
  uint64_t v112;
  __int16 v113;
  void *v114;
  void *v115;
  ValueMetadata *v116;
  _UNKNOWN **v117;
  ValueMetadata *v118;
  _UNKNOWN **v119;

  uint64_t v4 = v3;
  uint64_t v98 = a3;
  uint64_t v99 = a2;
  uint64_t v100 = a1;
  type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v94 = v6;
  unint64_t v95 = (void *)v5;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for CATOption();
  __chkstk_darwin(v10 - 8);
  OUTLINED_FUNCTION_4();
  type metadata accessor for Input();
  OUTLINED_FUNCTION_0_0();
  unint64_t v96 = v12;
  uint64_t v97 = v11;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_3_1();
  uint64_t v101 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<IncomingCallActionConfirmation>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_46_0();
  uint64_t v20 = v18 - v19;
  __chkstk_darwin(v21);
  uint64_t v22 = *(void (**)(void))(v16 + 16);
  uint64_t v24 = (char *)v90 - v23;
  v22();
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v24, v14) != enum case for PromptResult.answered<A>(_:))
  {
    OUTLINED_FUNCTION_6_16();
    OUTLINED_FUNCTION_14_29();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v24, v14);
  }
  ((void (*)(uint64_t, char *, uint64_t))v22)(v20, v24, v14);
  (*(void (**)(uint64_t, uint64_t))(v16 + 96))(v20, v14);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (newInput: Input));
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v20, 1, v25);
  uint64_t v92 = v14;
  uint64_t v93 = v24;
  if (EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_15_10();
    v45();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    int v46 = type metadata accessor for Logger();
    v90[1] = __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
    uint64_t v47 = Logger.logObject.getter();
    uint64_t v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_2_3(&dword_0, v49, v50, "#IncomingCallFollowUpFlow: Offer type is .answerCall and user confirmed. Transitioning to .executeFollowUpAction with AnswerCallFlow");
      OUTLINED_FUNCTION_6();
    }

    uint64_t v52 = v4[10];
    uint64_t v51 = v4[11];
    __swift_project_boxed_opaque_existential_1(v4 + 7, v52);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v51 + 8))(&v102, v52, v51);
    uint64_t v53 = v4[5];
    unint64_t v54 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v53);
    uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(v53, v54);
    LOBYTE(v54) = v56;
    unint64_t v57 = type metadata accessor for AnswerCallCATsSimple();
    static CATOption.defaultMode.getter();
    uint64_t v58 = CATWrapperSimple.__allocating_init(options:globals:)();
    os_log_type_t v116 = &type metadata for AudioSessionManager;
    v117 = &protocol witness table for AudioSessionManager;
    uint64_t v118 = &type metadata for EntitlementChecker;
    uint64_t v119 = &protocol witness table for EntitlementChecker;
    *((void *)&v107 + 1) = v57;
    *(void *)&uint64_t v108 = &protocol witness table for AnswerCallCATsSimple;
    v106[0] = v58;
    *((void *)&v108 + 1) = v55;
    LOBYTE(v109) = v54;
    outlined init with take of AppSelectionSignalComponent(&v102, (uint64_t)v110);
    uint64_t v59 = v4[10];
    uint64_t v60 = v4[11];
    uint64_t v91 = v4 + 7;
    __swift_project_boxed_opaque_existential_1(v4 + 7, v59);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 72);
    uint64_t v98 = v98;
    uint64_t v99 = v99;
    unint64_t v62 = v100;
    swift_retain();
    uint64_t v63 = v61(v59, v60);
    Input.parse.getter();
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)v63 + 192))(&v102, v9);
    swift_release();
    OUTLINED_FUNCTION_11();
    v64();
    if (v103)
    {
      outlined init with take of AppSelectionSignalComponent(&v102, (uint64_t)v105);
      uint64_t v65 = v91;
      __swift_project_boxed_opaque_existential_1(v91, v4[10]);
      uint64_t v66 = OUTLINED_FUNCTION_16_2();
      v67(v66);
      uint64_t v68 = v98;
      uint64_t v69 = v99;
      uint64_t v70 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(v105, v62, v99, v98);
      outlined destroy of SKTransformer((uint64_t)&v102);
      if (v70)
      {
        specialized static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)();
        outlined init with copy of SignalProviding((uint64_t)v65, (uint64_t)&v104);
        outlined init with copy of AnswerCallOutputStrategy((uint64_t)v106, (uint64_t)&v102);
        swift_retain();
        specialized IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)();
        *(void *)&uint64_t v102 = v71;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
        lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance PhoneFlow<A, B>, &demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
        uint64_t v72 = Flow.eraseToAnyFlow()();

        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
        outlined destroy of AnswerCallOutputStrategy((uint64_t)v106);
        OUTLINED_FUNCTION_11();
        v73();
        swift_release();
        OUTLINED_FUNCTION_6_16();
        uint64_t v74 = v4[12];
        uint64_t v75 = (void *)v4[13];
        uint64_t v76 = (void *)v4[14];
        v4[14] = 0;
        v4[12] = v72 | 0x4000000000000000;
LABEL_25:
        v4[13] = 0;
        outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v74, v75, v76);
        uint64_t v14 = v92;
        uint64_t v24 = v93;
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v24, v14);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
    }
    else
    {
      outlined destroy of PhoneCallNLIntent?((uint64_t)&v102, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      uint64_t v68 = v98;
      uint64_t v69 = v99;
    }
    uint64_t v84 = Logger.logObject.getter();
    uint64_t v85 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v84, v85))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_84(&dword_0, v86, v87, "#IncomingCallFollowUpFlow: Unable to construct PhoneCallNLIntent from follow-up SiriKitFlow.Input.");
      OUTLINED_FUNCTION_6();
    }

    swift_release();
    outlined destroy of AnswerCallOutputStrategy((uint64_t)v106);
    OUTLINED_FUNCTION_11();
    v88();
    OUTLINED_FUNCTION_6_16();
    uint64_t v74 = v4[12];
    uint64_t v75 = (void *)v4[13];
    uint64_t v76 = (void *)v4[14];
    v4[14] = 0;
    v4[12] = 0x8000000000000000;
    goto LABEL_25;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v101 = v16;
  uint64_t v27 = type metadata accessor for Logger();
  uint64_t v94 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_84(&dword_0, v30, v31, "#IncomingCallFollowUpFlow: Offer type is .answerCall and user rejected. Transitioning to .executeFollowUpAction with RCHFlow<HangUpCall>");
    OUTLINED_FUNCTION_6();
  }

  uint64_t v33 = v4[10];
  uint64_t v32 = v4[11];
  unint64_t v95 = v4 + 7;
  __swift_project_boxed_opaque_existential_1(v4 + 7, v33);
  uint64_t v34 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 80);
  os_log_type_t v35 = (uint64_t)v98;
  uint64_t v97 = v98;
  uint64_t v36 = (uint64_t)v99;
  unint64_t v96 = v99;
  uint64_t v37 = v100;
  swift_retain();
  v34(&v102, v33, v32);
  uint64_t v109 = 0;
  uint64_t v108 = 0u;
  uint64_t v107 = 0u;
  v106[0] = _swiftEmptyArrayStorage;
  v106[1] = _swiftEmptyArrayStorage;
  v110[0] = 2;
  uint64_t v111 = 0;
  long long v112 = 0xB23030905050204;
  unint64_t v113 = 518;
  v114 = _swiftEmptyArrayStorage;
  v115 = _swiftEmptyArrayStorage;
  uint64_t v38 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)((uint64_t)v106, v37, v36, v35, (uint64_t)&v102);
  outlined destroy of SKTransformer((uint64_t)&v102);
  outlined destroy of PhoneCallNLv4Intent((uint64_t)v106);
  if (v38)
  {
    outlined init with copy of SignalProviding((uint64_t)v95, (uint64_t)v106);
    type metadata accessor for HangUpCallRCHFlowDelegate();
    uint64_t v39 = swift_allocObject();
    outlined init with copy of SignalProviding((uint64_t)v106, v39 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals);
    BaseRCHFlowDelegate.init()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
    static PhoneCallFlowFactory.makeHangUpCallRCHFlow(delegate:intent:app:sharedGlobals:)();
    v106[0] = v40;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
    uint64_t v41 = Flow.eraseToAnyFlow()();
    swift_release();

    swift_release();
    swift_release();
    OUTLINED_FUNCTION_6_16();
    uint64_t v42 = v4[12];
    uint64_t v43 = (void *)v4[13];
    uint64_t v44 = (void *)v4[14];
    v4[13] = 0;
    v4[14] = 0;
    v4[12] = v41 | 0x4000000000000000;
    outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v42, v43, v44);
    uint64_t v14 = v92;
    uint64_t v24 = v93;
    uint64_t v16 = v101;
  }
  else
  {
    uint64_t v78 = v96;
    uint64_t v77 = v97;
    uint64_t v79 = Logger.logObject.getter();
    uint64_t v80 = static os_log_type_t.error.getter();
    uint64_t v81 = os_log_type_enabled(v79, v80);
    uint64_t v14 = v92;
    uint64_t v16 = v101;
    if (v81)
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_23_22(&dword_0, v82, v83, "#IncomingCallFollowUpFlow: Unable to construct PhoneCallNLIntent from follow-up SiriKitFlow.Input.");
      OUTLINED_FUNCTION_6();
    }

    swift_release();
    OUTLINED_FUNCTION_6_16();
    OUTLINED_FUNCTION_14_29();
    uint64_t v24 = v93;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v24, v14);
}

uint64_t IncomingCallFollowUpFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(*(void *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112));
  return v0;
}

uint64_t IncomingCallFollowUpFlow.__deallocating_deinit()
{
  IncomingCallFollowUpFlow.deinit();
  OUTLINED_FUNCTION_15_27();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance IncomingCallFollowUpFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance IncomingCallFollowUpFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t protocol witness for Flow.execute() in conformance IncomingCallFollowUpFlow<A, B>(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 176) + **(int **)(**(void **)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for Flow.execute() in conformance PhoneFlow<A, B>;
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance IncomingCallFollowUpFlow<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for IncomingCallFollowUpFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_1D3148()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #1 in IncomingCallFollowUpFlow.execute()(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(**(void **)(v1 + 16) + 184))(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1D31F0()
{
  return 24;
}

__n128 sub_1D31FC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t type metadata completion function for IncomingCallFollowUpFlow()
{
  return swift_initClassMetadata2();
}

void destroy for IncomingCallFollowUpFlow.State(uint64_t a1)
{
}

unint64_t *initializeBufferWithCopyOfBuffer for IncomingCallFollowUpFlow.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a2[2];
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(*a2, v4, v5);
  *a1 = v3;
  a1[1] = (unint64_t)v4;
  a1[2] = (unint64_t)v5;
  return a1;
}

unint64_t *assignWithCopy for IncomingCallFollowUpFlow.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a2[2];
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(*a2, v4, v5);
  unint64_t v6 = *a1;
  uint64_t v7 = (void *)a1[1];
  uint64_t v8 = (void *)a1[2];
  *a1 = v3;
  a1[1] = (unint64_t)v4;
  a1[2] = (unint64_t)v5;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v6, v7, v8);
  return a1;
}

unint64_t *assignWithTake for IncomingCallFollowUpFlow.State(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  unint64_t v6 = (void *)a1[1];
  uint64_t v5 = (void *)a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for IncomingCallFollowUpFlow.State(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for IncomingCallFollowUpFlow.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTag for IncomingCallFollowUpFlow.State(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *destructiveProjectEnumData for IncomingCallFollowUpFlow.State(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *destructiveInjectEnumTag for IncomingCallFollowUpFlow.State(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    unint64_t v2 = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    unint64_t v2 = (8 * (a2 - 2)) | 0x8000000000000000;
    result[1] = 0;
    result[2] = 0;
  }
  *__n128 result = v2;
  return result;
}

uint64_t type metadata accessor for IncomingCallFollowUpFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t lazy protocol witness table accessor for type StartCallFlow and conformance PhoneFlow<A, B>(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D3BF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = OUTLINED_FUNCTION_15_27();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t outlined destroy of PhoneCallNLIntent?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_39_8();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_67()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_10_32()
{
  uint64_t result = *(void *)(v0 + 96);
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 96) = 0x8000000000000000;
  return result;
}

void OUTLINED_FUNCTION_11_35()
{
  unint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[13];
  unint64_t v4 = (void *)v0[14];
  v0[13] = 0;
  v0[14] = 0;
  v0[12] = 0x8000000000000000;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v2, v3, v4);
}

void OUTLINED_FUNCTION_14_29()
{
  unint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[13];
  unint64_t v4 = (void *)v0[14];
  v0[13] = 0;
  v0[14] = 0;
  v0[12] = 0x8000000000000000;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_15_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_23()
{
  uint64_t result = *(void *)(v0 + 96);
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 96) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_22()
{
  return *(void *)(v0 - 160);
}

void OUTLINED_FUNCTION_23_22(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_28_18()
{
  return v0;
}

void *CallingIntentRCHFlowStrategy.__allocating_init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(a1, (uint64_t)(v8 + 2));
  v8[7] = a2;
  v8[8] = a3;
  v8[9] = a4;
  return v8;
}

uint64_t CallingIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[10] = v2;
  v1[11] = v0;
  v1[9] = v3;
  v1[12] = *v0;
  v1[13] = type metadata accessor for PhoneError();
  v1[14] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t (*v24)(id);
  NSObject *log;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 80);
  type metadata accessor for IntentFromParseFlowStrategyHelper();
  outlined init with copy of SignalProviding(v2 + 16, v0 + 16);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)IntentFromParseFlowStrategyHelper.__allocating_init(sharedGlobals:appResolved:)((long long *)(v0 + 16), *(void *)(v2 + 56))+ 120);
  swift_retain();
  uint64_t v5 = v4(v1, v3);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    uint64_t v8 = v6;
    uint64_t v9 = Logger.logObject.getter();
    uint64_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      log = v9;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      *(void *)(v0 + 56) = v8;
      uint64_t v12 = v8;
      swift_getWitnessTable();
      uint64_t v13 = String.init<A>(describing:)();
      *(void *)(v0 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      uint64_t v9 = log;
      _os_log_impl(&dword_0, log, v10, "#CallingIntentRCHFlowStrategy Generated a siriKitIntent from Parse: %s", v11, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
    }
    swift_release();

    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(id))(v0 + 8);
    return v24(v8);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    uint64_t v16 = (void *)OUTLINED_FUNCTION_25_0(v15, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_14_2(v17))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_15_11(&dword_0, v18, v19, "#CallingIntentRCHFlowStrategy Could not generate a skIntent from Parse.");
      OUTLINED_FUNCTION_6();
    }
    uint64_t v20 = *(void *)(v0 + 112);

    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v21);
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_3(v20, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v22();
  }
}

void *CallingIntentRCHFlowStrategy.makeParameterMetadata(intent:)()
{
  return INIntent.parameterMetadata.getter();
}

uint64_t CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[19] = v2;
  v1[20] = v0;
  v1[17] = v3;
  v1[18] = v4;
  uint64_t v5 = type metadata accessor for ButtonConfigurationModel();
  OUTLINED_FUNCTION_19_0(v5);
  v1[21] = v6;
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  type metadata accessor for DialogPhase();
  v1[24] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OutputGenerationManifest();
  v1[25] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[26] = v8;
  v1[27] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  char v21;
  void *v22;
  void *v24;
  uint64_t v25;
  void *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t (*v33)(uint64_t, void);
  uint64_t (*v34)(uint64_t);
  void v35[5];
  uint64_t v36;
  uint64_t v37;

  uint64_t v36 = v0;
  uint64_t v1 = *(void **)(v0 + 160);
  static DialogPhase.error.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  type metadata accessor for SirikitDeviceState();
  uint64_t v2 = v1 + 2;
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v35, v3, v4);
  uint64_t v5 = SirikitDeviceState.__allocating_init(from:)();
  *(void *)(v0 + 224) = v5;
  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      uint64_t v8 = *(void **)(v0 + 152);
      uint64_t v9 = *(id *)(v0 + 144);
      uint64_t v10 = v8;
      if ([v7 code] == &dword_8)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v11 = type metadata accessor for Logger();
        uint64_t v12 = OUTLINED_FUNCTION_25_0(v11, (uint64_t)static Logger.siriPhone);
        uint64_t v13 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_7_2();
          *(_WORD *)uint64_t v14 = 0;
          _os_log_impl(&dword_0, v12, v13, "#CallingIntentRCHFlowStrategy airplane mode is enabled for emergency countdown request", v14, 2u);
          OUTLINED_FUNCTION_6();
        }
        uint64_t v16 = *(void **)(v0 + 152);
        uint64_t v15 = *(void *)(v0 + 160);

        uint64_t v17 = *(void **)(v15 + 72);
        uint64_t v18 = v16;
        swift_retain();
        uint64_t v19 = (void *)OUTLINED_FUNCTION_20_7();
        uint64_t v21 = static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v19, v20);

        uint64_t v33 = (uint64_t (*)(uint64_t, void))(*(void *)(class metadata base offset for StartCallCATsSimple
                                                                  + *v17
                                                                  + 288)
                                                      + **(int **)(class metadata base offset for StartCallCATsSimple
                                                                 + *v17
                                                                 + 288));
        uint64_t v22 = (void *)swift_task_alloc();
        *(void *)(v0 + 232) = v22;
        *uint64_t v22 = v0;
        v22[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
        return v33(v5, v21 & 1);
      }
      uint64_t v24 = *(void **)(v0 + 144);
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v26 = (void *)OUTLINED_FUNCTION_25_0(v25, (uint64_t)static Logger.siriPhone);
  uint64_t v27 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_14_2(v27))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_15_11(&dword_0, v28, v29, "#CallingIntentRCHFlowStrategy makeFailureConfirmingIntentResponse returning default dialog");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v30 = *(void *)(v0 + 160);

  uint64_t v31 = (void *)(class metadata base offset for StartCallCATsSimple + **(void **)(v30 + 72) + 272);
  uint64_t v34 = (uint64_t (*)(uint64_t))(*v31 + *(int *)*v31);
  swift_retain();
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v32;
  *uint64_t v32 = v0;
  v32[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  return v34(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v7 + 240) = v6;
  *(void *)(v7 + 248) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  uint64_t v1 = (void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                + **(void **)(*(void *)(v0 + 160) + 64)
                + 328);
  uint64_t v4 = (uint64_t (*)(void))(*v1 + *(int *)*v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v2;
  *uint64_t v2 = v0;
  v2[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  return v4();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 96;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 152);

  swift_release();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_3(v2, (void (*)(void))type metadata accessor for ButtonConfigurationModel);
  uint64_t v4 = OUTLINED_FUNCTION_20_7();
  v5(v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  if (!v0) {
    *(void *)(v5 + 312) = v3;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_18_3();

  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_20_7();
  v2(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t (*v4)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void **)(v0 + 152);

  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_2_73();
  v3(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v4();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void **)(v0 + 152);

  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_2_73();
  v4(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v5();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_18_3();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_2_73();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 264) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 272) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = (void *)v10[30];
  uint64_t v12 = v10[22];
  uint64_t v11 = (void *)v10[23];
  uint64_t v13 = (void *)v10[20];
  uint64_t v14 = v10[21];
  uint64_t v15 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v17 = v16;
  swift_release();
  ButtonConfigurationModel.init(label:url:)(v15, v17, v11);
  outlined init with copy of ButtonConfigurationModel((uint64_t)v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_467710;
  outlined init with take of ButtonConfigurationModel(v12, v19 + v18);
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  OutputGenerationManifest.responseViewId.setter();
  uint64_t v20 = v13[5];
  uint64_t v21 = v13[6];
  __swift_project_boxed_opaque_existential_1(v13 + 2, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 136))(v20, v21);
  uint64_t v23 = v10[10];
  uint64_t v22 = v10[11];
  uint64_t v24 = (void *)OUTLINED_FUNCTION_20_7();
  __swift_project_boxed_opaque_existential_1(v24, v25);
  v10[15] = type metadata accessor for PhoneSnippetDataModels();
  v10[16] = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 12);
  uint64_t *boxed_opaque_existential_1 = v19;
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 1;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_46A030;
  *(void *)(v27 + 32) = v36;
  uint64_t v37 = v27;
  specialized Array._endMutation()();
  v10[35] = v37;
  uint64_t v28 = *(void *)(v22 + 8);
  id v29 = v36;
  uint64_t v32 = (void *)swift_task_alloc();
  v10[36] = v32;
  *uint64_t v32 = v10;
  v32[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  uint64_t v33 = v10[27];
  uint64_t v34 = v10[17];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v34, v10 + 12, v37, v33, v23, v28, v30, v31, a9, a10);
}

{
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  uint64_t v11 = (void *)v10[39];
  uint64_t v12 = (void *)v10[20];
  uint64_t v13 = v12[5];
  uint64_t v14 = v12[6];
  __swift_project_boxed_opaque_existential_1(v12 + 2, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 136))(v13, v14);
  uint64_t v15 = v10[5];
  uint64_t v16 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v15);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_46A030;
  *(void *)(v17 + 32) = v11;
  uint64_t v27 = v17;
  specialized Array._endMutation()();
  unsigned char v10[40] = v27;
  unint64_t v18 = *(void *)(v16 + 8);
  uint64_t v19 = v11;
  uint64_t v23 = (void *)swift_task_alloc();
  v10[41] = v23;
  *uint64_t v23 = v10;
  v23[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  uint64_t v24 = v10[27];
  uint64_t v25 = v10[17];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v25, v27, v24, v15, v18, v20, v21, v22, a9, a10);
}

uint64_t CallingIntentRCHFlowStrategy.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CallingIntentRCHFlowStrategy.__deallocating_deinit()
{
  CallingIntentRCHFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance CallingIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 152)
                                                + **(int **)(**(void **)v2 + 152));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v8(a1, a2);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeParameterMetadata(intent:) in conformance CallingIntentRCHFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeErrorResponse(error:) in conformance CallingIntentRCHFlowStrategy<A1, B1>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for CallingIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for CallingIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for CallingIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for CallingIntentRCHFlowStrategy();
  void *v12 = v6;
  v12[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:) in conformance CallingIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 168)
                                                                   + **(int **)(**(void **)v4 + 168));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v12(a1, a2, a3, a4);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_3(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_39_8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t base witness table accessor for ResolveConfirmFlowStrategyAsync in CallingIntentRCHFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in CallingIntentRCHFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for RouteConfirmIntentResponseFlowStrategyAsync in CallingIntentRCHFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for CallingIntentRCHFlowStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t OUTLINED_FUNCTION_2_73()
{
  return *(void *)(v0 + 216);
}

uint64_t PhoneCallFlowState.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RCHFlowResult();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = type metadata accessor for Input();
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v16);
  unint64_t v18 = (uint64_t *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(v18, v2, a1);
  uint64_t v20 = 0x6C616974696E692ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      uint64_t v25 = *(uint64_t *)((char *)v18 + *(int *)(v24 + 48));
      uint64_t v26 = (long long *)((char *)v18 + *(int *)(v24 + 64));
      uint64_t v27 = OUTLINED_FUNCTION_2_74();
      v28(v27);
      outlined init with take of AppSelectionSignalComponent(v26, (uint64_t)v41);
      uint64_t v39 = 0;
      unint64_t v40 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      OUTLINED_FUNCTION_5_45((uint64_t)".runIntentConversion(");
      uint64_t v38 = v25;
      type metadata accessor for App();
      _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type App and conformance App, (void (*)(uint64_t))&type metadata accessor for App);
      v29._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      v30._uint64_t countAndFlagsBits = 8236;
      v30._object = (void *)0xE200000000000000;
      String.append(_:)(v30);
      _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, (void (*)(uint64_t))&type metadata accessor for Input);
      v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      v32._uint64_t countAndFlagsBits = 8236;
      v32._object = (void *)0xE200000000000000;
      String.append(_:)(v32);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DeviceState);
      _print_unlocked<A, B>(_:_:)();
      OUTLINED_FUNCTION_6_46();
      swift_release();
      uint64_t v20 = v39;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      goto LABEL_4;
    case 2u:
      uint64_t v33 = *v18;
      OUTLINED_FUNCTION_2_68();
      v34._uint64_t countAndFlagsBits = 0x284843526E75722ELL;
      v34._object = (void *)0xE800000000000000;
      String.append(_:)(v34);
      uint64_t v39 = v33;
      type metadata accessor for AnyValueFlow();
      swift_getWitnessTable();
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      goto LABEL_8;
    case 3u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 32))(v9, v18, v4);
      OUTLINED_FUNCTION_2_68();
      _StringGuts.grow(_:)(24);
      OUTLINED_FUNCTION_5_45((uint64_t)".offerFollowUpAction(");
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      OUTLINED_FUNCTION_6_46();
      uint64_t v20 = v41[0];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
      return v20;
    case 4u:
      uint64_t v35 = *v18;
      OUTLINED_FUNCTION_2_68();
      _StringGuts.grow(_:)(16);
      v36._uint64_t countAndFlagsBits = 0x6F707075736E752ELL;
      v36._object = (void *)0xED00002864657472;
      String.append(_:)(v36);
      uint64_t v39 = v35;
      type metadata accessor for SimpleOutputFlowAsync();
      _print_unlocked<A, B>(_:_:)();
LABEL_8:
      OUTLINED_FUNCTION_6_46();
      swift_release();
      uint64_t v20 = v41[0];
      break;
    case 5u:
      return v20;
    case 6u:
      uint64_t v20 = 0x7373696D7369642ELL;
      break;
    case 7u:
      uint64_t v20 = 0x706F74732ELL;
      break;
    default:
      uint64_t v21 = OUTLINED_FUNCTION_2_74();
      v22(v21);
      OUTLINED_FUNCTION_2_68();
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      v41[0] = 0xD000000000000012;
      v41[1] = 0x8000000000495EC0;
      _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input, (void (*)(uint64_t))&type metadata accessor for Input);
      v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_46();
      uint64_t v20 = v41[0];
LABEL_4:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
      break;
  }
  return v20;
}

uint64_t _s17SiriAppResolution0B0CACs23CustomStringConvertibleAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata completion function for PhoneCallFlowState()
{
  uint64_t result = type metadata accessor for Input();
  if (v1 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout3();
    uint64_t v5 = &v3;
    uint64_t v6 = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t result = type metadata accessor for RCHFlowResult();
    if (v2 <= 0x3F)
    {
      uint64_t v7 = *(void *)(result - 8) + 64;
      uint64_t v8 = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneCallFlowState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for Input();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_9;
      case 1u:
        uint64_t v9 = type metadata accessor for Input();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 48));
        uint64_t v11 = *(int *)(v10 + 64);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        long long v14 = *(_OWORD *)(v13 + 24);
        *(_OWORD *)((char *)a1 + v11 + 24) = v14;
        uint64_t v15 = v14;
        uint64_t v16 = **(void (***)(char *, char *, uint64_t))(v14 - 8);
        swift_retain();
        v16(v12, v13, v15);
        goto LABEL_9;
      case 2u:
      case 4u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_9;
      case 3u:
        uint64_t v17 = type metadata accessor for RCHFlowResult();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for PhoneCallFlowState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for Input();
      goto LABEL_10;
    case 1:
      uint64_t v4 = type metadata accessor for Input();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      swift_release();
      uint64_t v6 = a1 + *(int *)(v5 + 64);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v6);
      break;
    case 2:
    case 4:
      uint64_t result = swift_release();
      break;
    case 3:
      uint64_t v3 = type metadata accessor for RCHFlowResult();
LABEL_10:
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v7(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for PhoneCallFlowState(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Input();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_7;
    case 1u:
      uint64_t v7 = type metadata accessor for Input();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      *(void *)((char *)a1 + *(int *)(v8 + 48)) = *(void *)((char *)a2 + *(int *)(v8 + 48));
      uint64_t v9 = *(int *)(v8 + 64);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      long long v12 = *(_OWORD *)(v11 + 24);
      *(_OWORD *)((char *)a1 + v9 + 24) = v12;
      uint64_t v13 = v12;
      long long v14 = **(void (***)(char *, char *, uint64_t))(v12 - 8);
      swift_retain();
      v14(v10, v11, v13);
      goto LABEL_7;
    case 2u:
    case 4u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_7;
    case 3u:
      uint64_t v15 = type metadata accessor for RCHFlowResult();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for PhoneCallFlowState(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for Input();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 1u:
        uint64_t v7 = type metadata accessor for Input();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
        *(void *)((char *)a1 + *(int *)(v8 + 48)) = *(void *)((char *)a2 + *(int *)(v8 + 48));
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = *((void *)v11 + 3);
        *((void *)v10 + 3) = v12;
        *((void *)v10 + 4) = *((void *)v11 + 4);
        uint64_t v13 = **(void (***)(char *, char *, uint64_t))(v12 - 8);
        swift_retain();
        v13(v10, v11, v12);
        goto LABEL_8;
      case 2u:
      case 4u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_8;
      case 3u:
        uint64_t v14 = type metadata accessor for RCHFlowResult();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for PhoneCallFlowState(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = type metadata accessor for RCHFlowResult();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for Input();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
    *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
    uint64_t v11 = *(int *)(v10 + 64);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    *((void *)v12 + 4) = *((void *)v13 + 4);
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for Input();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for PhoneCallFlowState(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = type metadata accessor for RCHFlowResult();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Input();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
      uint64_t v11 = *(int *)(v10 + 64);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *((void *)v12 + 4) = *((void *)v13 + 4);
      long long v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v5 + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for Input();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for PhoneCallFlowState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OUTLINED_FUNCTION_2_74()
{
  return v0;
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional __swiftcall AddCallParticipantCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATsSimple.Properties.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 0xB) {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional)11;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional)v1;
  }
}

void AddCallParticipantCATsSimple.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.Properties()
{
  char v1 = OUTLINED_FUNCTION_32();
  AddCallParticipantCATsSimple.Properties.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:));
}

uint64_t AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_19_2();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_43_12(v6);
  *uint64_t v7 = v8;
  v7[1] = AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:);
  uint64_t v9 = OUTLINED_FUNCTION_32_0(0xD000000000000025);
  return v10(v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

BOOL AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
}

uint64_t AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_19_2();
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v6);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v2 = v7;
  v2[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_24_10();
  return v9();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorAddRestricted(currentCall:unsupportedReason:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[5] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(void);
  void *v12;
  uint64_t v13;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;

  OUTLINED_FUNCTION_40_0();
  uint64_t v5 = v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_36_2();
  v2[6] = v6;
  uint64_t v7 = OUTLINED_FUNCTION_2_66(v6, (__n128)xmmword_467720);
  if (v5)
  {
    uint64_t v7 = type metadata accessor for PhoneCallRecord(v7);
  }
  else
  {
    v6[3].n128_u64[1] = 0;
    v6[4].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_28_19(v7);
  v6[5].n128_u64[1] = 0x8000000000492220;
  outlined init with copy of SpeakableString?(v8, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v9);
  if (v10)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  else
  {
    v6[7].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_59();
    v11();
    swift_retain();
  }
  uint64_t v12 = (void *)OUTLINED_FUNCTION_9_0();
  v2[7] = v12;
  char *v12 = v2;
  v12[1] = AddCallParticipantCATsSimple.errorAddRestricted(currentCall:unsupportedReason:);
  uint64_t v13 = OUTLINED_FUNCTION_11_6(v4 + 20);
  return v15(v13);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional __swiftcall AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.init(rawValue:), v3);
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 3) {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional)v1;
  }
}

uint64_t AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x636972656E6547;
  }
  if (a1 == 1) {
    return 0x646C6F486E4FLL;
  }
  return 0x676E69676E6952;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorAddRestrictedAsLabels(currentCall:unsupportedReason:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[5] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(void);
  void *v11;
  uint64_t v12;
  uint64_t (*v14)(void);
  uint64_t v15;

  OUTLINED_FUNCTION_40_0();
  uint64_t v4 = v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_36_2();
  v2[6] = v5;
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467720);
  if (v4)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    v5[3].n128_u64[1] = 0;
    v5[4].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_28_19(v6);
  v5[5].n128_u64[1] = 0x8000000000492220;
  outlined init with copy of SpeakableString?(v7, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v8);
  if (v9)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  else
  {
    v5[7].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_59();
    v10();
    swift_retain();
  }
  uint64_t v11 = (void *)OUTLINED_FUNCTION_9_0();
  v2[7] = v11;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v11 = v12;
  v11[1] = AddCallParticipantCATsSimple.errorAddRestrictedAsLabels(currentCall:unsupportedReason:);
  OUTLINED_FUNCTION_24_10();
  return v14();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReached(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorMaxParticipantsReached(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReached(currentCall:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(46);
  return v11(v10);
}

BOOL AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReachedAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorMaxParticipantsReachedAsLabels(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReachedAsLabels(currentCall:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(46);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorNoTargetCall()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = StartCallCATPatternsExecutor.unsupportedCallCapability();
  OUTLINED_FUNCTION_24_10();
  return v3(0xD000000000000024);
}

BOOL AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorNoTargetCallAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds();
  OUTLINED_FUNCTION_25_1();
  *Swift::OpaquePointer v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  return v4(0xD000000000000024);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a2;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v15 = v4;
  OUTLINED_FUNCTION_40_0();
  uint64_t v5 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_24_3();
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_20_3(v6);
  OUTLINED_FUNCTION_23_23(v7, (__n128)xmmword_46A250);
  if (v5)
  {
    type metadata accessor for PhonePerson(0);
    uint64_t v8 = v5;
  }
  else
  {
    OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_38_13(v8);
  OUTLINED_FUNCTION_47_12(v9, (uint64_t)"shouldIncludeHandleLabel");
  uint64_t v10 = OUTLINED_FUNCTION_15_28((uint64_t)&type metadata for Bool);
  if (v0)
  {
    uint64_t v10 = type metadata accessor for PhoneCallRecord(v10);
  }
  else
  {
    v2[19] = 0;
    v2[20] = 0;
  }
  v2[18] = v0;
  v2[21] = v10;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:);
  uint64_t v12 = OUTLINED_FUNCTION_26_2(v3 + 24);
  return v13(v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

BOOL AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a2;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:)()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v14 = v3;
  OUTLINED_FUNCTION_40_0();
  uint64_t v4 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_24_3();
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_20_3(v5);
  OUTLINED_FUNCTION_23_23(v6, (__n128)xmmword_46A250);
  if (v4)
  {
    type metadata accessor for PhonePerson(0);
    uint64_t v7 = v4;
  }
  else
  {
    OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_38_13(v7);
  OUTLINED_FUNCTION_47_12(v8, (uint64_t)"shouldIncludeHandleLabel");
  uint64_t v9 = OUTLINED_FUNCTION_15_28((uint64_t)&type metadata for Bool);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for PhoneCallRecord(v9);
  }
  else
  {
    v2[19] = 0;
    v2[20] = 0;
  }
  v2[18] = v0;
  v2[21] = v9;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v10;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v10 = v11;
  v10[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_24_10();
  return v13();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegion(location:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorRestrictedDeviceByRegion(location:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegion(location:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x6E6F697461636F6CLL);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(48);
  return v11(v10);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorRestrictedDeviceByRegionDialogIds_optional __swiftcall AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorRestrictedDeviceByRegionDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x32676F6C616964;
  }
  else {
    return 0x31676F6C616964;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorRestrictedDeviceByRegionDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorRestrictedDeviceByRegionDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = 0xE700000000000000;
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegionAsLabels(location:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorRestrictedDeviceByRegionAsLabels(location:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegionAsLabels(location:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x6E6F697461636F6CLL);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(48);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467720;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x7069636974726170);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhonePerson(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v7 = *(unsigned char *)(v0 + 56);
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 88) = 0x80000000004964B0;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v7;
  OUTLINED_FUNCTION_24_4(v6);
  uint64_t v8 = swift_task_alloc();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *unint64_t v9 = v10;
  v9[1] = AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:);
  uint64_t v11 = OUTLINED_FUNCTION_32_0(v2 + 24);
  return v12(v11);
}

BOOL AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipantAsLabels(participant:shouldIncludeHandleLabel:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorRestrictedForParticipantAsLabels(participant:shouldIncludeHandleLabel:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipantAsLabels(participant:shouldIncludeHandleLabel:)()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  uint64_t v5 = OUTLINED_FUNCTION_17_22(v4, 0x7069636974726170);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhonePerson(v5);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v0 + 56);
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 88) = 0x80000000004964B0;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v6;
  OUTLINED_FUNCTION_24_4(v5);
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v2 = v8;
  v2[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_24_10();
  return v10();
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorSelfAdd(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorSelfAdd(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorSelfAdd(currentCall:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(31);
  return v11(v10);
}

BOOL AddCallParticipantCATsSimple.ErrorSelfAddDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorSelfAddDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AddCallParticipantCATsSimple.ErrorSelfAddDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AddCallParticipantCATsSimple.errorSelfAddAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.errorSelfAddAsLabels(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorSelfAddAsLabels(currentCall:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_2_66(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  OUTLINED_FUNCTION_44(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v3 = v8;
  v3[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_24_10();
  unint64_t v9 = OUTLINED_FUNCTION_40(31);
  return v10(v9);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v16 = v4;
  OUTLINED_FUNCTION_40_0();
  uint64_t v5 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_24_3();
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_20_3(v6);
  OUTLINED_FUNCTION_26_20(v7, (__n128)xmmword_46A250);
  if (v5)
  {
    uint64_t v8 = type metadata accessor for PhoneCallInvite(0);
    uint64_t v9 = v5;
  }
  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v10 = OUTLINED_FUNCTION_22_24(v8, v9);
  if (v0)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 64);
  *(void *)(v2 + 96) = v0;
  *(void *)(v2 + 136) = 0x80000000004964D0;
  *(void *)(v2 + 168) = &type metadata for Bool;
  *(unsigned char *)(v2 + 144) = v11;
  OUTLINED_FUNCTION_27_18(v10);
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v12;
  void *v12 = v1;
  v12[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  uint64_t v13 = OUTLINED_FUNCTION_26_2(v3 + 19);
  return v14(v13);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::IntentHandledResponseDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 1735289202;
  }
  else {
    return 6579297;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponseAsLabels(callInvite:device:isFaceTimeFirstDevice:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.intentHandledResponseAsLabels(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponseAsLabels(callInvite:device:isFaceTimeFirstDevice:)()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v15 = v3;
  OUTLINED_FUNCTION_40_0();
  uint64_t v4 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_24_3();
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_20_3(v5);
  OUTLINED_FUNCTION_26_20(v6, (__n128)xmmword_46A250);
  if (v4)
  {
    uint64_t v7 = type metadata accessor for PhoneCallInvite(0);
    uint64_t v8 = v4;
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v9 = OUTLINED_FUNCTION_22_24(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 64);
  *(void *)(v2 + 96) = v0;
  *(void *)(v2 + 136) = 0x80000000004964D0;
  *(void *)(v2 + 168) = &type metadata for Bool;
  *(unsigned char *)(v2 + 144) = v10;
  OUTLINED_FUNCTION_27_18(v9);
  swift_retain();
  char v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v11;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds();
  OUTLINED_FUNCTION_25_1();
  *char v11 = v12;
  v11[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_24_10();
  return v14();
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 32) = 0xD000000000000015;
  *(void *)(v1 + 40) = 0x80000000004964F0;
  *(void *)(v1 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_56_10(v1, (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  uint64_t v7 = v2;
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v1 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:);
  uint64_t v5 = OUTLINED_FUNCTION_11_6(0xD000000000000027);
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  long long v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    char v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::PromptForParticipantDialogIds_optional __swiftcall AddCallParticipantCATsSimple.PromptForParticipantDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.PromptForParticipantDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::PromptForParticipantDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t AddCallParticipantCATsSimple.PromptForParticipantDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6F725074726F6873;
  }
  else {
    return 0x6D6F7250676E6F6CLL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::PromptForParticipantDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::PromptForParticipantDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.PromptForParticipantDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = AddCallParticipantCATsSimple.PromptForParticipantDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v9 = v1;
  OUTLINED_FUNCTION_18_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  *(void *)(v2 + 32) = 0xD000000000000015;
  *(void *)(v2 + 40) = 0x80000000004964F0;
  *(void *)(v2 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_56_10(v2, (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  uint64_t v8 = v3;
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v5;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v5 = v6;
  v5[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_24_10();
  return v8();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *long long v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_7_27();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    char v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.unsupportedParticipantsMultipleContactsUnsupported()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  return v3(0xD000000000000045);
}

BOOL AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AddCallParticipantCATsSimple.unsupportedParticipantsMultipleContactsUnsupportedAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds();
  OUTLINED_FUNCTION_25_1();
  *Swift::OpaquePointer v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  return v4(0xD000000000000045);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds);
  }
  return result;
}

uint64_t AddCallParticipantCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return AddCallParticipantCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t AddCallParticipantCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10 - 8);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t AddCallParticipantCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t AddCallParticipantCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for AddCallParticipantCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantCATsSimple;
  if (!type metadata singleton initialization cache for AddCallParticipantCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for AddCallParticipantCATsSimple()
{
  return type metadata accessor for AddCallParticipantCATsSimple();
}

uint64_t getEnumTagSinglePayload for AddCallParticipantCATsSimple.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AddCallParticipantCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA774);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.Properties()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA884);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorSelfAddDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DA9E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DAAB0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds()
{
}

uint64_t OUTLINED_FUNCTION_9_43()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_15_28@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v2 + 96) = v1;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = 0x43746E6572727563;
  *(void *)(v2 + 136) = 0xEB000000006C6C61;
  return 0;
}

uint64_t OUTLINED_FUNCTION_17_22@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = v2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x656369766564;
  v2[11] = 0xE600000000000000;
  return 0;
}

__n128 *OUTLINED_FUNCTION_23_23(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x7069636974726170;
  result[2].n128_u64[1] = 0xEB00000000746E61;
  return result;
}

__n128 *OUTLINED_FUNCTION_26_20(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x69766E496C6C6163;
  result[2].n128_u64[1] = 0xEA00000000006574;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_19(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0xD000000000000011;
  return result;
}

uint64_t OUTLINED_FUNCTION_37_14(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_38_13(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
}

uint64_t OUTLINED_FUNCTION_43_12(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_47_12@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[9] = result;
  v2[10] = v3;
  v2[11] = (a2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_56_10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + 48) = v2;
  return *(unsigned int *)(a2 + 4);
}

uint64_t ContactConfirmationModel.appId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t ContactConfirmationModel.yesNoConfirmationModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContactConfirmationModel();
  return outlined init with copy of YesNoConfirmationModel(v1 + *(int *)(v3 + 24), a1, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
}

uint64_t type metadata accessor for ContactConfirmationModel()
{
  uint64_t result = type metadata singleton initialization cache for ContactConfirmationModel;
  if (!type metadata singleton initialization cache for ContactConfirmationModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ContactConfirmationModel.yesNoConfirmationModel.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_4_53() + 24);

  return outlined assign with take of YesNoConfirmationModel(v0, v2);
}

uint64_t outlined assign with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Void (__swiftcall *ContactConfirmationModel.yesNoConfirmationModel.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ContactConfirmationModel.phoneContactHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactConfirmationModel() + 28);

  return outlined init with copy of PhoneContactHeader?(v3, a1);
}

uint64_t outlined init with copy of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactConfirmationModel.phoneContactHeader.setter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_4_53() + 28);

  return outlined assign with take of PhoneContactHeader?(v0, v2);
}

uint64_t outlined assign with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Void (__swiftcall *ContactConfirmationModel.phoneContactHeader.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ContactConfirmationModel.title.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t ContactConfirmationModel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ContactConfirmationModel() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

Swift::Void (__swiftcall *ContactConfirmationModel.title.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ContactConfirmationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6449707061 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000000496550 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000000496570 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 4;
      }
      else {
        return 5;
      }
    }
  }
}

unint64_t ContactConfirmationModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0x65736E6F70736572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6449707061;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance ContactConfirmationModel.CodingKeys()
{
  return ContactConfirmationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ContactConfirmationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = ContactConfirmationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ContactConfirmationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ContactConfirmationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContactConfirmationModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ContactConfirmationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    OUTLINED_FUNCTION_5_49(1);
    type metadata accessor for ContactConfirmationModel();
    type metadata accessor for YesNoConfirmationModel();
    lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_5_49(4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }
  return result;
}

uint64_t ContactConfirmationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v26[0] = a2;
  type metadata accessor for YesNoConfirmationModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ContactConfirmationModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  v26[1] = v8;
  __chkstk_darwin(v9);
  type metadata accessor for ContactConfirmationModel();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_1();
  *uint64_t v3 = 0xD000000000000013;
  v3[1] = 0x8000000000491270;
  v3[2] = 0;
  v3[3] = 0;
  uint64_t v12 = (char *)v3 + *(int *)(v11 + 28);
  *((_OWORD *)v12 + 2) = 0u;
  *((_OWORD *)v12 + 3) = 0u;
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[64] = 0;
  uint64_t v27 = v11;
  uint64_t v13 = (uint64_t *)((char *)v3 + *(int *)(v11 + 32));
  *uint64_t v13 = 0;
  v13[1] = 0;
  Swift::String v29 = a1;
  Swift::String v30 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined consume of PhoneContactHeader?(*(void *)v12, *((void *)v12 + 1));
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v31) = 0;
    OUTLINED_FUNCTION_6_49();
    *uint64_t v3 = KeyedDecodingContainer.decode(_:forKey:)();
    v3[1] = v14;
    LOBYTE(v31) = 1;
    v3[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v3[3] = v15;
    LOBYTE(v31) = 2;
    lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    outlined init with take of YesNoConfirmationModel((uint64_t)v7, (uint64_t)v3 + *(int *)(v27 + 24));
    char v36 = 3;
    lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v16 = v35;
    long long v17 = v32;
    *(_OWORD *)uint64_t v12 = v31;
    *((_OWORD *)v12 + 1) = v17;
    long long v18 = v34;
    *((_OWORD *)v12 + 2) = v33;
    *((_OWORD *)v12 + 3) = v18;
    v12[64] = v16;
    LOBYTE(v31) = 4;
    OUTLINED_FUNCTION_6_49();
    uint64_t v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v21 = v20;
    uint64_t v22 = OUTLINED_FUNCTION_3_63();
    v23(v22);
    uint64_t v24 = v30;
    swift_bridgeObjectRelease();
    uint64_t *v24 = v19;
    v24[1] = v21;
    outlined init with copy of YesNoConfirmationModel((uint64_t)v3, v26[0], (void (*)(void))type metadata accessor for ContactConfirmationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return outlined destroy of YesNoConfirmationModel((uint64_t)v3, (void (*)(void))type metadata accessor for ContactConfirmationModel);
  }
}

uint64_t outlined consume of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined init with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of YesNoConfirmationModel(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = OUTLINED_FUNCTION_7_0();
  v5(v4);
  return a2;
}

uint64_t outlined destroy of YesNoConfirmationModel(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t default argument 0 of ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)()
{
  return 0xD000000000000013;
}

uint64_t ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v14 = (int *)type metadata accessor for ContactConfirmationModel();
  outlined init with take of YesNoConfirmationModel(a5, (uint64_t)a9 + v14[6]);
  uint64_t result = outlined init with take of PhoneContactHeader?(a6, (uint64_t)a9 + v14[7]);
  char v16 = (void *)((char *)a9 + v14[8]);
  void *v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t outlined init with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t instantiation function for generic protocol witness table for ContactConfirmationModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in ContactConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
}

uint64_t base witness table accessor for Encodable in ContactConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
}

uint64_t lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance ContactConfirmationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContactConfirmationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ContactConfirmationModel(void *a1)
{
  return ContactConfirmationModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactConfirmationModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    char v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v36(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for YesNoConfirmationModel();
    uint64_t v14 = v13[5];
    char v35 = &v10[v14];
    uint64_t v15 = &v11[v14];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v37 = a3;
    long long v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v35, v15, v16);
    v36(&v10[v13[6]], &v11[v13[6]], v12);
    v17(&v10[v13[7]], &v11[v13[7]], v16);
    uint64_t v18 = v13[8];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *(int *)(v37 + 28);
    Swift::String v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 8);
    swift_bridgeObjectRetain();
    if (v25)
    {
      *Swift::String v23 = *v24;
      v23[1] = v25;
      uint64_t v26 = v24[3];
      v23[2] = v24[2];
      v23[3] = v26;
      uint64_t v27 = v24[5];
      v23[4] = v24[4];
      v23[5] = v27;
      uint64_t v28 = v24[7];
      void v23[6] = v24[6];
      v23[7] = v28;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v23, v24, 0x41uLL);
    }
    uint64_t v30 = *(int *)(v37 + 32);
    long long v31 = (uint64_t *)((char *)a1 + v30);
    long long v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *long long v31 = *v32;
    v31[1] = v33;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContactConfirmationModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v8 = v4 + v7[5];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v6(v4 + v7[6], v5);
  v10(v4 + v7[7], v9);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  long long v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v34(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v12 = v11[5];
  uint64_t v33 = &v8[v12];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v33, v13, v14);
  v34(&v8[v11[6]], &v9[v11[6]], v10);
  v15(&v8[v11[7]], &v9[v11[7]], v14);
  uint64_t v16 = a1;
  uint64_t v17 = v11[8];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  Swift::String v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = *(void *)((char *)a2 + v21 + 8);
  swift_bridgeObjectRetain();
  if (v24)
  {
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v23[3];
    v22[2] = v23[2];
    v22[3] = v25;
    uint64_t v26 = v23[5];
    v22[4] = v23[4];
    v22[5] = v26;
    uint64_t v27 = v23[7];
    v22[6] = v23[6];
    v22[7] = v27;
    *((unsigned char *)v22 + 64) = *((unsigned char *)v23 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v22, v23, 0x41uLL);
  }
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)v16 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  return v16;
}

void *assignWithCopy for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v28(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v11 = v10[5];
  uint64_t v27 = &v7[v11];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v27, v12, v13);
  v28(&v7[v10[6]], &v8[v10[6]], v9);
  v14(&v7[v10[7]], &v8[v10[7]], v13);
  uint64_t v15 = v10[8];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)((char *)a1 + v18 + 8);
  uint64_t v22 = *(void *)((char *)a2 + v18 + 8);
  if (!v21)
  {
    if (v22)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      *(void *)(v19 + 16) = *((void *)v20 + 2);
      *(void *)(v19 + 24) = *((void *)v20 + 3);
      *(void *)(v19 + 32) = *((void *)v20 + 4);
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      *(void *)(v19 + 56) = *((void *)v20 + 7);
      *(unsigned char *)(v19 + 64) = v20[64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)v19, v20, 0x41uLL);
    goto LABEL_8;
  }
  if (!v22)
  {
    outlined destroy of PhoneContactHeader(v19);
    goto LABEL_7;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 16) = *((void *)v20 + 2);
  *(void *)(v19 + 24) = *((void *)v20 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 32) = *((void *)v20 + 4);
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  *(void *)(v19 + 56) = *((void *)v20 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 64) = v20[64];
LABEL_8:
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  void *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t outlined destroy of PhoneContactHeader(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for ContactConfirmationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v17(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v11 = v10[5];
  uint64_t v16 = &v7[v11];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v16, v12, v13);
  v17(&v7[v10[6]], &v8[v10[6]], v9);
  v14(&v7[v10[7]], &v8[v10[7]], v13);
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  memcpy((char *)a1 + a3[7], (char *)a2 + a3[7], 0x41uLL);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  char v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v36(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v13 = v12[5];
  char v35 = &v9[v13];
  uint64_t v14 = &v10[v13];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v35, v14, v15);
  v36(&v9[v12[6]], &v10[v12[6]], v11);
  v16(&v9[v12[7]], &v10[v12[7]], v15);
  uint64_t v17 = v12[8];
  uint64_t v18 = &v9[v17];
  uint64_t v19 = &v10[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  if (!*(void *)((char *)a1 + v22 + 8)) {
    goto LABEL_5;
  }
  uint64_t v25 = v24[1];
  if (!v25)
  {
    outlined destroy of PhoneContactHeader((uint64_t)v23);
LABEL_5:
    memcpy(v23, v24, 0x41uLL);
    goto LABEL_6;
  }
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = v24[3];
  v23[2] = v24[2];
  v23[3] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = v24[5];
  v23[4] = v24[4];
  v23[5] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = v24[7];
  void v23[6] = v24[6];
  v23[7] = v28;
  swift_bridgeObjectRelease();
  *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
LABEL_6:
  uint64_t v29 = a3[8];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1DCB90);
}

uint64_t sub_1DCB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for YesNoConfirmationModel();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContactConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1DCC2C);
}

uint64_t sub_1DCC2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for YesNoConfirmationModel();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for ContactConfirmationModel()
{
  uint64_t result = type metadata accessor for YesNoConfirmationModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactConfirmationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCE24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ContactConfirmationModel.CodingKeys()
{
  return &unk_55BF08;
}

uint64_t OUTLINED_FUNCTION_3_63()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_53()
{
  return type metadata accessor for ContactConfirmationModel();
}

uint64_t OUTLINED_FUNCTION_6_49()
{
  return v0 - 160;
}

uint64_t OUTLINED_FUNCTION_8_56()
{
  return v0;
}

uint64_t VoicemailShouldPlayPromptFlowStrategy.__allocating_init(sharedGlobals:searchCallHistorySharedGlobals:)(long long *a1, const void *a2)
{
  uint64_t v4 = swift_allocObject();
  VoicemailShouldPlayPromptFlowStrategy.init(sharedGlobals:searchCallHistorySharedGlobals:)(a1, a2);
  return v4;
}

void *VoicemailShouldPlayPromptFlowStrategy.init(sharedGlobals:searchCallHistorySharedGlobals:)(long long *a1, const void *a2)
{
  v2[33] = type metadata accessor for VoicemailShouldPlayPromptFlowStrategy();
  v2[34] = &outlined read-only object #0 of VoicemailShouldPlayPromptFlowStrategy.init(sharedGlobals:searchCallHistorySharedGlobals:);
  v2[35] = 0;
  v2[36] = 0;
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)(v2 + 3));
  type metadata accessor for YesNoConfirmationParser();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(a1, v5 + 24);
  v2[2] = v5;
  memcpy(v2 + 8, a2, 0xC8uLL);
  return v2;
}

uint64_t type metadata accessor for VoicemailShouldPlayPromptFlowStrategy()
{
  return self;
}

uint64_t VoicemailShouldPlayPromptFlowStrategy.actionForInput(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(**(void **)(v1 + 16) + 128))(a1);
  uint64_t v7 = type metadata accessor for ConfirmationResponse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  outlined destroy of ConfirmationResponse?((uint64_t)v6);
  if (EnumTagSinglePayload == 1) {
    return static ActionForInput.ignore()();
  }
  else {
    return static ActionForInput.handle()();
  }
}

uint64_t VoicemailShouldPlayPromptFlowStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)VoicemailShouldPlayPromptFlowStrategy.makePromptForConfirmation(itemToConfirm:));
}

#error "1DD24C: call analysis failed (funcsize=92)"

uint64_t VoicemailShouldPlayPromptFlowStrategy.makeConfirmationRejectedResponse()()
{
  OUTLINED_FUNCTION_1_0();
  v1[8] = v2;
  v1[9] = v0;
  uint64_t v3 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v3);
  v1[10] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v4);
  v1[11] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v6, v7, v8);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v9();
  }
}

#error "1DD478: call analysis failed (funcsize=156)"

uint64_t VoicemailShouldPlayPromptFlowStrategy.makePromptForYesNoResponse()(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)VoicemailShouldPlayPromptFlowStrategy.makePromptForYesNoResponse());
}

#error "1DD83C: call analysis failed (funcsize=92)"

uint64_t VoicemailShouldPlayPromptFlowStrategy.parseConfirmationResponse(input:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[5] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[6] = OUTLINED_FUNCTION_35();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  uint64_t v1 = v0[9];
  (*(void (**)(void))(**(void **)(v0[4] + 16) + 128))(v0[3]);
  uint64_t v2 = OUTLINED_FUNCTION_38();
  outlined init with copy of ConfirmationResponse?(v2, v3);
  uint64_t v4 = type metadata accessor for ConfirmationResponse();
  if (__swift_getEnumTagSinglePayload(v1, 1, v4) != 1)
  {
    uint64_t v5 = v0[8];
    outlined init with copy of ConfirmationResponse?(v0[9], v5);
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v4);
    if (v7 == enum case for ConfirmationResponse.confirmed(_:)
      || v7 == enum case for ConfirmationResponse.rejected(_:))
    {
      uint64_t v10 = v0[9];
      uint64_t v9 = v0[10];
      uint64_t v11 = v0[7];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(v11, v7, v4);
      __swift_storeEnumTagSinglePayload(v11, 0, 1, v4);
      SimpleConfirmationResponseProvider.init(_:)();
      outlined destroy of ConfirmationResponse?(v9);
      outlined destroy of ConfirmationResponse?(v10);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6_0();
      goto LABEL_9;
    }
    (*(void (**)(void, uint64_t))(v6 + 8))(v0[8], v4);
  }
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[10];
  uint64_t v15 = (void *)v0[6];
  *uint64_t v15 = 0;
  v15[1] = 0;
  swift_storeEnumTagMultiPayload();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
  swift_allocError();
  PhoneError.logged()(v16);
  outlined destroy of PhoneError((uint64_t)v15);
  swift_willThrow();
  outlined destroy of ConfirmationResponse?(v14);
  outlined destroy of ConfirmationResponse?(v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
LABEL_9:
  return v12();
}

uint64_t VoicemailShouldPlayPromptFlowStrategy.executePatternAndManifest()()
{
  OUTLINED_FUNCTION_1_0();
  v1[8] = v2;
  v1[9] = v0;
  uint64_t v3 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v3);
  v1[10] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  *(void *)(v2 + 120) = v1;
  *(void *)(v2 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  static DialogPhase.confirmation.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *uint64_t v3 = v0;
  v3[1] = VoicemailShouldPlayPromptFlowStrategy.executePatternAndManifest();
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[8];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v6, v4, v5, v1, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v3 = v2;
  *(void *)(v4 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = OUTLINED_FUNCTION_38();
  v2(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v3();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = OUTLINED_FUNCTION_38();
  v2(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

#error "1DDE28: call analysis failed (funcsize=121)"

uint64_t closure #1 in VoicemailShouldPlayPromptFlowStrategy.executePatternAndManifest()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = OutputGenerationManifest.canUseServerTTS.setter();
  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()(v3);
  specialized static PhoneCallNLContextProvider.makeSDAForOfferReadCallHistoryConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter();
  uint64_t v4 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v4);
  OutputGenerationManifest.nlContextUpdate.setter();
  return OutputGenerationManifest.listenAfterSpeaking.setter();
}

uint64_t VoicemailShouldPlayPromptFlowStrategy.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  outlined destroy of SearchCallHistorySharedGlobals(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VoicemailShouldPlayPromptFlowStrategy.__deallocating_deinit()
{
  VoicemailShouldPlayPromptFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance VoicemailShouldPlayPromptFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 144) + **(int **)(*(void *)v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.actionForInput(_:) in conformance VoicemailShouldPlayPromptFlowStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance VoicemailShouldPlayPromptFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:) in conformance VoicemailShouldPlayPromptFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:) in conformance VoicemailShouldPlayPromptFlowStrategy(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t ShouldPlayPromptFlowStrategy = type metadata accessor for VoicemailShouldPlayPromptFlowStrategy();
  uint64_t v6 = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_5(&lazy protocol witness table cache variable for type VoicemailShouldPlayPromptFlowStrategy and conformance VoicemailShouldPlayPromptFlowStrategy, v5, (void (*)(uint64_t))type metadata accessor for VoicemailShouldPlayPromptFlowStrategy);
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return YesNoPromptFlowStrategy.makeRepromptOnEmptyParse(itemToConfirm:)(a1, ShouldPlayPromptFlowStrategy, v6);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:) in conformance VoicemailShouldPlayPromptFlowStrategy(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t ShouldPlayPromptFlowStrategy = type metadata accessor for VoicemailShouldPlayPromptFlowStrategy();
  uint64_t v6 = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_5(&lazy protocol witness table cache variable for type VoicemailShouldPlayPromptFlowStrategy and conformance VoicemailShouldPlayPromptFlowStrategy, v5, (void (*)(uint64_t))type metadata accessor for VoicemailShouldPlayPromptFlowStrategy);
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return YesNoPromptFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:)(a1, ShouldPlayPromptFlowStrategy, v6);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse() in conformance VoicemailShouldPlayPromptFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(a1);
}

uint64_t outlined destroy of ConfirmationResponse?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of ConfirmationResponse?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t base witness table accessor for PromptForConfirmationFlowStrategyAsync in VoicemailShouldPlayPromptFlowStrategy(uint64_t a1, uint64_t a2)
{
  return _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_5(&lazy protocol witness table cache variable for type VoicemailShouldPlayPromptFlowStrategy and conformance VoicemailShouldPlayPromptFlowStrategy, a2, (void (*)(uint64_t))type metadata accessor for VoicemailShouldPlayPromptFlowStrategy);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_5(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in VoicemailShouldPlayPromptFlowStrategy.executePatternAndManifest()()
{
  return closure #1 in VoicemailShouldPlayPromptFlowStrategy.executePatternAndManifest()();
}

uint64_t OUTLINED_FUNCTION_1_68(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_2_75()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_54()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_9_44(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  return swift_arrayDestroy();
}

PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional __swiftcall StartCallCATs.Properties.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v1 >= 0x44) {
    return (PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional)68;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional)v1;
  }
}

void StartCallCATs.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATs.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StartCallCATs.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATs.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional *a2@<X8>)
{
  result.value = StartCallCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATs.Properties(void *a1@<X8>)
{
  StartCallCATs.Properties.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void StartCallCATs.confirmApp(appName:isPhoneApp:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v7 + 16) = xmmword_467720;
  OUTLINED_FUNCTION_105(v7);
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v8);
  if (v9)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    *(void *)(v7 + 72) = v8;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 48));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_181();
    v10();
  }
  OUTLINED_FUNCTION_160_0();
  *(void *)(v7 + 80) = v11;
  *(void *)(v7 + 88) = v12;
  *(void *)(v7 + 120) = &type metadata for Bool;
  *(unsigned char *)(v7 + 96) = v2 & 1;
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.confirmApp(appName:isPhoneApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_36_2();
  char v3 = (__n128 *)OUTLINED_FUNCTION_57_0(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v8();
  }
  OUTLINED_FUNCTION_42_6();
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v9;
  uint64_t v10 = OUTLINED_FUNCTION_9_0();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_35_0(v10);
  *uint64_t v11 = v12;
  v11[1] = StartCallCATs.confirmApp(appName:isPhoneApp:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v17(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90_4();
  return v0();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 64) = v2;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  *(void *)(v1 + 32) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_36_2();
  char v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v8();
  }
  OUTLINED_FUNCTION_42_6();
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v9;
  uint64_t v10 = OUTLINED_FUNCTION_9_0();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_29_6(v10);
  *uint64_t v11 = v12;
  v11[1] = StartCallCATs.confirmApp(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(20);
  OUTLINED_FUNCTION_20_2();
  return v16(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_89_6();
  return v0();
}

void StartCallCATs.confirmApp(appName:isPhoneApp:)()
{
  OUTLINED_FUNCTION_28();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v7 + 16) = xmmword_467720;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  OUTLINED_FUNCTION_105(v7);
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v9);
  if (v10)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    __swift_allocate_boxed_opaque_existential_1(v8);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v11 + 32))();
  }
  OUTLINED_FUNCTION_160_0();
  *(void *)(v7 + 80) = v12;
  *(void *)(v7 + 88) = v13;
  *(void *)(v7 + 120) = &type metadata for Bool;
  *(unsigned char *)(v7 + 96) = v2 & 1;
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24();
}

void StartCallCATs.confirmCallCapability(callCapability:completion:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_24_0();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_65_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v9 + 16) = xmmword_467710;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v2;
  outlined init with copy of SpeakableString?(v6, v0, &demangling cache variable for type metadata for SpeakableString?);
  char v10 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v10);
  if (v11)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_103();
  }
  else
  {
    *(void *)(v9 + 72) = v10;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 48));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v12 + 32))();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.confirmCallCapability(callCapability:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_116_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_116_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(31);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    char v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

void StartCallCATs.confirmCallCapability(callCapability:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v12)(void);

  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v9 + 16) = xmmword_467710;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v2;
  outlined init with copy of SpeakableString?(v6, v0, &demangling cache variable for type metadata for SpeakableString?);
  char v10 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v10);
  if (v11)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    *(void *)(v9 + 72) = v10;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 48));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_181();
    v12();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  char v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unsigned __int8 v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_65_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_196_0();
  uint64_t v16 = OUTLINED_FUNCTION_66_4((__n128 *)v15, (__n128)xmmword_472F90);
  v16[3].n128_u8[0] = v12;
  v16[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v16[5].n128_u64[0] = 0xD000000000000010;
  v16[5].n128_u64[1] = 0x80000000004938E0;
  if (v10)
  {
    uint64_t v17 = type metadata accessor for DialogPerson();
    uint64_t v18 = v10;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_165_0();
  }
  *(void *)(v15 + 96) = v18;
  *(void *)(v15 + 120) = v17;
  *(void *)(v15 + 128) = 0xD000000000000018;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v15 + 136) = v19;
  if (v8)
  {
    uint64_t v20 = type metadata accessor for DialogPerson();
    uint64_t v21 = v8;
  }
  else
  {
    uint64_t v20 = OUTLINED_FUNCTION_166_0();
  }
  *(void *)(v15 + 144) = v21;
  *(void *)(v15 + 168) = v20;
  *(void *)(v15 + 176) = 0xD000000000000016;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v15 + 184) = v22;
  *(unsigned char *)(v15 + 192) = v6 & 1;
  *(void *)(v15 + 216) = &type metadata for Bool;
  *(void *)(v15 + 224) = 0xD000000000000018;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v15 + 232) = v23;
  *(unsigned char *)(v15 + 240) = v4 & 1;
  OUTLINED_FUNCTION_194_0();
  *(void *)(v15 + 264) = &type metadata for Bool;
  *(void *)(v15 + 272) = v24;
  OUTLINED_FUNCTION_192_0();
  *(void *)(v15 + 280) = v25;
  outlined init with copy of SpeakableString?(v2, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v26 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v26);
  if (v27)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v15 + 288) = 0u;
    *(_OWORD *)(v15 + 304) = 0u;
  }
  else
  {
    *(void *)(v15 + 312) = v26;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 288));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v28();
    swift_retain();
    swift_retain();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  *(unsigned char *)(v1 + 90) = v3;
  *(unsigned char *)(v1 + 89) = v4;
  *(void *)(v1 + 24) = v5;
  *(void *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 88) = v7;
  *(void *)(v1 + 16) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v9);
  *(void *)(v1 + 56) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  unsigned __int8 v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void (*v13)(void);
  void *v14;
  uint64_t (*v16)(void);
  uint64_t v17;

  OUTLINED_FUNCTION_48();
  uint64_t v2 = *(uint64_t **)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v4 = (__n128 *)OUTLINED_FUNCTION_196_0();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = OUTLINED_FUNCTION_66_4(v4, (__n128)xmmword_472F90);
  v5[3].n128_u8[0] = v3;
  v5[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[5].n128_u64[0] = 0xD000000000000010;
  uint64_t v6 = OUTLINED_FUNCTION_214((uint64_t)v5, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson();
  }
  else
  {
    v4[6].n128_u64[1] = 0;
    v4[7].n128_u64[0] = 0;
  }
  char v7 = *(void *)(v0 + 32);
  v4[6].n128_u64[0] = (unint64_t)v2;
  v4[7].n128_u64[1] = v6;
  v4[8].n128_u64[0] = 0xD000000000000018;
  uint64_t v8 = OUTLINED_FUNCTION_208((uint64_t)"redactedContactToConfirm");
  if (v7)
  {
    uint64_t v8 = type metadata accessor for DialogPerson();
  }
  else
  {
    v4[9].n128_u64[1] = 0;
    v4[10].n128_u64[0] = 0;
  }
  v4[9].n128_u64[0] = v7;
  v4[10].n128_u64[1] = v8;
  v4[11].n128_u64[0] = 0xD000000000000016;
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v9);
  uint64_t v10 = type metadata accessor for SpeakableString();
  uint64_t v11 = OUTLINED_FUNCTION_123_1(v10);
  uint64_t v12 = *(void *)(v0 + 56);
  if (v11 == 1)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v4[19].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1(v2);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
    swift_retain();
  }
  uint64_t v14 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 72) = v14;
  *uint64_t v14 = v0;
  v14[1] = StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  OUTLINED_FUNCTION_23_13();
  return v16();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  *(unsigned char *)(v1 + 82) = v3;
  *(unsigned char *)(v1 + 81) = v4;
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v6;
  *(unsigned char *)(v1 + 80) = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  *(void *)(v1 + 48) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  unsigned __int8 v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void (*v13)(void);
  void *v14;
  uint64_t v15;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;

  OUTLINED_FUNCTION_48();
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v4 = (__n128 *)OUTLINED_FUNCTION_196_0();
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = OUTLINED_FUNCTION_66_4(v4, (__n128)xmmword_472F90);
  v5[3].n128_u8[0] = v3;
  v5[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[5].n128_u64[0] = 0xD000000000000010;
  uint64_t v6 = OUTLINED_FUNCTION_214((uint64_t)v5, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson();
  }
  else
  {
    v4[6].n128_u64[1] = 0;
    v4[7].n128_u64[0] = 0;
  }
  char v7 = *(void *)(v0 + 24);
  v4[6].n128_u64[0] = (unint64_t)v2;
  v4[7].n128_u64[1] = v6;
  v4[8].n128_u64[0] = 0xD000000000000018;
  uint64_t v8 = OUTLINED_FUNCTION_208((uint64_t)"redactedContactToConfirm");
  if (v7)
  {
    uint64_t v8 = type metadata accessor for DialogPerson();
  }
  else
  {
    v4[9].n128_u64[1] = 0;
    v4[10].n128_u64[0] = 0;
  }
  v4[9].n128_u64[0] = v7;
  v4[10].n128_u64[1] = v8;
  v4[11].n128_u64[0] = 0xD000000000000016;
  OUTLINED_FUNCTION_164();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v9);
  uint64_t v10 = type metadata accessor for SpeakableString();
  uint64_t v11 = OUTLINED_FUNCTION_123_1(v10);
  uint64_t v12 = *(void *)(v0 + 48);
  if (v11 == 1)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v4[19].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1(v2);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
    swift_retain();
  }
  uint64_t v14 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v0 + 64) = v14;
  *uint64_t v14 = v0;
  v14[1] = StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  uint64_t v15 = OUTLINED_FUNCTION_11_6(0xD000000000000019);
  return v17(v15);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_0();
  return v0();
}

void StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  char v4 = v3;
  char v6 = v5;
  unint64_t v8 = v7;
  unint64_t v10 = v9;
  unsigned __int8 v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_196_0();
  uint64_t v16 = OUTLINED_FUNCTION_66_4(v15, (__n128)xmmword_472F90);
  v16[3].n128_u8[0] = v12;
  v16[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v16[5].n128_u64[0] = 0xD000000000000010;
  v16[5].n128_u64[1] = 0x80000000004938E0;
  if (v10)
  {
    uint64_t v17 = type metadata accessor for DialogPerson();
    unint64_t v18 = v10;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_71_5();
  }
  v15[6].n128_u64[0] = v18;
  v15[7].n128_u64[1] = v17;
  v15[8].n128_u64[0] = 0xD000000000000018;
  OUTLINED_FUNCTION_184_0((uint64_t)"redactedContactToConfirm");
  if (v8)
  {
    uint64_t v19 = type metadata accessor for DialogPerson();
    unint64_t v20 = v8;
  }
  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_126_0();
  }
  v15[9].n128_u64[0] = v20;
  v15[10].n128_u64[1] = v19;
  v15[11].n128_u64[0] = 0xD000000000000016;
  OUTLINED_FUNCTION_183((uint64_t)"isTopMatchConfirmation");
  v15[12].n128_u8[0] = v6 & 1;
  v15[13].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v15[14].n128_u64[0] = 0xD000000000000018;
  OUTLINED_FUNCTION_41_0();
  v15[14].n128_u64[1] = v21;
  v15[15].n128_u8[0] = v4 & 1;
  OUTLINED_FUNCTION_194_0();
  v15[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v15[17].n128_u64[0] = v22;
  OUTLINED_FUNCTION_192_0();
  v15[17].n128_u64[1] = v23;
  outlined init with copy of SpeakableString?(v2, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v24 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v24);
  if (v25)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_103();
  }
  else
  {
    v15[19].n128_u64[1] = v24;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15[18]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v26();
    swift_retain();
    swift_retain();
  }
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void StartCallCATs.confirmDestinationType(destinationType:completion:)()
{
}

uint64_t StartCallCATs.confirmDestinationType(destinationType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_115_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  unint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_115_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  unint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(32);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

void StartCallCATs.confirmDestinationType(destinationType:)()
{
}

void StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:completion:)()
{
}

uint64_t StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  unsigned __int8 v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  unint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(void);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  unsigned __int8 v12 = (__n128 *)OUTLINED_FUNCTION_20_3(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  unint64_t v20 = (void *)OUTLINED_FUNCTION_29_6(v19);
  void *v20 = v21;
  v20[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_26_2(0xD000000000000026);
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

void StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:)()
{
}

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:completion:)(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_9_23(v2, 0xD000000000000016);
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(unsigned char *)(v3 + 48) = a1;
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:));
}

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 32) = 0xD000000000000016;
  *(void *)(v1 + 40) = 0x800000000048F120;
  *(void *)(v1 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_178_0(v1, (uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = v2;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_43_12(v3);
  *uint64_t v4 = v5;
  v4[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  OUTLINED_FUNCTION_200_0();
  return v7();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_128_1();
  return v0();
}

{
  uint64_t v0;
  uint64_t v1;
  long long v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 32) = 0xD000000000000016;
  *(void *)(v1 + 40) = 0x800000000048F120;
  *(void *)(v1 + 72) = &type metadata for Bool;
  OUTLINED_FUNCTION_178_0(v1, (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v1 + 16) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  uint64_t v4 = OUTLINED_FUNCTION_168_0(0xD00000000000001ALL);
  return v6(v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_9_23(v2, 0xD000000000000016);
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(unsigned char *)(v3 + 48) = a1;
  OUTLINED_FUNCTION_216_0();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_77_4(v1, (__n128)xmmword_467710);
  v1[4].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  v1[3].n128_u64[0] = v0;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  *(void *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_77_4(v1, (__n128)xmmword_467710);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_201_0(v2);
  OUTLINED_FUNCTION_16_21();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_29_6(v3);
  *uint64_t v4 = v5;
  v4[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  return v7();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_89_6();
  return v0();
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v7)(unint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  *(void *)(v0 + 32) = v1;
  OUTLINED_FUNCTION_77_4(v1, (__n128)xmmword_467710);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_201_0(v2);
  OUTLINED_FUNCTION_16_21();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_43_12(v3);
  *uint64_t v4 = v5;
  v4[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_10_16();
  return v7(0xD000000000000023);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:)(unint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_77_4(v2, (__n128)xmmword_467710);
  v2[4].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  v2[3].n128_u64[0] = a1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateCallCapability(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.disambiguateCallCapability()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void StartCallCATs.disambiguateContacts(requestedRelationship:completion:)()
{
}

uint64_t StartCallCATs.disambiguateContacts(requestedRelationship:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t StartCallCATs.disambiguateContacts(requestedRelationship:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  unsigned __int8 v12 = (__n128 *)OUTLINED_FUNCTION_57_0(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  unint64_t v20 = (void *)OUTLINED_FUNCTION_35_0(v19);
  void *v20 = v21;
  v20[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(void);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_31_0();
  unsigned __int8 v12 = (__n128 *)OUTLINED_FUNCTION_20_3(v11);
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467710);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v18();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  unint64_t v20 = (void *)OUTLINED_FUNCTION_29_6(v19);
  void *v20 = v21;
  v20[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_26_2(0xD00000000000001ELL);
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

void StartCallCATs.disambiguateContacts(requestedRelationship:)()
{
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:completion:)()
{
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_86_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_27_0(v3, (__n128)xmmword_467720);
  if (v1) {
    type metadata accessor for SirikitDeviceState();
  }
  else {
    OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_167_0();
  v3[3].n128_u64[0] = v4;
  v3[4].n128_u64[1] = v5;
  v3[5].n128_u64[0] = v2;
  v3[5].n128_u64[1] = 0x8000000000496680;
  if (v0)
  {
    uint64_t v6 = type metadata accessor for DialogPerson();
    uint64_t v7 = v0;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_71_5();
  }
  OUTLINED_FUNCTION_118_1(v6, v7);
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void *)(v10 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_36_2();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_57_0(v14);
  OUTLINED_FUNCTION_27_0(v15, (__n128)xmmword_467720);
  if (v13) {
    type metadata accessor for SirikitDeviceState();
  }
  else {
    OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_167_0();
  uint64_t v16 = *(void *)(v10 + 32);
  v11[6] = v17;
  v11[9] = v18;
  v11[10] = v12;
  uint64_t v19 = OUTLINED_FUNCTION_101_2(0x8000000000496680);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for DialogPerson();
  }
  else
  {
    v11[13] = 0;
    v11[14] = 0;
  }
  OUTLINED_FUNCTION_100_1(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_35_0(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = *(void *)(v10 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_36_2();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_20_3(v14);
  OUTLINED_FUNCTION_27_0(v15, (__n128)xmmword_467720);
  if (v13) {
    type metadata accessor for SirikitDeviceState();
  }
  else {
    OUTLINED_FUNCTION_22_23();
  }
  OUTLINED_FUNCTION_167_0();
  uint64_t v16 = *(void *)(v10 + 24);
  v11[6] = v17;
  v11[9] = v18;
  v11[10] = v12;
  uint64_t v19 = OUTLINED_FUNCTION_101_2(0x8000000000496680);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for DialogPerson();
  }
  else
  {
    v11[13] = 0;
    v11[14] = 0;
  }
  OUTLINED_FUNCTION_100_1(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_26_2(v12 + 22);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  uint64_t v0;
  unint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_119_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_27_0(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for SirikitDeviceState();
    unint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_37_15();
  }
  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  v2[5].n128_u64[0] = 0xD000000000000018;
  v2[5].n128_u64[1] = 0x8000000000496680;
  if (v0)
  {
    uint64_t v5 = type metadata accessor for DialogPerson();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_110_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_88();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:completion:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  unsigned __int8 v3 = v2;
  unsigned __int8 v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_24_3();
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_9_23(v6, 0xD000000000000012);
  v7[3].n128_u8[0] = v5;
  v7[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[5].n128_u64[0] = 0xD000000000000021;
  uint64_t v9 = OUTLINED_FUNCTION_206_0(v7, v8);
  v9[6].n128_u8[0] = v3;
  v9[7].n128_u64[1] = v10;
  v9[8].n128_u64[0] = 0xD000000000000010;
  v9[8].n128_u64[1] = 0x8000000000493AB0;
  if (v1)
  {
    uint64_t v11 = type metadata accessor for DialogPerson();
    uint64_t v12 = v1;
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_126_0();
  }
  *(void *)(v6 + 144) = v12;
  *(void *)(v6 + 168) = v11;
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)(uint64_t a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a3;
  *(unsigned char *)(v5 + 64) = a2;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_9_23(v5, 0xD000000000000012);
  v6[3].n128_u8[0] = v3;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[5].n128_u64[0] = 0xD000000000000021;
  __n128 v8 = OUTLINED_FUNCTION_162_0(v6, (unint64_t)&type metadata for Bool, v7);
  uint64_t v9 = OUTLINED_FUNCTION_210_0((uint64_t)v8, (uint64_t)"requestedContact");
  if (v2)
  {
    uint64_t v9 = type metadata accessor for DialogPerson();
  }
  else
  {
    v1[19] = 0;
    v1[20] = 0;
  }
  v1[18] = v2;
  v1[21] = v9;
  OUTLINED_FUNCTION_27_19();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_29_6(v10);
  *uint64_t v11 = v12;
  v11[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v17(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  __n128 v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_24_3();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_9_23(v5, 0xD000000000000012);
  v6[3].n128_u8[0] = v3;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[5].n128_u64[0] = 0xD000000000000021;
  __n128 v8 = OUTLINED_FUNCTION_162_0(v6, (unint64_t)&type metadata for Bool, v7);
  uint64_t v9 = OUTLINED_FUNCTION_210_0((uint64_t)v8, (uint64_t)"requestedContact");
  if (v2)
  {
    uint64_t v9 = type metadata accessor for DialogPerson();
  }
  else
  {
    v1[19] = 0;
    v1[20] = 0;
  }
  v1[18] = v2;
  v1[21] = v9;
  OUTLINED_FUNCTION_27_19();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_43_12(v10);
  *uint64_t v11 = v12;
  v11[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_32_0(0xD000000000000025);
  OUTLINED_FUNCTION_20_2();
  return v16(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  void *v6;
  __n128 *v7;
  __n128 v8;
  __n128 *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  unsigned __int8 v3 = v2;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_24_3();
  __n128 v7 = (__n128 *)OUTLINED_FUNCTION_9_23((uint64_t)v6, 0xD000000000000012);
  v7[3].n128_u8[0] = v5;
  v7[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[5].n128_u64[0] = 0xD000000000000021;
  uint64_t v9 = OUTLINED_FUNCTION_206_0(v7, v8);
  v9[6].n128_u8[0] = v3;
  v9[7].n128_u64[1] = v10;
  v9[8].n128_u64[0] = 0xD000000000000010;
  v9[8].n128_u64[1] = 0x8000000000493AB0;
  if (v1)
  {
    uint64_t v11 = type metadata accessor for DialogPerson();
    uint64_t v12 = v1;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    v6[19] = 0;
    v6[20] = 0;
  }
  v6[18] = v12;
  v6[21] = v11;
  swift_retain();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)(char a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 57) = a2;
  *(unsigned char *)(v4 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v1 + 16) = xmmword_467710;
  *(void *)(v1 + 32) = 0xD000000000000016;
  *(void *)(v1 + 40) = 0x80000000004966A0;
  *(void *)(v1 + 72) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  *(void *)(v1 + 48) = v0;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v10 = v1;
  OUTLINED_FUNCTION_18_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_31_0();
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_182_0(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_157_1((uint64_t)v3, (uint64_t)"localEmergencyServices");
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_201_0(v4);
  OUTLINED_FUNCTION_173_0();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_29_6(v5);
  *uint64_t v6 = v7;
  v6[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_200_0();
  return v9();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_31_0();
  *(void *)(v0 + 32) = v3;
  uint64_t v4 = OUTLINED_FUNCTION_182_0(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_157_1((uint64_t)v4, (uint64_t)"localEmergencyServices");
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_201_0(v5);
  OUTLINED_FUNCTION_173_0();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_43_12(v6);
  *uint64_t v7 = v8;
  v7[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  uint64_t v9 = OUTLINED_FUNCTION_168_0(v1 + 22);
  return v11(v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)(unint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_31_0();
  uint64_t v3 = OUTLINED_FUNCTION_182_0(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_157_1((uint64_t)v3, (uint64_t)"localEmergencyServices");
  v2[4].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  v2[3].n128_u64[0] = a1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_216_0();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsPartialList(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.disambiguateContactsPartialList()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(41);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v1 + 16) = xmmword_467710;
  *(void *)(v1 + 32) = 0xD000000000000015;
  *(void *)(v1 + 40) = 0x80000000004966C0;
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhonePersonList();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:));
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_95(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_27_19();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_29_6(v6);
  *uint64_t v7 = v8;
  v7[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v13(v9, v10, v11, v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_27_19();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_43_12(v6);
  *uint64_t v7 = v8;
  v7[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_32_0(0xD000000000000027);
  OUTLINED_FUNCTION_20_2();
  return v12(v9, v10, v11, v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v1 + 16) = xmmword_467710;
  OUTLINED_FUNCTION_157_1(v1, (uint64_t)"personsToDisambiguate");
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhonePersonList();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_88();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:));
}

uint64_t StartCallCATs.disambiguateDestinationType(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.disambiguateDestinationType()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(37);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.disambiguatePreferredCallProvider(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.disambiguatePreferredCallProvider()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(43);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.emergencyCountdown(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.emergencyCountdown()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(28);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.errorWithCode(device:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCode(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCode(device:));
}

uint64_t StartCallCATs.errorWithCode(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(23);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCode(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCode(device:));
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:completion:)()
{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:completion:)();
}

{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  __n128 *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_27_0(v8, (__n128)xmmword_467720);
  if (v7)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
    uint64_t v10 = v7;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    v8[3].n128_u64[1] = 0;
    v8[4].n128_u64[0] = 0;
  }
  v8[3].n128_u64[0] = v10;
  v8[4].n128_u64[1] = v9;
  v8[5].n128_u64[0] = v3;
  v8[5].n128_u64[1] = v1;
  v8[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[6].n128_u8[0] = v5 & 1;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:));
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_122_1(v6);
  OUTLINED_FUNCTION_195_0(v7);
  OUTLINED_FUNCTION_8_1();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_74_3();
  return v11();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t (*v12)(unint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_35_1();
  uint64_t v14 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467720);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_122_1(v6);
  OUTLINED_FUNCTION_195_0(v7);
  OUTLINED_FUNCTION_8_1();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  uint64_t v11 = OUTLINED_FUNCTION_73_0(42);
  return v12(v11);
}

{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)();
}

{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  __n128 *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_27_0(v8, (__n128)xmmword_467720);
  if (v7)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState();
    uint64_t v10 = v7;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    v8[3].n128_u64[1] = 0;
    v8[4].n128_u64[0] = 0;
  }
  v8[3].n128_u64[0] = v10;
  v8[4].n128_u64[1] = v9;
  v8[5].n128_u64[0] = v3;
  v8[5].n128_u64[1] = v1;
  v8[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[6].n128_u8[0] = v5 & 1;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:));
}

void StartCallCATs.errorWithCodeAppConfigurationRequired(appName:completion:)()
{
}

uint64_t StartCallCATs.errorWithCodeAppConfigurationRequired(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_36_1(47);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

void StartCallCATs.errorWithCodeAppConfigurationRequired(appName:)()
{
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeCallInProgress(device:));
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  uint64_t v10 = OUTLINED_FUNCTION_73_0(37);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeCallInProgress(device:));
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeCallRinging(device:));
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(34);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeCallRinging(device:));
}

uint64_t StartCallCATs.errorWithCodeCallingServiceNotAvailable(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.errorWithCodeCallingServiceNotAvailable()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(49);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:completion:)()
{
}

uint64_t StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_36_1(47);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

void StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:)()
{
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:completion:)()
{
  OUTLINED_FUNCTION_86_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    type metadata accessor for PhoneStartCallIntent(0);
    unint64_t v3 = v1;
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
  }
  v2[3].n128_u64[0] = v3;
  OUTLINED_FUNCTION_193_0();
  v2[4].n128_u64[1] = v4;
  v2[5].n128_u64[0] = v5;
  v2[5].n128_u64[1] = 0xE800000000000000;
  if (v0)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
    uint64_t v7 = v0;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_71_5();
  }
  OUTLINED_FUNCTION_118_1(v6, v7);
  swift_retain();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:));
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  unint64_t v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 32);
  v1[6] = v6;
  v1[9] = v5;
  v1[10] = 0x73746361746E6F63;
  uint64_t v8 = OUTLINED_FUNCTION_101_2(0xE800000000000000);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v1[13] = 0;
    v1[14] = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_35_0(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v16(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  unint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  v1[6] = v6;
  v1[9] = v5;
  v1[10] = 0x73746361746E6F63;
  uint64_t v8 = OUTLINED_FUNCTION_101_2(0xE800000000000000);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v1[13] = 0;
    v1[14] = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(49);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  unint64_t v1;
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars8;

  OUTLINED_FUNCTION_119_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v3 = v1;
  }
  else
  {
    OUTLINED_FUNCTION_37_15();
  }
  v2[3].n128_u64[0] = v3;
  OUTLINED_FUNCTION_193_0();
  v2[4].n128_u64[1] = v4;
  v2[5].n128_u64[0] = v5;
  v2[5].n128_u64[1] = 0xE800000000000000;
  if (v0)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
    uint64_t v7 = v0;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_110_1(v6, v7);
  swift_retain();
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:));
}

void StartCallCATs.errorWithCodeNoValidNumber(appName:completion:)()
{
}

uint64_t StartCallCATs.errorWithCodeNoValidNumber(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(36);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

void StartCallCATs.errorWithCodeNoValidNumber(appName:)()
{
}

uint64_t StartCallCATs.errorWithCodeScreenTimeRestrictionEnabled(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.errorWithCodeScreenTimeRestrictionEnabled()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(51);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.errorWithCodeUnableToHandOff(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.errorWithCodeUnableToHandOff()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.finalLowConfidenceResponse(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.finalLowConfidenceResponse()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.genericError(device:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.genericError(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.genericError(device:));
}

uint64_t StartCallCATs.genericError(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  uint64_t v10 = OUTLINED_FUNCTION_73_0(22);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.genericError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.genericError(device:));
}

void StartCallCATs.hangUpTip(device:hintIdentifier:completion:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_27_0(v7, (__n128)xmmword_467720);
  if (v4)
  {
    type metadata accessor for SirikitDeviceState();
    unint64_t v8 = v4;
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
  }
  v7[3].n128_u64[0] = v8;
  OUTLINED_FUNCTION_191_0();
  v7[4].n128_u64[1] = v9;
  v7[5].n128_u64[0] = v10;
  OUTLINED_FUNCTION_190_0();
  v7[5].n128_u64[1] = v11;
  outlined init with copy of SpeakableString?(v2, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v12);
  if (v13)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_103();
  }
  else
  {
    v7[7].n128_u64[1] = v12;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v7[6]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v14();
    swift_retain();
  }
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24();
}

uint64_t StartCallCATs.hangUpTip(device:hintIdentifier:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[6] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t StartCallCATs.hangUpTip(device:hintIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = v10[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_36_2();
  v10[7] = v12;
  uint64_t v13 = OUTLINED_FUNCTION_24_7(v12, (__n128)xmmword_467720);
  if (v11)
  {
    uint64_t v13 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v12[3].n128_u64[1] = 0;
    v12[4].n128_u64[0] = 0;
  }
  uint64_t v14 = v10[6];
  OUTLINED_FUNCTION_98_3(v13);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_176_0(v16);
  if (v17)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v18();
    swift_retain();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_131_1(v19);
  void *v20 = v21;
  v20[1] = StartCallCATs.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_26_8();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(void);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = v10[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_36_2();
  v10[6] = v12;
  uint64_t v13 = OUTLINED_FUNCTION_24_7(v12, (__n128)xmmword_467720);
  if (v11)
  {
    uint64_t v13 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v12[3].n128_u64[1] = 0;
    v12[4].n128_u64[0] = 0;
  }
  uint64_t v14 = v10[5];
  OUTLINED_FUNCTION_98_3(v13);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v16);
  if (v17)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v18();
    swift_retain();
  }
  uint64_t v19 = OUTLINED_FUNCTION_3_0();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_65_5(v19);
  void *v20 = v21;
  v20[1] = StartCallCATs.hangUpTip(device:hintIdentifier:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_26_8();
  return v25(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

void StartCallCATs.hangUpTip(device:hintIdentifier:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_102_3();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_27_0(v6, (__n128)xmmword_467720);
  if (v0)
  {
    type metadata accessor for SirikitDeviceState();
    unint64_t v7 = v0;
  }
  else
  {
    OUTLINED_FUNCTION_37_15();
  }
  v6[3].n128_u64[0] = v7;
  OUTLINED_FUNCTION_191_0();
  v6[4].n128_u64[1] = v8;
  v6[5].n128_u64[0] = v9;
  OUTLINED_FUNCTION_190_0();
  v6[5].n128_u64[1] = v10;
  outlined init with copy of SpeakableString?(v3, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v1, 1, v11);
  if (v12)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    v6[7].n128_u64[1] = v11;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v6[6]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
  }
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24();
}

uint64_t StartCallCATs.intentConfirmation(intent:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_106(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentConfirmation(intent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentConfirmation(intent:));
}

uint64_t StartCallCATs.intentConfirmation(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_95(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_29_2(v5, 0x746E65746E69);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_29_2(v5, 0x746E65746E69);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  unint64_t v10 = OUTLINED_FUNCTION_73_0(28);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_106(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentConfirmation(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentConfirmation(intent:));
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:completion:)()
{
  OUTLINED_FUNCTION_86_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_75_4(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_71_5();
  }
  OUTLINED_FUNCTION_118_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:));
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  unint64_t v10 = (void *)OUTLINED_FUNCTION_35_0(v9);
  *unint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v16(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  unint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *unint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_36_1(37);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_119_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_73_5(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_110_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:));
}

uint64_t StartCallCATs.intentConfirmationEmergencyVoiceOnly(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.intentConfirmationEmergencyVoiceOnly()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(46);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:completion:)()
{
  OUTLINED_FUNCTION_28();
  unint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_106(v6, (__n128)xmmword_46A250);
  if (v5)
  {
    uint64_t v7 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v8 = v5;
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_111_1(v7, v8);
  if (v3)
  {
    uint64_t v9 = type metadata accessor for PhonePersonList();
    unint64_t v10 = v3;
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_71_5();
  }
  v6[6].n128_u64[0] = v10;
  v6[7].n128_u64[1] = v9;
  v6[8].n128_u64[0] = 0xD000000000000012;
  OUTLINED_FUNCTION_184_0((uint64_t)"restrictedContacts");
  if (v1)
  {
    uint64_t v11 = type metadata accessor for PhonePersonList();
    unint64_t v12 = v1;
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_126_0();
  }
  v6[9].n128_u64[0] = v12;
  v6[10].n128_u64[1] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  void v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:));
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = v10[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v12 = (__n128 *)OUTLINED_FUNCTION_24_3();
  v10[7] = v12;
  OUTLINED_FUNCTION_106(v12, (__n128)xmmword_46A250);
  if (v11)
  {
    uint64_t v13 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    v12[3].n128_u64[1] = 0;
    v12[4].n128_u64[0] = 0;
  }
  unint64_t v15 = v10[4];
  OUTLINED_FUNCTION_107_0(v13, v14);
  if (v15)
  {
    uint64_t v16 = type metadata accessor for PhonePersonList();
    unint64_t v17 = v15;
  }
  else
  {
    unint64_t v17 = 0;
    uint64_t v16 = 0;
    v12[6].n128_u64[1] = 0;
    v12[7].n128_u64[0] = 0;
  }
  unint64_t v18 = v10[5];
  v12[6].n128_u64[0] = v17;
  v12[7].n128_u64[1] = v16;
  v12[8].n128_u64[0] = 0xD000000000000012;
  uint64_t v19 = OUTLINED_FUNCTION_212((uint64_t)"restrictedContacts");
  if (v18)
  {
    uint64_t v19 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v12[9].n128_u64[1] = 0;
    v12[10].n128_u64[0] = 0;
  }
  v12[9].n128_u64[0] = v18;
  v12[10].n128_u64[1] = v19;
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_131_1(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_31_1();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = v10[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v12 = (__n128 *)OUTLINED_FUNCTION_24_3();
  v10[6] = v12;
  OUTLINED_FUNCTION_106(v12, (__n128)xmmword_46A250);
  if (v11)
  {
    uint64_t v13 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    v12[3].n128_u64[1] = 0;
    v12[4].n128_u64[0] = 0;
  }
  unint64_t v15 = v10[3];
  OUTLINED_FUNCTION_107_0(v13, v14);
  if (v15)
  {
    uint64_t v16 = type metadata accessor for PhonePersonList();
    unint64_t v17 = v15;
  }
  else
  {
    unint64_t v17 = 0;
    uint64_t v16 = 0;
    v12[6].n128_u64[1] = 0;
    v12[7].n128_u64[0] = 0;
  }
  unint64_t v18 = v10[4];
  v12[6].n128_u64[0] = v17;
  v12[7].n128_u64[1] = v16;
  v12[8].n128_u64[0] = 0xD000000000000012;
  uint64_t v19 = OUTLINED_FUNCTION_212((uint64_t)"restrictedContacts");
  if (v18)
  {
    uint64_t v19 = type metadata accessor for PhonePersonList();
  }
  else
  {
    v12[9].n128_u64[1] = 0;
    v12[10].n128_u64[0] = 0;
  }
  v12[9].n128_u64[0] = v18;
  v12[10].n128_u64[1] = v19;
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_65_5(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_159_0(0xD000000000000032);
  OUTLINED_FUNCTION_31_1();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_0();
  return v0();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_90_4();
  return v0();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_28();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_106(v5, (__n128)xmmword_46A250);
  if (v0)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v7 = v0;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_111_1(v6, v7);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for PhonePersonList();
    uint64_t v9 = v4;
  }
  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_71_5();
  }
  v5[6].n128_u64[0] = v9;
  v5[7].n128_u64[1] = v8;
  v5[8].n128_u64[0] = 0xD000000000000012;
  OUTLINED_FUNCTION_184_0((uint64_t)"restrictedContacts");
  if (v2)
  {
    unint64_t v10 = type metadata accessor for PhonePersonList();
    uint64_t v11 = v2;
  }
  else
  {
    unint64_t v10 = OUTLINED_FUNCTION_126_0();
  }
  v5[9].n128_u64[0] = v11;
  v5[10].n128_u64[1] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_54_11();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:));
}

void StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_35_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_106(v11, (__n128)xmmword_474610);
  if (v8)
  {
    uint64_t v12 = type metadata accessor for PhoneStartCallIntent(0);
    unint64_t v13 = v8;
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_22_23();
  }
  v11[3].n128_u64[0] = v13;
  v11[4].n128_u64[1] = v12;
  v11[5].n128_u64[0] = 0xD000000000000010;
  OUTLINED_FUNCTION_158_0((uint64_t)"redactedContacts");
  if (v6)
  {
    uint64_t v14 = type metadata accessor for PhonePersonList();
    uint64_t v15 = v6;
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_165_0();
  }
  OUTLINED_FUNCTION_146_0(v14, v15);
  if (v4)
  {
    uint64_t v16 = type metadata accessor for SirikitDeviceState();
    unint64_t v17 = v4;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_166_0();
  }
  v11[9].n128_u64[0] = v17;
  OUTLINED_FUNCTION_152_1(v16);
  outlined init with copy of SpeakableString?(v2, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v18);
  if (v19)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    v11[13].n128_u64[1] = v18;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11[12]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v20();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_97_2((uint64_t)&type metadata for Bool);
  v11[19].n128_u64[1] = v21;
  v11[20].n128_u64[0] = 0xD00000000000001ELL;
  OUTLINED_FUNCTION_171_0(v21);
  v11[21].n128_u8[0] = v22;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 98) = v2;
  *(unsigned char *)(v1 + 97) = v3;
  *(unsigned char *)(v1 + 96) = v4;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = v0;
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v7;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v10);
  *(void *)(v1 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void (*v13)(void);
  char v14;
  void *v15;
  uint64_t (*v17)(void);
  uint64_t v18;

  OUTLINED_FUNCTION_48();
  char v2 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = OUTLINED_FUNCTION_217_0();
  v0[9] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_474610;
  char v4 = OUTLINED_FUNCTION_29_2(v3, 0x746E65746E69);
  if (v2)
  {
    char v4 = type metadata accessor for PhoneStartCallIntent(v4);
  }
  else
  {
    *(void *)(v3 + 56) = 0;
    *(void *)(v3 + 64) = 0;
  }
  uint64_t v5 = (uint64_t *)v0[4];
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = 0xD000000000000010;
  uint64_t v6 = OUTLINED_FUNCTION_215((uint64_t)"redactedContacts");
  if (v5)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v3 + 104) = 0;
    *(void *)(v3 + 112) = 0;
  }
  uint64_t v7 = v0[5];
  uint64_t v8 = OUTLINED_FUNCTION_145_1(v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v3 + 152) = 0;
    *(void *)(v3 + 160) = 0;
  }
  OUTLINED_FUNCTION_139_1(v8);
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v9);
  uint64_t v10 = type metadata accessor for SpeakableString();
  uint64_t v11 = OUTLINED_FUNCTION_123_1(v10);
  uint64_t v12 = v0[8];
  if (v11 == 1)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    *(void *)(v3 + 216) = v1;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_138_1();
  OUTLINED_FUNCTION_93_5();
  OUTLINED_FUNCTION_172_0(v14);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_9_0();
  v0[10] = v15;
  *uint64_t v15 = v0;
  v15[1] = StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  OUTLINED_FUNCTION_23_13();
  return v17();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  *(unsigned char *)(v1 + 90) = v3;
  *(unsigned char *)(v1 + 89) = v4;
  *(unsigned char *)(v1 + 88) = v5;
  *(void *)(v1 + 24) = v6;
  *(void *)(v1 + 32) = v7;
  *(void *)(v1 + 16) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v9);
  *(void *)(v1 + 56) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void (*v13)(void);
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;

  OUTLINED_FUNCTION_48();
  char v2 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = OUTLINED_FUNCTION_217_0();
  v0[8] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_474610;
  char v4 = OUTLINED_FUNCTION_29_2(v3, 0x746E65746E69);
  if (v2)
  {
    char v4 = type metadata accessor for PhoneStartCallIntent(v4);
  }
  else
  {
    *(void *)(v3 + 56) = 0;
    *(void *)(v3 + 64) = 0;
  }
  uint64_t v5 = (uint64_t *)v0[3];
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = 0xD000000000000010;
  uint64_t v6 = OUTLINED_FUNCTION_215((uint64_t)"redactedContacts");
  if (v5)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v3 + 104) = 0;
    *(void *)(v3 + 112) = 0;
  }
  uint64_t v7 = v0[4];
  uint64_t v8 = OUTLINED_FUNCTION_145_1(v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v3 + 152) = 0;
    *(void *)(v3 + 160) = 0;
  }
  OUTLINED_FUNCTION_139_1(v8);
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v9);
  uint64_t v10 = type metadata accessor for SpeakableString();
  uint64_t v11 = OUTLINED_FUNCTION_123_1(v10);
  uint64_t v12 = v0[7];
  if (v11 == 1)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    *(void *)(v3 + 216) = v1;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v13();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_138_1();
  OUTLINED_FUNCTION_93_5();
  OUTLINED_FUNCTION_172_0(v14);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_9_0();
  v0[9] = v15;
  *uint64_t v15 = v0;
  v15[1] = StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  uint64_t v16 = OUTLINED_FUNCTION_11_6(0xD00000000000001FLL);
  return v18(v16);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

void StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_35_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_106((__n128 *)v11, (__n128)xmmword_474610);
  if (v8)
  {
    uint64_t v12 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v13 = v8;
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_22_23();
  }
  *(void *)(v11 + 48) = v13;
  *(void *)(v11 + 72) = v12;
  *(void *)(v11 + 80) = 0xD000000000000010;
  OUTLINED_FUNCTION_158_0((uint64_t)"redactedContacts");
  if (v6)
  {
    uint64_t v14 = type metadata accessor for PhonePersonList();
    uint64_t v15 = v6;
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_165_0();
  }
  OUTLINED_FUNCTION_146_0(v14, v15);
  if (v4)
  {
    uint64_t v16 = type metadata accessor for SirikitDeviceState();
    uint64_t v17 = v4;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_166_0();
  }
  *(void *)(v11 + 144) = v17;
  OUTLINED_FUNCTION_152_1(v16);
  outlined init with copy of SpeakableString?(v2, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v18);
  if (v19)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v11 + 192) = 0u;
    *(_OWORD *)(v11 + 208) = 0u;
  }
  else
  {
    *(void *)(v11 + 216) = v18;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v11 + 192));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v20();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_97_2((uint64_t)&type metadata for Bool);
  *(void *)(v11 + 312) = v21;
  *(void *)(v11 + 320) = 0xD00000000000001ELL;
  OUTLINED_FUNCTION_171_0(v21);
  *(unsigned char *)(v11 + 336) = v22;
  OUTLINED_FUNCTION_24_10();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  unint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_106(v10, (__n128)xmmword_46DE40);
  if (v9)
  {
    uint64_t v11 = type metadata accessor for PhoneStartCallIntent(0);
    unint64_t v12 = v9;
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_33_12();
  }
  v10[3].n128_u64[0] = v12;
  v10[4].n128_u64[1] = v11;
  v10[5].n128_u64[0] = 0xD000000000000014;
  OUTLINED_FUNCTION_41_0();
  v10[5].n128_u64[1] = v13;
  v10[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_203_0();
  v10[7].n128_u64[1] = v15;
  v10[8].n128_u64[0] = v14;
  v10[8].n128_u64[1] = 0xEC0000006C6C6143;
  v10[9].n128_u8[0] = v5 & 1;
  v10[10].n128_u64[1] = v15;
  v10[11].n128_u64[0] = 0xD000000000000012;
  OUTLINED_FUNCTION_183((uint64_t)"isRepromptAutoCall");
  v10[12].n128_u8[0] = v3 & 1;
  v10[13].n128_u64[1] = v16;
  v10[14].n128_u64[0] = 0x656369766564;
  v10[14].n128_u64[1] = 0xE600000000000000;
  if (v1)
  {
    uint64_t v17 = type metadata accessor for SirikitDeviceState();
    unint64_t v18 = v1;
  }
  else
  {
    unint64_t v18 = 0;
    uint64_t v17 = 0;
    v10[15].n128_u64[1] = 0;
    v10[16].n128_u64[0] = 0;
  }
  v10[15].n128_u64[0] = v18;
  v10[16].n128_u64[1] = v17;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)(uint64_t a1, uint64_t a2, char a3, char a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = v6;
  *(unsigned char *)(v7 + 74) = a5;
  *(unsigned char *)(v7 + 73) = a4;
  *(unsigned char *)(v7 + 72) = a3;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_104();
  unint64_t v14 = (__n128 *)OUTLINED_FUNCTION_57_0(v13);
  OUTLINED_FUNCTION_106(v14, (__n128)xmmword_46DE40);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v17 = *(void *)(v10 + 32);
  v11[6] = v16;
  v11[9] = v15;
  v11[10] = 0xD000000000000014;
  OUTLINED_FUNCTION_158_0((uint64_t)"noCountdownPresented");
  OUTLINED_FUNCTION_103_2((uint64_t)&type metadata for Bool);
  uint64_t v19 = OUTLINED_FUNCTION_120_0(v18);
  if (v17)
  {
    uint64_t v19 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v11[31] = 0;
    v11[32] = 0;
  }
  v11[30] = v17;
  v11[33] = v19;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_35_0(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_104();
  unint64_t v14 = (__n128 *)OUTLINED_FUNCTION_20_3(v13);
  OUTLINED_FUNCTION_106(v14, (__n128)xmmword_46DE40);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v17 = *(void *)(v10 + 24);
  v11[6] = v16;
  v11[9] = v15;
  v11[10] = 0xD000000000000014;
  OUTLINED_FUNCTION_158_0((uint64_t)"noCountdownPresented");
  OUTLINED_FUNCTION_103_2((uint64_t)&type metadata for Bool);
  uint64_t v19 = OUTLINED_FUNCTION_120_0(v18);
  if (v17)
  {
    uint64_t v19 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v11[31] = 0;
    v11[32] = 0;
  }
  v11[30] = v17;
  v11[33] = v19;
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_29_6(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_26_2(0xD000000000000028);
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  unint64_t v0;
  unint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  __n128 *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_24_0();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_106(v10, (__n128)xmmword_46DE40);
  if (v9)
  {
    uint64_t v11 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v12 = v9;
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_37_15();
  }
  v10[3].n128_u64[0] = v12;
  v10[4].n128_u64[1] = v11;
  v10[5].n128_u64[0] = 0xD000000000000014;
  OUTLINED_FUNCTION_41_0();
  v10[5].n128_u64[1] = v13;
  v10[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_203_0();
  v10[7].n128_u64[1] = v15;
  v10[8].n128_u64[0] = v14;
  v10[8].n128_u64[1] = 0xEC0000006C6C6143;
  v10[9].n128_u8[0] = v5 & 1;
  v10[10].n128_u64[1] = v15;
  v10[11].n128_u64[0] = 0xD000000000000012;
  v10[11].n128_u64[1] = 0x8000000000496700;
  v10[12].n128_u8[0] = v3 & 1;
  v10[13].n128_u64[1] = v15;
  v10[14].n128_u64[0] = 0x656369766564;
  v10[14].n128_u64[1] = 0xE600000000000000;
  if (v1)
  {
    uint64_t v16 = type metadata accessor for SirikitDeviceState();
    uint64_t v17 = v1;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v16 = 0;
    v10[15].n128_u64[1] = 0;
    v10[16].n128_u64[0] = 0;
  }
  v10[15].n128_u64[0] = v17;
  v10[16].n128_u64[1] = v16;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)(uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a4;
  *(unsigned char *)(v6 + 65) = a3;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATs.intentHandledResponseWithFaceTimeLink(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.intentHandledResponseWithFaceTimeLink()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(47);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.internalConversionError(device:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.internalConversionError(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.internalConversionError(device:));
}

uint64_t StartCallCATs.internalConversionError(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(33);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.internalConversionError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.internalConversionError(device:));
}

uint64_t StartCallCATs.joinFaceTimeMessage(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.joinFaceTimeMessage()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(29);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.promptForCallCapability(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.promptForCallCapability()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(33);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  char v3 = v2;
  char v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v15 = OUTLINED_FUNCTION_11_0(v14);
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_35_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_4_41(v16, (__n128)xmmword_46DE40);
  outlined init with copy of SpeakableString?(v13, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v1, 1, v17);
  if (v18)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v16[4].n128_u64[1] = v17;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v19 + 32))();
  }
  OUTLINED_FUNCTION_25_3();
  v16[5].n128_u64[0] = v20;
  v16[5].n128_u64[1] = v21;
  v16[6].n128_u8[0] = v11 & 1;
  OUTLINED_FUNCTION_198_0();
  v16[7].n128_u64[1] = v22;
  v16[8].n128_u64[0] = v23;
  OUTLINED_FUNCTION_197_0();
  v16[8].n128_u64[1] = v25;
  if (v7)
  {
    uint64_t v26 = 0;
    unint64_t v9 = 0;
    v16[9].n128_u64[1] = 0;
    v16[10].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v26 = &type metadata for Double;
  }
  v16[9].n128_u64[0] = v9;
  v16[10].n128_u64[1] = (unint64_t)v26;
  strcpy((char *)&v16[11], "startingOver");
  v16[11].n128_u8[13] = 0;
  v16[11].n128_u16[7] = -5120;
  v16[12].n128_u8[0] = v5 & 1;
  v16[13].n128_u64[1] = v24;
  v16[14].n128_u64[0] = 0xD000000000000015;
  v16[14].n128_u64[1] = 0x8000000000493A20;
  v16[16].n128_u64[1] = v24;
  v16[15].n128_u8[0] = v3 & 1;
  OUTLINED_FUNCTION_24_10();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 83) = v2;
  *(unsigned char *)(v1 + 82) = v3;
  *(unsigned char *)(v1 + 81) = v4;
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v0;
  *(unsigned char *)(v1 + 80) = v6;
  *(void *)(v1 + 16) = v7;
  *(void *)(v1 + 24) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v9);
  *(void *)(v1 + 48) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v2 = (__n128 *)OUTLINED_FUNCTION_104();
  *(void *)(v0 + 56) = v2;
  char v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_46DE40);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_202_0(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  OUTLINED_FUNCTION_151_1();
  OUTLINED_FUNCTION_108_1((uint64_t)&type metadata for Bool);
  if (v9)
  {
    v2[9].n128_u64[1] = 0;
    v2[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_92_4(v8);
  OUTLINED_FUNCTION_170(v10);
  uint64_t v11 = OUTLINED_FUNCTION_9_0();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_131_1(v11);
  __n128 *v12 = v13;
  v12[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_20_2();
  return v18(v14, v15, v16, v17, v18, v19, v20, v21);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 75) = v3;
  *(unsigned char *)(v1 + 74) = v4;
  *(unsigned char *)(v1 + 73) = v5;
  *(unsigned char *)(v1 + 72) = v6;
  *(void *)(v1 + 16) = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v2 = *(void *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = OUTLINED_FUNCTION_104();
  char v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  uint64_t v5 = OUTLINED_FUNCTION_4_41(v4, (__n128)xmmword_46DE40);
  OUTLINED_FUNCTION_39_0((uint64_t)v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v9();
  }
  OUTLINED_FUNCTION_151_1();
  OUTLINED_FUNCTION_108_1((uint64_t)&type metadata for Bool);
  if (v11)
  {
    *(void *)(v1 + 152) = 0;
    *(void *)(v1 + 160) = 0;
  }
  OUTLINED_FUNCTION_92_4(v10);
  OUTLINED_FUNCTION_170(v12);
  uint64_t v13 = OUTLINED_FUNCTION_9_0();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_65_5(v13);
  *uint64_t v14 = v15;
  v14[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_20_2();
  return v19(v16, v17, v18, v19, v20, v21, v22, v23);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *char v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

void StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v30 = v0;
  char v2 = v1;
  char v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_11_0(v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = OUTLINED_FUNCTION_104();
  *(_OWORD *)(v17 + 16) = xmmword_46DE40;
  char v18 = (uint64_t *)(v17 + 48);
  OUTLINED_FUNCTION_105(v17);
  outlined init with copy of SpeakableString?(v12, (uint64_t)v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6((uint64_t)v16, 1, v19);
  if (v20)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v16, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)char v18 = 0u;
    *(_OWORD *)(v17 + 64) = 0u;
  }
  else
  {
    *(void *)(v17 + 72) = v19;
    __swift_allocate_boxed_opaque_existential_1(v18);
    OUTLINED_FUNCTION_10();
    (*(void (**)(uint64_t))(v21 + 32))(v22);
  }
  OUTLINED_FUNCTION_25_3();
  *(void *)(v17 + 80) = v23;
  *(void *)(v17 + 88) = v24;
  *(unsigned char *)(v17 + 96) = v10 & 1;
  OUTLINED_FUNCTION_198_0();
  *(void *)(v17 + 120) = v25;
  *(void *)(v17 + 128) = v26;
  OUTLINED_FUNCTION_197_0();
  *(void *)(v17 + 136) = v28;
  if (v6)
  {
    uint64_t v29 = 0;
    uint64_t v8 = 0;
    *(void *)(v17 + 152) = 0;
    *(void *)(v17 + 160) = 0;
  }
  else
  {
    uint64_t v29 = &type metadata for Double;
  }
  *(void *)(v17 + 144) = v8;
  *(void *)(v17 + 168) = v29;
  strcpy((char *)(v17 + 176), "startingOver");
  *(unsigned char *)(v17 + 189) = 0;
  *(_WORD *)(v17 + 190) = -5120;
  *(unsigned char *)(v17 + 192) = v4 & 1;
  *(void *)(v17 + 216) = v27;
  *(void *)(v17 + 224) = 0xD000000000000015;
  *(void *)(v17 + 232) = 0x8000000000493A20;
  *(void *)(v17 + 264) = v27;
  *(unsigned char *)(v17 + 240) = v2 & 1;
  OUTLINED_FUNCTION_24_10();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v7 + 16) = xmmword_467720;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v8 + 32) = 0xD000000000000018;
  *(void *)(v8 + 40) = v9;
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v10);
  if (v11)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    *(void *)(v7 + 72) = v10;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 48));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_181();
    v12();
  }
  OUTLINED_FUNCTION_143_1();
  *(void *)(v7 + 80) = v13;
  *(void *)(v7 + 88) = v14;
  if (v2)
  {
    uint64_t v15 = type metadata accessor for DialogPersonHandle();
    uint64_t v16 = v2;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_71_5();
  }
  *(void *)(v7 + 96) = v16;
  *(void *)(v7 + 120) = v15;
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[6] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_167_0();
  uint64_t v11 = v10[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_36_2();
  v10[7] = v12;
  uint64_t v13 = OUTLINED_FUNCTION_19_4(v12, (__n128)xmmword_467720);
  uint64_t v14 = OUTLINED_FUNCTION_19_7((uint64_t)v13, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_202_0(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v18();
  }
  unint64_t v19 = v10[4];
  uint64_t v20 = OUTLINED_FUNCTION_121_0();
  if (v19)
  {
    uint64_t v20 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    v12[6].n128_u64[1] = 0;
    v12[7].n128_u64[0] = 0;
  }
  v12[6].n128_u64[0] = v19;
  v12[7].n128_u64[1] = v20;
  OUTLINED_FUNCTION_8_1();
  uint64_t v21 = swift_task_alloc();
  uint64_t v22 = (void *)OUTLINED_FUNCTION_131_1(v21);
  *uint64_t v22 = v23;
  v22[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v28(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_167_0();
  uint64_t v13 = *(void *)(v10 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_36_2();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_57_0(v14);
  uint64_t v16 = OUTLINED_FUNCTION_19_4(v15, (__n128)xmmword_467720);
  char v17 = OUTLINED_FUNCTION_19_7((uint64_t)v16, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_39_0(v17, v18, &demangling cache variable for type metadata for SpeakableString?);
  unint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v19);
  if (v20)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v21();
  }
  uint64_t v22 = *(void *)(v10 + 24);
  uint64_t v23 = OUTLINED_FUNCTION_121_0();
  if (v22)
  {
    uint64_t v23 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    v11[13] = 0;
    v11[14] = 0;
  }
  v11[12] = v22;
  v11[15] = v23;
  OUTLINED_FUNCTION_8_1();
  uint64_t v24 = swift_task_alloc();
  uint64_t v25 = (void *)OUTLINED_FUNCTION_65_5(v24);
  *uint64_t v25 = v26;
  v25[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_26_2(v12 + 13);
  OUTLINED_FUNCTION_26_8();
  return v30(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10);
}

void StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v7 + 16) = xmmword_467720;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  OUTLINED_FUNCTION_41_0();
  *(void *)(v9 + 32) = 0xD000000000000018;
  *(void *)(v9 + 40) = v10;
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v11);
  if (v12)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v11;
    __swift_allocate_boxed_opaque_existential_1(v8);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v13 + 32))();
  }
  OUTLINED_FUNCTION_143_1();
  *(void *)(v7 + 80) = v14;
  *(void *)(v7 + 88) = v15;
  if (v2)
  {
    uint64_t v16 = type metadata accessor for DialogPersonHandle();
    uint64_t v17 = v2;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_94_4();
  }
  *(void *)(v7 + 96) = v17;
  *(void *)(v7 + 120) = v16;
  swift_retain();
  OUTLINED_FUNCTION_88();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.promptForDestinationType(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.promptForDestinationType()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(34);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.promptForPreferredCallProvider(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.promptForPreferredCallProvider()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(40);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void StartCallCATs.relationship(relationship:completion:)()
{
}

uint64_t StartCallCATs.relationship(relationship:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_124_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_124_1(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_36_1(22);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

void StartCallCATs.relationship(relationship:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapability(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedCallCapability()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(35);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:completion:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmApp(appName:isPhoneApp:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmApp(appName:isPhoneApp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(54);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

void StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:)()
{
}

void StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:completion:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_58_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_57_0(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_35_0(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.confirmCallCapability(callCapability:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(58);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

void StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapabilityVideoCallUnsupported(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedCallCapabilityVideoCallUnsupported()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(55);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedContactsForeignEmergencyDisambiguation(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedContactsForeignEmergencyDisambiguation()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(59);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_45_4(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhonePersonList();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedContactsInvalidHandle(contacts:));
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_95(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x73746361746E6F63);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  uint64_t v6 = OUTLINED_FUNCTION_17_22(v5, 0x73746361746E6F63);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  uint64_t v10 = OUTLINED_FUNCTION_73_0(42);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_45_4(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhonePersonList();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedContactsInvalidHandle(contacts:));
}

uint64_t StartCallCATs.unsupportedContactsMultipleContactsUnsupported(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedContactsMultipleContactsUnsupported()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(56);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedContactsNoCallHistoryForRedial(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedContactsNoCallHistoryForRedial()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(51);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_65_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_155_0((__n128 *)v9, (__n128)xmmword_46A250);
  if (v6)
  {
    uint64_t v10 = type metadata accessor for DialogPerson();
    uint64_t v11 = v6;
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_33_12();
  }
  *(void *)(v9 + 48) = v11;
  OUTLINED_FUNCTION_153_2(v10);
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v12);
  if (v13)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v9 + 96) = 0u;
    *(_OWORD *)(v9 + 112) = 0u;
  }
  else
  {
    *(void *)(v9 + 120) = v12;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 96));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v14();
    swift_retain();
  }
  OUTLINED_FUNCTION_133_1();
  *(void *)(v9 + 168) = &type metadata for Bool;
  *(unsigned char *)(v9 + 144) = v2 & 1;
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 80) = v2;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v6);
  *(void *)(v1 + 48) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = v10[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_24_3();
  v10[7] = v12;
  *(_OWORD *)(v12 + 16) = xmmword_46A250;
  uint64_t v13 = OUTLINED_FUNCTION_17_22(v12, 0x746361746E6F63);
  if (v11)
  {
    uint64_t v13 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v12 + 56) = 0;
    *(void *)(v12 + 64) = 0;
  }
  uint64_t v14 = v10[6];
  OUTLINED_FUNCTION_125_1(v13);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_176_0(v16);
  if (v17)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v18();
    swift_retain();
  }
  OUTLINED_FUNCTION_132_1();
  *(void *)(v12 + 168) = &type metadata for Bool;
  *(unsigned char *)(v12 + 144) = v19;
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_131_1(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_26_8();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(void);
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = v10[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_24_3();
  v10[6] = v12;
  *(_OWORD *)(v12 + 16) = xmmword_46A250;
  uint64_t v13 = OUTLINED_FUNCTION_17_22(v12, 0x746361746E6F63);
  if (v11)
  {
    uint64_t v13 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v12 + 56) = 0;
    *(void *)(v12 + 64) = 0;
  }
  uint64_t v14 = v10[5];
  OUTLINED_FUNCTION_125_1(v13);
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_37_14(v16);
  if (v17)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v18();
    swift_retain();
  }
  OUTLINED_FUNCTION_132_1();
  *(void *)(v12 + 168) = &type metadata for Bool;
  *(unsigned char *)(v12 + 144) = v19;
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_65_5(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_26_8();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

void StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)()
{
  OUTLINED_FUNCTION_28();
  char v2 = v1;
  uint64_t v4 = v3;
  unint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_155_0(v9, (__n128)xmmword_46A250);
  if (v6)
  {
    uint64_t v10 = type metadata accessor for DialogPerson();
    unint64_t v11 = v6;
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_33_12();
  }
  v9[3].n128_u64[0] = v11;
  OUTLINED_FUNCTION_153_2(v10);
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v12);
  if (v13)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_103();
  }
  else
  {
    v9[7].n128_u64[1] = v12;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9[6]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v14();
    swift_retain();
  }
  OUTLINED_FUNCTION_133_1();
  v9[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[9].n128_u8[0] = v2 & 1;
  OUTLINED_FUNCTION_54_11();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24();
}

uint64_t StartCallCATs.unsupportedContactsNoContactFoundUserUnknown(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedContactsNoContactFoundUserUnknown()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(54);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v34 = v0;
  uint64_t v35 = v1;
  uint64_t v3 = v2;
  uint64_t v33 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_11_0(v11);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v17 = (char *)&v32 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_106((__n128 *)v18, (__n128)xmmword_46DE40);
  if (v10)
  {
    uint64_t v19 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v20 = v10;
  }
  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_33_12();
  }
  *(void *)(v18 + 48) = v20;
  *(void *)(v18 + 72) = v19;
  *(void *)(v18 + 80) = 0xD000000000000015;
  *(void *)(v18 + 88) = 0x800000000048C170;
  outlined init with copy of SpeakableString?(v8, (uint64_t)v17, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v21 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6((uint64_t)v17, 1, v21);
  if (v22)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v17, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v18 + 96) = 0u;
    *(_OWORD *)(v18 + 112) = 0u;
  }
  else
  {
    *(void *)(v18 + 120) = v21;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 96));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v23();
    swift_retain();
  }
  uint64_t v24 = v33;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v18 + 128) = 0xD000000000000011;
  *(void *)(v18 + 136) = v25;
  if (v6)
  {
    uint64_t v26 = type metadata accessor for DialogPerson();
    uint64_t v27 = v6;
  }
  else
  {
    uint64_t v26 = OUTLINED_FUNCTION_126_0();
  }
  *(void *)(v18 + 144) = v27;
  *(void *)(v18 + 168) = v26;
  *(void *)(v18 + 176) = 0xD00000000000001CLL;
  OUTLINED_FUNCTION_183((uint64_t)"unsupportedPersonHandleLabel");
  outlined init with copy of SpeakableString?(v24, (uint64_t)v15, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_28_6((uint64_t)v15, 1, v21);
  if (v22)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    *(void *)(v18 + 216) = v21;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 192));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v28();
    swift_retain();
  }
  OUTLINED_FUNCTION_41_0();
  *(void *)(v18 + 224) = 0xD000000000000011;
  *(void *)(v18 + 232) = v29;
  if (v3)
  {
    uint64_t v30 = type metadata accessor for DialogPersonHandle();
    uint64_t v31 = v3;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v30 = 0;
    *(void *)(v18 + 248) = 0;
    *(void *)(v18 + 256) = 0;
  }
  *(void *)(v18 + 240) = v31;
  *(void *)(v18 + 264) = v30;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  v1[3] = v5;
  v1[4] = v6;
  v1[2] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[2] = v5;
  v1[3] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v7);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = v12[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_104();
  v12[11] = v14;
  *(_OWORD *)(v14 + 16) = xmmword_46DE40;
  uint64_t v15 = OUTLINED_FUNCTION_29_2(v14, 0x746E65746E69);
  if (v13)
  {
    uint64_t v15 = type metadata accessor for PhoneStartCallIntent(v15);
  }
  else
  {
    *(void *)(v14 + 56) = 0;
    *(void *)(v14 + 64) = 0;
  }
  OUTLINED_FUNCTION_188_0(v15);
  *(void *)(v14 + 88) = 0x800000000048C170;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v16);
  uint64_t v17 = type metadata accessor for SpeakableString();
  int v18 = OUTLINED_FUNCTION_60(v17);
  uint64_t v19 = v12[10];
  if (v18 == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v19, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v14 + 120) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v20();
    swift_retain();
  }
  uint64_t v21 = v12[5];
  uint64_t v22 = OUTLINED_FUNCTION_213_0((uint64_t)"unsupportedPerson");
  if (v21)
  {
    uint64_t v22 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v14 + 152) = 0;
    *(void *)(v14 + 160) = 0;
  }
  uint64_t v23 = v12[9];
  OUTLINED_FUNCTION_185_0(v22);
  *(void *)(v14 + 184) = 0x8000000000493B10;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v24);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, 1, v10);
  uint64_t v26 = v12[9];
  if (EnumTagSinglePayload == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v26, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v14 + 216) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v27();
    swift_retain();
  }
  uint64_t v28 = v12[7];
  uint64_t v29 = OUTLINED_FUNCTION_211((uint64_t)"unsupportedHandle");
  if (v28)
  {
    uint64_t v29 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    *(void *)(v14 + 248) = 0;
    *(void *)(v14 + 256) = 0;
  }
  *(void *)(v14 + 240) = v28;
  *(void *)(v14 + 264) = v29;
  OUTLINED_FUNCTION_27_19();
  uint64_t v30 = (void *)swift_task_alloc();
  v12[12] = v30;
  *uint64_t v30 = v12;
  v30[1] = StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_31_1();
  return v35(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10);
}

{
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_40_0();
  uint64_t v13 = v12[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_104();
  v12[10] = v14;
  *(_OWORD *)(v14 + 16) = xmmword_46DE40;
  uint64_t v15 = OUTLINED_FUNCTION_29_2(v14, 0x746E65746E69);
  if (v13)
  {
    uint64_t v15 = type metadata accessor for PhoneStartCallIntent(v15);
  }
  else
  {
    *(void *)(v14 + 56) = 0;
    *(void *)(v14 + 64) = 0;
  }
  OUTLINED_FUNCTION_188_0(v15);
  *(void *)(v14 + 88) = 0x800000000048C170;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v16);
  uint64_t v17 = type metadata accessor for SpeakableString();
  int v18 = OUTLINED_FUNCTION_60(v17);
  uint64_t v19 = v12[9];
  if (v18 == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v19, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v14 + 120) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v20();
    swift_retain();
  }
  uint64_t v21 = v12[4];
  uint64_t v22 = OUTLINED_FUNCTION_213_0((uint64_t)"unsupportedPerson");
  if (v21)
  {
    uint64_t v22 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v14 + 152) = 0;
    *(void *)(v14 + 160) = 0;
  }
  uint64_t v23 = v12[8];
  OUTLINED_FUNCTION_185_0(v22);
  *(void *)(v14 + 184) = 0x8000000000493B10;
  OUTLINED_FUNCTION_142_0(&demangling cache variable for type metadata for SpeakableString?, v24);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, 1, v10);
  uint64_t v26 = v12[8];
  if (EnumTagSinglePayload == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v26, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v14 + 216) = v10;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v27();
    swift_retain();
  }
  uint64_t v28 = v12[6];
  uint64_t v29 = OUTLINED_FUNCTION_211((uint64_t)"unsupportedHandle");
  if (v28)
  {
    uint64_t v29 = type metadata accessor for DialogPersonHandle();
  }
  else
  {
    *(void *)(v14 + 248) = 0;
    *(void *)(v14 + 256) = 0;
  }
  *(void *)(v14 + 240) = v28;
  *(void *)(v14 + 264) = v29;
  OUTLINED_FUNCTION_27_19();
  uint64_t v30 = (void *)swift_task_alloc();
  v12[11] = v30;
  *uint64_t v30 = v12;
  v30[1] = StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  OUTLINED_FUNCTION_159_0(0xD00000000000002DLL);
  OUTLINED_FUNCTION_31_1();
  return v34(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10);
}

void StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  OUTLINED_FUNCTION_24_0();
  unint64_t v1 = v0;
  v32[0] = v2;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_11_0(v11);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v32 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  int v18 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_106(v18, (__n128)xmmword_46DE40);
  v32[1] = v10;
  if (v8)
  {
    uint64_t v19 = type metadata accessor for PhoneStartCallIntent(0);
    unint64_t v20 = v8;
  }
  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_37_15();
  }
  v18[3].n128_u64[0] = v20;
  v18[4].n128_u64[1] = v19;
  v18[5].n128_u64[0] = 0xD000000000000015;
  v18[5].n128_u64[1] = 0x800000000048C170;
  outlined init with copy of SpeakableString?(v6, (uint64_t)v17, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v21 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6((uint64_t)v17, 1, v21);
  if (v22)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v17, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v18[7].n128_u64[1] = v21;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18[6]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v23();
    swift_retain();
  }
  uint64_t v24 = v32[0];
  OUTLINED_FUNCTION_41_0();
  v18[8].n128_u64[0] = 0xD000000000000011;
  v18[8].n128_u64[1] = v25;
  if (v4)
  {
    uint64_t v26 = type metadata accessor for DialogPerson();
    unint64_t v27 = v4;
  }
  else
  {
    unint64_t v27 = 0;
    uint64_t v26 = 0;
    v18[9].n128_u64[1] = 0;
    v18[10].n128_u64[0] = 0;
  }
  v18[9].n128_u64[0] = v27;
  v18[10].n128_u64[1] = v26;
  v18[11].n128_u64[0] = 0xD00000000000001CLL;
  v18[11].n128_u64[1] = 0x8000000000493B10;
  outlined init with copy of SpeakableString?(v24, (uint64_t)v15, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_28_6((uint64_t)v15, 1, v21);
  if (v22)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v18[13].n128_u64[1] = v21;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18[12]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v28();
    swift_retain();
  }
  OUTLINED_FUNCTION_41_0();
  v18[14].n128_u64[0] = 0xD000000000000011;
  v18[14].n128_u64[1] = v29;
  if (v1)
  {
    uint64_t v30 = type metadata accessor for DialogPersonHandle();
    unint64_t v31 = v1;
  }
  else
  {
    unint64_t v31 = 0;
    uint64_t v30 = 0;
    v18[15].n128_u64[1] = 0;
    v18[16].n128_u64[0] = 0;
  }
  v18[15].n128_u64[0] = v31;
  v18[16].n128_u64[1] = v30;
  swift_retain();
  OUTLINED_FUNCTION_88();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t StartCallCATs.unsupportedContactsNoUsableHandleForRedial(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedContactsNoUsableHandleForRedial()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(52);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedContactsUnsupportedMmiUssd(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedContactsUnsupportedMmiUssd()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(47);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedDestinationType(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedDestinationType()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedDeviceFaceTimeLink(device:));
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(39);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedDeviceFaceTimeLink(device:));
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedDeviceGroupFaceTime(device:));
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *unint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(40);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_27_0(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for SirikitDeviceState();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedDeviceGroupFaceTime(device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:completion:)()
{
  OUTLINED_FUNCTION_86_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_75_4(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_71_5();
  }
  OUTLINED_FUNCTION_118_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProvider(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_35_0(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v16(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_36_1(42);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_119_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_73_5(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_110_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProvider(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:completion:)()
{
  OUTLINED_FUNCTION_86_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_75_4(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_71_5();
  }
  OUTLINED_FUNCTION_118_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_35_0(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v16(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(62);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_119_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_73_5(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_110_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessible(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessible()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(76);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderProviderDisabledInSettings(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderProviderDisabledInSettings()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(68);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:completion:)()
{
  OUTLINED_FUNCTION_86_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_75_4(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_71_5();
  }
  OUTLINED_FUNCTION_118_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_28_20();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_57_0(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_35_0(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_20_2();
  return v16(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_20_3(v3);
  OUTLINED_FUNCTION_106(v4, (__n128)xmmword_467720);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = OUTLINED_FUNCTION_32_14(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  OUTLINED_FUNCTION_100_1(v8);
  OUTLINED_FUNCTION_27_19();
  swift_retain();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(60);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_119_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_106(v2, (__n128)xmmword_467720);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneStartCallIntent(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_73_5(v3, v4);
  if (v0)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState();
    uint64_t v6 = v0;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_110_1(v5, v6);
  swift_retain();
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:completion:)()
{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:completion:)();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_95(v3);
  OUTLINED_FUNCTION_24_7(v4, (__n128)xmmword_467720);
  if (v2)
  {
    type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v1[7] = 0;
    v1[8] = 0;
  }
  char v5 = *(unsigned char *)(v0 + 64);
  v1[6] = v2;
  v1[11] = 0x8000000000496740;
  OUTLINED_FUNCTION_195_0(v5);
  OUTLINED_FUNCTION_144(v6);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_29_6(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v14(v10, v11, v12, v13, v14, v15, v16, v17);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  char v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  OUTLINED_FUNCTION_24_7(v5, (__n128)xmmword_467720);
  if (v3)
  {
    type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v1[7] = 0;
    v1[8] = 0;
  }
  uint64_t v6 = *(unsigned char *)(v0 + 56);
  v1[6] = v3;
  v1[11] = 0x8000000000496740;
  OUTLINED_FUNCTION_195_0(v6);
  OUTLINED_FUNCTION_144(v7);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_32_0(v2 | 0x2A);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:));
}

unint64_t lazy protocol witness table accessor for type StartCallCATs.Properties and conformance StartCallCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATs.Properties and conformance StartCallCATs.Properties;
  if (!lazy protocol witness table cache variable for type StartCallCATs.Properties and conformance StartCallCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATs.Properties and conformance StartCallCATs.Properties);
  }
  return result;
}

uint64_t type metadata completion function for StartCallCATs()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for StartCallCATs()
{
  return type metadata accessor for StartCallCATs();
}

uint64_t getEnumTagSinglePayload for StartCallCATs.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xBD)
  {
    if (a2 + 67 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 67) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 68;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x44;
  int v5 = v6 - 68;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for StartCallCATs.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 67 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 67) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xBD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xBC)
  {
    unsigned int v6 = ((a2 - 189) >> 8) + 1;
    *unint64_t result = a2 + 67;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F00ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 67;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartCallCATs.Properties()
{
  return &type metadata for StartCallCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_28_20()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
}

uint64_t OUTLINED_FUNCTION_31_18()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
}

uint64_t OUTLINED_FUNCTION_32_14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x656369766564;
  v2[11] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_33_12()
{
  uint64_t result = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_37_15()
{
  uint64_t result = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  return result;
}

void OUTLINED_FUNCTION_48_12()
{
}

void OUTLINED_FUNCTION_49_13()
{
}

uint64_t OUTLINED_FUNCTION_71_5()
{
  uint64_t result = 0;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_72_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 48) = a2;
  *(void *)(v2 + 72) = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_73_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x656369766564;
  v2[11] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_75_4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x656369766564;
  v2[11] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_76_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 48) = a2;
  *(void *)(v2 + 72) = a1;
  return swift_retain();
}

__n128 *OUTLINED_FUNCTION_77_4(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x73656D614E707061;
  result[2].n128_u64[1] = 0xE800000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)();
}

uint64_t OUTLINED_FUNCTION_89_6()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_90_4()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_92_4(uint64_t a1@<X8>)
{
  *(void *)(v4 + 144) = v2;
  *(void *)(v4 + 168) = v1;
  strcpy((char *)(v4 + 176), "startingOver");
  *(unsigned char *)(v4 + 189) = 0;
  *(_WORD *)(v4 + 190) = -5120;
  *(unsigned char *)(v4 + 192) = v3;
  *(void *)(v4 + 216) = a1;
  *(void *)(v4 + 224) = 0xD000000000000015;
}

void OUTLINED_FUNCTION_93_5()
{
  *(unsigned char *)(v3 + 240) = v1;
  *(void *)(v3 + 264) = v2;
  strcpy((char *)(v3 + 272), "isWalkieTalkie");
  *(unsigned char *)(v3 + 287) = -18;
  *(unsigned char *)(v3 + 288) = v0;
  *(void *)(v3 + 312) = v2;
  *(void *)(v3 + 320) = v4 + 14;
}

uint64_t OUTLINED_FUNCTION_94_4()
{
  uint64_t result = 0;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  return result;
}

void OUTLINED_FUNCTION_97_2(uint64_t a1@<X8>)
{
  *(unsigned char *)(v3 + 240) = v1;
  *(void *)(v3 + 264) = a1;
  strcpy((char *)(v3 + 272), "isWalkieTalkie");
  *(unsigned char *)(v3 + 287) = -18;
  *(unsigned char *)(v3 + 288) = v2 & 1;
}

uint64_t OUTLINED_FUNCTION_98_3(uint64_t result)
{
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = result;
  strcpy((char *)(v2 + 80), "hintIdentifier");
  *(unsigned char *)(v2 + 95) = -18;
  return result;
}

uint64_t OUTLINED_FUNCTION_100_1(uint64_t result)
{
  *(void *)(v2 + 96) = v1;
  *(void *)(v2 + 120) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_101_2@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = a1;
  return 0;
}

void OUTLINED_FUNCTION_103_2(uint64_t a1@<X8>)
{
  *(unsigned char *)(v3 + 96) = v2;
  *(void *)(v3 + 120) = a1;
  strcpy((char *)(v3 + 128), "isMyriadCall");
  *(unsigned char *)(v3 + 141) = 0;
  *(_WORD *)(v3 + 142) = -5120;
  *(unsigned char *)(v3 + 144) = v1;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v4;
}

uint64_t OUTLINED_FUNCTION_110_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 96) = a2;
  *(void *)(v2 + 120) = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_111_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x436465776F6C6C61;
  v2[11] = 0xEF73746361746E6FLL;
  return result;
}

__n128 *OUTLINED_FUNCTION_115_1(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x74616E6974736564;
  result[2].n128_u64[1] = 0xEF657079546E6F69;
  return result;
}

__n128 *OUTLINED_FUNCTION_116_1(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "callCapability");
  result[2].n128_u8[15] = -18;
  return result;
}

uint64_t OUTLINED_FUNCTION_118_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 96) = a2;
  *(void *)(v2 + 120) = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_120_0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 + 184) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(v3 + 192) = v1;
  *(void *)(v3 + 216) = a1;
  *(void *)(v3 + 224) = 0x656369766564;
  *(void *)(v3 + 232) = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  *(void *)(v0 + 80) = 0x6574736575716572;
  *(void *)(v0 + 88) = 0xEF656C646E614864;
  return 0;
}

uint64_t OUTLINED_FUNCTION_122_1(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0x656772656D457369;
  v2[11] = 0xEB0000000079636ELL;
  return result;
}

uint64_t OUTLINED_FUNCTION_123_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

__n128 *OUTLINED_FUNCTION_124_1(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "relationship");
  result[2].n128_u8[13] = 0;
  result[2].n128_u16[7] = -5120;
  return result;
}

uint64_t OUTLINED_FUNCTION_125_1(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0x656D614E707061;
  v2[11] = 0xE700000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  uint64_t result = 0;
  *(void *)(v0 + 152) = 0;
  *(void *)(v0 + 160) = 0;
  return result;
}

void OUTLINED_FUNCTION_129_1()
{
}

uint64_t OUTLINED_FUNCTION_131_1(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

void OUTLINED_FUNCTION_132_1()
{
  *(void *)(v0 + 128) = 0x5074737269467369;
  *(void *)(v0 + 136) = 0xEF70704179747261;
}

void OUTLINED_FUNCTION_133_1()
{
  *(void *)(v0 + 128) = 0x5074737269467369;
  *(void *)(v0 + 136) = 0xEF70704179747261;
}

void OUTLINED_FUNCTION_134_0()
{
  *(void *)(v0 + 224) = 0x5074737269467369;
  *(void *)(v0 + 232) = 0xEF70704179747261;
}

void OUTLINED_FUNCTION_138_1()
{
  *(void *)(v0 + 224) = 0x5074737269467369;
  *(void *)(v0 + 232) = 0xEF70704179747261;
}

uint64_t OUTLINED_FUNCTION_139_1(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0x656D614E707061;
  v2[23] = 0xE700000000000000;
  return result;
}

void OUTLINED_FUNCTION_140_1()
{
}

uint64_t OUTLINED_FUNCTION_145_1(uint64_t a1)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x656369766564;
  v2[17] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_152_1(uint64_t result)
{
  v1[21] = result;
  v1[22] = 0x656D614E707061;
  v1[23] = 0xE700000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_153_2(uint64_t result)
{
  v1[9] = result;
  v1[10] = 0x656D614E707061;
  v1[11] = 0xE700000000000000;
  return result;
}

__n128 *OUTLINED_FUNCTION_155_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x746361746E6F63;
  result[2].n128_u64[1] = 0xE700000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  uint64_t result = 0;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_166_0()
{
  uint64_t result = 0;
  *(void *)(v0 + 152) = 0;
  *(void *)(v0 + 160) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_168_0@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_171_0(uint64_t a1@<X8>)
{
  *(void *)(v2 + 328) = (v1 - 32) | 0x8000000000000000;
  *(void *)(v2 + 360) = a1;
}

void OUTLINED_FUNCTION_172_0(char a1@<W8>)
{
  *(void *)(v3 + 328) = (v1 - 32) | 0x8000000000000000;
  *(void *)(v3 + 360) = v2;
  *(unsigned char *)(v3 + 336) = a1;
}

uint64_t OUTLINED_FUNCTION_173_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_176_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

__n128 *OUTLINED_FUNCTION_182_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

void OUTLINED_FUNCTION_183(uint64_t a1@<X8>)
{
  *(void *)(v1 + 184) = (a1 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_184_0(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_185_0(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = v3 + 11;
  return result;
}

uint64_t OUTLINED_FUNCTION_188_0(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = v3 | 4;
  return result;
}

uint64_t OUTLINED_FUNCTION_202_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

__n128 *OUTLINED_FUNCTION_206_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[5].n128_u64[1] = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_216_0()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)();
}

void *specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v105 = a5;
  os_log_type_t v127 = a4;
  uint64_t v106 = a3;
  uint64_t v107 = a2;
  uint64_t v126 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v111 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v110 = (char *)&v103 - v8;
  uint64_t v114 = type metadata accessor for USOParse();
  uint64_t v124 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  unint64_t v113 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  v117 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Siri_Nlu_External_UserParse();
  uint64_t v125 = *(void *)(v120 - 8);
  uint64_t v12 = __chkstk_darwin(v120);
  uint64_t v109 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v112 = (char *)&v103 - v14;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v15 = __chkstk_darwin(v119);
  uint64_t v118 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v122 = (uint64_t)&v103 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v123 = (uint64_t *)((char *)&v103 - v20);
  __chkstk_darwin(v19);
  char v22 = (char *)&v103 - v21;
  uint64_t v23 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v115 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v108 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v103 - v26;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v104 = v23;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v121 = v22;
    *(_DWORD *)uint64_t v33 = 136315138;
    *(void *)&long long v128 = v34;
    uint64_t v116 = v29;
    uint64_t v130 = 0;
    unint64_t v131 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
    uint64_t v29 = v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "%s convert parse to INIntent", v33, 0xCu);
    swift_arrayDestroy();
    char v22 = v121;
    swift_slowDealloc();
    uint64_t v23 = v104;
    swift_slowDealloc();
  }

  uint64_t v35 = v126;
  outlined init with copy of Parse?(v126, (uint64_t)v22);
  uint64_t v36 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v36);
  uint64_t v39 = v124;
  uint64_t v38 = v125;
  if (EnumTagSinglePayload != 1)
  {
    unint64_t v40 = v123;
    outlined init with copy of Parse?((uint64_t)v22, (uint64_t)v123);
    uint64_t v41 = *(void *)(v36 - 8);
    int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 88))(v40, v36);
    if (v42 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v40, v36);
      uint64_t v43 = *v40;
      uint64_t v44 = (uint64_t)v117;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v45 = v120;
      if (__swift_getEnumTagSinglePayload(v44, 1, v120) == 1)
      {
        outlined destroy of SubmitCommandError?(v44, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        int v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315138;
          *(void *)&long long v128 = v49;
          uint64_t v130 = 0;
          unint64_t v131 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v46, v47, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        goto LABEL_30;
      }
      uint64_t v126 = v43;
      uint64_t v59 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v112, v44, v45);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      uint64_t v54 = (uint64_t)v111;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = v45;
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = 136315138;
          *(void *)&long long v128 = v64;
          uint64_t v130 = 0;
          unint64_t v131 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v112, v62);
        }
        else
        {

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
        }
LABEL_30:
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v78 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v27, v54, v23);
      outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v79 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        uint64_t v80 = v108;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v108, v27, v23);
        if (v79)
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v23);
        }
        else
        {
          char v81 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
          v82(v80, v23);
          if ((v81 & 1) == 0)
          {
            uint64_t v90 = v27;
            uint64_t v91 = v107[3];
            uint64_t v92 = v107[4];
            __swift_project_boxed_opaque_existential_1(v107, v91);
            uint64_t v93 = *(uint64_t (**)(uint64_t, uint64_t))(v92 + 72);
            uint64_t v94 = v92;
            uint64_t v95 = (uint64_t)v90;
            uint64_t v96 = v93(v91, v94);
            (*(void (**)(long long *__return_ptr, char *))(*(void *)v96 + 216))(&v128, v90);
            swift_release();
            if (v129)
            {
              outlined init with take of AppSelectionSignalComponent(&v128, (uint64_t)&v130);
              __swift_project_boxed_opaque_existential_1(v105, v105[3]);
              os_log_type_t v127 = (void *)specialized static HangUpCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)((uint64_t)&v130, v106, (uint64_t)v107, v127, 0);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v130);
              v82(v90, v23);
              return v127;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v128, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v97 = Logger.logObject.getter();
            os_log_type_t v98 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v97, v98))
            {
              uint64_t v99 = swift_slowAlloc();
              uint64_t v126 = v95;
              uint64_t v100 = (uint8_t *)v99;
              uint64_t v101 = swift_slowAlloc();
              *(_DWORD *)uint64_t v100 = 136315138;
              *(void *)&long long v128 = v101;
              uint64_t v130 = 0;
              unint64_t v131 = 0xE000000000000000;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
              uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v97, v98, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.", v100, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v102 = v126;
            }
            else
            {

              uint64_t v102 = v95;
            }
            v82((char *)v102, v23);
            goto LABEL_35;
          }
        }
      }
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = v27;
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        *(void *)&long long v128 = v87;
        uint64_t v130 = 0;
        unint64_t v131 = 0xE000000000000000;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
        uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v83, v84, "%s NLv4 parse is a confirmation. Returning previousIntent.", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v115 + 8))(v85, v23);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v115 + 8))(v27, v23);
      }
LABEL_35:
      id v88 = v127;
      return v127;
    }
    if (v42 == enum case for Parse.uso(_:))
    {
      uint64_t v116 = v29;
      uint64_t v50 = (uint64_t)v123;
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v123, v36);
      uint64_t v51 = v113;
      uint64_t v52 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v113, v50, v114);
      uint64_t v53 = v109;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v120);
      uint64_t v54 = (uint64_t)v110;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          unint64_t v57 = (uint8_t *)swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          *(_DWORD *)unint64_t v57 = 136315138;
          *(void *)&long long v128 = v58;
          uint64_t v130 = 0;
          unint64_t v131 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v55, v56, "%s USO: No user dialog act found in userParse.", v57, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v39 + 8))(v113, v114);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v51, v52);
      goto LABEL_26;
    }
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v123, v36);
    uint64_t v35 = v126;
  }
  uint64_t v65 = v122;
  outlined init with copy of Parse?(v35, v122);
  uint64_t v66 = v127;
  os_log_type_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v126 = swift_slowAlloc();
    *(void *)&long long v128 = v126;
    *(_DWORD *)uint64_t v69 = 136315906;
    uint64_t v121 = v22;
    uint64_t v130 = 0;
    unint64_t v131 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    uint64_t v130 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INHangUpCallIntent);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INHangUpCallIntent.Type);
    uint64_t v70 = String.init<A>(describing:)();
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    outlined init with copy of Parse?(v65, v118);
    uint64_t v72 = String.init<A>(describing:)();
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v69 + 32) = 2080;
    uint64_t v130 = (uint64_t)v127;
    id v74 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INHangUpCallIntent?);
    uint64_t v75 = String.init<A>(describing:)();
    uint64_t v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    char v22 = v121;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v67, v68, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v69, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
  }
  id v77 = v66;
  outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
  return v127;
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumTagSinglePayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  uint64_t v78;
  char v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  NSObject *v83;
  os_log_type_t v84;
  char *v85;
  uint8_t *v86;
  uint64_t v87;
  id v88;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  long long v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;

  uint64_t v108 = a5;
  uint64_t v130 = a4;
  uint64_t v109 = a3;
  uint64_t v110 = a2;
  uint64_t v129 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v114 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v113 = (char *)&v106 - v8;
  v117 = type metadata accessor for USOParse();
  os_log_type_t v127 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v116 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  uint64_t v120 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for Siri_Nlu_External_UserParse();
  long long v128 = *(void *)(v123 - 8);
  uint64_t v12 = __chkstk_darwin(v123);
  long long v112 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v106 - v14;
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v15 = __chkstk_darwin(v122);
  uint64_t v121 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v125 = (uint64_t)&v106 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v126 = (uint64_t *)((char *)&v106 - v20);
  __chkstk_darwin(v19);
  char v22 = (char *)&v106 - v21;
  uint64_t v23 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v118 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v111 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v106 - v26;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v107 = v23;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v124 = v22;
    *(_DWORD *)uint64_t v33 = 136315138;
    *(void *)&unint64_t v131 = v34;
    uint64_t v119 = v29;
    v133 = 0;
    uint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
    uint64_t v29 = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "%s convert parse to INIntent", v33, 0xCu);
    swift_arrayDestroy();
    char v22 = v124;
    swift_slowDealloc();
    uint64_t v23 = v107;
    swift_slowDealloc();
  }

  uint64_t v35 = v129;
  outlined init with copy of Parse?(v129, (uint64_t)v22);
  uint64_t v36 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v36);
  uint64_t v39 = v127;
  uint64_t v38 = v128;
  if (EnumTagSinglePayload != 1)
  {
    unint64_t v40 = v126;
    outlined init with copy of Parse?((uint64_t)v22, (uint64_t)v126);
    uint64_t v41 = *(void *)(v36 - 8);
    int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 88))(v40, v36);
    if (v42 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v40, v36);
      uint64_t v43 = *v40;
      uint64_t v44 = (uint64_t)v120;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v45 = v123;
      if (__swift_getEnumTagSinglePayload(v44, 1, v123) == 1)
      {
        outlined destroy of SubmitCommandError?(v44, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        int v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315138;
          *(void *)&unint64_t v131 = v49;
          v133 = 0;
          uint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v46, v47, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        goto LABEL_30;
      }
      uint64_t v129 = v43;
      uint64_t v59 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v115, v44, v45);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      uint64_t v54 = (uint64_t)v114;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = v45;
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = 136315138;
          *(void *)&unint64_t v131 = v64;
          v133 = 0;
          uint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v115, v62);
        }
        else
        {

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
        }
LABEL_30:
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v78 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v27, v54, v23);
      outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v79 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        uint64_t v80 = v111;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v111, v27, v23);
        if (v79)
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v23);
        }
        else
        {
          char v81 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
          v82(v80, v23);
          if ((v81 & 1) == 0)
          {
            uint64_t v90 = v27;
            uint64_t v91 = v110[3];
            uint64_t v92 = v110[4];
            __swift_project_boxed_opaque_existential_1(v110, v91);
            uint64_t v93 = *(uint64_t (**)(uint64_t, uint64_t))(v92 + 72);
            uint64_t v94 = v92;
            uint64_t v95 = (uint64_t)v90;
            uint64_t v96 = v93(v91, v94);
            (*(void (**)(long long *__return_ptr, char *))(*(void *)v96 + 216))(&v131, v90);
            swift_release();
            if (v132)
            {
              outlined init with take of AppSelectionSignalComponent(&v131, (uint64_t)&v133);
              uint64_t v97 = v108[3];
              os_log_type_t v98 = v108[4];
              uint64_t v99 = __swift_project_boxed_opaque_existential_1(v108, v97);
              uint64_t v130 = specialized static StartVideoCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(&v133, v109, v110, v130, 0, (uint64_t)v99, v97, v98);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
              v82(v90, v23);
              return v130;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v131, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v100 = Logger.logObject.getter();
            uint64_t v101 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = swift_slowAlloc();
              uint64_t v129 = v95;
              uint64_t v103 = (uint8_t *)v102;
              uint64_t v104 = swift_slowAlloc();
              *(_DWORD *)uint64_t v103 = 136315138;
              *(void *)&unint64_t v131 = v104;
              v133 = 0;
              uint64_t v134 = 0xE000000000000000;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
              v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v100, v101, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.", v103, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v105 = v129;
            }
            else
            {

              uint64_t v105 = v95;
            }
            v82((char *)v105, v23);
            goto LABEL_35;
          }
        }
      }
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = v27;
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        *(void *)&unint64_t v131 = v87;
        v133 = 0;
        uint64_t v134 = 0xE000000000000000;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
        v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v83, v84, "%s NLv4 parse is a confirmation. Returning previousIntent.", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v23);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v118 + 8))(v27, v23);
      }
LABEL_35:
      id v88 = v130;
      return v130;
    }
    if (v42 == enum case for Parse.uso(_:))
    {
      uint64_t v119 = v29;
      uint64_t v50 = (uint64_t)v126;
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v126, v36);
      uint64_t v51 = v116;
      uint64_t v52 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v116, v50, v117);
      uint64_t v53 = v112;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v123);
      uint64_t v54 = (uint64_t)v113;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          unint64_t v57 = (uint8_t *)swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          *(_DWORD *)unint64_t v57 = 136315138;
          *(void *)&unint64_t v131 = v58;
          v133 = 0;
          uint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v55, v56, "%s USO: No user dialog act found in userParse.", v57, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v39 + 8))(v116, v117);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v51, v52);
      goto LABEL_26;
    }
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v126, v36);
    uint64_t v35 = v129;
  }
  uint64_t v65 = v125;
  outlined init with copy of Parse?(v35, v125);
  uint64_t v66 = v130;
  os_log_type_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v129 = swift_slowAlloc();
    *(void *)&unint64_t v131 = v129;
    *(_DWORD *)uint64_t v69 = 136315906;
    uint64_t v124 = v22;
    v133 = 0;
    uint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    v133 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartVideoCallIntent);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent.Type);
    uint64_t v70 = String.init<A>(describing:)();
    v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    outlined init with copy of Parse?(v65, v121);
    uint64_t v72 = String.init<A>(describing:)();
    v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v69 + 32) = 2080;
    v133 = (uint64_t)v130;
    id v74 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent?);
    uint64_t v75 = String.init<A>(describing:)();
    v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    char v22 = v124;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v67, v68, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v69, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
  }
  id v77 = v66;
  outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
  return v130;
}

id specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v123 = a4;
  uint64_t v103 = a3;
  uint64_t v104 = a2;
  uint64_t v122 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v107 = (char *)&v101 - v8;
  uint64_t v110 = type metadata accessor for USOParse();
  uint64_t v120 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v109 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  uint64_t v113 = (uint64_t)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for Siri_Nlu_External_UserParse();
  uint64_t v121 = *(void *)(v116 - 8);
  uint64_t v12 = __chkstk_darwin(v116);
  uint64_t v106 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v108 = (uint64_t)&v101 - v14;
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v15 = __chkstk_darwin(v115);
  uint64_t v114 = (uint64_t)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v118 = (uint64_t)&v101 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v119 = (uint64_t)&v101 - v20;
  __chkstk_darwin(v19);
  char v22 = (char *)&v101 - v21;
  uint64_t v117 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v111 = *(void *)(v117 - 8);
  uint64_t v23 = __chkstk_darwin(v117);
  uint64_t v105 = (uint64_t)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v101 - v25;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v102 = v22;
    uint64_t v32 = (uint8_t *)v31;
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    *(void *)&long long v124 = v33;
    uint64_t v112 = v28;
    uint64_t v126 = 0;
    unint64_t v127 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, (uint64_t *)&v124);
    uint64_t v28 = v112;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v29, v30, "%s convert parse to INIntent", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    char v22 = v102;
    swift_slowDealloc();
  }

  uint64_t v34 = v122;
  outlined init with copy of Parse?(v122, (uint64_t)v22);
  uint64_t v35 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v35);
  uint64_t v38 = v120;
  uint64_t v37 = v121;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v39 = v119;
    outlined init with copy of Parse?((uint64_t)v22, v119);
    uint64_t v40 = *(void *)(v35 - 8);
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v39, v35);
    if (v41 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v40 + 96))(v39, v35);
      uint64_t v42 = v113;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v43 = v116;
      if (__swift_getEnumTagSinglePayload(v42, 1, v116) == 1)
      {
        outlined destroy of SubmitCommandError?(v42, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v44, v45))
        {
          int v46 = (uint8_t *)swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          *(_DWORD *)int v46 = 136315138;
          *(void *)&long long v124 = v47;
          uint64_t v126 = 0;
          unint64_t v127 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, (uint64_t *)&v124);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v44, v45, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.", v46, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        goto LABEL_31;
      }
      uint64_t v56 = v108;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v108, v42, v43);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v117) == 1)
      {
        outlined destroy of SubmitCommandError?((uint64_t)v7, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        unint64_t v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          *(_DWORD *)uint64_t v59 = 136315138;
          *(void *)&long long v124 = v60;
          uint64_t v126 = 0;
          unint64_t v127 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, (uint64_t *)&v124);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v57, v58, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v59, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v108, v116);
        }
        else
        {

          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v56, v43);
        }
LABEL_31:
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v56, v43);
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v74 = v111;
      (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v26, v7, v117);
      outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v75 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        uint64_t v76 = v105;
        (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v105, v26, v117);
        if (v75)
        {
          (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v76, v117);
        }
        else
        {
          char v77 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
          v78(v76, v117);
          if ((v77 & 1) == 0)
          {
            uint64_t v86 = v104;
            uint64_t v87 = v26;
            uint64_t v88 = v104[3];
            uint64_t v89 = v104[4];
            __swift_project_boxed_opaque_existential_1(v104, v88);
            uint64_t v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 72))(v88, v89);
            (*(void (**)(long long *__return_ptr, char *))(*(void *)v90 + 216))(&v124, v87);
            swift_release();
            if (v125)
            {
              outlined init with take of AppSelectionSignalComponent(&v124, (uint64_t)&v126);
              int v91 = v103;
              uint64_t v92 = static Transformer<>.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:)(&v126, v103, v86);
              id v123 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)((int)v92, (int)v86, v91, (int)v123, v93, v94, v95, v96, v101, (uint64_t)v102, v103, (uint64_t)v104, v105, v106, (uint64_t)v107, v108, v109, v110, v111,
                       v112,
                       v113,
                       v114,
                       v115,
                       v116);

              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
              v78((uint64_t)v87, v117);
              return v123;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v124, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v97 = Logger.logObject.getter();
            os_log_type_t v98 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v97, v98))
            {
              uint64_t v99 = (uint8_t *)swift_slowAlloc();
              uint64_t v100 = swift_slowAlloc();
              *(_DWORD *)uint64_t v99 = 136315138;
              *(void *)&long long v124 = v100;
              uint64_t v126 = 0;
              unint64_t v127 = 0xE000000000000000;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
              uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, (uint64_t *)&v124);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v97, v98, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.", v99, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }

            v78((uint64_t)v87, v117);
            goto LABEL_36;
          }
        }
      }
      char v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v79, v80))
      {
        char v81 = v26;
        uint64_t v82 = (uint8_t *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        *(_DWORD *)uint64_t v82 = 136315138;
        *(void *)&long long v124 = v83;
        uint64_t v126 = 0;
        unint64_t v127 = 0xE000000000000000;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
        uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, (uint64_t *)&v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v79, v80, "%s NLv4 parse is a confirmation. Returning previousIntent.", v82, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v111 + 8))(v81, v117);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v111 + 8))(v26, v117);
      }
LABEL_36:
      id v84 = v123;
      return v123;
    }
    if (v41 == enum case for Parse.uso(_:))
    {
      uint64_t v112 = v28;
      uint64_t v48 = v119;
      (*(void (**)(uint64_t, uint64_t))(v40 + 96))(v119, v35);
      uint64_t v49 = v109;
      uint64_t v50 = v110;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v109, v48, v110);
      uint64_t v51 = v106;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v51, v116);
      uint64_t v7 = v107;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v117) == 1)
      {
        outlined destroy of SubmitCommandError?((uint64_t)v7, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v52 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 136315138;
          *(void *)&long long v124 = v55;
          uint64_t v126 = 0;
          unint64_t v127 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, (uint64_t *)&v124);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v52, v53, "%s USO: No user dialog act found in userParse.", v54, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v109, v110);
        goto LABEL_31;
      }
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v49, v50);
      goto LABEL_26;
    }
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v119, v35);
    uint64_t v34 = v122;
  }
  uint64_t v61 = v118;
  outlined init with copy of Parse?(v34, v118);
  id v62 = v123;
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    *(void *)&long long v124 = v122;
    *(_DWORD *)uint64_t v65 = 136315906;
    uint64_t v126 = 0;
    unint64_t v127 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v126, v127, (uint64_t *)&v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 12) = 2080;
    uint64_t v126 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INSearchCallHistoryIntent);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INSearchCallHistoryIntent.Type);
    uint64_t v66 = String.init<A>(describing:)();
    uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, (uint64_t *)&v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 22) = 2080;
    outlined init with copy of Parse?(v61, v114);
    uint64_t v68 = String.init<A>(describing:)();
    uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, (uint64_t *)&v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v61, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v65 + 32) = 2080;
    uint64_t v126 = (uint64_t)v123;
    id v70 = v62;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INSearchCallHistoryIntent?);
    uint64_t v71 = String.init<A>(describing:)();
    uint64_t v126 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, (uint64_t *)&v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v63, v64, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v65, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v61, &demangling cache variable for type metadata for Parse?);
  }
  id v73 = v62;
  outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
  return v123;
}

id specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v108 = a5;
  id v130 = a4;
  uint64_t v109 = a3;
  uint64_t v110 = a2;
  uint64_t v129 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v114 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v113 = (char *)&v106 - v8;
  uint64_t v117 = type metadata accessor for USOParse();
  uint64_t v127 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v116 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  uint64_t v120 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for Siri_Nlu_External_UserParse();
  uint64_t v128 = *(void *)(v123 - 8);
  uint64_t v12 = __chkstk_darwin(v123);
  uint64_t v112 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v106 - v14;
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v15 = __chkstk_darwin(v122);
  uint64_t v121 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v125 = (uint64_t)&v106 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v126 = (uint64_t *)((char *)&v106 - v20);
  __chkstk_darwin(v19);
  char v22 = (char *)&v106 - v21;
  uint64_t v23 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v118 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v111 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v106 - v26;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  os_log_type_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v107 = v23;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    long long v124 = v22;
    *(_DWORD *)uint64_t v33 = 136315138;
    *(void *)&long long v131 = v34;
    uint64_t v119 = v29;
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
    uint64_t v29 = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "%s convert parse to INIntent", v33, 0xCu);
    swift_arrayDestroy();
    char v22 = v124;
    swift_slowDealloc();
    uint64_t v23 = v107;
    swift_slowDealloc();
  }

  uint64_t v35 = v129;
  outlined init with copy of Parse?(v129, (uint64_t)v22);
  uint64_t v36 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v36);
  uint64_t v39 = v127;
  uint64_t v38 = v128;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v40 = v126;
    outlined init with copy of Parse?((uint64_t)v22, (uint64_t)v126);
    uint64_t v41 = *(void *)(v36 - 8);
    int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 88))(v40, v36);
    if (v42 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v40, v36);
      uint64_t v43 = *v40;
      uint64_t v44 = (uint64_t)v120;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v45 = v123;
      if (__swift_getEnumTagSinglePayload(v44, 1, v123) == 1)
      {
        outlined destroy of SubmitCommandError?(v44, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        int v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315138;
          *(void *)&long long v131 = v49;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v46, v47, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        goto LABEL_30;
      }
      uint64_t v129 = v43;
      uint64_t v59 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v115, v44, v45);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      uint64_t v54 = (uint64_t)v114;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = v45;
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = 136315138;
          *(void *)&long long v131 = v64;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v115, v62);
        }
        else
        {

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
        }
LABEL_30:
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v78 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v27, v54, v23);
      outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v79 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        os_log_type_t v80 = v111;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v111, v27, v23);
        if (v79)
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v23);
        }
        else
        {
          char v81 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
          v82(v80, v23);
          if ((v81 & 1) == 0)
          {
            uint64_t v90 = v27;
            uint64_t v91 = v110[3];
            uint64_t v92 = v110[4];
            __swift_project_boxed_opaque_existential_1(v110, v91);
            int v93 = *(uint64_t (**)(uint64_t, uint64_t))(v92 + 72);
            uint64_t v94 = v92;
            uint64_t v95 = (uint64_t)v90;
            uint64_t v96 = v93(v91, v94);
            (*(void (**)(long long *__return_ptr, char *))(*(void *)v96 + 216))(&v131, v90);
            swift_release();
            if (v132)
            {
              outlined init with take of AppSelectionSignalComponent(&v131, (uint64_t)&v133);
              uint64_t v97 = v108[3];
              uint64_t v98 = v108[4];
              uint64_t v99 = __swift_project_boxed_opaque_existential_1(v108, v97);
              id v130 = specialized static StartAudioCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(&v133, v109, v110, v130, 0, (uint64_t)v99, v97, v98);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
              v82(v90, v23);
              return v130;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v131, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v100 = Logger.logObject.getter();
            os_log_type_t v101 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = swift_slowAlloc();
              uint64_t v129 = v95;
              uint64_t v103 = (uint8_t *)v102;
              uint64_t v104 = swift_slowAlloc();
              *(_DWORD *)uint64_t v103 = 136315138;
              *(void *)&long long v131 = v104;
              uint64_t v133 = 0;
              unint64_t v134 = 0xE000000000000000;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
              uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v100, v101, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.", v103, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v105 = v129;
            }
            else
            {

              uint64_t v105 = v95;
            }
            v82((char *)v105, v23);
            goto LABEL_35;
          }
        }
      }
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = v27;
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        *(void *)&long long v131 = v87;
        uint64_t v133 = 0;
        unint64_t v134 = 0xE000000000000000;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
        uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v83, v84, "%s NLv4 parse is a confirmation. Returning previousIntent.", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v23);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v118 + 8))(v27, v23);
      }
LABEL_35:
      id v88 = v130;
      return v130;
    }
    if (v42 == enum case for Parse.uso(_:))
    {
      uint64_t v119 = v29;
      uint64_t v50 = (uint64_t)v126;
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v126, v36);
      uint64_t v51 = v116;
      uint64_t v52 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v116, v50, v117);
      os_log_type_t v53 = v112;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v123);
      uint64_t v54 = (uint64_t)v113;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          unint64_t v57 = (uint8_t *)swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          *(_DWORD *)unint64_t v57 = 136315138;
          *(void *)&long long v131 = v58;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v55, v56, "%s USO: No user dialog act found in userParse.", v57, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v39 + 8))(v116, v117);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v51, v52);
      goto LABEL_26;
    }
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v126, v36);
    uint64_t v35 = v129;
  }
  uint64_t v65 = v125;
  outlined init with copy of Parse?(v35, v125);
  id v66 = v130;
  unint64_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v129 = swift_slowAlloc();
    *(void *)&long long v131 = v129;
    *(_DWORD *)uint64_t v69 = 136315906;
    long long v124 = v22;
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    uint64_t v133 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INStartAudioCallIntent);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntent.Type);
    uint64_t v70 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    outlined init with copy of Parse?(v65, v121);
    uint64_t v72 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v69 + 32) = 2080;
    uint64_t v133 = (uint64_t)v130;
    id v74 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntent?);
    uint64_t v75 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    char v22 = v124;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v67, v68, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v69, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
  }
  id v77 = v66;
  outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
  return v130;
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumTagSinglePayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  uint64_t v78;
  char v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  NSObject *v83;
  os_log_type_t v84;
  char *v85;
  uint8_t *v86;
  uint64_t v87;
  id v88;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  long long v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;

  uint64_t v105 = a5;
  uint64_t v127 = a4;
  uint64_t v106 = a3;
  uint64_t v107 = a2;
  uint64_t v126 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v111 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v110 = (char *)&v103 - v8;
  uint64_t v114 = type metadata accessor for USOParse();
  long long v124 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v113 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  uint64_t v117 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Siri_Nlu_External_UserParse();
  uint64_t v125 = *(void *)(v120 - 8);
  uint64_t v12 = __chkstk_darwin(v120);
  uint64_t v109 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v112 = (char *)&v103 - v14;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v15 = __chkstk_darwin(v119);
  uint64_t v118 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v122 = (uint64_t)&v103 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v123 = (uint64_t *)((char *)&v103 - v20);
  __chkstk_darwin(v19);
  char v22 = (char *)&v103 - v21;
  uint64_t v23 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v115 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v108 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v103 - v26;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  os_log_type_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v104 = v23;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v121 = v22;
    *(_DWORD *)uint64_t v33 = 136315138;
    *(void *)&uint64_t v128 = v34;
    uint64_t v116 = v29;
    id v130 = 0;
    long long v131 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
    uint64_t v29 = v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "%s convert parse to INIntent", v33, 0xCu);
    swift_arrayDestroy();
    char v22 = v121;
    swift_slowDealloc();
    uint64_t v23 = v104;
    swift_slowDealloc();
  }

  uint64_t v35 = v126;
  outlined init with copy of Parse?(v126, (uint64_t)v22);
  uint64_t v36 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v36);
  uint64_t v39 = v124;
  uint64_t v38 = v125;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v40 = v123;
    outlined init with copy of Parse?((uint64_t)v22, (uint64_t)v123);
    uint64_t v41 = *(void *)(v36 - 8);
    int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 88))(v40, v36);
    if (v42 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v40, v36);
      uint64_t v43 = *v40;
      uint64_t v44 = (uint64_t)v117;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v45 = v120;
      if (__swift_getEnumTagSinglePayload(v44, 1, v120) == 1)
      {
        outlined destroy of SubmitCommandError?(v44, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        int v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315138;
          *(void *)&uint64_t v128 = v49;
          id v130 = 0;
          long long v131 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v46, v47, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        goto LABEL_30;
      }
      uint64_t v126 = v43;
      uint64_t v59 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v112, v44, v45);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      uint64_t v54 = (uint64_t)v111;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = v45;
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = 136315138;
          *(void *)&uint64_t v128 = v64;
          id v130 = 0;
          long long v131 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v112, v62);
        }
        else
        {

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
        }
LABEL_30:
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v78 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v27, v54, v23);
      outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v79 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        os_log_type_t v80 = v108;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v108, v27, v23);
        if (v79)
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v23);
        }
        else
        {
          char v81 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
          v82(v80, v23);
          if ((v81 & 1) == 0)
          {
            uint64_t v90 = v27;
            uint64_t v91 = v107[3];
            uint64_t v92 = v107[4];
            __swift_project_boxed_opaque_existential_1(v107, v91);
            int v93 = *(uint64_t (**)(uint64_t, uint64_t))(v92 + 72);
            uint64_t v94 = v92;
            uint64_t v95 = (uint64_t)v90;
            uint64_t v96 = v93(v91, v94);
            (*(void (**)(long long *__return_ptr, char *))(*(void *)v96 + 216))(&v128, v90);
            swift_release();
            if (v129)
            {
              outlined init with take of AppSelectionSignalComponent(&v128, (uint64_t)&v130);
              __swift_project_boxed_opaque_existential_1(v105, v105[3]);
              uint64_t v127 = specialized static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(&v130, v106, (uint64_t)v107, v127, 0);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v130);
              v82(v90, v23);
              return v127;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v128, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v97 = Logger.logObject.getter();
            uint64_t v98 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v97, v98))
            {
              uint64_t v99 = swift_slowAlloc();
              uint64_t v126 = v95;
              uint64_t v100 = (uint8_t *)v99;
              os_log_type_t v101 = swift_slowAlloc();
              *(_DWORD *)uint64_t v100 = 136315138;
              *(void *)&uint64_t v128 = v101;
              id v130 = 0;
              long long v131 = 0xE000000000000000;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
              id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v97, v98, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.", v100, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v102 = v126;
            }
            else
            {

              uint64_t v102 = v95;
            }
            v82((char *)v102, v23);
            goto LABEL_35;
          }
        }
      }
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = v27;
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        *(void *)&uint64_t v128 = v87;
        id v130 = 0;
        long long v131 = 0xE000000000000000;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
        id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v83, v84, "%s NLv4 parse is a confirmation. Returning previousIntent.", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v115 + 8))(v85, v23);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v115 + 8))(v27, v23);
      }
LABEL_35:
      id v88 = v127;
      return v127;
    }
    if (v42 == enum case for Parse.uso(_:))
    {
      uint64_t v116 = v29;
      uint64_t v50 = (uint64_t)v123;
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v123, v36);
      uint64_t v51 = v113;
      uint64_t v52 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v113, v50, v114);
      os_log_type_t v53 = v109;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v120);
      uint64_t v54 = (uint64_t)v110;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          unint64_t v57 = (uint8_t *)swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          *(_DWORD *)unint64_t v57 = 136315138;
          *(void *)&uint64_t v128 = v58;
          id v130 = 0;
          long long v131 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v55, v56, "%s USO: No user dialog act found in userParse.", v57, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v39 + 8))(v113, v114);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v51, v52);
      goto LABEL_26;
    }
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v123, v36);
    uint64_t v35 = v126;
  }
  uint64_t v65 = v122;
  outlined init with copy of Parse?(v35, v122);
  id v66 = v127;
  unint64_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v126 = swift_slowAlloc();
    *(void *)&uint64_t v128 = v126;
    *(_DWORD *)uint64_t v69 = 136315906;
    uint64_t v121 = v22;
    id v130 = 0;
    long long v131 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v131, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    id v130 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INAnswerCallIntent);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAnswerCallIntent.Type);
    uint64_t v70 = String.init<A>(describing:)();
    id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    outlined init with copy of Parse?(v65, v118);
    uint64_t v72 = String.init<A>(describing:)();
    id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v69 + 32) = 2080;
    id v130 = (uint64_t)v127;
    id v74 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAnswerCallIntent?);
    uint64_t v75 = String.init<A>(describing:)();
    id v130 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    char v22 = v121;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v67, v68, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v69, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
  }
  id v77 = v66;
  outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
  return v127;
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumTagSinglePayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  uint64_t v78;
  char v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  NSObject *v83;
  os_log_type_t v84;
  char *v85;
  uint8_t *v86;
  uint64_t v87;
  id v88;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  long long v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;

  uint64_t v108 = a5;
  id v130 = a4;
  uint64_t v109 = a3;
  uint64_t v110 = a2;
  uint64_t v129 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v114 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v113 = (char *)&v106 - v8;
  uint64_t v117 = type metadata accessor for USOParse();
  uint64_t v127 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v116 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  uint64_t v120 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for Siri_Nlu_External_UserParse();
  uint64_t v128 = *(void *)(v123 - 8);
  uint64_t v12 = __chkstk_darwin(v123);
  uint64_t v112 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v106 - v14;
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v15 = __chkstk_darwin(v122);
  uint64_t v121 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v125 = (uint64_t)&v106 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v126 = (uint64_t *)((char *)&v106 - v20);
  __chkstk_darwin(v19);
  char v22 = (char *)&v106 - v21;
  uint64_t v23 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v118 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v111 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v106 - v26;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  os_log_type_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v107 = v23;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    long long v124 = v22;
    *(_DWORD *)uint64_t v33 = 136315138;
    *(void *)&long long v131 = v34;
    uint64_t v119 = v29;
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
    uint64_t v29 = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "%s convert parse to INIntent", v33, 0xCu);
    swift_arrayDestroy();
    char v22 = v124;
    swift_slowDealloc();
    uint64_t v23 = v107;
    swift_slowDealloc();
  }

  uint64_t v35 = v129;
  outlined init with copy of Parse?(v129, (uint64_t)v22);
  uint64_t v36 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v36);
  uint64_t v39 = v127;
  uint64_t v38 = v128;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v40 = v126;
    outlined init with copy of Parse?((uint64_t)v22, (uint64_t)v126);
    uint64_t v41 = *(void *)(v36 - 8);
    int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 88))(v40, v36);
    if (v42 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v40, v36);
      uint64_t v43 = *v40;
      uint64_t v44 = (uint64_t)v120;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v45 = v123;
      if (__swift_getEnumTagSinglePayload(v44, 1, v123) == 1)
      {
        outlined destroy of SubmitCommandError?(v44, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        int v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315138;
          *(void *)&long long v131 = v49;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v46, v47, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        goto LABEL_30;
      }
      uint64_t v129 = v43;
      uint64_t v59 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v115, v44, v45);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      uint64_t v54 = (uint64_t)v114;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = v45;
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = 136315138;
          *(void *)&long long v131 = v64;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v115, v62);
        }
        else
        {

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
        }
LABEL_30:
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v78 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v27, v54, v23);
      outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v79 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        os_log_type_t v80 = v111;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v111, v27, v23);
        if (v79)
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v23);
        }
        else
        {
          char v81 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
          v82(v80, v23);
          if ((v81 & 1) == 0)
          {
            uint64_t v90 = v27;
            uint64_t v91 = v110[3];
            uint64_t v92 = v110[4];
            __swift_project_boxed_opaque_existential_1(v110, v91);
            int v93 = *(uint64_t (**)(uint64_t, uint64_t))(v92 + 72);
            uint64_t v94 = v92;
            uint64_t v95 = (uint64_t)v90;
            uint64_t v96 = v93(v91, v94);
            (*(void (**)(long long *__return_ptr, char *))(*(void *)v96 + 216))(&v131, v90);
            swift_release();
            if (v132)
            {
              outlined init with take of AppSelectionSignalComponent(&v131, (uint64_t)&v133);
              uint64_t v97 = v108[3];
              uint64_t v98 = v108[4];
              uint64_t v99 = __swift_project_boxed_opaque_existential_1(v108, v97);
              id v130 = (id)specialized static IdentifyCallerIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(&v133, v109, v110, v130, 0, v99, v97, v98);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
              v82(v90, v23);
              return v130;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v131, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v100 = Logger.logObject.getter();
            os_log_type_t v101 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = swift_slowAlloc();
              uint64_t v129 = v95;
              uint64_t v103 = (uint8_t *)v102;
              uint64_t v104 = swift_slowAlloc();
              *(_DWORD *)uint64_t v103 = 136315138;
              *(void *)&long long v131 = v104;
              uint64_t v133 = 0;
              unint64_t v134 = 0xE000000000000000;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
              uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v100, v101, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.", v103, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v105 = v129;
            }
            else
            {

              uint64_t v105 = v95;
            }
            v82((char *)v105, v23);
            goto LABEL_35;
          }
        }
      }
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = v27;
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        *(void *)&long long v131 = v87;
        uint64_t v133 = 0;
        unint64_t v134 = 0xE000000000000000;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
        uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v83, v84, "%s NLv4 parse is a confirmation. Returning previousIntent.", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v23);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v118 + 8))(v27, v23);
      }
LABEL_35:
      id v88 = v130;
      return v130;
    }
    if (v42 == enum case for Parse.uso(_:))
    {
      uint64_t v119 = v29;
      uint64_t v50 = (uint64_t)v126;
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v126, v36);
      uint64_t v51 = v116;
      uint64_t v52 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v116, v50, v117);
      os_log_type_t v53 = v112;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v123);
      uint64_t v54 = (uint64_t)v113;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          unint64_t v57 = (uint8_t *)swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          *(_DWORD *)unint64_t v57 = 136315138;
          *(void *)&long long v131 = v58;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v55, v56, "%s USO: No user dialog act found in userParse.", v57, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v39 + 8))(v116, v117);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v51, v52);
      goto LABEL_26;
    }
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v126, v36);
    uint64_t v35 = v129;
  }
  uint64_t v65 = v125;
  outlined init with copy of Parse?(v35, v125);
  id v66 = v130;
  unint64_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v129 = swift_slowAlloc();
    *(void *)&long long v131 = v129;
    *(_DWORD *)uint64_t v69 = 136315906;
    long long v124 = v22;
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    uint64_t v133 = type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INIdentifyIncomingCallerIntent.Type);
    uint64_t v70 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    outlined init with copy of Parse?(v65, v121);
    uint64_t v72 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v69 + 32) = 2080;
    uint64_t v133 = (uint64_t)v130;
    id v74 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INIdentifyIncomingCallerIntent?);
    uint64_t v75 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    char v22 = v124;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v67, v68, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v69, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
  }
  id v77 = v66;
  outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
  return v130;
}

NSObject *specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)(uint64_t a1, void *a2, uint64_t a3, NSObject *a4, void *a5)
{
  uint64_t v108 = a5;
  id v130 = a4;
  uint64_t v109 = a3;
  uint64_t v110 = a2;
  uint64_t v129 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v114 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v113 = (char *)&v106 - v8;
  uint64_t v117 = type metadata accessor for USOParse();
  uint64_t v127 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v116 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v10 - 8);
  uint64_t v120 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for Siri_Nlu_External_UserParse();
  uint64_t v128 = *(void *)(v123 - 8);
  uint64_t v12 = __chkstk_darwin(v123);
  uint64_t v112 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v106 - v14;
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  uint64_t v15 = __chkstk_darwin(v122);
  uint64_t v121 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v125 = (uint64_t)&v106 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v126 = (uint64_t *)((char *)&v106 - v20);
  __chkstk_darwin(v19);
  char v22 = (char *)&v106 - v21;
  uint64_t v23 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  uint64_t v118 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v111 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v106 - v26;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  os_log_type_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v107 = v23;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc();
    long long v124 = v22;
    *(_DWORD *)uint64_t v33 = 136315138;
    *(void *)&long long v131 = v34;
    uint64_t v119 = v29;
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v133, v134, (uint64_t *)&v131);
    uint64_t v29 = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, "%s convert parse to INIntent", v33, 0xCu);
    swift_arrayDestroy();
    char v22 = v124;
    swift_slowDealloc();
    uint64_t v23 = v107;
    swift_slowDealloc();
  }

  uint64_t v35 = v129;
  outlined init with copy of Parse?(v129, (uint64_t)v22);
  uint64_t v36 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v36);
  uint64_t v39 = v127;
  uint64_t v38 = v128;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v40 = v126;
    outlined init with copy of Parse?((uint64_t)v22, (uint64_t)v126);
    uint64_t v41 = *(void *)(v36 - 8);
    int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v41 + 88))(v40, v36);
    if (v42 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v40, v36);
      uint64_t v43 = *v40;
      uint64_t v44 = (uint64_t)v120;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v45 = v123;
      if (__swift_getEnumTagSinglePayload(v44, 1, v123) == 1)
      {
        outlined destroy of SubmitCommandError?(v44, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        int v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315138;
          *(void *)&long long v131 = v49;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v46, v47, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        goto LABEL_30;
      }
      uint64_t v129 = v43;
      uint64_t v59 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v115, v44, v45);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      uint64_t v54 = (uint64_t)v114;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = v45;
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = 136315138;
          *(void *)&long long v131 = v64;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v115, v62);
        }
        else
        {

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
        }
LABEL_30:
        outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v45);
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v78 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v27, v54, v23);
      outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v79 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        os_log_type_t v80 = v111;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v111, v27, v23);
        if (v79)
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v23);
        }
        else
        {
          char v81 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v82 = *(void (**)(char *, uint64_t))(v78 + 8);
          v82(v80, v23);
          if ((v81 & 1) == 0)
          {
            uint64_t v90 = v27;
            uint64_t v91 = v110[3];
            uint64_t v92 = v110[4];
            __swift_project_boxed_opaque_existential_1(v110, v91);
            int v93 = *(uint64_t (**)(uint64_t, uint64_t))(v92 + 72);
            uint64_t v94 = v92;
            uint64_t v95 = (uint64_t)v90;
            uint64_t v96 = v93(v91, v94);
            (*(void (**)(long long *__return_ptr, char *))(*(void *)v96 + 216))(&v131, v90);
            swift_release();
            if (v132)
            {
              outlined init with take of AppSelectionSignalComponent(&v131, (uint64_t)&v133);
              uint64_t v97 = v108[3];
              uint64_t v98 = v108[4];
              uint64_t v99 = __swift_project_boxed_opaque_existential_1(v108, v97);
              id v130 = specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)(&v133, v109, v110, v130, 0, (uint64_t)v99, v97, v98);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
              v82(v90, v23);
              return v130;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v131, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v100 = Logger.logObject.getter();
            os_log_type_t v101 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = swift_slowAlloc();
              uint64_t v129 = v95;
              uint64_t v103 = (uint8_t *)v102;
              uint64_t v104 = swift_slowAlloc();
              *(_DWORD *)uint64_t v103 = 136315138;
              *(void *)&long long v131 = v104;
              uint64_t v133 = 0;
              unint64_t v134 = 0xE000000000000000;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
              uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v133, v134, (uint64_t *)&v131);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v100, v101, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.", v103, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v105 = v129;
            }
            else
            {

              uint64_t v105 = v95;
            }
            v82((char *)v105, v23);
            goto LABEL_35;
          }
        }
      }
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = v27;
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        *(void *)&long long v131 = v87;
        uint64_t v133 = 0;
        unint64_t v134 = 0xE000000000000000;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
        uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v133, v134, (uint64_t *)&v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v83, v84, "%s NLv4 parse is a confirmation. Returning previousIntent.", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v23);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v118 + 8))(v27, v23);
      }
LABEL_35:
      id v88 = v130;
      return v130;
    }
    if (v42 == enum case for Parse.uso(_:))
    {
      uint64_t v119 = v29;
      uint64_t v50 = (uint64_t)v126;
      (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v126, v36);
      uint64_t v51 = v116;
      uint64_t v52 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v116, v50, v117);
      os_log_type_t v53 = v112;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v123);
      uint64_t v54 = (uint64_t)v113;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v54, 1, v23) == 1)
      {
        outlined destroy of SubmitCommandError?(v54, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          unint64_t v57 = (uint8_t *)swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          *(_DWORD *)unint64_t v57 = 136315138;
          *(void *)&long long v131 = v58;
          uint64_t v133 = 0;
          unint64_t v134 = 0xE000000000000000;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
          uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v133, v134, (uint64_t *)&v131);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v55, v56, "%s USO: No user dialog act found in userParse.", v57, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v39 + 8))(v116, v117);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v51, v52);
      goto LABEL_26;
    }
    (*(void (**)(uint64_t *, uint64_t))(v41 + 8))(v126, v36);
    uint64_t v35 = v129;
  }
  uint64_t v65 = v125;
  outlined init with copy of Parse?(v35, v125);
  id v66 = v130;
  unint64_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v129 = swift_slowAlloc();
    *(void *)&long long v131 = v129;
    *(_DWORD *)uint64_t v69 = 136315906;
    long long v124 = v22;
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:), 0, 0);
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v133, v134, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    uint64_t v133 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent.Type);
    uint64_t v70 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    outlined init with copy of Parse?(v65, v121);
    uint64_t v72 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v69 + 32) = 2080;
    uint64_t v133 = v130;
    id v74 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent?);
    uint64_t v75 = String.init<A>(describing:)();
    uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, (uint64_t *)&v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    char v22 = v124;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v67, v68, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v69, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v65, &demangling cache variable for type metadata for Parse?);
  }
  id v77 = v66;
  outlined destroy of SubmitCommandError?((uint64_t)v22, &demangling cache variable for type metadata for Parse?);
  return v130;
}

id static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)(void *a1, void *a2, uint64_t a3, id a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v148 = a6;
  uint64_t v149 = a7;
  uint64_t v134 = a5;
  uint64_t v133 = a3;
  v135 = a2;
  id v154 = a1;
  uint64_t v145 = type metadata accessor for USOParse();
  OUTLINED_FUNCTION_1();
  uint64_t v142 = v8;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_3_1();
  uint64_t v155 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin(v11 - 8);
  OUTLINED_FUNCTION_5_8();
  uint64_t v138 = v12;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v13);
  uint64_t v139 = (char *)&v132 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin(v15 - 8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v143 = v16;
  uint64_t v150 = type metadata accessor for Siri_Nlu_External_UserParse();
  OUTLINED_FUNCTION_1();
  uint64_t v144 = v17;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_8();
  uint64_t v137 = v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  v141 = (char *)&v132 - v21;
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  __chkstk_darwin(v147);
  OUTLINED_FUNCTION_5_8();
  uint64_t v146 = v22;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v23);
  uint64_t v151 = (uint64_t)&v132 - v24;
  OUTLINED_FUNCTION_18_0();
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (uint64_t *)((char *)&v132 - v27);
  __chkstk_darwin(v26);
  os_log_type_t v30 = (char *)&v132 - v29;
  uint64_t v31 = type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_1();
  uint64_t v140 = v32;
  __chkstk_darwin(v33);
  OUTLINED_FUNCTION_5_8();
  uint64_t v136 = v34;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v132 - v36;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  uint64_t v153 = __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  BOOL v41 = os_log_type_enabled(v39, v40);
  v152 = v30;
  if (v41)
  {
    uint64_t v42 = OUTLINED_FUNCTION_5_22();
    uint64_t v132 = v31;
    uint64_t v43 = (uint8_t *)v42;
    uint64_t v44 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v43 = 136315138;
    *(void *)&long long v156 = v44;
    OUTLINED_FUNCTION_6_50();
    OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
    uint64_t v45 = OUTLINED_FUNCTION_3_64();
    OUTLINED_FUNCTION_33_5(v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v39, v40, "%s convert parse to INIntent", v43, 0xCu);
    swift_arrayDestroy();
    os_log_type_t v30 = v152;
    OUTLINED_FUNCTION_6();
    uint64_t v31 = v132;
    OUTLINED_FUNCTION_6();
  }

  uint64_t v46 = (uint64_t)v154;
  outlined init with copy of Parse?((uint64_t)v154, (uint64_t)v30);
  uint64_t v47 = type metadata accessor for Parse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v47);
  uint64_t v49 = v155;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v30, (uint64_t)v28);
    OUTLINED_FUNCTION_1();
    uint64_t v51 = v50;
    int v53 = (*(uint64_t (**)(uint64_t *, uint64_t))(v52 + 88))(v28, v47);
    if (v53 == enum case for Parse.NLv4IntentOnly(_:))
    {
      uint64_t v54 = OUTLINED_FUNCTION_12_29();
      v55(v54);
      uint64_t v56 = *v28;
      uint64_t v57 = v143;
      static ConversionUtils.toUserParse(from:)();
      uint64_t v58 = v150;
      if (__swift_getEnumTagSinglePayload(v57, 1, v150) == 1)
      {
        outlined destroy of SubmitCommandError?(v57, &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v59, v60))
        {
          os_log_type_t v61 = (_DWORD *)OUTLINED_FUNCTION_5_22();
          uint64_t v62 = OUTLINED_FUNCTION_14_0();
          *os_log_type_t v61 = 136315138;
          *(void *)&long long v156 = v62;
          OUTLINED_FUNCTION_6_50();
          OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
          v158[0] = OUTLINED_FUNCTION_3_64();
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_19_10(&dword_0, v63, v64, "%s couldn't transform UserDialogAct into UserParse to get the UDAs.");
          swift_arrayDestroy();
          os_log_type_t v30 = v152;
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }

        swift_unknownObjectRelease();
        goto LABEL_30;
      }
      uint64_t v155 = v56;
      uint64_t v78 = v144;
      (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v141, v57, v58);
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      uint64_t v69 = (uint64_t)v139;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v69, 1, v31) == 1)
      {
        outlined destroy of SubmitCommandError?(v69, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        char v79 = Logger.logObject.getter();
        os_log_type_t v80 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = v58;
          uint64_t v82 = (_DWORD *)OUTLINED_FUNCTION_5_22();
          uint64_t v83 = OUTLINED_FUNCTION_14_0();
          _DWORD *v82 = 136315138;
          *(void *)&long long v156 = v83;
          OUTLINED_FUNCTION_6_50();
          OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
          uint64_t v84 = OUTLINED_FUNCTION_3_64();
          OUTLINED_FUNCTION_33_5(v84);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_19_10(&dword_0, v85, v86, "#%s NLv4IntentOnly: No user dialog act found in userParse.");
          swift_arrayDestroy();
          os_log_type_t v30 = v152;
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v78 + 8))(v141, v81);
        }
        else
        {

          swift_unknownObjectRelease();
          uint64_t v106 = OUTLINED_FUNCTION_21_25();
          v107(v106);
        }
LABEL_30:
        outlined destroy of SubmitCommandError?((uint64_t)v30, &demangling cache variable for type metadata for Parse?);
        return 0;
      }
      id v154 = a4;
      uint64_t v101 = OUTLINED_FUNCTION_21_25();
      v102(v101);
      swift_unknownObjectRelease();
      goto LABEL_25;
    }
    if (v53 == enum case for Parse.uso(_:))
    {
      uint64_t v65 = OUTLINED_FUNCTION_12_29();
      v66(v65);
      uint64_t v67 = v142;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v142 + 32))(v49, v28, v145);
      uint64_t v68 = v137;
      USOParse.userParse.getter();
      Siri_Nlu_External_UserParse.userDialogActs.getter();
      (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v68, v150);
      uint64_t v69 = v138;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v69, 1, v31) == 1)
      {
        uint64_t v70 = v145;
        outlined destroy of SubmitCommandError?(v69, &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        unint64_t v71 = (void *)Logger.logObject.getter();
        os_log_type_t v72 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_10_15(v72))
        {
          unint64_t v73 = (_DWORD *)OUTLINED_FUNCTION_5_22();
          uint64_t v74 = OUTLINED_FUNCTION_14_0();
          *unint64_t v73 = 136315138;
          *(void *)&long long v156 = v74;
          OUTLINED_FUNCTION_6_50();
          OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
          uint64_t v75 = OUTLINED_FUNCTION_3_64();
          OUTLINED_FUNCTION_16_33(v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_9_45(&dword_0, v76, v77, "%s USO: No user dialog act found in userParse.");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();

          (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v155, v145);
        }
        else
        {

          (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v49, v70);
        }
        goto LABEL_30;
      }
      id v154 = a4;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v49, v145);
LABEL_25:
      uint64_t v103 = v140;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v37, v69, v31);
      outlined destroy of SubmitCommandError?((uint64_t)v30, &demangling cache variable for type metadata for Parse?);
      if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) == 0)
      {
        char v104 = Siri_Nlu_External_UserDialogAct.hasRejected.getter();
        uint64_t v105 = v136;
        (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v136, v37, v31);
        if (v104)
        {
          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v105, v31);
        }
        else
        {
          char v108 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
          uint64_t v109 = *(void (**)(void))(v103 + 8);
          OUTLINED_FUNCTION_10_8();
          v109();
          if ((v108 & 1) == 0)
          {
            uint64_t v120 = v135;
            uint64_t v121 = v37;
            uint64_t v122 = v135[3];
            uint64_t v123 = v135[4];
            __swift_project_boxed_opaque_existential_1(v135, v122);
            (*(void (**)(uint64_t, uint64_t))(v123 + 72))(v122, v123);
            OUTLINED_FUNCTION_23();
            (*(void (**)(long long *__return_ptr, char *))(v124 + 216))(&v156, v121);
            swift_release();
            if (v157)
            {
              outlined init with take of AppSelectionSignalComponent(&v156, (uint64_t)v158);
              a4 = (id)(*(uint64_t (**)(void *, uint64_t, void *, id, void, uint64_t, uint64_t))(v149 + 24))(v158, v133, v120, v154, 0, v134, v148);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
              OUTLINED_FUNCTION_10_8();
              v109();
              return a4;
            }
            outlined destroy of SubmitCommandError?((uint64_t)&v156, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v125 = (void *)Logger.logObject.getter();
            os_log_type_t v126 = static os_log_type_t.error.getter();
            if (OUTLINED_FUNCTION_10_15(v126))
            {
              uint64_t v127 = (_DWORD *)OUTLINED_FUNCTION_5_22();
              uint64_t v128 = OUTLINED_FUNCTION_14_0();
              *uint64_t v127 = 136315138;
              uint64_t v155 = (uint64_t)(v127 + 1);
              *(void *)&long long v156 = v128;
              OUTLINED_FUNCTION_6_50();
              OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
              uint64_t v129 = OUTLINED_FUNCTION_3_64();
              OUTLINED_FUNCTION_33_5(v129);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_9_45(&dword_0, v130, v131, "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.");
              swift_arrayDestroy();
              OUTLINED_FUNCTION_6();
              OUTLINED_FUNCTION_6();
            }

            OUTLINED_FUNCTION_10_8();
            v109();
            goto LABEL_35;
          }
        }
      }
      uint64_t v110 = (void *)Logger.logObject.getter();
      os_log_type_t v111 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_10_15(v111))
      {
        uint64_t v112 = OUTLINED_FUNCTION_5_22();
        uint64_t v155 = (uint64_t)v37;
        uint64_t v113 = (_DWORD *)v112;
        uint64_t v114 = OUTLINED_FUNCTION_14_0();
        *uint64_t v113 = 136315138;
        *(void *)&long long v156 = v114;
        OUTLINED_FUNCTION_6_50();
        OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
        uint64_t v115 = OUTLINED_FUNCTION_3_64();
        OUTLINED_FUNCTION_16_33(v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_9_45(&dword_0, v116, v117, "%s NLv4 parse is a confirmation. Returning previousIntent.");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();

        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v155, v31);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v103 + 8))(v37, v31);
      }
LABEL_35:
      a4 = v154;
      id v118 = v154;
      return a4;
    }
    (*(void (**)(uint64_t *, uint64_t))(v51 + 8))(v28, v47);
  }
  uint64_t v87 = v151;
  outlined init with copy of Parse?(v46, v151);
  id v88 = a4;
  uint64_t v89 = Logger.logObject.getter();
  os_log_type_t v90 = static os_log_type_t.error.getter();
  int v91 = v90;
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v92 = swift_slowAlloc();
    uint64_t v155 = swift_slowAlloc();
    *(void *)&long long v156 = v155;
    *(_DWORD *)uint64_t v92 = 136315906;
    OUTLINED_FUNCTION_6_50();
    LODWORD(v154) = v91;
    OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
    v158[0] = OUTLINED_FUNCTION_3_64();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v92 + 12) = 2080;
    v158[0] = swift_getAssociatedTypeWitness();
    swift_getMetatypeMetadata();
    uint64_t v93 = String.init<A>(describing:)();
    v158[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v93, v94, (uint64_t *)&v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v92 + 22) = 2080;
    outlined init with copy of Parse?(v87, v146);
    uint64_t v95 = String.init<A>(describing:)();
    v158[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v95, v96, (uint64_t *)&v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SubmitCommandError?(v87, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v92 + 32) = 2080;
    v158[0] = a4;
    type metadata accessor for Optional();
    id v97 = v88;
    uint64_t v98 = String.init<A>(describing:)();
    v158[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, (uint64_t *)&v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v89, (os_log_type_t)v154, "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.", (uint8_t *)v92, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    os_log_type_t v30 = v152;
    OUTLINED_FUNCTION_6();
  }
  else
  {
    outlined destroy of SubmitCommandError?(v87, &demangling cache variable for type metadata for Parse?);
  }
  id v100 = v88;
  outlined destroy of SubmitCommandError?((uint64_t)v30, &demangling cache variable for type metadata for Parse?);
  return a4;
}

id static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)(void *a1, int a2, uint64_t a3, id a4)
{
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(a3, a4);
  id v6 = [a1 _metadata];
  NSString v7 = v6;
  if (v6)
  {
    id v8 = [v6 intentId];

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_type_t v4 = v9;

      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v7 = 0;
    }
  }
  [a1 setIdentifier:v7];

  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  id v20 = a1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_10_15(v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v21 = v14;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)((uint64_t)&type metadata for String, (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:), 0, 0);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    id v15 = [v20 debugDescription];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, v4, "%s Converted intent: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }

  return v20;
}

uint64_t static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  HIDWORD(v32) = a4;
  uint64_t v12 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_4();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = a7[3];
  uint64_t v20 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v19);
  (*(void (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
  OUTLINED_FUNCTION_23();
  LOBYTE(v19) = (*(uint64_t (**)(void))(v21 + 224))();
  swift_release();
  if (v19)
  {
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    uint64_t v22 = OUTLINED_FUNCTION_18_17();
    uint64_t ObjectType = swift_getObjectType();
    specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)(a1, a3, BYTE4(v32) & 1, a5, a6, (uint64_t)a7, 0, 1, (uint64_t)&v41, v22, a8, ObjectType, a2, v31, v32, a3, a5, a6, v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42);
    OUTLINED_FUNCTION_23_24();
  }
  else
  {
    uint64_t v24 = a7[3];
    uint64_t v25 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v24);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 8))(&v41, v24, v25);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    dispatch thunk of DeviceState.siriLocale.getter();
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    uint64_t v26 = OUTLINED_FUNCTION_18_17();
    uint64_t v30 = swift_getObjectType();
    OUTLINED_FUNCTION_22_26();
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)(a1, a3, v27, a5, v18, a6, (uint64_t)a7, 0, v29, (uint64_t)&v36, v26, v30, a2, v31, v32, a3, a5, a6, v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42);
    OUTLINED_FUNCTION_23_24();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
}

uint64_t specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, (void (*)(uint64_t, uint64_t, void, uint64_t, void *, void *, void, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:), (void (*)(uint64_t, uint64_t))specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:));
}

{
  return specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, (void (*)(uint64_t, uint64_t, void, uint64_t, void *, void *, void, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:), (void (*)(uint64_t, uint64_t))specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:));
}

{
  return specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, (void (*)(uint64_t, uint64_t, void, uint64_t, void *, void *, void, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:), (void (*)(uint64_t, uint64_t))specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:));
}

uint64_t specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, void, uint64_t, void *, void *, void, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t), void (*a11)(uint64_t, uint64_t))
{
  uint64_t v36 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_4();
  uint64_t v20 = v19 - v18;
  OUTLINED_FUNCTION_1();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_4();
  uint64_t v26 = v25 - v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v25 - v24, a7, a8);
  __swift_project_boxed_opaque_existential_1(a6, a6[3]);
  uint64_t v27 = OUTLINED_FUNCTION_14_31();
  v28(v27);
  OUTLINED_FUNCTION_23();
  char v30 = (*(uint64_t (**)(void))(v29 + 224))();
  swift_release();
  if (v30)
  {
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    uint64_t v31 = OUTLINED_FUNCTION_18_17();
    a10(a1, a2, a3 & 1, a4, a5, a6, 0, 1, v42, v31, v26, a8, a9);
    OUTLINED_FUNCTION_23_24();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a6, a6[3]);
    uint64_t v32 = OUTLINED_FUNCTION_14_31();
    v33(v32);
    __swift_project_boxed_opaque_existential_1(v42, v42[3]);
    OUTLINED_FUNCTION_14_31();
    dispatch thunk of DeviceState.siriLocale.getter();
    static SiriKitEventSender.current.getter();
    type metadata accessor for EmergencyContactResolution();
    OUTLINED_FUNCTION_18_17();
    __swift_project_boxed_opaque_existential_1(a5, a5[3]);
    OUTLINED_FUNCTION_22_26();
    a11(a1, a2);
    OUTLINED_FUNCTION_23_24();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v36);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  OUTLINED_FUNCTION_10_8();
  return v34();
}

void OUTLINED_FUNCTION_2_76(uint64_t a1, uint64_t a2)
{
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(a1, a2, 0, 0);
}

uint64_t OUTLINED_FUNCTION_3_64()
{
  uint64_t v2 = *(void *)(v0 - 128);
  unint64_t v3 = *(void *)(v0 - 120);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v2, v3, (uint64_t *)(v0 - 168));
}

void OUTLINED_FUNCTION_6_50()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_9_45(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_33(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t OUTLINED_FUNCTION_23_24()
{
  return swift_release();
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional __swiftcall PhoneCallDisplayTextCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  _findStringSwitchCaseWithCache(cases:string:cache:)();
  OUTLINED_FUNCTION_15_0();
  if (v1 >= 0x16) {
    return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional)22;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional)v1;
  }
}

void PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.Properties()
{
  char v1 = OUTLINED_FUNCTION_32();
  PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t PhoneCallDisplayTextCATsSimple.addToCallButtonText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(40);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

uint64_t static String.UsoAttributeNameLabel.getter()
{
  return 0x6C6562616CLL;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(40);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.appSettings(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  os_log_type_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *os_log_type_t v9 = v10;
  v9[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(32);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

BOOL PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds.rawValue.getter()
{
  return 0x6974746553707061;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.appSettingsAsLabels(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  os_log_type_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(32);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.callButtonText(label:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  Swift::OpaquePointer v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_45_6(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  os_log_type_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *os_log_type_t v9 = v10;
  v9[1] = PhoneCallDisplayTextCATsSimple.callButtonText(label:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(35);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

BOOL PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.callButtonTextAsLabels(label:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_45_6(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  os_log_type_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(35);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelButtonText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *Swift::OpaquePointer v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(37);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds.rawValue.getter()
{
  return 0x6C65636E6163;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelButtonTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(37);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelledText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(34);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds.rawValue.getter()
{
  return 0x64656C65636E6163;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelledTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(34);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.changeApp()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(30);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.changeAppAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(30);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.changeText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(31);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.changeTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(31);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.contactComposition()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(39);
  return v4(v3);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::ContactCompositionDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::ContactCompositionDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x546563614677656ELL;
  }
  if (a1 == 1) {
    return 28532;
  }
  return 0x6F68576F74;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::ContactCompositionDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::ContactCompositionDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.contactCompositionAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(39);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencySashTitle()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(39);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencySashTitleAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(39);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServices()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

unint64_t PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.rawValue.getter()
{
  return 0xD000000000000011;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds@<X0>(void *a1@<X8>)
{
  unint64_t result = PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.rawValue.getter();
  *a1 = 0xD000000000000011;
  a1[1] = v3;
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServicesAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(38);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServicesPrompt()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(44);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds.rawValue.getter()
{
  return 0x74706D6F7270;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServicesPromptAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(44);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.handleLabelAndType(personHandleLabel:label:type:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  void (*v14)(void);
  void *v15;
  uint64_t (*v17)(uint64_t, unint64_t, uint64_t);
  uint64_t v18;

  OUTLINED_FUNCTION_57_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = swift_allocObject();
  v1[9] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_46A250;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493F80;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_54_12(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v8();
  }
  os_log_type_t v9 = OUTLINED_FUNCTION_37_16();
  outlined init with copy of SpeakableString?(v9, v2, &demangling cache variable for type metadata for SpeakableString?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v0);
  uint64_t v11 = v1[7];
  if (EnumTagSinglePayload == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1[7], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v4 + 120) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v12();
  }
  uint64_t v13 = OUTLINED_FUNCTION_41_10();
  outlined init with copy of SpeakableString?(v13, v11, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v11, 1, v0) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1[6], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v4 + 168) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v14();
  }
  uint64_t v15 = (void *)OUTLINED_FUNCTION_3_0();
  v1[10] = (uint64_t)v15;
  *uint64_t v15 = v1;
  v15[1] = PhoneCallDisplayTextCATsSimple.handleLabelAndType(personHandleLabel:label:type:);
  return v17(v3 + 22, 0x800000000048D6A0, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::HandleLabelAndTypeDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::HandleLabelAndTypeDialogIds_optional)PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.rawValue.getter()
{
  return 0x2331686374697773;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::HandleLabelAndTypeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::HandleLabelAndTypeDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
  OUTLINED_FUNCTION_32();
  uint64_t result = PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.rawValue.getter();
  *uint64_t v0 = 0x2331686374697773;
  v0[1] = v2;
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.handleLabelAndTypeAsLabels(personHandleLabel:label:type:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  void (*v14)(void);
  void *v15;
  uint64_t v16;
  uint64_t (*v18)(void);
  uint64_t v19;

  OUTLINED_FUNCTION_57_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = swift_allocObject();
  v1[9] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_46A250;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493F80;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_54_12(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v8();
  }
  os_log_type_t v9 = OUTLINED_FUNCTION_37_16();
  outlined init with copy of SpeakableString?(v9, v2, &demangling cache variable for type metadata for SpeakableString?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v0);
  uint64_t v11 = v1[7];
  if (EnumTagSinglePayload == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1[7], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v4 + 120) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v12();
  }
  uint64_t v13 = OUTLINED_FUNCTION_41_10();
  outlined init with copy of SpeakableString?(v13, v11, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v11, 1, v0) == 1)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1[6], &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_4();
  }
  else
  {
    *(void *)(v4 + 168) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_26_13();
    v14();
  }
  uint64_t v15 = (void *)OUTLINED_FUNCTION_3_0();
  v1[10] = (uint64_t)v15;
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v15 = v16;
  v15[1] = PhoneCallDisplayTextCATsSimple.handleLabelAndTypeAsLabels(personHandleLabel:label:type:);
  OUTLINED_FUNCTION_24_10();
  return v18();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_14();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.joinButtonText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *Swift::OpaquePointer v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.unsupportedCallCapability();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(35);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.joinButtonTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(35);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.newCallButtonText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.newCallButtonTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(38);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.nextButtonText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(35);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.nextButtonTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(35);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.openApp(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = OUTLINED_FUNCTION_9_0();
  os_log_type_t v9 = (void *)OUTLINED_FUNCTION_29_6(v8);
  *os_log_type_t v9 = v10;
  v9[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(28);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

BOOL PhoneCallDisplayTextCATsSimple.OpenAppDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.OpenAppDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.OpenAppDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.OpenAppDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.openAppAsLabels(appName:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  v1[4] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467710);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  os_log_type_t v9 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v9);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v10;
  v0[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(28);
  OUTLINED_FUNCTION_20_2();
  return v16(v11, v12, v13, v14, v15, v16, v17, v18);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.openContactsButtonText()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *Swift::OpaquePointer v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(43);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds.rawValue.getter()
{
  return 0x746E6F436E65706FLL;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.openContactsButtonTextAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(43);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.transcription()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(34);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.transcriptionAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(34);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.tryWithApp(appName:isThirdPartyApp:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_56_11(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_36_2();
  char v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  OUTLINED_FUNCTION_28_21();
  OUTLINED_FUNCTION_62_4(v8);
  os_log_type_t v9 = OUTLINED_FUNCTION_9_0();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = PhoneCallDisplayTextCATsSimple.callButtonText(label:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(31);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::TryWithAppDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::TryWithAppDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x7261506472696874;
  }
  else {
    return 0x7261507473726966;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::TryWithAppDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::TryWithAppDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = 0xEA00000000007974;
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.tryWithAppAsLabels(appName:isThirdPartyApp:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_56_11(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v2 = OUTLINED_FUNCTION_36_2();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  OUTLINED_FUNCTION_28_21();
  OUTLINED_FUNCTION_62_4(v9);
  uint64_t v10 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v10);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v11;
  v0[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(31);
  OUTLINED_FUNCTION_20_2();
  return v17(v12, v13, v14, v15, v16, v17, v18, v19);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.unknownCaller()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(34);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.unknownCallerAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(34);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.updateSettings()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_44_0(35);
  return v4(v3);
}

BOOL PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds.init(rawValue:);
  return PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds.rawValue.getter()
{
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds(void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.updateSettingsAsLabels()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_19_5(v1);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v2;
  v0[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  OUTLINED_FUNCTION_24_10();
  unint64_t v3 = OUTLINED_FUNCTION_21(35);
  return v4(v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.useApp(appName:isPhoneApp:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_56_11(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_36_2();
  char v2 = (__n128 *)OUTLINED_FUNCTION_20_3(v1);
  uint64_t v3 = OUTLINED_FUNCTION_4_41(v2, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v7();
  }
  OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_62_4(v8);
  os_log_type_t v9 = OUTLINED_FUNCTION_9_0();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_29_6(v9);
  *uint64_t v10 = v11;
  v10[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_36_1(27);
  OUTLINED_FUNCTION_20_2();
  return v15(v12, v13, v14, v15, v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::UseAppDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.UseAppDialogIds.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.UseAppDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::UseAppDialogIds_optional)PhoneCallCapability.init(rawValue:)(rawValue, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.UseAppDialogIds.rawValue.getter(char a1)
{
  if (a1) {
    return 0x656E6F6850657375;
  }
  else {
    return 0x68506E6F4E657375;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::UseAppDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::UseAppDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.UseAppDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
  char v1 = OUTLINED_FUNCTION_32();
  uint64_t result = PhoneCallDisplayTextCATsSimple.UseAppDialogIds.rawValue.getter(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.useAppAsLabels(appName:isPhoneApp:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_56_11(v1, v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v4, v5, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void (*v8)(void);
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v2 = OUTLINED_FUNCTION_36_2();
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_20_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_4_41(v3, (__n128)xmmword_467720);
  OUTLINED_FUNCTION_39_0((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_17();
    v8();
  }
  OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_62_4(v9);
  uint64_t v10 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_31_6(v10);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds();
  OUTLINED_FUNCTION_25_1();
  *uint64_t v0 = v11;
  v0[1] = PhoneCallDisplayTextCATsSimple.appSettings(appName:);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_34_12(27);
  OUTLINED_FUNCTION_20_2();
  return v17(v12, v13, v14, v15, v16, v17, v18, v19);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t PhoneCallDisplayTextCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata completion function for PhoneCallDisplayTextCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for PhoneCallDisplayTextCATsSimple()
{
  return type metadata accessor for PhoneCallDisplayTextCATsSimple();
}

uint64_t getEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEB)
  {
    if (a2 + 21 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 21) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 22;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v5 = v6 - 22;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FF9B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.Properties()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FFB44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.OpenAppDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1FFC78);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1FFD78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
}

void OUTLINED_FUNCTION_18_24(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = v2;
}

void OUTLINED_FUNCTION_28_21()
{
  *(void *)(v0 + 80) = 0x5064726968547369;
  *(void *)(v0 + 88) = 0xEF70704179747261;
}

unint64_t OUTLINED_FUNCTION_34_12(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_37_16()
{
  uint64_t result = *(void *)(v0 + 24);
  *(void *)(v1 + 80) = 0x6C6562616CLL;
  *(void *)(v1 + 88) = 0xE500000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  uint64_t result = *(void *)(v0 + 32);
  *(void *)(v1 + 128) = 1701869940;
  *(void *)(v1 + 136) = 0xE400000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_45_12()
{
  return 0x65676E616863;
}

uint64_t OUTLINED_FUNCTION_54_12(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_56_11(uint64_t result, char a2)
{
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = result;
  *(void *)(v3 + 24) = v2;
  return result;
}

uint64_t protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_2_44();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v2 + class metadata base offset for AnswerCallCATsSimple)
                                       + **(int **)(v2 + class metadata base offset for AnswerCallCATsSimple));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple;
  return v5(v0);
}

uint64_t protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance AnswerCallCATsSimple()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_2_44();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for AnswerCallCATsSimple + v2 + 16)
                                       + **(int **)(class metadata base offset for AnswerCallCATsSimple + v2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance AnswerCallCATsSimple;
  return v5(v0);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  unsigned int v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  BOOL v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional __swiftcall AnswerCallCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnswerCallCATsSimple.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_AnswerCallCATsSimple_Properties_offerFollowUpIntent;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_AnswerCallCATsSimple_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerCallCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = AnswerCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:));
}

uint64_t AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_10_1(v2, (uint64_t)"incomingCallConcept");
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneIncomingCall();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  OUTLINED_FUNCTION_19_2();
  PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional v4 = v0;
  v4[1] = AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:);
  uint64_t v5 = OUTLINED_FUNCTION_11_6(0xD000000000000020);
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall AnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional)v3;
  }
}

uint64_t AnswerCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x7373694D7473754ALL;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0x696D6F636E496F4ELL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = AnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AnswerCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:));
}

uint64_t AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)()
{
  uint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_10_1(v2, (uint64_t)"incomingCallConcept");
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneIncomingCall();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  OUTLINED_FUNCTION_19_2();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  unint64_t v5 = lazy protocol witness table accessor for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds();
  *uint64_t v4 = v0;
  v4[1] = AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:);
  return v7(0xD000000000000020, 0x800000000048D0E0, v2, &type metadata for AnswerCallCATsSimple.IntentHandledResponseDialogIds, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  unint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

uint64_t AnswerCallCATsSimple.offerFollowUpIntent(followUpOfferType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493CD0;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v8 + 32))();
  }
  os_log_type_t v9 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v1 + 48) = v9;
  *os_log_type_t v9 = v1;
  v9[1] = AnswerCallCATsSimple.offerFollowUpIntent(followUpOfferType:);
  uint64_t v10 = OUTLINED_FUNCTION_11_6(v3 + 13);
  return v12(v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

BOOL AnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = AnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, unint64_t, uint64_t, ValueMetadata *, unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493CD0;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v8 + 32))();
  }
  os_log_type_t v9 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v1 + 48) = v9;
  uint64_t v10 = lazy protocol witness table accessor for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds();
  *os_log_type_t v9 = v1;
  v9[1] = AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  return v12(v3 + 13, 0x800000000048D110, v4, &type metadata for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

unint64_t lazy protocol witness table accessor for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

uint64_t AnswerCallCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return AnswerCallCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t AnswerCallCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  os_log_type_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10 - 8);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t AnswerCallCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t AnswerCallCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for AnswerCallCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for AnswerCallCATsSimple;
  if (!type metadata singleton initialization cache for AnswerCallCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for AnswerCallCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for AnswerCallCATsSimple()
{
  return type metadata accessor for AnswerCallCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for AnswerCallCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x201438);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AnswerCallCATsSimple.Properties()
{
}

unsigned char *storeEnumTagSinglePayload for AnswerCallCATsSimple.IntentHandledResponseDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x201538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for AnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x201608);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds()
{
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.__allocating_init(outputProducer:sharedGlobals:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  PhoneCallYesNoConfirmationFlowStrategy.init(outputProducer:sharedGlobals:)(a1, a2, a3);
  return v6;
}

void *PhoneCallYesNoConfirmationFlowStrategy.init(outputProducer:sharedGlobals:)(uint64_t a1, uint64_t a2, long long *a3)
{
  v3[3] = a1;
  v3[4] = a2;
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)(v3 + 5));
  type metadata accessor for YesNoConfirmationParser();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(a3, v5 + 24);
  v3[2] = v5;
  return v3;
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.actionForInput(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v3 = OUTLINED_FUNCTION_11_0(v2);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t))(v6 + 128))(a1);
  uint64_t v7 = type metadata accessor for ConfirmationResponse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  outlined destroy of ConfirmationResponse?((uint64_t)v5);
  if (EnumTagSinglePayload == 1) {
    return static ActionForInput.ignore()();
  }
  else {
    return static ActionForInput.handle()();
  }
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.parseConfirmationResponse(input:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[5] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[6] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return _swift_task_switch(PhoneCallYesNoConfirmationFlowStrategy.parseConfirmationResponse(input:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  const char *v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;

  uint64_t v1 = v0[9];
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v2 + 128))();
  uint64_t v3 = type metadata accessor for ConfirmationResponse();
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) != 1)
  {
    uint64_t v4 = v0[8];
    outlined init with copy of ConfirmationResponse?(v0[9], v4);
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v3);
    uint64_t v7 = v6;
    if (v6 == enum case for ConfirmationResponse.confirmed(_:))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
      os_log_type_t v9 = Logger.logObject.getter();
      uint64_t v10 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v9, v10)) {
        goto LABEL_13;
      }
      uint64_t v11 = "PhoneCallYesNoConfirmationFlowStrategyTest user has confirmed to continue reading";
LABEL_12:
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v9, v10, v11, v13, 2u);
      swift_slowDealloc();
LABEL_13:
      uint64_t v14 = v0[9];
      uint64_t v15 = v0[7];

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v15, v7, v3);
      __swift_storeEnumTagSinglePayload(v15, 0, 1, v3);
      SimpleConfirmationResponseProvider.init(_:)();
      outlined destroy of ConfirmationResponse?(v14);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v16 = (uint64_t (*)(void))v0[1];
      goto LABEL_20;
    }
    if (v6 == enum case for ConfirmationResponse.rejected(_:))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
      os_log_type_t v9 = Logger.logObject.getter();
      uint64_t v10 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v9, v10)) {
        goto LABEL_13;
      }
      uint64_t v11 = "PhoneCallYesNoConfirmationFlowStrategyTest user has rejected to continue reading";
      goto LABEL_12;
    }
    (*(void (**)(void, uint64_t))(v5 + 8))(v0[8], v3);
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = Logger.logObject.getter();
  uint64_t v19 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "#PhoneCallYesNoConfirmationFlowStrategyTest returns an unknown value, which is not expected", v20, 2u);
    swift_slowDealloc();
  }
  uint64_t v21 = v0[9];
  uint64_t v22 = (void *)v0[6];

  *uint64_t v22 = 0;
  v22[1] = 0;
  swift_storeEnumTagMultiPayload();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_6((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
  swift_allocError();
  PhoneError.logged()(v23);
  outlined destroy of PhoneError((uint64_t)v22);
  swift_willThrow();
  outlined destroy of ConfirmationResponse?(v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
LABEL_20:
  return v16();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:));
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(v0[3] + 24) + **(int **)(v0[3] + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = IncomingCallActionConfirmationStrategy.makeFlowCancelledResponse();
  uint64_t v2 = v0[2];
  return v4(v2);
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeConfirmationRejectedResponse()()
{
  OUTLINED_FUNCTION_1_0();
  v1[14] = v2;
  v1[15] = v0;
  uint64_t v3 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v3);
  v1[16] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v4);
  v1[17] = swift_task_alloc();
  return _swift_task_switch(PhoneCallYesNoConfirmationFlowStrategy.makeConfirmationRejectedResponse(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t (*v5)(void *);
  uint64_t v6;

  uint64_t v1 = v0[15] + 40;
  type metadata accessor for PhoneCallCommonCATsSimple();
  static CATOption.defaultMode.getter();
  CATWrapperSimple.__allocating_init(options:globals:)();
  swift_retain();
  static DialogPhase.canceled.getter();
  outlined init with copy of SignalProviding(v1, (uint64_t)(v0 + 8));
  type metadata accessor for DialogOutputFactory();
  swift_allocObject();
  v0[18] = DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  swift_release();
  OUTLINED_FUNCTION_22();
  uint64_t v5 = (uint64_t (*)(void *))(*(void *)(v2 + 128) + **(int **)(v2 + 128));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = PhoneCallYesNoConfirmationFlowStrategy.makeConfirmationRejectedResponse();
  return v5(v0 + 2);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(PhoneCallYesNoConfirmationFlowStrategy.makeConfirmationRejectedResponse(), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  if (*(unsigned char *)(v0 + 56))
  {
    *(void *)(v0 + 104) = *(void *)(v0 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
  }
  else
  {
    outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 16), *(void *)(v0 + 112));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v1();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeFlowCancelledResponse()(uint64_t a1)
{
  OUTLINED_FUNCTION_22();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v3 + 136) + **(int **)(v3 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeErrorResponse(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)PhoneCallYesNoConfirmationFlowStrategy.makeErrorResponse(_:));
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeErrorResponse(_:)()
{
  swift_willThrow();
  swift_errorRetain();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeFlow()()
{
  void (*v3)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[5];
  void v12[3];
  uint64_t v13;
  uint64_t v14;

  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 5, v1);
  uint64_t v3 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 16);
  swift_retain();
  v3(v12, v1, v2);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v4;
  v11[4] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_1, v6, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  swift_allocObject();
  type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_6(&lazy protocol witness table cache variable for type PhoneCallYesNoConfirmationFlowStrategy and conformance PhoneCallYesNoConfirmationFlowStrategy, v8, (void (*)(uint64_t))type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy);
  os_log_type_t v9 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v9;
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.deinit()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return v0;
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.__deallocating_deinit()
{
  PhoneCallYesNoConfirmationFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.actionForInput(_:) in conformance PhoneCallYesNoConfirmationFlowStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance PhoneCallYesNoConfirmationFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 120) + **(int **)(*(void *)v2 + 120));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:) in conformance PhoneCallYesNoConfirmationFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:) in conformance PhoneCallYesNoConfirmationFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:) in conformance PhoneCallYesNoConfirmationFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse() in conformance PhoneCallYesNoConfirmationFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance PhoneCallYesNoConfirmationFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 144) + **(int **)(*(void *)v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:) in conformance PhoneCallYesNoConfirmationFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy()
{
  return self;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_6(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HandleIntentSubmitter.__allocating_init(aceServiceInvoker:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(a1, v2 + 16);
  return v2;
}

uint64_t HandleIntentSubmitter.init(aceServiceInvoker:)(long long *a1)
{
  outlined init with take of AppSelectionSignalComponent(a1, v1 + 16);
  return v1;
}

uint64_t DismissSiriFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t type metadata accessor for DismissSiriFlow()
{
  return self;
}

uint64_t DismissSiriFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[16] = v2;
  v1[17] = v0;
  uint64_t v3 = type metadata accessor for AceOutput();
  v1[18] = v3;
  v1[19] = *(void *)(v3 - 8);
  v1[20] = swift_task_alloc();
  return _swift_task_switch(DismissSiriFlow.execute(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  void *v17;
  _OWORD v19[2];
  uint64_t v20;
  void *v21;
  uint64_t v22;

  uint64_t v21 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_46A030;
  *(void *)(v1 + 32) = [objc_allocWithZone((Class)SAUICloseAssistant) init];
  specialized Array._endMutation()();
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  AceOutput.init(commands:flowActivity:)();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[21] = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = Logger.logObject.getter();
  uint64_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    if (one-time initialization token for typeName != -1) {
      swift_once();
    }
    uint64_t v6 = static DismissSiriFlow.typeName;
    uint64_t v7 = unk_58F280;
    swift_bridgeObjectRetain();
    v0[15] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, (uint64_t *)v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v3, v4, "%s: Dismissing Siri", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  uint64_t v9 = v0[19];
  uint64_t v8 = v0[20];
  uint64_t v10 = (void *)v0[17];
  uint64_t v11 = v0[18];
  uint64_t v12 = v10[5];
  uint64_t v13 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  uint64_t v14 = v0[5];
  uint64_t v15 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v14);
  v0[11] = v11;
  v0[12] = &protocol witness table for AceOutput;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v8, v11);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[22] = v17;
  *uint64_t v17 = v0;
  v17[1] = DismissSiriFlow.execute();
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 8, v14, v15);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();
  uint64_t v8;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v3 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = DismissSiriFlow.execute();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 64);
    uint64_t v6 = DismissSiriFlow.execute();
  }
  return _swift_task_switch(v6, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (*v3)(void);
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  static ExecuteResponse.complete()();
  uint64_t v1 = OUTLINED_FUNCTION_79_2();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

{
  void *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t (*v10)(void);
  uint64_t v12;
  void *v13;
  uint64_t v14;

  uint64_t v13 = v0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  uint64_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    if (one-time initialization token for typeName != -1) {
      swift_once();
    }
    uint64_t v6 = static DismissSiriFlow.typeName;
    uint64_t v5 = unk_58F280;
    swift_bridgeObjectRetain();
    v0[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[14] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "%s: Error publishing SAUICloseAssistant command: %@", (uint8_t *)v3, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  static ExecuteResponse.complete()();
  uint64_t v8 = OUTLINED_FUNCTION_79_2();
  v9(v8);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t protocol witness for Flow.on(input:) in conformance DismissSiriFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance DismissSiriFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

uint64_t protocol witness for Flow.execute() in conformance DismissSiriFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 112) + **(int **)(**(void **)v1 + 112));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance DismissSiriFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DismissSiriFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t SearchCallHistoryAceViewProvider.__allocating_init(templatingService:sharedGlobals:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
  OUTLINED_FUNCTION_0_41();
  __chkstk_darwin(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_38(v5, v10);
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_2_77();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t SearchCallHistoryAceViewProvider.init(templatingService:sharedGlobals:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
  OUTLINED_FUNCTION_0_41();
  __chkstk_darwin(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_38(v5, v10);
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_2_77();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t SearchCallHistoryAceViewProvider.makeAceViewsForResolveNeedsDisambiguation(app:parameterName:intent:utteranceViews:disambiguationList:deviceIsLocked:_:)(uint64_t a1, uint64_t a2, void *a3, void *a4, unint64_t a5, uint64_t a6, char a7, void (*a8)(void, void), uint64_t a9)
{
  uint64_t v17 = type metadata accessor for CATOption();
  __chkstk_darwin(v17 - 8);
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = a2;
  v18._object = a3;
  if (PhoneCallSlotNames.init(rawValue:)(v18).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_recipient)
  {
    char v28 = a7;
    uint64_t v19 = v9 + direct field offset for SearchCallHistoryAceViewProvider.sharedGlobals;
    type metadata accessor for PhoneCallDisplayTextCATs();
    static CATOption.defaultMode.getter();
    uint64_t v27 = CATWrapper.__allocating_init(options:globals:)();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "#StartCallViewBuilders Providing DefaultDisambiguationBuilder", v23, 2u);
      swift_slowDealloc();
    }

    outlined init with copy of SignalProviding(v19, (uint64_t)v32);
    v30[0] = a1;
    v30[1] = a4;
    v30[2] = a2;
    v30[3] = a3;
    v30[4] = a6;
    char v31 = v28 & 1;
    v32[5] = v27;
    swift_bridgeObjectRetain();
    swift_retain();
    id v24 = a4;
    swift_retain();
    specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(a5, a8, a9);
    return outlined destroy of DefaultDisambiguationBuilder<INSearchCallHistoryIntent>((uint64_t)v30);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultAceViewProvider<INSearchCallHistoryIntent, INSearchCallHistoryIntentResponse>);
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, void *, void *, unint64_t, uint64_t, void, void (*)(void, void), uint64_t))method lookup function for DefaultAceViewProvider();
    return v26(a1, a2, a3, a4, a5, a6, a7 & 1, a8, a9);
  }
}

uint64_t SearchCallHistoryAceViewProvider.makeAceViewsForHandleIntentWithUser(app:intent:intentResponse:_:)(uint64_t a1, void *a2, void *a3, void (*a4)(void, void))
{
  outlined init with copy of SignalProviding(v4 + direct field offset for SearchCallHistoryAceViewProvider.sharedGlobals, (uint64_t)&v13);
  outlined init with copy of SignalProviding(v4 + direct field offset for SearchCallHistoryAceViewProvider.appInfoBuilder, (uint64_t)&v14);
  v12[0] = a1;
  v12[1] = a2;
  long long v12[2] = a3;
  swift_retain();
  id v9 = a2;
  id v10 = a3;
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)((uint64_t)_swiftEmptyArrayStorage, a4);
  return outlined destroy of CallRecordTableSnippetBuilder((uint64_t)v12);
}

uint64_t SearchCallHistoryAceViewProvider.makeAceViewsForLaunchAppWithButton(app:intent:intentResolutionResult:intentResponse:utteranceViews:_:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(v7 + direct field offset for SearchCallHistoryAceViewProvider.templatingService);
  v18[3] = type metadata accessor for SearchCallHistoryTemplatingService();
  v18[4] = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
  swift_retain();
  id v14 = objc_msgSend(a2, "preferredCallProvider", v13);
  static SCHViewBuilders.makeErrorButtonBuilder(templatingService:app:preferredCallProvider:sharedGlobals:)((uint64_t)v18, a1, (uint64_t)v14, (void *)(v7 + direct field offset for SearchCallHistoryAceViewProvider.sharedGlobals), v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  uint64_t v15 = v20;
  uint64_t v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(a5, a6, a7, v15, v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

void SearchCallHistoryAceViewProvider.init()()
{
}

uint64_t SearchCallHistoryAceViewProvider.__ivar_destroyer()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for SearchCallHistoryAceViewProvider.sharedGlobals);
  uint64_t v1 = v0 + direct field offset for SearchCallHistoryAceViewProvider.appInfoBuilder;

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t SearchCallHistoryAceViewProvider.deinit()
{
  uint64_t v0 = DefaultAceViewProvider.deinit();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for SearchCallHistoryAceViewProvider.sharedGlobals);
  __swift_destroy_boxed_opaque_existential_1(v0 + direct field offset for SearchCallHistoryAceViewProvider.appInfoBuilder);
  return v0;
}

uint64_t SearchCallHistoryAceViewProvider.__deallocating_deinit()
{
  SearchCallHistoryAceViewProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t specialized SearchCallHistoryAceViewProvider.init(templatingService:sharedGlobals:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v14[3] = a5;
  v14[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  *(void *)(a4 + direct field offset for SearchCallHistoryAceViewProvider.templatingService) = a1;
  outlined init with copy of SignalProviding(a2, a4 + direct field offset for SearchCallHistoryAceViewProvider.sharedGlobals);
  outlined init with copy of SignalProviding((uint64_t)v14, a4 + direct field offset for SearchCallHistoryAceViewProvider.appInfoBuilder);
  uint64_t v12 = DefaultAceViewProvider.init()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v12;
}

uint64_t outlined destroy of DefaultDisambiguationBuilder<INSearchCallHistoryIntent>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultDisambiguationBuilder<INSearchCallHistoryIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined destroy of CallRecordTableSnippetBuilder(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for SearchCallHistoryAceViewProvider()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryAceViewProvider;
  if (!type metadata singleton initialization cache for SearchCallHistoryAceViewProvider) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for SearchCallHistoryAceViewProvider()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for SearchCallHistoryAceViewProvider()
{
  return type metadata accessor for SearchCallHistoryAceViewProvider();
}

uint64_t OUTLINED_FUNCTION_2_77()
{
  return specialized SearchCallHistoryAceViewProvider.init(templatingService:sharedGlobals:appInfoBuilder:)(v2, v1, v5, v0, v3, v4);
}

uint64_t protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance IdentifyIncomingCallerCATsSimple()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_2_44();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v2 + class metadata base offset for IdentifyIncomingCallerCATsSimple)
                                       + **(int **)(v2 + class metadata base offset for IdentifyIncomingCallerCATsSimple));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple;
  return v5(v0);
}

uint64_t protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance IdentifyIncomingCallerCATsSimple()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_2_44();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for IdentifyIncomingCallerCATsSimple
                                                   + v2
                                                   + 16)
                                       + **(int **)(class metadata base offset for IdentifyIncomingCallerCATsSimple
                                                  + v2
                                                  + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance AnswerCallCATsSimple;
  return v5(v0);
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional __swiftcall IdentifyIncomingCallerCATsSimple.Properties.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of IdentifyIncomingCallerCATsSimple.Properties.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_IdentifyIncomingCallerCATsSimple_Properties_offerFollowUpIntent;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_IdentifyIncomingCallerCATsSimple_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance IdentifyIncomingCallerCATsSimple.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = IdentifyIncomingCallerCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)IdentifyIncomingCallerCATsSimple.intentHandledResponse(incomingCallConcept:));
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_10_1(v2, (uint64_t)"incomingCallConcept");
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneIncomingCall();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  OUTLINED_FUNCTION_19_2();
  PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional v4 = v0;
  v4[1] = AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:);
  uint64_t v5 = OUTLINED_FUNCTION_11_6(0xD00000000000002CLL);
  return v7(v5);
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return (PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional)7;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional)v3;
  }
}

uint64_t IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(char a1)
{
  uint64_t result = 0x7373694D7473754ALL;
  switch(a1)
  {
    case 1:
      return 0xD000000000000015;
    case 2:
      return 0x69486C6C61436F4ELL;
    case 3:
      uint64_t v3 = 0x317473726966;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6423000000000000;
    case 4:
      uint64_t v4 = 0x317473726966;
      goto LABEL_9;
    case 5:
      uint64_t v3 = 0x327473726966;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6423000000000000;
    case 6:
      uint64_t v4 = 0x327473726966;
LABEL_9:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x6423000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)IdentifyIncomingCallerCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:));
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)()
{
  uint64_t v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467710;
  uint64_t v3 = OUTLINED_FUNCTION_10_1(v2, (uint64_t)"incomingCallConcept");
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneIncomingCall();
  }
  else
  {
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 72) = v3;
  OUTLINED_FUNCTION_19_2();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  unint64_t v5 = lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds();
  *uint64_t v4 = v0;
  v4[1] = AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:);
  return v7(0xD00000000000002CLL, 0x800000000048D3F0, v2, &type metadata for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds, v5);
}

unint64_t lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds);
  }
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.offerFollowUpIntent(followUpOfferType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493CD0;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v8 + 32))();
  }
  id v9 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v1 + 48) = v9;
  *id v9 = v1;
  v9[1] = AnswerCallCATsSimple.offerFollowUpIntent(followUpOfferType:);
  id v10 = OUTLINED_FUNCTION_11_6(v3 + 25);
  return v12(v10);
}

BOOL IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[2] = v2;
  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, unint64_t, uint64_t, ValueMetadata *, unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_4_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = (uint64_t *)(v4 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = 0x8000000000493CD0;
  outlined init with copy of SpeakableString?(v0, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_1_4(v6);
  if (v7)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }
  else
  {
    *(void *)(v4 + 72) = v0;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v8 + 32))();
  }
  id v9 = (void *)OUTLINED_FUNCTION_3_0();
  *(void *)(v1 + 48) = v9;
  id v10 = lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds();
  *id v9 = v1;
  v9[1] = AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  return v12(v3 + 25, 0x800000000048D420, v4, &type metadata for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds, v10);
}

unint64_t lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds);
  }
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.__allocating_init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  return IdentifyIncomingCallerCATsSimple.init(templateDir:options:globals:)(a1, a2);
}

uint64_t IdentifyIncomingCallerCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10 - 8);
  outlined init with copy of SpeakableString?(a1, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v2);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t IdentifyIncomingCallerCATsSimple.__allocating_init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_52();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v1;
}

uint64_t IdentifyIncomingCallerCATsSimple.init(useResponseMode:options:)()
{
  type metadata accessor for CATOption();
  OUTLINED_FUNCTION_8_18();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_52();
  uint64_t v2 = OUTLINED_FUNCTION_28_0();
  v3(v2);
  CATWrapperSimple.init(useResponseMode:options:)();
  uint64_t v4 = OUTLINED_FUNCTION_30_1();
  v5(v4);
  return v0;
}

unint64_t lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties);
  }
  return result;
}

uint64_t type metadata accessor for IdentifyIncomingCallerCATsSimple()
{
  uint64_t result = type metadata singleton initialization cache for IdentifyIncomingCallerCATsSimple;
  if (!type metadata singleton initialization cache for IdentifyIncomingCallerCATsSimple) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for IdentifyIncomingCallerCATsSimple()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for IdentifyIncomingCallerCATsSimple()
{
  return type metadata accessor for IdentifyIncomingCallerCATsSimple();
}

unsigned char *storeEnumTagSinglePayload for IdentifyIncomingCallerCATsSimple.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2051C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for IdentifyIncomingCallerCATsSimple.Properties()
{
}

unsigned char *storeEnumTagSinglePayload for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2052C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
}

unsigned char *storeEnumTagSinglePayload for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x205390);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds()
{
}

uint64_t DateCreatedSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                     + **(void **)(v6 + 40)
                                                     + 448))(a5, a6);
}

uint64_t DateCreatedSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v49 = a8;
  uint64_t v48 = a7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v47 = (uint64_t)&v46 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  id v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v46 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  __chkstk_darwin(v28);
  char v30 = (char *)&v46 - v29;
  id v31 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for INDateComponentsRange();
  if ((swift_dynamicCast() & 1) == 0) {
    return (*(uint64_t (**)(void, void, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
  }
                                                                       + **(void **)(v50 + 40)
                                                                       + 96))(0, 0, v48, v49);
  id v46 = v51;
  id v32 = [v51 startDate];
  if (!v32)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v20);
    goto LABEL_7;
  }
  uint64_t v33 = v32;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = *(void (**)(void))(v21 + 32);
  OUTLINED_FUNCTION_0_47();
  v35();
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20) == 1)
  {
LABEL_7:

    outlined destroy of Date?((uint64_t)v19);
    return (*(uint64_t (**)(void, void, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                                       + **(void **)(v50 + 40)
                                                                       + 96))(0, 0, v48, v49);
  }
  OUTLINED_FUNCTION_0_47();
  v34();
  id v36 = [v46 endDate];
  if (v36)
  {
    uint64_t v37 = v36;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v15, v38, 1, v20);
  uint64_t v40 = v47;
  outlined init with take of Date?((uint64_t)v15, v47);
  uint64_t v41 = *(void **)(v50 + 40);
  outlined init with copy of Date?(v40, (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v30, v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v20) == 1)
  {
    OUTLINED_FUNCTION_0_47();
    v34();
    outlined destroy of Date?((uint64_t)v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    ((void (*)(char *, char *, uint64_t))v34)(v27, v12, v20);
  }
  uint64_t v43 = v48;
  uint64_t v42 = v49;
  type metadata accessor for DialogCalendar();
  uint64_t v44 = static DialogCalendar.make(date:)();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v21 + 8);
  v45(v27, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for SearchCallHistoryCATs
                                                             + *v41
                                                             + 96))(v44, 1, v43, v42);
  swift_release();

  outlined destroy of Date?(v47);
  return ((uint64_t (*)(char *, uint64_t))v45)(v30, v20);
}

unint64_t type metadata accessor for INDateComponentsRange()
{
  unint64_t result = lazy cache variable for type metadata for INDateComponentsRange;
  if (!lazy cache variable for type metadata for INDateComponentsRange)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for INDateComponentsRange);
  }
  return result;
}

uint64_t outlined init with copy of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DateCreatedSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_69(a1, a2, a3, a4, a5, a6, a7, a8);
  return (*(uint64_t (**)(uint64_t))(class metadata base offset for SearchCallHistoryCATs + v9 + 192))(v8);
}

uint64_t DateCreatedSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_69(a1, a2, a3, a4, a5, a6, a7, a8);
  return (*(uint64_t (**)(uint64_t))(class metadata base offset for SearchCallHistoryCATs + v9 + 992))(v8);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:) in conformance DateCreatedSlotTemplating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return DateCreatedSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(a1, a2, a3, a4, a5, 0, a7, a8);
}

uint64_t protocol witness for SlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:) in conformance DateCreatedSlotTemplating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return DateCreatedSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

ValueMetadata *type metadata accessor for DateCreatedSlotTemplating()
{
  return &type metadata for DateCreatedSlotTemplating;
}

uint64_t OUTLINED_FUNCTION_1_69(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return a8;
}

uint64_t specialized Transformer<>.VoiceTriggerAudioRouteBehavior.init<A>(for:isEmergencyCallIntent:sharedGlobals:)(char a1, void *a2)
{
  if (a1)
  {
    uint64_t v3 = a2[3];
    uint64_t v4 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v3);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v10, v3, v4);
    uint64_t v5 = a2[3];
    uint64_t v6 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 112))(v5, v6);
    uint64_t v8 = static Transformer<>.VoiceTriggerAudioRouteBehavior.chooseBehaviorForEmergencyCall(deviceState:currentRequest:)(v10, v7);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 2;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v8;
}

uint64_t specialized Transformer<>.VoiceTriggerAudioRouteBehavior.init<A>(for:isEmergencyCallIntent:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_0, v4, v5, "#VoiceTriggerAudioRouteBehavior heySiriAudioRoute is enabled for INAnswerCallIntent.", v6, 2u);
    swift_slowDealloc();
  }

  __swift_destroy_boxed_opaque_existential_1(a2);
  return 0;
}

uint64_t specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(void *a1, void *a2, void *a3)
{
  return specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3, (uint64_t (*)(Swift::Bool, uint64_t *))specialized Transformer<>.VoiceTriggerAudioRouteBehavior.init<A>(for:isEmergencyCallIntent:sharedGlobals:));
}

{
  return specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3);
}

{
  _DWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  os_log_type_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  os_log_type_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  char v36;
  char v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t BackingType;
  __CFString *v55;
  __CFString *v56;
  __CFString *v57;
  unint64_t v58;
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  PhoneCallNLIntent.isEmergencyCall()();
  uint64_t v6 = (_DWORD *)a2[3];
  __swift_project_boxed_opaque_existential_1(a2, (uint64_t)v6);
  uint64_t v7 = OUTLINED_FUNCTION_46_10();
  v8(v7);
  uint64_t v9 = v61;
  __swift_project_boxed_opaque_existential_1(v60, v61);
  if ((DeviceState.isVoiceTrigger.getter(v9) & 1) == 0)
  {
    uint64_t v10 = [a3 _metadata];
    [v10 triggerMethod];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 112))(v11, v12))
  {
    if (CurrentRequest.isInAmbient.getter())
    {
      OUTLINED_FUNCTION_8_31();
      if (!v13) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      uint64_t v15 = (void *)OUTLINED_FUNCTION_25_0(v14, (uint64_t)static Logger.siriPhone);
      uint64_t v16 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_63_0(v16))
      {
        swift_slowAlloc();
        v60[0] = OUTLINED_FUNCTION_5_23();
        *uint64_t v6 = 136315138;
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
        uint64_t v17 = String.init<A>(describing:)();
        uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_82(&dword_0, v19, v20, "#%s Request is made in ambient mode. Routing to HS audio route.");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }

      uint64_t v21 = _INCallAudioRouteHeySiriAudioRoute;
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v22 = OUTLINED_FUNCTION_19_25();
  v23(v22);
  OUTLINED_FUNCTION_35_19();
  switch(v24)
  {
    case 1:
      goto LABEL_15;
    case 2:
      OUTLINED_FUNCTION_24_26();
      goto LABEL_15;
    case 3:
      OUTLINED_FUNCTION_14_32();
LABEL_15:
      uint64_t v25 = OUTLINED_FUNCTION_12_30();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_16;
      }
      goto LABEL_20;
    case 4:
LABEL_20:
      uint64_t v34 = OUTLINED_FUNCTION_46_10();
      v35(v34);
      __swift_project_boxed_opaque_existential_1(v60, v61);
      OUTLINED_FUNCTION_48_13();
      uint64_t v37 = v36;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      if (v37)
      {
        OUTLINED_FUNCTION_8_31();
        if (!v13) {
          swift_once();
        }
        uint64_t v38 = type metadata accessor for Logger();
        uint64_t v39 = (void *)OUTLINED_FUNCTION_25_0(v38, (uint64_t)static Logger.siriPhone);
        uint64_t v40 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_63_0(v40))
        {
          OUTLINED_FUNCTION_4_55();
          v60[0] = OUTLINED_FUNCTION_5_23();
          OUTLINED_FUNCTION_30_17(4.8149e-34);
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
          uint64_t v41 = OUTLINED_FUNCTION_38_14();
          uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v60);
          OUTLINED_FUNCTION_22_27(v43);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_82(&dword_0, v44, v45, "#%s Triggerless follow-up to call announcement: Using HeySiriAudioRoute instead of default to force audio route to headphones w/o IED.");
          OUTLINED_FUNCTION_44_14();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }

        uint64_t v21 = _INCallAudioRouteHeySiriAudioRoute;
      }
      else
      {
        uint64_t v21 = 0;
      }
      break;
    default:
      swift_bridgeObjectRelease();
LABEL_16:
      OUTLINED_FUNCTION_8_31();
      if (!v13) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      uint64_t v27 = (void *)OUTLINED_FUNCTION_25_0(v26, (uint64_t)static Logger.siriPhone);
      uint64_t v28 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v28))
      {
        OUTLINED_FUNCTION_4_55();
        v60[0] = OUTLINED_FUNCTION_33_13();
        OUTLINED_FUNCTION_32_15(4.8149e-34);
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
        uint64_t v29 = OUTLINED_FUNCTION_38_14();
        id v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v60);
        OUTLINED_FUNCTION_22_27(v31);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_51_8(&dword_0, v32, v33, "#%s Speakerphone specified in intent");
        uint64_t v21 = 1;
        OUTLINED_FUNCTION_44_14();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        uint64_t v21 = 1;
      }
      break;
  }
LABEL_28:
  OUTLINED_FUNCTION_8_31();
  if (!v13) {
    swift_once();
  }
  id v46 = type metadata accessor for Logger();
  uint64_t v47 = OUTLINED_FUNCTION_25_0(v46, (uint64_t)static Logger.siriPhone);
  uint64_t v48 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    v60[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315394;
    uint64_t v50 = v49 + 4;
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
    id v51 = String.init<A>(describing:)();
    int v53 = v52;
    uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    if (!v21)
    {
      OUTLINED_FUNCTION_26_21();
LABEL_42:
      uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v50, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v47, v48, "#%s --> %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
      goto LABEL_43;
    }
    uint64_t BackingType = INCallAudioRouteGetBackingType();
    switch(BackingType)
    {
      case 4:
        uint64_t v55 = @"HEY_SIRI_AUDIO_ROUTE";
        break;
      case 3:
        uint64_t v55 = @"BLUETOOTH_AUDIO_ROUTE";
        break;
      case 2:
        uint64_t v55 = @"SPEAKERPHONE_AUDIO_ROUTE";
        break;
      default:
        uint64_t v55 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
        goto LABEL_41;
    }
    uint64_t v56 = v55;
LABEL_41:
    uint64_t v57 = v55;
    int v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v58;

    goto LABEL_42;
  }
LABEL_43:

  return v21;
}

uint64_t specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(void *a1, void *a2, void *a3, uint64_t (*a4)(Swift::Bool, uint64_t *))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_50_8();
  Swift::Bool v8 = PhoneCallNLIntent.isEmergencyCall()();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v85);
  char v9 = a4(v8, v85);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v85, v10, v11);
  __swift_project_boxed_opaque_existential_1(v85, v86);
  uint64_t v12 = OUTLINED_FUNCTION_50_8();
  if (DeviceState.isVoiceTrigger.getter(v12))
  {
    BOOL v13 = 1;
  }
  else if (a3 && (id v14 = [a3 _metadata]) != 0)
  {
    uint64_t v15 = v14;
    unsigned int v16 = [v14 triggerMethod];

    BOOL v13 = v16 == 30;
  }
  else
  {
    BOOL v13 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v17);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 112))(v17, v18))
  {
    if (CurrentRequest.isInAmbient.getter())
    {
      OUTLINED_FUNCTION_20_23();
      if (!v19) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      uint64_t v21 = (void *)OUTLINED_FUNCTION_25_0(v20, (uint64_t)static Logger.siriPhone);
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_63_0(v22))
      {
        swift_slowAlloc();
        v85[0] = OUTLINED_FUNCTION_5_23();
        *(_DWORD *)a2 = 136315138;
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
        uint64_t v23 = String.init<A>(describing:)();
        uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_82(&dword_0, v25, v26, "#%s Request is made in ambient mode. Routing to HS audio route.");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }

      uint64_t v27 = _INCallAudioRouteHeySiriAudioRoute;
      swift_release();
      goto LABEL_46;
    }
    swift_release();
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v28 = OUTLINED_FUNCTION_19_25();
  v29(v28);
  OUTLINED_FUNCTION_35_19();
  switch(v30)
  {
    case 1:
      goto LABEL_19;
    case 2:
      OUTLINED_FUNCTION_24_26();
      goto LABEL_19;
    case 3:
      OUTLINED_FUNCTION_14_32();
LABEL_19:
      char v31 = OUTLINED_FUNCTION_12_30();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_20;
      }
      goto LABEL_25;
    case 4:
LABEL_25:
      if (!v9)
      {
        if (v13)
        {
          OUTLINED_FUNCTION_20_23();
          if (!v19) {
            swift_once();
          }
          uint64_t v50 = type metadata accessor for Logger();
          id v51 = (void *)OUTLINED_FUNCTION_25_0(v50, (uint64_t)static Logger.siriPhone);
          os_log_type_t v52 = static os_log_type_t.debug.getter();
          if (!OUTLINED_FUNCTION_63_0(v52)) {
            goto LABEL_44;
          }
          OUTLINED_FUNCTION_4_55();
          OUTLINED_FUNCTION_5_23();
          OUTLINED_FUNCTION_40_12();
          OUTLINED_FUNCTION_30_17(4.8149e-34);
          uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
          uint64_t v53 = OUTLINED_FUNCTION_15_29();
          OUTLINED_FUNCTION_43_13(v53, v54, v55, v56, v57);
          OUTLINED_FUNCTION_3_65();
          OUTLINED_FUNCTION_45_13();
          os_log_type_t v60 = "#%s HeySiriAudioRoute: User used HS for this request or the initial request";
          goto LABEL_43;
        }
LABEL_38:
        uint64_t v61 = a2[3];
        uint64_t v62 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v61);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v62 + 8))(v85, v61, v62);
        __swift_project_boxed_opaque_existential_1(v85, v86);
        OUTLINED_FUNCTION_48_13();
        LOBYTE(v61) = v63;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
        if ((v61 & 1) == 0)
        {
          uint64_t v27 = 0;
          goto LABEL_46;
        }
        OUTLINED_FUNCTION_20_23();
        if (!v19) {
          swift_once();
        }
        uint64_t v64 = type metadata accessor for Logger();
        id v51 = (void *)OUTLINED_FUNCTION_25_0(v64, (uint64_t)static Logger.siriPhone);
        os_log_type_t v65 = static os_log_type_t.debug.getter();
        if (!OUTLINED_FUNCTION_63_0(v65))
        {
LABEL_44:

          uint64_t v27 = _INCallAudioRouteHeySiriAudioRoute;
          goto LABEL_46;
        }
        OUTLINED_FUNCTION_4_55();
        OUTLINED_FUNCTION_5_23();
        OUTLINED_FUNCTION_40_12();
        OUTLINED_FUNCTION_30_17(4.8149e-34);
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
        uint64_t v66 = OUTLINED_FUNCTION_15_29();
        OUTLINED_FUNCTION_43_13(v66, v67, v68, v69, v70);
        OUTLINED_FUNCTION_3_65();
        OUTLINED_FUNCTION_45_13();
        os_log_type_t v60 = "#%s Triggerless follow-up to call announcement: Using HeySiriAudioRoute instead of default to force audio "
              "route to headphones w/o IED.";
LABEL_43:
        OUTLINED_FUNCTION_82(&dword_0, v58, v59, v60);
        OUTLINED_FUNCTION_44_14();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
        goto LABEL_44;
      }
      if (v9 != 1 || !v13) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_20_23();
      if (!v19) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      uint64_t v33 = (void *)OUTLINED_FUNCTION_25_0(v43, (uint64_t)static Logger.siriPhone);
      os_log_type_t v44 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v44))
      {
        OUTLINED_FUNCTION_4_55();
        OUTLINED_FUNCTION_33_13();
        OUTLINED_FUNCTION_40_12();
        OUTLINED_FUNCTION_32_15(4.8149e-34);
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
        uint64_t v45 = OUTLINED_FUNCTION_15_29();
        OUTLINED_FUNCTION_43_13(v45, v46, v47, v48, v49);
        OUTLINED_FUNCTION_3_65();
        OUTLINED_FUNCTION_45_13();
        uint64_t v42 = "#%s Speakerphone AudioRoute: User used HS for this request or the initial request";
LABEL_24:
        OUTLINED_FUNCTION_51_8(&dword_0, v40, v41, v42);
        uint64_t v27 = 1;
        OUTLINED_FUNCTION_44_14();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {
LABEL_32:

        uint64_t v27 = 1;
      }
LABEL_46:
      OUTLINED_FUNCTION_20_23();
      if (!v19) {
        swift_once();
      }
      uint64_t v71 = type metadata accessor for Logger();
      os_log_type_t v72 = OUTLINED_FUNCTION_25_0(v71, (uint64_t)static Logger.siriPhone);
      os_log_type_t v73 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = swift_slowAlloc();
        v85[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 136315394;
        unint64_t v75 = v74 + 4;
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
        uint64_t v76 = String.init<A>(describing:)();
        uint64_t v78 = v77;
        uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2080;
        if (!v27)
        {
          OUTLINED_FUNCTION_26_21();
LABEL_61:
          uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v78, v75, v85);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v72, v73, "#%s --> %s", (uint8_t *)v74, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();

          return v27;
        }
        uint64_t BackingType = INCallAudioRouteGetBackingType();
        switch(BackingType)
        {
          case 4:
            os_log_type_t v80 = @"HEY_SIRI_AUDIO_ROUTE";
            break;
          case 3:
            os_log_type_t v80 = @"BLUETOOTH_AUDIO_ROUTE";
            break;
          case 2:
            os_log_type_t v80 = @"SPEAKERPHONE_AUDIO_ROUTE";
            break;
          default:
            os_log_type_t v80 = +[NSString stringWithFormat:@"(unknown: %i)", BackingType];
            goto LABEL_60;
        }
        uint64_t v81 = v80;
LABEL_60:
        uint64_t v82 = v80;
        uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v75 = v83;

        goto LABEL_61;
      }

      return v27;
    default:
      swift_bridgeObjectRelease();
LABEL_20:
      OUTLINED_FUNCTION_20_23();
      if (!v19) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      uint64_t v33 = (void *)OUTLINED_FUNCTION_25_0(v32, (uint64_t)static Logger.siriPhone);
      os_log_type_t v34 = static os_log_type_t.debug.getter();
      if (!OUTLINED_FUNCTION_21_19(v34)) {
        goto LABEL_32;
      }
      OUTLINED_FUNCTION_4_55();
      OUTLINED_FUNCTION_33_13();
      OUTLINED_FUNCTION_40_12();
      OUTLINED_FUNCTION_32_15(4.8149e-34);
      uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
      uint64_t v35 = OUTLINED_FUNCTION_15_29();
      OUTLINED_FUNCTION_43_13(v35, v36, v37, v38, v39);
      OUTLINED_FUNCTION_3_65();
      OUTLINED_FUNCTION_45_13();
      uint64_t v42 = "#%s Speakerphone specified in intent";
      goto LABEL_24;
  }
}

uint64_t EmergencyDuringOngoingCallOfferFlow.State.description.getter()
{
  uint64_t v1 = type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_65_2();
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v0, v0);
  int v9 = OUTLINED_FUNCTION_27_20(v0);
  if (v9)
  {
    if (v9 == 1) {
      return 0xD000000000000016;
    }
    else {
      return 0x74656C706D6F632ELL;
    }
  }
  else
  {
    OUTLINED_FUNCTION_15_10();
    v11();
    v14[0] = 0x65726577736E612ELL;
    v14[1] = 0xEA00000000002864;
    lazy protocol witness table accessor for type ConfirmationResponse and conformance ConfirmationResponse(&lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse, (void (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    uint64_t v10 = v14[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  return v10;
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for EmergencyDuringOngoingCallOfferFlow.State);
}

uint64_t outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static EmergencyDuringOngoingCallOfferFlow.State.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  uint64_t v10 = OUTLINED_FUNCTION_11_0(v9);
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_1();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EmergencyDuringOngoingCallOfferFlow.State, EmergencyDuringOngoingCallOfferFlow.State));
  uint64_t v12 = OUTLINED_FUNCTION_11_0(v11);
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_65_2();
  uint64_t v14 = v2 + *(int *)(v13 + 56);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, v2);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a2, v14);
  int v15 = OUTLINED_FUNCTION_27_20(v2);
  if (!v15)
  {
    outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v2, v3);
    if (!OUTLINED_FUNCTION_27_20(v14))
    {
      OUTLINED_FUNCTION_15_10();
      v18();
      char v17 = static ConfirmationResponse.== infix(_:_:)();
      char v19 = *(void (**)(void))(v7 + 8);
      OUTLINED_FUNCTION_10_8();
      v19();
      OUTLINED_FUNCTION_10_8();
      v19();
      outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v2);
      return v17 & 1;
    }
    OUTLINED_FUNCTION_10_8();
    v16();
    goto LABEL_9;
  }
  if (v15 == 1)
  {
    if (OUTLINED_FUNCTION_27_20(v14) != 1) {
      goto LABEL_9;
    }
  }
  else if (OUTLINED_FUNCTION_27_20(v14) != 2)
  {
LABEL_9:
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for (EmergencyDuringOngoingCallOfferFlow.State, EmergencyDuringOngoingCallOfferFlow.State));
    char v17 = 0;
    return v17 & 1;
  }
  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v2);
  char v17 = 1;
  return v17 & 1;
}

uint64_t outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t key path setter for EmergencyDuringOngoingCallOfferFlow.state : EmergencyDuringOngoingCallOfferFlow(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, (uint64_t)v4);
  return EmergencyDuringOngoingCallOfferFlow.state.setter((uint64_t)v4);
}

void EmergencyDuringOngoingCallOfferFlow.state.didset()
{
  uint64_t v1 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v14 = v8;
    uint64_t v9 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state;
    swift_beginAccess();
    outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v9, (uint64_t)v3);
    uint64_t v10 = EmergencyDuringOngoingCallOfferFlow.State.description.getter();
    unint64_t v12 = v11;
    outlined destroy of EmergencyDuringOngoingCallOfferFlow.State((uint64_t)v3);
    v13[1] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v6, "#EmergencyDuringOngoingCallOfferFlow transitioning to state = %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t EmergencyDuringOngoingCallOfferFlow.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state;
  swift_beginAccess();
  return outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v3, a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.state.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state;
  swift_beginAccess();
  outlined assign with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, v3);
  swift_endAccess();
  EmergencyDuringOngoingCallOfferFlow.state.didset();
  return outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SharedGlobalsProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals, a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.commonCats.getter()
{
  return swift_retain();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.commonCatPatterns.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SharedGlobalsProviding(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCatPatterns, a1);
}

void EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v22 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v15 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v16);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_4();
  uint64_t v20 = v19 - v18;
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(v14, v12, v10, v8, v6, v4, v20, v22, v16, v15);
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_26_1();
}

void EmergencyDuringOngoingCallOfferFlow.__allocating_init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v20 = v3;
  uint64_t v21 = v4;
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = swift_allocObject();
  uint64_t v17 = *(void *)(v2 + 24);
  uint64_t v16 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v17);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_65_2();
  (*(void (**)(uint64_t))(v19 + 16))(v0);
  specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(v14, v12, v10, v8, v6, v20, v21, v0, v15, v17, v16);
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_26_1();
}

void EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v20 = v4;
  uint64_t v21 = v5;
  char v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = *(void *)(v2 + 24);
  uint64_t v16 = *(void *)(v2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v2, v17);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_12_0();
  (*(void (**)(uint64_t))(v19 + 16))(v1);
  specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(v15, v13, v11, v9, v7, v20, v21, v1, v0, v17, v16);
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_26_1();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  uint64_t v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v8);
  char v9 = (void *)swift_allocObject();
  long long v9[2] = 0;
  void v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = v2;
  swift_retain();
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v3, (uint64_t)&async function pointer to partial apply for closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:), (uint64_t)v9);
  return swift_release();
}

uint64_t closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  v6[3] = a5;
  uint64_t v8 = type metadata accessor for ExecuteResponse();
  v6[4] = v8;
  v6[5] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[6] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a6 + 176) + **(int **)(*(void *)a6 + 176));
  uint64_t v10 = (void *)swift_task_alloc();
  v6[7] = v10;
  *uint64_t v10 = v6;
  v10[1] = closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:);
  return v12(v9);
}

uint64_t closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[20] = v2;
  v1[21] = v0;
  uint64_t v3 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v3);
  v1[22] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  OUTLINED_FUNCTION_11_0(v4);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  return _swift_task_switch(EmergencyDuringOngoingCallOfferFlow.execute(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumTagSinglePayload;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t (*v20)(void);
  uint64_t v22;

  uint64_t v1 = v0[24];
  OUTLINED_FUNCTION_22();
  (*(void (**)(void))(v2 + 128))();
  uint64_t v3 = type metadata accessor for ConfirmationResponse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 2, v3);
  if (EnumTagSinglePayload)
  {
    if (EnumTagSinglePayload == 1)
    {
      uint64_t v5 = v0[21];
      uint64_t v7 = *(void **)(v5 + 16);
      uint64_t v6 = *(void **)(v5 + 24);
      uint64_t v8 = (void *)(v5
                    + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
      uint64_t v9 = *(unsigned char *)(v5 + 32);
      outlined init with copy of SharedGlobalsProviding(v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals, (uint64_t)(v0 + 8));
      type metadata accessor for StartCallCATs();
      outlined copy of EmergencyDuringOngoingCallPromptType(v7, v6, v9);
      static CATOption.defaultMode.getter();
      CATWrapper.__allocating_init(options:globals:)();
      type metadata accessor for OngoingCallCATs();
      static CATOption.defaultMode.getter();
      CATWrapper.__allocating_init(options:globals:)();
      type metadata accessor for StartCallCATsSimple();
      static CATOption.defaultMode.getter();
      CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for OngoingCallCATsSimple();
      static CATOption.defaultMode.getter();
      CATWrapperSimple.__allocating_init(options:globals:)();
      type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy();
      swift_allocObject();
      EmergencyDuringOngoingCallConfirmationStrategy.init(type:sharedGlobals:startCallCats:ongoingCallCats:startCallCATsSimple:ongoingCallCATsSimple:)();
      uint64_t v10 = v8[3];
      uint64_t v11 = v8[4];
      __swift_project_boxed_opaque_existential_1(v8, v10);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 16);
      swift_retain();
      v12(v10, v11);
      uint64_t v13 = v0[5];
      uint64_t v14 = v0[7];
      __swift_project_boxed_opaque_existential_1(v0 + 2, v13);
      v0[16] = v13;
      v0[17] = v14;
      __swift_allocate_boxed_opaque_existential_1(v0 + 13);
      OUTLINED_FUNCTION_10();
      (*(void (**)(void))(v15 + 16))();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
      swift_allocObject();
      lazy protocol witness table accessor for type ConfirmationResponse and conformance ConfirmationResponse(&lazy protocol witness table cache variable for type EmergencyDuringOngoingCallConfirmationStrategy and conformance EmergencyDuringOngoingCallConfirmationStrategy, (void (*)(uint64_t))type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy);
      uint64_t v16 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      v0[19] = v16;
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>, &demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
      swift_retain();
      static ExecuteResponse.ongoing<A>(next:childCompletion:)();
      swift_release();
      swift_release();
LABEL_8:
      swift_release();
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v17 = v0[23];
    outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v0[24], v17);
    uint64_t v18 = *(void *)(v3 - 8);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v17, v3);
    if (v19 == enum case for ConfirmationResponse.confirmed(_:))
    {
      EmergencyDuringOngoingCallOfferFlow.chooseNextFlowForComplete()();
      static ExecuteResponse.complete(next:)();
      goto LABEL_8;
    }
    if (v19 == enum case for ConfirmationResponse.rejected(_:))
    {
      v0[18] = EmergencyDuringOngoingCallOfferFlow.makePromptCancelledOutputFlow()();
      type metadata accessor for SimpleOutputFlowAsync();
      static ExecuteResponse.complete<A>(next:)();
      goto LABEL_8;
    }
    (*(void (**)(void, uint64_t))(v18 + 8))(v0[23], v3);
  }
  static ExecuteResponse.complete()();
LABEL_11:
  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v0[24]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

void EmergencyDuringOngoingCallOfferFlow.onPromptComplete(_:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v51 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  uint64_t v5 = OUTLINED_FUNCTION_11_0(v4);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v50 = v7 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for ConfirmationResponse();
  OUTLINED_FUNCTION_1();
  uint64_t v49 = v14;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v48 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<SimpleConfirmationResponseProvider>);
  OUTLINED_FUNCTION_1();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_2_1();
  type metadata accessor for SimpleConfirmationResponseProvider();
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v24);
  OUTLINED_FUNCTION_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v0, v3, v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 88))(v0, v20) != enum case for PromptResult.answered<A>(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0, v20);
    goto LABEL_5;
  }
  (*(void (**)(uint64_t, uint64_t))(v22 + 96))(v0, v20);
  OUTLINED_FUNCTION_15_10();
  v25();
  SimpleConfirmationResponseProvider.confirmationResponse.getter();
  if (__swift_getEnumTagSinglePayload(v12, 1, v13) == 1)
  {
    uint64_t v26 = OUTLINED_FUNCTION_7_52();
    v27(v26);
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for ConfirmationResponse?);
LABEL_5:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      char v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v31 = 0;
      _os_log_impl(&dword_0, v29, v30, "#EmergencyDuringOngoingCallOfferFlow Did not receive .answered from child confirmation flow", v31, 2u);
      swift_slowDealloc();
    }

    OUTLINED_FUNCTION_16_34(v50, 2);
    goto LABEL_18;
  }
  uint64_t v32 = v49;
  uint64_t v33 = v19;
  OUTLINED_FUNCTION_15_10();
  v34();
  uint64_t v35 = v48;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v48, v33, v13);
  uint64_t v36 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v35, v13);
  if (v36 == enum case for ConfirmationResponse.confirmed(_:)
    || v36 == enum case for ConfirmationResponse.rejected(_:))
  {
    uint64_t v37 = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 104))(v50, v36, v13);
    OUTLINED_FUNCTION_16_34(v37, 0);
    OUTLINED_FUNCTION_10_8();
    v38();
    uint64_t v39 = OUTLINED_FUNCTION_7_52();
    v40(v39);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v44 = 0;
      _os_log_impl(&dword_0, v42, v43, "#EmergencyDuringOngoingCallOfferFlow Received an unknown ConfirmationResponse", v44, 2u);
      swift_slowDealloc();
    }

    OUTLINED_FUNCTION_16_34(v50, 2);
    uint64_t v45 = *(void (**)(void))(v32 + 8);
    OUTLINED_FUNCTION_10_8();
    v45();
    uint64_t v46 = OUTLINED_FUNCTION_7_52();
    v47(v46);
    ((void (*)(char *, uint64_t))v45)(v35, v13);
  }
LABEL_18:
  OUTLINED_FUNCTION_26_1();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.makePromptCancelledOutputFlow()()
{
  uint64_t v1 = type metadata accessor for DialogPhase();
  uint64_t v2 = OUTLINED_FUNCTION_11_0(v1);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_2_1();
  uint64_t v3 = type metadata accessor for CATOption();
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_12_0();
  uint64_t v5 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals;
  type metadata accessor for PhoneCallCommonCATsSimple();
  static CATOption.defaultMode.getter();
  CATWrapperSimple.__allocating_init(options:globals:)();
  swift_retain();
  static DialogPhase.canceled.getter();
  outlined init with copy of SharedGlobalsProviding(v5, (uint64_t)v9);
  type metadata accessor for DialogOutputFactory();
  swift_allocObject();
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  swift_release();
  OUTLINED_FUNCTION_22();
  uint64_t v7 = (*(uint64_t (**)(void))(v6 + 112))();
  swift_release();
  return v7;
}

uint64_t EmergencyDuringOngoingCallOfferFlow.chooseNextFlowForComplete()()
{
  void (*v6)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void v22[5];
  unsigned char v23[40];
  long long v24;
  void v25[4];
  uint64_t v26;
  unsigned char v27[16];
  uint64_t v28;
  unsigned char __dst[176];

  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  outlined init with copy of SharedGlobalsProviding(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals, (uint64_t)v23);
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
  type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject();
  v25[1] = &type metadata for PhoneCallFeatureFlags;
  v25[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v24 = swift_allocObject();
  memcpy((void *)(v24 + 16), __dst, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v24, inited + 16);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  uint64_t v6 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8);
  outlined retain of PhoneCallFeatureFlags((uint64_t)__dst);
  v6(v22, v4, v5);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v22, (uint64_t)&v24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  uint64_t v28 = *((void *)&v24 + 1);
  uint64_t v7 = v24;
  outlined release of Set<String>((uint64_t)&v28);
  outlined init with take of String?((uint64_t)v25, (uint64_t)v27);
  outlined release of String?((uint64_t)v27);
  uint64_t v26 = v25[3];
  outlined release of Set<String>((uint64_t)&v26);
  type metadata accessor for StartCallRCHFlowDelegate();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v2, (uint64_t)v22);
  swift_retain();
  StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)((uint64_t)v22, v7);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = Logger.logObject.getter();
  uint64_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "#EmergencyDuringOngoingCallOfferFlow choosing next flow", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v13 = *(void **)(v1 + 16);
  uint64_t v12 = *(void **)(v1 + 24);
  if (!*(unsigned char *)(v1 + 32))
  {
    uint64_t v17 = *(void **)(v1 + 40);
    uint64_t v18 = v13;
    uint64_t v19 = EmergencyDuringOngoingCallOfferFlow.makeEmergencyStartCallIntent(localEmergencyPerson:previousIntent:)(v13, v17);
    v22[0] = OUTLINED_FUNCTION_36_18((uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
    uint64_t v16 = Flow.eraseToAnyFlow()();

    swift_release();
    outlined consume of EmergencyDuringOngoingCallPromptType(v13, v12, 0);
    swift_release();
LABEL_12:
    swift_release();
    goto LABEL_13;
  }
  if (*(unsigned char *)(v1 + 32) != 1)
  {
    uint64_t v20 = EmergencyDuringOngoingCallOfferFlow.makeEmergencyStartCallIntent(localEmergencyPerson:previousIntent:)(0, *(void **)(v1 + 40));
    v22[0] = OUTLINED_FUNCTION_36_18((uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
    uint64_t v16 = Flow.eraseToAnyFlow()();
    swift_release();
    swift_release();

    goto LABEL_12;
  }
  uint64_t v14 = v13;
  uint64_t v15 = v12;
  v22[0] = OngoingCallRCHFlowFactory.makeHandleIntentFlow(app:intent:intentResponse:)(v7, v14, v15);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyHandleIntentFlow<INStartCallIntent, INStartCallIntentResponse>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyHandleIntentFlow<INStartCallIntent, INStartCallIntentResponse> and conformance AnyHandleIntentFlow<A, B>, &demangling cache variable for type metadata for AnyHandleIntentFlow<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v16 = Flow.eraseToAnyFlow()();
  swift_release();
  swift_release();
  swift_release();

LABEL_13:
  outlined destroy of OngoingCallRCHFlowFactory((uint64_t)v23);
  return v16;
}

id EmergencyDuringOngoingCallOfferFlow.makeEmergencyStartCallIntent(localEmergencyPerson:previousIntent:)(void *a1, void *a2)
{
  void (*v12)(_OWORD *__return_ptr, long long *, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v20;
  __n128 v21;
  _OWORD v22[2];
  uint64_t v23;
  long long v24;
  ValueMetadata *v25;
  _UNKNOWN **v26;

  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_5_1();
  outlined init with copy of SharedGlobalsProviding(v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals, (uint64_t)&v24);
  uint64_t v10 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(&v24, v10 + 16);
  *(void *)(v10 + 56) = a2;
  id v11 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0);
  Transformer.init(transform:)();
  uint64_t v12 = (void (*)(_OWORD *__return_ptr, long long *, __n128))Transformer.transform.getter();
  uint64_t v23 = 0;
  memset(v22, 0, sizeof(v22));
  uint64_t v25 = &type metadata for PhoneCallDirectInvocationNLIntent;
  uint64_t v26 = &protocol witness table for PhoneCallDirectInvocationNLIntent;
  *(void *)&uint64_t v24 = swift_allocObject();
  v21.n128_u64[1] = (unint64_t)_swiftEmptyArrayStorage;
  v21.n128_u64[0] = (unint64_t)_swiftEmptyArrayStorage;
  WORD2(v20) = 518;
  LODWORD(v20) = 287507209;
  uint64_t v13 = PhoneCallDirectInvocationNLIntent.init(app:contacts:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:contactQueries:references:)((uint64_t)v22, (uint64_t)_swiftEmptyArrayStorage, 2, 0, 4, 2, 5, 1, (uint64_t)v24 + 16, v20, v21, (uint64_t)_swiftEmptyArrayStorage);
  v12(v22, &v24, v13);
  swift_release();
  uint64_t v14 = *(void *)&v22[0];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_46A030;
    *(void *)(v15 + 32) = a1;
    *(void *)&uint64_t v24 = v15;
    specialized Array._endMutation()();
    uint64_t v16 = v24;
  }
  else
  {
    uint64_t v16 = 0;
  }
  objc_allocWithZone((Class)INStartCallIntent);
  uint64_t v17 = a1;
  uint64_t v18 = @nonobjc INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:)(0, 0, v14, 2, 1, v16, 0, 1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
  return v18;
}

uint64_t EmergencyDuringOngoingCallOfferFlow.toAnyConfirmIntentFlow<A>()()
{
  OUTLINED_FUNCTION_39_13();
  type metadata accessor for AnyConfirmIntentFlow();
  OUTLINED_FUNCTION_39_13();
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter();
  char v11 = TrialSmartAppSelectionConfigProvider.__allocating_init(trialConfigSource:)(v0);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_49_14(WitnessTable, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  return AnyConfirmIntentFlow.__allocating_init<A>(_:)();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.toAnyUnsupportedValueFlow<A>()()
{
  OUTLINED_FUNCTION_39_13();
  type metadata accessor for AnyUnsupportedValueFlow();
  OUTLINED_FUNCTION_39_13();
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter();
  char v11 = TrialSmartAppSelectionConfigProvider.__allocating_init(trialConfigSource:)(v0);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_49_14(WitnessTable, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  return AnyUnsupportedValueFlow.__allocating_init<A>(_:)();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter((void (*)(uint64_t, void))&type metadata accessor for ConfirmIntentAnswer, a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.__deallocating_deinit()
{
  ThirdPartyAnnotatedAppStore.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>()
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.on(input:)() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>()
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.execute(completion:)();
}

uint64_t protocol witness for Flow.execute() in conformance EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A1>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for Flow.execute() in conformance RedirectToCompanionFlow;
  return Flow.execute()(a1, a2, a3);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>@<X0>(uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter(a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter((void (*)(uint64_t, void))&type metadata accessor for IntentPromptAnswer, a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter@<X0>(void (*a1)(uint64_t, void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for PromptResult.cancelled<A>(_:);
  a1(255, *(void *)(*(void *)v2 + 80));
  type metadata accessor for PromptResult();
  OUTLINED_FUNCTION_10();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);

  return v7(a2, v4, v5);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.on(input:)()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 160))() & 1;
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.execute(completion:)()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t protocol witness for Flow.onAsync(input:) in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A1>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for Flow.onAsync(input:) in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A1>;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t protocol witness for Flow.execute() in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A1>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return Flow.execute()(a1, a2, a3);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A>@<X0>(uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter.exitValue.getter(a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.deinit()
{
  outlined consume of EmergencyDuringOngoingCallPromptType(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));

  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCatPatterns);
  return v0;
}

uint64_t EmergencyDuringOngoingCallOfferFlow.__deallocating_deinit()
{
  EmergencyDuringOngoingCallOfferFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance EmergencyDuringOngoingCallOfferFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance EmergencyDuringOngoingCallOfferFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t protocol witness for Flow.execute() in conformance EmergencyDuringOngoingCallOfferFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 176) + **(int **)(**(void **)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance EmergencyDuringOngoingCallOfferFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow(0);

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3, (uint64_t (*)(Swift::Bool, uint64_t *))specialized Transformer<>.VoiceTriggerAudioRouteBehavior.init<A>(for:isEmergencyCallIntent:sharedGlobals:));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  uint64_t result = specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  uint64_t result = specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v24 = a6;
  uint64_t v17 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v25[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v27[3] = a9;
  v27[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(boxed_opaque_existential_1, a7, a9);
  uint64_t v21 = type metadata accessor for ConfirmationResponse();
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 2, v21);
  outlined init with copy of SharedGlobalsProviding(a5, (uint64_t)v26);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v27, (uint64_t)v25);
  uint64_t v22 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, unsigned char *))(a8 + 152))(v19, a1, a2, a3, a4, v26, v24, v25);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v22;
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)(uint64_t a1, void *a2, void *a3, char a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v35[3] = a10;
  v35[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_1, a8, a10);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state);
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(unsigned char *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  outlined init with copy of SharedGlobalsProviding(a6, a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  *(void *)(a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCats) = a7;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v35, a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCatPatterns);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  uint64_t v20 = one-time initialization token for siriPhone;
  id v21 = a5;
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v32 = v21;
    uint64_t v33 = a6;
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    uint64_t v31 = a1;
    unint64_t v26 = EmergencyDuringOngoingCallPromptType.description.getter(a2, a3, a4);
    unint64_t v28 = v27;
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    _os_log_impl(&dword_0, v23, v24, "#EmergencyDuringOngoingCallOfferFlow initialized with promptType: %s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    __swift_destroy_boxed_opaque_existential_1(v33);
    uint64_t v29 = v31;
  }
  else
  {

    swift_release();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    __swift_destroy_boxed_opaque_existential_1(a6);
    uint64_t v29 = a1;
  }
  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return a9;
}

uint64_t sub_209BE0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)(a1, v4, v5, v6, v7, v8);
}

id outlined copy of EmergencyDuringOngoingCallPromptType(id result, void *a2, char a3)
{
  if (a3)
  {
    if (a3 != 1) {
      return result;
    }
    id v4 = result;
    uint64_t result = a2;
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ConfirmationResponse and conformance ConfirmationResponse(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

{
  uint64_t result;

  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter()
{
  return __swift_instantiateGenericMetadata();
}

void outlined consume of EmergencyDuringOngoingCallPromptType(void *a1, void *a2, char a3)
{
  if (a3)
  {
    if (a3 != 1) {
      return;
    }

    a1 = a2;
  }
}

uint64_t sub_209E04()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t ObjC metadata update function for EmergencyDuringOngoingCallOfferFlow()
{
  return type metadata accessor for EmergencyDuringOngoingCallOfferFlow(0);
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for EmergencyDuringOngoingCallOfferFlow);
}

uint64_t type metadata completion function for EmergencyDuringOngoingCallOfferFlow()
{
  uint64_t result = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EmergencyDuringOngoingCallOfferFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for ConfirmationResponse();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConfirmationResponse();
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 2, v2);
  if (!result)
  {
    id v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_20A4D8);
}

uint64_t sub_20A4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse();
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3) {
    return EnumTagSinglePayload - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_20A534);
}

uint64_t sub_20A534(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for ConfirmationResponse();

  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t getEnumTag for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConfirmationResponse();

  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t destructiveInjectEnumTag for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse();

  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t type metadata completion function for EmergencyDuringOngoingCallOfferFlow.State()
{
  uint64_t result = type metadata accessor for ConfirmationResponse();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t base witness table accessor for Flow in EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for Flow in EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>()
{
  return swift_getWitnessTable();
}

uint64_t sub_20A6D8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_20A718()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t outlined assign with copy of EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A7E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t outlined destroy of OngoingCallRCHFlowFactory(uint64_t a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_65()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_4_55()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_7_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_30()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_14_32()
{
  return 0x65756C625F746F6ELL;
}

uint64_t OUTLINED_FUNCTION_15_29()
{
  return String.init<A>(describing:)();
}

uint64_t OUTLINED_FUNCTION_16_34(uint64_t a1, uint64_t a2)
{
  __swift_storeEnumTagSinglePayload(a1, a2, 2, v3);
  return EmergencyDuringOngoingCallOfferFlow.state.setter(v2);
}

uint64_t OUTLINED_FUNCTION_19_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_27(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_24_26()
{
  return 0x746F6F7465756C62;
}

void OUTLINED_FUNCTION_30_17(float a1)
{
  *uint64_t v1 = a1;
}

void OUTLINED_FUNCTION_32_15(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_33_13()
{
  return swift_slowAlloc();
}

unint64_t OUTLINED_FUNCTION_35_19()
{
  return 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_36_18(uint64_t a1)
{
  return OngoingCallRCHFlowFactory.makePreConfirmedRCHFlow(delegate:intent:app:)(v2, a1, v1);
}

uint64_t OUTLINED_FUNCTION_38_14()
{
  return String.init<A>(describing:)();
}

uint64_t OUTLINED_FUNCTION_39_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_43_13(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_44_14()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_45_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_46_10()
{
  return v0;
}

void OUTLINED_FUNCTION_48_13()
{
  DeviceState.isTriggerlessFollowup.getter();
}

char *OUTLINED_FUNCTION_49_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t OUTLINED_FUNCTION_50_8()
{
  return v0;
}

void OUTLINED_FUNCTION_51_8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t AnnounceCallFlow.__allocating_init(directAction:sharedGlobals:)(uint64_t a1, void *a2)
{
  void (*v9)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void, uint64_t, uint64_t, void, void *);
  void v15[5];
  long long v16;
  void v17[4];
  uint64_t v18;
  unsigned char v19[16];
  uint64_t v20;
  unsigned char __dst[184];

  uint64_t v3 = v2;
  if (one-time initialization token for instance != -1) {
    swift_once();
  }
  memcpy(__dst, &static PhoneCallFeatureFlags.instance, 0xB0uLL);
  type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject();
  v17[1] = &type metadata for PhoneCallFeatureFlags;
  v17[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v16 = swift_allocObject();
  memcpy((void *)(v16 + 16), __dst, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v16, inited + 16);
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  uint64_t v9 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8);
  outlined retain of PhoneCallFeatureFlags((uint64_t)__dst);
  v9(v15, v7, v8);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v15, (uint64_t)&v16);
  swift_release();
  uint64_t v10 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 352))(v10);
  uint64_t v12 = v16;
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v15);
  uint64_t v13 = *(void (**)(void, uint64_t, uint64_t, void, void *))(v3 + 152);
  swift_retain();
  v13(0, v11, v12, 0, v15);
  OUTLINED_FUNCTION_93_1();
  swift_release();
  swift_release();
  uint64_t v20 = *((void *)&v16 + 1);
  outlined release of Set<String>((uint64_t)&v20);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v17, (uint64_t)v19, &demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v19);
  uint64_t v18 = v17[3];
  outlined release of Set<String>((uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v3;
}

uint64_t AnnounceCallFlow.__allocating_init(directAction:sharedGlobals:appFinder:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v37 = a2;
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v33 - 8);
  uint64_t v5 = __chkstk_darwin(v33);
  uint64_t v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(uint64_t (**)(void))(*(void *)a1 + 256);
  uint64_t v35 = *(void *)a1 + 256;
  uint64_t v34 = v7;
  uint64_t v8 = (void *)((uint64_t (*)(uint64_t))v7)(v5);
  uint64_t v9 = outlined bridged method (ob) of @objc INCallRecord.providerBundleId.getter(v8);
  if (!v10) {
    goto LABEL_4;
  }
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  uint64_t v14 = a3[3];
  uint64_t v13 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v14);
  uint64_t v15 = v37[4];
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  uint64_t v16 = OUTLINED_FUNCTION_93_1();
  v17(v16, v15);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void *, long long *, uint64_t, uint64_t))(v13 + 8))(v39, v11, v12, _swiftEmptyArrayStorage, &v41, v14, v13);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  uint64_t v18 = _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v39, (uint64_t)v40, &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v40[0])
  {
    long long v41 = v40[0];
    long long v42 = v40[1];
    long long v43 = v40[2];
    uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 200))(v18);
    uint64_t v20 = v34();
    uint64_t v21 = v41;
    uint64_t v22 = v37;
    outlined init with copy of SignalProviding((uint64_t)v37, (uint64_t)v38);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v36 + 152);
    swift_retain();
    uint64_t v24 = v23(v19, v20, v21, 1, v38);
    swift_release();
    swift_release();
    uint64_t v44 = *((void *)&v41 + 1);
    outlined release of Set<String>((uint64_t)&v44);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)&v42, (uint64_t)v45, &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v45);
    uint64_t v46 = *((void *)&v43 + 1);
    outlined release of Set<String>((uint64_t)&v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return v24;
  }
  else
  {
LABEL_4:
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v26 = v33;
    uint64_t v27 = __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v27, v26);
    unint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v41 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v30 = 136315138;
      v38[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000051, 0x8000000000496A90, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_0, v28, v29, "%s", v30, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t AnnounceCallFlow.State.description.getter(void *a1)
{
  if (!a1) {
    return 0x6E41726566666F2ELL;
  }
  id v1 = a1;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  id v2 = [v1 description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v6._uint64_t countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);

  return 0xD000000000000017;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnnounceCallFlow.State()
{
  return AnnounceCallFlow.State.description.getter(*v0);
}

void key path setter for AnnounceCallFlow.state : AnnounceCallFlow(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  AnnounceCallFlow.state.setter(v1);
}

void AnnounceCallFlow.state.didset()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_beginAccess();
    uint64_t v5 = *(void **)(v0 + 16);
    if (v5)
    {
      id v6 = v5;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      id v7 = [v6 description];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      v11._uint64_t countAndFlagsBits = v8;
      v11._object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      v12._uint64_t countAndFlagsBits = 41;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);

      uint64_t v13 = 0xD000000000000017;
      unint64_t v14 = 0x8000000000496AF0;
    }
    else
    {
      unint64_t v14 = 0xEC00000072657773;
      uint64_t v13 = 0x6E41726566666F2ELL;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v2, v3, "#AnnounceCallFlow state = %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void AnnounceCallFlow.state.setter(void *a1)
{
  swift_beginAccess();
  os_log_type_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
  id v4 = a1;

  AnnounceCallFlow.state.didset();
}

uint64_t AnnounceCallFlow.announceOutputStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of AnnounceIncomingCallerOutputStrategy(v1 + 32, a1);
}

uint64_t AnnounceCallFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 88, a1);
}

uint64_t AnnounceCallFlow.intentRecord.getter()
{
  id v1 = objc_allocWithZone((Class)INIdentifyIncomingCallerIntent);
  swift_retain();
  [v1 init];
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INIdentifyIncomingCallerIntentResponse);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_46A030;
  os_log_type_t v3 = *(void **)(v0 + 24);
  *(void *)(v2 + 32) = v3;
  uint64_t v6 = v2;
  specialized Array._endMutation()();
  id v4 = v3;
  INIdentifyIncomingCallerIntentResponse.init(statusCode:callRecords:)(2, v6);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent);

  return IntentResolutionRecord.init(app:intent:intentResponse:)();
}

uint64_t AnnounceCallFlow.__allocating_init(state:callRecord:app:invocationType:sharedGlobals:)(uint64_t a1, void *a2, uint64_t a3, char a4, long long *a5)
{
  char v9 = a4 & 1;
  swift_allocObject();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_93_1();
  AnnounceCallFlow.init(state:callRecord:app:invocationType:sharedGlobals:)(v10, a2, a3, v9, a5);
  return v5;
}

uint64_t AnnounceCallFlow.init(state:callRecord:app:invocationType:sharedGlobals:)(void *a1, void *a2, uint64_t a3, char a4, long long *a5)
{
  uint64_t v6 = v5;
  char v11 = a4 & 1;
  uint64_t v12 = type metadata accessor for CATOption();
  __chkstk_darwin(v12 - 8);
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v13 = type metadata accessor for AnnounceIncomingCallCATsSimple();
  id v14 = a1;
  id v15 = a2;
  static CATOption.defaultMode.getter();
  uint64_t v16 = CATWrapperSimple.__allocating_init(options:globals:)();

  *(void *)(v6 + 32) = v16;
  *(_OWORD *)(v6 + 40) = v18;
  *(void *)(v6 + 56) = v13;
  *(void *)(v6 + 64) = &protocol witness table for AnnounceIncomingCallCATsSimple;
  *(void *)(v6 + 72) = v15;
  *(unsigned char *)(v6 + 80) = v11;
  *(void *)(v6 + 128) = a3;
  outlined init with take of AppSelectionSignalComponent(a5, v6 + 88);
  return v6;
}

uint64_t AnnounceCallFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  v1[19] = v2;
  v1[20] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  return _swift_task_switch(AnnounceCallFlow.execute(), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v37;
  uint64_t v38;

  id v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 160) + 120))();
  *(void *)(v0 + 200) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    *(void *)(v0 + 208) = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
    id v4 = Logger.logObject.getter();
    uint64_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_0, v4, v5, "#AnnounceCallFlow: playNotificationSound without ringtone, use regular chime", v6, 2u);
      OUTLINED_FUNCTION_6();
    }
    id v7 = *(void **)(v0 + 160);

    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAUIPlayNotificationSound);
    uint64_t v8 = [v2 request];
    char v9 = [v8 identifier];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = SAUIPlayNotificationSound.init(notificationId:soundType:)(v10, v12);
    *(void *)(v0 + 216) = v13;
    id v14 = v7[15];
    __swift_project_boxed_opaque_existential_1(v7 + 11, v7[14]);
    id v15 = OUTLINED_FUNCTION_93_1();
    v16(v15, v14);
    uint64_t v17 = *(void *)(v0 + 120);
    long long v18 = *(void *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v17);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v19;
    uint64_t v20 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
    *uint64_t v19 = v0;
    v19[1] = AnnounceCallFlow.execute();
    return AceServiceInvokerAsync.submit<A>(_:)(v13, v17, v20, v18);
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = Logger.logObject.getter();
    uint64_t v23 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "#AnnounceCallFlow: Pushing IncomingCallFollowUpFlow for follow-up offer", v24, 2u);
      OUTLINED_FUNCTION_6();
    }
    uint64_t v26 = *(void *)(v0 + 184);
    uint64_t v25 = *(void *)(v0 + 192);
    unint64_t v28 = *(void *)(v0 + 168);
    uint64_t v27 = *(void *)(v0 + 176);
    os_log_type_t v29 = *(void *)(v0 + 160);

    os_log_type_t v30 = *(void *)(v29 + 128);
    swift_retain();
    AnnounceCallFlow.intentRecord.getter();
    uint64_t v37 = IntentResolutionRecord.intent.getter();
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v31(v25, v28);
    AnnounceCallFlow.intentRecord.getter();
    uint64_t v32 = IntentResolutionRecord.intentResponse.getter();
    v31(v26, v28);
    outlined init with copy of SignalProviding(v29 + 88, v0 + 16);
    outlined init with copy of SignalProviding(v0 + 16, v0 + 56);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
    uint64_t v33 = (void *)swift_allocObject();
    v33[5] = &type metadata for AnnounceIncomingCallerOutputStrategy;
    v33[6] = &protocol witness table for AnnounceIncomingCallerOutputStrategy;
    uint64_t v34 = swift_allocObject();
    v33[2] = v34;
    outlined init with copy of AnnounceIncomingCallerOutputStrategy(v29 + 32, v34 + 16);
    v33[12] = v30;
    v33[13] = v37;
    v33[14] = v32;
    outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 56), (uint64_t)(v33 + 7));
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    *(void *)(v0 + 136) = v33;
    lazy protocol witness table accessor for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>();
    static ExecuteResponse.complete<A>(next:)();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    return v35();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  id v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v7 = AnnounceCallFlow.execute();
  }
  else
  {

    id v7 = AnnounceCallFlow.execute();
  }
  return _swift_task_switch(v7, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(v1 + 96);
  OUTLINED_FUNCTION_6_51();
  static ExecuteResponse.replan(requireInput:)();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

{
  uint8_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  __swift_destroy_boxed_opaque_existential_1(v1 + 96);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  id v4 = (void *)v3;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v0 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v0 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v1 + 144) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, (os_log_type_t)v4, "#AnnounceCallFlow: Error playing sound %@, proceeding to dialog", v0, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  OUTLINED_FUNCTION_6_51();
  static ExecuteResponse.replan(requireInput:)();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v7();
}

uint64_t AnnounceCallFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t AnnounceCallFlow.deinit()
{
  outlined destroy of AnnounceIncomingCallerOutputStrategy(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_release();
  return v0;
}

uint64_t AnnounceCallFlow.__deallocating_deinit()
{
  AnnounceCallFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance AnnounceCallFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance AnnounceCallFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t protocol witness for Flow.execute() in conformance AnnounceCallFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 168) + **(int **)(**(void **)v1 + 168));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AnnounceCallFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AnnounceCallFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_20C55C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t outlined bridged method (ob) of @objc INCallRecord.providerBundleId.getter(void *a1)
{
  id v2 = [a1 providerBundleId];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined init with copy of AnnounceIncomingCallerOutputStrategy(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20C6E0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 65, 7);
}

unint64_t lazy protocol witness table accessor for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>;
  if (!lazy protocol witness table cache variable for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for AnnounceCallFlow()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type AnnounceCallFlow and conformance AnnounceCallFlow()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallFlow and conformance AnnounceCallFlow;
  if (!lazy protocol witness table cache variable for type AnnounceCallFlow and conformance AnnounceCallFlow)
  {
    type metadata accessor for AnnounceCallFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallFlow and conformance AnnounceCallFlow);
  }
  return result;
}

uint64_t outlined destroy of AnnounceIncomingCallerOutputStrategy(uint64_t a1)
{
  return a1;
}

uint64_t sub_20C838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 120))();
  *a2 = result;
  return result;
}

void **initializeBufferWithCopyOfBuffer for AnnounceCallFlow.State(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for AnnounceCallFlow.State(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for AnnounceCallFlow.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AnnounceCallFlow.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnnounceCallFlow.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnounceCallFlow.State()
{
  return &type metadata for AnnounceCallFlow.State;
}

void OUTLINED_FUNCTION_6_51()
{
  AnnounceCallFlow.state.setter(0);
}

uint64_t PhoneIntentRCHFlowStrategy.__allocating_init(sharedGlobals:app:)(long long *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(a1, v4 + 16);
  *(void *)(v4 + 56) = a2;
  return v4;
}

uint64_t PhoneIntentRCHFlowStrategy.init(sharedGlobals:app:)(long long *a1, uint64_t a2)
{
  outlined init with take of AppSelectionSignalComponent(a1, v2 + 16);
  *(void *)(v2 + 56) = a2;
  return v2;
}

uint64_t PhoneIntentRCHFlowStrategy.actionForInput(input:)()
{
  uint64_t v1 = type metadata accessor for Parse();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
  Input.parse.getter();
  (*(void (**)(long long *__return_ptr, unsigned char *))(*(void *)v7 + 192))(&v20, v4);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  if (!v21)
  {
    outlined destroy of SubmitCommandError?((uint64_t)&v20, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    return static ActionForInput.ignore()();
  }
  outlined init with take of AppSelectionSignalComponent(&v20, (uint64_t)v22);
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(v9, v8);
  (*(void (**)(long long *__return_ptr))(*(void *)v10 + 240))(&v20);
  swift_release();
  outlined init with copy of Result<TemplatingResult, Error>((uint64_t)&v20, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
  if (v15[3] == 1)
  {
    outlined destroy of SubmitCommandError?((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v18 = 0;
LABEL_8:
    outlined destroy of SubmitCommandError?((uint64_t)&v16, &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_9:
    static ActionForInput.handle()();
    goto LABEL_10;
  }
  outlined init with copy of Result<TemplatingResult, Error>((uint64_t)v15, (uint64_t)&v16, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  outlined destroy of TransformationResult((uint64_t)v14);
  if (!*((void *)&v17 + 1)) {
    goto LABEL_8;
  }
  outlined init with take of AppSelectionSignalComponent(&v16, (uint64_t)v19);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  outlined init with copy of SignalProviding((uint64_t)v19, (uint64_t)v14);
  PhoneCallNLIntent.shouldResetRequest(previousNLIntent:)();
  char v13 = v12;
  outlined destroy of SubmitCommandError?((uint64_t)v14, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if ((v13 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    goto LABEL_9;
  }
  static ActionForInput.ignore()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
LABEL_10:
  outlined destroy of SubmitCommandError?((uint64_t)&v20, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t PhoneIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v3[15] = *v2;
  return _swift_task_switch(PhoneIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:), 0, 0);
}

uint64_t PhoneIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)()
{
  long long v42 = v0;
  uint64_t v1 = (uint64_t)(v0 + 2);
  uint64_t v2 = (long long *)(v0 + 7);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[14];
    uint64_t v7 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[2] = v6;
    type metadata accessor for PhoneIntentRCHFlowStrategy();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v1 = (uint64_t)(v0 + 2);
    uint64_t v2 = (long long *)(v0 + 7);
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2080;
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000029, 0x8000000000496B80, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_0, v4, v5, "#%s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v10 = (void *)v0[14];
  uint64_t v11 = v0[12];
  uint64_t v12 = v10[5];
  uint64_t v13 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 72))(v12, v13);
  (*(void (**)(uint64_t))(*(void *)v14 + 192))(v11);
  swift_release();
  if (v0[10])
  {
    uint64_t v15 = v0[14];
    *(void *)os_log_type_t type = v0[15];
    long long v16 = (void *)v0[13];
    outlined init with take of AppSelectionSignalComponent(v2, v1);
    uint64_t v17 = v10[5];
    uint64_t v18 = v10[6];
    __swift_project_boxed_opaque_existential_1(v10 + 2, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 80))(v17, v18);
    uint64_t v19 = *(void *)(v15 + 56);
    uint64_t v20 = *(void *)(*(void *)type + 80);
    swift_retain();
    id v21 = v16;
    uint64_t v22 = (void *)SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(v1, v19, (uint64_t)v16, 0, v20);
    swift_release();

    outlined destroy of SKTransformer((uint64_t)v2);
    if (v22)
    {
      swift_retain_n();
      id v23 = v22;
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v40 = v1;
        uint64_t v26 = v0[14];
        uint64_t v27 = swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        v41[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 136315394;
        v0[7] = v26;
        type metadata accessor for PhoneIntentRCHFlowStrategy();
        swift_retain();
        uint64_t v28 = String.init<A>(describing:)();
        v0[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v27 + 12) = 2112;
        v0[7] = v23;
        id v30 = v23;
        id v31 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v38 = v22;

        id v23 = v30;
        _os_log_impl(&dword_0, v24, v25, "#%s intent: %@", (uint8_t *)v27, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();

        uint64_t v32 = v40;
      }
      else
      {

        swift_release_n();
        uint64_t v32 = v1;
      }
      __swift_destroy_boxed_opaque_existential_1(v32);
      uint64_t v37 = (uint64_t (*)(id))v0[1];
      return v37(v23);
    }
    lazy protocol witness table accessor for type ParseError and conformance ParseError();
    swift_allocError();
    *uint64_t v34 = xmmword_46A560;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1(v1);
  }
  else
  {
    outlined destroy of SubmitCommandError?((uint64_t)v2, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    lazy protocol witness table accessor for type ParseError and conformance ParseError();
    swift_allocError();
    *uint64_t v33 = xmmword_46A560;
    swift_willThrow();
  }
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

unint64_t lazy protocol witness table accessor for type ParseError and conformance ParseError()
{
  unint64_t result = lazy protocol witness table cache variable for type ParseError and conformance ParseError;
  if (!lazy protocol witness table cache variable for type ParseError and conformance ParseError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParseError and conformance ParseError);
  }
  return result;
}

uint64_t PhoneIntentRCHFlowStrategy.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t PhoneIntentRCHFlowStrategy.__deallocating_deinit()
{
  PhoneIntentRCHFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for RCHFlowStrategyAsync.actionForInput(input:) in conformance PhoneIntentRCHFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 128)
                                                + **(int **)(**(void **)v2 + 128));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance PhoneIntentRCHFlowStrategy<A, B>;
  return v8(a1, a2);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = *v2;
  OUTLINED_FUNCTION_4_2();
  *os_log_type_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return v7(v6);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeParameterMetadata(intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PhoneIntentRCHFlowStrategy();

  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeErrorResponse(error:) in conformance PhoneIntentRCHFlowStrategy<A1, B1>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance PhoneIntentRCHFlowStrategy<A, B>@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(*v1 + 16, a1);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for PhoneIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = partial apply for implicit closure #1 in LabelTemplatesProviding.yesAndNo();
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for PhoneIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = partial apply for implicit closure #1 in LabelTemplatesProviding.yesAndNo();
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for PhoneIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = partial apply for implicit closure #1 in LabelTemplatesProviding.yesAndNo();
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for PhoneIntentRCHFlowStrategy();
  void *v12 = v6;
  v12[1] = partial apply for implicit closure #1 in LabelTemplatesProviding.yesAndNo();
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for PhoneIntentRCHFlowStrategy();
  void *v12 = v6;
  v12[1] = partial apply for implicit closure #1 in LabelTemplatesProviding.yesAndNo();
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for PhoneIntentRCHFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t type metadata accessor for PhoneIntentRCHFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t base witness table accessor for ResolveConfirmFlowStrategyAsync in PhoneIntentRCHFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in PhoneIntentRCHFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for RouteConfirmIntentResponseFlowStrategyAsync in PhoneIntentRCHFlowStrategy<A, B>()
{
  return swift_getWitnessTable();
}

uint64_t type metadata completion function for PhoneIntentRCHFlowStrategy()
{
  return swift_initClassMetadata2();
}

uint64_t *AnnounceDropInCallDirectAction.identifier.unsafeMutableAddressor()
{
  if (one-time initialization token for identifier != -1) {
    swift_once();
  }
  return &static AnnounceDropInCallDirectAction.identifier;
}

uint64_t AnnounceDropInCallDirectAction.init(from:)(uint64_t a1)
{
  if (one-time initialization token for announcementTypeKey != -1) {
    swift_once();
  }
  if (!*(void *)(a1 + 16))
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v2 = qword_58F9E0;
  uint64_t v3 = static AnnounceDropInCallDirectAction.announcementTypeKey;
  swift_bridgeObjectRetain();
  unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v3, v2);
  if ((v5 & 1) == 0)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_11:
    outlined destroy of Any?((uint64_t)&v8);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  return 0;
}

uint64_t AnnounceDropInCallFlow.__allocating_init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject();
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a3, v11);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v12);
  uint64_t v14 = OUTLINED_FUNCTION_17_23(v13, v24);
  v15(v14);
  uint64_t v17 = *(void *)(a4 + 24);
  uint64_t v16 = *(void *)(a4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a4, v17);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v18);
  uint64_t v20 = OUTLINED_FUNCTION_1_28(v19, v25);
  v21(v20);
  uint64_t v22 = specialized AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)(a1, a2, v4, v5, v9, v11, v17, v10, v16);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v22;
}

uint64_t one-time initialization function for identifier()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  static AnnounceDropInCallDirectAction.identifier = result;
  unk_5D4AE0 = v1;
  return result;
}

{
  uint64_t result;
  uint64_t v1;

  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  static IdentifyIncomingCallerDirectAction.identifier = result;
  unk_5D5160 = v1;
  return result;
}

{
  Swift::String v0;
  PhoneCallFlowDelegatePlugin::DIIdentifier v2;

  v0._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = DIIdentifier.init(_:)(v0);
  *(PhoneCallFlowDelegatePlugin::DIIdentifier *)static AnnounceVoicemailDirectAction.identifier = v2;
  return v2.namespace._countAndFlagsBits;
}

uint64_t static AnnounceDropInCallDirectAction.identifier.getter()
{
  if (one-time initialization token for identifier != -1) {
    swift_once();
  }
  uint64_t v0 = static AnnounceDropInCallDirectAction.identifier;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t one-time initialization function for announcementTypeKey()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  static AnnounceDropInCallDirectAction.announcementTypeKey = result;
  qword_58F9E0 = v1;
  return result;
}

uint64_t AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a3, v11);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v12);
  uint64_t v14 = OUTLINED_FUNCTION_17_23(v13, v24);
  v15(v14);
  uint64_t v17 = *(void *)(a4 + 24);
  uint64_t v16 = *(void *)(a4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a4, v17);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v18);
  uint64_t v20 = OUTLINED_FUNCTION_1_28(v19, v25);
  v21(v20);
  uint64_t v22 = specialized AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)(a1, a2, v4, v5, v26, v11, v17, v10, v16);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v22;
}

uint64_t AnnounceDropInCallFlow.on(input:)()
{
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  __swift_project_boxed_opaque_existential_1(v0 + 13, v2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v12, v2, v3);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  char v4 = dispatch thunk of DeviceState.isHomePod.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if ((v4 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    swift_retain_n();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_63_0(v7))
    {
      long long v8 = (uint8_t *)OUTLINED_FUNCTION_47();
      v12[0] = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)long long v8 = 136315138;
      type metadata accessor for AnnounceDropInCallFlow();
      swift_retain();
      uint64_t v9 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v6, v1, "#%s Drop in call is only supported on HomePod.", v8, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      swift_release_n();
    }
  }
  return v4 & 1;
}

uint64_t AnnounceDropInCallFlow.execute(completion:)()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t AnnounceDropInCallFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v1;
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t AnnounceDropInCallFlow.execute()()
{
  id v30 = v0;
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0 + 8;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[14];
  if (v6)
  {
    long long v8 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v29 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)long long v8 = 136315138;
    v0[2] = v7;
    type metadata accessor for AnnounceDropInCallFlow();
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_39_10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v5, "#%s Announcing drop in call.", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v0 + 8;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_39_10();
  }
  uint64_t v11 = (void *)v0[14];
  uint64_t v12 = v11[16];
  uint64_t v13 = v11[17];
  __swift_project_boxed_opaque_existential_1(v11 + 13, v12);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
  swift_retain();
  v14(v12, v13);
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[7];
  uint64_t v17 = __swift_project_boxed_opaque_existential_1(v1, v15);
  v0[11] = v15;
  v0[12] = v16;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v2);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1, v17, v15);
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  swift_retain();
  uint64_t v19 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  swift_retain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = v0[14];
  if (v22)
  {
    uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_47();
    uint64_t v29 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v24 = 136315138;
    v0[2] = v23;
    type metadata accessor for AnnounceDropInCallFlow();
    swift_retain();
    uint64_t v25 = String.init<A>(describing:)();
    v0[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v20, v21, "#%s Announcement completed.", v24, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  v0[2] = v19;
  static ExecuteResponse.complete<A>(next:)();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_47_0();
  return v27();
}

uint64_t closure #1 in AnnounceDropInCallFlow.execute()(uint64_t a1, uint64_t a2)
{
  BOOL v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a2 + 160) + **(int **)(*(void *)a2 + 160));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t AnnounceDropInCallFlow.makeAnnouncement()()
{
  OUTLINED_FUNCTION_1_0();
  v1[21] = v2;
  v1[22] = v0;
  v1[23] = type metadata accessor for PhoneError();
  v1[24] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *BOOL v6 = v5;
  *(void *)(v7 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_8_57();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_70_2(v0);
  *uint64_t v1 = v2;
  v1[1] = AnnounceDropInCallFlow.makeAnnouncement();
  uint64_t v3 = OUTLINED_FUNCTION_4_56();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  v3[5] = v1;
  v3[6] = v5;
  v3[7] = v0;
  BOOL v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    long long v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v10, v11, v12);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_8_57();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_70_2(v0);
  *uint64_t v1 = v2;
  v1[1] = AnnounceDropInCallFlow.makeAnnouncement();
  uint64_t v3 = OUTLINED_FUNCTION_4_56();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  v3[8] = v1;
  v3[9] = v5;
  v3[10] = v0;
  BOOL v6 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    long long v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v10, v11, v12);
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_8_57();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_70_2(v0);
  *uint64_t v1 = v2;
  v1[1] = AnnounceDropInCallFlow.makeAnnouncement();
  uint64_t v3 = OUTLINED_FUNCTION_4_56();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();

  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

void AnnounceDropInCallFlow.makeAnnouncement()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[22];
  BOOL v6 = &unk_469000;
  if (v4)
  {
    uint64_t v77 = (uint64_t)(v0 + 20);
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_47();
    v78[0] = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v7 = 136315138;
    v0[19] = v5;
    type metadata accessor for AnnounceDropInCallFlow();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)();
    v0[20] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v78);
    BOOL v6 = (void *)&unk_469000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v2, v3, "#%s Making announcement using RF.", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = *(void *)(v0[22] + 144);
  if (v10 != 3)
  {
    if (v10 != 2)
    {
      if (v10 == 1)
      {
        swift_retain_n();
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.debug.getter();
        BOOL v13 = OUTLINED_FUNCTION_63_0(v12);
        uint64_t v14 = v0[22];
        if (v13)
        {
          uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_47();
          OUTLINED_FUNCTION_14_0();
          OUTLINED_FUNCTION_22_28();
          *(_DWORD *)uint64_t v15 = v6[287];
          v0[17] = v14;
          type metadata accessor for AnnounceDropInCallFlow();
          swift_retain();
          uint64_t v16 = String.init<A>(describing:)();
          v0[18] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v78);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_39_10();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v11, (os_log_type_t)((_BYTE)v0 + 120), "#%s Announcing CallBellStarted.", v15, 0xCu);
          OUTLINED_FUNCTION_14_30();
          OUTLINED_FUNCTION_6();
          OUTLINED_FUNCTION_6();
        }
        else
        {

          OUTLINED_FUNCTION_39_10();
        }
        OUTLINED_FUNCTION_7_53();
        char v63 = (void *)swift_task_alloc();
        v0[25] = v63;
        *char v63 = v0;
        v63[1] = AnnounceDropInCallFlow.makeAnnouncement();
        OUTLINED_FUNCTION_27_3();
        __asm { BRAA            X5, X16 }
      }
      swift_retain_n();
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.debug.getter();
      BOOL v50 = OUTLINED_FUNCTION_63_0(v49);
      uint64_t v51 = v0[22];
      if (v50)
      {
        os_log_type_t v52 = (uint8_t *)OUTLINED_FUNCTION_47();
        OUTLINED_FUNCTION_14_0();
        OUTLINED_FUNCTION_22_28();
        OUTLINED_FUNCTION_15_30(COERCE_FLOAT(v6[287]));
        v0[11] = v51;
        type metadata accessor for AnnounceDropInCallFlow();
        swift_retain();
        uint64_t v53 = String.init<A>(describing:)();
        uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v78);
        OUTLINED_FUNCTION_20_24(v55, v56, v57, v58, v59, v60, v61, v62, v76, v77, v0 + 12);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v48, (os_log_type_t)((_BYTE)v0 + 120), "#%s Received unsupported announcement type", v52, 0xCu);
        OUTLINED_FUNCTION_14_30();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v72 = v0[24];
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type AnnounceDropInCallFlow and conformance AnnounceDropInCallFlow((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
      swift_allocError();
      PhoneError.logged()(v73);
      outlined destroy of PhoneError(v72);
      swift_willThrow();
      swift_task_dealloc();
      OUTLINED_FUNCTION_47_0();
      OUTLINED_FUNCTION_27_3();
      __asm { BRAA            X1, X16 }
    }
    swift_retain_n();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v36 = v0[22];
    if (v35)
    {
      uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_22_28();
      OUTLINED_FUNCTION_15_30(COERCE_FLOAT(v6[287]));
      v0[15] = v36;
      type metadata accessor for AnnounceDropInCallFlow();
      swift_retain();
      uint64_t v38 = String.init<A>(describing:)();
      uint64_t v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, v78);
      OUTLINED_FUNCTION_20_24(v40, v41, v42, v43, v44, v45, v46, v47, v76, v77, v0 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_39_10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v33, v34, "#%s Announcing CallBellEnded.", v37, 0xCu);
      OUTLINED_FUNCTION_14_30();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      OUTLINED_FUNCTION_39_10();
    }
    OUTLINED_FUNCTION_7_53();
    uint64_t v69 = (void *)swift_task_alloc();
    v0[27] = v69;
    *uint64_t v69 = v0;
    v69[1] = AnnounceDropInCallFlow.makeAnnouncement();
    OUTLINED_FUNCTION_23_25();
    OUTLINED_FUNCTION_27_3();
    __asm { BRAA            X3, X16 }
  }
  swift_retain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = v0[22];
  if (v20)
  {
    BOOL v22 = (uint8_t *)OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_22_28();
    OUTLINED_FUNCTION_15_30(COERCE_FLOAT(v6[287]));
    v0[13] = v21;
    type metadata accessor for AnnounceDropInCallFlow();
    swift_retain();
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, v78);
    OUTLINED_FUNCTION_20_24(v25, v26, v27, v28, v29, v30, v31, v32, v76, v77, v0 + 14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_39_10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v18, v19, "#%s Received Single Tap, Informing user double tap to hang up.", v22, 0xCu);
    OUTLINED_FUNCTION_14_30();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    OUTLINED_FUNCTION_39_10();
  }
  OUTLINED_FUNCTION_7_53();
  uint64_t v66 = (void *)swift_task_alloc();
  v0[28] = v66;
  void *v66 = v0;
  v66[1] = AnnounceDropInCallFlow.makeAnnouncement();
  OUTLINED_FUNCTION_23_25();
  OUTLINED_FUNCTION_27_3();
  __asm { BRAA            X3, X16 }
}

uint64_t closure #1 in AnnounceDropInCallFlow.makeAnnouncement()(uint64_t *a1, void *a2)
{
  type metadata accessor for SirikitDeviceState();
  BOOL v4 = a2 + 13;
  uint64_t v6 = a2[16];
  uint64_t v5 = a2[17];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v9, v6, v5);
  uint64_t v7 = SirikitDeviceState.__allocating_init(from:)();
  uint64_t result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t AnnounceDropInCallFlow.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22AnnounceDropInCallFlow_completionOutputManifest;
  uint64_t v2 = type metadata accessor for OutputGenerationManifest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AnnounceDropInCallFlow.__deallocating_deinit()
{
  AnnounceDropInCallFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Flow.on(input:) in conformance AnnounceDropInCallFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance AnnounceDropInCallFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t protocol witness for Flow.execute() in conformance AnnounceDropInCallFlow(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 152) + **(int **)(**(void **)v1 + 152));
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *BOOL v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v6(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AnnounceDropInCallFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AnnounceDropInCallFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t specialized AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = type metadata accessor for CATOption();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for DialogPhase();
  __chkstk_darwin(v17 - 8);
  uint64_t v27 = a6;
  uint64_t v28 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a3, a6);
  uint64_t v24 = a7;
  uint64_t v25 = a9;
  os_log_type_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v19, a4, a7);
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  *(void *)(a5 + 144) = a1;
  outlined init with copy of SignalProviding(a2, a5 + 104);
  type metadata accessor for AnnounceCallBellCATs();
  static CATOption.defaultMode.getter();
  uint64_t v20 = CATWrapper.__allocating_init(options:globals:)();
  __swift_destroy_boxed_opaque_existential_1(a2);
  *(void *)(a5 + 16) = v20;
  outlined init with take of AppSelectionSignalComponent(&v26, a5 + 24);
  outlined init with take of AppSelectionSignalComponent(&v23, a5 + 64);
  return a5;
}

uint64_t type metadata accessor for AnnounceDropInCallFlow()
{
  uint64_t result = type metadata singleton initialization cache for AnnounceDropInCallFlow;
  if (!type metadata singleton initialization cache for AnnounceDropInCallFlow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t partial apply for closure #1 in AnnounceDropInCallFlow.execute()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *BOOL v4 = v1;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in AnnounceDropInCallFlow.execute()(v3, v0);
}

uint64_t lazy protocol witness table accessor for type AnnounceDropInCallFlow and conformance AnnounceDropInCallFlow(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in AnnounceDropInCallFlow.makeAnnouncement()(uint64_t *a1)
{
  return closure #1 in AnnounceDropInCallFlow.makeAnnouncement()(a1, v1);
}

ValueMetadata *type metadata accessor for AnnounceDropInCallDirectAction()
{
  return &type metadata for AnnounceDropInCallDirectAction;
}

uint64_t ObjC metadata update function for AnnounceDropInCallFlow()
{
  return type metadata accessor for AnnounceDropInCallFlow();
}

uint64_t type metadata completion function for AnnounceDropInCallFlow()
{
  uint64_t result = type metadata accessor for OutputGenerationManifest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_56()
{
  return *(void *)(v0 + 168);
}

void *OUTLINED_FUNCTION_7_53()
{
  return __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 176) + 24), *(void *)(*(void *)(v0 + 176) + 48));
}

void *OUTLINED_FUNCTION_8_57()
{
  uint64_t v2 = *(void *)(v1 + 176);
  *(void *)(v1 + 232) = v0;
  return __swift_project_boxed_opaque_existential_1((void *)(v2 + 64), *(void *)(v2 + 88));
}

void OUTLINED_FUNCTION_15_30(float a1)
{
  *uint64_t v1 = a1;
}

char *OUTLINED_FUNCTION_17_23@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *OUTLINED_FUNCTION_20_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  *a11 = a1;
  return a11;
}

uint64_t OUTLINED_FUNCTION_23_25()
{
  return v0;
}

uint64_t LoggableError.logged(shouldLogToAbc:shouldCreateTTR:)@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  LODWORD(v9) = a2;
  uint64_t v79 = a5;
  uint64_t v11 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  uint64_t v77 = v12;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v78 = ((char *)v71 - v18);
  __chkstk_darwin(v17);
  uint64_t v81 = 0;
  unint64_t v82 = 0xE000000000000000;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  unint64_t v19 = v82;
  uint64_t v75 = v81;
  uint64_t v80 = v11;
  if (a1)
  {
    LODWORD(v73) = v9;
    uint64_t v76 = v16;
    OUTLINED_FUNCTION_2_78();
    v71[1] = v21;
    uint64_t v72 = v20;
    OUTLINED_FUNCTION_8_58();
    v22();
    swift_bridgeObjectRetain_n();
    long long v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    unint64_t v74 = v19;
    if (v25)
    {
      long long v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = (char *)swift_slowAlloc();
      *(_DWORD *)long long v26 = 136315138;
      v71[0] = v26 + 4;
      swift_bridgeObjectRetain();
      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v75, v19, (uint64_t *)&v81);
      OUTLINED_FUNCTION_7_22(v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v23, v24, "#LoggableError Trying ABC for %s", v26, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      uint64_t v28 = OUTLINED_FUNCTION_4_57();
      uint64_t v30 = v80;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v28 = OUTLINED_FUNCTION_4_57();
      uint64_t v30 = v11;
    }
    v71[0] = v29;
    v29(v28, v30);
    uint64_t v9 = LoggableError.caseName.getter(a3);
    unint64_t v32 = v31;
    uint64_t v33 = OUTLINED_FUNCTION_10_33();
    uint64_t v81 = (char *)v34(v33);
    unint64_t v82 = v35;
    OUTLINED_FUNCTION_3_66();
    uint64_t v36 = OUTLINED_FUNCTION_1_70();
    v38._uint64_t countAndFlagsBits = v37(v36);
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    uint64_t v39 = (uint64_t)v81;
    uint64_t v40 = v82;
    uint64_t v41 = (uint64_t)v78;
    OUTLINED_FUNCTION_2_78();
    OUTLINED_FUNCTION_8_58();
    v42();
    static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)(0x4C41544146, 0xE500000000000000, v9, v32, v39, v40, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v80;
    ((void (*)(uint64_t, uint64_t))v71[0])(v41, v80);
    uint64_t v16 = v76;
    unint64_t v19 = v74;
    LOBYTE(v9) = v73;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_2_78();
    uint64_t v72 = v44;
    uint64_t v73 = v43;
    OUTLINED_FUNCTION_8_58();
    v45();
    swift_bridgeObjectRetain();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = (char *)swift_slowAlloc();
      uint64_t v76 = v16;
      *(_DWORD *)uint64_t v48 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v75, v19, (uint64_t *)&v81);
      OUTLINED_FUNCTION_7_22(v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v46, v47, "#LoggableError Trying TTR for %s", v48, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      OUTLINED_FUNCTION_9_46((uint64_t)v77);
      uint64_t v52 = v80;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_9_46((uint64_t)v77);
      BOOL v50 = v16;
      uint64_t v52 = v11;
    }
    uint64_t v77 = v51;
    v51(v50, v52);
    uint64_t v81 = 0;
    unint64_t v82 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v81 = (char *)0xD00000000000001ALL;
    unint64_t v82 = 0x8000000000496C30;
    v53._uint64_t countAndFlagsBits = LoggableError.caseName.getter(a3);
    String.append(_:)(v53);
    swift_bridgeObjectRelease();
    unint64_t v54 = v82;
    uint64_t v76 = v81;
    uint64_t v55 = OUTLINED_FUNCTION_10_33();
    uint64_t v81 = (char *)v56(v55);
    unint64_t v82 = v57;
    OUTLINED_FUNCTION_3_66();
    uint64_t v58 = OUTLINED_FUNCTION_1_70();
    v60._uint64_t countAndFlagsBits = v59(v58);
    String.append(_:)(v60);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_66();
    v61._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    String.append(_:)(v61);
    swift_bridgeObjectRelease();
    uint64_t v63 = (uint64_t)v81;
    uint64_t v62 = v82;
    uint64_t v81 = 0;
    unint64_t v82 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v64._uint64_t countAndFlagsBits = 0x45656E6F68502061;
    v64._object = (void *)0xEE002820726F7272;
    String.append(_:)(v64);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v65._uint64_t countAndFlagsBits = 0x6564207361772029;
    v65._object = (void *)0xEF2E646574636574;
    String.append(_:)(v65);
    uint64_t v66 = (uint64_t)v81;
    uint64_t v67 = v82;
    uint64_t v68 = v78;
    OUTLINED_FUNCTION_2_78();
    OUTLINED_FUNCTION_8_58();
    v69();
    static FileRadarUtils.tapToRadar(title:desc:reason:logger:)((uint64_t)v76, v54, v63, v62, v66, v67, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v77(v68, v80);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v79, v6, a3);
}

uint64_t LoggableError.caseName.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21[-2] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Mirror();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  os_log_type_t v12 = (char *)&v21[-2] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = a1;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  uint64_t v13 = *(void (**)(void))(v3 + 16);
  OUTLINED_FUNCTION_6_52();
  v13();
  Mirror.init(reflecting:)();
  Mirror.children.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  specialized Collection.first.getter(&v20);
  swift_release();
  if (v21[3])
  {
    uint64_t v15 = (void *)*((void *)&v20 + 1);
    uint64_t v14 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    outlined destroy of (label: String?, value: Any)?((uint64_t)&v20);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  OUTLINED_FUNCTION_6_52();
  v13();
  if (!v15)
  {
    *(void *)&long long v20 = 0;
    *((void *)&v20 + 1) = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    uint64_t v15 = (void *)*((void *)&v20 + 1);
    uint64_t v14 = v20;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a1);
  swift_getDynamicType();
  *(void *)&long long v20 = _typeName(_:qualified:)();
  *((void *)&v20 + 1) = v16;
  v17._uint64_t countAndFlagsBits = 46;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18._uint64_t countAndFlagsBits = v14;
  v18._object = v15;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t outlined destroy of (label: String?, value: Any)?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (label: String?, value: Any)?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_70()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_78()
{
  return v0;
}

void OUTLINED_FUNCTION_3_66()
{
  uint64_t v1 = 657930;
  unint64_t v2 = 0xE300000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_4_57()
{
  return v0;
}

void OUTLINED_FUNCTION_9_46(uint64_t a1@<X8>)
{
  *(void *)(v1 - 152) = (a1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
}

uint64_t OUTLINED_FUNCTION_10_33()
{
  return v0;
}

void *StartCallDirectAction.identifier.unsafeMutableAddressor()
{
  return &static StartCallDirectAction.identifier;
}

PhoneCallFlowDelegatePlugin::StartCallDirectAction_optional __swiftcall StartCallDirectAction.init(from:)(Swift::OpaquePointer from)
{
  if (!*((void *)from._rawValue + 2)
    || (uint64_t v2 = OUTLINED_FUNCTION_0_48(), v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2, v3), (v5 & 1) == 0))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  outlined init with copy of Any(*((void *)from._rawValue + 7) + 32 * v4, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_7:
    outlined destroy of Any?((uint64_t)&v11);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    goto LABEL_9;
  }
  uint64_t v6 = v9;
  uint64_t v7 = v10;
LABEL_9:
  result.value.appBundleId._object = v7;
  result.value.appBundleId._uint64_t countAndFlagsBits = v6;
  return result;
}

unint64_t static StartCallDirectAction.identifier.getter()
{
  return 0xD000000000000034;
}

BOOL StartCallDirectAction.Keys.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of StartCallDirectAction.Keys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t StartCallDirectAction.Keys.rawValue.getter()
{
  return OUTLINED_FUNCTION_0_48();
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallDirectAction.Keys@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = StartCallDirectAction.Keys.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallDirectAction.Keys(void *a1@<X8>)
{
  *a1 = 0x6C646E7542707061;
  a1[1] = 0xEB00000000644965;
}

uint64_t StartCallDirectAction.toDictionary()(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_467710;
  *(void *)(inited + 32) = 0x6C646E7542707061;
  *(void *)(inited + 40) = 0xEB00000000644965;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  return Dictionary.init(dictionaryLiteral:)();
}

unint64_t lazy protocol witness table accessor for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys;
  if (!lazy protocol witness table cache variable for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys);
  }
  return result;
}

ValueMetadata *type metadata accessor for StartCallDirectAction()
{
  return &type metadata for StartCallDirectAction;
}

unsigned char *storeEnumTagSinglePayload for StartCallDirectAction.Keys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x210FC8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartCallDirectAction.Keys()
{
  return &type metadata for StartCallDirectAction.Keys;
}

uint64_t OUTLINED_FUNCTION_0_48()
{
  return 0x6C646E7542707061;
}

uint64_t specialized Sequence.allSatisfy(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v7 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      if (dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()())
      {
        uint64_t v8 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)();
        uint64_t v10 = v9;
        swift_release();
        if (a3)
        {
          if (!v10) {
            goto LABEL_25;
          }
          if (v8 == a2 && v10 == a3)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v12 & 1) == 0) {
              goto LABEL_25;
            }
          }
        }
        else if (v10)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_26:
          uint64_t v13 = 0;
          goto LABEL_30;
        }
      }
      else if (a3)
      {
        goto LABEL_25;
      }
      if (!dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()())
      {
LABEL_25:
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_26;
      }
      swift_release();
      swift_release();
      ++v6;
      if (v7 == v5) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v13 = 1;
LABEL_30:
  swift_bridgeObjectRelease();
  return v13;
}

void SiriKitDisambiguationList.makeSpeakableHandleLabels(deviceIsLocked:)(char a1)
{
  unint64_t v1 = (unint64_t)SiriKitDisambiguationList.removeSecondComponentIfIdenticalAcrossAllItems(deviceLocked:)();
  unint64_t v2 = v1;
  if (v1 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  }
  if (v3 != 1)
  {
    type metadata accessor for SiriKitDisambiguationList();
    unint64_t v6 = (unint64_t)static SiriKitDisambiguationList.keepOnlySecondComponentIfUnique(disambiguationItems:deviceLocked:)(v2);
    swift_bridgeObjectRelease();
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
      if (!v7) {
        goto LABEL_19;
      }
    }
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v7 < 0)
    {
      __break(1u);
      return;
    }
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      Swift::String v9 = SiriKitDisambiguationItem.toSpokenHandleDisambiguation(deviceLocked:)(a1 & 1);
      swift_release();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      if (v10 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      *(Swift::String *)&_swiftEmptyArrayStorage[2 * v10 + 4] = v9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v4 = v2 & 0xC000000000000001;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0);
  if ((v2 & 0xC000000000000001) != 0) {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    swift_retain();
  }
  uint64_t v5 = dispatch thunk of SiriKitDisambiguationItem.getThirdComponent()();
  swift_release();
  if (v5) {
    goto LABEL_22;
  }
  if (v4) {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    swift_retain();
  }
  uint64_t v11 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()();
  swift_release();
  if (v11)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_467710;
    *(void *)(v12 + 32) = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)();
    *(void *)(v12 + 40) = v13;
    swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_467710;
    if (v4) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = dispatch thunk of SiriKitDisambiguationItem.toSpokenString(deviceLocked:)();
    uint64_t v17 = v16;
    swift_release();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v17;
  }
}

void *SiriKitDisambiguationList.removeSecondComponentIfIdenticalAcrossAllItems(deviceLocked:)()
{
  unint64_t v0 = SiriKitDisambiguationList.disambiguationItems.getter();
  if (v0 >> 62) {
    goto LABEL_25;
  }
  for (uint64_t i = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8)); ; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = SiriKitDisambiguationList.disambiguationItems.getter();
    unint64_t v3 = v2;
    if (i < 2) {
      return (void *)v3;
    }
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0);
    if ((v3 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()();
    swift_release();
    if (v4)
    {
      uint64_t v5 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)();
      uint64_t v7 = v6;
      swift_release();
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v7 = 0;
    }
    unint64_t v8 = SiriKitDisambiguationList.disambiguationItems.getter();
    swift_bridgeObjectRetain();
    char v9 = specialized Sequence.allSatisfy(_:)(v8, v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v10 = SiriKitDisambiguationList.disambiguationItems.getter();
    unint64_t v3 = v10;
    if ((v9 & 1) == 0) {
      return (void *)v3;
    }
    if (v10 >> 62)
    {
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
      if (!v11) {
        goto LABEL_28;
      }
    }
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v11 < 0) {
      break;
    }
    uint64_t v13 = 0;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v14 = SiriKitDisambiguationItem.components.getter();
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
        || v14 < 0
        || (v14 & 0x4000000000000000) != 0)
      {
        uint64_t v14 = specialized _ArrayBuffer._consumeAndCreateNew()(v14);
      }
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
      unint64_t v16 = *(void *)(v15 + 16);
      if (v16 < 2) {
        break;
      }
      unint64_t v17 = v16 - 1;
      uint64_t v18 = v15 + 40;
      memmove((void *)v18, (const void *)(v18 + 8), 8 * v16 - 16);
      ++v13;
      *(void *)(v18 - 24) = v17;
      specialized Array._endMutation()();
      swift_release();
      SiriKitDisambiguationItem.utterance.getter();
      type metadata accessor for SiriKitDisambiguationItem();
      swift_allocObject();
      SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)();
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v11 == v13) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_25:
    ;
  }
  __break(1u);
  return result;
}

void *static SiriKitDisambiguationList.keepOnlySecondComponentIfUnique(disambiguationItems:deviceLocked:)(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_79;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  unint64_t result = (void *)swift_bridgeObjectRetain();
  if (!v2)
  {
LABEL_80:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v40 = v1 & 0xC000000000000001;
    uint64_t v5 = _swiftEmptyArrayStorage;
    uint64_t v39 = v2;
    do
    {
      if (v40) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      if (dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()())
      {
        uint64_t v6 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)();
        uint64_t v8 = v7;
        swift_release();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v5 = v11;
        }
        unint64_t v9 = v5[2];
        if (v9 >= v5[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v5 = v12;
        }
        v5[2] = v9 + 1;
        unint64_t v10 = &v5[2 * v9];
        v10[4] = v6;
        void v10[5] = v8;
        uint64_t v2 = v39;
      }
      else
      {
        swift_release();
      }
      ++v4;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (1)
    {
      if (v40) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v14 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()();
      if (!v14) {
        goto LABEL_44;
      }
      uint64_t v15 = v14;
      uint64_t v16 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)();
      uint64_t v18 = v17;
      uint64_t v19 = v5[2];
      if (v19)
      {
        uint64_t v20 = v16;
        BOOL v21 = v5[4] == v16 && v5[5] == v17;
        if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v22 = 0;
          BOOL v38 = 0;
        }
        else if (v19 == 1)
        {
          uint64_t v22 = 0;
          BOOL v38 = 1;
        }
        else
        {
          BOOL v31 = v5[6] == v20 && v5[7] == v18;
          if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            BOOL v38 = 0;
            uint64_t v22 = 1;
          }
          else
          {
            unint64_t v32 = v5 + 9;
            uint64_t v33 = 2;
            uint64_t v34 = 1;
            while (1)
            {
              BOOL v38 = v19 == v33;
              if (v19 == v33)
              {
                uint64_t v22 = 0;
                goto LABEL_28;
              }
              ++v34;
              if (*(v32 - 1) == v20 && *v32 == v18) {
                break;
              }
              char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v22 = v33++;
              v32 += 2;
              if (v36) {
                goto LABEL_28;
              }
            }
            uint64_t v22 = v34;
          }
        }
LABEL_28:
        uint64_t v37 = v22;
        uint64_t v23 = v19 - 1;
        os_log_type_t v24 = &v5[2 * v19 + 2];
        BOOL v25 = *v24 == v20 && v24[1] == v18;
        if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_33:
          int v26 = 0;
        }
        else
        {
          if (v19 != 1)
          {
            uint64_t v1 = v19 - 2;
            uint64_t v29 = &v5[2 * v19 + 1];
            while (v1 < v19)
            {
              if (*(v29 - 1) == v20 && *v29 == v18)
              {
                int v26 = 0;
                uint64_t v23 = v1;
                goto LABEL_34;
              }
              --v23;
              if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
                goto LABEL_33;
              }
              --v1;
              v29 -= 2;
              if (v1 == -1)
              {
                uint64_t v23 = 0;
                goto LABEL_60;
              }
            }
            __break(1u);
LABEL_79:
            swift_bridgeObjectRetain();
            unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
            uint64_t v2 = (uint64_t)result;
            if (!result) {
              goto LABEL_80;
            }
            goto LABEL_3;
          }
LABEL_60:
          int v26 = 1;
        }
LABEL_34:
        swift_bridgeObjectRelease();
        if (v38)
        {
          uint64_t v2 = v39;
          if (!v26) {
            goto LABEL_43;
          }
        }
        else
        {
          if (v37 == v23) {
            char v27 = v26;
          }
          else {
            char v27 = 1;
          }
          uint64_t v2 = v39;
          if (v27) {
            goto LABEL_43;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_46A030;
      *(void *)(v28 + 32) = v15;
      specialized Array._endMutation()();
      swift_retain();
      SiriKitDisambiguationItem.utterance.getter();
      type metadata accessor for SiriKitDisambiguationItem();
      swift_allocObject();
      SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)();
      swift_release();
LABEL_43:
      swift_release();
LABEL_44:
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v13;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (v13 == v2) {
        goto LABEL_80;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t AssistantProperties.countryCode.getter()
{
  id v0 = (id)_AFPreferencesCountryCode();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

ValueMetadata *type metadata accessor for AssistantProperties()
{
  return &type metadata for AssistantProperties;
}

uint64_t SeasAppMatcherRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a3;
  v6[4] = a6;
  v6[2] = a1;
  uint64_t v7 = type metadata accessor for AppMatcherResult();
  v6[5] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v6[6] = v8;
  v6[7] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AppMatcher();
  v6[8] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v6[9] = v10;
  v6[10] = swift_task_alloc();
  return _swift_task_switch(SeasAppMatcherRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:), 0, 0);
}

uint64_t SeasAppMatcherRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)()
{
  AppMatcher.init()();
  AppMatcher.resolve(intent:bundleIds:)();
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  AppMatcherResult.resolution.getter();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

Swift::String __swiftcall SeasAppMatcherRule.getName()()
{
  id v0 = (void *)0x8000000000476650;
  uint64_t v1 = 0xD000000000000012;
  result._object = v0;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for SeasRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:) in conformance SeasAppMatcherRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v6 + 80)
                                                                                     + **(int **)(**(void **)v6 + 80));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for SeasRule.getName() in conformance SeasAppMatcherRule()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t type metadata accessor for SeasAppMatcherRule()
{
  return self;
}

uint64_t static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t a1, uint64_t a2)
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v5);
  uint64_t v3 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v5, v3 + 16);
  *(void *)(v3 + 56) = a2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INPreferredCallProvider(0);
  return Transformer.init(transform:)();
}

{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, a2);
}

{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, a2);
}

{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  long long v7;

  OUTLINED_FUNCTION_66_9(a1, a2);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  outlined init with take of AppSelectionSignalComponent(&v7, v4 + 32);
  uint64_t v5 = v2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_24_34();
  return OUTLINED_FUNCTION_44_23();
}

{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, a2);
}

{
  return static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, a2);
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v116 = a4;
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 152))(&v152, v6, v7);
  uint64_t v8 = *((void *)&v153 + 1);
  uint64_t v9 = v154;
  __swift_project_boxed_opaque_existential_1(&v152, *((uint64_t *)&v153 + 1));
  if (a3)
  {
    uint64_t v10 = App.appIdentifier.getter();
    a3 = v11;
  }
  else
  {
    uint64_t v10 = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(&v139, v10, a3, v8, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v152);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)&v139, (uint64_t)v151, &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v151[0])
  {
    long long v152 = v151[0];
    long long v153 = v151[1];
    long long v154 = v151[2];
    uint64_t v155 = *((void *)&v151[0] + 1);
    uint64_t v12 = *(void *)&v151[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    outlined release of Set<String>((uint64_t)&v155);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)&v153, (uint64_t)v156, &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v156);
    uint64_t v157 = *((void *)&v154 + 1);
    outlined release of Set<String>((uint64_t)&v157);
  }
  else
  {
    uint64_t v12 = 0;
  }
  OUTLINED_FUNCTION_0_49();
  Swift::Bool v13 = PhoneCallNLIntent.hasAnyFaceTime()();
  outlined init with copy of SignalProviding(a1, (uint64_t)&v134);
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(&v134, v137);
    Swift::Bool v14 = PhoneCallNLIntent.isFirstPartyOrDefaultAppRequest()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v134);
    if (v14)
    {
      OUTLINED_FUNCTION_11_36();
      if (!v15) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
      uint64_t v17 = (void *)Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_5_32(v18))
      {
        OUTLINED_FUNCTION_2_79();
        *(void *)&long long v148 = OUTLINED_FUNCTION_6_53();
        OUTLINED_FUNCTION_5_50(4.8149e-34);
        *(void *)&long long v145 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
        uint64_t v19 = String.init<A>(describing:)();
        *(void *)&long long v145 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, (uint64_t *)&v148);
        OUTLINED_FUNCTION_3_67();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_4_58(&dword_0, v21, v22, "#%s using FaceTime provider per verb or noun parse");
        OUTLINED_FUNCTION_8_59();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
      }
      goto LABEL_13;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v134);
  }
  OUTLINED_FUNCTION_0_49();
  Swift::Bool v24 = PhoneCallNLIntent.isRedialOrCallBack()();
  outlined init with copy of SignalProviding(a1, (uint64_t)&v129);
  if (v24)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
LABEL_19:
    OUTLINED_FUNCTION_11_36();
    if (!v15) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    char v27 = (void *)Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_5_32(v28))
    {
      OUTLINED_FUNCTION_2_79();
      *(void *)&long long v148 = OUTLINED_FUNCTION_6_53();
      OUTLINED_FUNCTION_5_50(4.8149e-34);
      *(void *)&long long v145 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
      uint64_t v29 = String.init<A>(describing:)();
      *(void *)&long long v145 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, (uint64_t *)&v148);
      OUTLINED_FUNCTION_3_67();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_4_58(&dword_0, v31, v32, "#%s Not setting preferredCallProvider because this is a redial/callback or find request");
      OUTLINED_FUNCTION_8_59();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }

    uint64_t v23 = 0;
    goto LABEL_24;
  }
  __swift_project_boxed_opaque_existential_1(&v129, v132);
  Swift::Bool v25 = PhoneCallNLIntent.isFind()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
  if (v25) {
    goto LABEL_19;
  }
  if (v12)
  {
    swift_retain();
    if (App.isFaceTime()())
    {
      _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)&v139, (uint64_t)&v145, &demangling cache variable for type metadata for AnnotatedApp?);
      if ((void)v145)
      {
        long long v149 = v146;
        long long v150 = v147;
        long long v148 = v145;
        if (v147 != 1)
        {
          uint64_t v69 = one-time initialization token for siriPhone;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v69 != -1) {
            swift_once();
          }
          uint64_t v70 = type metadata accessor for Logger();
          __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
          uint64_t v17 = (void *)Logger.logObject.getter();
          os_log_type_t v71 = static os_log_type_t.debug.getter();
          if (OUTLINED_FUNCTION_5_32(v71))
          {
            OUTLINED_FUNCTION_2_79();
            uint64_t v128 = OUTLINED_FUNCTION_6_53();
            OUTLINED_FUNCTION_5_50(4.8149e-34);
            v158[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
            uint64_t v72 = String.init<A>(describing:)();
            v158[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, &v128);
            OUTLINED_FUNCTION_3_67();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_58(&dword_0, v74, v75, "#%s using FaceTime provider per app resolution result (user requested)");
            OUTLINED_FUNCTION_8_59();
            OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_6();

            swift_release();
            uint64_t v76 = swift_release();
            OUTLINED_FUNCTION_10_34(v76, v77, v78, v79, v80, v81, v82, v83, v108, v112, (uint64_t)v116, v120, v124, v128, v129, v130, v131, v132, v133,
              v134,
              v135,
              v136,
              v137,
              v138,
              v139,
              v140,
              v141,
              v142,
              v143,
              v144,
              v145,
              *((uint64_t *)&v145 + 1),
              v146,
              *((uint64_t *)&v146 + 1),
              v147,
              *((uint64_t *)&v147 + 1),
              v148,
              *((uint64_t *)&v148 + 1));
            _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)&v149, (uint64_t)v158, &demangling cache variable for type metadata for String?);
            uint64_t v84 = outlined release of String?((uint64_t)v158);
            OUTLINED_FUNCTION_7_54(v84, v85, v86, v87, v88, v89, v90, v91, v110, v114, v118, v122, v126, v128, v129, v130, v131, v132, v133,
              v134,
              v135,
              v136,
              v137,
              v138,
              v139,
              v140,
              v141,
              v142,
              v143,
              v144,
              v145,
              *((uint64_t *)&v145 + 1),
              v146,
              *((uint64_t *)&v146 + 1),
              v147,
              *((uint64_t *)&v147 + 1),
              v148,
              *((uint64_t *)&v148 + 1),
              v149,
              *((uint64_t *)&v149 + 1),
              v150,
              *((uint64_t *)&v150 + 1));
            goto LABEL_14;
          }
          swift_release();
          uint64_t v92 = swift_release();
          OUTLINED_FUNCTION_10_34(v92, v93, v94, v95, v96, v97, v98, v99, v108, v112, (uint64_t)v116, v120, v124, v128, v129, v130, v131, v132, v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145,
            *((uint64_t *)&v145 + 1),
            v146,
            *((uint64_t *)&v146 + 1),
            v147,
            *((uint64_t *)&v147 + 1),
            v148,
            *((uint64_t *)&v148 + 1));
          _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)&v149, (uint64_t)v158, &demangling cache variable for type metadata for String?);
          uint64_t v100 = outlined release of String?((uint64_t)v158);
          OUTLINED_FUNCTION_7_54(v100, v101, v102, v103, v104, v105, v106, v107, v111, v115, v119, v123, v127, v128, v129, v130, v131, v132, v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145,
            *((uint64_t *)&v145 + 1),
            v146,
            *((uint64_t *)&v146 + 1),
            v147,
            *((uint64_t *)&v147 + 1),
            v148,
            *((uint64_t *)&v148 + 1),
            v149,
            *((uint64_t *)&v149 + 1),
            v150,
            *((uint64_t *)&v150 + 1));
LABEL_13:

LABEL_14:
          uint64_t v23 = 2;
          goto LABEL_24;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v42 = swift_release();
        OUTLINED_FUNCTION_10_34(v42, v43, v44, v45, v46, v47, v48, v49, v108, v112, (uint64_t)v116, v120, v124, v128, v129, v130, v131, v132, v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139,
          v140,
          v141,
          v142,
          v143,
          v144,
          v145,
          *((uint64_t *)&v145 + 1),
          v146,
          *((uint64_t *)&v146 + 1),
          v147,
          *((uint64_t *)&v147 + 1),
          v148,
          *((uint64_t *)&v148 + 1));
        _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)&v149, (uint64_t)v158, &demangling cache variable for type metadata for String?);
        uint64_t v50 = outlined release of String?((uint64_t)v158);
        OUTLINED_FUNCTION_7_54(v50, v51, v52, v53, v54, v55, v56, v57, v109, v113, v117, v121, v125, v128, v129, v130, v131, v132, v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139,
          v140,
          v141,
          v142,
          v143,
          v144,
          v145,
          *((uint64_t *)&v145 + 1),
          v146,
          *((uint64_t *)&v146 + 1),
          v147,
          *((uint64_t *)&v147 + 1),
          v148,
          *((uint64_t *)&v148 + 1),
          v149,
          *((uint64_t *)&v149 + 1),
          v150,
          *((uint64_t *)&v150 + 1));
      }
    }
    swift_release();
  }
  OUTLINED_FUNCTION_0_49();
  if (PhoneCallNLIntent.isFirstPartyOrDefaultAppRequest()())
  {
    OUTLINED_FUNCTION_11_36();
    if (!v15) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      Swift::String v61 = (uint8_t *)OUTLINED_FUNCTION_2_79();
      uint64_t v128 = swift_slowAlloc();
      *(_DWORD *)Swift::String v61 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
      uint64_t v62 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, &v128);
      OUTLINED_FUNCTION_3_67();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v59, v60, "#%s fallback to telephony", v61, 0xCu);
      uint64_t v23 = 1;
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      uint64_t v23 = 1;
    }
  }
  else
  {
    uint64_t v23 = 3;
  }
LABEL_24:
  OUTLINED_FUNCTION_11_36();
  if (!v15) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v134 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
    uint64_t v37 = String.init<A>(describing:)();
    uint64_t v129 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v134);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    if (!v23)
    {
      unint64_t v64 = 0xE700000000000000;
      uint64_t v65 = 0x4E574F4E4B4E55;
LABEL_51:
      uint64_t v129 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v64, &v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v34, v35, "#%s --> %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();

      swift_release();
      uint64_t result = (uint64_t)outlined release of AnnotatedApp?(&v139);
      goto LABEL_52;
    }
    uint64_t v39 = INPreferredCallProviderGetBackingType();
    switch(v39)
    {
      case 4:
        unint64_t v40 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        unint64_t v40 = @"FACETIME_PROVIDER";
        break;
      case 2:
        unint64_t v40 = @"TELEPHONY_PROVIDER";
        break;
      default:
        unint64_t v40 = +[NSString stringWithFormat:@"(unknown: %i)", v39];
        goto LABEL_50;
    }
    uint64_t v66 = v40;
LABEL_50:
    uint64_t v67 = v40;
    uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v64 = v68;

    goto LABEL_51;
  }
  outlined release of AnnotatedApp?(&v139);

  uint64_t result = swift_release();
LABEL_52:
  *uint64_t v116 = v23;
  return result;
}

uint64_t sub_212C60()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t OUTLINED_FUNCTION_0_49()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_2_79()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_3_67()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_4_58(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_6_53()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_7_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  *(void *)(v42 - 72) = a42;
  return outlined release of Set<String>(v42 - 72);
}

uint64_t OUTLINED_FUNCTION_8_59()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_10_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  *(void *)(v38 - 112) = a38;
  return outlined release of Set<String>(v38 - 112);
}

uint64_t specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()()
{
  NLContextUpdate.init()();
  PhoneCallNLConstants.canonicalName.getter(1);
  NLContextUpdate.weightedPromptTargetDomain.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_467720;
  Swift::String v1 = String.uppercased()();
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_8_6();
  swift_bridgeObjectRelease();
  PhoneCallNLConstants.canonicalName.getter(6);
  OUTLINED_FUNCTION_31_19();
  Swift::String v2 = String.uppercased()();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(Swift::String *)(v0 + 32) = v1;
  Swift::String v3 = String.uppercased()();
  OUTLINED_FUNCTION_8_6();
  swift_bridgeObjectRelease();
  PhoneCallNLConstants.canonicalName.getter(6);
  OUTLINED_FUNCTION_31_19();
  Swift::String v4 = String.uppercased()();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(Swift::String *)(v0 + 48) = v3;
  NLContextUpdate.weightedPromptResponseOptions.setter();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  *(void *)(v5 + 32) = PhoneCallNLConstants.canonicalName.getter(6);
  *(void *)(v5 + 40) = v6;
  NLContextUpdate.weightedPromptResponseTargets.setter();
  return NLContextUpdate.weightedPromptStrict.setter();
}

uint64_t specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()()
{
  uint64_t v66 = type metadata accessor for PhoneError();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v0);
  OUTLINED_FUNCTION_5_8();
  uint64_t v65 = v1;
  __chkstk_darwin(v2);
  unint64_t v64 = (char *)v59 - v3;
  OUTLINED_FUNCTION_36();
  uint64_t v62 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  unint64_t v63 = v4;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v60 = v6;
  OUTLINED_FUNCTION_36();
  uint64_t v70 = type metadata accessor for Siri_Nlu_External_SystemDialogAct();
  OUTLINED_FUNCTION_0_0();
  uint64_t v67 = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_8();
  v59[0] = v9;
  __chkstk_darwin(v10);
  v59[2] = (char *)v59 - v11;
  OUTLINED_FUNCTION_36();
  type metadata accessor for Siri_Nlu_External_SystemOffered();
  OUTLINED_FUNCTION_0_0();
  uint64_t v68 = v13;
  uint64_t v69 = v12;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_5_8();
  v59[1] = v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v59 - v16;
  type metadata accessor for Siri_Nlu_External_UserDialogAct();
  OUTLINED_FUNCTION_0_0();
  uint64_t v72 = v19;
  uint64_t v73 = v18;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_46_0();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v59 - v21;
  uint64_t v23 = type metadata accessor for Siri_Nlu_External_UsoGraph();
  uint64_t v24 = OUTLINED_FUNCTION_11_0(v23);
  __chkstk_darwin(v24);
  uint64_t v25 = type metadata accessor for Siri_Nlu_External_UserWantedToProceed();
  OUTLINED_FUNCTION_0_0();
  uint64_t v71 = v26;
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_46_0();
  __chkstk_darwin(v28);
  unint64_t v30 = (char *)v59 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  uint64_t v32 = OUTLINED_FUNCTION_11_0(v31);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)v59 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UsoTaskBuilder_call_common_PhoneCall();
  swift_allocObject();
  uint64_t v35 = UsoTaskBuilder_call_common_PhoneCall.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_46A030;
  *(void *)(v36 + 32) = v35;
  v75[0] = v36;
  specialized Array._endMutation()();
  uint64_t v37 = type metadata accessor for UsoBuilderOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v34, 1, 1, v37);
  uint64_t v61 = v35;
  swift_retain();
  uint64_t v38 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
  swift_bridgeObjectRelease();
  outlined destroy of UUID?((uint64_t)v34, &demangling cache variable for type metadata for UsoBuilderOptions?);
  Siri_Nlu_External_UserWantedToProceed.init()();
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
  uint64_t v60 = v38;
  Siri_Nlu_External_UserWantedToProceed.reference.setter();
  Siri_Nlu_External_UserDialogAct.init()();
  unint64_t v63 = v30;
  unint64_t v64 = (char *)v25;
  OUTLINED_FUNCTION_12();
  v39();
  Siri_Nlu_External_UserDialogAct.wantedToProceed.setter();
  Siri_Nlu_External_SystemOffered.init()();
  uint64_t v65 = v22;
  OUTLINED_FUNCTION_12();
  v40();
  Siri_Nlu_External_SystemOffered.offeredAct.setter();
  Siri_Nlu_External_SystemDialogAct.init()();
  uint64_t v42 = v68;
  uint64_t v41 = v69;
  uint64_t v66 = (uint64_t)v17;
  OUTLINED_FUNCTION_12();
  v43();
  Siri_Nlu_External_SystemDialogAct.offered.setter();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v44 = OUTLINED_FUNCTION_25_0(v62, (uint64_t)static Logger.siriPhone);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_1_34(v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    v75[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315138;
    swift_beginAccess();
    uint64_t v47 = v59[0];
    OUTLINED_FUNCTION_12();
    v48();
    uint64_t v49 = specialized String.init(describing:)(v47);
    uint64_t v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, v75);
    uint64_t v42 = v68;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v44, OS_LOG_TYPE_DEFAULT, "#PhoneCallNLContextProvider Returning SystemOffered for start call confirmation: %s", v46, 0xCu);
    swift_arrayDestroy();
    uint64_t v41 = v69;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  uint64_t v52 = v72;
  uint64_t v51 = v73;
  uint64_t v53 = v66;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_467710;
  swift_beginAccess();
  OUTLINED_FUNCTION_12();
  v55();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v53, v41);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v65, v51);
  OUTLINED_FUNCTION_11();
  v56();
  OUTLINED_FUNCTION_10_8();
  v57();
  return v54;
}

void *specialized _ArrayProtocol.filter(_:)(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  for (uint64_t i = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = 0;
    uint64_t v20 = v2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v21 = v2 & 0xC000000000000001;
    uint64_t v18 = i;
    uint64_t v19 = v2 + 32;
    while (1)
    {
      if (v21)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)(v20 + 16)) {
          goto LABEL_33;
        }
        id v5 = *(id *)(v19 + 8 * v4);
      }
      uint64_t v6 = v5;
      if (__OFADD__(v4++, 1)) {
        goto LABEL_34;
      }
      unint64_t v8 = outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(a2);
      if (v8) {
        break;
      }

LABEL_26:
      if (v4 == i) {
        goto LABEL_36;
      }
    }
    unint64_t v9 = v8;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (!v10)
      {
LABEL_24:
        swift_bridgeObjectRelease_n();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_24;
      }
    }
    if ((v9 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v9 + 32);
    }
    uint64_t v12 = v11;
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
    uint64_t v2 = static NSObject.== infix(_:_:)();

    if (v2)
    {
LABEL_14:

      swift_bridgeObjectRelease_n();
LABEL_25:
      uint64_t i = v18;
      goto LABEL_26;
    }
    if (v10 == 1) {
      goto LABEL_24;
    }
    uint64_t v13 = 5;
    while (1)
    {
      id v14 = (v9 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v9 + 8 * v13);
      uint64_t v2 = (uint64_t)v14;
      uint64_t v15 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      char v16 = static NSObject.== infix(_:_:)();

      if (v16) {
        goto LABEL_14;
      }
      ++v13;
      if (v15 == v10) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    ;
  }
LABEL_36:

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t StartCallConfirmIntentFlowStrategy.__allocating_init(delegate:startCallCATsSimple:displayTextCATsSimple:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 40) = 5;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  return result;
}

uint64_t PhonePersonAndVisualData.person.getter()
{
  return swift_retain();
}

uint64_t StartCallConfirmIntentFlowStrategy.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(*(void *)(v1 + 16) + direct field offset for StartCallRCHFlowDelegate.sharedGlobals, a1);
}

void StartCallConfirmIntentFlowStrategy.promptResponse.didset()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v4 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v1, v2, "#StartCallConfirmIntentFlowStrategy promptResponse: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void StartCallConfirmIntentFlowStrategy.promptResponse.setter(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 40) = a1;
  StartCallConfirmIntentFlowStrategy.promptResponse.didset();
}

uint64_t StartCallConfirmIntentFlowStrategy.init(delegate:startCallCATsSimple:displayTextCATsSimple:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 40) = 5;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  return v3;
}

uint64_t StartCallConfirmIntentFlowStrategy.actionForInput(_:confirmParameters:)@<X0>(uint64_t a1@<X8>)
{
  os_log_type_t v2 = v1;
  uint64_t v66 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_46_0();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v65 = (uint64_t *)((char *)&v64 - v9);
  OUTLINED_FUNCTION_36();
  uint64_t v64 = type metadata accessor for Parse.DirectInvocation();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_3_1();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_36();
  uint64_t v15 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_46_0();
  uint64_t v21 = v19 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v64 - v23;
  Input.parse.getter();
  uint64_t v25 = OUTLINED_FUNCTION_47_13();
  int v27 = v26(v25);
  if (v27 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_2;
  }
  if (v27 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v24, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v24, v64);
    uint64_t v37 = v65;
    static CommonDirectAction.from(_:)(v14, v65);
    uint64_t v38 = type metadata accessor for CommonDirectAction();
    if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38) != 1)
    {
      outlined init with copy of ConfirmationResponse?((uint64_t)v37, v7, &demangling cache variable for type metadata for CommonDirectAction?);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 6)
      {
        OUTLINED_FUNCTION_17_24();
        v1[40] = 0;
LABEL_28:
        StartCallConfirmIntentFlowStrategy.promptResponse.didset();
        OUTLINED_FUNCTION_10_8();
        v51();
        outlined destroy of UUID?((uint64_t)v37, &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_29;
      }
      if (EnumCaseMultiPayload == 7)
      {
        OUTLINED_FUNCTION_17_24();
        char v40 = 2;
LABEL_27:
        v1[40] = v40;
        goto LABEL_28;
      }
      _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3(v7, (void (*)(void))type metadata accessor for CommonDirectAction);
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    uint64_t v48 = OUTLINED_FUNCTION_25_0(v47, (uint64_t)static Logger.siriPhone);
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_8_2(v49))
    {
      unint64_t v50 = (uint8_t *)OUTLINED_FUNCTION_7_2();
      *(_WORD *)unint64_t v50 = 0;
      _os_log_impl(&dword_0, v48, (os_log_type_t)&unk_583000, "#StartCallConfirmIntentStrategy Unrecognized directInvocation", v50, 2u);
      OUTLINED_FUNCTION_6();
    }

    OUTLINED_FUNCTION_17_24();
    char v40 = 5;
    goto LABEL_27;
  }
  if (v27 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v41 = OUTLINED_FUNCTION_47_13();
    v42(v41);
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  if (v27 == enum case for Parse.uso(_:))
  {
LABEL_2:
    uint64_t v28 = OUTLINED_FUNCTION_47_13();
    v29(v28);
LABEL_3:
    OUTLINED_FUNCTION_57_10();
    v30();
    uint64_t v31 = v68;
    uint64_t v32 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 72))(v31, v32);
    Input.parse.getter();
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v33 + 192))(v70, v21);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    uint64_t v34 = v71;
    if (v71)
    {
      uint64_t v35 = v72;
      __swift_project_boxed_opaque_existential_1(v70, v71);
      char v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 64))(v34, v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    }
    else
    {
      outlined destroy of UUID?((uint64_t)v70, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      char v36 = 5;
    }
    OUTLINED_FUNCTION_17_24();
    v1[40] = v36;
    StartCallConfirmIntentFlowStrategy.promptResponse.didset();
    goto LABEL_29;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v43 = type metadata accessor for Logger();
  uint64_t v44 = OUTLINED_FUNCTION_25_0(v43, (uint64_t)static Logger.siriPhone);
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v45))
  {
    uint64_t v46 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v46 = 0;
    _os_log_impl(&dword_0, v44, (os_log_type_t)&unk_583000, "#StartCallConfirmIntentStrategy Unrecognized parse type", v46, 2u);
    OUTLINED_FUNCTION_6();
  }

  OUTLINED_FUNCTION_17_24();
  v1[40] = 5;
  StartCallConfirmIntentFlowStrategy.promptResponse.didset();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v15);
LABEL_29:
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v52 = type metadata accessor for Logger();
  __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 136315394;
    uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000024, 0x8000000000496C90, v67);
    uint64_t v56 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v55 + 12) = 2080;
    char v57 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 120))(v56);
    if (v57 == 5)
    {
      unint64_t v58 = 0xE300000000000000;
      uint64_t v59 = 7104878;
    }
    else
    {
      uint64_t v59 = PhoneCallConfirmation.rawValue.getter(v57);
      unint64_t v58 = v61;
    }
    uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v58, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v53, v54, "#StartCallConfirmIntentStrategy %s received response: %s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    uint64_t v60 = swift_release_n();
  }
  unsigned int v62 = (*(unsigned __int8 (**)(uint64_t))(*(void *)v2 + 120))(v60);
  if (v62 < 2) {
    return static ActionForInput.handle()();
  }
  if (v62 != 2) {
    return static ActionForInput.ignore()();
  }
  StartCallConfirmIntentFlowStrategy.cancelEmergencyCountdownTimer()();
  return static ActionForInput.cancel()();
}

uint64_t StartCallConfirmIntentFlowStrategy.parseConfirmationResponse(input:confirmParameters:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[5] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[6] = OUTLINED_FUNCTION_35();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[7] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  void *v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_22();
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 120))();
  if (v2 >= 3u)
  {
    uint64_t v8 = *(void **)(v0 + 48);
    *uint64_t v8 = 0;
    v8[1] = 0;
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v9);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3((uint64_t)v8, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(unsigned int *)*(&off_55D750 + (char)v2);
    uint64_t v5 = type metadata accessor for ConfirmationResponse();
    OUTLINED_FUNCTION_15();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(v3, v4, v5);
    __swift_storeEnumTagSinglePayload(v3, 0, 1, v5);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
    IntentResolutionRecord.intent.getter();
    type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
    ConfirmIntentAnswer.init(confirmationResponse:intent:)();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
  }
  return v7();
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmation(confirmParameters:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[6] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[7] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  OUTLINED_FUNCTION_48();
  *(void *)(v0 + 64) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v1 = (void *)IntentResolutionRecord.intent.getter();
  uint64_t v2 = (void *)IntentResolutionRecord.intentResponse.getter();
  uint64_t v3 = StartCallConfirmIntentFlowStrategy.shouldEnableFeatureOnResponseFramework(intent:intentResponse:)(v1, v2);

  *(void *)(v0 + 72) = IntentResolutionRecord.app.getter();
  *(void *)(v0 + 80) = IntentResolutionRecord.intent.getter();
  *(void *)(v0 + 88) = IntentResolutionRecord.intentResponse.getter();
  if (v3)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(v0 + 40) + 184)
                                          + **(int **)(**(void **)(v0 + 40) + 184));
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    *(void *)(v0 + 96) = v4;
    *uint64_t v4 = v5;
    v4[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmation(confirmParameters:);
    uint64_t v6 = OUTLINED_FUNCTION_39_14();
    return v10(v6);
  }
  else
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_31_2();
    *(void *)(v0 + 112) = v8;
    *uint64_t v8 = v9;
    v8[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmation(confirmParameters:);
    OUTLINED_FUNCTION_39_14();
    return StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = *(void **)(v3 + 80);

    swift_release();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v11();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = *(void **)(v3 + 80);

    swift_release();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v11();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 80);

  swift_release();
  *(void *)(v0 + 16) = v1;
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (!swift_dynamicCast())
  {
LABEL_7:
    swift_errorRelease();
    swift_willThrow();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_20_2();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v3 = *(void *)(v0 + 56);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3(v3, (void (*)(void))type metadata accessor for PhoneError);
    goto LABEL_7;
  }
  swift_errorRelease();
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3(v3, (void (*)(void))type metadata accessor for PhoneError);
  *(void *)(v0 + 128) = IntentResolutionRecord.app.getter();
  *(void *)(v0 + 136) = IntentResolutionRecord.intent.getter();
  *(void *)(v0 + 144) = IntentResolutionRecord.intentResponse.getter();
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v0 + 152) = v4;
  *uint64_t v4 = v5;
  v4[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmation(confirmParameters:);
  OUTLINED_FUNCTION_20_2();
  return StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v7 = *(void **)(v3 + 136);

    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_errorRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v0();
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = *(void **)(v0 + 136);

  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = *(void **)(v0 + 80);

  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

Swift::Bool __swiftcall StartCallConfirmIntentFlowStrategy.isEmergencyConfirmationEnabledOnRF()()
{
  void (*v1)(void *__return_ptr);
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Bool v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  void v19[4];
  void v20[4];
  void v21[4];

  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void (**)(void *__return_ptr))(v0 + 112);
  v1(v21);
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  uint64_t v2 = OUTLINED_FUNCTION_50_9();
  v3(v2);
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  if (dispatch thunk of DeviceState.isWatch.getter())
  {
    v1(v19);
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    uint64_t v4 = OUTLINED_FUNCTION_38();
    uint64_t v6 = v5(v4);
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 248))(v6);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    if ((v7 & 1) == 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      uint64_t v9 = (void *)OUTLINED_FUNCTION_25_0(v8, (uint64_t)static Logger.siriPhone);
      uint64_t v10 = static os_log_type_t.debug.getter();
      if (!OUTLINED_FUNCTION_1_34(v10))
      {
        uint64_t v13 = 0;
        goto LABEL_15;
      }
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      uint64_t v13 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_25_0(v14, (uint64_t)static Logger.siriPhone);
  uint64_t v15 = static os_log_type_t.debug.getter();
  if (!OUTLINED_FUNCTION_1_34(v15))
  {
    uint64_t v13 = 1;
    goto LABEL_15;
  }
  *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
  OUTLINED_FUNCTION_0_26(&dword_0, v16, v17, "#StartCallConfirmIntentFlowStrategy using RF for emergency confirmation");
  uint64_t v13 = 1;
LABEL_12:
  OUTLINED_FUNCTION_6();
LABEL_15:

  return v13;
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[84] = v0;
  v1[83] = v2;
  v1[82] = v3;
  v1[81] = v4;
  v1[80] = v5;
  uint64_t v6 = type metadata accessor for ContactConfirmationModel();
  v1[85] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[86] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for YesNoConfirmationModel();
  OUTLINED_FUNCTION_11_0(v7);
  v1[87] = OUTLINED_FUNCTION_35();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11_0(v8);
  v1[88] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for Locale();
  v1[89] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[90] = v10;
  v1[91] = OUTLINED_FUNCTION_35();
  uint64_t v11 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v11);
  v1[92] = OUTLINED_FUNCTION_35();
  uint64_t v12 = type metadata accessor for OutputGenerationManifest();
  v1[93] = v12;
  OUTLINED_FUNCTION_19_0(v12);
  v1[94] = v13;
  v1[95] = OUTLINED_FUNCTION_35();
  uint64_t v14 = type metadata accessor for PhoneError();
  v1[96] = v14;
  OUTLINED_FUNCTION_11_0(v14);
  v1[97] = OUTLINED_FUNCTION_35();
  uint64_t v15 = type metadata accessor for CATOption();
  OUTLINED_FUNCTION_11_0(v15);
  v1[98] = OUTLINED_FUNCTION_35();
  uint64_t v16 = type metadata accessor for NLContextUpdate();
  v1[99] = v16;
  OUTLINED_FUNCTION_19_0(v16);
  v1[100] = v17;
  v1[101] = swift_task_alloc();
  v1[102] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v18, v19, v20);
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  void *v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (**v42)(uint64_t, uint64_t);
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  os_log_type_t v49;
  _WORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  void *v56;
  uint64_t v58;
  os_log_type_t v59;
  _WORD *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v66;
  void *v67;
  void *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t);
  uint64_t v80;
  id v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  BOOL v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  id v93;
  uint64_t v94;
  void *v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  id v102;
  unint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106[2];
  uint64_t v107;

  uint64_t v107 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_7_2();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput: Building output using Response Framework..", v4, 2u);
    OUTLINED_FUNCTION_6();
  }
  uint64_t v5 = *(void **)(v0 + 664);
  uint64_t v6 = *(void **)(v0 + 656);

  if ((static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v6, v5) & 1) == 0)
  {
    uint64_t v31 = *(void **)(v0 + 664);
    specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
    specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
    NLContextUpdate.nluSystemDialogActs.setter();
    static DialogPhase.confirmation.getter();
    OutputGenerationManifest.init(dialogPhase:_:)();
    uint64_t v32 = [v31 confirmationReason];
    if (v32 != (id)_INStartCallIntentConfirmationReasonHasRestrictedContacts
      || (uint64_t v33 = outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(*(void **)(v0 + 664))) == 0
      || (v33 >> 62
        ? (uint64_t v34 = _CocoaArrayWrapper.endIndex.getter())
        : (uint64_t v34 = *(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8))),
          swift_bridgeObjectRelease(),
          !v34))
    {
      uint64_t v48 = (void *)Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_18(v49))
      {
        unint64_t v50 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_32_2(v50);
        OUTLINED_FUNCTION_25_4(&dword_0, v51, v52, "StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput return intentConfirmation dialog");
        OUTLINED_FUNCTION_6();
      }
      uint64_t v53 = *(void **)(v0 + 656);

      os_log_type_t v54 = v53;
      specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
      *(void *)(v0 + 920) = v55;
      uint64_t v56 = (void *)swift_task_alloc();
      *(void *)(v0 + 928) = v56;
      *uint64_t v56 = v0;
      v56[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
      OUTLINED_FUNCTION_28_3();
      __asm { BRAA            X2, X16 }
    }
    uint64_t v35 = *(void **)(v0 + 664);
    type metadata accessor for PhonePersonList.Builder();
    char v36 = swift_allocObject();
    uint64_t v37 = _swiftEmptyArrayStorage;
    *(void *)(v36 + 16) = _swiftEmptyArrayStorage;
    uint64_t v38 = outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(v35);
    if (!v38)
    {
      uint64_t v67 = _swiftEmptyArrayStorage;
      goto LABEL_46;
    }
    uint64_t v39 = v38;
    v106[0] = (uint64_t)_swiftEmptyArrayStorage;
    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      char v40 = _CocoaArrayWrapper.endIndex.getter();
      if (v40) {
        goto LABEL_20;
      }
    }
    else
    {
      char v40 = *(void *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v40)
      {
LABEL_20:
        uint64_t v99 = v36;
        uint64_t result = type metadata accessor for PhonePerson(0);
        if (v40 < 1)
        {
          __break(1u);
          goto LABEL_73;
        }
        uint64_t v41 = 0;
        uint64_t v100 = v39 & 0xC000000000000001;
        uint64_t v42 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 720) + 8);
        uint64_t v103 = v39;
        do
        {
          if (v100) {
            uint64_t v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v43 = *(id *)(v39 + 8 * v41 + 32);
          }
          uint64_t v44 = v43;
          os_log_type_t v45 = *(void *)(v0 + 728);
          uint64_t v46 = *(void *)(v0 + 712);
          static Device.current.getter();
          __swift_project_boxed_opaque_existential_1((void *)(v0 + 176), *(void *)(v0 + 200));
          dispatch thunk of DeviceState.siriLocale.getter();
          __swift_destroy_boxed_opaque_existential_1(v0 + 176);
          uint64_t v47 = static PhonePerson.make(phonePerson:options:locale:)(v44, 0, v45);
          (*v42)(v45, v46);

          if (v47)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((char *)&dword_10 + (v106[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                               + (v106[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
              OUTLINED_FUNCTION_59_8();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          ++v41;
          uint64_t v39 = v103;
        }
        while (v40 != v41);
        swift_bridgeObjectRelease();
        uint64_t v67 = (void *)v106[0];
        uint64_t v37 = _swiftEmptyArrayStorage;
        char v36 = v99;
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v67 = _swiftEmptyArrayStorage;
LABEL_45:
    swift_bridgeObjectRelease();
LABEL_46:
    uint64_t v68 = *(void **)(v0 + 656);
    swift_beginAccess();
    *(void *)(v36 + 16) = v67;
    swift_bridgeObjectRelease();
    type metadata accessor for PhonePersonList();
    swift_allocObject();
    *(void *)(v0 + 840) = PhonePersonList.init(builder:)(v36);
    uint64_t v69 = outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v68);
    if (!v69)
    {
      uint64_t v71 = swift_allocObject();
      uint64_t v70 = 0;
      *(void *)(v71 + 16) = _swiftEmptyArrayStorage;
      goto LABEL_64;
    }
    uint64_t v70 = (unint64_t)specialized _ArrayProtocol.filter(_:)(v69, *(id *)(v0 + 664));
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = _swiftEmptyArrayStorage;
    v106[0] = (uint64_t)_swiftEmptyArrayStorage;
    if (v70 >> 62)
    {
      OUTLINED_FUNCTION_58_10();
      uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
      if (v72)
      {
LABEL_49:
        uint64_t v98 = v71;
        uint64_t result = type metadata accessor for PhonePerson(0);
        if (v72 >= 1)
        {
          uint64_t v73 = 0;
          uint64_t v101 = v70 & 0xC000000000000001;
          uint64_t v104 = (void *)v70;
          do
          {
            if (v101) {
              uint64_t v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v74 = *(id *)(v70 + 8 * v73 + 32);
            }
            uint64_t v75 = v74;
            uint64_t v76 = *(void *)(v0 + 728);
            static Device.current.getter();
            __swift_project_boxed_opaque_existential_1((void *)(v0 + 496), *(void *)(v0 + 520));
            dispatch thunk of DeviceState.siriLocale.getter();
            __swift_destroy_boxed_opaque_existential_1(v0 + 496);
            uint64_t v77 = static PhonePerson.make(phonePerson:options:locale:)(v75, 0, v76);
            uint64_t v78 = OUTLINED_FUNCTION_38();
            v79(v78);

            if (v77)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((char *)&dword_10 + (v106[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                                 + (v106[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
                OUTLINED_FUNCTION_59_8();
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            ++v73;
            uint64_t v70 = (unint64_t)v104;
          }
          while (v72 != v73);
          swift_bridgeObjectRelease();
          uint64_t v37 = (void *)v106[0];
          uint64_t v71 = v98;
          goto LABEL_63;
        }
LABEL_73:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v72 = *(void *)((char *)&dword_10 + (v70 & 0xFFFFFFFFFFFFFF8));
      OUTLINED_FUNCTION_58_10();
      if (v72) {
        goto LABEL_49;
      }
    }
    swift_bridgeObjectRelease();
LABEL_63:
    swift_bridgeObjectRelease();
LABEL_64:
    swift_beginAccess();
    *(void *)(v71 + 16) = v37;
    swift_bridgeObjectRelease();
    swift_allocObject();
    *(void *)(v0 + 848) = PhonePersonList.init(builder:)(v71);
    if (v70)
    {
      uint64_t v80 = v0 + 536;
      uint64_t v81 = *(id *)(v0 + 664);
      OUTLINED_FUNCTION_58_10();
      uint64_t v82 = v81;
      uint64_t v83 = Logger.logObject.getter();
      uint64_t v84 = static os_log_type_t.debug.getter();
      uint64_t v85 = OUTLINED_FUNCTION_18(v84);
      uint64_t v86 = *(void **)(v0 + 664);
      if (v85)
      {
        uint64_t v87 = swift_slowAlloc();
        v106[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v87 = 136315394;
        *(void *)(v0 + 632) = outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(v86);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
        uint64_t v88 = String.init<A>(describing:)();
        *(void *)(v0 + 616) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v89, v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        *(_WORD *)(v87 + 12) = 2080;
        type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
        swift_bridgeObjectRetain();
        uint64_t v90 = Array.description.getter();
        uint64_t v92 = v91;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 624) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v92, v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v83, (os_log_type_t)v71, "Some contacts are restricted: %s. User needs to confirm by Yes/No the updated contacts: %s", (uint8_t *)v87, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_6();
        uint64_t v80 = v0 + 536;
        OUTLINED_FUNCTION_6();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      *(void *)(v0 + 560) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
      *(void *)(v0 + 536) = v70;
      NSObject.update(with:at:)(v80, 0x73746361746E6F63, 0xE800000000000000);
      __swift_destroy_boxed_opaque_existential_1(v80);
    }
    uint64_t v93 = *(id *)(v0 + 656);
    specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
    *(void *)(v0 + 856) = v94;
    swift_retain();
    swift_retain();
    uint64_t v95 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v95;
    NSObject *v95 = v0;
    v95[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_28_3();
    __asm { BRAA            X4, X16 }
  }
  uint64_t v7 = (*(uint64_t (**)(void))(**(void **)(v0 + 672) + 176))();
  uint64_t v8 = (void *)Logger.logObject.getter();
  if ((v7 & 1) == 0)
  {
    uint64_t v59 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_18(v59))
    {
      uint64_t v60 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_32_2(v60);
      OUTLINED_FUNCTION_25_4(&dword_0, v61, v62, "#StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput: the emergency confirmation dialog hasn't been migrated to Response Framework yet!");
      OUTLINED_FUNCTION_6();
    }
    unint64_t v63 = *(void **)(v0 + 776);

    *unint64_t v63 = 0xD000000000000032;
    v63[1] = 0x8000000000496CC0;
    v63[2] = 0xD000000000000044;
    v63[3] = 0x8000000000496D00;
    v63[4] = 0xD00000000000003BLL;
    v63[5] = 0x8000000000496D50;
    v63[6] = 121;
    swift_storeEnumTagMultiPayload();
    _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, (void (*)(uint64_t))type metadata accessor for PhoneError);
    swift_allocError();
    PhoneError.logged()(v64);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3((uint64_t)v63, (void (*)(void))type metadata accessor for PhoneError);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_28_3();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v9 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_18(v9))
  {
    uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v10);
    OUTLINED_FUNCTION_25_4(&dword_0, v11, v12, "#StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput: Using the RF2.0 emergency countdown with nlContextUpdate");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v13 = *(void *)(v0 + 672);
  uint64_t v14 = *(void **)(v0 + 664);
  uint64_t v15 = *(void **)(v0 + 656);
  uint64_t v105 = *(void *)(v0 + 648);

  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
  specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter();
  uint64_t v16 = *(uint64_t (**)(void))(*(void *)v13 + 112);
  swift_retain();
  uint64_t v102 = v15;
  uint64_t v17 = v14;
  OUTLINED_FUNCTION_43_14();
  uint64_t v18 = v16();
  ((void (*)(uint64_t))v16)(v18);
  uint64_t v20 = *(void *)(v0 + 240);
  uint64_t v19 = *(void *)(v0 + 248);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 216), v20);
  (*(void (**)(uint64_t, uint64_t))(v19 + 136))(v20, v19);
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 448);
  uint64_t v23 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 416), v21);
  *(void *)(v0 + 104) = v21;
  *(void *)(v0 + 112) = *(void *)(v22 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 80));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(boxed_opaque_existential_1, v23, v21);
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v25 = CATWrapperSimple.__allocating_init(options:globals:)();
  type metadata accessor for PhoneCallDisplayTextCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v26 = CATWrapperSimple.__allocating_init(options:globals:)();
  *(void *)(v0 + 16) = v105;
  *(void *)(v0 + 24) = v102;
  *(void *)(v0 + 32) = v17;
  outlined init with take of AppSelectionSignalComponent((long long *)(v0 + 256), v0 + 40);
  *(void *)(v0 + 120) = v25;
  *(void *)(v0 + 128) = v26;
  __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v0 + 824) = v27;
  void *v27 = v28;
  v27[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_28_3();
  return EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 832) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  *(void *)(v7 + 872) = v6;
  *(void *)(v7 + 880) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_20_2();
  return _swift_task_switch(v8, v9, v10);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = v0[99];
  uint64_t v2 = v0[88];
  OUTLINED_FUNCTION_12();
  v3();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v1);
  OutputGenerationManifest.nlContextUpdate.setter();
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v0[111] = v4;
  *uint64_t v4 = v5;
  v4[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  uint64_t v6 = v0[87];
  return StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 896) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 376;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;

  uint64_t v10 = *(void *)(v0 + 808);
  uint64_t v1 = *(void *)(v0 + 800);
  uint64_t v2 = *(void *)(v0 + 792);
  uint64_t v3 = *(void *)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 752);
  uint64_t v5 = *(void *)(v0 + 744);
  uint64_t v6 = *(void *)(v0 + 696);
  uint64_t v7 = *(void *)(v0 + 688);

  swift_release();
  swift_release();
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3(v7, (void (*)(void))type metadata accessor for ContactConfirmationModel);
  _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3(v6, (void (*)(void))type metadata accessor for YesNoConfirmationModel);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v10, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  __swift_destroy_boxed_opaque_existential_1(v0 + 296);
  OUTLINED_FUNCTION_10_35();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v8();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_11_20();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v2;
  *(void *)(v4 + 936) = v0;
  swift_task_dealloc();
  swift_release();
  if (!v0) {
    *(void *)(v4 + 944) = v1;
  }
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_20_2();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_55_9();
  uint64_t v12 = OUTLINED_FUNCTION_79_2();
  v13(v12);
  OUTLINED_FUNCTION_10_35();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_4_3();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  void (*v15)(void);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_41_11(*(void **)(v12 + 944));
  uint64_t v13 = OUTLINED_FUNCTION_51_9();
  v14(v13);
  OUTLINED_FUNCTION_10_8();
  v15();
  __swift_destroy_boxed_opaque_existential_1(v12 + 136);
  __swift_destroy_boxed_opaque_existential_1(v12 + 456);
  OUTLINED_FUNCTION_10_35();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_4_3();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_55_9();
  uint64_t v12 = OUTLINED_FUNCTION_79_2();
  v13(v12);
  OUTLINED_FUNCTION_3_68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

{
  void (*v12)(void);
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_10_8();
  v12();
  uint64_t v13 = OUTLINED_FUNCTION_38();
  v14(v13);
  OUTLINED_FUNCTION_3_68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  void (*v15)(void);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_41_11(*(void **)(v12 + 872));
  swift_release();
  swift_release();
  uint64_t v13 = OUTLINED_FUNCTION_51_9();
  v14(v13);
  OUTLINED_FUNCTION_10_8();
  v15();
  OUTLINED_FUNCTION_3_68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

{
  void *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  (*(void (**)(void, void))(v12[94] + 8))(v12[95], v12[93]);
  uint64_t v13 = OUTLINED_FUNCTION_79_2();
  v14(v13);
  OUTLINED_FUNCTION_3_68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38_7();
  OUTLINED_FUNCTION_4_3();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_48();
  uint64_t v11 = (void *)v10[109];
  uint64_t v12 = (void *)v10[86];
  uint64_t v13 = (int *)v10[85];
  _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_0(v10[87], (uint64_t)v12 + v13[6], (void (*)(void))type metadata accessor for YesNoConfirmationModel);
  void *v12 = 0xD000000000000013;
  v12[1] = 0x8000000000491270;
  long long v12[2] = 0;
  void v12[3] = 0;
  uint64_t v14 = (char *)v12 + v13[7];
  v14[64] = 0;
  *((_OWORD *)v14 + 2) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  uint64_t v15 = (void *)((char *)v12 + v13[8]);
  *uint64_t v15 = 0;
  v15[1] = 0;
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_57_10();
  v16();
  uint64_t v17 = v10[40];
  uint64_t v18 = v10[41];
  __swift_project_boxed_opaque_existential_1(v10 + 37, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 136))(v17, v18);
  uint64_t v19 = v10[45];
  uint64_t v20 = v10[46];
  __swift_project_boxed_opaque_existential_1(v10 + 42, v19);
  v10[50] = type metadata accessor for PhoneSnippetDataModels();
  v10[51] = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 47);
  _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_0((uint64_t)v12, (uint64_t)boxed_opaque_existential_1, (void (*)(void))type metadata accessor for ContactConfirmationModel);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_46A030;
  *(void *)(v22 + 32) = v11;
  uint64_t v32 = v22;
  specialized Array._endMutation()();
  v10[113] = v32;
  uint64_t v23 = *(void *)(v20 + 8);
  id v24 = v11;
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v10[114] = v27;
  void *v27 = v28;
  v27[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  uint64_t v29 = v10[95];
  uint64_t v30 = v10[80];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v30, v10 + 47, v32, v29, v19, v23, v25, v26, a9, a10);
}

{
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void);
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  uint64_t v11 = (void *)v10[118];
  uint64_t v12 = v10[99];
  uint64_t v13 = v10[88];
  OUTLINED_FUNCTION_12();
  v14();
  __swift_storeEnumTagSinglePayload(v13, 0, 1, v12);
  OutputGenerationManifest.nlContextUpdate.setter();
  OUTLINED_FUNCTION_57_10();
  v15();
  uint64_t v16 = v10[60];
  uint64_t v17 = v10[61];
  __swift_project_boxed_opaque_existential_1(v10 + 57, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 136))(v16, v17);
  uint64_t v18 = v10[20];
  uint64_t v19 = v10[21];
  __swift_project_boxed_opaque_existential_1(v10 + 17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_46A030;
  *(void *)(v20 + 32) = v11;
  uint64_t v31 = v20;
  specialized Array._endMutation()();
  v10[119] = v31;
  uint64_t v21 = *(void *)(v19 + 8);
  uint64_t v22 = v11;
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  v10[120] = v26;
  *uint64_t v26 = v27;
  v26[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  uint64_t v28 = v10[95];
  uint64_t v29 = v10[80];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v29, v31, v28, v18, v21, v23, v24, v25, a9, a10);
}

uint64_t closure #1 in StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)()
{
  return OutputGenerationManifest.printSupportingDialogInDisplayModes.setter();
}

uint64_t StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[31] = v2;
  v1[32] = v0;
  v1[29] = v3;
  v1[30] = v4;
  v1[28] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v1[33] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[34] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for TemplatingResult();
  v1[35] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[36] = v8;
  v1[37] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 320) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 344) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  long long v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = *(void *)(v0 + 256);
  *(void *)(v0 + 352) = *(void *)(v0 + 216);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 360) = v2;
  uint64_t v3 = *(_OWORD *)(v0 + 240);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v0 + 368) = v4;
  *uint64_t v4 = v5;
  v4[1] = StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_38_15();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t (*v9)(void);
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  uint64_t v12 = *(void *)(v0 + 272);
  uint64_t v11 = *(uint64_t **)(v0 + 224);
  uint64_t v1 = *(void (**)(void))(**(void **)(v0 + 256) + 112);
  OUTLINED_FUNCTION_43_14();
  v1();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v2 = OUTLINED_FUNCTION_44_15();
  v3(v2);
  OUTLINED_FUNCTION_43_14();
  v1();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
  uint64_t v4 = OUTLINED_FUNCTION_44_15();
  v5(v4);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), *(void *)(v0 + 160));
  OUTLINED_FUNCTION_38();
  dispatch thunk of DeviceState.isTextToSpeechEnabled.getter();
  TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(1);
  uint64_t v6 = type metadata accessor for AceOutput();
  *(_OWORD *)(v0 + 192) = 0u;
  *(void *)(v0 + 208) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  v11[3] = v6;
  v11[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v11);
  static AceOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + 176, &demangling cache variable for type metadata for FlowActivity?);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  outlined destroy of UUID?(v12, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_11();
  v8(v7);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v9();
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_18_3();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_25_0(v13, (uint64_t)static Logger.siriPhone);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_18(v15))
  {
    uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v16);
    OUTLINED_FUNCTION_25_4(&dword_0, v17, v18, "#StartCallConfirmIntentFlowStrategy makeLegacyPromptForConfirmationOutput: Building the legacy output..");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v20 = *(void *)(v12 + 248);
  uint64_t v19 = *(void *)(v12 + 256);
  long long v33 = *(_OWORD *)(v12 + 232);

  uint64_t v21 = swift_task_alloc();
  *(void *)(v12 + 304) = v21;
  *(void *)(v21 + 16) = v19;
  *(_OWORD *)(v21 + 24) = v33;
  *(void *)(v21 + 40) = v20;
  swift_task_alloc();
  OUTLINED_FUNCTION_31_2();
  *(void *)(v12 + 312) = v22;
  *uint64_t v22 = v23;
  v22[1] = StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_38_15();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  long long v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;

  OUTLINED_FUNCTION_16_1();
  uint64_t v14 = *(void *)(v12 + 248);
  uint64_t v13 = *(void *)(v12 + 256);
  os_log_type_t v15 = swift_task_alloc();
  *(void *)(v12 + 328) = v15;
  uint64_t v16 = *(_OWORD *)(v12 + 232);
  *(void *)(v15 + 16) = v13;
  *(_OWORD *)(v15 + 24) = v16;
  *(void *)(v15 + 40) = v14;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v12 + 336) = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v17 = v12;
  v17[1] = StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v12 + 216, 0, 0, 0xD000000000000041, 0x8000000000496E00, partial apply for closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:), v15, v18, a9, a10, a11, a12);
}

uint64_t closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  dispatch thunk of DucTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:)();
  swift_release();
  return swift_release();
}

uint64_t closure #1 in closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TemplatingResult();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  outlined init with copy of ConfirmationResponse?(a1, (uint64_t)v8, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10[1] = *v8;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v3 + 32))(v5, v8, v2);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  dispatch thunk of BaseRCHFlowDelegate.makeAceViewProvider()();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  dispatch thunk of DefaultAceViewProvider.makeAceViewsForConfirmIntentWithUser(app:intent:intentResponse:_:)();
  swift_release();
  return swift_release();
}

uint64_t closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  dispatch thunk of BaseRCHFlowDelegate.makeNLContextProvider()();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  dispatch thunk of DefaultNLContextProvider.makeContextForConfirmIntent(intent:confirmIntentResponse:_:)();
  swift_release();
  return swift_release();
}

uint64_t closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v2 - 8);
  outlined init with copy of ConfirmationResponse?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
  return CheckedContinuation.resume(returning:)();
}

uint64_t StartCallConfirmIntentFlowStrategy.shouldEnableFeatureOnResponseFramework(intent:intentResponse:)(void *a1, void *a2)
{
  if ((static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(a1, a2) & 1) == 0) {
    return 1;
  }
  OUTLINED_FUNCTION_22();
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 176);

  return v3();
}

void StartCallConfirmIntentFlowStrategy.cancelEmergencyCountdownTimer()()
{
  uint64_t v1 = type metadata accessor for EmergencyCountdownModel();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_57_10();
  v2();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  uint64_t v3 = OUTLINED_FUNCTION_50_9();
  v4(v3);
  specialized UpdateResponseCommand<>.submitUpdate(to:aceServiceInvoker:)(v1, (uint64_t)&protocol witness table for EmergencyCountdownModel, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = OUTLINED_FUNCTION_25_0(v5, (uint64_t)static Logger.siriPhone);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_8_2(v7))
  {
    uint64_t v8 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_32_2(v8);
    _os_log_impl(&dword_0, v6, v0, "#StartCallConfirmIntentFlowStrategy sent update command to cancel countdown timer", 0, 2u);
    OUTLINED_FUNCTION_6();
  }
}

uint64_t StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(uint64_t a1)
{
  *(void *)(v2 + 1376) = v1;
  *(void *)(v2 + 1368) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

uint64_t StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  *(void *)(v0 + 1384) = static SiriPhoneActionFactory.makeConfirmAndRejectActions()();
  *(void *)(v0 + 1392) = v1;
  swift_retain_n();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1352, StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(), v0 + 1296);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  v1[175] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2);
  }
  else
  {
    v1[176] = v1[169];
    v1[177] = v1[170];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 167, StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(), v1 + 162);
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(void *)(v1 + 1424) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
  }
  else {
    return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
  }
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_48();
  uint64_t v1 = (void *)v0[174];
  uint64_t v2 = (void *)v0[173];
  uint64_t v3 = v0[171];
  swift_bridgeObjectRetain();
  v1;
  YesNoConfirmationModel.init(yesText:yesAction:noText:noAction:)(v2, v3);
  OUTLINED_FUNCTION_4_3();
  return _swift_asyncLet_finish(v4);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_22_10();
  uint64_t v0 = OUTLINED_FUNCTION_41_4();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = *(void **)(v0 + 1392);

  swift_release_n();
  OUTLINED_FUNCTION_6_0();
  return v2();
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_22_10();
  uint64_t v0 = OUTLINED_FUNCTION_41_4();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 1392);

  swift_release_n();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_22_10();
  uint64_t v0 = OUTLINED_FUNCTION_41_4();
  return _swift_asyncLet_finish(v0);
}

{
  return OUTLINED_FUNCTION_21_1((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 1392);

  swift_release_n();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(), 0, 0);
}

uint64_t implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void **)(v0[3] + 32);
  uint64_t v3 = type metadata accessor for SpeakableString();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  os_log_type_t v7 = (uint64_t (*)(uint64_t))(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                   + *v2
                                                   + 40)
                                       + **(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + *v2
                                                  + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel();
  uint64_t v5 = v0[4];
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_11_20();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  os_log_type_t v7 = *(void *)(v3 + 32);
  if (!v0) {
    *(void *)(v5 + 56) = v1;
  }
  outlined destroy of UUID?(v7, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_20_2();
  return _swift_task_switch(v8, v9, v10);
}

void implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v4 = v3;
  swift_release();
  *uint64_t v1 = v2;
  v1[1] = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_20_2();
  __asm { BRAA            X1, X16 }
}

uint64_t implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(), 0, 0);
}

uint64_t implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple
               + **(void **)(*(void *)(v0 + 24) + 32)
               + 56);
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel();
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  os_log_type_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v11, v12, v13);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v4 = v3;
  swift_release();
  *uint64_t v1 = v2;
  v1[1] = v4;
  OUTLINED_FUNCTION_6_0();
  return v5();
}

uint64_t StartCallConfirmIntentFlowStrategy.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t StartCallConfirmIntentFlowStrategy.__deallocating_deinit()
{
  StartCallConfirmIntentFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.actionForInput(_:confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.parseConfirmationResponse(input:confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v3 + 160)
                                                          + **(int **)(**(void **)v3 + 160));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v10(a1, a2, a3);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makePromptForConfirmation(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)v2 + 168)
                                                + **(int **)(**(void **)v2 + 168));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v8(a1, a2);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeRepromptOnEmptyParse(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ConfirmIntentFlowStrategyAsync.makeRepromptOnEmptyParse(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeRepromptOnLowConfidence(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ConfirmIntentFlowStrategyAsync.makeRepromptOnLowConfidence(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeConfirmationRejectedResponse(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ConfirmIntentFlowStrategyAsync.makeConfirmationRejectedResponse(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeFlowCancelledResponse(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return ConfirmIntentFlowStrategyAsync.makeFlowCancelledResponse(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeErrorResponse(error:confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ConfirmIntentFlowStrategyAsync.makeErrorResponse(error:confirmParameters:)(a1, a2, a3, v11, a5);
}

uint64_t _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = OUTLINED_FUNCTION_74();
  v5(v4);
  return a2;
}

uint64_t _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_3(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

uint64_t outlined destroy of EmergencyCountdownOutputBuilder(uint64_t a1)
{
  return a1;
}

uint64_t sub_219F88@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 120))();
  *a1 = result;
  return result;
}

void sub_219FD0(char *a1)
{
}

uint64_t type metadata accessor for StartCallConfirmIntentFlowStrategy()
{
  return self;
}

uint64_t partial apply for implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.deleteVoicemail();
  return implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(v3, v0);
}

uint64_t partial apply for implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(v3, v0);
}

uint64_t partial apply for closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  return closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(a1);
}

uint64_t partial apply for closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  return closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(a1);
}

uint64_t partial apply for closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  return closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(a1);
}

uint64_t sub_21A170()
{
  return objectdestroyTm_13(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
}

uint64_t partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(a1, &demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>, (uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:));
}

uint64_t sub_21A19C()
{
  return objectdestroyTm_13(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
}

uint64_t sub_21A1A8()
{
  return objectdestroyTm_13(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

uint64_t objectdestroyTm_13(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_15();
  v2 += 8;
  uint64_t v3 = *(unsigned __int8 *)(v2 + 72);
  uint64_t v4 = ((v3 + 16) & ~v3) + *(void *)(v2 + 56);
  uint64_t v5 = v3 | 7;
  OUTLINED_FUNCTION_11();
  v6();

  return _swift_deallocObject(v1, v4, v5);
}

uint64_t partial apply for closure #1 in closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(a1, &demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>, (uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:));
}

uint64_t partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_13(v5);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, v7);
}

uint64_t OUTLINED_FUNCTION_3_68()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_10_35()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_24()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_31_19()
{
  uint64_t v1 = 0x2E65756C61562ELL;
  unint64_t v2 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_39_14()
{
  return *(void *)(v0 + 24);
}

void OUTLINED_FUNCTION_41_11(void *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_44_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_9()
{
  return outlined destroy of EmergencyCountdownOutputBuilder(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_58_10()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_59_8()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t UnsupportedSearchParametersFlowStrategy.__allocating_init(app:sharedGlobals:isMissed:isLatest:isVoicemail:contact:searchCallHistorySharedGlobals:searchCallHistoryCATsSimple:)()
{
  OUTLINED_FUNCTION_7_55();
  uint64_t v0 = swift_allocObject();
  UnsupportedSearchParametersFlowStrategy.init(app:sharedGlobals:isMissed:isLatest:isVoicemail:contact:searchCallHistorySharedGlobals:searchCallHistoryCATsSimple:)();
  return v0;
}

uint64_t UnsupportedSearchParametersFlowStrategy.init(app:sharedGlobals:isMissed:isLatest:isVoicemail:contact:searchCallHistorySharedGlobals:searchCallHistoryCATsSimple:)()
{
  OUTLINED_FUNCTION_7_55();
  *(void *)(v1 + 296) = type metadata accessor for UnsupportedSearchParametersFlowStrategy();
  *(void *)(v1 + 304) = &outlined read-only object #0 of UnsupportedSearchParametersFlowStrategy.init(app:sharedGlobals:isMissed:isLatest:isVoicemail:contact:searchCallHistorySharedGlobals:searchCallHistoryCATsSimple:);
  *(void *)(v1 + 312) = 0;
  *(void *)(v1 + 320) = 0;
  *(unsigned char *)(v1 + 264) = v6;
  *(unsigned char *)(v1 + 265) = v5;
  *(unsigned char *)(v1 + 266) = v4;
  *(void *)(v1 + 272) = v3;
  *(void *)(v1 + 280) = v8;
  outlined init with copy of SignalProviding((uint64_t)v7, v1 + 24);
  type metadata accessor for YesNoConfirmationParser();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(v7, v9 + 24);
  *(void *)(v1 + 16) = v9;
  memcpy((void *)(v1 + 64), v2, 0xC8uLL);
  *(void *)(v1 + 288) = v0;
  return v1;
}

uint64_t type metadata accessor for UnsupportedSearchParametersFlowStrategy()
{
  return self;
}

uint64_t UnsupportedSearchParametersFlowStrategy.actionForInput(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(**(void **)(v1 + 16) + 128))(a1);
  uint64_t v7 = type metadata accessor for ConfirmationResponse();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  outlined destroy of ConfirmationResponse?((uint64_t)v6);
  if (EnumTagSinglePayload == 1) {
    return static ActionForInput.ignore()();
  }
  else {
    return static ActionForInput.handle()();
  }
}

uint64_t UnsupportedSearchParametersFlowStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)UnsupportedSearchParametersFlowStrategy.makePromptForConfirmation(itemToConfirm:));
}

#error "21A79C: call analysis failed (funcsize=93)"

uint64_t UnsupportedSearchParametersFlowStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

uint64_t UnsupportedSearchParametersFlowStrategy.makeConfirmationRejectedResponse()(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)UnsupportedSearchParametersFlowStrategy.makeConfirmationRejectedResponse());
}

#error "21AA58: call analysis failed (funcsize=151)"

uint64_t UnsupportedSearchParametersFlowStrategy.makePromptForYesNoResponse()(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)UnsupportedSearchParametersFlowStrategy.makePromptForYesNoResponse());
}

#error "21AC9C: call analysis failed (funcsize=93)"

uint64_t UnsupportedSearchParametersFlowStrategy.parseConfirmationResponse(input:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = type metadata accessor for PhoneError();
  v1[5] = v4;
  OUTLINED_FUNCTION_11_0(v4);
  v1[6] = OUTLINED_FUNCTION_35();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;

  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  (*(void (**)(void))(**(void **)(v0[4] + 16) + 128))(v0[3]);
  outlined init with copy of ConfirmationResponse?(v1, v2);
  uint64_t v3 = type metadata accessor for ConfirmationResponse();
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) != 1)
  {
    uint64_t v4 = v0[8];
    outlined init with copy of ConfirmationResponse?(v0[9], v4);
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v3);
    if (v6 == enum case for ConfirmationResponse.confirmed(_:)
      || v6 == enum case for ConfirmationResponse.rejected(_:))
    {
      uint64_t v9 = v0[9];
      uint64_t v8 = v0[10];
      uint64_t v10 = v0[7];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v10, v6, v3);
      __swift_storeEnumTagSinglePayload(v10, 0, 1, v3);
      SimpleConfirmationResponseProvider.init(_:)();
      outlined destroy of ConfirmationResponse?(v8);
      outlined destroy of ConfirmationResponse?(v9);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_6_0();
      goto LABEL_9;
    }
    (*(void (**)(void, uint64_t))(v5 + 8))(v0[8], v3);
  }
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[10];
  uint64_t v14 = (void *)v0[6];
  *uint64_t v14 = 0;
  v14[1] = 0;
  swift_storeEnumTagMultiPayload();
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_7((unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError, 255, (void (*)(uint64_t))type metadata accessor for PhoneError);
  swift_allocError();
  PhoneError.logged()(v15);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PhoneError);
  swift_willThrow();
  outlined destroy of ConfirmationResponse?(v13);
  outlined destroy of ConfirmationResponse?(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
LABEL_9:
  return v11();
}

uint64_t UnsupportedSearchParametersFlowStrategy.executePatternAndManifest()()
{
  OUTLINED_FUNCTION_1_0();
  v1[32] = v2;
  v1[33] = v0;
  uint64_t v3 = type metadata accessor for DialogPhase();
  OUTLINED_FUNCTION_11_0(v3);
  v1[34] = OUTLINED_FUNCTION_35();
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  v1[35] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[36] = v5;
  v1[37] = OUTLINED_FUNCTION_35();
  uint64_t v6 = type metadata accessor for PhoneSnippetDataModels();
  v1[38] = v6;
  OUTLINED_FUNCTION_11_0(v6);
  v1[39] = OUTLINED_FUNCTION_35();
  uint64_t v7 = type metadata accessor for CommonDirectAction();
  v1[40] = v7;
  OUTLINED_FUNCTION_11_0(v7);
  v1[41] = OUTLINED_FUNCTION_35();
  uint64_t v8 = type metadata accessor for YesNoConfirmationModel();
  v1[42] = v8;
  OUTLINED_FUNCTION_11_0(v8);
  v1[43] = OUTLINED_FUNCTION_35();
  uint64_t v9 = type metadata accessor for Locale();
  v1[44] = v9;
  OUTLINED_FUNCTION_19_0(v9);
  v1[45] = v10;
  v1[46] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  uint64_t v1 = v0[45];
  uint64_t v2 = v0[46];
  uint64_t v12 = v0[44];
  uint64_t v3 = v0[33];
  type metadata accessor for PhonePerson(0);
  uint64_t v4 = *(void **)(v3 + 272);
  static Device.current.getter();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  dispatch thunk of DeviceState.siriLocale.getter();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v5 = static PhonePerson.make(phonePerson:options:locale:)(v4, 0, v2);
  v0[47] = v5;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v12);
  outlined init with copy of SignalProviding(v3 + 144, (uint64_t)(v0 + 7));
  uint64_t v6 = *(void **)(v3 + 288);
  v0[48] = v6;
  uint64_t v7 = *(unsigned __int8 *)(v3 + 266);
  uint64_t v8 = *(unsigned __int8 *)(v3 + 264);
  uint64_t v9 = *(unsigned __int8 *)(v3 + 265);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(class metadata base offset for SearchCallHistoryCATsSimple
                                                                               + *v6
                                                                               + 528)
                                                                   + **(int **)(class metadata base offset for SearchCallHistoryCATsSimple
                                                                              + *v6
                                                                              + 528));
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[49] = v10;
  *uint64_t v10 = v0;
  v10[1] = UnsupportedSearchParametersFlowStrategy.executePatternAndManifest();
  return v13(v7, v8, v9, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 400) = v5;
  *(void *)(v3 + 408) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 96;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[36];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[35];
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_4(v3, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_4(v2, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v7();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  OUTLINED_FUNCTION_17_25();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_17_25();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v1();
}

#error "21B610: call analysis failed (funcsize=129)"

uint64_t UnsupportedSearchParametersFlowStrategy.executePatternAndManifest()(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v8 = v7;
  *(void *)(v5 + 424) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 432) = a1;
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t UnsupportedSearchParametersFlowStrategy.executePatternAndManifest()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v43 = *(void **)(v10 + 400);
  uint64_t v11 = *(void *)(v10 + 344);
  uint64_t v12 = *(void *)(v10 + 328);
  uint64_t v40 = *(void *)(v10 + 336);
  uint64_t v41 = *(void *)(v10 + 312);
  uint64_t v13 = *(void **)(v10 + 264);
  uint64_t v42 = *(void *)(v10 + 304);
  *(unsigned char *)(v10 + 457) = 3;
  uint64_t v14 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v38 = v15;
  uint64_t v39 = v14;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v13[6];
  uint64_t v16 = v13[7];
  __swift_project_boxed_opaque_existential_1(v13 + 3, v17);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
  id v37 = CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v10 + 136));
  __swift_destroy_boxed_opaque_existential_1(v10 + 136);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_4(v12, (uint64_t (*)(void))type metadata accessor for CommonDirectAction);
  *(unsigned char *)(v10 + 456) = 0;
  uint64_t v18 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v36 = v19;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = v13[6];
  uint64_t v21 = v13[7];
  __swift_project_boxed_opaque_existential_1(v13 + 3, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v10 + 176));
  __swift_destroy_boxed_opaque_existential_1(v10 + 176);
  _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_4(v12, (uint64_t (*)(void))type metadata accessor for CommonDirectAction);
  uint64_t v22 = (void *)(v11 + *(int *)(v40 + 32));
  *uint64_t v22 = 0xD000000000000011;
  v22[1] = 0x8000000000491230;
  *(void *)(v10 + 216) = v39;
  *(void *)(v10 + 224) = v38;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v23 = v37;
  CodableAceObject.init(wrappedValue:)();
  *(void *)(v10 + 232) = v18;
  *(void *)(v10 + 240) = v36;
  Loggable.init(wrappedValue:)();
  CodableAceObject.init(wrappedValue:)();

  _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_1(v11, v41, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
  swift_storeEnumTagMultiPayload();
  static DialogPhase.confirmation.getter();
  uint64_t v24 = swift_task_alloc();
  *(void *)(v24 + 16) = v13;
  *(void *)(v24 + 24) = v11;
  OutputGenerationManifest.init(dialogPhase:_:)();
  swift_task_dealloc();
  uint64_t v25 = *(void *)(v10 + 80);
  uint64_t v26 = *(void *)(v10 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(v10 + 56), v25);
  *(void *)(v10 + 120) = v42;
  *(void *)(v10 + 128) = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_7((unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, 255, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 96));
  _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_1(v41, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_46A030;
  *(void *)(v28 + 32) = v43;
  uint64_t v44 = v28;
  specialized Array._endMutation()();
  *(void *)(v10 + 440) = v44;
  id v29 = v43;
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v10 + 448) = v32;
  *uint64_t v32 = v10;
  v32[1] = UnsupportedSearchParametersFlowStrategy.executePatternAndManifest();
  uint64_t v33 = *(void *)(v10 + 296);
  uint64_t v34 = *(void *)(v10 + 256);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v34, v10 + 96, v44, v33, v25, v26, v30, v31, a9, a10);
}

uint64_t closure #1 in UnsupportedSearchParametersFlowStrategy.executePatternAndManifest()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = OutputGenerationManifest.canUseServerTTS.setter();
  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()(v3);
  specialized static PhoneCallNLContextProvider.makeSDAForOfferReadCallHistoryConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter();
  uint64_t v4 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v4);
  OutputGenerationManifest.nlContextUpdate.setter();
  OutputGenerationManifest.listenAfterSpeaking.setter();
  type metadata accessor for YesNoConfirmationModel();
  swift_bridgeObjectRetain();
  return OutputGenerationManifest.responseViewId.setter();
}

uint64_t UnsupportedSearchParametersFlowStrategy.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  outlined destroy of SearchCallHistorySharedGlobals(v0 + 64);

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UnsupportedSearchParametersFlowStrategy.__deallocating_deinit()
{
  UnsupportedSearchParametersFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 192) + **(int **)(*(void *)v1 + 192));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy;
  return v6(a1);
}

uint64_t protocol witness for YesNoPromptFlowStrategy.makePromptForYesNoResponse() in conformance UnsupportedSearchParametersFlowStrategy()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.actionForInput(_:) in conformance UnsupportedSearchParametersFlowStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 200) + **(int **)(*(void *)v2 + 200));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v8(a1, a2);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:) in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:) in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = type metadata accessor for UnsupportedSearchParametersFlowStrategy();
  uint64_t v6 = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_7(&lazy protocol witness table cache variable for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy, v5, (void (*)(uint64_t))type metadata accessor for UnsupportedSearchParametersFlowStrategy);
  *uint64_t v3 = v1;
  v3[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return YesNoPromptFlowStrategy.makeRepromptOnEmptyParse(itemToConfirm:)(a1, v4, v6);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:) in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = type metadata accessor for UnsupportedSearchParametersFlowStrategy();
  uint64_t v6 = _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_7(&lazy protocol witness table cache variable for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy, v5, (void (*)(uint64_t))type metadata accessor for UnsupportedSearchParametersFlowStrategy);
  *uint64_t v3 = v1;
  v3[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return YesNoPromptFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:)(a1, v4, v6);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse() in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 184) + **(int **)(*(void *)v1 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return v6(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()(a1, a2, a3);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:) in conformance UnsupportedSearchParametersFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance UnsupportedSearchParametersFlowStrategy;
  return PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)(a1, a2, a3, a4);
}

uint64_t base witness table accessor for PromptForConfirmationFlowStrategyAsync in UnsupportedSearchParametersFlowStrategy(uint64_t a1, uint64_t a2)
{
  return _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_7(&lazy protocol witness table cache variable for type UnsupportedSearchParametersFlowStrategy and conformance UnsupportedSearchParametersFlowStrategy, a2, (void (*)(uint64_t))type metadata accessor for UnsupportedSearchParametersFlowStrategy);
}

uint64_t partial apply for closure #1 in UnsupportedSearchParametersFlowStrategy.executePatternAndManifest()()
{
  return closure #1 in UnsupportedSearchParametersFlowStrategy.executePatternAndManifest()();
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOACs0F0AAWlTm_7(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s27PhoneCallFlowDelegatePlugin22YesNoConfirmationModelVWOcTm_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A5ErrorOWOhTm_4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_71(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_25()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_23_26()
{
  return swift_retain_n();
}

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)(void *a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v8 = a2 & 1;
  uint64_t v9 = a5[3];
  uint64_t v10 = a5[4];
  uint64_t v11 = __swift_project_boxed_opaque_existential_1(a5, v9);

  return specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)(a1, v8, a3, a4, (uint64_t)v11, v9, v10);
}

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContextWithAppSelectionUserPersona(phoneCallNLIntent:contextNLType:userPersona:app:resolvedSiriKitContacts:callStateProvider:)(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char v10 = a2 & 1;
  uint64_t v11 = a6[3];
  uint64_t v12 = a6[4];
  uint64_t v13 = __swift_project_boxed_opaque_existential_1(a6, v11);
  uint64_t v14 = specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)(a1, v10, a4, a5, (uint64_t)v13, v11, v12);
  uint64_t v15 = v14;
  if (v14)
  {
    id v16 = [v14 phoneCallContext];
    if (v16)
    {
      uint64_t v17 = v16;
      [v16 setUserPersona:a3];
      [v15 setPhoneCallContext:v17];
    }
  }
  return v15;
}

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContextSRR()()
{
  id v0 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [objc_allocWithZone((Class)FLOWSchemaFLOWPhoneCallContext) init];
    if (v2)
    {
      uint64_t v3 = v2;
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      uint64_t v5 = (void *)OUTLINED_FUNCTION_25_0(v4, (uint64_t)static Logger.siriPhone);
      os_log_type_t v6 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v6))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
        OUTLINED_FUNCTION_16_4(&dword_0, v7, v8, "#PhoneDomainContextMetricsUtils add DomainContext resolved via SRR");
        OUTLINED_FUNCTION_6();
      }

      [v3 addPersonType:11];
      [v1 setPhoneCallContext:v3];
      [v1 setHasPhoneCallContext:1];
      goto LABEL_14;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_25_0(v9, (uint64_t)static Logger.siriPhone);
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v10))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_1_3(&dword_0, v11, v12, "#PhoneDomainContextMetricsUtils returning without logging phone domain context resolved via SRR");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v1 = 0;
LABEL_14:

  return v1;
}

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContextForHangUpDirectInvocation(callStateProvider:)(void *a1)
{
  id v2 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [objc_allocWithZone((Class)FLOWSchemaFLOWPhoneCallContext) init];
    if (v4)
    {
      uint64_t v5 = v4;
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      uint64_t v7 = OUTLINED_FUNCTION_25_0(v6, (uint64_t)static Logger.siriPhone);
      os_log_type_t v8 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_7_2();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_0, v7, v8, "#PhoneDomainContextMetricsUtils add DomainContext for HangUpIntentResponse", v9, 2u);
        OUTLINED_FUNCTION_6();
      }

      uint64_t v10 = a1[3];
      uint64_t v11 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v10);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v22, v10, v11);
      uint64_t v12 = v23;
      uint64_t v13 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      if (v14) {
        uint64_t v15 = 4;
      }
      else {
        uint64_t v15 = 0;
      }
      [v5 setPhoneCallAppType:v15];
      [v3 setPhoneCallContext:v5];
      [v3 setHasPhoneCallContext:1];

      return v3;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_25_0(v16, (uint64_t)static Logger.siriPhone);
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v18))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_1_3(&dword_0, v19, v20, "#PhoneDomainContextMetricsUtils returning without logging phone domain context for HangUpIntent");
    OUTLINED_FUNCTION_6();
  }

  return 0;
}

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContextForThirdPartyFaceTime()()
{
  id v0 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [objc_allocWithZone((Class)FLOWSchemaFLOWPhoneCallContext) init];
    if (v2)
    {
      uint64_t v3 = v2;
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      uint64_t v5 = (void *)OUTLINED_FUNCTION_25_0(v4, (uint64_t)static Logger.siriPhone);
      os_log_type_t v6 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_21_19(v6))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
        OUTLINED_FUNCTION_16_4(&dword_0, v7, v8, "#PhoneDomainContextMetricsUtils add DomainContext for making FaceTime call to non-Apple users");
        OUTLINED_FUNCTION_6();
      }

      [v3 setIsThirdPartyFaceTime:1];
      [v1 setPhoneCallContext:v3];
      [v1 setHasPhoneCallContext:1];
      goto LABEL_14;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_25_0(v9, (uint64_t)static Logger.siriPhone);
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_8_2(v10))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_1_3(&dword_0, v11, v12, "#PhoneDomainContextMetricsUtils returning without logging phone domain context for making FaceTime call to non-Apple users");
    OUTLINED_FUNCTION_6();
  }
  uint64_t v1 = 0;
LABEL_14:

  return v1;
}

void *specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v17);
  id v18 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = [objc_allocWithZone((Class)FLOWSchemaFLOWPhoneCallContext) init];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v33 = a7;
      if (a2)
      {
        static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv4(phoneContext:resolvedSiriKitContacts:)(v20, a4);
      }
      else
      {
        uint64_t v22 = a1[3];
        uint64_t v23 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v22);
        uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
        static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv3(phoneCallContacts:phoneContext:)(v24, v21);
        swift_bridgeObjectRelease();
      }
      uint64_t v28 = a1[3];
      uint64_t v29 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v28);
      uint64_t v30 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v29 + 136))(v28, v29) + 16);
      swift_bridgeObjectRelease();
      if (v30) {
        [v21 addPersonType:10];
      }
      specialized static PhoneDomainContextMetricsUtils.addPhoneCallAppType(phoneCallNLIntent:app:phoneContext:callStateProvider:)(a1, a3, v21, (uint64_t)v15, a6, v33);
      static PhoneDomainContextMetricsUtils.addPhoneCallType(phoneCallNLIntent:phoneContext:)((uint64_t)a1, v21);
      static PhoneDomainContextMetricsUtils.addEmergencyType(phoneCallNLIntent:phoneContext:)((uint64_t)a1, v21);
      [v19 setPhoneCallContext:v21];
      [v19 setHasPhoneCallContext:1];
      goto LABEL_15;
    }
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_0, v21, v26, "#PhoneDomainContextMetricsUtils returning without logging phone domain context", v27, 2u);
    swift_slowDealloc();
  }
  uint64_t v19 = 0;
LABEL_15:

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a6);
  return v19;
}

unint64_t lazy protocol witness table accessor for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType;
  if (!lazy protocol witness table cache variable for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType);
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneDomainContextMetricsUtils()
{
  return &type metadata for PhoneDomainContextMetricsUtils;
}

unsigned char *storeEnumTagSinglePayload for PhoneDomainContextNLType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21D764);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneDomainContextNLType()
{
  return &type metadata for PhoneDomainContextNLType;
}

uint64_t specialized static PhoneDomainContextMetricsUtils.addPhoneCallAppType(phoneCallNLIntent:app:phoneContext:callStateProvider:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v29[3] = a5;
  v29[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v24 = a3;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for App?);
    uint64_t v17 = String.init<A>(describing:)();
    v25[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v15, "#PhoneDomainContextMetricsUtils addPhoneCallAppType with app: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v24;
    swift_slowDealloc();

    if (a2)
    {
LABEL_5:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      swift_retain();
      if (PhoneCallNLIntent.isFaceTimeCall()() && App.isFirstParty()())
      {
        [a3 setPhoneCallAppType:2];
LABEL_17:
        swift_release();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      if (!App.isFirstParty()())
      {
        [a3 setPhoneCallAppType:3];
        goto LABEL_17;
      }
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      Swift::Bool v19 = PhoneCallNLIntent.isHangUpCall()();
      outlined init with copy of SignalProviding((uint64_t)v29, (uint64_t)v28);
      if (v19)
      {
        __swift_project_boxed_opaque_existential_1(v28, v28[3]);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a6 + 16))(v25, a5, a6);
        uint64_t v20 = v26;
        uint64_t v21 = v27;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        if (v22)
        {
          [a3 setPhoneCallAppType:4];
          goto LABEL_17;
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      }
      [a3 setPhoneCallAppType:1];
      goto LABEL_17;
    }
  }
  else
  {

    swift_release_n();
    if (a2) {
      goto LABEL_5;
    }
  }
  [a3 setPhoneCallAppType:0];
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

uint64_t OUTLINED_FUNCTION_0_50()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_2_80()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_54(char a1)
{
  return a1 & 1;
}

uint64_t OUTLINED_FUNCTION_11_37(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  uint64_t result = outlined init with take of PhoneCallNLIntent?(a3, a9 + 16, &demangling cache variable for type metadata for PhoneCallApp?);
  *(unsigned char *)(a9 + 56) = a4;
  *(void *)(a9 + 64) = a5;
  *(unsigned char *)(a9 + 72) = a6;
  *(unsigned char *)(a9 + 73) = a7;
  *(unsigned char *)(a9 + 74) = a8;
  *(unsigned char *)(a9 + 75) = a10;
  *(_WORD *)(a9 + 76) = *(_WORD *)((char *)&a10 + 1);
  *(_DWORD *)(a9 + 78) = *(_DWORD *)((char *)&a10 + 3);
  *(void *)(a9 + 88) = a11;
  *(void *)(a9 + 96) = a12;
  return result;
}

uint64_t PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)(uint64_t a1, uint64_t a2)
{
  return PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:));
}

BOOL specialized static PhoneCallNLIntent.isAppModified(previousNLIntent:currentNLIntent:)(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v4 = PhoneCallNLIntent.applicationId.getter();
  char v6 = specialized Optional<A>.isNilOrEmpty.getter(v4, v5);
  swift_bridgeObjectRelease();
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v29);
  outlined init with copy of SignalProviding(a1, (uint64_t)v28);
  if (v6) {
    goto LABEL_2;
  }
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  uint64_t v11 = PhoneCallNLIntent.applicationId.getter();
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  uint64_t v14 = PhoneCallNLIntent.applicationId.getter();
  if (!v13)
  {
    if (!v15) {
      goto LABEL_2;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v25 = v28;
LABEL_29:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return 1;
  }
  if (!v15) {
    goto LABEL_26;
  }
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_2:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    goto LABEL_3;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  if ((v17 & 1) == 0) {
    return 1;
  }
LABEL_3:
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v7 = PhoneCallNLIntent.appName.getter();
  char v9 = specialized Optional<A>.isNilOrEmpty.getter(v7, v8);
  swift_bridgeObjectRelease();
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v27);
  outlined init with copy of SignalProviding(a1, (uint64_t)v26);
  if (v9)
  {
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return 0;
  }
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  uint64_t v18 = PhoneCallNLIntent.appName.getter();
  uint64_t v20 = v19;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  uint64_t v21 = PhoneCallNLIntent.appName.getter();
  if (!v20)
  {
    if (!v22) {
      goto LABEL_4;
    }
    goto LABEL_28;
  }
  if (!v22)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    uint64_t v25 = v26;
    goto LABEL_29;
  }
  if (v18 == v21 && v20 == v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return (v24 & 1) == 0;
}

uint64_t specialized static PhoneCallNLIntent.isPhoneCallVerbModified(previousNLIntent:currentNLIntent:)(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  if (v6 == 17)
  {
    outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v35);
    goto LABEL_3;
  }
  if (PhoneCallVerb.rawValue.getter(v6) == 1819042147 && v24 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v35);
LABEL_23:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v32);
    outlined init with copy of SignalProviding(a1, (uint64_t)v29);
    goto LABEL_24;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v35);
  if (v26) {
    goto LABEL_23;
  }
LABEL_3:
  uint64_t v7 = v36;
  uint64_t v8 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  int v9 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v32);
  outlined init with copy of SignalProviding(a1, (uint64_t)v29);
  if (v9 == 17)
  {
LABEL_24:
    char v27 = 0;
    goto LABEL_28;
  }
  uint64_t v10 = v33;
  uint64_t v11 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 104))(v10, v11);
  uint64_t v13 = v30;
  uint64_t v14 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
  char v16 = v15 == 17 && v12 == 17;
  if (v12 != 17 && v15 != 17)
  {
    char v18 = v15;
    uint64_t v19 = PhoneCallVerb.rawValue.getter(v12);
    uint64_t v21 = v20;
    if (v19 == PhoneCallVerb.rawValue.getter(v18) && v21 == v22) {
      char v16 = 1;
    }
    else {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  char v27 = v16 ^ 1;
LABEL_28:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v27 & 1;
}

void UsoEntity_common_App.applicationId.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = type metadata accessor for UsoIdentifier();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_46_0();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_5_17();
  uint64_t v100 = v11;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_5_17();
  uint64_t v99 = v13;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_47_14();
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_37_17();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_5_17();
  uint64_t v104 = v17;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_17();
  uint64_t v103 = v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v90 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoIdentifier?);
  uint64_t v24 = OUTLINED_FUNCTION_11_0(v23);
  __chkstk_darwin(v24);
  OUTLINED_FUNCTION_46_0();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  OUTLINED_FUNCTION_33_14();
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_5_17();
  uint64_t v98 = v30;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v90 - v32;
  uint64_t v34 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)();
  uint64_t v35 = v34;
  uint64_t v101 = v2;
  if (v34)
  {
    uint64_t v94 = v1;
    uint64_t v96 = v27;
    uint64_t v36 = *(void *)(v34 + 16);
    if (v36)
    {
      uint64_t v95 = v0;
      uint64_t v91 = v33;
      uint64_t v92 = v9;
      uint64_t v93 = v5;
      uint64_t v39 = *(void (**)(void))(v5 + 16);
      uint64_t v37 = v5 + 16;
      uint64_t v38 = v39;
      OUTLINED_FUNCTION_55_1();
      uint64_t v41 = v35 + v40;
      unint64_t v102 = *(void *)(v37 + 56);
      uint64_t v90 = v35;
      swift_bridgeObjectRetain_n();
      unint64_t v97 = 0x800000000048BFF0;
      while (1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v38)(v22, v41, v3);
        uint64_t v42 = UsoIdentifier.namespace.getter();
        uint64_t v35 = v43;
        if (v43)
        {
          BOOL v44 = v42 == 0x64695F6D657469 && v43 == 0xE700000000000000;
          uint64_t v45 = v103;
          if (v44)
          {
            swift_bridgeObjectRelease();
            ((void (*)(char *, char *, uint64_t))v38)(v45, v22, v3);
LABEL_13:
            uint64_t v47 = UsoIdentifier.appBundleId.getter();
            os_log_type_t v49 = v48;
            v50._uint64_t countAndFlagsBits = v47;
            v50._object = v49;
            Swift::Int v51 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of UsoIdentifierAppBundleType.init(rawValue:), v50);
            swift_bridgeObjectRelease();
            if (v51)
            {
              if (v51 == 1)
              {
                uint64_t v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v35 = 0;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v35 = 1;
            }
            goto LABEL_18;
          }
          char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_28_22();
          v38();
          uint64_t v35 = 0;
          if (v46) {
            goto LABEL_13;
          }
        }
        else
        {
          OUTLINED_FUNCTION_28_22();
          v38();
        }
LABEL_18:
        uint64_t v52 = *(void (**)(void))(v37 - 8);
        OUTLINED_FUNCTION_53_8();
        v52();
        OUTLINED_FUNCTION_28_22();
        v38();
        if (v35)
        {
          uint64_t v53 = UsoIdentifier.value.getter();
          unint64_t v55 = v54;
          swift_bridgeObjectRelease();
          if ((v55 & 0x2000000000000000) != 0) {
            uint64_t v35 = HIBYTE(v55) & 0xF;
          }
          else {
            uint64_t v35 = v53 & 0xFFFFFFFFFFFFLL;
          }
          OUTLINED_FUNCTION_53_8();
          v52();
          if (v35)
          {
            OUTLINED_FUNCTION_44_16();
            uint64_t v5 = v93;
            OUTLINED_FUNCTION_42_14();
            uint64_t v33 = v91;
            OUTLINED_FUNCTION_7_46();
            v57();
            OUTLINED_FUNCTION_21_26((uint64_t)v33, 0);
            uint64_t v9 = v92;
            uint64_t v0 = v95;
            uint64_t v27 = v96;
            uint64_t v2 = v101;
            uint64_t v1 = v94;
            goto LABEL_30;
          }
        }
        else
        {
          uint64_t v56 = OUTLINED_FUNCTION_40_13();
          ((void (*)(uint64_t))v52)(v56);
        }
        OUTLINED_FUNCTION_53_8();
        v52();
        v41 += v102;
        if (!--v36)
        {
          OUTLINED_FUNCTION_44_16();
          uint64_t v9 = v92;
          uint64_t v5 = v93;
          uint64_t v33 = v91;
          uint64_t v0 = v95;
          uint64_t v27 = v96;
          uint64_t v2 = v101;
          goto LABEL_29;
        }
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v27 = v96;
LABEL_29:
    uint64_t v1 = v94;
    OUTLINED_FUNCTION_21_26((uint64_t)v33, 1);
  }
  else
  {
    OUTLINED_FUNCTION_36_19((uint64_t)v33);
  }
LABEL_30:
  uint64_t v58 = v98;
  outlined init with copy of TransformationResult?((uint64_t)v33, v98, &demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_2_63(v58);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_42_14();
    OUTLINED_FUNCTION_39_15();
    OUTLINED_FUNCTION_7_46();
    v78();
    UsoIdentifier.value.getter();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
    uint64_t v79 = (uint64_t)v33;
    goto LABEL_66;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v58, &demangling cache variable for type metadata for UsoIdentifier?);
  if (!v35)
  {
    OUTLINED_FUNCTION_36_19(v0);
    goto LABEL_58;
  }
  uint64_t v95 = v0;
  uint64_t v59 = *(void *)(v35 + 16);
  if (!v59) {
    goto LABEL_56;
  }
  uint64_t v96 = v27;
  uint64_t v91 = v33;
  uint64_t v92 = v9;
  uint64_t v93 = v5;
  uint64_t v60 = *(void (**)(void))(v5 + 16);
  OUTLINED_FUNCTION_55_1();
  uint64_t v62 = v35 + v61;
  unint64_t v63 = (void (**)(void))(v5 + 8);
  uint64_t v104 = *(void *)(v5 + 72);
  uint64_t v90 = v35;
  swift_bridgeObjectRetain();
  uint64_t v103 = "email";
  unint64_t v102 = 0x800000000048BFF0;
  do
  {
    OUTLINED_FUNCTION_29_20();
    v60();
    uint64_t v64 = UsoIdentifier.namespace.getter();
    LOBYTE(v66) = v65;
    if (!v65)
    {
      OUTLINED_FUNCTION_29_20();
      v60();
      goto LABEL_50;
    }
    BOOL v67 = v64 == 0x656D614E707061 && v65 == 0xE700000000000000;
    uint64_t v68 = v99;
    if (v67)
    {
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v68, v2, v3);
    }
    else
    {
      char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_20();
      v60();
      LOBYTE(v66) = 0;
      if ((v69 & 1) == 0) {
        goto LABEL_50;
      }
    }
    uint64_t v70 = UsoIdentifier.appBundleId.getter();
    uint64_t v72 = v71;
    v73._uint64_t countAndFlagsBits = v70;
    v73._object = v72;
    Swift::Int v66 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of UsoIdentifierAppBundleType.init(rawValue:), v73);
    swift_bridgeObjectRelease();
    if (!v66)
    {
      Swift::Int v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
LABEL_48:
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    if (v66 == 1) {
      goto LABEL_48;
    }
    LOBYTE(v66) = 0;
LABEL_50:
    uint64_t v74 = *v63;
    OUTLINED_FUNCTION_12_1();
    v74();
    uint64_t v75 = v100;
    OUTLINED_FUNCTION_29_20();
    v60();
    if (v66)
    {
      uint64_t v107 = UsoIdentifier.value.getter();
      uint64_t v108 = v76;
      uint64_t v105 = 46;
      unint64_t v106 = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      char v77 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_1();
      v74();
      if (v77)
      {
        OUTLINED_FUNCTION_44_16();
        OUTLINED_FUNCTION_42_14();
        uint64_t v0 = v95;
        OUTLINED_FUNCTION_7_46();
        v80();
        OUTLINED_FUNCTION_21_26(v0, 0);
        uint64_t v33 = v91;
        uint64_t v27 = v96;
        goto LABEL_58;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t))v74)(v75, v3);
    }
    uint64_t v2 = v101;
    OUTLINED_FUNCTION_12_1();
    v74();
    v62 += v104;
    --v59;
  }
  while (v59);
  OUTLINED_FUNCTION_44_16();
  uint64_t v33 = v91;
  uint64_t v27 = v96;
LABEL_56:
  uint64_t v0 = v95;
  OUTLINED_FUNCTION_21_26(v95, 1);
LABEL_58:
  outlined init with copy of TransformationResult?(v0, v27, &demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_2_63(v27);
  if (v44)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v0, &demangling cache variable for type metadata for UsoIdentifier?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v33, &demangling cache variable for type metadata for UsoIdentifier?);
    uint64_t v81 = OUTLINED_FUNCTION_7_14();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v81, v82);
  }
  else
  {
    OUTLINED_FUNCTION_42_14();
    OUTLINED_FUNCTION_7_46();
    v83();
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    uint64_t v84 = type metadata accessor for Logger();
    __swift_project_value_buffer(v84, (uint64_t)static Logger.siriPhone);
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl(&dword_0, v85, v86, "#UsoEntity_common_App falling back to appId from VocFile", v87, 2u);
      OUTLINED_FUNCTION_6();
    }

    UsoIdentifier.value.getter();
    uint64_t v88 = OUTLINED_FUNCTION_40_13();
    v89(v88);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v0, &demangling cache variable for type metadata for UsoIdentifier?);
    uint64_t v79 = (uint64_t)v33;
LABEL_66:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v79, &demangling cache variable for type metadata for UsoIdentifier?);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t UserDialogActParse.identifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t PhoneCallNLv4Intent.app.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of TransformationResult?(v1 + 16, a1, &demangling cache variable for type metadata for PhoneCallApp?);
}

uint64_t PhoneCallNLv4Intent.app.setter(uint64_t a1)
{
  return outlined assign with take of PhoneCallNLIntent?(a1, v1 + 16, &demangling cache variable for type metadata for PhoneCallApp?);
}

uint64_t PhoneCallNLv4Intent.phoneCallAVMode.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t PhoneCallNLv4Intent.phoneCallAVMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallAttributes.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailVerb.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailVerb.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.voiceMailVerb.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailNoun.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 73) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.voiceMailNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallConfirmation.getter()
{
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t PhoneCallNLv4Intent.phoneCallConfirmation.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 74) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallConfirmation.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallDestinationType.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 75) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallDestinationType.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 76);
}

uint64_t PhoneCallNLv4Intent.phoneCallNoun.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 76) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallPreferredProvider.getter()
{
  return *(unsigned __int8 *)(v0 + 77);
}

uint64_t PhoneCallNLv4Intent.phoneCallPreferredProvider.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 77) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallPreferredProvider.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallReference.getter()
{
  return *(unsigned __int8 *)(v0 + 78);
}

uint64_t PhoneCallNLv4Intent.phoneCallReference.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 78) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallReference.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallVerb.getter()
{
  return *(unsigned __int8 *)(v0 + 79);
}

uint64_t PhoneCallNLv4Intent.phoneCallVerb.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 79) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallVerb.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.voiceMailNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t PhoneCallNLv4Intent.voiceMailNoun.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 81) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.voiceMailNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.references.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneCallDirectInvocationNLIntent.references.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

double static PhoneCallNLv4Intent.getYesConfirmationNLIntent()@<D0>(uint64_t *a1@<X8>)
{
  return static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(0, a1);
}

double static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)@<D0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  a2[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
  a2[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
  uint64_t v4 = swift_allocObject();
  *a2 = v4;
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v4 + 24) = _swiftEmptyArrayStorage;
  outlined init with take of PhoneCallNLIntent?((uint64_t)v6, v4 + 32, &demangling cache variable for type metadata for PhoneCallApp?);
  *(unsigned char *)(v4 + 72) = 2;
  *(void *)(v4 + 80) = 0;
  *(_WORD *)(v4 + 88) = 516;
  *(unsigned char *)(v4 + 90) = a1;
  *(void *)&double result = 587401477;
  *(_DWORD *)(v4 + 91) = 587401477;
  *(_WORD *)(v4 + 95) = 1553;
  *(unsigned char *)(v4 + 97) = 2;
  *(void *)(v4 + 104) = _swiftEmptyArrayStorage;
  *(void *)(v4 + 112) = _swiftEmptyArrayStorage;
  return result;
}

double static PhoneCallNLv4Intent.getNoConfirmationNLIntent()@<D0>(uint64_t *a1@<X8>)
{
  return static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(1, a1);
}

double static PhoneCallNLv4Intent.getCancelConfirmationNLIntent()@<D0>(uint64_t *a1@<X8>)
{
  return static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(2, a1);
}

Swift::Bool __swiftcall PhoneCallNLv4Intent.isLabelOnlyRequest()()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(void *)(v1 + 16) == 1)
  {
    outlined init with copy of SignalProviding(v1 + 32, (uint64_t)v5);
    Class isa = OUTLINED_FUNCTION_48_14(v5).super.isa;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    unsigned __int8 v3 = INPerson.isUnnamedHandleLabel.getter();
  }
  else
  {
    unsigned __int8 v3 = 0;
  }
  return v3 & 1;
}

uint64_t PhoneCallNLv4Contact.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PhoneCallNLv4Contact.init()();
  return v0;
}

uint64_t PhoneCallNLv4Contact.init()()
{
  *(unsigned char *)(v0 + 16) = 38;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(unsigned char *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 1;
  bzero((void *)(v0 + 96), 0xB8uLL);
  *(void *)(v0 + 280) = 3;
  *(_DWORD *)(v0 + 288) = 33554435;
  *(unsigned char *)(v0 + 292) = 0;
  *(void *)(v0 + 296) = &_swiftEmptySetSingleton;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_OWORD *)(v0 + 320) = 0u;
  *(void *)(v0 + 336) = 0;
  *(_WORD *)(v0 + 344) = 1023;
  return v0;
}

uint64_t PhoneCallNLv4Contact.init(contactConvertible:contactRole:)(uint64_t a1, uint64_t a2)
{
  return PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:));
}

uint64_t PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  OUTLINED_FUNCTION_1();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_4();
  uint64_t v12 = v11 - v10;
  (*(void (**)(uint64_t))(v13 + 16))(v11 - v10);
  uint64_t v14 = a3(v12, a2, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v14;
}

void UsoEntity_common_PersonRelationship.relationshipIdentifierOrLabel.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoIdentifier?);
  uint64_t v4 = OUTLINED_FUNCTION_11_0(v3);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_46_0();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v36 - v9;
  uint64_t v11 = type metadata accessor for UsoIdentifier();
  OUTLINED_FUNCTION_1();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_14();
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_37_17();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v36 - v17;
  if (dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)())
  {
    specialized Collection.first.getter();
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) != 1)
    {
      OUTLINED_FUNCTION_15_10();
      v19();
      UsoIdentifier.value.getter();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v11);
      goto LABEL_20;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v10, &demangling cache variable for type metadata for UsoIdentifier?);
  uint64_t v20 = dispatch thunk of CodeGenBase.usoIdentifiers.getter();
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
    uint64_t v32 = 1;
    goto LABEL_16;
  }
  uint64_t v37 = v2;
  uint64_t v38 = v7;
  uint64_t v39 = v13;
  uint64_t v40 = v0;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  uint64_t v23 = v13 + 16;
  uint64_t v22 = v24;
  OUTLINED_FUNCTION_55_1();
  uint64_t v26 = v20 + v25;
  uint64_t v27 = v20;
  uint64_t v28 = *(void *)(v23 + 56);
  v36[1] = v27;
  swift_bridgeObjectRetain();
  uint64_t v42 = "isambiguation";
  unint64_t v41 = 0x8000000000490BA0;
  while (1)
  {
    v22(v1, v26, v11);
    uint64_t v29 = UsoIdentifier.namespace.getter();
    if (!v30) {
      goto LABEL_11;
    }
    if (v29 == 0xD000000000000012 && v30 == v41) {
      break;
    }
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_15;
    }
LABEL_11:
    (*(void (**)(uint64_t, uint64_t))(v23 - 8))(v1, v11);
    v26 += v28;
    if (!--v21)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = 1;
      uint64_t v13 = v39;
      uint64_t v2 = v37;
      uint64_t v7 = v38;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v7 = v38;
  uint64_t v13 = v39;
  OUTLINED_FUNCTION_15_10();
  v33();
  uint64_t v32 = 0;
  uint64_t v2 = v37;
LABEL_16:
  __swift_storeEnumTagSinglePayload(v7, v32, 1, v11);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v7, 1, v11) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v7, &demangling cache variable for type metadata for UsoIdentifier?);
    dispatch thunk of UsoEntity_common_PersonRelationship.relationshipType.getter();
    if (!v34 && dispatch thunk of UsoEntity_common_PersonRelationship.relationshipTypeAsExpression.getter())
    {
      dispatch thunk of CodeGenExpression.operand.getter();
      swift_release();
    }
  }
  else
  {
    OUTLINED_FUNCTION_39_15();
    OUTLINED_FUNCTION_15_10();
    v35();
    UsoIdentifier.value.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v11);
  }
LABEL_20:
  OUTLINED_FUNCTION_26_1();
}

uint64_t key path setter for PhoneCallNLv4Contact.contactId : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 272);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t key path setter for PhoneCallNLv4Contact.emailAddress : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 296);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t PhoneCallNLv4Contact.emailAddress.setter()
{
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_4_4();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallNLv4Contact.emailAddress.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t (*PhoneCallNLv4Contact.isMe.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.contactName : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 344);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t PhoneCallNLv4Contact.contactName.setter()
{
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_4_4();
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallNLv4Contact.contactName.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path getter for PhoneCallNLv4Contact.personName : PhoneCallNLv4Contact@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 360))(v4);
  return outlined init with take of PhoneCallNLIntent?((uint64_t)v4, a2, &demangling cache variable for type metadata for PhoneCallPersonName?);
}

uint64_t key path setter for PhoneCallNLv4Contact.personName : PhoneCallNLv4Contact(uint64_t a1, uint64_t a2)
{
  outlined init with take of PhoneCallNLIntent?(a1, (uint64_t)v5, &demangling cache variable for type metadata for PhoneCallPersonName?);
  uint64_t v3 = *(uint64_t (**)(void *))(**(void **)a2 + 368);
  outlined retain of PhoneCallPersonName?(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of PhoneCallPersonName?);
  return v3(v5);
}

uint64_t (*PhoneCallNLv4Contact.personName.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.organizationName : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 392);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t PhoneCallNLv4Contact.organizationName.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t PhoneCallNLv4Contact.organizationName.setter()
{
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_4_4();
  *(void *)(v1 + 192) = v2;
  *(void *)(v1 + 200) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallNLv4Contact.organizationName.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.telephoneNumber : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 416);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t PhoneCallNLv4Contact.telephoneNumber.setter()
{
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_4_4();
  *(void *)(v1 + 208) = v2;
  *(void *)(v1 + 216) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallNLv4Contact.telephoneNumber.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.relationship : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 440);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*PhoneCallNLv4Contact.relationship.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.handleType : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 464);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t PhoneCallNLv4Contact.handleType.getter()
{
  return OUTLINED_FUNCTION_7_0();
}

uint64_t PhoneCallNLv4Contact.handleType.setter()
{
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_4_4();
  *(void *)(v1 + 240) = v2;
  *(void *)(v1 + 248) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallNLv4Contact.handleType.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.handleLabel : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 488);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*PhoneCallNLv4Contact.handleLabel.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.emergencyType : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, unint64_t))(**(void **)a2 + 512);
  outlined copy of PhoneCallEmergencyType?(*a1, v3);
  return v4(v2, v3);
}

uint64_t PhoneCallNLv4Contact.emergencyType.setter()
{
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_4_4();
  uint64_t v3 = *(void *)(v1 + 272);
  unint64_t v4 = *(void *)(v1 + 280);
  *(void *)(v1 + 272) = v2;
  *(void *)(v1 + 280) = v0;
  uint64_t v5 = OUTLINED_FUNCTION_7_14();
  outlined copy of PhoneCallEmergencyType?(v5, v6);
  outlined consume of PhoneCallEmergencyType?(v3, v4);
  uint64_t v7 = OUTLINED_FUNCTION_7_14();
  return outlined consume of PhoneCallEmergencyType?(v7, v8);
}

uint64_t (*PhoneCallNLv4Contact.emergencyType.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t (*PhoneCallNLv4Contact.emergencyLocationType.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneCallNLv4Contact.isAmbiguousHandle.getter()
{
  OUTLINED_FUNCTION_5_21();
  return *(unsigned __int8 *)(v0 + 289);
}

uint64_t PhoneCallNLv4Contact.isAmbiguousHandle.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_4_4();
  *(unsigned char *)(v1 + 289) = a1;
  return result;
}

uint64_t (*PhoneCallNLv4Contact.isAmbiguousHandle.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.searchQualifier : PhoneCallNLv4Contact(unsigned __int16 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 584))(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
}

uint64_t PhoneCallNLv4Contact.searchQualifier.getter()
{
  OUTLINED_FUNCTION_5_21();
  return *(unsigned __int16 *)(v0 + 290) | (*(unsigned __int8 *)(v0 + 292) << 16);
}

uint64_t PhoneCallNLv4Contact.searchQualifier.setter(int a1)
{
  uint64_t result = OUTLINED_FUNCTION_4_4();
  *(unsigned char *)(v1 + 292) = BYTE2(a1);
  *(_WORD *)(v1 + 290) = a1;
  return result;
}

uint64_t (*PhoneCallNLv4Contact.searchQualifier.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.vocabularyAppsBundleSet : PhoneCallNLv4Contact(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 608);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t PhoneCallNLv4Contact.vocabularyAppsBundleSet.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhoneCallNLv4Contact.vocabularyAppsBundleSet.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_4();
  *(void *)(v1 + 296) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*PhoneCallNLv4Contact.vocabularyAppsBundleSet.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t key path setter for PhoneCallNLv4Contact.backingContact : PhoneCallNLv4Contact(uint64_t a1, uint64_t a2)
{
  outlined init with copy of TransformationResult?(a1, (uint64_t)v4, &demangling cache variable for type metadata for BackingContact?);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 632))(v4);
}

uint64_t PhoneCallNLv4Contact.backingContact.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return outlined init with copy of TransformationResult?(v1 + 304, a1, &demangling cache variable for type metadata for BackingContact?);
}

uint64_t (*PhoneCallNLv4Contact.backingContact.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t PhoneCallNLv4Contact.contactSource.getter()
{
  OUTLINED_FUNCTION_5_21();
  return *(unsigned __int8 *)(v0 + 345);
}

uint64_t PhoneCallNLv4Contact.contactSource.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_4_4();
  *(unsigned char *)(v1 + 345) = a1;
  return result;
}

uint64_t (*PhoneCallNLv4Contact.contactSource.modify())()
{
  return PhoneFlow.state.modify;
}

uint64_t PhoneCallNLv4Contact.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of PhoneCallPersonName?(*(void *)(v0 + 80), *(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of PhoneCallEmergencyType?(*(void *)(v0 + 272), *(void *)(v0 + 280));
  swift_bridgeObjectRelease();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v0 + 304, &demangling cache variable for type metadata for BackingContact?);
  return v0;
}

uint64_t PhoneCallNLv4Contact.__deallocating_deinit()
{
  PhoneCallNLv4Contact.deinit();

  return swift_deallocClassInstance();
}

uint64_t (*protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 328))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t (*protocol witness for SiriPhoneContact.contactId.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 280))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.contactName.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 344))();
}

uint64_t (*protocol witness for SiriPhoneContact.contactName.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 352))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.contactSource.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 648))();
}

uint64_t protocol witness for SiriPhoneContact.contactSource.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 656))();
}

uint64_t (*protocol witness for SiriPhoneContact.contactSource.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 664))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t (*protocol witness for SiriPhoneContact.personName.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 376))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.organizationName.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 384))();
}

uint64_t protocol witness for SiriPhoneContact.organizationName.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 392))();
}

uint64_t (*protocol witness for SiriPhoneContact.organizationName.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 400))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.telephoneNumber.setter in conformance PhoneCallNLv4Contact()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t (*protocol witness for SiriPhoneContact.telephoneNumber.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 424))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.emailAddress.setter in conformance PhoneCallNLv4Contact()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t (*protocol witness for SiriPhoneContact.emailAddress.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 304))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t (*protocol witness for SiriPhoneContact.relationship.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 448))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.handleType.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 456))();
}

uint64_t protocol witness for SiriPhoneContact.handleType.setter in conformance PhoneCallNLv4Contact()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t (*protocol witness for SiriPhoneContact.handleType.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 472))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t (*protocol witness for SiriPhoneContact.handleLabel.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 496))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.emergencyType.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 512))();
}

uint64_t (*protocol witness for SiriPhoneContact.emergencyType.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 520))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t (*protocol witness for SiriPhoneContact.emergencyLocationType.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 544))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.contactReference.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 240))();
}

uint64_t protocol witness for SiriPhoneContact.contactReference.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 248))();
}

uint64_t (*protocol witness for SiriPhoneContact.contactReference.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 256))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.isAmbiguousHandle.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 552))() & 1;
}

uint64_t protocol witness for SiriPhoneContact.isAmbiguousHandle.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 560))();
}

uint64_t (*protocol witness for SiriPhoneContact.isAmbiguousHandle.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 568))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

uint64_t protocol witness for SiriPhoneContact.searchQualifier.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 576))() & 0xFFFFFF;
}

uint64_t protocol witness for SiriPhoneContact.vocabularyAppsBundleSet.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 600))();
}

uint64_t protocol witness for SiriPhoneContact.backingContact.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 624))();
}

uint64_t (*protocol witness for SiriPhoneContact.backingContact.modify in conformance PhoneCallNLv4Contact(void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 640))();
  return protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact;
}

void UsoEntity_common_PhoneNumber.tags.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = type metadata accessor for UsoIdentifier();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v58 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_33_14();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)();
  if (v10) {
    uint64_t v11 = (void *)v10;
  }
  else {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v57 = v11[2];
  if (v57)
  {
    unint64_t v12 = 0;
    unint64_t v55 = (void (**)(void))(v3 + 32);
    uint64_t v56 = (void (*)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v53 = v0;
    unint64_t v54 = (void *)(v3 + 8);
    uint64_t v52 = v11;
    while (1)
    {
      if (v12 >= v11[2])
      {
        __break(1u);
        return;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v9, (unint64_t)v11+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, v1);
      uint64_t v13 = UsoIdentifier.namespace.getter();
      if (v14)
      {
        if (v13 == 0x6D754E656E6F6870 && v14 == 0xEB00000000726562)
        {
          swift_bridgeObjectRelease();
LABEL_15:
          uint64_t v19 = *v55;
          OUTLINED_FUNCTION_7_46();
          v19();
          uint64_t v20 = v59;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_50_10();
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v20 = v59;
          }
          unint64_t v21 = v20[2];
          if (v21 >= v20[3] >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v20 = v59;
          }
          v20[2] = v21 + 1;
          OUTLINED_FUNCTION_15_10();
          v19();
          uint64_t v59 = v20;
          uint64_t v11 = v52;
          goto LABEL_20;
        }
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_15;
        }
      }
      uint64_t v17 = OUTLINED_FUNCTION_40_13();
      v18(v17);
LABEL_20:
      if (v57 == ++v12)
      {
        uint64_t v22 = v59;
        goto LABEL_23;
      }
    }
  }
  uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v23 = v22[2];
  if (v23)
  {
    uint64_t v59 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v24 = v3 + 16;
    OUTLINED_FUNCTION_55_1();
    unint64_t v54 = v22;
    uint64_t v26 = (char *)v22 + v25;
    unint64_t v55 = *(void (***)(void))(v24 + 56);
    uint64_t v56 = v27;
    uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
    uint64_t v57 = v24;
    do
    {
      uint64_t v29 = v58;
      v56(v58, v26, v1);
      uint64_t v30 = UsoIdentifier.value.getter();
      uint64_t v32 = v31;
      (*v28)(v29, v1);
      uint64_t v33 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_50_10();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v33 = v59;
      }
      unint64_t v34 = v33[2];
      if (v34 >= v33[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v33 = v59;
      }
      v33[2] = v34 + 1;
      uint64_t v35 = &v33[2 * v34];
      v35[4] = v30;
      uint64_t v35[5] = v32;
      uint64_t v26 = (char *)v55 + (void)v26;
      --v23;
    }
    while (v23);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v33 = _swiftEmptyArrayStorage;
  }
  uint64_t v36 = v33[2];
  if (v36)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = v33 + 5;
    uint64_t v38 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v39 = *(v37 - 1);
      unint64_t v40 = *v37;
      swift_bridgeObjectRetain();
      String.index(_:offsetBy:limitedBy:)();
      String.subscript.getter();
      Swift::String v41 = Substring.lowercased()();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v42 = specialized Collection.dropFirst(_:)(1uLL, v39, v40);
      Swift::String v63 = v41;
      uint64_t v59 = (void *)v42;
      uint64_t v60 = v43;
      uint64_t v61 = v44;
      uint64_t v62 = v45;
      lazy protocol witness table accessor for type Substring and conformance Substring();
      swift_bridgeObjectRetain();
      String.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int v46 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of UsoEntity_common_PhoneNumber.tags.getter, v63);
      swift_bridgeObjectRelease();
      if (!v46)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = v49;
        }
        unint64_t v47 = v38[2];
        unint64_t v48 = v47 + 1;
        if (v47 >= v38[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = v50;
        }
        v38[2] = v48;
      }
      v37 += 2;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

BOOL PhoneNumberTag.init(tagName:)()
{
  Swift::String v0 = String.firstLetterLowercased()();
  swift_bridgeObjectRelease();
  Swift::String v1 = v0;

  return PhoneNumberTag.init(rawValue:)(v1);
}

uint64_t protocol witness for PhoneNumber.value.getter in conformance UsoEntity_common_PhoneNumber()
{
  return dispatch thunk of UsoEntity_common_PhoneNumber.value.getter();
}

void protocol witness for PhoneNumber.tags.getter in conformance UsoEntity_common_PhoneNumber()
{
}

void UsoEntity_common_Group.smsGroupNameId.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v4 = type metadata accessor for UsoIdentifier();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_37_17();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v71 - v9;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_5_8();
  uint64_t v75 = v12;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_5_17();
  uint64_t v72 = v14;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v15);
  OUTLINED_FUNCTION_47_14();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v71 - v18;
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_5_17();
  uint64_t v74 = v20;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_5_17();
  uint64_t v79 = v22;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_46_11();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v71 - v25;
  uint64_t v27 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)();
  uint64_t v84 = v4;
  uint64_t v81 = v26;
  uint64_t v82 = v6;
  uint64_t v80 = v1;
  uint64_t v76 = v19;
  uint64_t v77 = v3;
  if (!v27)
  {
    OUTLINED_FUNCTION_36_19((uint64_t)v26);
    goto LABEL_14;
  }
  void v71[2] = v0;
  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v29 = v4;
  if (!v28)
  {
LABEL_10:
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v29);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  OUTLINED_FUNCTION_55_1();
  uint64_t v33 = v31 + v32;
  unint64_t v34 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v35 = *(void *)(v6 + 72);
  v71[1] = v31;
  swift_bridgeObjectRetain();
  uint64_t v83 = "emergencyOrganization";
  unint64_t v78 = 0x8000000000490BF0;
  while (1)
  {
    v30(v10, v33, v29);
    uint64_t v36 = UsoIdentifier.namespace.getter();
    if (!v37) {
      goto LABEL_8;
    }
    if (v36 == 0xD000000000000014 && v37 == v78) {
      break;
    }
    char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_13;
    }
LABEL_8:
    uint64_t v29 = v84;
    (*v34)(v10, v84);
    v33 += v35;
    if (!--v28)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = v81;
      uint64_t v6 = v82;
      uint64_t v1 = v80;
      uint64_t v19 = v76;
      uint64_t v3 = v77;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v26 = v81;
  uint64_t v6 = v82;
  OUTLINED_FUNCTION_51_10();
  OUTLINED_FUNCTION_7_46();
  v39();
  OUTLINED_FUNCTION_23_27((uint64_t)v26);
  swift_bridgeObjectRelease();
  uint64_t v1 = v80;
  uint64_t v19 = v76;
  uint64_t v3 = v77;
LABEL_14:
  uint64_t v40 = dispatch thunk of CodeGenBase.usoIdentifiers.getter();
  uint64_t v41 = *(void *)(v40 + 16);
  if (!v41)
  {
    uint64_t v53 = 1;
    uint64_t v52 = v84;
    uint64_t v55 = v74;
    uint64_t v54 = v75;
    goto LABEL_26;
  }
  uint64_t v44 = *(void (**)(uint64_t))(v6 + 16);
  uint64_t v42 = v6 + 16;
  uint64_t v43 = v44;
  OUTLINED_FUNCTION_55_1();
  uint64_t v46 = v40 + v45;
  uint64_t v47 = *(void *)(v42 + 56);
  unint64_t v78 = v40;
  swift_bridgeObjectRetain();
  uint64_t v83 = (const char *)0x8000000000490C20;
  while (2)
  {
    uint64_t v48 = OUTLINED_FUNCTION_39_15();
    v43(v48);
    uint64_t v49 = UsoIdentifier.namespace.getter();
    if (!v50)
    {
LABEL_20:
      uint64_t v52 = v84;
      (*(void (**)(uint64_t, uint64_t))(v42 - 8))(v2, v84);
      v46 += v47;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v53 = 1;
        uint64_t v26 = v81;
        uint64_t v6 = v82;
        uint64_t v54 = v75;
        uint64_t v1 = v80;
        goto LABEL_25;
      }
      continue;
    }
    break;
  }
  if (v49 != 0xD000000000000016 || v50 != v83)
  {
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v6 = v82;
  OUTLINED_FUNCTION_51_10();
  uint64_t v1 = v80;
  uint64_t v52 = v84;
  OUTLINED_FUNCTION_15_10();
  v56();
  uint64_t v53 = 0;
  uint64_t v54 = v75;
  uint64_t v26 = v81;
LABEL_25:
  uint64_t v19 = v76;
  uint64_t v3 = v77;
  uint64_t v55 = v74;
LABEL_26:
  __swift_storeEnumTagSinglePayload(v1, v53, 1, v52);
  swift_bridgeObjectRelease();
  outlined init with copy of TransformationResult?((uint64_t)v26, v55, &demangling cache variable for type metadata for UsoIdentifier?);
  outlined init with copy of TransformationResult?(v1, (uint64_t)v19, &demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_2_63(v55);
  uint64_t v57 = v79;
  if (v58)
  {
    outlined init with take of PhoneCallNLIntent?((uint64_t)v19, v79, &demangling cache variable for type metadata for UsoIdentifier?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v55, &demangling cache variable for type metadata for UsoIdentifier?);
  }
  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v19, &demangling cache variable for type metadata for UsoIdentifier?);
    OUTLINED_FUNCTION_51_10();
    OUTLINED_FUNCTION_7_46();
    v59();
    OUTLINED_FUNCTION_23_27(v57);
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v60 = type metadata accessor for Logger();
  __swift_project_value_buffer(v60, (uint64_t)static Logger.siriPhone);
  outlined init with copy of TransformationResult?(v57, v3, &demangling cache variable for type metadata for UsoIdentifier?);
  uint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v61, v62))
  {
    Swift::String v63 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)Swift::String v63 = 136315138;
    outlined init with copy of TransformationResult?(v3, v72, &demangling cache variable for type metadata for UsoIdentifier?);
    uint64_t v64 = String.init<A>(describing:)();
    uint64_t v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v65, &v86);
    uint64_t v6 = v82;
    uint64_t v1 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v57 = v79;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v3, &demangling cache variable for type metadata for UsoIdentifier?);
    _os_log_impl(&dword_0, v61, v62, "#UsoEntity_common_Group smsGroupNameId UsoIdentifier: %s", v63, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v81;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v3, &demangling cache variable for type metadata for UsoIdentifier?);
  }

  outlined init with copy of TransformationResult?(v57, v54, &demangling cache variable for type metadata for UsoIdentifier?);
  uint64_t v66 = v84;
  if (__swift_getEnumTagSinglePayload(v54, 1, v84) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v57, &demangling cache variable for type metadata for UsoIdentifier?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for UsoIdentifier?);
    uint64_t v67 = OUTLINED_FUNCTION_40_13();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v67, v68);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v54, &demangling cache variable for type metadata for UsoIdentifier?);
  }
  else
  {
    UsoIdentifier.value.getter();
    uint64_t v69 = OUTLINED_FUNCTION_39_15();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v69, v70);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for UsoIdentifier?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v26, &demangling cache variable for type metadata for UsoIdentifier?);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v54, v66);
  }
  OUTLINED_FUNCTION_26_1();
}

uint64_t protocol witness for SmsGroup.smsGroupName.getter in conformance UsoEntity_common_Group()
{
  return UsoEntity_common_Group.smsGroupName.getter();
}

void protocol witness for SmsGroup.smsGroupNameId.getter in conformance UsoEntity_common_Group()
{
}

uint64_t UsoEntity_common_App.appName.getter()
{
  uint64_t result = dispatch thunk of UsoEntity_common_App.name.getter();
  if (!v1) {
    return 0;
  }
  uint64_t v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v2 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void protocol witness for PhoneCallApp.applicationId.getter in conformance UsoEntity_common_App()
{
}

uint64_t protocol witness for PhoneCallApp.appName.getter in conformance UsoEntity_common_App()
{
  return UsoEntity_common_App.appName.getter();
}

void UsoEntity_common_PhoneCallMode.phoneCallAVMode.getter()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v45 = v7 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_PhoneCallMode.DefinedValues?, UsoEntity_common_PhoneCallMode.DefinedValues?));
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_5_8();
  uint64_t v51 = v10;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v11);
  uint64_t v13 = &v43[-v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  uint64_t v15 = OUTLINED_FUNCTION_11_0(v14);
  __chkstk_darwin(v15);
  uint64_t v46 = &v43[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_46_11();
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_5_17();
  uint64_t v50 = v19;
  OUTLINED_FUNCTION_18_0();
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = &v43[-v22];
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = &v43[-v25];
  __chkstk_darwin(v24);
  uint64_t v28 = &v43[-v27];
  uint64_t v49 = v0;
  dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter();
  uint64_t v52 = v4;
  uint64_t v47 = *(void (**)(unsigned char *, void, uint64_t))(v4 + 104);
  v47(v26, enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Audio(_:), v2);
  OUTLINED_FUNCTION_23_27((uint64_t)v26);
  uint64_t v48 = v8;
  uint64_t v29 = (uint64_t)&v13[*(int *)(v8 + 48)];
  outlined init with copy of TransformationResult?((uint64_t)v28, (uint64_t)v13, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  outlined init with copy of TransformationResult?((uint64_t)v26, v29, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_2_63((uint64_t)v13);
  if (v30)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v26, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v28, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    OUTLINED_FUNCTION_2_63(v29);
    if (v30)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v13, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      goto LABEL_20;
    }
    goto LABEL_9;
  }
  outlined init with copy of TransformationResult?((uint64_t)v13, (uint64_t)v23, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_2_63(v29);
  if (v30)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v26, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v28, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v23, v2);
LABEL_9:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v13, &demangling cache variable for type metadata for (UsoEntity_common_PhoneCallMode.DefinedValues?, UsoEntity_common_PhoneCallMode.DefinedValues?));
    goto LABEL_10;
  }
  uint64_t v35 = v52;
  uint64_t v36 = v45;
  OUTLINED_FUNCTION_7_46();
  v37();
  lazy protocol witness table accessor for type ContactQuery and conformance ContactQuery(&lazy protocol witness table cache variable for type UsoEntity_common_PhoneCallMode.DefinedValues and conformance UsoEntity_common_PhoneCallMode.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues);
  int v44 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v38 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v38(v36, v2);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v26, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v28, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  uint64_t v39 = OUTLINED_FUNCTION_40_13();
  ((void (*)(uint64_t))v38)(v39);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v13, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  if ((v44 & 1) == 0)
  {
LABEL_10:
    uint64_t v31 = v50;
    dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter();
    v47((unsigned char *)v1, enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Video(_:), v2);
    OUTLINED_FUNCTION_23_27(v1);
    uint64_t v32 = v51;
    uint64_t v33 = v51 + *(int *)(v48 + 48);
    outlined init with copy of TransformationResult?(v31, v51, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    outlined init with copy of TransformationResult?(v1, v33, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    OUTLINED_FUNCTION_2_63(v32);
    if (v30)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v31, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      OUTLINED_FUNCTION_2_63(v33);
      if (v30)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v32, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
        goto LABEL_20;
      }
    }
    else
    {
      outlined init with copy of TransformationResult?(v32, (uint64_t)v46, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      OUTLINED_FUNCTION_2_63(v33);
      if (!v34)
      {
        uint64_t v40 = v52;
        OUTLINED_FUNCTION_7_46();
        v41();
        lazy protocol witness table accessor for type ContactQuery and conformance ContactQuery(&lazy protocol witness table cache variable for type UsoEntity_common_PhoneCallMode.DefinedValues and conformance UsoEntity_common_PhoneCallMode.DefinedValues, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues);
        OUTLINED_FUNCTION_39_15();
        dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v42 = *(void (**)(void))(v40 + 8);
        OUTLINED_FUNCTION_53_8();
        v42();
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v31, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
        OUTLINED_FUNCTION_53_8();
        v42();
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v32, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
        goto LABEL_20;
      }
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v1, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v31, &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v46, v2);
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)(v32, &demangling cache variable for type metadata for (UsoEntity_common_PhoneCallMode.DefinedValues?, UsoEntity_common_PhoneCallMode.DefinedValues?));
  }
LABEL_20:
  OUTLINED_FUNCTION_26_1();
}

BOOL PhoneNumber.isEmergencyNumber.getter(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)((*(uint64_t (**)(void))(a2 + 16))() + 16) != 0;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t PhoneNumberImpl.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LocalEmergencyCallDisambiguationModel.items.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL PhoneNumberTag.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneNumberTag.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t PhoneNumberTag.rawValue.getter()
{
  return 0x636E656772656D65;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneNumberTag@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = PhoneNumberTag.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneNumberTag(void *a1@<X8>)
{
  *a1 = 0x636E656772656D65;
  a1[1] = 0xEF7265626D754E79;
}

void *specialized PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PhoneCallNLv4Contact();
  uint64_t v12 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  uint64_t v13 = specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:)((uint64_t)v11, a2, v12, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, a4);
  return v13;
}

uint64_t sub_2227D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

void *outlined retain of PhoneCallPersonName?(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t lazy protocol witness table accessor for type PhoneNumberTag and conformance PhoneNumberTag()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneNumberTag and conformance PhoneNumberTag;
  if (!lazy protocol witness table cache variable for type PhoneNumberTag and conformance PhoneNumberTag)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneNumberTag and conformance PhoneNumberTag);
  }
  return result;
}

uint64_t sub_2228E4()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 240))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_222924()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 248))(*v1);
}

uint64_t sub_222968()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 264))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_2229B4()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 288))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222A00()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 312))();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_222A4C()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t sub_222A98()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 336))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222AEC()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 384))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222B38()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 408))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222B84()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 432))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222BD0()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 456))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222C1C()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 480))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222C68()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 504))();
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_222CB4()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 528))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_222CFC()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 536))(*v1);
}

uint64_t sub_222D48()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 552))();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_222D94()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 560))();
}

uint64_t sub_222DE0()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 576))();
  *(_WORD *)uint64_t v0 = result;
  *(unsigned char *)(v0 + 2) = BYTE2(result);
  return result;
}

uint64_t sub_222E34()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 600))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_222E80()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 624))();
}

uint64_t sub_222ECC()
{
  OUTLINED_FUNCTION_2_27();
  uint64_t result = (*(uint64_t (**)(void))(v1 + 648))();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_222F14()
{
  OUTLINED_FUNCTION_22();
  return (*(uint64_t (**)(void))(v0 + 656))(*v1);
}

uint64_t assignWithCopy for PhoneCallNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(unsigned char *)(a1 + 75) = *(unsigned char *)(a2 + 75);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
  *(unsigned char *)(a1 + 79) = *(unsigned char *)(a2 + 79);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PhoneCallNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for PhoneCallNLv4Intent()
{
}

void type metadata accessor for PhoneNumberImpl()
{
}

unsigned char *storeEnumTagSinglePayload for PhoneNumberTag(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x223254);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for PhoneNumberTag()
{
}

uint64_t lazy protocol witness table accessor for type ContactQuery and conformance ContactQuery(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *OUTLINED_FUNCTION_9_47()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_10_36(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_11_38(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_22_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_27(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_26_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_19(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_39_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_16()
{
  return swift_bridgeObjectRelease();
}

INPerson OUTLINED_FUNCTION_48_14(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return SiriPhoneContact.toINPerson()();
}

uint64_t OUTLINED_FUNCTION_50_10()
{
  return 0;
}

void *static PhoneReferenceResolution.appsToRrEntities(apps:device:)(unint64_t a1, void *a2)
{
  uint64_t v76 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupIdentifier?);
  __chkstk_darwin(v3 - 8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v72 = v4;
  OUTLINED_FUNCTION_36();
  uint64_t v5 = type metadata accessor for RREntity();
  OUTLINED_FUNCTION_0_0();
  uint64_t v78 = v6;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v83 = (char *)v64 - v11;
  OUTLINED_FUNCTION_36();
  uint64_t v75 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_3_1();
  uint64_t v74 = v15;
  OUTLINED_FUNCTION_36();
  uint64_t v77 = type metadata accessor for UsoIdentifier();
  OUTLINED_FUNCTION_0_0();
  unint64_t v17 = v16;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_3_1();
  uint64_t v84 = v19;
  OUTLINED_FUNCTION_36();
  uint64_t v20 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_0_0();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_4();
  uint64_t v26 = v25 - v24;
  UUID.init()();
  uint64_t v71 = UUID.uuidString.getter();
  uint64_t v79 = v27;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v20);
  if (a1 >> 62) {
    goto LABEL_30;
  }
  uint64_t v28 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v28; uint64_t v28 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v73 = a1 & 0xC000000000000001;
    uint64_t v68 = v13 + 8;
    unint64_t v65 = (void (**)(char *, char *, uint64_t))(v78 + 16);
    v64[1] = v78 + 32;
    v64[0] = v78 + 8;
    uint64_t v69 = (void (**)(uint64_t, uint64_t))(v17 + 8);
    uint64_t v29 = _swiftEmptyArrayStorage;
    uint64_t v13 = 4;
    unint64_t v70 = a1;
    uint64_t v67 = v5;
    uint64_t v66 = v28;
    while (1)
    {
      if (v73)
      {
        uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v30 = *(void *)(a1 + 8 * v13);
        swift_retain();
      }
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      uint64_t v82 = v29;
      os_log_type_t v31 = App.appIdentifier.getter();
      if (!v32)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v48 = type metadata accessor for Logger();
        __swift_project_value_buffer(v48, (uint64_t)static Logger.siriPhone);
        uint64_t v49 = (void *)Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_14_2(v50))
        {
          uint64_t v51 = (_WORD *)OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_28_14(v51);
          OUTLINED_FUNCTION_24_1(&dword_0, v52, v53, "#ReferenceResolution appsToRrEntities get unexpected app id during appsToRrEntities, return an empty rrEntities array");
          OUTLINED_FUNCTION_6();
        }
        swift_release();

        return _swiftEmptyArrayStorage;
      }
      os_log_type_t v33 = v31;
      uint64_t v81 = v13 - 3;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_6_55();
      UsoIdentifier.init(value:appBundleId:namespace:)();
      type metadata accessor for UsoEntityBuilder_common_App();
      swift_allocObject();
      char v34 = (uint8_t *)UsoEntityBuilder_common_App.init()();
      uint64_t v85 = v30;
      __swift_project_boxed_opaque_existential_1(v76, v76[3]);
      dispatch thunk of DeviceState.siriLocale.getter();
      type metadata accessor for AppInfoBuilder();
      swift_initStackObject();
      AppInfoBuilder.getAppName(_:requestedLocale:)();
      OUTLINED_FUNCTION_11();
      v37(v35, v36);
      dispatch thunk of UsoEntityBuilder_common_App.setName(value:)();
      swift_bridgeObjectRelease();
      if (dispatch thunk of UsoEntityBuilder_common_App.name.getter())
      {
        dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)();
        swift_release();
      }
      if (!static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (one-time initialization token for siriPhone != -1) {
          swift_once();
        }
        uint64_t v54 = type metadata accessor for Logger();
        __swift_project_value_buffer(v54, (uint64_t)static Logger.siriPhone);
        uint64_t v55 = Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_14_2(v56))
        {
          uint64_t v57 = (_WORD *)OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_34_8(v57);
          _os_log_impl(&dword_0, v55, v33, "#ReferenceResolution appsToRrEntities error to convert common app entity builder to common app entity", v34, 2u);
          OUTLINED_FUNCTION_6();
        }
        swift_release();

        swift_release();
        (*v69)(v84, v77);
        return _swiftEmptyArrayStorage;
      }
      uint64_t v80 = v34;
      uint64_t v38 = type metadata accessor for GroupIdentifier();
      uint64_t v39 = v72;
      __swift_storeEnumTagSinglePayload(v72, 1, 1, v38);
      swift_retain();
      uint64_t v40 = v83;
      OUTLINED_FUNCTION_6_55();
      RREntity.init(id:appBundleId:usoEntity:dataType:data:group:)();
      swift_bridgeObjectRetain();
      GroupIdentifier.init(id:seq:)();
      __swift_storeEnumTagSinglePayload(v39, 0, 1, v38);
      RREntity.group.setter();
      uint64_t v5 = v67;
      (*v65)(v10, v40, v67);
      uint64_t v29 = v82;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v29 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v29[2] + 1, 1, (uint64_t)v29);
      }
      unint64_t v17 = v29[2];
      unint64_t v41 = v29[3];
      if (v17 >= v41 >> 1) {
        uint64_t v29 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v17 + 1, 1, (uint64_t)v29);
      }
      v29[2] = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))((unint64_t)v29+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v17, v10, v5);
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_11();
      v44(v42, v43);
      OUTLINED_FUNCTION_11();
      v47(v45, v46);
      ++v13;
      a1 = v70;
      if (v81 == v66) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
  }
  uint64_t v29 = _swiftEmptyArrayStorage;
LABEL_32:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v58 = type metadata accessor for Logger();
  __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
  uint64_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v59, v60))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
    OUTLINED_FUNCTION_1_3(&dword_0, v61, v62, "#ReferenceResolution appsToRrEntities successfully generate rrEntities for apps disambigation");
    OUTLINED_FUNCTION_6();
  }

  return v29;
}

uint64_t static PhoneReferenceResolution.getContactSourceType(contactSource:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x8000000000497050) {
    return 0;
  }
  OUTLINED_FUNCTION_23_28();
  uint64_t v4 = 0;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v4 = 1;
    if (a1 != 0xD000000000000022 || a2 != 0x80000000004917B0)
    {
      OUTLINED_FUNCTION_23_28();
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        return 1;
      }
      else {
        return 2;
      }
    }
  }
  return v4;
}

uint64_t static PhoneReferenceResolution.isTelephonyTargetFromSrr(contactSourceType:)(char a1)
{
  if (!a1) {
    goto LABEL_6;
  }
  char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (a1 == 2)
    {
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
LABEL_7:
      swift_bridgeObjectRelease();
      return v3 & 1;
    }
LABEL_6:
    char v3 = 1;
    goto LABEL_7;
  }
  char v3 = 1;
  return v3 & 1;
}

uint64_t ContactSourceType.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6E69737542727273;
  }
  if (a1 == 1) {
    return 0xD000000000000012;
  }
  return 0x54746C7561666564;
}

uint64_t static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v7 = type metadata accessor for PhoneRRTarget.Target(0);
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v8);
  uint64_t v94 = OUTLINED_FUNCTION_11_39(v9, v87);
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_3_1();
  uint64_t v95 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RREntity?);
  __chkstk_darwin(v14 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v17 = v16 - v15;
  type metadata accessor for RREntity();
  OUTLINED_FUNCTION_0_0();
  uint64_t v98 = v19;
  uint64_t v99 = v18;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_3_1();
  uint64_t v97 = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v91 = (uint64_t *)((char *)&v87 - v25);
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v93 = v27;
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v90 = v7;
  uint64_t v92 = v24;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v88 = a4;
    uint64_t v32 = v31;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v87 = a3;
    v101[0] = v33;
    *(_DWORD *)uint64_t v32 = 136315394;
    uint64_t v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039, 0x8000000000497070, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2080;
    uint64_t v100 = a1;
    type metadata accessor for UsoEntity();
    swift_retain();
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v28, v29, "#ReferenceResolution %s resolving %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    a3 = v87;
    OUTLINED_FUNCTION_6();
    a4 = v88;
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v36 = v96[3];
  __swift_project_boxed_opaque_existential_1(v96, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v95, a3, v94);
  type metadata accessor for ResolveQuery();
  swift_allocObject();
  swift_retain();
  ResolveQuery.init(referenceEntity:alternativeEntityTypes:restrictedEntitiesKey:matchedResultsSetting:)();
  RRReferenceResolverProtocol.resolveEntity(resolveQuery:)();
  swift_release();
  uint64_t v37 = v99;
  if (__swift_getEnumTagSinglePayload(v17, 1, v99) == 1)
  {
    outlined destroy of UUID?(v17, &demangling cache variable for type metadata for RREntity?);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_2() = 0;
      OUTLINED_FUNCTION_1_3(&dword_0, v40, v41, "#ReferenceResolution no entity found");
      OUTLINED_FUNCTION_6();
    }

    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v97, v17, v37);
  static Signpost.begin(_:)();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INPerson);
  uint64_t v42 = (void *)RREntity.convertData<A>(to:)();
  Signpost.OpenSignpost.end()();
  if (v42)
  {
    id v43 = v42;
    int v44 = (void *)Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    BOOL v46 = OUTLINED_FUNCTION_21_19(v45);
    uint64_t v48 = v91;
    uint64_t v47 = (uint64_t)v92;
    if (v46)
    {
      uint64_t v49 = (_WORD *)OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_34_8(v49);
      OUTLINED_FUNCTION_16_4(&dword_0, v50, v51, "#ReferenceResolution resolved to an INPerson");
      OUTLINED_FUNCTION_6();
    }

    uint64_t *v48 = (uint64_t)v43;
    OUTLINED_FUNCTION_10_37();
    goto LABEL_23;
  }
  RREntity.usoEntity.getter();
  OUTLINED_FUNCTION_20_25();
  type metadata accessor for UsoEntity_common_Person();
  OUTLINED_FUNCTION_8_60();
  swift_release();
  uint64_t v48 = v91;
  uint64_t v47 = (uint64_t)v92;
  if (!v101[0])
  {
    RREntity.usoEntity.getter();
    OUTLINED_FUNCTION_20_25();
    type metadata accessor for UsoEntity_common_Group();
    OUTLINED_FUNCTION_8_60();
    swift_release();
    uint64_t v57 = v101[0];
    if (v101[0])
    {
      uint64_t v58 = (void *)Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_14_2(v59))
      {
        os_log_type_t v60 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_28_14(v60);
        OUTLINED_FUNCTION_24_1(&dword_0, v61, v62, "#ReferenceResolution resolved to a common_Group");
        OUTLINED_FUNCTION_6();
      }
    }
    else
    {
      RREntity.usoEntity.getter();
      OUTLINED_FUNCTION_20_25();
      type metadata accessor for UsoEntity_common_Agent();
      OUTLINED_FUNCTION_8_60();
      swift_release();
      if (v101[0])
      {
        unint64_t v73 = (void *)Logger.logObject.getter();
        os_log_type_t v74 = static os_log_type_t.debug.getter();
        if (OUTLINED_FUNCTION_21_19(v74))
        {
          uint64_t v75 = (_WORD *)OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_34_8(v75);
          OUTLINED_FUNCTION_16_4(&dword_0, v76, v77, "#ReferenceResolution resolved to a common_Agent");
          OUTLINED_FUNCTION_6();
        }

        UsoEntity_common_Agent.toContactQuery()();
        goto LABEL_18;
      }
      RREntity.usoEntity.getter();
      type metadata accessor for UsoEntity_common_App();
      static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
      swift_release();
      uint64_t v57 = v101[0];
      if (!v101[0])
      {
        uint64_t v82 = (void *)Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_14_2(v83))
        {
          uint64_t v84 = (_WORD *)OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_28_14(v84);
          OUTLINED_FUNCTION_24_1(&dword_0, v85, v86, "#ReferenceResolution resolved entity was not recognized as a person or group");
          OUTLINED_FUNCTION_6();
        }

        uint64_t v63 = 1;
        uint64_t v36 = v90;
        goto LABEL_24;
      }
      uint64_t v58 = (void *)Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.debug.getter();
      if (OUTLINED_FUNCTION_14_2(v78))
      {
        uint64_t v79 = (_WORD *)OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_28_14(v79);
        OUTLINED_FUNCTION_24_1(&dword_0, v80, v81, "#ReferenceResolution resolved to a common_app");
        OUTLINED_FUNCTION_6();
      }
    }

    uint64_t *v48 = v57;
    OUTLINED_FUNCTION_10_37();
    goto LABEL_23;
  }
  uint64_t v52 = (void *)Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_21_19(v53))
  {
    uint64_t v54 = (_WORD *)OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_34_8(v54);
    OUTLINED_FUNCTION_16_4(&dword_0, v55, v56, "#ReferenceResolution resolved to a common_Person");
    OUTLINED_FUNCTION_6();
  }

  UsoEntity_common_Person.toContactQuery()();
LABEL_18:
  swift_release();
  OUTLINED_FUNCTION_10_37();
LABEL_23:
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = 0;
LABEL_24:
  __swift_storeEnumTagSinglePayload((uint64_t)v48, v63, 1, v36);
  uint64_t v64 = RREntity.appBundleId.getter();
  char v66 = static PhoneReferenceResolution.getContactSourceType(contactSource:)(v64, v65);
  swift_bridgeObjectRelease();
  swift_release();

  OUTLINED_FUNCTION_11();
  v67();
  outlined init with take of PhoneRRTarget.Target?((uint64_t)v48, v47);
  if (__swift_getEnumTagSinglePayload(v47, 1, v36) != 1)
  {
    uint64_t v71 = v89;
    outlined init with take of PhoneRRTarget.Target(v47, v89);
    outlined init with take of PhoneRRTarget.Target(v71, a4);
    uint64_t v68 = type metadata accessor for PhoneRRTarget(0);
    *(unsigned char *)(a4 + *(int *)(v68 + 20)) = v66;
    uint64_t v69 = a4;
    uint64_t v70 = 0;
    return __swift_storeEnumTagSinglePayload(v69, v70, 1, v68);
  }
  outlined destroy of UUID?(v47, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
LABEL_26:
  uint64_t v68 = type metadata accessor for PhoneRRTarget(0);
  uint64_t v69 = a4;
  uint64_t v70 = 1;
  return __swift_storeEnumTagSinglePayload(v69, v70, 1, v68);
}

uint64_t PhoneRRTarget.init(target:source:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  outlined init with take of PhoneRRTarget.Target(a1, a3);
  uint64_t result = type metadata accessor for PhoneRRTarget(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

void *static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void (*v37)(long long *__return_ptr, long long *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  long long v54[2];
  long long v55[2];
  unint64_t v56;

  uint64_t v47 = a4;
  uint64_t v48 = a6;
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  os_log_type_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v49 = v10;
  __chkstk_darwin(v11);
  uint64_t v13 = OUTLINED_FUNCTION_11_39(v12, v46);
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_4();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 144))(v20, v21);
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t))(v15 + 104);
  v22(v19, enum case for MatchedResultsSetting.defaultMatching(_:), v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (PhoneCallNLIntent.hasOnlyCallVerb()() && static UsoUtils.buildDummyReferenceEntity()())
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                   + (v56 & 0xFFFFFFFFFFFFFF8)) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
    v22(v19, enum case for MatchedResultsSetting.extremelySalientResultsOnly(_:), v13);
  }
  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    int v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v44) {
      goto LABEL_28;
    }
  }
  else if (!*(void *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_28:
    BOOL v30 = _swiftEmptyArrayStorage;
    goto LABEL_29;
  }
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v24 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  if (v25) {
    uint64_t v26 = v24;
  }
  else {
    uint64_t v26 = 0;
  }
  if (v25) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = 0xE000000000000000;
  }
  __chkstk_darwin(v24);
  *(&v46 - 4) = (uint64_t)&v56;
  *(&v46 - 3) = a5;
  *(&v46 - 2) = v19;
  static SiriKitEventSender.current.getter();
  unint64_t v28 = specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)(302, v26, v27, (uint64_t)v55, (void (*)(uint64_t *__return_ptr))partial apply for closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:));
  BOOL v30 = v29;
  uint64_t v50 = v31;
  BOOL v46 = v32;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  if (!v28)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  __swift_project_boxed_opaque_existential_1(a7, a7[3]);
  OUTLINED_FUNCTION_20_25();
  type metadata accessor for SiriKitEvent();
  LOBYTE(v55[0]) = 0;
  SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
  dispatch thunk of SiriKitEventSending.send(_:)();
  swift_release();
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8));
  }
  unint64_t v34 = v50;
  if (v33)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_19_26();
    (*(void (**)(unint64_t))(v35 + 16))(v28);
  }
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    os_log_type_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v45) {
      goto LABEL_26;
    }
  }
  else if (!*(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_26;
  }
  outlined init with copy of SignalProviding(v47, (uint64_t)v55);
  outlined init with copy of SignalProviding(v48, (uint64_t)v54);
  uint64_t v36 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(v55, v36 + 16);
  outlined init with take of AppSelectionSignalComponent(v54, v36 + 56);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)();
  uint64_t v37 = (void (*)(long long *__return_ptr, long long *))Transformer.transform.getter();
  specialized _arrayForceCast<A, B>(_:)();
  *(void *)&v55[0] = v38;
  v37(v54, v55);
  swift_bridgeObjectRelease();
  swift_release();
  os_log_type_t v39 = *(void *)&v54[0];
  if (*(void *)&v54[0])
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_19_26();
    (*(void (**)(uint64_t))(v40 + 32))(v39);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_11();
  v41();
LABEL_26:
  uint64_t v42 = v30[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v42) {
    goto LABEL_27;
  }
LABEL_29:
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MatchedResultsSetting();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v10 = (void *)swift_bridgeObjectRetain();
  uint64_t v11 = static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:)(v10, a1, (uint64_t)v9);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v11;
  a3[1] = v13;
  a3[2] = v15;
  a3[3] = v17;
  return result;
}

void *static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v82 = a1;
  uint64_t v80 = type metadata accessor for ContactQuery();
  uint64_t v5 = *(void *)(v80 - 8);
  uint64_t v6 = __chkstk_darwin(v80);
  uint64_t v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v66 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v66 - v12;
  uint64_t v14 = type metadata accessor for PhoneRRTarget.Target(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (id *)((char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for PhoneRRTarget(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v81 = (uint64_t)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = a2;
  uint64_t v85 = a3;
  uint64_t v20 = specialized Sequence.compactMap<A>(_:)((void (*)(uint64_t *))partial apply for closure #1 in static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:), (uint64_t)v83, (unint64_t)v82);
  uint64_t v89 = _swiftEmptyArrayStorage;
  unint64_t v90 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v88 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v77 = v20[2];
  if (v77)
  {
    unint64_t v21 = 0;
    uint64_t v76 = (char *)v20 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v79 = (void (**)(char *, id *, uint64_t))(v5 + 32);
    uint64_t v72 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v71 = v5 + 8;
    uint64_t v82 = _swiftEmptyArrayStorage;
    uint64_t v73 = v17;
    os_log_type_t v74 = v20;
    uint64_t v75 = v18;
    uint64_t v70 = v11;
    uint64_t v69 = v13;
    uint64_t v68 = v14;
    uint64_t v67 = v16;
    while (1)
    {
      if (v21 >= v20[2])
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        JUMPOUT(0x225A5CLL);
      }
      unint64_t v22 = v21 + 1;
      uint64_t v23 = (uint64_t)&v76[*(void *)(v18 + 72) * v21];
      uint64_t v24 = v81;
      outlined init with copy of PhoneRRTarget.Target(v23, v81, (void (*)(void))type metadata accessor for PhoneRRTarget);
      outlined init with copy of PhoneRRTarget.Target(v24, (uint64_t)v16, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      unint64_t v78 = v22;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          id v27 = *v16;
          uint64_t v28 = dispatch thunk of UsoEntity_common_Group.name.getter();
          if (!v29) {
            goto LABEL_81;
          }
          uint64_t v30 = v28;
          unint64_t v31 = v29;
          swift_bridgeObjectRelease();
          uint64_t v32 = HIBYTE(v31) & 0xF;
          if ((v31 & 0x2000000000000000) == 0) {
            uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
          }
          if (!v32)
          {
LABEL_81:
            unint64_t v33 = dispatch thunk of UsoEntity_common_Group.members.getter();
            if (v33)
            {
              unint64_t v34 = v33;
              v66[1] = v27;
              unint64_t v87 = (unint64_t)_swiftEmptyArrayStorage;
              if (v33 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
                if (!v35) {
                  goto LABEL_44;
                }
LABEL_15:
                if (v35 < 1) {
                  goto LABEL_76;
                }
                for (uint64_t i = 0; i != v35; ++i)
                {
                  if ((v34 & 0xC000000000000001) != 0) {
                    specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    swift_retain();
                  }
                  dispatch thunk of CodeGenListEntry.entry.getter();
                  swift_release();
                  if (v86)
                  {
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                    if (*(void *)((char *)&dword_10 + (v87 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v87 & 0xFFFFFFFFFFFFFF8)) >> 1) {
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    }
                    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                    specialized Array._endMutation()();
                  }
                }
                swift_bridgeObjectRelease();
                unint64_t v50 = v87;
                uint64_t v17 = v73;
              }
              else
              {
                uint64_t v35 = *(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8));
                swift_bridgeObjectRetain();
                if (v35) {
                  goto LABEL_15;
                }
LABEL_44:
                swift_bridgeObjectRelease();
                unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
              }
              swift_bridgeObjectRelease();
              if (v50 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (!v51) {
                  goto LABEL_57;
                }
LABEL_47:
                unint64_t v87 = (unint64_t)_swiftEmptyArrayStorage;
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                if (v51 < 0) {
                  goto LABEL_77;
                }
                uint64_t v52 = 0;
                os_log_type_t v53 = (void *)v87;
                do
                {
                  if ((v50 & 0xC000000000000001) != 0) {
                    specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    swift_retain();
                  }
                  UsoEntity_common_Agent.toContactQuery()();
                  swift_release();
                  unint64_t v87 = (unint64_t)v53;
                  uint64_t v54 = v8;
                  unint64_t v55 = v53[2];
                  if (v55 >= v53[3] >> 1)
                  {
                    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    os_log_type_t v53 = (void *)v87;
                  }
                  ++v52;
                  v53[2] = v55 + 1;
                  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v53+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v55, v54, v80);
                  uint64_t v8 = v54;
                }
                while (v51 != v52);
                swift_bridgeObjectRelease();
                uint64_t v17 = v73;
              }
              else
              {
                uint64_t v51 = *(void *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFFF8));
                if (v51) {
                  goto LABEL_47;
                }
LABEL_57:
                swift_bridgeObjectRelease();
                os_log_type_t v53 = _swiftEmptyArrayStorage;
              }
              if (one-time initialization token for siriPhone != -1) {
                swift_once();
              }
              uint64_t v56 = type metadata accessor for Logger();
              __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
              uint64_t v57 = Logger.logObject.getter();
              os_log_type_t v58 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v57, v58))
              {
                os_log_type_t v59 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)os_log_type_t v59 = 0;
                _os_log_impl(&dword_0, v57, v58, "#ReferenceResolution resolved to an unnamed common_Group", v59, 2u);
                swift_slowDealloc();
              }

              specialized Array.append<A>(contentsOf:)((uint64_t)v53);
              swift_release();
              uint64_t v11 = v70;
              uint64_t v13 = v69;
              goto LABEL_63;
            }
          }
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v49 = 0;
            _os_log_impl(&dword_0, v47, v48, "#ReferenceResolution resolved to a named common_Group", v49, 2u);
            swift_slowDealloc();
          }

          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v11 = v70;
          uint64_t v13 = v69;
          if (*(void *)((char *)&dword_10 + (v88 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v88 & 0xFFFFFFFFFFFFFF8)) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_release();
LABEL_63:
          uint64_t v16 = v67;
LABEL_64:
          if (*(unsigned char *)(v81 + *(int *)(v17 + 20)) == 3) {
            char v60 = 2;
          }
          else {
            char v60 = *(unsigned char *)(v81 + *(int *)(v17 + 20));
          }
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v61 = v82;
          }
          else
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v61 = v63;
          }
          unint64_t v62 = v61[2];
          if (v62 >= v61[3] >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v61 = v64;
          }
          v61[2] = v62 + 1;
          uint64_t v82 = v61;
          *((unsigned char *)v61 + v62 + 32) = v60;
          outlined destroy of PhoneRRTarget.Target(v81, (void (*)(void))type metadata accessor for PhoneRRTarget);
          unint64_t v21 = v78;
          uint64_t v20 = v74;
          uint64_t v18 = v75;
          if (v78 == v77)
          {
            swift_bridgeObjectRelease();
            return (void *)v90;
          }
          break;
        case 2:
          uint64_t v37 = v80;
          uint64_t v38 = *v79;
          (*v79)(v13, v16, v80);
          (*v72)(v11, v13, v37);
          uint64_t v39 = (uint64_t)v89;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v39 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v39 + 16) + 1, 1, v39);
          }
          unint64_t v41 = *(void *)(v39 + 16);
          unint64_t v40 = *(void *)(v39 + 24);
          if (v41 >= v40 >> 1) {
            uint64_t v39 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1, v39);
          }
          *(void *)(v39 + 16) = v41 + 1;
          uint64_t v42 = v80;
          v38((char *)(v39+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v41), (id *)v11, v80);
          uint64_t v89 = (void *)v39;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v42);
          uint64_t v17 = v73;
          goto LABEL_64;
        case 3:
          swift_release();
          if (one-time initialization token for siriPhone != -1) {
            swift_once();
          }
          uint64_t v43 = type metadata accessor for Logger();
          __swift_project_value_buffer(v43, (uint64_t)static Logger.siriPhone);
          uint64_t v26 = Logger.logObject.getter();
          os_log_type_t v44 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v26, v44))
          {
            os_log_type_t v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v45 = 0;
            _os_log_impl(&dword_0, v26, v44, "#ReferenceResolution resolveEntities can't resolve apps", v45, 2u);
            swift_slowDealloc();
          }
          goto LABEL_35;
        default:
          uint64_t v26 = *v16;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v90 & 0xFFFFFFFFFFFFFF8)) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
LABEL_35:

          goto LABEL_64;
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)()
{
  void (*v1)(uint64_t *__return_ptr);
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unsigned char v8[40];

  OUTLINED_FUNCTION_16_35();
  outlined init with copy of SignalProviding(v4, (uint64_t)v8);
  type metadata accessor for PhoneSelfPerformanceLogger();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)((uint64_t)v8, v3, v2, v0);
  v1(&v7);
  uint64_t v5 = v7;
  swift_release();
  return v5;
}

__n128 specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)()
{
  void (*v1)(_OWORD *__return_ptr);
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __n128 result;
  __n128 v10;
  long long v11;
  _OWORD v12[2];
  uint64_t v13;
  char v14;
  unsigned char v15[40];

  OUTLINED_FUNCTION_16_35();
  uint64_t v5 = v4;
  outlined init with copy of SignalProviding(v6, (uint64_t)v15);
  type metadata accessor for PhoneSelfPerformanceLogger();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)((uint64_t)v15, v3, v2, v0);
  v1(v12);
  uint64_t v10 = (__n128)v12[1];
  uint64_t v11 = v12[0];
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  swift_release();
  uint64_t result = v10;
  *(_OWORD *)uint64_t v5 = v11;
  *(__n128 *)(v5 + 16) = v10;
  *(void *)(v5 + 32) = v7;
  *(unsigned char *)(v5 + 40) = v8;
  return result;
}

uint64_t closure #2 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)()
{
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter();
}

uint64_t PhoneRRTarget.target.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of PhoneRRTarget.Target(v1, a1, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
}

uint64_t PhoneRRTarget.source.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PhoneRRTarget(0) + 20));
}

PhoneCallFlowDelegatePlugin::ContactSourceType_optional __swiftcall ContactSourceType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ContactSourceType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::ContactSourceType_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ContactSourceType_optional)v3;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ContactSourceType()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ContactSourceType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ContactSourceType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ContactSourceType(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::ContactSourceType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ContactSourceType@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ContactSourceType_optional *a2@<X8>)
{
  result.value = ContactSourceType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ContactSourceType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ContactSourceType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t outlined bridged method (pb) of @objc static INIntent.typeName()(void *a1)
{
  id v1 = [a1 typeName];
  if (!v1) {
    return 0;
  }
  Swift::String v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for PhoneRRTarget.Target(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneRRTarget.Target);
}

uint64_t type metadata accessor for PhoneRRTarget(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for PhoneRRTarget);
}

uint64_t outlined init with take of PhoneRRTarget.Target?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of PhoneRRTarget.Target(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneRRTarget.Target(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)@<X0>(void *a1@<X8>)
{
  return closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_225F54()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

unint64_t lazy protocol witness table accessor for type ContactSourceType and conformance ContactSourceType()
{
  unint64_t result = lazy protocol witness table cache variable for type ContactSourceType and conformance ContactSourceType;
  if (!lazy protocol witness table cache variable for type ContactSourceType and conformance ContactSourceType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactSourceType and conformance ContactSourceType);
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneReferenceResolution()
{
  return &type metadata for PhoneReferenceResolution;
}

char *initializeBufferWithCopyOfBuffer for PhoneRRTarget(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    type metadata accessor for PhoneRRTarget.Target(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *(void *)a1 = *a2;
        swift_retain();
        break;
      case 2u:
        uint64_t v10 = type metadata accessor for ContactQuery();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      default:
        uint64_t v7 = *a2;
        *(void *)a1 = *a2;
        uint64_t v8 = v7;
        break;
    }
    swift_storeEnumTagMultiPayload();
    a1[*(int *)(a3 + 20)] = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void destroy for PhoneRRTarget(void **a1)
{
  type metadata accessor for PhoneRRTarget.Target(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      Swift::String v2 = *a1;

      break;
    case 1u:
    case 3u:
      swift_release();
      break;
    case 2u:
      uint64_t v3 = type metadata accessor for ContactQuery();
      uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    default:
      return;
  }
}

void *initializeWithCopy for PhoneRRTarget(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for PhoneRRTarget.Target(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      *a1 = *a2;
      swift_retain();
      break;
    case 2u:
      uint64_t v8 = type metadata accessor for ContactQuery();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      break;
    default:
      uint64_t v6 = (void *)*a2;
      *a1 = *a2;
      id v7 = v6;
      break;
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for PhoneRRTarget(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneRRTarget.Target((uint64_t)a1, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
    type metadata accessor for PhoneRRTarget.Target(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *a1 = *a2;
        swift_retain();
        break;
      case 2u:
        uint64_t v8 = type metadata accessor for ContactQuery();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      default:
        uint64_t v6 = (void *)*a2;
        *a1 = *a2;
        id v7 = v6;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for PhoneRRTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PhoneRRTarget.Target(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = type metadata accessor for ContactQuery();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for PhoneRRTarget(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneRRTarget.Target((uint64_t)a1, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
    uint64_t v6 = type metadata accessor for PhoneRRTarget.Target(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = type metadata accessor for ContactQuery();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneRRTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2266C4);
}

uint64_t sub_2266C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PhoneRRTarget.Target(0);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 3u) {
      int v9 = 3;
    }
    else {
      int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v10 = v9 - 3;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 3u) {
      return v10;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for PhoneRRTarget(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22676C);
}

void sub_22676C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for PhoneRRTarget.Target(0);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
}

uint64_t type metadata completion function for PhoneRRTarget()
{
  uint64_t result = type metadata accessor for PhoneRRTarget.Target(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PhoneRRTarget.Target(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *(void *)a1 = *a2;
        swift_retain();
        break;
      case 2u:
        uint64_t v9 = type metadata accessor for ContactQuery();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      default:
        uint64_t v6 = *a2;
        *(void *)a1 = *a2;
        uint64_t v7 = v6;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for PhoneRRTarget.Target(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      Swift::String v2 = *a1;

      break;
    case 1u:
    case 3u:
      swift_release();
      break;
    case 2u:
      uint64_t v3 = type metadata accessor for ContactQuery();
      uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    default:
      return;
  }
}

void *initializeWithCopy for PhoneRRTarget.Target(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      *a1 = *a2;
      swift_retain();
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for ContactQuery();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      break;
    default:
      uint64_t v4 = (void *)*a2;
      *a1 = *a2;
      id v5 = v4;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PhoneRRTarget.Target(void *a1, void *a2)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneRRTarget.Target((uint64_t)a1, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *a1 = *a2;
        swift_retain();
        break;
      case 2u:
        uint64_t v6 = type metadata accessor for ContactQuery();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
      default:
        uint64_t v4 = (void *)*a2;
        *a1 = *a2;
        id v5 = v4;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for PhoneRRTarget.Target(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = type metadata accessor for ContactQuery();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PhoneRRTarget.Target(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneRRTarget.Target((uint64_t)a1, (void (*)(void))type metadata accessor for PhoneRRTarget.Target);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = type metadata accessor for ContactQuery();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata completion function for PhoneRRTarget.Target()
{
  uint64_t result = type metadata accessor for ContactQuery();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactSourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22702CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactSourceType()
{
  return &type metadata for ContactSourceType;
}

uint64_t partial apply for closure #1 in static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)(*a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t outlined init with copy of PhoneRRTarget.Target(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t outlined destroy of PhoneRRTarget.Target(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_11();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_6_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_60()
{
  return static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)();
}

uint64_t OUTLINED_FUNCTION_10_37()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_39@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for MatchedResultsSetting();
}

uint64_t OUTLINED_FUNCTION_20_25()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_23_28()
{
  return v0;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a5;
  uint64_t v36 = a8;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v34 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  os_log_type_t v44 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v38 = (char *)&v30 - v12;
  __chkstk_darwin(v11);
  uint64_t v39 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v33 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = dispatch thunk of Collection.count.getter();
  if (!v19) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v20 = v19;
  uint64_t v31 = v14;
  uint64_t v48 = ContiguousArray.init()();
  uint64_t v40 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v20);
  uint64_t v32 = v18;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v20 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v22 = (void (**)(char *))(v45 + 16);
    unint64_t v41 = (void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v45 = a6;
    uint64_t v23 = v38;
    uint64_t v24 = v32;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      (*v22)(v23);
      v25(v47, 0);
      uint64_t v26 = v46;
      v42(v23, v44);
      if (v26) {
        break;
      }
      uint64_t v46 = 0;
      (*v41)(v23, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v20)
      {
        uint64_t v27 = v37;
        uint64_t v28 = v33;
        uint64_t v29 = v31;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v33, v24, v31);
        _expectEnd<A>(of:is:)();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
        return v48;
      }
    }
    (*v41)(v23, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v36, v44, v35);
  }
  return result;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.__allocating_init(promptProvider:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v31 = a1;
  uint64_t v5 = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v30 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_19_27();
  type metadata accessor for PhoneCallBaseCatTemplatingService();
  outlined init with copy of SharedGlobalsProviding(a2, (uint64_t)v32);
  OUTLINED_FUNCTION_12_31();
  default argument 0 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v10 = OUTLINED_FUNCTION_12_31();
  default argument 2 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(v10, v11);
  uint64_t v12 = OUTLINED_FUNCTION_12_31();
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(v12, v13);
  uint64_t v14 = OUTLINED_FUNCTION_12_31();
  default argument 4 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(v16, v14, v15);
  uint64_t v17 = OUTLINED_FUNCTION_12_31();
  default argument 6 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)(v19, v17, v18);
  uint64_t v20 = OUTLINED_FUNCTION_12_31();
  default argument 6 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)(v20, v21);
  PhoneCallBaseCatTemplatingService.__allocating_init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v23 = v22;
  uint64_t v24 = v30;
  uint64_t v25 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v30, v31, v5);
  uint64_t v26 = v29;
  outlined init with copy of SharedGlobalsProviding(v29, (uint64_t)v32);
  uint64_t v27 = (*(uint64_t (**)(char *, unsigned char *, uint64_t, void, uint64_t))(v3 + 200))(v24, v32, v23, 0, 255);
  __swift_destroy_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v5);
  return v27;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.authenticationPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + direct field offset for ContactNeedsDisambiguationFlowStrategy.authenticationPolicy;
  type metadata accessor for UnlockDevicePolicy();
  OUTLINED_FUNCTION_10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t ContactNeedsDisambiguationFlowStrategy.promptProvider.getter()
{
  OUTLINED_FUNCTION_10();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.sharedGlobals.getter()
{
  OUTLINED_FUNCTION_22();
  return outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(v1 + 120), v2);
}

uint64_t ContactNeedsDisambiguationFlowStrategy.templatingService.getter()
{
  return swift_retain();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.referenceResolver.getter()
{
  OUTLINED_FUNCTION_22();
  return outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(v1 + 136), v2);
}

void key path setter for ContactNeedsDisambiguationFlowStrategy.cachedPromptResponse : <A>ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)a2 + *(void *)(**(void **)a2 + 144);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 8);
  swift_beginAccess();
  uint64_t v5 = *(void **)v3;
  *(void *)uint64_t v3 = v2;
  unsigned __int8 v6 = *(unsigned char *)(v3 + 8);
  *(unsigned char *)(v3 + 8) = v4;
  outlined copy of ContactDisambiguationPromptResponse?(v2, v4);
  outlined consume of ContactDisambiguationPromptResponse?(v5, v6);
}

id ContactNeedsDisambiguationFlowStrategy.cachedPromptResponse.getter()
{
  OUTLINED_FUNCTION_22();
  uint64_t v2 = v0 + *(void *)(v1 + 144);
  swift_beginAccess();
  id v3 = *(id *)v2;
  outlined copy of ContactDisambiguationPromptResponse?(*(id *)v2, *(unsigned char *)(v2 + 8));
  return v3;
}

id outlined copy of ContactDisambiguationPromptResponse?(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    return outlined copy of ContactDisambiguationPromptResponse(result, a2);
  }
  return result;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.__allocating_init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  ContactNeedsDisambiguationFlowStrategy.init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t *ContactNeedsDisambiguationFlowStrategy.init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned __int8 v6 = v5;
  uint64_t v12 = *v6;
  static UnlockDevicePolicy.default.getter();
  *(uint64_t *)((char *)v6 + direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate) = (uint64_t)_swiftEmptyArrayStorage;
  OUTLINED_FUNCTION_19();
  uint64_t v14 = (uint64_t)v6 + *(void *)(v13 + 144);
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = -1;
  OUTLINED_FUNCTION_19();
  uint64_t v16 = *(void *)(v12 + 80);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))((uint64_t)v6 + *(void *)(v15 + 112), a1, v16);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v6 + *(void *)(*v6 + 120));
  OUTLINED_FUNCTION_19();
  *(uint64_t *)((char *)v6 + *(void *)(v18 + 128)) = a3;
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 72))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  outlined init with copy of SharedGlobalsProviding(v21 + 120, (uint64_t)v28);
  swift_release();
  OUTLINED_FUNCTION_19();
  outlined init with take of AppSelectionSignalComponent(v28, (uint64_t)v6 + *(void *)(v22 + 136));
  OUTLINED_FUNCTION_19();
  uint64_t v24 = (uint64_t)v6 + *(void *)(v23 + 144);
  swift_beginAccess();
  uint64_t v25 = *(void **)v24;
  *(void *)uint64_t v24 = a4;
  unsigned __int8 v26 = *(unsigned char *)(v24 + 8);
  *(unsigned char *)(v24 + 8) = a5;
  outlined consume of ContactDisambiguationPromptResponse?(v25, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v6;
}

void ContactNeedsDisambiguationFlowStrategy.actionForInput(_:resolveRecord:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate);
  OUTLINED_FUNCTION_36_12();
  outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(v9 + 136), (uint64_t)&v24);
  OUTLINED_FUNCTION_36_12();
  outlined init with copy of SharedGlobalsProviding(v0 + *(void *)(v10 + 120), (uint64_t)&v25);
  uint64_t v23 = v8;
  swift_bridgeObjectRetain();
  Input.parse.getter();
  uint64_t v11 = ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)((uint64_t)v7);
  LOBYTE(v8) = v12;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  outlined destroy of ContactDisambiguationPromptResponseParser((uint64_t)&v23);
  OUTLINED_FUNCTION_36_12();
  uint64_t v14 = v1 + *(void *)(v13 + 144);
  swift_beginAccess();
  uint64_t v15 = *(void **)v14;
  *(void *)uint64_t v14 = v11;
  unsigned __int8 v16 = *(unsigned char *)(v14 + 8);
  *(unsigned char *)(v14 + 8) = v8;
  outlined consume of ContactDisambiguationPromptResponse?(v15, v16);
  OUTLINED_FUNCTION_36_12();
  uint64_t v18 = (void *)(*(uint64_t (**)(void))(v17 + 176))();
  uint64_t v20 = v18;
  switch(v19)
  {
    case 0u:
      if (v18 - 1 < 2)
      {
        outlined consume of ContactDisambiguationPromptResponse?(v18, 0);
        static ActionForInput.cancel()();
      }
      else
      {
        if ((_BYTE)v18)
        {
          if (v18 != 6)
          {
            unsigned __int8 v19 = 0;
            goto LABEL_17;
          }
          static ActionForInput.ignore()();
        }
        else
        {
          static ActionForInput.handle()();
        }
        outlined consume of ContactDisambiguationPromptResponse?(v20, 0);
      }
      return;
    case 1u:
      unsigned __int8 v21 = 1;
      goto LABEL_12;
    case 2u:
      goto LABEL_17;
    case 3u:
      unsigned __int8 v21 = 3;
      goto LABEL_12;
    case 4u:
      if (v18) {
        goto LABEL_17;
      }
      uint64_t v18 = 0;
      unsigned __int8 v21 = 4;
LABEL_12:
      outlined consume of ContactDisambiguationPromptResponse?(v18, v21);
      static ActionForInput.handle()();
      break;
    default:
      if (v19 == 255) {
        goto LABEL_18;
      }
LABEL_17:
      outlined consume of ContactDisambiguationPromptResponse?(v18, v19);
LABEL_18:
      static ActionForInput.ignore()();
      break;
  }
}

uint64_t ContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[7] = v2;
  v1[8] = v0;
  v1[6] = v3;
  uint64_t v4 = *v0;
  v1[9] = *(void *)(*v0 + 88);
  v1[10] = *(void *)(v4 + 80);
  v1[11] = swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for IntentPromptAnswer();
  v1[12] = v5;
  OUTLINED_FUNCTION_19_0(v5);
  v1[13] = v6;
  v1[14] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ParameterIdentifier();
  v1[15] = v7;
  OUTLINED_FUNCTION_19_0(v7);
  v1[16] = v8;
  v1[17] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v9, v10, v11);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  char v7;
  Swift::Int v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t AssociatedConformanceWitness;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  int v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t (*v43)(void);
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  Swift::Int at;
  long long v58;
  long long v59;
  void *v60;
  uint64_t v61;

  char v60 = v0;
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  type metadata accessor for ParameterResolutionRecord();
  uint64_t v4 = (void *)ParameterResolutionRecord.intent.getter();
  v0[18] = v4;
  ParameterResolutionRecord.parameter.getter();
  uint64_t v5 = ParameterIdentifier.multicardinalIndex.getter();
  uint64_t v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v7) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v5;
  }
  at = v8;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  v0[19] = __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = v4;
  uint64_t v11 = Logger.logObject.getter();
  char v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = v0[11];
    uint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_47();
    *(void *)&os_log_type_t v58 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unsigned __int8 v16 = v10;
    (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v13);
    type metadata accessor for INPerson();
    uint64_t v17 = Array.description.getter();
    unsigned __int8 v19 = v18;
    swift_bridgeObjectRelease();
    v0[5] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v10 = v16;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v11, v12, "#ContactNeedsDisambiguationFlowStrategy contacts before parsing disambiguation response: %s", v14, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  OUTLINED_FUNCTION_22();
  unsigned __int8 v21 = (void *)(*(uint64_t (**)(void))(v20 + 176))();
  v0[20] = v21;
  if (v22 == 255) {
    goto LABEL_23;
  }
  uint64_t v23 = v21;
  if (v22 != 1)
  {
    if (v22)
    {
      outlined consume of ContactDisambiguationPromptResponse?(v21, v22);
    }
    else
    {
      uint64_t v24 = v21;
      outlined consume of ContactDisambiguationPromptResponse?(v21, 0);
      if ((v24 - 1) < 2)
      {
        uint64_t v25 = *(void *)(swift_getAssociatedConformanceWitness() + 8);

        unsigned __int8 v26 = v10;
        uint64_t v27 = Logger.logObject.getter();
        uint64_t v28 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = v0[11];
          uint64_t v56 = v10;
          uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_47();
          *(void *)&os_log_type_t v58 = OUTLINED_FUNCTION_14_0();
          *(_DWORD *)uint64_t v30 = 136315138;
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v25);
          type metadata accessor for INPerson();
          uint64_t v31 = Array.description.getter();
          unint64_t v33 = v32;
          swift_bridgeObjectRelease();
          v0[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, (uint64_t *)&v58);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_0, v27, v28, "#ContactNeedsDisambiguationFlowStrategy contacts after user said no: %s", v30, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_6();
          uint64_t v10 = v56;
          OUTLINED_FUNCTION_6();
        }
        else
        {
        }
        os_log_type_t v58 = 0u;
        os_log_type_t v59 = 0u;
        uint64_t v54 = v26;
        IntentPromptAnswer.init(answeredValue:updatedIntent:)();
        goto LABEL_24;
      }
    }
LABEL_23:
    os_log_type_t v58 = 0u;
    os_log_type_t v59 = 0u;
    uint64_t v40 = v10;
    IntentPromptAnswer.init(answeredValue:updatedIntent:)();
LABEL_24:
    static DisambiguationResult.chosenItem(_:)();

    unint64_t v41 = OUTLINED_FUNCTION_24_21();
    v42(v41);
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v43();
  }
  uint64_t v34 = v0[11];
  uint64_t v35 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  v0[21] = v35;
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8);
  v0[22] = v36;
  v0[23] = (v35 + 8) & 0xFFFFFFFFFFFFLL | 0x11ED000000000000;
  outlined copy of ContactDisambiguationPromptResponse(v23, 1u);
  uint64_t v37 = v36(v34, v35);
  if (v37) {
    uint64_t v38 = v37;
  }
  else {
    uint64_t v38 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = *(void *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (at >= v39) {
    INPersonContainingIntent.appendContact(person:)((INPerson)v23);
  }
  else {
    INPersonContainingIntent.replaceContact(at:person:)(at, (INPerson)v23);
  }
  uint64_t v45 = v10;
  uint64_t v46 = Logger.logObject.getter();
  uint64_t v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    unint64_t v55 = v0[11];
    uint64_t v48 = (uint8_t *)OUTLINED_FUNCTION_47();
    *(void *)&os_log_type_t v58 = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v48 = 136315138;
    v36(v55, v35);
    type metadata accessor for INPerson();
    uint64_t v49 = Array.description.getter();
    uint64_t v51 = v50;
    swift_bridgeObjectRelease();
    v0[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v46, v47, "#ContactNeedsDisambiguationFlowStrategy contacts after user disambiguated: %s", v48, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  uint64_t v52 = ParameterResolutionRecord.app.getter();
  v0[24] = v52;
  os_log_type_t v53 = (void *)swift_task_alloc();
  v0[25] = v53;
  *os_log_type_t v53 = v0;
  v53[1] = ContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:);
  return ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:)((uint64_t)v23, (uint64_t)v45, v52, at);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_5_7();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v5 = v4;
  *(void *)(v7 + 208) = v6;
  *(void *)(v7 + 216) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t (*v17)(void);
  void *v19;
  uint64_t v20[4];
  uint64_t v21;
  uint64_t v22;

  unsigned __int8 v21 = v0;
  uint64_t v1 = *(id *)(v0 + 208);
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    unsigned __int8 v19 = *(void **)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_47();
    v20[0] = OUTLINED_FUNCTION_14_0();
    *(_DWORD *)uint64_t v7 = 136315138;
    v4(v6, v5);
    type metadata accessor for INPerson();
    uint64_t v8 = Array.description.getter();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v2, v3, "#ContactNeedsDisambiguationFlowStrategy contacts after re-running CRR: %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
  }
  uint64_t v11 = *(void **)(v0 + 208);
  char v12 = *(void **)(v0 + 160);
  uint64_t v13 = *(void **)(v0 + 144);
  v20[3] = type metadata accessor for INPerson();
  v20[0] = (uint64_t)v12;
  outlined copy of ContactDisambiguationPromptResponse?(v12, 1u);
  uint64_t v14 = v11;
  IntentPromptAnswer.init(answeredValue:updatedIntent:)();
  static DisambiguationResult.chosenItem(_:)();
  outlined consume of ContactDisambiguationPromptResponse?(v12, 1u);
  outlined consume of ContactDisambiguationPromptResponse?(v12, 1u);

  uint64_t v15 = OUTLINED_FUNCTION_24_21();
  v16(v15);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return v17();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v2 = *(void **)(v0 + 144);
  outlined consume of ContactDisambiguationPromptResponse?(v1, 1u);
  outlined consume of ContactDisambiguationPromptResponse?(v1, 1u);

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v3();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[31] = a4;
  v5[32] = v4;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  OUTLINED_FUNCTION_2();
  v5[33] = v6;
  return OUTLINED_FUNCTION_21_1((uint64_t)ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:));
}

uint64_t ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:)()
{
  if (INPerson.hasHandleValue.getter())
  {
    OUTLINED_FUNCTION_47_0();
    id v2 = v1;
    OUTLINED_FUNCTION_28_1();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 248);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
  uint64_t v8 = type metadata accessor for ContactQuery();
  OUTLINED_FUNCTION_19_0(v8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_467710;
  INPerson.toContactQuery()();
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v0 + 64) = 2;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0x1123030905050204;
  *(_WORD *)(v0 + 88) = 518;
  *(void *)(v0 + 96) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 104) = v9;
  *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
  uint64_t v10 = v5 + *(void *)(*(void *)v5 + 120);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  static ContactSlotResolver.makeMulticardinalResolver<A>(multicardinalIndex:rchFlowContext:sharedGlobals:)(v7, 0, v6, 0, 0, v10, v0 + 120);
  swift_release();
  *(void *)(v0 + 208) = &type metadata for PhoneCallDirectInvocationNLIntent;
  *(void *)(v0 + 216) = &protocol witness table for PhoneCallDirectInvocationNLIntent;
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 184) = v11;
  outlined init with copy of PhoneCallDirectInvocationNLIntent(v0 + 16, v11 + 16);
  char v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v12;
  *(void *)(v0 + 280) = type metadata accessor for AnyIntentResolver();
  void *v12 = v0;
  v12[1] = ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:);
  OUTLINED_FUNCTION_28_1();
  return AnyIntentResolver.resolve(skIntent:nlIntent:)(v13, v14);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void (*v9)(void);
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_16_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11();
    v9();
  }
  else
  {
    *(void *)(v5 + 296) = v3;
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_11();
    v10();
    __swift_destroy_boxed_opaque_existential_1(v5 + 184);
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  outlined destroy of PhoneCallDirectInvocationNLIntent(v0 + 16);
  id v1 = *(void *)(v0 + 296);
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_1_0();
  outlined destroy of PhoneCallDirectInvocationNLIntent(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  OUTLINED_FUNCTION_47_0();
  return v1();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  OUTLINED_FUNCTION_2();
  v1[5] = v3;
  uint64_t v4 = type metadata accessor for UnlockDevicePolicy();
  v1[6] = v4;
  OUTLINED_FUNCTION_19_0(v4);
  v1[7] = v5;
  v1[8] = swift_task_alloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char **v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  long long v14;
  int8x16_t v15;
  uint64_t v16;

  swift_getAssociatedTypeWitness();
  type metadata accessor for ParameterResolutionRecord();
  uint64_t v14 = *(_OWORD *)(v0 + 24);
  id v1 = (void *)ParameterResolutionRecord.result.getter();
  uint64_t v2 = [v1 disambiguationItems];

  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)ParameterResolutionRecord.result.getter();
  uint64_t v6 = v5;
  uint64_t v7 = &selRef_alternatives;
  if (v4) {
    uint64_t v7 = &selRef_disambiguationItems;
  }
  uint64_t v8 = objc_msgSend(v5, *v7, v14);

  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = specialized _arrayConditionalCast<A, B>(_:)(v9);
  *(void *)(v0 + 72) = v10;
  swift_bridgeObjectRelease();
  if (!v10) {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 80) = v11;
  *(void *)(v11 + 16) = v10;
  *(int8x16_t *)(v11 + 24) = vextq_s8(v15, v15, 8uLL);
  char v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v12;
  type metadata accessor for SiriKitDisambiguationList();
  void *v12 = v0;
  v12[1] = ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:);
  OUTLINED_FUNCTION_11_1();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  id v1 = *v0;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v3, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  void v11[5];
  void *v12;
  uint64_t v13;

  char v12 = v0;
  uint64_t v2 = v0[7];
  id v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)(v4 + *(void *)(*(void *)v4 + 120));
  uint64_t v6 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v11, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + direct field offset for ContactNeedsDisambiguationFlowStrategy.authenticationPolicy, v3);
  type metadata accessor for SiriKitDisambiguationListAdapter();
  swift_allocObject();
  uint64_t v8 = SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:authenticationPolicy:)();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v8);
}

uint64_t closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v22 = a2;
  uint64_t v24 = a1;
  uint64_t v4 = *a3;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationList, Never>);
  uint64_t v5 = *(void *)(v23 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v23);
  uint64_t v7 = *(uint64_t *)((char *)a3 + *(void *)(v4 + 128));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v28 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
  uint64_t v27 = type metadata accessor for PhoneCallBaseCatTemplatingService();
  *(void *)&long long v26 = v7;
  type metadata accessor for ParameterResolutionRecord();
  swift_retain();
  ParameterResolutionRecord.app.getter();
  uint64_t v8 = App.appIdentifier.getter();
  unint64_t v10 = v9;
  swift_release();
  if (v10) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = 0;
  }
  if (v10) {
    unint64_t v12 = v10;
  }
  else {
    unint64_t v12 = 0xE000000000000000;
  }
  uint64_t v13 = (uint64_t *)((char *)a3 + *(void *)(*a3 + 120));
  uint64_t v14 = v13[3];
  uint64_t v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 184))(v25, v14, v15);
  uint64_t v16 = v13[3];
  uint64_t v17 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v16);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v34, v16, v17);
  v29[0] = v22;
  v29[1] = v22;
  outlined init with take of AppSelectionSignalComponent(&v26, (uint64_t)&v35);
  outlined init with take of AppSelectionSignalComponent(v25, (uint64_t)&v33);
  char v30 = 1;
  uint64_t v31 = v11;
  unint64_t v32 = v12;
  uint64_t v18 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v23);
  unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v19, (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  swift_bridgeObjectRetain_n();
  specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)((uint64_t)partial apply for closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:), v20);
  swift_release();
  return outlined destroy of PhoneContactDisambiguationItemFactory((uint64_t)v29);
}

uint64_t closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  void v4[4] = a1;
  v4[5] = a2;
  OUTLINED_FUNCTION_2();
  v4[8] = v5;
  return OUTLINED_FUNCTION_21_1((uint64_t)ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:));
}

void ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)()
{
  uint64_t v1 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PaginatedItemContainer<SiriKitDisambiguationItemPair>);
  v0[2] = PaginatedItemContainer.items.getter();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SiriKitDisambiguationItemPair]);
  type metadata accessor for INPerson();
  swift_getWitnessTable();
  uint64_t v3 = Sequence.compactMap<A>(_:)();
  swift_bridgeObjectRelease();
  uint64_t v4 = direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate;
  *(void *)(v1 + direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate) = v3;
  swift_bridgeObjectRelease();
  v0[3] = PaginatedItemContainer.items.getter();
  uint64_t v5 = type metadata accessor for SiriKitDisambiguationItem();
  uint64_t WitnessTable = swift_getWitnessTable();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))closure #2 in ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:), 0, v2, v5, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v7);
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v1 + v4);
  swift_bridgeObjectRetain_n();
  specialized _arrayForceCast<A, B>(_:)(v8);
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
  }
  if (v9 < 6 || (PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v8))
    && (specialized Sequence.contains(where:)(v8, (char *)&dword_0 + 2) & 1) != 0)
  {
    specialized Sequence.contains(where:)(v8, (char *)&dword_0 + 1);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for SiriKitDisambiguationList();
  swift_allocObject();
  v0[9] = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)();
  swift_getAssociatedTypeWitness();
  type metadata accessor for ParameterResolutionRecord();
  v0[10] = ParameterResolutionRecord.app.getter();
  v0[11] = ParameterResolutionRecord.intent.getter();
  v0[12] = ParameterResolutionRecord.result.getter();
  unint64_t v10 = (void *)swift_task_alloc();
  v0[13] = v10;
  *unint64_t v10 = v0;
  v10[1] = ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:);
  OUTLINED_FUNCTION_28_1();
  __asm { BRAA            X8, X16 }
}

uint64_t ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)()
{
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v7 = *(void **)(v3 + 88);

    swift_release();
  }
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v8, v9, v10);
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_release();
  OUTLINED_FUNCTION_6_0();
  return v0();
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(void **)(v0 + 88);

  swift_release();
  swift_release();
  OUTLINED_FUNCTION_47_0();
  return v2();
}

uint64_t closure #1 in ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)@<X0>(void *a1@<X8>)
{
  SiriKitDisambiguationItemPair.rawItem.getter();
  type metadata accessor for INPerson();
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *a1 = 0;
  }
  return result;
}

uint64_t closure #2 in ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SiriKitDisambiguationItemPair.formattedItem.getter();
  *a1 = result;
  return result;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.deinit()
{
  type metadata accessor for UnlockDevicePolicy();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11();
  v1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_10();
  (*(void (**)(void))(v2 + 8))();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 120));
  OUTLINED_FUNCTION_22();
  swift_release();
  OUTLINED_FUNCTION_22();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(v3 + 136));
  OUTLINED_FUNCTION_22();
  outlined consume of ContactDisambiguationPromptResponse?(*(id *)(v0 + *(void *)(v4 + 144)), *(unsigned char *)(v0 + *(void *)(v4 + 144) + 8));
  return v0;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.__deallocating_deinit()
{
  ContactNeedsDisambiguationFlowStrategy.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.authenticationPolicy.getter in conformance ContactNeedsDisambiguationFlowStrategy<A>@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + direct field offset for ContactNeedsDisambiguationFlowStrategy.authenticationPolicy;
  uint64_t v4 = type metadata accessor for UnlockDevicePolicy();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();

  return NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:)(a1, v5, a3);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.actionForInput(_:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208))();
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeDisambiguationItemContainer(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v2 + 232) + **(int **)(**(void **)v2 + 232));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = protocol witness for UnsupportedUnsetRelationshipFlowStrategyAsync.makeDisambiguationItemContainer(contacts:resolveRecord:) in conformance ContactUnsetRelationshipFlowStrategy<A>;
  return v7(a2);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.parseDisambiguationResult(input:paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v4 + 216)
                                                                   + **(int **)(**(void **)v4 + 216));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v12(a1, a2, a3, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makePromptForDisambiguation(paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v3 + 240)
                                                          + **(int **)(**(void **)v3 + 240));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v10(a1, a2, a3);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();

  return NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:)(a1, v5, a3);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();
  void *v12 = v6;
  v12[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:) in conformance ContactNeedsDisambiguationFlowStrategy<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t v15 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy();
  *uint64_t v14 = v7;
  v14[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t partial apply for closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)(uint64_t a1)
{
  return closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t base witness table accessor for ParameterResolutionHandlingAsync in ContactNeedsDisambiguationFlowStrategy<A>()
{
  return swift_getWitnessTable();
}

void *associated type witness table accessor for NeedsDisambiguationFlowStrategyAsync.DisambiguationItemContainerType : DisambiguationItemContaining in ContactNeedsDisambiguationFlowStrategy<A>()
{
  return &protocol witness table for SiriKitDisambiguationListAdapter;
}

uint64_t sub_22AC7C@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_22();
  uint64_t result = (*(uint64_t (**)(void))(v2 + 176))();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_22ACCC()
{
  return 16;
}

__n128 sub_22ACD8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata completion function for ContactNeedsDisambiguationFlowStrategy()
{
  uint64_t result = type metadata accessor for UnlockDevicePolicy();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for ContactNeedsDisambiguationFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22ADF8()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationList, Never>);
  OUTLINED_FUNCTION_10();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  OUTLINED_FUNCTION_11();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

uint64_t partial apply for closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationList, Never>);

  return closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)();
}

uint64_t sub_22AEF8()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t OUTLINED_FUNCTION_12_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_27()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OngoingCallRCHFlowFactory.makeHandleIntentFlow(app:intent:intentResponse:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (void *)v3;
  id v41 = a2;
  id v42 = a3;
  uint64_t v40 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_1();
  uint64_t v43 = v6;
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  uint64_t v38 = v13;
  uint64_t v39 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v35 - v17;
  outlined init with copy of SignalProviding(v3, (uint64_t)v46);
  specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of OngoingCallRCHFlowFactory.makeHandleIntentFlow(app:intent:intentResponse:));
  uint64_t v20 = v19;
  uint64_t v21 = type metadata accessor for HangUpAndCallHandleIntentStrategy();
  OUTLINED_FUNCTION_21_0();
  uint64_t v22 = HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)((uint64_t)v46, v20);
  uint64_t v37 = type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent);
  type metadata accessor for CNContactStore(0, &lazy cache variable for type metadata for INStartCallIntentResponse);
  RCHChildFlowProducersAsync.init()();
  OngoingCallRCHFlowFactory.addHangUpAndCallFlowProducers(sharedGlobals:producers:)((uint64_t)v4);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v18, v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_21_0();
  uint64_t v36 = RCHChildFlowFactory.init(producers:)();
  uint64_t v24 = v4[3];
  uint64_t v23 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v24);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 104))(v46, v24, v23);
  uint64_t v25 = v47;
  uint64_t v26 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  uint64_t v45 = v22;
  uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 24);
  uint64_t v28 = lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>);
  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))v27(&v45, v21, v28, v25, v26);
  swift_retain();
  id v30 = v41;
  id v31 = v42;
  IntentResolutionRecord.init(app:intent:intentResponse:)();
  uint64_t v32 = v29(v36, v9);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v9, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  v46[0] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyHandleIntentFlow<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_21_0();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>, &demangling cache variable for type metadata for AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  uint64_t v33 = AnyHandleIntentFlow.init<A>(_:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v38);
  return v33;
}

uint64_t OngoingCallRCHFlowFactory.makePreConfirmedRCHFlow(delegate:intent:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v29)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void v51[3];
  uint64_t v52;
  uint64_t v53;

  uint64_t v45 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_1();
  uint64_t v48 = v6;
  uint64_t v49 = v5;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_4();
  uint64_t v47 = v8 - v7;
  uint64_t v9 = type metadata accessor for CATOption();
  __chkstk_darwin(v9 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  id v42 = v10;
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  uint64_t v46 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_4();
  uint64_t v22 = v21 - v20;
  static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)();
  uint64_t v23 = v22 + *(int *)(v19 + 44);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v43(v17, v23, v10);
  OngoingCallRCHFlowFactory.addHangUpAndCallFlowProducers(sharedGlobals:producers:)((uint64_t)v3);
  outlined init with copy of SignalProviding((uint64_t)v3, (uint64_t)v51);
  type metadata accessor for PhoneCallDisplayTextCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v24 = CATWrapperSimple.__allocating_init(options:globals:)();
  type metadata accessor for StartCallCATsSimple();
  static CATOption.defaultMode.getter();
  uint64_t v25 = CATWrapperSimple.__allocating_init(options:globals:)();
  id v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  swift_allocObject();
  uint64_t v39 = a3;
  uint64_t v26 = specialized CallingIntentRCHFlowStrategy.init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)(v51, a3, v24, v25);
  uint64_t v40 = v26;
  uint64_t v28 = v3[3];
  uint64_t v27 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v28);
  uint64_t v29 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v27 + 104);
  swift_retain();
  v29(v51, v28, v27);
  id v31 = v52;
  id v30 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  unint64_t v50 = v26;
  uint64_t v32 = v42;
  v43(v44, (uint64_t)v17, v42);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v47, v22, v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_21_0();
  uint64_t v33 = RCHChildFlowFactory.init(producers:withFallbacks:)();
  uint64_t v34 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8);
  uint64_t v35 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>, &demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v36 = v34(&v50, v33, v39, v45, v41, v35, v31, v30);
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v32);
  outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>(v22);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v36;
}

uint64_t OngoingCallRCHFlowFactory.addHangUpAndCallFlowProducers(sharedGlobals:producers:)(uint64_t a1)
{
  outlined init with copy of SignalProviding(a1, (uint64_t)v5);
  specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of OngoingCallRCHFlowFactory.addHangUpAndCallFlowProducers(sharedGlobals:producers:));
  uint64_t v2 = v1;
  type metadata accessor for HangUpAndCallHandleIntentStrategy();
  swift_allocObject();
  uint64_t v3 = HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)((uint64_t)v5, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  RCHChildFlowProducersAsync.confirmIntentFlowProducer.setter();
  v5[0] = v3;
  lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>);
  static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)();
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter();
  v5[0] = v3;
  lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>);
  static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)();
  RCHChildFlowProducersAsync.continueInAppFlowProducer.setter();
  return swift_release();
}

ValueMetadata *type metadata accessor for OngoingCallRCHFlowFactory()
{
  return &type metadata for OngoingCallRCHFlowFactory;
}

uint64_t lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HangUpAndCallHandleIntentStrategy();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.sashTitle : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.sashTitle.setter();
}

uint64_t EmergencyCountdownModel.sashTitle.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.sashTitle.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  *uint64_t v0 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.cancelButtonText.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for EmergencyCountdownModel()
{
  uint64_t result = type metadata singleton initialization cache for EmergencyCountdownModel;
  if (!type metadata singleton initialization cache for EmergencyCountdownModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.cancelButtonText : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.cancelButtonText.setter();
}

uint64_t EmergencyCountdownModel.cancelButtonText.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.cancelButtonText.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.cancelledText.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for EmergencyCountdownModel.cancelledText : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.cancelledText.setter();
}

uint64_t EmergencyCountdownModel.cancelledText.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.cancelledText.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.callButtonText.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for EmergencyCountdownModel.callButtonText : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.callButtonText.setter();
}

uint64_t EmergencyCountdownModel.callButtonText.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.callButtonText.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.callingLabel.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for EmergencyCountdownModel.callingLabel : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.callingLabel.setter();
}

uint64_t EmergencyCountdownModel.callingLabel.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.callingLabel.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.emergencyServicesLabel.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for EmergencyCountdownModel.emergencyServicesLabel : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.emergencyServicesLabel.setter();
}

uint64_t EmergencyCountdownModel.emergencyServicesLabel.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.emergencyServicesLabel.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.sos.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for EmergencyCountdownModel.sos : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.sos.setter();
}

uint64_t EmergencyCountdownModel.sos.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.sos.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.dialog.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for EmergencyCountdownModel.dialog : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.dialog.setter();
}

uint64_t EmergencyCountdownModel.dialog.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.dialog.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.localeIdentifier.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for EmergencyCountdownModel.localeIdentifier : EmergencyCountdownModel()
{
  return EmergencyCountdownModel.localeIdentifier.setter();
}

uint64_t EmergencyCountdownModel.localeIdentifier.setter()
{
  return OUTLINED_FUNCTION_13_30();
}

uint64_t (*EmergencyCountdownModel.localeIdentifier.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t EmergencyCountdownModel.isSmartEnabled.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.isSmartEnabled.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.isSmartEnabled.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_38();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.callAction()
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);

  return CodableAceObject.init(wrappedValue:)();
}

uint64_t EmergencyCountdownModel.callAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for EmergencyCountdownModel.callAction : EmergencyCountdownModel(id *a1)
{
  id v1 = *a1;
  return EmergencyCountdownModel.callAction.setter();
}

uint64_t EmergencyCountdownModel.callAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.callAction.modify())()
{
  id v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  *(void *)(v0 + 32) = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.directInvocation()
{
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);

  return CodableAceObject.init(wrappedValue:)();
}

uint64_t EmergencyCountdownModel.cancelAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for EmergencyCountdownModel.cancelAction : EmergencyCountdownModel(id *a1)
{
  id v1 = *a1;
  return EmergencyCountdownModel.cancelAction.setter();
}

uint64_t EmergencyCountdownModel.cancelAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.cancelAction.modify())()
{
  id v1 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3_69((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  *(void *)(v0 + 32) = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmergencyCountdownModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

Swift::Void (__swiftcall *EmergencyCountdownModel.responseViewId.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void *EmergencyCountdownModel.resultViewID.unsafeMutableAddressor()
{
  return &static EmergencyCountdownModel.resultViewID;
}

unint64_t static EmergencyCountdownModel.resultViewID.getter()
{
  return 0xD000000000000017;
}

void EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:)(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v11 = (void *)(a1 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  *uint64_t v11 = 0xD000000000000017;
  v11[1] = 0x8000000000491290;
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  OUTLINED_FUNCTION_11_40();
  OUTLINED_FUNCTION_11_40();
  OUTLINED_FUNCTION_11_40();
  OUTLINED_FUNCTION_11_40();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  id v12 = a10;
  CodableAceObject.init(wrappedValue:)();
  type metadata accessor for CNContactStore(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  id v13 = a11;
  CodableAceObject.init(wrappedValue:)();
  OUTLINED_FUNCTION_11_40();
  Loggable.init(wrappedValue:)();
}

uint64_t EmergencyCountdownModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C74695468736173 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000497130 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x656C6C65636E6163 && a2 == 0xED00007478655464;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x747475426C6C6163 && a2 == 0xEE00747865546E6FLL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x4C676E696C6C6163 && a2 == 0xEC0000006C656261;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000000497150 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 7565171 && a2 == 0xE300000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 0x676F6C616964 && a2 == 0xE600000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000000497170 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              BOOL v11 = a1 == 0x457472616D537369 && a2 == 0xEE0064656C62616ELL;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                BOOL v12 = a1 == 0x697463416C6C6163 && a2 == 0xEA00000000006E6FLL;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else
                {
                  BOOL v13 = a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 11;
                  }
                  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
                  {
                    swift_bridgeObjectRelease();
                    return 12;
                  }
                  else
                  {
                    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    if (v15) {
                      return 12;
                    }
                    else {
                      return 13;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t EmergencyCountdownModel.CodingKeys.init(intValue:)()
{
  return 13;
}

unint64_t EmergencyCountdownModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0x6C74695468736173;
  switch(a1)
  {
    case 1:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t result = 0x747475426C6C6163;
      break;
    case 4:
      unint64_t result = 0x4C676E696C6C6163;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 7565171;
      break;
    case 7:
      unint64_t result = 0x676F6C616964;
      break;
    case 9:
      unint64_t result = 0x457472616D537369;
      break;
    case 10:
      unint64_t result = 0x697463416C6C6163;
      break;
    case 11:
      unint64_t result = 0x63416C65636E6163;
      break;
    case 12:
      unint64_t result = 0x65736E6F70736572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance EmergencyCountdownModel.CodingKeys()
{
  return EmergencyCountdownModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance EmergencyCountdownModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = EmergencyCountdownModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance EmergencyCountdownModel.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EmergencyCountdownModel.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance EmergencyCountdownModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance EmergencyCountdownModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t EmergencyCountdownModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<EmergencyCountdownModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
  OUTLINED_FUNCTION_8_9();
  if (!v1)
  {
    type metadata accessor for EmergencyCountdownModel();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_8_9();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_20_26();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_20_26();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t EmergencyCountdownModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v103 = v4;
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_3_1();
  uint64_t v97 = v6;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v104 = v7;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_3_1();
  uint64_t v98 = v9;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v106 = v10;
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_3_1();
  uint64_t v99 = v12;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v119 = v13;
  __chkstk_darwin(v14);
  uint64_t v100 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v16);
  uint64_t v101 = (char *)&v92 - v17;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v18);
  unint64_t v102 = (char *)&v92 - v19;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v20);
  uint64_t v112 = (char *)&v92 - v21;
  OUTLINED_FUNCTION_18_0();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v92 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v92 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v30 = __chkstk_darwin(v29);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v92 - v31;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<EmergencyCountdownModel.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v109 = v34;
  uint64_t v110 = v33;
  __chkstk_darwin(v33);
  OUTLINED_FUNCTION_5_1();
  uint64_t v35 = type metadata accessor for EmergencyCountdownModel();
  uint64_t v117 = (int *)__chkstk_darwin(v35);
  uint64_t v118 = (uint64_t)&v92 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t *)(v118 + v117[16]);
  uint64_t *v37 = 0xD000000000000017;
  v37[1] = 0x8000000000491290;
  uint64_t v115 = v37;
  uint64_t v38 = a1[3];
  uint64_t v113 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v38);
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  uint64_t v111 = v2;
  uint64_t v39 = v116;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v39)
  {
    uint64_t v116 = v39;
    uint64_t v40 = v114;
    uint64_t v44 = 4096;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1(v113);
    unsigned int v45 = (v44 >> 2) & 1;
    unsigned int v46 = (v44 >> 3) & 1;
    unsigned int v47 = (v44 >> 4) & 1;
    unsigned int v48 = (v44 >> 5) & 1;
    unsigned int v49 = (v44 >> 6) & 1;
    LODWORD(v113) = (v44 >> 7) & 1;
    if ((v44 & 1) == 0)
    {
      if ((v44 & 2) != 0)
      {
        OUTLINED_FUNCTION_23_29();
        OUTLINED_FUNCTION_4_59();
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_23_29();
      goto LABEL_13;
    }
    LODWORD(v111) = 0;
    LODWORD(v112) = 0;
    LODWORD(v109) = 0;
    LODWORD(v110) = 0;
    unsigned int v50 = (v44 >> 1) & 1;
LABEL_8:
    uint64_t v44 = *(void *)(v119 + 8);
    ((void (*)(uint64_t, uint64_t))v44)(v118, v40);
    if (v50)
    {
LABEL_9:
      uint64_t v51 = v118;
      uint64_t v52 = OUTLINED_FUNCTION_15_31(v117[5]);
      ((void (*)(uint64_t))v44)(v52);
      if ((v45 & 1) == 0) {
        goto LABEL_18;
      }
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v51 = v118;
    if (!v45)
    {
LABEL_18:
      if (v46)
      {
        OUTLINED_FUNCTION_4_59();
        os_log_type_t v53 = v117;
LABEL_20:
        uint64_t v55 = OUTLINED_FUNCTION_15_31(v53[7]);
        ((void (*)(uint64_t))v44)(v55);
        if (v47)
        {
LABEL_21:
          uint64_t v56 = OUTLINED_FUNCTION_15_31(v53[8]);
          ((void (*)(uint64_t))v44)(v56);
          int v57 = (int)v112;
          if ((v48 & 1) == 0)
          {
            if (v49)
            {
LABEL_23:
              OUTLINED_FUNCTION_4_59();
              int v58 = v109;
              goto LABEL_28;
            }
            goto LABEL_31;
          }
          goto LABEL_27;
        }
LABEL_25:
        if (!v48)
        {
          int v57 = (int)v112;
          if (v49) {
            goto LABEL_23;
          }
LABEL_31:
          int v58 = v109;
          goto LABEL_32;
        }
        OUTLINED_FUNCTION_4_59();
        int v57 = (int)v112;
LABEL_27:
        uint64_t v59 = OUTLINED_FUNCTION_15_31(v53[9]);
        ((void (*)(uint64_t))v44)(v59);
        int v58 = v109;
        if (v49)
        {
LABEL_28:
          uint64_t v60 = OUTLINED_FUNCTION_15_31(v53[10]);
          ((void (*)(uint64_t))v44)(v60);
          int v61 = v110;
          if ((v113 & 1) == 0)
          {
LABEL_37:
            if (v111)
            {
              OUTLINED_FUNCTION_4_59();
LABEL_39:
              uint64_t v63 = OUTLINED_FUNCTION_15_31(v53[12]);
              ((void (*)(uint64_t))v44)(v63);
              if ((v57 & 1) == 0) {
                goto LABEL_40;
              }
              goto LABEL_44;
            }
LABEL_43:
            if (!v57)
            {
LABEL_40:
              if (v58) {
                goto LABEL_41;
              }
              goto LABEL_45;
            }
LABEL_44:
            OUTLINED_FUNCTION_11();
            v65();
            if (v58)
            {
LABEL_41:
              OUTLINED_FUNCTION_11();
              v64();
              if ((v61 & 1) == 0) {
                return swift_bridgeObjectRelease();
              }
              goto LABEL_46;
            }
LABEL_45:
            if (!v61) {
              return swift_bridgeObjectRelease();
            }
LABEL_46:
            (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v51 + v53[15], v105);
            return swift_bridgeObjectRelease();
          }
          goto LABEL_34;
        }
LABEL_32:
        if (!v113)
        {
          int v61 = v110;
          goto LABEL_37;
        }
        OUTLINED_FUNCTION_4_59();
        int v61 = v110;
LABEL_34:
        uint64_t v62 = OUTLINED_FUNCTION_15_31(v53[11]);
        ((void (*)(uint64_t))v44)(v62);
        if (v111) {
          goto LABEL_39;
        }
        goto LABEL_43;
      }
      os_log_type_t v53 = v117;
      if (!v47) {
        goto LABEL_25;
      }
LABEL_17:
      OUTLINED_FUNCTION_4_59();
      goto LABEL_21;
    }
    OUTLINED_FUNCTION_4_59();
LABEL_15:
    os_log_type_t v53 = v117;
    uint64_t v54 = OUTLINED_FUNCTION_15_31(v117[6]);
    ((void (*)(uint64_t))v44)(v54);
    if (v46) {
      goto LABEL_20;
    }
    if (!v47) {
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  uint64_t v116 = v28;
  uint64_t v95 = v25;
  char v132 = 0;
  unint64_t v41 = _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
  uint64_t v42 = v114;
  uint64_t v43 = v110;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v93 = *(void (**)(void))(v119 + 32);
  uint64_t v92 = v119 + 32;
  ((void (*)(uint64_t, char *, uint64_t))v93)(v118, v32, v42);
  char v131 = 1;
  unint64_t v94 = v41;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v67 = v93;
  OUTLINED_FUNCTION_14_33();
  v67();
  char v130 = 2;
  OUTLINED_FUNCTION_9_48();
  OUTLINED_FUNCTION_14_33();
  v67();
  char v129 = 3;
  OUTLINED_FUNCTION_9_48();
  OUTLINED_FUNCTION_14_33();
  v67();
  char v128 = 4;
  OUTLINED_FUNCTION_17_26();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v68 = v109;
  OUTLINED_FUNCTION_14_33();
  v67();
  char v127 = 5;
  OUTLINED_FUNCTION_9_48();
  OUTLINED_FUNCTION_14_33();
  v69();
  char v126 = 6;
  OUTLINED_FUNCTION_17_26();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  OUTLINED_FUNCTION_14_33();
  v70();
  char v125 = 7;
  uint64_t v40 = v42;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v116 = 0;
  uint64_t v71 = v93;
  OUTLINED_FUNCTION_14_33();
  v71();
  char v124 = 8;
  uint64_t v72 = v111;
  uint64_t v73 = v116;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v116 = v73;
  if (v73)
  {
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v72, v43);
    uint64_t v44 = 4351;
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_14_33();
  v71();
  char v123 = 9;
  lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
  os_log_type_t v74 = v116;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  LODWORD(v112) = v74 == 0;
  uint64_t v116 = v74;
  if (v74
    || ((*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v118 + v117[13], v99, v108),
        char v122 = 10,
        lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>),
        uint64_t v75 = v116,
        KeyedDecodingContainer.decode<A>(_:forKey:)(),
        (uint64_t v116 = v75) != 0))
  {
    uint64_t v76 = OUTLINED_FUNCTION_5_52();
    v77(v76);
    LODWORD(v109) = 0;
    LODWORD(v110) = 0;
LABEL_53:
    __swift_destroy_boxed_opaque_existential_1(v113);
    LOBYTE(v50) = 1;
    unsigned int v45 = 1;
    unsigned int v46 = 1;
    unsigned int v47 = 1;
    unsigned int v48 = 1;
    unsigned int v49 = 1;
    LODWORD(v113) = 1;
    LODWORD(v111) = 1;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32))(v118 + v117[14], v98, v107);
  char v121 = 11;
  lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
  unint64_t v78 = v116;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v116 = v78;
  if (v78)
  {
    uint64_t v79 = OUTLINED_FUNCTION_5_52();
    v80(v79);
    LODWORD(v110) = 0;
    LODWORD(v109) = 1;
    goto LABEL_53;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))(v118 + v117[15], v97, v105);
  char v120 = 12;
  uint64_t v81 = v116;
  uint64_t v82 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v116 = v81;
  if (v81)
  {
    uint64_t v84 = OUTLINED_FUNCTION_5_52();
    v85(v84);
    LODWORD(v109) = 1;
    LODWORD(v110) = 1;
    goto LABEL_53;
  }
  uint64_t v86 = v82;
  uint64_t v87 = v83;
  uint64_t v88 = OUTLINED_FUNCTION_5_52();
  v89(v88);
  unint64_t v90 = v115;
  swift_bridgeObjectRelease();
  uint64_t *v90 = v86;
  v90[1] = v87;
  uint64_t v91 = v118;
  outlined init with copy of EmergencyCountdownModel(v118, v96);
  __swift_destroy_boxed_opaque_existential_1(v113);
  return outlined destroy of EmergencyCountdownModel(v91);
}

unint64_t lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t outlined init with copy of EmergencyCountdownModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of EmergencyCountdownModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance EmergencyCountdownModel(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EmergencyCountdownModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EmergencyCountdownModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownModel(void *a1)
{
  return EmergencyCountdownModel.encode(to:)(a1);
}

BOOL EmergencyCountdownUpdateAction.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EmergencyCountdownUpdateAction.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t EmergencyCountdownUpdateAction.rawValue.getter()
{
  return 0x69546C65636E6163;
}

unint64_t instantiation function for generic protocol witness table for EmergencyCountdownModel(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel((uint64_t)&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t base witness table accessor for Decodable in EmergencyCountdownModel()
{
  return lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel((uint64_t)&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel);
}

unint64_t base witness table accessor for Encodable in EmergencyCountdownModel()
{
  return lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel((uint64_t)&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel);
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_7_10(a1);
  if (!result)
  {
    type metadata accessor for EmergencyCountdownModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance EmergencyCountdownUpdateAction@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = EmergencyCountdownUpdateAction.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EmergencyCountdownUpdateAction(void *a1@<X8>)
{
  *a1 = 0x69546C65636E6163;
  a1[1] = 0xEB0000000072656DLL;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EmergencyCountdownUpdateAction()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownUpdateAction()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for UpdateResponseCommand.init(_:) in conformance EmergencyCountdownUpdateAction()
{
  return UpdateResponseCommand<>.init(_:)();
}

uint64_t protocol witness for UpdateResponseCommand.serializeData() in conformance EmergencyCountdownUpdateAction()
{
  return UpdateResponseCommand<>.serializeData()();
}

uint64_t sub_22E860()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.sashTitle.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E88C()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.cancelButtonText.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E8B8()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.cancelledText.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E8E4()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.callButtonText.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E910()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.callingLabel.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E93C()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.emergencyServicesLabel.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E968()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.sos.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E994()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.dialog.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E9C0()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.localeIdentifier.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_22E9EC()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.isSmartEnabled.getter();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_22EA18()
{
  return EmergencyCountdownModel.isSmartEnabled.setter();
}

uint64_t sub_22EA40()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.callAction.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_22EA6C()
{
  OUTLINED_FUNCTION_7_6();
  uint64_t result = EmergencyCountdownModel.cancelAction.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EmergencyCountdownModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
    v8((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
    v8((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]), v7);
    v8((uint64_t *)((char *)a1 + a3[11]), (uint64_t *)((char *)a2 + a3[11]), v7);
    v8((uint64_t *)((char *)a1 + a3[12]), (uint64_t *)((char *)a2 + a3[12]), v7);
    uint64_t v9 = a3[13];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[14];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[15];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[16];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EmergencyCountdownModel(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  v5(a1 + a2[8], v4);
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  v5(a1 + a2[11], v4);
  v5(a1 + a2[12], v4);
  uint64_t v6 = a1 + a2[13];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[14];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[15];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[16];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[16];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[16];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_22F8F0);
}

uint64_t sub_22F8F0(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_10:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[13];
LABEL_9:
    uint64_t v9 = a1 + v12;
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[14];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v16 + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = a3[15];
    goto LABEL_9;
  }
  unint64_t v18 = *(void *)(a1 + a3[16] + 8);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_22FA14);
}

void sub_22FA14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    OUTLINED_FUNCTION_1_6();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[13];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      OUTLINED_FUNCTION_1_6();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[14];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        OUTLINED_FUNCTION_1_6();
        if (*(_DWORD *)(v18 + 84) != a3)
        {
          *(void *)(a1 + a4[16] + 8) = (a2 - 1);
          return;
        }
        uint64_t v10 = v17;
        uint64_t v14 = a4[15];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void type metadata completion function for EmergencyCountdownModel()
{
  type metadata accessor for Loggable<String>(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<String>(319, &lazy cache variable for type metadata for Loggable<Bool>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>(319, &lazy cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void type metadata accessor for Loggable<String>(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Loggable();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    type metadata accessor for CNContactStore(255, a3);
    unint64_t v4 = type metadata accessor for CodableAceObject();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for EmergencyCountdownUpdateAction(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22FE04);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownUpdateAction()
{
  return &type metadata for EmergencyCountdownUpdateAction;
}

unsigned char *storeEnumTagSinglePayload for EmergencyCountdownModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22FF08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

void *type metadata accessor for EmergencyCountdownModel.CodingKeys()
{
  return &unk_55E288;
}

uint64_t OUTLINED_FUNCTION_3_69(uint64_t a1)
{
  *unint64_t v1 = a1;
  return type metadata accessor for EmergencyCountdownModel();
}

uint64_t OUTLINED_FUNCTION_8_61()
{
  return *(void *)(v0 - 168);
}

uint64_t OUTLINED_FUNCTION_9_48()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_10_38()
{
  return Loggable.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_11_40()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t OUTLINED_FUNCTION_13_30()
{
  return Loggable.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_15_31@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_16_36()
{
  return type metadata accessor for EmergencyCountdownModel();
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_26()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void OUTLINED_FUNCTION_23_29()
{
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 168) = 0;
}

uint64_t SeasContactInSingleAppRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[5] = a6;
  v7[6] = v6;
  v7[3] = a1;
  void v7[4] = a5;
  return _swift_task_switch(SeasContactInSingleAppRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:), 0, 0);
}

uint64_t SeasContactInSingleAppRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)()
{
  uint64_t v25 = v0;
  uint64_t v1 = static SeasRulesHelper.getContactDonationInfo(phoneCallNLIntent:appBundleIds:)(*(void **)(v0 + 32), *(void *)(v0 + 40));
  if (!v2) {
    goto LABEL_9;
  }
  unint64_t v5 = v2;
  if ((v4 & 1) != 0 || v3 != 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v17 = *(uint64_t **)(v0 + 24);
    uint64_t v18 = (unsigned int *)&enum case for AppMatchResolution.noMatchFound(_:);
    goto LABEL_12;
  }
  uint64_t v6 = v1;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void **)(v0 + 48);
  if (v10)
  {
    uint64_t v12 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v14 = v11[2];
    uint64_t v13 = v11[3];
    os_log_type_t type = v9;
    uint64_t v16 = v11[4];
    uint64_t v15 = v11[5];
    v24[1] = 0;
    v24[2] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v14, v13, v16, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v8, type, "%s current contact only exists in third party app %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = *(uint64_t **)(v0 + 24);
  *uint64_t v17 = v6;
  v17[1] = v5;
  uint64_t v18 = (unsigned int *)&enum case for AppMatchResolution.resolved(_:);
LABEL_12:
  uint64_t v19 = *v18;
  uint64_t matched = type metadata accessor for AppMatchResolution();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(matched - 8) + 104))(v17, v19, matched);
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

Swift::String __swiftcall SeasContactInSingleAppRule.getName()()
{
  uint64_t v0 = (void *)0x8000000000477120;
  uint64_t v1 = 0xD00000000000001ALL;
  result._object = v0;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t SeasContactInSingleAppRule.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SeasContactInSingleAppRule.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t SeasContactInSingleAppRule.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SeasContactInSingleAppRule.init()();
  return v0;
}

void *SeasContactInSingleAppRule.init()()
{
  v0[2] = type metadata accessor for SeasContactInSingleAppRule();
  v0[3] = &outlined read-only object #0 of SeasContactInSingleAppRule.init();
  v0[4] = 0;
  v0[5] = 0;
  return v0;
}

uint64_t protocol witness for SeasRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:) in conformance SeasContactInSingleAppRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)v6 + 88)
                                                                                     + **(int **)(**(void **)v6 + 88));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for SeasRule.getName() in conformance SeasContactInSingleAppRule()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

uint64_t type metadata accessor for SeasContactInSingleAppRule()
{
  return self;
}

uint64_t static UsoUtils.buildDummyReferenceEntity()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UsoTaskBuilder_noVerb_common_Person();
  swift_allocObject();
  uint64_t v7 = UsoTaskBuilder_noVerb_common_Person.init()();
  type metadata accessor for UsoEntityBuilder_common_Person();
  swift_allocObject();
  UsoEntityBuilder_common_Person.init()();
  type metadata accessor for UsoEntityBuilder_common_ReferenceType();
  swift_allocObject();
  UsoEntityBuilder_common_ReferenceType.init()();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:), v3);
  dispatch thunk of UsoEntityBuilder_common_ReferenceType.setDefinedValue(value:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_retain();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoReferenceType(value:)();
  swift_release();
  dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.setEntity(value:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_46A030;
  *(void *)(v8 + 32) = v7;
  v12[1] = v8;
  specialized Array._endMutation()();
  uint64_t v9 = type metadata accessor for UsoBuilderOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v9);
  swift_retain();
  static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
  swift_bridgeObjectRelease();
  outlined destroy of UsoBuilderOptions?((uint64_t)v2);
  uint64_t v10 = static UsoConversionUtils.extractFirstEntityFromGraph(graph:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v10;
}

ValueMetadata *type metadata accessor for UsoUtils()
{
  return &type metadata for UsoUtils;
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional __swiftcall SearchCallHistoryCATs.Properties.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v1 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v1 >= 0x28) {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional)40;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional)v1;
  }
}

void SearchCallHistoryCATs.Properties.rawValue.getter(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
      OUTLINED_FUNCTION_24_10();
      break;
    default:
      return;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATs.Properties(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATs.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATs.Properties@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional *a2@<X8>)
{
  result.value = SearchCallHistoryCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATs.Properties(void *a1@<X8>)
{
  SearchCallHistoryCATs.Properties.rawValue.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:completion:)()
{
  return OUTLINED_FUNCTION_184_1();
}

{
  unint64_t v0;
  unint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_28();
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v2 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_3_6(v2, (__n128)xmmword_467710);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_34();
    v2[3].n128_u64[1] = 0;
    v2[4].n128_u64[0] = 0;
  }
  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.buildCallRecordDetail(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(39);
  return v11(v10);
}

{
  unint64_t v0;

  OUTLINED_FUNCTION_43_2();
  return OUTLINED_FUNCTION_182_1(v0);
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.buildCallRecordDetail(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:completion:)()
{
  return OUTLINED_FUNCTION_184_1();
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_8_62(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  uint64_t v10 = OUTLINED_FUNCTION_73_0(44);
  return v11(v10);
}

{
  unint64_t v0;

  OUTLINED_FUNCTION_43_2();
  return OUTLINED_FUNCTION_182_1(v0);
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(unint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_3_6(v2, (__n128)xmmword_467710);
  if (a1)
  {
    uint64_t v3 = type metadata accessor for PhoneCallRecord(0);
    unint64_t v4 = a1;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_22_23();
  }
  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

void SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  char v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_11_0(v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v10 + 16) = xmmword_467720;
  uint64_t v11 = (uint64_t *)(v10 + 48);
  OUTLINED_FUNCTION_41_0();
  *(void *)(v12 + 32) = 0xD000000000000011;
  *(void *)(v12 + 40) = v13;
  outlined init with copy of SpeakableString?(v5, (uint64_t)v9, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6((uint64_t)v9, 1, v14);
  if (v15)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0((uint64_t)v9, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
  }
  else
  {
    *(void *)(v10 + 72) = v14;
    __swift_allocate_boxed_opaque_existential_1(v11);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v16 + 32))();
  }
  OUTLINED_FUNCTION_143_2();
  *(void *)(v10 + 80) = v17;
  *(void *)(v10 + 88) = v18;
  if (v1)
  {
    uint64_t v19 = 0;
    uint64_t v3 = 0;
    *(void *)(v10 + 104) = 0;
    *(void *)(v10 + 112) = 0;
  }
  else
  {
    uint64_t v19 = &type metadata for Double;
  }
  *(void *)(v10 + 120) = v19;
  *(void *)(v10 + 96) = v3;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:)()
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 80) = v2;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v6);
  *(void *)(v1 + 48) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  *(unsigned char *)(v1 + 72) = v3;
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  *(void *)(v1 + 40) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v11 = v10[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_36_2();
  v10[7] = v12;
  *(_OWORD *)(v12 + 16) = xmmword_467720;
  *(void *)(v12 + 32) = 0xD000000000000011;
  *(void *)(v12 + 40) = 0x80000000004971D0;
  OUTLINED_FUNCTION_39_0(v12, v13, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_202_0(v14);
  if (v15)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v16();
  }
  OUTLINED_FUNCTION_133_2();
  if (v17)
  {
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    *(void *)(v12 + 104) = 0;
    *(void *)(v12 + 112) = 0;
  }
  else
  {
    uint64_t v18 = v10[4];
    uint64_t v19 = &type metadata for Double;
  }
  *(void *)(v12 + 120) = v19;
  *(void *)(v12 + 96) = v18;
  uint64_t v20 = OUTLINED_FUNCTION_3_0();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_131_1(v20);
  *uint64_t v21 = v22;
  v21[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(void);
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_36_2();
  uint64_t v14 = OUTLINED_FUNCTION_57_0(v13);
  *(_OWORD *)(v14 + 16) = xmmword_467720;
  *(void *)(v14 + 32) = 0xD000000000000011;
  *(void *)(v14 + 40) = 0x80000000004971D0;
  OUTLINED_FUNCTION_39_0(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v16);
  if (v17)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v18();
  }
  OUTLINED_FUNCTION_133_2();
  if (v19)
  {
    uint64_t v21 = 0;
    uint64_t v20 = 0;
    v11[13] = 0;
    v11[14] = 0;
  }
  else
  {
    uint64_t v20 = *(void *)(v10 + 24);
    uint64_t v21 = &type metadata for Double;
  }
  v11[15] = v21;
  v11[12] = v20;
  uint64_t v22 = OUTLINED_FUNCTION_3_0();
  uint64_t v23 = (void *)OUTLINED_FUNCTION_65_5(v22);
  *uint64_t v23 = v24;
  v23[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_26_2(0xD000000000000022);
  OUTLINED_FUNCTION_26_8();
  return v28(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10);
}

void SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:)()
{
  OUTLINED_FUNCTION_24_0();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v9 + 16) = xmmword_467720;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v10 + 32) = 0xD000000000000011;
  *(void *)(v10 + 40) = v11;
  outlined init with copy of SpeakableString?(v6, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v12);
  if (v13)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    *(void *)(v9 + 72) = v12;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 48));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v14 + 32))();
  }
  OUTLINED_FUNCTION_143_2();
  *(void *)(v9 + 80) = v15;
  *(void *)(v9 + 88) = v16;
  if (v2)
  {
    char v17 = 0;
    uint64_t v4 = 0;
    *(void *)(v9 + 104) = 0;
    *(void *)(v9 + 112) = 0;
  }
  else
  {
    char v17 = &type metadata for Double;
  }
  *(void *)(v9 + 120) = v17;
  *(void *)(v9 + 96) = v4;
  OUTLINED_FUNCTION_260();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:completion:)()
{
  OUTLINED_FUNCTION_28();
  char v1 = v0;
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  *(void *)(v4 + 32) = 0xD000000000000014;
  *(void *)(v4 + 40) = 0x80000000004971F0;
  if (v3)
  {
    uint64_t v5 = type metadata accessor for DialogCalendar();
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_22_23();
  }
  *(void *)(v4 + 48) = v6;
  *(void *)(v4 + 72) = v5;
  *(void *)(v4 + 80) = 0xD000000000000011;
  OUTLINED_FUNCTION_158_0((uint64_t)"isTimeDescriptive");
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(unsigned char *)(v4 + 96) = v1 & 1;
  swift_retain();
  OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:));
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_178_1();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = OUTLINED_FUNCTION_95(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467720;
  uint64_t v6 = OUTLINED_FUNCTION_244(v5, v2 + 3);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for DialogCalendar();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v7 = *(unsigned char *)(v0 + 64);
  *(void *)(v1 + 88) = 0x8000000000497210;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v7;
  OUTLINED_FUNCTION_160_1(v6);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_72(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_178_1();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  uint64_t v5 = OUTLINED_FUNCTION_19_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_467720;
  uint64_t v6 = OUTLINED_FUNCTION_244(v5, v2 + 3);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for DialogCalendar();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v7 = *(unsigned char *)(v0 + 56);
  *(void *)(v1 + 88) = 0x8000000000497210;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(unsigned char *)(v1 + 96) = v7;
  OUTLINED_FUNCTION_160_1(v6);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_43_12(v8);
  *uint64_t v9 = v10;
  v9[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_32_0(v2 + 19);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  OUTLINED_FUNCTION_178_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v5 + 16) = xmmword_467720;
  *(void *)(v5 + 32) = v3 + 3;
  *(void *)(v5 + 40) = 0x80000000004971F0;
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogCalendar();
    char v7 = v2;
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_33_12();
  }
  *(void *)(v5 + 48) = v7;
  *(void *)(v5 + 72) = v6;
  *(void *)(v5 + 80) = v3;
  OUTLINED_FUNCTION_49_0((uint64_t)"isTimeDescriptive");
  *(void *)(v5 + 120) = &type metadata for Bool;
  *(unsigned char *)(v5 + 96) = a2 & 1;
  swift_retain();
  OUTLINED_FUNCTION_260();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v1 + 16) = xmmword_467710;
  *(void *)(v1 + 32) = 0xD000000000000012;
  *(void *)(v1 + 40) = 0x8000000000497230;
  if (v0)
  {
    uint64_t v2 = type metadata accessor for DialogPerson();
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:));
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_95(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"recipientToConfirm");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_19_2();
  uint64_t v6 = swift_task_alloc();
  char v7 = (void *)OUTLINED_FUNCTION_72(v6);
  *char v7 = v8;
  v7[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v13(v9, v10, v11, v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_31_0();
  uint64_t v4 = OUTLINED_FUNCTION_19_1(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467710;
  uint64_t v5 = OUTLINED_FUNCTION_10_1(v4, (uint64_t)"recipientToConfirm");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for DialogPerson();
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v5);
  OUTLINED_FUNCTION_19_2();
  uint64_t v6 = swift_task_alloc();
  char v7 = (void *)OUTLINED_FUNCTION_43_12(v6);
  *char v7 = v8;
  v7[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_32_0(0xD000000000000022);
  OUTLINED_FUNCTION_20_2();
  return v12(v9, v10, v11, v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  *(_OWORD *)(OUTLINED_FUNCTION_31_0() + 16) = xmmword_467710;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v1 + 32) = 0xD000000000000012;
  *(void *)(v1 + 40) = v2;
  if (v0)
  {
    uint64_t v3 = type metadata accessor for DialogPerson();
    uint64_t v4 = v0;
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v3, v4);
  OUTLINED_FUNCTION_88();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:));
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_106(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.confirmUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(31);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_106(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.confirmUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.errorWithCode(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.errorWithCode()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(31);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v7 + 16) = xmmword_467720;
  OUTLINED_FUNCTION_105(v7);
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v8);
  if (v9)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    *(void *)(v7 + 72) = v8;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 48));
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v10 + 32))();
  }
  OUTLINED_FUNCTION_133();
  *(void *)(v7 + 80) = v11;
  *(void *)(v7 + 88) = v12;
  if (v2)
  {
    uint64_t v13 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v14 = v2;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    *(void *)(v7 + 104) = 0;
    *(void *)(v7 + 112) = 0;
  }
  *(void *)(v7 + 96) = v14;
  *(void *)(v7 + 120) = v13;
  swift_retain();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_31_18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:)()
{
  OUTLINED_FUNCTION_1_0();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v5);
  v1[6] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = v0[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_36_2();
  v0[7] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467720;
  uint64_t v3 = OUTLINED_FUNCTION_105(v2);
  OUTLINED_FUNCTION_39_0(v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_202_0(v5);
  if (v6)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v7();
  }
  uint64_t v8 = v0[4];
  char v9 = OUTLINED_FUNCTION_176_1();
  if (v8)
  {
    char v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }
  else
  {
    *(void *)(v2 + 104) = 0;
    *(void *)(v2 + 112) = 0;
  }
  *(void *)(v2 + 96) = v8;
  *(void *)(v2 + 120) = v9;
  OUTLINED_FUNCTION_19_2();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_131_1(v10);
  *uint64_t v11 = v12;
  v11[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_20_2();
  return v17(v13, v14, v15, v16, v17, v18, v19, v20);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_1_0();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v4);
  v1[5] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = *(void *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = OUTLINED_FUNCTION_57_0(v3);
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  uint64_t v5 = OUTLINED_FUNCTION_105(v4);
  OUTLINED_FUNCTION_39_0(v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_38_3(v7);
  if (v8)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v2, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_17();
    v9();
  }
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v11 = OUTLINED_FUNCTION_176_1();
  if (v10)
  {
    uint64_t v11 = type metadata accessor for PhoneSearchCallHistoryIntent(v11);
  }
  else
  {
    v1[13] = 0;
    v1[14] = 0;
  }
  v1[12] = v10;
  v1[15] = v11;
  OUTLINED_FUNCTION_19_2();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_65_5(v12);
  *uint64_t v13 = v14;
  v13[1] = StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:);
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_20_2();
  return v18(v15, v16, v17, v18, v19, v20, v21, v22);
}

void SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_11_0(v5);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v7 + 16) = xmmword_467720;
  uint64_t v8 = (uint64_t *)(v7 + 48);
  OUTLINED_FUNCTION_105(v7);
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v0, 1, v9);
  if (v10)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }
  else
  {
    *(void *)(v7 + 72) = v9;
    __swift_allocate_boxed_opaque_existential_1(v8);
    OUTLINED_FUNCTION_10();
    (*(void (**)(void))(v11 + 32))();
  }
  OUTLINED_FUNCTION_133();
  *(void *)(v7 + 80) = v12;
  *(void *)(v7 + 88) = v13;
  if (v2)
  {
    uint64_t v14 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v15 = v2;
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_94_4();
  }
  *(void *)(v7 + 96) = v15;
  *(void *)(v7 + 120) = v14;
  swift_retain();
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24();
}

void SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_224_0();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_196_0();
  OUTLINED_FUNCTION_2_81(v14, (__n128)xmmword_472F90);
  if (v2) {
    OUTLINED_FUNCTION_196_1();
  }
  else {
    uint64_t v15 = &type metadata for Double;
  }
  v14[3].n128_u64[0] = v5;
  v14[4].n128_u64[1] = (unint64_t)v15;
  v14[5].n128_u64[0] = 0xD000000000000014;
  OUTLINED_FUNCTION_134_1((uint64_t)"totalCallRecordCount");
  if (v4)
  {
    uint64_t v16 = 0;
    unint64_t v3 = 0;
    v14[6].n128_u64[1] = 0;
    v14[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v16 = &type metadata for Double;
  }
  v14[6].n128_u64[0] = v3;
  OUTLINED_FUNCTION_185_1((uint64_t)v16);
  if (v0)
  {
    uint64_t v17 = type metadata accessor for SirikitDeviceState();
    uint64_t v18 = v0;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_97_3();
  }
  OUTLINED_FUNCTION_164_0(v17, v18);
  if (v11)
  {
    uint64_t v19 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v20 = v11;
  }
  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_193_1();
  }
  OUTLINED_FUNCTION_107_1(v19, v20);
  v14[15].n128_u8[0] = v9 & 1;
  OUTLINED_FUNCTION_250();
  v14[16].n128_u64[1] = v21;
  v14[17].n128_u64[0] = v22;
  v14[17].n128_u64[1] = 0xE700000000000000;
  outlined init with copy of SpeakableString?(v7, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v23 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_78_4(v23);
  if (v24)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    v14[19].n128_u64[1] = v2;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14[18]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_31_20();
    v25();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_221_0();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_1_0();
  v10[7] = a9;
  v10[8] = v9;
  OUTLINED_FUNCTION_183_0(v11, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v19);
  v10[9] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v20, v21, v22);
}

uint64_t SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  char v14 = *(unsigned char *)(v12 + 104);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_196_0();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_202_1(v15);
  OUTLINED_FUNCTION_2_81(v16, (__n128)xmmword_472F90);
  if (v14)
  {
    char v18 = 0;
    uint64_t v17 = 0;
    v13[7] = 0;
    v13[8] = 0;
  }
  else
  {
    uint64_t v17 = *(void *)(v12 + 24);
    char v18 = &type metadata for Double;
  }
  v13[6] = v17;
  v13[9] = v18;
  v13[10] = 0xD000000000000014;
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v19) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    uint64_t v20 = &type metadata for Double;
  }
  uint64_t v21 = *(void *)(v12 + 40);
  uint64_t v22 = OUTLINED_FUNCTION_41_12((uint64_t)v20);
  if (v21)
  {
    uint64_t v22 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v13[19] = 0;
    v13[20] = 0;
  }
  uint64_t v23 = *(void *)(v12 + 48);
  uint64_t v24 = OUTLINED_FUNCTION_40_14(v22);
  if (v23)
  {
    uint64_t v24 = type metadata accessor for PhoneSearchCallHistoryIntent(v24);
  }
  else
  {
    v13[25] = 0;
    v13[26] = 0;
  }
  uint64_t v25 = *(void *)(v12 + 72);
  OUTLINED_FUNCTION_26_23(v24);
  OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v26);
  uint64_t v27 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_199_0(v27);
  if (v28)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v25, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v29();
    swift_retain();
    swift_retain();
  }
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_104_1(v30);
  *uint64_t v31 = v32;
  v31[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_53_11();
  OUTLINED_FUNCTION_117();
  return v37(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void *v13;
  char v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  void *v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(void);
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  char v14 = *(unsigned char *)(v12 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_196_0();
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_203_1(v15);
  OUTLINED_FUNCTION_2_81(v16, (__n128)xmmword_472F90);
  if (v14)
  {
    char v18 = 0;
    uint64_t v17 = 0;
    v13[7] = 0;
    v13[8] = 0;
  }
  else
  {
    uint64_t v17 = *(void *)(v12 + 16);
    char v18 = &type metadata for Double;
  }
  v13[6] = v17;
  v13[9] = v18;
  v13[10] = 0xD000000000000014;
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v19) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    uint64_t v20 = &type metadata for Double;
  }
  uint64_t v21 = *(void *)(v12 + 32);
  uint64_t v22 = OUTLINED_FUNCTION_41_12((uint64_t)v20);
  if (v21)
  {
    uint64_t v22 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v13[19] = 0;
    v13[20] = 0;
  }
  uint64_t v23 = *(void *)(v12 + 40);
  uint64_t v24 = OUTLINED_FUNCTION_40_14(v22);
  if (v23)
  {
    uint64_t v24 = type metadata accessor for PhoneSearchCallHistoryIntent(v24);
  }
  else
  {
    v13[25] = 0;
    v13[26] = 0;
  }
  uint64_t v25 = *(void *)(v12 + 64);
  OUTLINED_FUNCTION_26_23(v24);
  OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v26);
  uint64_t v27 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_198_1(v27);
  if (v28)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v25, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v29();
    swift_retain();
    swift_retain();
  }
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_159_1(v30);
  *uint64_t v31 = v32;
  v31[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(0xD000000000000027);
  OUTLINED_FUNCTION_117();
  return v36(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

uint64_t SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_127_0();
  return v0();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_180(v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v9);
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_101_3();
  return v0();
}

void SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v7 = v6;
  char v9 = v8;
  unint64_t v11 = v10;
  OUTLINED_FUNCTION_200_1();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v14 = (__n128 *)OUTLINED_FUNCTION_196_0();
  OUTLINED_FUNCTION_2_81(v14, (__n128)xmmword_472F90);
  if (v1)
  {
    unint64_t v0 = 0;
    v14[3].n128_u64[1] = 0;
    v14[4].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_231_0();
  v14[3].n128_u64[0] = v0;
  v14[4].n128_u64[1] = v15;
  v14[5].n128_u64[0] = v16;
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v5)
  {
    uint64_t v17 = 0;
    unint64_t v4 = 0;
    v14[6].n128_u64[1] = 0;
    v14[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v17 = &type metadata for Double;
  }
  v14[6].n128_u64[0] = v4;
  v14[7].n128_u64[1] = (unint64_t)v17;
  v14[8].n128_u64[0] = 0x656369766564;
  v14[8].n128_u64[1] = 0xE600000000000000;
  if (v2)
  {
    type metadata accessor for SirikitDeviceState();
    unint64_t v18 = v2;
  }
  else
  {
    OUTLINED_FUNCTION_126_0();
  }
  v14[9].n128_u64[0] = v18;
  OUTLINED_FUNCTION_66_5();
  v14[10].n128_u64[1] = v19;
  v14[11].n128_u64[0] = v20;
  v14[11].n128_u64[1] = 0xE600000000000000;
  if (v11)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(0);
    unint64_t v21 = v11;
  }
  else
  {
    unint64_t v21 = 0;
    v14[12].n128_u64[1] = 0;
    v14[13].n128_u64[0] = 0;
  }
  v14[12].n128_u64[0] = v21;
  OUTLINED_FUNCTION_132();
  v14[13].n128_u64[1] = v22;
  v14[14].n128_u64[0] = v23;
  OUTLINED_FUNCTION_142();
  v14[14].n128_u64[1] = v24;
  v14[15].n128_u8[0] = v9 & 1;
  OUTLINED_FUNCTION_250();
  v14[16].n128_u64[1] = v25;
  v14[17].n128_u64[0] = v26;
  v14[17].n128_u64[1] = 0xE700000000000000;
  outlined init with copy of SpeakableString?(v7, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v27 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v3, 1, v27);
  if (v28)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v14[19].n128_u64[1] = v27;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14[18]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v29();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_231_0();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4, unint64_t a5)
{
  return SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:completion:)(a1, a2, a3, a4, a5);
}

{
  char v5;
  unint64_t v6;
  __n128 *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t vars8;

  OUTLINED_FUNCTION_240();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v9 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_2_81(v9, (__n128)xmmword_46A250);
  if (v5)
  {
    uint64_t v6 = 0;
    v9[3].n128_u64[1] = 0;
    v9[4].n128_u64[0] = 0;
  }
  v9[3].n128_u64[0] = v6;
  OUTLINED_FUNCTION_231_0();
  v9[4].n128_u64[1] = v10;
  v9[5].n128_u64[0] = v11;
  OUTLINED_FUNCTION_218_0((uint64_t)"totalCallRecordCount");
  if (a4)
  {
    OUTLINED_FUNCTION_195_1();
  }
  else
  {
    uint64_t v12 = &type metadata for Double;
    uint64_t v13 = a3;
  }
  v9[6].n128_u64[0] = v13;
  v9[7].n128_u64[1] = (unint64_t)v12;
  v9[8].n128_u64[0] = 0x746E65746E69;
  v9[8].n128_u64[1] = 0xE600000000000000;
  if (a5)
  {
    char v14 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    unint64_t v15 = a5;
  }
  else
  {
    char v14 = OUTLINED_FUNCTION_34();
    v9[9].n128_u64[1] = 0;
    v9[10].n128_u64[0] = 0;
  }
  v9[9].n128_u64[0] = v15;
  v9[10].n128_u64[1] = v14;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 48) = v6;
  *(unsigned char *)(v7 + 81) = a5;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a4;
  *(unsigned char *)(v7 + 80) = a3;
  *(void *)(v7 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v1 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v2 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 56) = v2;
  OUTLINED_FUNCTION_2_81(v2, (__n128)xmmword_46A250);
  if (v1) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v3 = *(void *)(v0 + 24);
  }
  OUTLINED_FUNCTION_154_1(v3);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v4) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    char v5 = &type metadata for Double;
  }
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = OUTLINED_FUNCTION_22_30((uint64_t)v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhoneSearchCallHistoryIntent(v7);
  }
  else
  {
    v2[9].n128_u64[1] = 0;
    v2[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_175_0(v7);
  OUTLINED_FUNCTION_19_2();
  uint64_t v8 = swift_task_alloc();
  char v9 = (void *)OUTLINED_FUNCTION_131_1(v8);
  *char v9 = v10;
  v9[1] = SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  char v1;
  __n128 *v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v1 = *(unsigned char *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v2 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 48) = v2;
  OUTLINED_FUNCTION_2_81(v2, (__n128)xmmword_46A250);
  if (v1) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v3 = *(void *)(v0 + 16);
  }
  OUTLINED_FUNCTION_153(v3);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v4) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    char v5 = &type metadata for Double;
  }
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = OUTLINED_FUNCTION_22_30((uint64_t)v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhoneSearchCallHistoryIntent(v7);
  }
  else
  {
    v2[9].n128_u64[1] = 0;
    v2[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_175_0(v7);
  OUTLINED_FUNCTION_19_2();
  uint64_t v8 = swift_task_alloc();
  char v9 = (void *)OUTLINED_FUNCTION_65_5(v8);
  *char v9 = v10;
  v9[1] = SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_32_0(49);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  char v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  return OUTLINED_FUNCTION_190_1();
}

{
  unint64_t v0;
  char v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  __n128 *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_212_1();
  unint64_t v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v9 = (__n128 *)OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_2_81(v9, (__n128)xmmword_46A250);
  if (v6)
  {
    uint64_t v8 = 0;
    v9[3].n128_u64[1] = 0;
    v9[4].n128_u64[0] = 0;
  }
  v9[3].n128_u64[0] = v8;
  OUTLINED_FUNCTION_231_0();
  v9[4].n128_u64[1] = v10;
  v9[5].n128_u64[0] = v11;
  OUTLINED_FUNCTION_158_0((uint64_t)"totalCallRecordCount");
  if (v2)
  {
    uint64_t v12 = 0;
    char v4 = 0;
    v9[6].n128_u64[1] = 0;
    v9[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v12 = &type metadata for Double;
  }
  v9[6].n128_u64[0] = v4;
  v9[7].n128_u64[1] = (unint64_t)v12;
  v9[8].n128_u64[0] = 0x746E65746E69;
  v9[8].n128_u64[1] = 0xE600000000000000;
  if (v0)
  {
    uint64_t v13 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v14 = v0;
  }
  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_34();
    v9[9].n128_u64[1] = 0;
    v9[10].n128_u64[0] = 0;
  }
  v9[9].n128_u64[0] = v14;
  v9[10].n128_u64[1] = v13;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = v5;
  *(unsigned char *)(v6 + 73) = a4;
  *(unsigned char *)(v6 + 72) = a2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.offerToCallBack(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.offerToCallBack()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(33);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:completion:)()
{
  return OUTLINED_FUNCTION_120_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_212_1();
  uint64_t v2 = v1;
  char v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v5 + 16) = xmmword_467710;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v0;
  *(void *)(v5 + 72) = &type metadata for Bool;
  *(unsigned char *)(v5 + 48) = v4;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.offerToContinueReading(isLastPage:));
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_19_28(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_87_3(v1, v2);
  char v4 = (void *)OUTLINED_FUNCTION_43_12(v3);
  *char v4 = v5;
  v4[1] = SearchCallHistoryCATs.offerToContinueReading(isLastPage:);
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_206_1();
  return v6();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(unint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_19_28(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_86_5(v1, v2);
  char v4 = (void *)OUTLINED_FUNCTION_40_4(v3);
  *char v4 = v5;
  v4[1] = SearchCallHistoryCATs.offerToContinueReading(isLastPage:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v6 = OUTLINED_FUNCTION_215_1(40);
  return v7(v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  OUTLINED_FUNCTION_245();
  return OUTLINED_FUNCTION_117_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_31_0();
  *(_OWORD *)(v6 + 16) = xmmword_467710;
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 72) = &type metadata for Bool;
  *(unsigned char *)(v6 + 48) = v5;
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.offerToContinueReading(isLastPage:));
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:completion:)()
{
  return OUTLINED_FUNCTION_120_1();
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:));
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_146_1(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_87_3(v1, v2);
  char v4 = (void *)OUTLINED_FUNCTION_43_12(v3);
  *char v4 = v5;
  v4[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  OUTLINED_FUNCTION_206_1();
  return v6();
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(unint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_146_1(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_86_5(v1, v2);
  char v4 = (void *)OUTLINED_FUNCTION_40_4(v3);
  *char v4 = v5;
  v4[1] = SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:);
  uint64_t v6 = OUTLINED_FUNCTION_215_1(44);
  return v7(v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  return OUTLINED_FUNCTION_117_1();
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:));
}

uint64_t SearchCallHistoryCATs.promptForCallTypes(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.promptForCallTypes()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.promptForDateCreated(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.promptForDateCreated()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.promptForRecipient(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.promptForRecipient()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(36);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.promptForUnseen(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.promptForUnseen()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(33);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  char v1 = v0;
  char v3 = v2;
  unint64_t v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_3_6(v10, (__n128)xmmword_46DE40);
  if (v9)
  {
    type metadata accessor for PhoneCallRecord(0);
    unint64_t v11 = v9;
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
  }
  v10[3].n128_u64[0] = v11;
  OUTLINED_FUNCTION_253();
  v10[4].n128_u64[1] = v12;
  v10[5].n128_u64[0] = v13;
  OUTLINED_FUNCTION_249();
  v10[5].n128_u64[1] = v14;
  v10[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_66_5();
  v10[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v10[8].n128_u64[0] = v15;
  v10[8].n128_u64[1] = 0xE600000000000000;
  if (v5)
  {
    uint64_t v16 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    unint64_t v17 = v5;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_126_0();
  }
  v10[9].n128_u64[0] = v17;
  v10[10].n128_u64[1] = v16;
  v10[11].n128_u64[0] = 0xD000000000000013;
  OUTLINED_FUNCTION_41_0();
  v10[11].n128_u64[1] = v18;
  v10[12].n128_u8[0] = v3 & 1;
  v10[13].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v10[14].n128_u64[0] = 0xD000000000000012;
  v10[14].n128_u64[1] = 0x8000000000497290;
  v10[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v10[15].n128_u8[0] = v1 & 1;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6)
{
  *(unsigned char *)(v7 + 74) = a6;
  *(unsigned char *)(v7 + 73) = a5;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 40) = v6;
  *(unsigned char *)(v7 + 72) = a3;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_104();
  unint64_t v14 = (__n128 *)OUTLINED_FUNCTION_57_0(v13);
  OUTLINED_FUNCTION_3_6(v14, (__n128)xmmword_46DE40);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v17 = *(void *)(v10 + 32);
  OUTLINED_FUNCTION_95_4(v15, v16);
  uint64_t v18 = OUTLINED_FUNCTION_141_0();
  if (v17)
  {
    uint64_t v18 = type metadata accessor for PhoneSearchCallHistoryIntent(v18);
  }
  else
  {
    *(void *)(v11 + 152) = 0;
    *(void *)(v11 + 160) = 0;
  }
  OUTLINED_FUNCTION_211_1(v18);
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_208_1(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  unint64_t v21 = (void *)OUTLINED_FUNCTION_65_5(v20);
  *unint64_t v21 = v22;
  v21[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = v10[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_104();
  void v10[5] = v13;
  OUTLINED_FUNCTION_3_6(v13, (__n128)xmmword_46DE40);
  if (v12)
  {
    unint64_t v14 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v15 = v12;
  }
  else
  {
    unint64_t v14 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v16 = v10[3];
  OUTLINED_FUNCTION_95_4(v14, v15);
  uint64_t v17 = OUTLINED_FUNCTION_141_0();
  if (v16)
  {
    uint64_t v17 = type metadata accessor for PhoneSearchCallHistoryIntent(v17);
  }
  else
  {
    v13[9].n128_u64[1] = 0;
    v13[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_211_1(v17);
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_208_1(v18);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  char v19 = (void *)swift_task_alloc();
  v10[6] = v19;
  *char v19 = v10;
  v19[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_26_2(v11 + 14);
  OUTLINED_FUNCTION_26_8();
  return v23(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a5;
  *(unsigned char *)(v6 + 65) = a4;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  OUTLINED_FUNCTION_24_0();
  char v1 = v0;
  char v3 = v2;
  unint64_t v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_3_6(v10, (__n128)xmmword_46DE40);
  if (v9)
  {
    type metadata accessor for PhoneCallRecord(0);
    unint64_t v11 = v9;
  }
  else
  {
    OUTLINED_FUNCTION_37_15();
  }
  v10[3].n128_u64[0] = v11;
  OUTLINED_FUNCTION_253();
  v10[4].n128_u64[1] = v12;
  v10[5].n128_u64[0] = v13;
  OUTLINED_FUNCTION_249();
  v10[5].n128_u64[1] = v14;
  v10[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_66_5();
  v10[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v10[8].n128_u64[0] = v15;
  v10[8].n128_u64[1] = 0xE600000000000000;
  if (v5)
  {
    uint64_t v16 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    unint64_t v17 = v5;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_97_3();
  }
  v10[9].n128_u64[0] = v17;
  v10[10].n128_u64[1] = v16;
  v10[11].n128_u64[0] = 0xD000000000000013;
  v10[11].n128_u64[1] = 0x8000000000497270;
  v10[12].n128_u8[0] = v3 & 1;
  v10[13].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v10[14].n128_u64[0] = 0xD000000000000012;
  OUTLINED_FUNCTION_166_1((uint64_t)"isTimeRangeRequest");
  v10[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v10[15].n128_u8[0] = v1 & 1;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4, unint64_t a5)
{
  return SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:completion:)(a1, a2, a3, a4, a5);
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 48) = v6;
  *(unsigned char *)(v7 + 81) = a5;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a4;
  *(unsigned char *)(v7 + 80) = a3;
  *(void *)(v7 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v1 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v2 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 56) = v2;
  OUTLINED_FUNCTION_2_81(v2, (__n128)xmmword_46A250);
  if (v1) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v3 = *(void *)(v0 + 24);
  }
  OUTLINED_FUNCTION_154_1(v3);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v4) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    unint64_t v5 = &type metadata for Double;
  }
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = OUTLINED_FUNCTION_22_30((uint64_t)v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhoneSearchCallHistoryIntent(v7);
  }
  else
  {
    v2[9].n128_u64[1] = 0;
    v2[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_175_0(v7);
  OUTLINED_FUNCTION_19_2();
  uint64_t v8 = swift_task_alloc();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_131_1(v8);
  *unint64_t v9 = v10;
  v9[1] = StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  char v1;
  __n128 *v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v1 = *(unsigned char *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v2 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 48) = v2;
  OUTLINED_FUNCTION_2_81(v2, (__n128)xmmword_46A250);
  if (v1) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v3 = *(void *)(v0 + 16);
  }
  OUTLINED_FUNCTION_153(v3);
  OUTLINED_FUNCTION_49_0((uint64_t)"totalCallRecordCount");
  if (v4) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    unint64_t v5 = &type metadata for Double;
  }
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = OUTLINED_FUNCTION_22_30((uint64_t)v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhoneSearchCallHistoryIntent(v7);
  }
  else
  {
    v2[9].n128_u64[1] = 0;
    v2[10].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_175_0(v7);
  OUTLINED_FUNCTION_19_2();
  uint64_t v8 = swift_task_alloc();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_65_5(v8);
  *unint64_t v9 = v10;
  v9[1] = StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_32_0(51);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  return OUTLINED_FUNCTION_190_1();
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = v5;
  *(unsigned char *)(v6 + 73) = a4;
  *(unsigned char *)(v6 + 72) = a2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = OUTLINED_FUNCTION_136_1();
  *(_OWORD *)(v17 + 16) = xmmword_46DE50;
  OUTLINED_FUNCTION_28_23(v17, 0x6953776F646E6977);
  if (a2)
  {
    uint64_t v18 = 0;
    a1 = 0;
    *(void *)(v17 + 56) = 0;
    *(void *)(v17 + 64) = 0;
  }
  else
  {
    uint64_t v18 = &type metadata for Double;
  }
  *(void *)(v17 + 48) = a1;
  *(void *)(v17 + 72) = v18;
  *(void *)(v17 + 80) = 0xD000000000000010;
  OUTLINED_FUNCTION_158_0((uint64_t)"callRecordsItem1");
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v17 + 96) = a3;
  *(void *)(v17 + 120) = v19;
  *(void *)(v17 + 128) = 0xD000000000000010;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 136) = v20;
  *(void *)(v17 + 144) = a4;
  *(void *)(v17 + 168) = v21;
  *(void *)(v17 + 176) = 0xD000000000000010;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 184) = v22;
  *(void *)(v17 + 192) = a5;
  *(void *)(v17 + 216) = v23;
  *(void *)(v17 + 224) = 0xD000000000000010;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 232) = v24;
  *(void *)(v17 + 240) = a6;
  OUTLINED_FUNCTION_66_5();
  *(void *)(v17 + 264) = v25;
  *(void *)(v17 + 272) = v26;
  *(void *)(v17 + 280) = 0xE600000000000000;
  if (a7)
  {
    uint64_t v27 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v28 = a7;
  }
  else
  {
    uint64_t v27 = OUTLINED_FUNCTION_34();
    *(void *)(v17 + 296) = 0;
    *(void *)(v17 + 304) = 0;
  }
  *(void *)(v17 + 288) = v28;
  *(void *)(v17 + 312) = v27;
  *(void *)(v17 + 320) = 0xD000000000000013;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 328) = v29;
  *(unsigned char *)(v17 + 336) = a8 & 1;
  *(void *)(v17 + 360) = &type metadata for Bool;
  *(void *)(v17 + 368) = 0xD000000000000012;
  OUTLINED_FUNCTION_134();
  *(void *)(v17 + 376) = v30;
  *(void *)(v17 + 408) = v31;
  *(unsigned char *)(v17 + 384) = a9 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9)
{
  *(_WORD *)(v10 + 105) = a9;
  *(void *)(v10 + 64) = a8;
  *(void *)(v10 + 72) = v9;
  *(void *)(v10 + 48) = a6;
  *(void *)(v10 + 56) = a7;
  *(void *)(v10 + 32) = a4;
  *(void *)(v10 + 40) = a5;
  *(unsigned char *)(v10 + 104) = a3;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  return OUTLINED_FUNCTION_27_22((uint64_t)SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:), 0, 0);
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  OUTLINED_FUNCTION_48();
  char v1 = *(unsigned char *)(v0 + 104);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_136_1();
  *(void *)(v0 + 80) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46DE50;
  OUTLINED_FUNCTION_28_23(v2, 0x6953776F646E6977);
  if (v1)
  {
    char v4 = 0;
    uint64_t v3 = 0;
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 24);
    char v4 = &type metadata for Double;
  }
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 32);
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = 0xD000000000000010;
  *(void *)(v2 + 88) = 0x80000000004972B0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v2 + 96) = v7;
  *(void *)(v2 + 120) = v8;
  *(void *)(v2 + 128) = 0xD000000000000010;
  *(void *)(v2 + 136) = 0x80000000004972D0;
  *(void *)(v2 + 144) = v6;
  uint64_t v9 = OUTLINED_FUNCTION_214_1(v8, (uint64_t)"callRecordsItem3");
  uint64_t v10 = OUTLINED_FUNCTION_118_2(v9, (uint64_t)"callRecordsItem4");
  if (v5)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    *(void *)(v2 + 296) = 0;
    *(void *)(v2 + 304) = 0;
  }
  char v11 = *(unsigned char *)(v0 + 106);
  char v12 = *(unsigned char *)(v0 + 105);
  *(void *)(v2 + 288) = v5;
  *(void *)(v2 + 312) = v10;
  *(void *)(v2 + 320) = 0xD000000000000013;
  *(void *)(v2 + 328) = 0x8000000000497270;
  *(unsigned char *)(v2 + 336) = v12;
  *(void *)(v2 + 360) = &type metadata for Bool;
  *(void *)(v2 + 368) = 0xD000000000000012;
  OUTLINED_FUNCTION_207_0(v11);
  OUTLINED_FUNCTION_213_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = swift_task_alloc();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_104_1(v13);
  *uint64_t v14 = v15;
  v14[1] = SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:);
  OUTLINED_FUNCTION_23_13();
  return v17();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_0();
    return v10();
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_127_0();
  return v0();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;

  OUTLINED_FUNCTION_48();
  char v1 = *(unsigned char *)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_136_1();
  *(void *)(v0 + 72) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46DE50;
  OUTLINED_FUNCTION_28_23(v2, 0x6953776F646E6977);
  if (v1)
  {
    char v4 = 0;
    uint64_t v3 = 0;
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 64) = 0;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 16);
    char v4 = &type metadata for Double;
  }
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 24);
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = 0xD000000000000010;
  *(void *)(v2 + 88) = 0x80000000004972B0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v2 + 96) = v7;
  *(void *)(v2 + 120) = v8;
  *(void *)(v2 + 128) = 0xD000000000000010;
  *(void *)(v2 + 136) = 0x80000000004972D0;
  *(void *)(v2 + 144) = v6;
  uint64_t v9 = OUTLINED_FUNCTION_214_1(v8, (uint64_t)"callRecordsItem3");
  uint64_t v10 = OUTLINED_FUNCTION_118_2(v9, (uint64_t)"callRecordsItem4");
  if (v5)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    *(void *)(v2 + 296) = 0;
    *(void *)(v2 + 304) = 0;
  }
  char v11 = *(unsigned char *)(v0 + 98);
  char v12 = *(unsigned char *)(v0 + 97);
  *(void *)(v2 + 288) = v5;
  *(void *)(v2 + 312) = v10;
  *(void *)(v2 + 320) = 0xD000000000000013;
  *(void *)(v2 + 328) = 0x8000000000497270;
  *(unsigned char *)(v2 + 336) = v12;
  *(void *)(v2 + 360) = &type metadata for Bool;
  *(void *)(v2 + 368) = 0xD000000000000012;
  OUTLINED_FUNCTION_207_0(v11);
  OUTLINED_FUNCTION_213_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = swift_task_alloc();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_159_1(v13);
  *uint64_t v14 = v15;
  v14[1] = SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:);
  uint64_t v16 = OUTLINED_FUNCTION_11_6(0xD000000000000029);
  return v18(v16);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = OUTLINED_FUNCTION_18_2();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_101_3();
  return v0();
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  *(void *)(v10 + 56) = a7;
  *(void *)(v10 + 64) = v9;
  *(unsigned char *)(v10 + 98) = a9;
  *(unsigned char *)(v10 + 97) = a8;
  *(void *)(v10 + 40) = a5;
  *(void *)(v10 + 48) = a6;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(unsigned char *)(v10 + 96) = a2;
  *(void *)(v10 + 16) = a1;
  return OUTLINED_FUNCTION_27_22((uint64_t)SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:), 0, 0);
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  OUTLINED_FUNCTION_240();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = OUTLINED_FUNCTION_136_1();
  *(_OWORD *)(v17 + 16) = xmmword_46DE50;
  OUTLINED_FUNCTION_28_23(v17, 0x6953776F646E6977);
  if (v9)
  {
    uint64_t v18 = 0;
    uint64_t v10 = 0;
    *(void *)(v17 + 56) = 0;
    *(void *)(v17 + 64) = 0;
  }
  else
  {
    uint64_t v18 = &type metadata for Double;
  }
  *(void *)(v17 + 48) = v10;
  *(void *)(v17 + 72) = v18;
  *(void *)(v17 + 80) = 0xD000000000000010;
  OUTLINED_FUNCTION_49_0((uint64_t)"callRecordsItem1");
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v17 + 96) = a3;
  *(void *)(v17 + 120) = v19;
  *(void *)(v17 + 128) = 0xD000000000000010;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 136) = v20;
  *(void *)(v17 + 144) = a4;
  *(void *)(v17 + 168) = v21;
  *(void *)(v17 + 176) = 0xD000000000000010;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 184) = v22;
  *(void *)(v17 + 192) = a5;
  *(void *)(v17 + 216) = v23;
  *(void *)(v17 + 224) = 0xD000000000000010;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 232) = v24;
  *(void *)(v17 + 240) = a6;
  OUTLINED_FUNCTION_66_5();
  *(void *)(v17 + 264) = v25;
  *(void *)(v17 + 272) = v26;
  *(void *)(v17 + 280) = 0xE600000000000000;
  if (a7)
  {
    uint64_t v27 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v28 = a7;
  }
  else
  {
    uint64_t v27 = OUTLINED_FUNCTION_34();
    *(void *)(v17 + 296) = 0;
    *(void *)(v17 + 304) = 0;
  }
  *(void *)(v17 + 288) = v28;
  *(void *)(v17 + 312) = v27;
  *(void *)(v17 + 320) = 0xD000000000000013;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v17 + 328) = v29;
  *(unsigned char *)(v17 + 336) = a8 & 1;
  *(void *)(v17 + 360) = &type metadata for Bool;
  *(void *)(v17 + 368) = 0xD000000000000012;
  OUTLINED_FUNCTION_134();
  *(void *)(v17 + 376) = v30;
  *(void *)(v17 + 408) = v31;
  *(unsigned char *)(v17 + 384) = a9 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  OUTLINED_FUNCTION_24_10();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

void SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  unint64_t v30 = v6;
  OUTLINED_FUNCTION_130_2();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v9 = (__n128 *)OUTLINED_FUNCTION_242();
  OUTLINED_FUNCTION_3_6(v9, (__n128)xmmword_4771A0);
  if (v2)
  {
    uint64_t v10 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v11 = v2;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    v9[3].n128_u64[1] = 0;
    v9[4].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_97(v10, v11);
  if (v3)
  {
    uint64_t v12 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v13 = v3;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v12 = 0;
    v9[6].n128_u64[1] = 0;
    v9[7].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_205_0(v12, v13);
  v9[8].n128_u64[1] = 0x8000000000497270;
  OUTLINED_FUNCTION_234_0();
  OUTLINED_FUNCTION_168_1((uint64_t)"isTimeRangeRequest");
  v9[14].n128_u64[1] = 0x8000000000497330;
  outlined init with copy of SpeakableString?(v5, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v4, 1, v14);
  if (v15)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  else
  {
    v9[16].n128_u64[1] = v14;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)v1);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v16();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_235_0();
  v9[17].n128_u64[0] = v19;
  v9[17].n128_u64[1] = v20;
  if (v21)
  {
    uint64_t v22 = 0;
    unint64_t v18 = 0;
    v9[18].n128_u64[1] = 0;
    v9[19].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v22 = &type metadata for Double;
  }
  v9[18].n128_u64[0] = v18;
  v9[19].n128_u64[1] = (unint64_t)v22;
  v9[20].n128_u64[0] = v0;
  v9[20].n128_u64[1] = 0x8000000000497350;
  if (v17)
  {
    uint64_t v23 = 0;
    unint64_t v24 = 0;
    v9[21].n128_u64[1] = 0;
    v9[22].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v23 = &type metadata for Double;
    unint64_t v24 = v30;
  }
  v9[21].n128_u64[0] = v24;
  v9[22].n128_u64[1] = (unint64_t)v23;
  v9[23].n128_u64[0] = v0 + 16;
  OUTLINED_FUNCTION_262();
  v9[23].n128_u64[1] = v25;
  v9[24].n128_u8[0] = v26 & 1;
  OUTLINED_FUNCTION_230_0();
  v9[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[26].n128_u64[0] = v27;
  OUTLINED_FUNCTION_229();
  v9[26].n128_u64[1] = v28;
  v9[28].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[27].n128_u8[0] = v29 & 1;
  OUTLINED_FUNCTION_223_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12)
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v13 + 56) = a9;
  *(void *)(v13 + 64) = v12;
  *(unsigned char *)(v13 + 109) = a12;
  *(unsigned char *)(v13 + 108) = a11;
  OUTLINED_FUNCTION_76_5(v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v22);
  *(void *)(v13 + 72) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v23, v24, v25);
}

uint64_t SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v15 = v13[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = OUTLINED_FUNCTION_242();
  char v17 = (__n128 *)OUTLINED_FUNCTION_202_1(v16);
  uint64_t v18 = OUTLINED_FUNCTION_8_62(v17, (__n128)xmmword_4771A0);
  if (v15)
  {
    uint64_t v18 = type metadata accessor for PhoneCallRecord(v18);
  }
  else
  {
    v14[7] = 0;
    v14[8] = 0;
  }
  uint64_t v19 = v13[4];
  uint64_t v20 = OUTLINED_FUNCTION_23_30(v18);
  if (v19)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v20);
  }
  else
  {
    v14[13] = 0;
    v14[14] = 0;
  }
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_59_9(v21);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v22);
  uint64_t v23 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_90_5(v23);
  if (v24)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v25();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_20_27();
  if (v26) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v27 = v13[6];
  }
  OUTLINED_FUNCTION_189_0(v27);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v28) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    char v29 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v29);
  OUTLINED_FUNCTION_62_10((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_104_1(v30);
  *uint64_t v31 = v32;
  v31[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_53_11();
  OUTLINED_FUNCTION_117();
  return v37(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(void);
  char v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = v13[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v17 = OUTLINED_FUNCTION_242();
  uint64_t v18 = (__n128 *)OUTLINED_FUNCTION_203_1(v17);
  uint64_t v19 = OUTLINED_FUNCTION_8_62(v18, (__n128)xmmword_4771A0);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for PhoneCallRecord(v19);
  }
  else
  {
    v14[7] = 0;
    v14[8] = 0;
  }
  uint64_t v20 = v13[3];
  uint64_t v21 = OUTLINED_FUNCTION_23_30(v19);
  if (v20)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    v14[13] = 0;
    v14[14] = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v22);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v23);
  char v24 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v24);
  if (v25)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v26();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_20_27();
  if (v27) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    char v28 = v13[5];
  }
  OUTLINED_FUNCTION_189_0(v28);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v29) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    uint64_t v30 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v30);
  OUTLINED_FUNCTION_62_10((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v31 = OUTLINED_FUNCTION_3_0();
  uint64_t v32 = (void *)OUTLINED_FUNCTION_159_1(v31);
  *uint64_t v32 = v33;
  v32[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(v15 + 30);
  OUTLINED_FUNCTION_117();
  return v37(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12);
}

uint64_t SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, unsigned __int8 a10, unsigned __int8 a11)
{
  OUTLINED_FUNCTION_1_0();
  *(_WORD *)(v11 + 100) = __PAIR16__(a11, a10);
  OUTLINED_FUNCTION_84_6(v12, v13, v14, v15, v16, v17, v18, v19, a9);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v20);
  *(void *)(v11 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v21, v22, v23);
}

void SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_123_2(v7, v8, v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_11_0(v10);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_11_25();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_242();
  OUTLINED_FUNCTION_3_6(v12, (__n128)xmmword_4771A0);
  if (v3)
  {
    uint64_t v13 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v14 = v3;
  }
  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_75_5(v13, v14);
  if (v4)
  {
    uint64_t v15 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v16 = v4;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_201_1(v15, v16);
  OUTLINED_FUNCTION_217_1((uint64_t)"isSingleDateRequest");
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_169_0((uint64_t)"isTimeRangeRequest");
  OUTLINED_FUNCTION_166_1((uint64_t)"voiceMailPosition");
  outlined init with copy of SpeakableString?(v6, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v5, 1, v17);
  if (v18)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v5, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v12[16].n128_u64[1] = v17;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v19();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_252();
  OUTLINED_FUNCTION_235_0();
  v12[17].n128_u64[0] = v22;
  v12[17].n128_u64[1] = v21;
  if (v23)
  {
    char v24 = 0;
    unint64_t v1 = 0;
    v12[18].n128_u64[1] = 0;
    v12[19].n128_u64[0] = 0;
  }
  else
  {
    char v24 = &type metadata for Double;
  }
  v12[18].n128_u64[0] = v1;
  v12[19].n128_u64[1] = (unint64_t)v24;
  v12[20].n128_u64[0] = v2;
  v12[20].n128_u64[1] = 0x8000000000497350;
  if (v20)
  {
    uint64_t v25 = 0;
    unint64_t v26 = 0;
    v12[21].n128_u64[1] = 0;
    v12[22].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v25 = &type metadata for Double;
    unint64_t v26 = v32;
  }
  v12[21].n128_u64[0] = v26;
  v12[22].n128_u64[1] = (unint64_t)v25;
  v12[23].n128_u64[0] = v2 + 16;
  OUTLINED_FUNCTION_262();
  v12[23].n128_u64[1] = v27;
  v12[24].n128_u8[0] = v28 & 1;
  OUTLINED_FUNCTION_230_0();
  v12[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v12[26].n128_u64[0] = v29;
  OUTLINED_FUNCTION_229();
  v12[26].n128_u64[1] = v30;
  v12[28].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v12[27].n128_u8[0] = v31 & 1;
  OUTLINED_FUNCTION_158_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v30 = v6;
  char v8 = v7;
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_130_2();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_11_0(v11);
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_3_6((__n128 *)v13, (__n128)xmmword_474610);
  if (v1)
  {
    uint64_t v14 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v15 = v1;
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_75_5(v14, v15);
  if (v2)
  {
    uint64_t v16 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v17 = v2;
  }
  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_94_4();
  }
  *(void *)(v13 + 96) = v17;
  *(void *)(v13 + 120) = v16;
  *(void *)(v13 + 128) = 0xD000000000000013;
  OUTLINED_FUNCTION_217_1((uint64_t)"isSingleDateRequest");
  *(unsigned char *)(v13 + 144) = v0 & 1;
  *(void *)(v13 + 168) = &type metadata for Bool;
  *(void *)(v13 + 176) = 0xD000000000000012;
  OUTLINED_FUNCTION_134();
  *(void *)(v13 + 184) = v18;
  *(unsigned char *)(v13 + 192) = v5 & 1;
  *(void *)(v13 + 216) = v19;
  *(void *)(v13 + 224) = 0xD000000000000011;
  OUTLINED_FUNCTION_166_1((uint64_t)"voiceMailPosition");
  outlined init with copy of SpeakableString?(v4, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v20 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v3, 1, v20);
  if (v21)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v3, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v13 + 240) = 0u;
    *(_OWORD *)(v13 + 256) = 0u;
  }
  else
  {
    *(void *)(v13 + 264) = v20;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 240));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v22();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_110_2();
  *(void *)(v13 + 272) = v23;
  *(void *)(v13 + 280) = v24;
  if (v8)
  {
    uint64_t v25 = 0;
    uint64_t v10 = 0;
    *(void *)(v13 + 296) = 0;
    *(void *)(v13 + 304) = 0;
  }
  else
  {
    uint64_t v25 = &type metadata for Double;
  }
  *(void *)(v13 + 288) = v10;
  *(void *)(v13 + 312) = v25;
  *(void *)(v13 + 320) = 0xD000000000000011;
  OUTLINED_FUNCTION_134();
  *(void *)(v13 + 328) = v26;
  if (v27)
  {
    char v28 = 0;
    uint64_t v29 = 0;
    *(void *)(v13 + 344) = 0;
    *(void *)(v13 + 352) = 0;
  }
  else
  {
    char v28 = &type metadata for Double;
    uint64_t v29 = v30;
  }
  *(void *)(v13 + 360) = v28;
  *(void *)(v13 + 336) = v29;
  OUTLINED_FUNCTION_221_0();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_1_0();
  v10[7] = a9;
  v10[8] = v9;
  OUTLINED_FUNCTION_76_5(v11, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v19);
  v10[9] = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v20, v21, v22);
}

uint64_t SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = v13[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = OUTLINED_FUNCTION_217_0();
  char v18 = (__n128 *)OUTLINED_FUNCTION_202_1(v17);
  uint64_t v19 = OUTLINED_FUNCTION_8_62(v18, (__n128)xmmword_474610);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for PhoneCallRecord(v19);
  }
  else
  {
    *(void *)(v14 + 56) = 0;
    *(void *)(v14 + 64) = 0;
  }
  uint64_t v20 = v13[4];
  uint64_t v21 = OUTLINED_FUNCTION_23_30(v19);
  if (v20)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    *(void *)(v14 + 104) = 0;
    *(void *)(v14 + 112) = 0;
  }
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_59_9(v22);
  *(unsigned char *)(v14 + 144) = v23;
  *(void *)(v14 + 168) = &type metadata for Bool;
  *(void *)(v14 + 176) = v15 + 1;
  OUTLINED_FUNCTION_187_1();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v24);
  uint64_t v25 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_90_5(v25);
  if (v26)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v27();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_20_27();
  if (v28) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v29 = v13[6];
  }
  OUTLINED_FUNCTION_189_0(v29);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v30)
  {
    unint64_t v32 = 0;
    uint64_t v31 = 0;
    *(void *)(v14 + 344) = 0;
    *(void *)(v14 + 352) = 0;
  }
  else
  {
    uint64_t v31 = v13[7];
    unint64_t v32 = &type metadata for Double;
  }
  *(void *)(v14 + 360) = v32;
  *(void *)(v14 + 336) = v31;
  uint64_t v33 = OUTLINED_FUNCTION_3_0();
  uint64_t v34 = (void *)OUTLINED_FUNCTION_104_1(v33);
  *uint64_t v34 = v35;
  v34[1] = SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:);
  OUTLINED_FUNCTION_53_11();
  OUTLINED_FUNCTION_117();
  return v40(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(void);
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = v13[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v17 = OUTLINED_FUNCTION_217_0();
  char v18 = (__n128 *)OUTLINED_FUNCTION_203_1(v17);
  uint64_t v19 = OUTLINED_FUNCTION_8_62(v18, (__n128)xmmword_474610);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for PhoneCallRecord(v19);
  }
  else
  {
    *(void *)(v14 + 56) = 0;
    *(void *)(v14 + 64) = 0;
  }
  uint64_t v20 = v13[3];
  uint64_t v21 = OUTLINED_FUNCTION_23_30(v19);
  if (v20)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    *(void *)(v14 + 104) = 0;
    *(void *)(v14 + 112) = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v22);
  *(unsigned char *)(v14 + 144) = v23;
  *(void *)(v14 + 168) = &type metadata for Bool;
  *(void *)(v14 + 176) = v15 + 1;
  OUTLINED_FUNCTION_187_1();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v24);
  uint64_t v25 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v25);
  if (v26)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v27();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_20_27();
  if (v28) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v29 = v13[5];
  }
  OUTLINED_FUNCTION_189_0(v29);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v30)
  {
    unint64_t v32 = 0;
    uint64_t v31 = 0;
    *(void *)(v14 + 344) = 0;
    *(void *)(v14 + 352) = 0;
  }
  else
  {
    uint64_t v31 = v13[6];
    unint64_t v32 = &type metadata for Double;
  }
  *(void *)(v14 + 360) = v32;
  *(void *)(v14 + 336) = v31;
  uint64_t v33 = OUTLINED_FUNCTION_3_0();
  uint64_t v34 = (void *)OUTLINED_FUNCTION_159_1(v33);
  *uint64_t v34 = v35;
  v34[1] = SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:);
  OUTLINED_FUNCTION_44_17(v15 + 23);
  OUTLINED_FUNCTION_117();
  return v39(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12);
}

uint64_t SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

uint64_t SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_84_6(v10, v11, v12, v13, v14, v15, v16, v17, a9);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v18);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v19, v20, v21);
}

void SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = OUTLINED_FUNCTION_11_0(v16);
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_11_25();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_3_6((__n128 *)v18, (__n128)xmmword_474610);
  if (v15)
  {
    type metadata accessor for PhoneCallRecord(0);
    uint64_t v19 = v15;
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
  }
  *(void *)(v18 + 48) = v19;
  OUTLINED_FUNCTION_66_5();
  *(void *)(v18 + 72) = v20;
  *(void *)(v18 + 80) = v21;
  *(void *)(v18 + 88) = 0xE600000000000000;
  if (v13)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(0);
  }
  else
  {
    *(void *)(v18 + 104) = 0;
    *(void *)(v18 + 112) = 0;
  }
  OUTLINED_FUNCTION_178_1();
  *(void *)(v18 + 96) = v22;
  *(void *)(v18 + 120) = v23;
  *(void *)(v18 + 128) = v0 | 2;
  OUTLINED_FUNCTION_41_0();
  *(void *)(v18 + 136) = v24;
  *(unsigned char *)(v18 + 144) = v11 & 1;
  *(void *)(v18 + 168) = &type metadata for Bool;
  *(void *)(v18 + 176) = v0 + 1;
  OUTLINED_FUNCTION_134();
  *(void *)(v18 + 184) = v25;
  *(unsigned char *)(v18 + 192) = v9 & 1;
  *(void *)(v18 + 216) = v26;
  *(void *)(v18 + 224) = v0;
  *(void *)(v18 + 232) = 0x8000000000497330;
  outlined init with copy of SpeakableString?(v7, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v27 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v1, 1, v27);
  if (v28)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v18 + 240) = 0u;
    *(_OWORD *)(v18 + 256) = 0u;
  }
  else
  {
    *(void *)(v18 + 264) = v27;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 240));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v29();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_110_2();
  *(void *)(v18 + 272) = v30;
  *(void *)(v18 + 280) = v31;
  if (v32)
  {
    uint64_t v33 = 0;
    uint64_t v5 = 0;
    *(void *)(v18 + 296) = 0;
    *(void *)(v18 + 304) = 0;
  }
  else
  {
    uint64_t v33 = &type metadata for Double;
  }
  *(void *)(v18 + 288) = v5;
  *(void *)(v18 + 312) = v33;
  *(void *)(v18 + 320) = v0;
  OUTLINED_FUNCTION_134();
  *(void *)(v18 + 328) = v34;
  if (v35)
  {
    uint64_t v36 = 0;
    uint64_t v3 = 0;
    *(void *)(v18 + 344) = 0;
    *(void *)(v18 + 352) = 0;
  }
  else
  {
    uint64_t v36 = &type metadata for Double;
  }
  *(void *)(v18 + 360) = v36;
  *(void *)(v18 + 336) = v3;
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.readPlayVoiceMailPrePrompt(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.readPlayVoiceMailPrePrompt()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(44);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  unint64_t v28 = v6;
  OUTLINED_FUNCTION_130_2();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_11_0(v7);
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v9 = (__n128 *)OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_3_6(v9, (__n128)xmmword_46DE50);
  if (v2)
  {
    uint64_t v10 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v11 = v2;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    v9[3].n128_u64[1] = 0;
    v9[4].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_97(v10, v11);
  if (v3)
  {
    uint64_t v12 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v13 = v3;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v12 = 0;
    v9[6].n128_u64[1] = 0;
    v9[7].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_205_0(v12, v13);
  v9[8].n128_u64[1] = 0x8000000000497270;
  OUTLINED_FUNCTION_234_0();
  OUTLINED_FUNCTION_168_1((uint64_t)"isTimeRangeRequest");
  v9[14].n128_u64[1] = 0x8000000000497330;
  outlined init with copy of SpeakableString?(v5, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v4, 1, v14);
  if (v15)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  else
  {
    v9[16].n128_u64[1] = v14;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)v1);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v16();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_110_2();
  v9[17].n128_u64[0] = v18;
  v9[17].n128_u64[1] = v19;
  if (v20)
  {
    uint64_t v21 = 0;
    unint64_t v17 = 0;
    v9[18].n128_u64[1] = 0;
    v9[19].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v21 = &type metadata for Double;
  }
  v9[18].n128_u64[0] = v17;
  v9[19].n128_u64[1] = (unint64_t)v21;
  v9[20].n128_u64[0] = v0;
  OUTLINED_FUNCTION_262();
  v9[20].n128_u64[1] = v22;
  if (v23)
  {
    uint64_t v24 = 0;
    unint64_t v25 = 0;
    v9[21].n128_u64[1] = 0;
    v9[22].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v24 = &type metadata for Double;
    unint64_t v25 = v28;
  }
  v9[21].n128_u64[0] = v25;
  v9[22].n128_u64[1] = (unint64_t)v24;
  v9[23].n128_u64[0] = v0 + 16;
  OUTLINED_FUNCTION_134();
  v9[23].n128_u64[1] = v26;
  v9[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[24].n128_u8[0] = v27 & 1;
  OUTLINED_FUNCTION_223_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v12 + 56) = a9;
  *(void *)(v12 + 64) = v11;
  *(unsigned char *)(v12 + 108) = a11;
  OUTLINED_FUNCTION_76_5(v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v21);
  *(void *)(v12 + 72) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v22, v23, v24);
}

uint64_t SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v15 = v13[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = OUTLINED_FUNCTION_136_1();
  char v17 = (__n128 *)OUTLINED_FUNCTION_202_1(v16);
  uint64_t v18 = OUTLINED_FUNCTION_8_62(v17, (__n128)xmmword_46DE50);
  if (v15)
  {
    uint64_t v18 = type metadata accessor for PhoneCallRecord(v18);
  }
  else
  {
    v14[7] = 0;
    v14[8] = 0;
  }
  uint64_t v19 = v13[4];
  uint64_t v20 = OUTLINED_FUNCTION_23_30(v18);
  if (v19)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v20);
  }
  else
  {
    v14[13] = 0;
    v14[14] = 0;
  }
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_59_9(v21);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v22);
  uint64_t v23 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_90_5(v23);
  if (v24)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v25();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_20_27();
  if (v26) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    uint64_t v27 = v13[6];
  }
  OUTLINED_FUNCTION_189_0(v27);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v28) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    uint64_t v29 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v29);
  OUTLINED_FUNCTION_216_1((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_104_1(v30);
  *uint64_t v31 = v32;
  v31[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_53_11();
  OUTLINED_FUNCTION_117();
  return v37(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(void);
  char v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  uint64_t v16 = v13[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v17 = OUTLINED_FUNCTION_136_1();
  uint64_t v18 = (__n128 *)OUTLINED_FUNCTION_203_1(v17);
  uint64_t v19 = OUTLINED_FUNCTION_8_62(v18, (__n128)xmmword_46DE50);
  if (v16)
  {
    uint64_t v19 = type metadata accessor for PhoneCallRecord(v19);
  }
  else
  {
    v14[7] = 0;
    v14[8] = 0;
  }
  uint64_t v20 = v13[3];
  uint64_t v21 = OUTLINED_FUNCTION_23_30(v19);
  if (v20)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }
  else
  {
    v14[13] = 0;
    v14[14] = 0;
  }
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_59_9(v22);
  OUTLINED_FUNCTION_147_2();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v23);
  char v24 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_89(v24);
  if (v25)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v26();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_20_27();
  if (v27) {
    OUTLINED_FUNCTION_105_1();
  }
  else {
    char v28 = v13[5];
  }
  OUTLINED_FUNCTION_189_0(v28);
  OUTLINED_FUNCTION_109_1((uint64_t)"savedRecordsCount");
  if (v29) {
    OUTLINED_FUNCTION_150_1();
  }
  else {
    uint64_t v30 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_172_1((uint64_t)v30);
  OUTLINED_FUNCTION_216_1((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v31 = OUTLINED_FUNCTION_3_0();
  uint64_t v32 = (void *)OUTLINED_FUNCTION_159_1(v31);
  *uint64_t v32 = v33;
  v32[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(v15 + 25);
  OUTLINED_FUNCTION_117();
  return v37(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12);
}

uint64_t SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v10 + 100) = a10;
  OUTLINED_FUNCTION_84_6(v11, v12, v13, v14, v15, v16, v17, v18, a9);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v19);
  *(void *)(v10 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v20, v21, v22);
}

void SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_123_2(v7, v8, v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_11_0(v10);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_11_25();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_3_6(v12, (__n128)xmmword_46DE50);
  if (v3)
  {
    uint64_t v13 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v14 = v3;
  }
  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_75_5(v13, v14);
  if (v4)
  {
    uint64_t v15 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v16 = v4;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_94_4();
  }
  OUTLINED_FUNCTION_201_1(v15, v16);
  OUTLINED_FUNCTION_217_1((uint64_t)"isSingleDateRequest");
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_169_0((uint64_t)"isTimeRangeRequest");
  OUTLINED_FUNCTION_166_1((uint64_t)"voiceMailPosition");
  outlined init with copy of SpeakableString?(v6, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v5, 1, v17);
  if (v18)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v5, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v12[16].n128_u64[1] = v17;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v19();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_252();
  OUTLINED_FUNCTION_110_2();
  v12[17].n128_u64[0] = v21;
  v12[17].n128_u64[1] = v20;
  if (v22)
  {
    uint64_t v23 = 0;
    unint64_t v1 = 0;
    v12[18].n128_u64[1] = 0;
    v12[19].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v23 = &type metadata for Double;
  }
  v12[18].n128_u64[0] = v1;
  v12[19].n128_u64[1] = (unint64_t)v23;
  v12[20].n128_u64[0] = v2;
  OUTLINED_FUNCTION_262();
  v12[20].n128_u64[1] = v24;
  if (v25)
  {
    char v26 = 0;
    unint64_t v27 = 0;
    v12[21].n128_u64[1] = 0;
    v12[22].n128_u64[0] = 0;
  }
  else
  {
    char v26 = &type metadata for Double;
    unint64_t v27 = v30;
  }
  v12[21].n128_u64[0] = v27;
  v12[22].n128_u64[1] = (unint64_t)v26;
  v12[23].n128_u64[0] = v2 + 16;
  OUTLINED_FUNCTION_134();
  v12[23].n128_u64[1] = v28;
  v12[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v12[24].n128_u8[0] = v29 & 1;
  OUTLINED_FUNCTION_158_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  unint64_t v11 = v10;
  OUTLINED_FUNCTION_240();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_2_81(v14, (__n128)xmmword_46DE40);
  if (v0) {
    OUTLINED_FUNCTION_196_1();
  }
  else {
    uint64_t v15 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_233_0((uint64_t)v15);
  OUTLINED_FUNCTION_134_1((uint64_t)"totalCallRecordCount");
  if (v9)
  {
    uint64_t v16 = 0;
    unint64_t v11 = 0;
    v14[6].n128_u64[1] = 0;
    v14[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v16 = &type metadata for Double;
  }
  v14[6].n128_u64[0] = v11;
  OUTLINED_FUNCTION_94_5((uint64_t)v16);
  if (v7)
  {
    uint64_t v17 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v18 = v7;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_97_3();
  }
  OUTLINED_FUNCTION_108_2(v17, v18);
  OUTLINED_FUNCTION_116_2((uint64_t)&type metadata for Bool);
  outlined init with copy of SpeakableString?(v3, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_78_4(v19);
  if (v20)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    v14[16].n128_u64[1] = v3;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_31_20();
    v21();
    swift_retain();
  }
  OUTLINED_FUNCTION_221_0();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  *(unsigned char *)(v1 + 98) = v3;
  *(unsigned char *)(v1 + 97) = v4;
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v6;
  *(unsigned char *)(v1 + 96) = v7;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v10);
  *(void *)(v1 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v11, v12, v13);
}

{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  __n128 *v4;
  unint64_t v5;
  void *v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v21)(void);
  uint64_t v22;

  OUTLINED_FUNCTION_40_0();
  char v3 = *(unsigned char *)(v2 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v4 = (__n128 *)OUTLINED_FUNCTION_104();
  *(void *)(v2 + 72) = v4;
  OUTLINED_FUNCTION_2_81(v4, (__n128)xmmword_46DE40);
  if (v3)
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    v4[3].n128_u64[1] = 0;
    v4[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    uint64_t v6 = &type metadata for Double;
  }
  v4[3].n128_u64[0] = v5;
  v4[4].n128_u64[1] = (unint64_t)v6;
  v4[5].n128_u64[0] = 0xD000000000000014;
  OUTLINED_FUNCTION_218_0((uint64_t)"totalCallRecordCount");
  if (v7) {
    OUTLINED_FUNCTION_195_1();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = OUTLINED_FUNCTION_137_0((uint64_t)v8);
  if (v9)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    v4[9].n128_u64[1] = 0;
    v4[10].n128_u64[0] = 0;
  }
  uint64_t v11 = *(void *)(v2 + 64);
  OUTLINED_FUNCTION_100_2(v10);
  OUTLINED_FUNCTION_121_1();
  outlined init with copy of SpeakableString?(v12, v11, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = type metadata accessor for SpeakableString();
  uint64_t v14 = OUTLINED_FUNCTION_37_2(v13);
  uint64_t v15 = *(void *)(v2 + 64);
  if (v14 == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v4[16].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v16();
    swift_retain();
  }
  uint64_t v17 = OUTLINED_FUNCTION_9_0();
  uint64_t v18 = (void *)OUTLINED_FUNCTION_159_1(v17);
  __n128 *v18 = v19;
  v18[1] = SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_23_13();
  return v21();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_6_0();
    return v10();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  *(unsigned char *)(v1 + 90) = v3;
  *(void *)(v1 + 24) = v4;
  *(void *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 89) = v6;
  *(unsigned char *)(v1 + 88) = v7;
  *(void *)(v1 + 16) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v9);
  *(void *)(v1 + 56) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return _swift_task_switch(v10, v11, v12);
}

{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  __n128 *v4;
  unint64_t v5;
  void *v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void (*v16)(void);
  void *v17;
  uint64_t v18;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;

  OUTLINED_FUNCTION_40_0();
  char v3 = *(unsigned char *)(v2 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v4 = (__n128 *)OUTLINED_FUNCTION_104();
  *(void *)(v2 + 64) = v4;
  OUTLINED_FUNCTION_2_81(v4, (__n128)xmmword_46DE40);
  if (v3)
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    v4[3].n128_u64[1] = 0;
    v4[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v6 = &type metadata for Double;
  }
  v4[3].n128_u64[0] = v5;
  v4[4].n128_u64[1] = (unint64_t)v6;
  v4[5].n128_u64[0] = 0xD000000000000014;
  OUTLINED_FUNCTION_218_0((uint64_t)"totalCallRecordCount");
  if (v7) {
    OUTLINED_FUNCTION_195_1();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = *(void *)(v2 + 32);
  uint64_t v10 = OUTLINED_FUNCTION_137_0((uint64_t)v8);
  if (v9)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }
  else
  {
    v4[9].n128_u64[1] = 0;
    v4[10].n128_u64[0] = 0;
  }
  uint64_t v11 = *(void *)(v2 + 56);
  OUTLINED_FUNCTION_100_2(v10);
  OUTLINED_FUNCTION_121_1();
  outlined init with copy of SpeakableString?(v12, v11, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = type metadata accessor for SpeakableString();
  uint64_t v14 = OUTLINED_FUNCTION_37_2(v13);
  uint64_t v15 = *(void *)(v2 + 56);
  if (v14 == 1)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v4[16].n128_u64[1] = v1;
    __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v16();
    swift_retain();
  }
  uint64_t v17 = (void *)OUTLINED_FUNCTION_9_0();
  *(void *)(v2 + 72) = v17;
  *uint64_t v17 = v2;
  v17[1] = SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:);
  uint64_t v18 = OUTLINED_FUNCTION_11_6(0xD000000000000033);
  return v20(v18);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_0_1();
  char v3 = v2;
  OUTLINED_FUNCTION_5_7();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_11_1();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = OUTLINED_FUNCTION_32_1();
    return v11(v10);
  }
}

{
  uint64_t (*v0)(void);
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_0();
  return v0();
}

void SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  unint64_t v11 = v10;
  OUTLINED_FUNCTION_240();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_11_0(v12);
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_2_81(v14, (__n128)xmmword_46DE40);
  if (v0) {
    OUTLINED_FUNCTION_196_1();
  }
  else {
    uint64_t v15 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_233_0((uint64_t)v15);
  OUTLINED_FUNCTION_134_1((uint64_t)"totalCallRecordCount");
  if (v9)
  {
    uint64_t v16 = 0;
    unint64_t v11 = 0;
    v14[6].n128_u64[1] = 0;
    v14[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v16 = &type metadata for Double;
  }
  v14[6].n128_u64[0] = v11;
  OUTLINED_FUNCTION_94_5((uint64_t)v16);
  if (v7)
  {
    uint64_t v17 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v18 = v7;
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_97_3();
  }
  OUTLINED_FUNCTION_108_2(v17, v18);
  OUTLINED_FUNCTION_116_2((uint64_t)&type metadata for Bool);
  outlined init with copy of SpeakableString?(v3, v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_78_4(v19);
  if (v20)
  {
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    v14[16].n128_u64[1] = v3;
    __swift_allocate_boxed_opaque_existential_1(v5);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_31_20();
    v21();
    swift_retain();
  }
  OUTLINED_FUNCTION_158_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:completion:)()
{
  return OUTLINED_FUNCTION_174_0();
}

{
  char v0;
  char v1;
  char v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v8 = (__n128 *)OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_3_6(v8, (__n128)xmmword_469650);
  if (v7)
  {
    type metadata accessor for PhoneCallRecord(0);
    char v9 = v7;
  }
  else
  {
    OUTLINED_FUNCTION_34();
    v8[3].n128_u64[1] = 0;
    v8[4].n128_u64[0] = 0;
  }
  v8[3].n128_u64[0] = v9;
  OUTLINED_FUNCTION_66_5();
  v8[4].n128_u64[1] = v10;
  v8[5].n128_u64[0] = v11;
  v8[5].n128_u64[1] = 0xE600000000000000;
  if (v5)
  {
    uint64_t v12 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v13 = v5;
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_34();
    v8[6].n128_u64[1] = 0;
    v8[7].n128_u64[0] = 0;
  }
  v8[6].n128_u64[0] = v13;
  v8[7].n128_u64[1] = v12;
  v8[8].n128_u64[0] = 0xD000000000000013;
  v8[8].n128_u64[1] = 0x8000000000497270;
  v8[9].n128_u8[0] = v3 & 1;
  v8[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[11].n128_u64[0] = 0xD000000000000012;
  OUTLINED_FUNCTION_41_0();
  v8[11].n128_u64[1] = v14;
  v8[13].n128_u64[1] = v15;
  v8[12].n128_u8[0] = v1 & 1;
  swift_retain();
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v6 + 73) = a5;
  *(unsigned char *)(v6 + 72) = a4;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_33_1();
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_57_0(v13);
  OUTLINED_FUNCTION_3_6(v14, (__n128)xmmword_469650);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v17 = *(void *)(v10 + 32);
  uint64_t v18 = OUTLINED_FUNCTION_81_0(v15, v16);
  if (v17)
  {
    uint64_t v18 = type metadata accessor for PhoneSearchCallHistoryIntent(v18);
  }
  else
  {
    *(void *)(v11 + 104) = 0;
    *(void *)(v11 + 112) = 0;
  }
  OUTLINED_FUNCTION_74_4(v18);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  unint64_t v21 = (void *)OUTLINED_FUNCTION_65_5(v20);
  *unint64_t v21 = v22;
  v21[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = v10[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_33_1();
  void v10[5] = v13;
  OUTLINED_FUNCTION_3_6(v13, (__n128)xmmword_469650);
  if (v12)
  {
    uint64_t v14 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v15 = v12;
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v16 = v10[3];
  uint64_t v17 = OUTLINED_FUNCTION_81_0(v14, v15);
  if (v16)
  {
    uint64_t v17 = type metadata accessor for PhoneSearchCallHistoryIntent(v17);
  }
  else
  {
    v13[6].n128_u64[1] = 0;
    v13[7].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_74_4(v17);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v18);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  char v19 = (void *)swift_task_alloc();
  v10[6] = v19;
  *char v19 = v10;
  v19[1] = StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:);
  OUTLINED_FUNCTION_26_2(v11 + 20);
  OUTLINED_FUNCTION_26_8();
  return v23(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a4;
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  return OUTLINED_FUNCTION_188_1();
}

{
  char v0;
  char v1;
  char v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_24_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v8 = (__n128 *)OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_3_6(v8, (__n128)xmmword_469650);
  if (v7)
  {
    char v9 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v10 = v7;
  }
  else
  {
    char v9 = OUTLINED_FUNCTION_34();
    v8[3].n128_u64[1] = 0;
    v8[4].n128_u64[0] = 0;
  }
  v8[3].n128_u64[0] = v10;
  v8[4].n128_u64[1] = v9;
  v8[5].n128_u64[0] = 0x746E65746E69;
  v8[5].n128_u64[1] = 0xE600000000000000;
  if (v5)
  {
    uint64_t v11 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v12 = v5;
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_34();
    v8[6].n128_u64[1] = 0;
    v8[7].n128_u64[0] = 0;
  }
  v8[6].n128_u64[0] = v12;
  v8[7].n128_u64[1] = v11;
  v8[8].n128_u64[0] = 0xD000000000000013;
  v8[8].n128_u64[1] = 0x8000000000497270;
  v8[9].n128_u8[0] = v3 & 1;
  v8[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[11].n128_u64[0] = 0xD000000000000012;
  OUTLINED_FUNCTION_41_0();
  v8[11].n128_u64[1] = v13;
  v8[13].n128_u64[1] = v14;
  v8[12].n128_u8[0] = v1 & 1;
  swift_retain();
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:completion:)()
{
  return OUTLINED_FUNCTION_174_0();
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v6 + 73) = a5;
  *(unsigned char *)(v6 + 72) = a4;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_33_1();
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_57_0(v13);
  OUTLINED_FUNCTION_3_6(v14, (__n128)xmmword_469650);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v17 = *(void *)(v10 + 32);
  uint64_t v18 = OUTLINED_FUNCTION_81_0(v15, v16);
  if (v17)
  {
    uint64_t v18 = type metadata accessor for PhoneSearchCallHistoryIntent(v18);
  }
  else
  {
    *(void *)(v11 + 104) = 0;
    *(void *)(v11 + 112) = 0;
  }
  OUTLINED_FUNCTION_74_4(v18);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v19);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  uint64_t v20 = swift_task_alloc();
  unint64_t v21 = (void *)OUTLINED_FUNCTION_65_5(v20);
  *unint64_t v21 = v22;
  v21[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_26_8();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10);
}

{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = v10[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_33_1();
  void v10[5] = v13;
  OUTLINED_FUNCTION_3_6(v13, (__n128)xmmword_469650);
  if (v12)
  {
    uint64_t v14 = type metadata accessor for PhoneCallRecord(0);
    uint64_t v15 = v12;
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_22_23();
  }
  uint64_t v16 = v10[3];
  uint64_t v17 = OUTLINED_FUNCTION_81_0(v14, v15);
  if (v16)
  {
    uint64_t v17 = type metadata accessor for PhoneSearchCallHistoryIntent(v17);
  }
  else
  {
    v13[6].n128_u64[1] = 0;
    v13[7].n128_u64[0] = 0;
  }
  OUTLINED_FUNCTION_74_4(v17);
  OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_80_3(v18);
  OUTLINED_FUNCTION_9_43();
  swift_retain();
  char v19 = (void *)swift_task_alloc();
  v10[6] = v19;
  *char v19 = v10;
  v19[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_26_2(v11 + 25);
  OUTLINED_FUNCTION_26_8();
  return v23(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 65) = a4;
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  return OUTLINED_FUNCTION_188_1();
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_212_1();
  char v2 = v1;
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = OUTLINED_FUNCTION_24_3();
  *(_OWORD *)(v9 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_10_39(v9, 0x726F63655277656ELL);
  if (v6)
  {
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    *(void *)(v9 + 56) = 0;
    *(void *)(v9 + 64) = 0;
  }
  else
  {
    uint64_t v10 = &type metadata for Double;
  }
  *(void *)(v9 + 48) = v8;
  *(void *)(v9 + 72) = v10;
  *(void *)(v9 + 80) = 0xD000000000000011;
  OUTLINED_FUNCTION_49_0((uint64_t)"savedRecordsCount");
  if (v2)
  {
    uint64_t v11 = 0;
    uint64_t v4 = 0;
    *(void *)(v9 + 104) = 0;
    *(void *)(v9 + 112) = 0;
  }
  else
  {
    uint64_t v11 = &type metadata for Double;
  }
  *(void *)(v9 + 96) = v4;
  *(void *)(v9 + 120) = v11;
  *(void *)(v9 + 128) = 0x746E65746E69;
  *(void *)(v9 + 136) = 0xE600000000000000;
  if (v0)
  {
    uint64_t v12 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v13 = v0;
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_126_0();
  }
  *(void *)(v9 + 144) = v13;
  *(void *)(v9 + 168) = v12;
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 48) = v6;
  *(unsigned char *)(v7 + 81) = a5;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a4;
  *(unsigned char *)(v7 + 80) = a3;
  *(void *)(v7 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:));
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)()
{
  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v1 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_10_39(v2, 0x726F63655277656ELL);
  if (v1) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v3 = *(void *)(v0 + 24);
  }
  OUTLINED_FUNCTION_154_1(v3);
  OUTLINED_FUNCTION_49_0((uint64_t)"savedRecordsCount");
  if (v4) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    char v5 = &type metadata for Double;
  }
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = OUTLINED_FUNCTION_22_30((uint64_t)v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhoneSearchCallHistoryIntent(v7);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v7);
  OUTLINED_FUNCTION_19_2();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_131_1(v8);
  *uint64_t v9 = v10;
  v9[1] = SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_20_2();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22_13();
  OUTLINED_FUNCTION_18_3();
  char v1 = *(unsigned char *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_10_39(v2, 0x726F63655277656ELL);
  if (v1) {
    OUTLINED_FUNCTION_106_1();
  }
  else {
    uint64_t v3 = *(void *)(v0 + 16);
  }
  OUTLINED_FUNCTION_153(v3);
  OUTLINED_FUNCTION_49_0((uint64_t)"savedRecordsCount");
  if (v4) {
    OUTLINED_FUNCTION_99_3();
  }
  else {
    char v5 = &type metadata for Double;
  }
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = OUTLINED_FUNCTION_22_30((uint64_t)v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhoneSearchCallHistoryIntent(v7);
  }
  else
  {
    *(void *)(v2 + 152) = 0;
    *(void *)(v2 + 160) = 0;
  }
  OUTLINED_FUNCTION_175_0(v7);
  OUTLINED_FUNCTION_19_2();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_65_5(v8);
  *uint64_t v9 = v10;
  v9[1] = SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  OUTLINED_FUNCTION_32_0(50);
  OUTLINED_FUNCTION_20_2();
  return v14(v11, v12, v13, v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_28();
  char v1 = v0;
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = OUTLINED_FUNCTION_24_3();
  *(_OWORD *)(v10 + 16) = xmmword_46A250;
  OUTLINED_FUNCTION_10_39(v10, 0x726F63655277656ELL);
  if (v7)
  {
    uint64_t v11 = 0;
    uint64_t v9 = 0;
    *(void *)(v10 + 56) = 0;
    *(void *)(v10 + 64) = 0;
  }
  else
  {
    uint64_t v11 = &type metadata for Double;
  }
  *(void *)(v10 + 48) = v9;
  *(void *)(v10 + 72) = v11;
  *(void *)(v10 + 80) = 0xD000000000000011;
  OUTLINED_FUNCTION_134_1((uint64_t)"savedRecordsCount");
  if (v3)
  {
    uint64_t v12 = 0;
    char v5 = 0;
    *(void *)(v10 + 104) = 0;
    *(void *)(v10 + 112) = 0;
  }
  else
  {
    uint64_t v12 = &type metadata for Double;
  }
  *(void *)(v10 + 96) = v5;
  OUTLINED_FUNCTION_94_5((uint64_t)v12);
  if (v1)
  {
    uint64_t v13 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v14 = v1;
  }
  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_97_3();
  }
  *(void *)(v10 + 144) = v14;
  *(void *)(v10 + 168) = v13;
  swift_retain();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = v5;
  *(unsigned char *)(v6 + 73) = a4;
  *(unsigned char *)(v6 + 72) = a2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:));
}

uint64_t SearchCallHistoryCATs.repeatVoicemailPause(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.repeatVoicemailPause()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

void SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v28 = v27;
  char v30 = v29;
  unint64_t v32 = v31;
  OUTLINED_FUNCTION_224_0();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v34 = OUTLINED_FUNCTION_11_0(v33);
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v35 = (__n128 *)OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_2_81(v35, (__n128)xmmword_474610);
  if (v23)
  {
    uint64_t v36 = 0;
    unint64_t v26 = 0;
    v35[3].n128_u64[1] = 0;
    v35[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v36 = &type metadata for Double;
  }
  v35[3].n128_u64[0] = v26;
  v35[4].n128_u64[1] = (unint64_t)v36;
  v35[5].n128_u64[0] = 0xD000000000000014;
  OUTLINED_FUNCTION_41_0();
  v35[5].n128_u64[1] = v37;
  if (v25)
  {
    uint64_t v38 = 0;
    unint64_t v24 = 0;
    v35[6].n128_u64[1] = 0;
    v35[7].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v38 = &type metadata for Double;
  }
  v35[6].n128_u64[0] = v24;
  v35[7].n128_u64[1] = (unint64_t)v38;
  v35[8].n128_u64[0] = 0x656369766564;
  v35[8].n128_u64[1] = 0xE600000000000000;
  if (v21)
  {
    type metadata accessor for SirikitDeviceState();
    unint64_t v39 = v21;
  }
  else
  {
    OUTLINED_FUNCTION_34();
    v35[9].n128_u64[1] = 0;
    v35[10].n128_u64[0] = 0;
  }
  v35[9].n128_u64[0] = v39;
  OUTLINED_FUNCTION_66_5();
  v35[10].n128_u64[1] = v40;
  v35[11].n128_u64[0] = v41;
  v35[11].n128_u64[1] = 0xE600000000000000;
  if (v32)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(0);
    unint64_t v42 = v32;
  }
  else
  {
    OUTLINED_FUNCTION_34();
    v35[12].n128_u64[1] = 0;
    v35[13].n128_u64[0] = 0;
  }
  v35[12].n128_u64[0] = v42;
  OUTLINED_FUNCTION_132();
  v35[13].n128_u64[1] = v43;
  v35[14].n128_u64[0] = v44;
  OUTLINED_FUNCTION_142();
  v35[14].n128_u64[1] = v45;
  v35[15].n128_u8[0] = v30 & 1;
  OUTLINED_FUNCTION_226();
  v35[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v35[17].n128_u64[0] = v46;
  v35[17].n128_u64[1] = 0xE700000000000000;
  outlined init with copy of SpeakableString?(v28, v22, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v47 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_78_4(v47);
  if (v48)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v22, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_138();
  }
  else
  {
    v35[19].n128_u64[1] = v23;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v35[18]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_31_20();
    v49();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_41_0();
  v35[20].n128_u64[0] = v51;
  v35[20].n128_u64[1] = v50;
  v35[22].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v35[21].n128_u8[0] = a21 & 1;
  OUTLINED_FUNCTION_223_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v11 + 56) = a9;
  *(void *)(v11 + 64) = v10;
  *(unsigned char *)(v11 + 107) = a10;
  OUTLINED_FUNCTION_183_0(v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v20);
  *(void *)(v11 + 72) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v21, v22, v23);
}

uint64_t SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  char v14 = *(unsigned char *)(v12 + 104);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_217_0();
  char v16 = (__n128 *)OUTLINED_FUNCTION_202_1(v15);
  OUTLINED_FUNCTION_2_81(v16, (__n128)xmmword_474610);
  if (v14)
  {
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    v13[7] = 0;
    v13[8] = 0;
  }
  else
  {
    uint64_t v17 = *(void *)(v12 + 24);
    uint64_t v18 = &type metadata for Double;
  }
  v13[6] = v17;
  v13[9] = v18;
  v13[10] = 0xD000000000000014;
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v19) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    uint64_t v20 = &type metadata for Double;
  }
  uint64_t v21 = *(void *)(v12 + 40);
  uint64_t v22 = OUTLINED_FUNCTION_41_12((uint64_t)v20);
  if (v21)
  {
    uint64_t v22 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v13[19] = 0;
    v13[20] = 0;
  }
  uint64_t v23 = *(void *)(v12 + 48);
  uint64_t v24 = OUTLINED_FUNCTION_40_14(v22);
  if (v23)
  {
    uint64_t v24 = type metadata accessor for PhoneSearchCallHistoryIntent(v24);
  }
  else
  {
    v13[25] = 0;
    v13[26] = 0;
  }
  uint64_t v25 = *(void *)(v12 + 72);
  OUTLINED_FUNCTION_26_23(v24);
  OUTLINED_FUNCTION_129_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v26);
  uint64_t v27 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_199_0(v27);
  if (v28)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v25, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v29();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_219_0((uint64_t)"isShowingMissedCall");
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  unint64_t v31 = (void *)OUTLINED_FUNCTION_104_1(v30);
  *unint64_t v31 = v32;
  v31[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_53_11();
  OUTLINED_FUNCTION_117();
  return v37(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

{
  uint64_t v12;
  void *v13;
  char v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  void *v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(void);
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_48();
  char v14 = *(unsigned char *)(v12 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_217_0();
  char v16 = (__n128 *)OUTLINED_FUNCTION_203_1(v15);
  OUTLINED_FUNCTION_2_81(v16, (__n128)xmmword_474610);
  if (v14)
  {
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    v13[7] = 0;
    v13[8] = 0;
  }
  else
  {
    uint64_t v17 = *(void *)(v12 + 16);
    uint64_t v18 = &type metadata for Double;
  }
  v13[6] = v17;
  v13[9] = v18;
  v13[10] = 0xD000000000000014;
  OUTLINED_FUNCTION_167_1((uint64_t)"totalCallRecordCount");
  if (v19) {
    OUTLINED_FUNCTION_149_2();
  }
  else {
    uint64_t v20 = &type metadata for Double;
  }
  uint64_t v21 = *(void *)(v12 + 32);
  uint64_t v22 = OUTLINED_FUNCTION_41_12((uint64_t)v20);
  if (v21)
  {
    uint64_t v22 = type metadata accessor for SirikitDeviceState();
  }
  else
  {
    v13[19] = 0;
    v13[20] = 0;
  }
  uint64_t v23 = *(void *)(v12 + 40);
  uint64_t v24 = OUTLINED_FUNCTION_40_14(v22);
  if (v23)
  {
    uint64_t v24 = type metadata accessor for PhoneSearchCallHistoryIntent(v24);
  }
  else
  {
    v13[25] = 0;
    v13[26] = 0;
  }
  uint64_t v25 = *(void *)(v12 + 64);
  OUTLINED_FUNCTION_26_23(v24);
  OUTLINED_FUNCTION_129_2();
  OUTLINED_FUNCTION_186(&demangling cache variable for type metadata for SpeakableString?, v26);
  uint64_t v27 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_198_1(v27);
  if (v28)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v25, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_29_21();
    v29();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_219_0((uint64_t)"isShowingMissedCall");
  uint64_t v30 = OUTLINED_FUNCTION_3_0();
  unint64_t v31 = (void *)OUTLINED_FUNCTION_159_1(v30);
  *unint64_t v31 = v32;
  v31[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_44_17(0xD000000000000026);
  OUTLINED_FUNCTION_117();
  return v36(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

uint64_t SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v9 + 99) = a9;
  OUTLINED_FUNCTION_180(v10, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_11_0(v18);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_11_1();
  return OUTLINED_FUNCTION_27_22(v19, v20, v21);
}

void SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v28 = v27;
  char v30 = v29;
  uint64_t v32 = v31;
  OUTLINED_FUNCTION_200_1();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v34 = OUTLINED_FUNCTION_11_0(v33);
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_53();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v35 = (__n128 *)OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_2_81(v35, (__n128)xmmword_474610);
  if (v22)
  {
    uint64_t v36 = 0;
    unint64_t v21 = 0;
    v35[3].n128_u64[1] = 0;
    v35[4].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v36 = &type metadata for Double;
  }
  v35[3].n128_u64[0] = v21;
  v35[4].n128_u64[1] = (unint64_t)v36;
  v35[5].n128_u64[0] = 0xD000000000000014;
  OUTLINED_FUNCTION_134_1((uint64_t)"totalCallRecordCount");
  if (v26)
  {
    unint64_t v37 = 0;
    unint64_t v25 = 0;
    v35[6].n128_u64[1] = 0;
    v35[7].n128_u64[0] = 0;
  }
  else
  {
    unint64_t v37 = &type metadata for Double;
  }
  v35[6].n128_u64[0] = v25;
  OUTLINED_FUNCTION_185_1((uint64_t)v37);
  if (v23)
  {
    uint64_t v38 = type metadata accessor for SirikitDeviceState();
    uint64_t v39 = v23;
  }
  else
  {
    uint64_t v38 = OUTLINED_FUNCTION_97_3();
  }
  OUTLINED_FUNCTION_164_0(v38, v39);
  if (v32)
  {
    uint64_t v40 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v41 = v32;
  }
  else
  {
    uint64_t v40 = OUTLINED_FUNCTION_193_1();
  }
  OUTLINED_FUNCTION_107_1(v40, v41);
  v35[15].n128_u8[0] = v30 & 1;
  OUTLINED_FUNCTION_226();
  v35[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v35[17].n128_u64[0] = v42;
  v35[17].n128_u64[1] = 0xE700000000000000;
  outlined init with copy of SpeakableString?(v28, v24, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v43 = type metadata accessor for SpeakableString();
  OUTLINED_FUNCTION_28_6(v24, 1, v43);
  if (v44)
  {
    swift_retain();
    swift_retain();
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v24, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_42_1();
  }
  else
  {
    v35[19].n128_u64[1] = v43;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v35[18]);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_70();
    v45();
    swift_retain();
    swift_retain();
  }
  OUTLINED_FUNCTION_134();
  v35[20].n128_u64[0] = v47;
  v35[20].n128_u64[1] = v46;
  v35[22].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v35[21].n128_u8[0] = a21 & 1;
  OUTLINED_FUNCTION_158_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t SearchCallHistoryCATs.unsupportedCallTypes(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.unsupportedCallTypes()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.unsupportedDateCreated(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.unsupportedDateCreated()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(40);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.unsupportedRecipient(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.unsupportedRecipient()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  char v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *char v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(38);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:completion:)()
{
  OUTLINED_FUNCTION_24_0();
  unint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  unsigned __int8 v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_33_1();
  uint64_t v9 = OUTLINED_FUNCTION_35_20(v8, (__n128)xmmword_469650);
  v9[3].n128_u8[0] = v7;
  uint64_t v10 = OUTLINED_FUNCTION_152_2(v9, (uint64_t)&type metadata for Bool);
  *((unsigned char *)v10 + 96) = v5;
  uint64_t v12 = OUTLINED_FUNCTION_181_0(v10, v11);
  *((unsigned char *)v12 + 144) = v3;
  v12[21] = v13;
  v12[22] = 0xD000000000000010;
  v12[23] = 0x80000000004938E0;
  if (v1)
  {
    uint64_t v14 = type metadata accessor for DialogPerson();
    unint64_t v15 = v1;
  }
  else
  {
    unint64_t v15 = 0;
    uint64_t v14 = 0;
    v8[12].n128_u64[1] = 0;
    v8[13].n128_u64[0] = 0;
  }
  v8[12].n128_u64[0] = v15;
  v8[13].n128_u64[1] = v14;
  swift_retain();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_26_1();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)(uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a4;
  *(unsigned char *)(v6 + 65) = a3;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:));
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_33_1();
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_95(v13);
  unint64_t v15 = OUTLINED_FUNCTION_35_20(v14, (__n128)xmmword_469650);
  uint64_t v16 = OUTLINED_FUNCTION_50_11((uint64_t)v15, (uint64_t)&type metadata for Bool);
  uint64_t v17 = OUTLINED_FUNCTION_258(v16, (uint64_t)"contactToConfirm");
  if (v12)
  {
    uint64_t v17 = type metadata accessor for DialogPerson();
  }
  else
  {
    v11[25] = 0;
    v11[26] = 0;
  }
  v11[24] = v12;
  v11[27] = v17;
  OUTLINED_FUNCTION_9_43();
  uint64_t v18 = swift_task_alloc();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_72(v18);
  *uint64_t v19 = v20;
  v19[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_26_8();
  return v25(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_40_0();
  uint64_t v12 = *(void *)(v10 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_33_1();
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_19_1(v13);
  unint64_t v15 = OUTLINED_FUNCTION_35_20(v14, (__n128)xmmword_469650);
  uint64_t v16 = OUTLINED_FUNCTION_50_11((uint64_t)v15, (uint64_t)&type metadata for Bool);
  uint64_t v17 = OUTLINED_FUNCTION_258(v16, (uint64_t)"contactToConfirm");
  if (v12)
  {
    uint64_t v17 = type metadata accessor for DialogPerson();
  }
  else
  {
    v11[25] = 0;
    v11[26] = 0;
  }
  v11[24] = v12;
  v11[27] = v17;
  OUTLINED_FUNCTION_9_43();
  uint64_t v18 = swift_task_alloc();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_43_12(v18);
  *uint64_t v19 = v20;
  v19[1] = StartCallCATs.disambiguateAppsVoiceMode(appNames:);
  OUTLINED_FUNCTION_26_8();
  return v24(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)(char a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = v4;
  *(unsigned char *)(v5 + 58) = a3;
  *(unsigned char *)(v5 + 57) = a2;
  *(unsigned char *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:));
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)()
{
  OUTLINED_FUNCTION_28();
  unint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  unsigned __int8 v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_33_1();
  uint64_t v9 = OUTLINED_FUNCTION_35_20(v8, (__n128)xmmword_469650);
  v9[3].n128_u8[0] = v7;
  uint64_t v10 = OUTLINED_FUNCTION_152_2(v9, (uint64_t)&type metadata for Bool);
  *((unsigned char *)v10 + 96) = v5;
  uint64_t v12 = OUTLINED_FUNCTION_181_0(v10, v11);
  *((unsigned char *)v12 + 144) = v3;
  v12[21] = v13;
  v12[22] = 0xD000000000000010;
  v12[23] = 0x80000000004938E0;
  if (v1)
  {
    uint64_t v14 = type metadata accessor for DialogPerson();
    unint64_t v15 = v1;
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_193_1();
  }
  v8[12].n128_u64[0] = v15;
  v8[13].n128_u64[1] = v14;
  swift_retain();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:completion:)()
{
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_106(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_33_12();
  }
  OUTLINED_FUNCTION_76_4(v2, v3);
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_31_18();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.unsupportedUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v12 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  char v5 = (__n128 *)OUTLINED_FUNCTION_95(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_72(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_74_3();
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(unint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_35_1();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_18_3();
  uint64_t v3 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  char v5 = (__n128 *)OUTLINED_FUNCTION_19_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_48_15(v5, (__n128)xmmword_467710);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }
  else
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  OUTLINED_FUNCTION_27_16(v6);
  OUTLINED_FUNCTION_9_43();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_43_12(v7);
  *uint64_t v8 = v9;
  v8[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v10 = OUTLINED_FUNCTION_73_0(35);
  return v11(v10);
}

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  OUTLINED_FUNCTION_102_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_106(v1, (__n128)xmmword_467710);
  if (v0)
  {
    uint64_t v2 = type metadata accessor for PhoneSearchCallHistoryIntent(0);
    uint64_t v3 = v0;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_15();
  }
  OUTLINED_FUNCTION_72_8(v2, v3);
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.unsupportedUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.visualCatText(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.visualCatText()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(31);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:completion:)(char a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  uint64_t v5 = OUTLINED_FUNCTION_19_28(v4);
  *(unsigned char *)(v5 + 48) = a1;
  *(void *)(v5 + 72) = &type metadata for Bool;
  *(void *)(v5 + 80) = 0xD000000000000020;
  *(unsigned char *)(OUTLINED_FUNCTION_263(v5, (uint64_t)&type metadata for Bool) + 96) = a2;
  OUTLINED_FUNCTION_222_0();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)(uint64_t a1, char a2, char a3)
{
  *(unsigned char *)(v4 + 57) = a3;
  *(unsigned char *)(v4 + 56) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:));
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_36_2();
  *(void *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = xmmword_467720;
  uint64_t v2 = OUTLINED_FUNCTION_19_28(v1);
  uint64_t v3 = OUTLINED_FUNCTION_232_0(v2, (uint64_t)&type metadata for Bool);
  OUTLINED_FUNCTION_209_0(v3, v4);
  uint64_t v5 = OUTLINED_FUNCTION_9_0();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_43_12(v5);
  *uint64_t v6 = v7;
  v6[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  OUTLINED_FUNCTION_23_13();
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  OUTLINED_FUNCTION_16_1();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_36_2();
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_467720;
  uint64_t v3 = OUTLINED_FUNCTION_19_28(v2);
  uint64_t v4 = OUTLINED_FUNCTION_232_0(v3, (uint64_t)&type metadata for Bool);
  OUTLINED_FUNCTION_209_0(v4, v5);
  uint64_t v6 = OUTLINED_FUNCTION_9_0();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_40_4(v6);
  *uint64_t v7 = v8;
  v7[1] = SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:);
  uint64_t v9 = OUTLINED_FUNCTION_11_6(v1 | 0x11);
  return v11(v9);
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)(char a1, char a2)
{
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 49) = a2;
  *(unsigned char *)(v3 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:));
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_36_2();
  *(_OWORD *)(v4 + 16) = xmmword_467720;
  uint64_t v5 = OUTLINED_FUNCTION_19_28(v4);
  *(unsigned char *)(v5 + 48) = a1;
  *(void *)(v5 + 72) = &type metadata for Bool;
  *(void *)(v5 + 80) = 0xD000000000000020;
  *(unsigned char *)(OUTLINED_FUNCTION_263(v5, (uint64_t)&type metadata for Bool) + 96) = a2;
  OUTLINED_FUNCTION_24_10();
  dispatch thunk of CATWrapper.execute(catId:parameters:)();

  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:completion:)()
{
  return OUTLINED_FUNCTION_120_1();
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:));
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:)()
{
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_19_28(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_87_3(v1, v2);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_43_12(v3);
  *uint64_t v4 = v5;
  v4[1] = SearchCallHistoryCATs.offerToContinueReading(isLastPage:);
  OUTLINED_FUNCTION_23_13();
  OUTLINED_FUNCTION_206_1();
  return v6();
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(unint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v0 = OUTLINED_FUNCTION_31_0();
  uint64_t v1 = OUTLINED_FUNCTION_19_28(v0);
  *(void *)(v1 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_86_5(v1, v2);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_40_4(v3);
  *uint64_t v4 = v5;
  v4[1] = SearchCallHistoryCATs.offerToContinueReading(isLastPage:);
  OUTLINED_FUNCTION_10_16();
  uint64_t v6 = OUTLINED_FUNCTION_215_1(48);
  return v7(v6);
}

{
  OUTLINED_FUNCTION_245();
  return OUTLINED_FUNCTION_117_1();
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:));
}

uint64_t SearchCallHistoryCATs.voiceMailPromptToPlay(completion:)()
{
  return OUTLINED_FUNCTION_6_10();
}

uint64_t SearchCallHistoryCATs.voiceMailPromptToPlay()()
{
  OUTLINED_FUNCTION_16_1();
  uint64_t v0 = OUTLINED_FUNCTION_3_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_46();
  return v3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(unint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_1_0();
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_24_10();
  uint64_t v3 = OUTLINED_FUNCTION_44_0(39);
  return v4(v3);
}

{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:completion:)()
{
  OUTLINED_FUNCTION_28();
  char v1 = v0;
  unint64_t v3 = v2;
  char v5 = v4;
  unsigned __int8 v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_24_3();
  uint64_t v9 = OUTLINED_FUNCTION_30_18(v8, (__n128)xmmword_46A250);
  v9[3].n128_u8[0] = v7;
  uint64_t v10 = OUTLINED_FUNCTION_122_2((uint64_t)v9, (uint64_t)&type metadata for Bool);
  *(unsigned char *)(v10 + 96) = v5;
  OUTLINED_FUNCTION_38_1((void *)v10, v11);
  if (v1)
  {
    uint64_t v12 = 0;
    unint64_t v3 = 0;
    v8[9].n128_u64[1] = 0;
    v8[10].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v12 = &type metadata for Double;
  }
  v8[10].n128_u64[1] = (unint64_t)v12;
  v8[9].n128_u64[0] = v3;
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_31_18();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)(uint64_t a1, char a2, char a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = v5;
  *(unsigned char *)(v6 + 66) = a5;
  *(unsigned char *)(v6 + 65) = a3;
  *(unsigned char *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:));
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)()
{
  OUTLINED_FUNCTION_35_1();
  uint64_t v14 = v1;
  OUTLINED_FUNCTION_18_3();
  char v2 = *(unsigned char *)(v0 + 66);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 65);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 40) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_30_18(v5, (__n128)xmmword_46A250);
  v6[3].n128_u8[0] = v4;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v6[5], "isLastWindow");
  v6[5].n128_u8[13] = 0;
  v6[5].n128_u16[7] = -5120;
  v6[6].n128_u8[0] = v3;
  OUTLINED_FUNCTION_38_1(v6, (uint64_t)&type metadata for Bool);
  if (v2)
  {
    uint64_t v8 = 0;
    unint64_t v7 = 0;
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
  }
  else
  {
    unint64_t v7 = *(void *)(v0 + 24);
    uint64_t v8 = &type metadata for Double;
  }
  v5[10].n128_u64[1] = (unint64_t)v8;
  v5[9].n128_u64[0] = v7;
  uint64_t v9 = OUTLINED_FUNCTION_3_0();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_72(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_23_13();
  return v13();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 *v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v13)(unint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_35_1();
  uint64_t v14 = v1;
  OUTLINED_FUNCTION_18_3();
  char v2 = *(unsigned char *)(v0 + 58);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 57);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_24_3();
  *(void *)(v0 + 32) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_30_18(v5, (__n128)xmmword_46A250);
  v6[3].n128_u8[0] = v4;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v6[5], "isLastWindow");
  v6[5].n128_u8[13] = 0;
  v6[5].n128_u16[7] = -5120;
  v6[6].n128_u8[0] = v3;
  OUTLINED_FUNCTION_38_1(v6, (uint64_t)&type metadata for Bool);
  if (v2)
  {
    uint64_t v8 = 0;
    unint64_t v7 = 0;
    v5[9].n128_u64[1] = 0;
    v5[10].n128_u64[0] = 0;
  }
  else
  {
    unint64_t v7 = *(void *)(v0 + 16);
    uint64_t v8 = &type metadata for Double;
  }
  v5[10].n128_u64[1] = (unint64_t)v8;
  v5[9].n128_u64[0] = v7;
  uint64_t v9 = OUTLINED_FUNCTION_3_0();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_43_12(v9);
  *uint64_t v10 = v11;
  v10[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_10_16();
  return v13(0xD000000000000036);
}

{
  char v0;
  char v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  __n128 *v8;
  __n128 *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  unsigned __int8 v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_24_3();
  uint64_t v9 = OUTLINED_FUNCTION_30_18(v8, (__n128)xmmword_46A250);
  v9[3].n128_u8[0] = v7;
  uint64_t v10 = OUTLINED_FUNCTION_122_2((uint64_t)v9, (uint64_t)&type metadata for Bool);
  *(unsigned char *)(v10 + 96) = v5;
  OUTLINED_FUNCTION_38_1((void *)v10, v11);
  if (v1)
  {
    uint64_t v12 = 0;
    unsigned __int8 v3 = 0;
    v8[9].n128_u64[1] = 0;
    v8[10].n128_u64[0] = 0;
  }
  else
  {
    uint64_t v12 = &type metadata for Double;
  }
  v8[10].n128_u64[1] = (unint64_t)v12;
  v8[9].n128_u64[0] = v3;
  OUTLINED_FUNCTION_54_11();
  OUTLINED_FUNCTION_84_5();
  OUTLINED_FUNCTION_24();
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)(char a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 58) = a4;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = v4;
  *(unsigned char *)(v5 + 57) = a2;
  *(unsigned char *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_21_1((uint64_t)SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:));
}

void SearchCallHistoryCATs.__allocating_init(templateDir:options:globals:)()
{
}

void SearchCallHistoryCATs.init(templateDir:options:globals:)()
{
  OUTLINED_FUNCTION_24_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for CATOption();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_53();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  uint64_t v9 = OUTLINED_FUNCTION_11_0(v8);
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_37();
  outlined init with copy of SpeakableString?(v5, v1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v0, v3, v6);
  CATWrapper.init(templateDir:options:globals:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  _s16SiriDialogEngine15SpeakableStringVSgWOhTm_0(v5, (uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_26_1();
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties);
  }
  return result;
}

uint64_t type metadata accessor for SearchCallHistoryCATs()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryCATs;
  if (!type metadata singleton initialization cache for SearchCallHistoryCATs) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for SearchCallHistoryCATs()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for SearchCallHistoryCATs()
{
  return type metadata accessor for SearchCallHistoryCATs();
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryCATs.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD9)
  {
    if (a2 + 39 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 39) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 40;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x28;
  int v5 = v6 - 40;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryCATs.Properties(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    *uint64_t result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23C9D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 39;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchCallHistoryCATs.Properties()
{
  return &type metadata for SearchCallHistoryCATs.Properties;
}

__n128 *OUTLINED_FUNCTION_2_81(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6F6365526C6C6163;
  result[2].n128_u64[1] = 0xEF746E756F436472;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_62(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6F6365526C6C6163;
  a1[2].n128_u64[1] = 0xEA00000000006472;
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_39@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = v2 | 0xEF746E756F430000;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_28(uint64_t result)
{
  *(void *)(result + 32) = 0x61507473614C7369;
  *(void *)(result + 40) = 0xEA00000000006567;
  return result;
}

void OUTLINED_FUNCTION_20_27()
{
  *(void *)(v0 + 272) = 0x726F63655277656ELL;
  *(void *)(v0 + 280) = 0xEF746E756F437364;
}

uint64_t OUTLINED_FUNCTION_22_30@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x746E65746E69;
  v2[17] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_23_30(uint64_t a1)
{
  v2[6] = v1;
  v2[9] = a1;
  v2[10] = 0x746E65746E69;
  v2[11] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_23(uint64_t result)
{
  v2[24] = v1;
  v2[27] = result;
  v2[28] = 0x5074737269467369;
  v2[29] = 0xEF70704179747261;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_23@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = v2 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
  return result;
}

__n128 *OUTLINED_FUNCTION_30_18(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "isFirstWindow");
  result[2].n128_u16[7] = -4864;
  return result;
}

__n128 *OUTLINED_FUNCTION_35_20(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6D6563696F567369;
  result[2].n128_u64[1] = 0xEB000000006C6961;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_12@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x656369766564;
  v2[17] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_44_17@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_48_15(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x746E65746E69;
  a1[2].n128_u64[1] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_50_11@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(result + 48) = v5;
  *(void *)(result + 72) = a2;
  *(void *)(result + 80) = 0x64657373694D7369;
  *(void *)(result + 88) = 0xE800000000000000;
  *(unsigned char *)(result + 96) = v3;
  *(void *)(result + 120) = a2;
  *(void *)(result + 128) = 0x74736574614C7369;
  *(void *)(result + 136) = 0xE800000000000000;
  *(unsigned char *)(result + 144) = v2;
  *(void *)(result + 168) = a2;
  *(void *)(result + 176) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_59_9(uint64_t result)
{
  v3[15] = result;
  v3[16] = v1;
  v3[17] = (v2 - 32) | 0x8000000000000000;
  return result;
}

void OUTLINED_FUNCTION_62_10(uint64_t a1@<X8>)
{
  *(void *)(v4 + 376) = (a1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v4 + 384) = v2;
  *(void *)(v4 + 408) = v3;
  strcpy((char *)(v4 + 416), "isNewVoicemail");
  *(unsigned char *)(v4 + 431) = -18;
  *(void *)(v4 + 456) = v3;
  *(unsigned char *)(v4 + 432) = v1;
}

void OUTLINED_FUNCTION_63_5()
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v3 + 192) = v0;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

void OUTLINED_FUNCTION_67_7()
{
  *(void *)(v1 + 96) = v0;
}

void OUTLINED_FUNCTION_68_3()
{
  *(void *)(v1 + 96) = v0;
}

uint64_t OUTLINED_FUNCTION_74_4(uint64_t result)
{
  v2[12] = v1;
  v2[15] = result;
  v2[16] = 0xD000000000000013;
  return result;
}

uint64_t OUTLINED_FUNCTION_75_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x746E65746E69;
  v2[11] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_76_5(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v9 + 107) = v8;
  *(unsigned char *)(v9 + 106) = a8;
  *(void *)(v9 + 40) = a6;
  *(void *)(v9 + 48) = a7;
  *(unsigned char *)(v9 + 105) = a5;
  *(unsigned char *)(v9 + 104) = a4;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_78_4(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_80_3(char a1@<W8>)
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000;
  *(void *)(v3 + 216) = v2;
  *(unsigned char *)(v3 + 192) = a1;
}

uint64_t OUTLINED_FUNCTION_84_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, char a9@<W8>)
{
  *(unsigned char *)(v10 + 99) = a9;
  *(void *)(v10 + 48) = a8;
  *(void *)(v10 + 56) = v9;
  *(unsigned char *)(v10 + 98) = a7;
  *(void *)(v10 + 32) = a5;
  *(void *)(v10 + 40) = a6;
  *(unsigned char *)(v10 + 97) = a4;
  *(unsigned char *)(v10 + 96) = a3;
  *(void *)(v10 + 16) = result;
  *(void *)(v10 + 24) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_86_5(uint64_t a1, __n128 a2)
{
  *(unsigned char *)(a1 + 48) = v3;
  *(void *)(v4 + 24) = v2;
  v2[1] = a2;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_87_3(uint64_t a1, __n128 a2)
{
  *(unsigned char *)(a1 + 48) = v3;
  *(void *)(v4 + 32) = v2;
  v2[1] = a2;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_90_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_94_5(uint64_t a1@<X8>)
{
  v1[15] = a1;
  v1[16] = 0x746E65746E69;
  v1[17] = 0xE600000000000000;
}

uint64_t OUTLINED_FUNCTION_97_3()
{
  uint64_t result = 0;
  *(void *)(v0 + 152) = 0;
  *(void *)(v0 + 160) = 0;
  return result;
}

void OUTLINED_FUNCTION_99_3()
{
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
}

uint64_t OUTLINED_FUNCTION_100_2(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0x5074737269467369;
  v2[23] = 0xEF70704179747261;
  return result;
}

uint64_t OUTLINED_FUNCTION_101_3()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_102_4()
{
  *(void *)(v1 + 232) = (v0 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_104_1(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

void OUTLINED_FUNCTION_105_1()
{
  *(void *)(v0 + 296) = 0;
  *(void *)(v0 + 304) = 0;
}

void OUTLINED_FUNCTION_106_1()
{
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
}

void OUTLINED_FUNCTION_116_2(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + 192) = v2 & 1;
  *(void *)(v1 + 216) = a1;
  *(void *)(v1 + 224) = 0x656D614E707061;
  *(void *)(v1 + 232) = 0xE700000000000000;
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return SearchCallHistoryCATs.offerToContinueReading(isLastPage:)();
}

uint64_t OUTLINED_FUNCTION_118_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v3[29] = (a2 - 32) | 0x8000000000000000;
  v3[30] = v2;
  v3[33] = a1;
  v3[34] = 0x746E65746E69;
  v3[35] = 0xE600000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_120_1()
{
  return SearchCallHistoryCATs.offerToContinueReading(isLastPage:completion:)();
}

void OUTLINED_FUNCTION_121_1()
{
  *(unsigned char *)(v2 + 192) = v0;
  *(void *)(v2 + 216) = v1;
  *(void *)(v2 + 224) = 0x656D614E707061;
  *(void *)(v2 + 232) = 0xE700000000000000;
}

uint64_t OUTLINED_FUNCTION_122_2@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 72) = a2;
  strcpy((char *)(result + 80), "isLastWindow");
  *(unsigned char *)(result + 93) = 0;
  *(_WORD *)(result + 94) = -5120;
  return result;
}

void OUTLINED_FUNCTION_123_2(int a1@<W6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  *(void *)(v4 - 96) = a3;
  *(void *)(v4 - 88) = v3;
  *(void *)(v4 - 112) = a2;
  *(_DWORD *)(v4 - 100) = a1;
}

uint64_t OUTLINED_FUNCTION_127_0()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_129_2()
{
  *(unsigned char *)(v2 + 240) = v0;
  *(void *)(v2 + 264) = v1;
  *(void *)(v2 + 272) = 0x656D614E707061;
  *(void *)(v2 + 280) = 0xE700000000000000;
}

void OUTLINED_FUNCTION_133_2()
{
  strcpy((char *)(v0 + 80), "callTypesCount");
  *(unsigned char *)(v0 + 95) = -18;
}

void OUTLINED_FUNCTION_134_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = (a1 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_136_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_137_0@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x746E65746E69;
  v2[17] = 0xE600000000000000;
  return 0;
}

void OUTLINED_FUNCTION_147_2()
{
  *(unsigned char *)(v2 + 144) = v0;
  *(void *)(v2 + 168) = v1;
  *(void *)(v2 + 176) = v3 + 1;
}

void OUTLINED_FUNCTION_149_2()
{
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
}

void OUTLINED_FUNCTION_150_1()
{
  *(void *)(v0 + 344) = 0;
  *(void *)(v0 + 352) = 0;
}

void *OUTLINED_FUNCTION_152_2@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  result[9] = a2;
  result[10] = 0x64657373694D7369;
  result[11] = 0xE800000000000000;
  return result;
}

void OUTLINED_FUNCTION_154_1(uint64_t a1@<X8>)
{
  v2[6] = a1;
  v2[9] = v1;
  v2[10] = v3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_166_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 232) = (a1 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_168_1(uint64_t a1@<X8>)
{
  *(void *)(v2 + 184) = (a1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v2 + 192) = v4 & 1;
  *(void *)(v2 + 216) = v1;
  *(void *)(v2 + 224) = v3;
}

void OUTLINED_FUNCTION_169_0(uint64_t a1@<X8>)
{
  *(void *)(v3 + 184) = (a1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v3 + 192) = v1 & 1;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

void OUTLINED_FUNCTION_171_1()
{
  *(void *)(v1 + 136) = (v0 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_172_1(uint64_t a1@<X8>)
{
  v2[42] = v1;
  v2[45] = a1;
  v2[46] = v3 + 16;
}

uint64_t *OUTLINED_FUNCTION_173_1()
{
  *(void *)(v2 + 264) = v1;
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_174_0()
{
  return SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:completion:)();
}

uint64_t OUTLINED_FUNCTION_175_0(uint64_t result)
{
  *(void *)(v2 + 144) = v1;
  *(void *)(v2 + 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_176_1()
{
  *(void *)(v0 + 80) = 0x746E65746E69;
  *(void *)(v0 + 88) = 0xE600000000000000;
  return 0;
}

void *OUTLINED_FUNCTION_181_0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  result[15] = a2;
  result[16] = 0x74736574614C7369;
  result[17] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_182_1(unint64_t a1)
{
  return SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(a1);
}

uint64_t OUTLINED_FUNCTION_183_0(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 106) = a8;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 48) = a7;
  *(unsigned char *)(v8 + 105) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a4;
  *(unsigned char *)(v8 + 104) = a3;
  *(void *)(v8 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  return SearchCallHistoryCATs.buildCallRecordDetail(callRecord:completion:)();
}

void OUTLINED_FUNCTION_185_1(uint64_t a1@<X8>)
{
  v1[15] = a1;
  v1[16] = 0x656369766564;
  v1[17] = 0xE600000000000000;
}

void OUTLINED_FUNCTION_187_1()
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v3 + 192) = v0;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

uint64_t OUTLINED_FUNCTION_188_1()
{
  return SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)();
}

uint64_t OUTLINED_FUNCTION_199_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_202_1(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_203_1(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_205_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[12] = a2;
  v2[15] = result;
  v2[16] = 0xD000000000000013;
  return result;
}

void OUTLINED_FUNCTION_207_0(char a1@<W8>)
{
  *(void *)(v3 + 376) = (v1 - 32) | 0x8000000000000000;
  *(void *)(v3 + 408) = v2;
  *(unsigned char *)(v3 + 384) = a1;
}

void OUTLINED_FUNCTION_208_1(char a1@<W8>)
{
  *(void *)(v3 + 232) = (v1 - 32) | 0x8000000000000000;
  *(void *)(v3 + 264) = v2;
  *(unsigned char *)(v3 + 240) = a1;
}

uint64_t OUTLINED_FUNCTION_209_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 88) = (v2 - 32) | 0x8000000000000000;
  *(void *)(result + 120) = a2;
  *(unsigned char *)(result + 96) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_211_1(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0xD000000000000013;
  return result;
}

uint64_t OUTLINED_FUNCTION_214_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v3[21] = result;
  v3[22] = v4;
  v3[23] = (a2 - 32) | 0x8000000000000000;
  v3[24] = v2;
  v3[27] = result;
  v3[28] = v4;
  return result;
}

unint64_t OUTLINED_FUNCTION_215_1(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_216_1(uint64_t a1@<X8>)
{
  *(void *)(v3 + 376) = (a1 - 32) | 0x8000000000000000;
  *(void *)(v3 + 408) = v2;
  *(unsigned char *)(v3 + 384) = v1;
}

void OUTLINED_FUNCTION_217_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_218_0(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = (a1 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_219_0(uint64_t a1@<X8>)
{
  *(void *)(v3 + 320) = v4;
  *(void *)(v3 + 328) = (a1 - 32) | 0x8000000000000000;
  *(void *)(v3 + 360) = v2;
  *(unsigned char *)(v3 + 336) = v1;
}

uint64_t OUTLINED_FUNCTION_222_0()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
}

uint64_t OUTLINED_FUNCTION_223_0()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
}

void OUTLINED_FUNCTION_227_0()
{
  *(unsigned char *)(v2 + 144) = v0;
  *(void *)(v2 + 168) = v1;
  *(void *)(v2 + 176) = v3;
}

uint64_t OUTLINED_FUNCTION_232_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(result + 48) = v2;
  *(void *)(result + 72) = a2;
  *(void *)(result + 80) = 0xD000000000000020;
  return result;
}

void OUTLINED_FUNCTION_233_0(uint64_t a1@<X8>)
{
  v1[6] = v2;
  v1[9] = a1;
  v1[10] = 0xD000000000000014;
}

void OUTLINED_FUNCTION_234_0()
{
  *(unsigned char *)(v1 + 144) = v3 & 1;
  *(void *)(v1 + 168) = v0;
  *(void *)(v1 + 176) = v2 + 1;
}

uint64_t *OUTLINED_FUNCTION_241()
{
  *(void *)(v2 + 312) = v1;
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_242()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_243()
{
  *(unsigned char *)(v2 + 144) = v0 & 1;
  *(void *)(v2 + 168) = v1;
  *(void *)(v2 + 176) = v3 + 1;
}

uint64_t OUTLINED_FUNCTION_258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 184) = (a2 - 32) | 0x8000000000000000;
  return 0;
}

uint64_t OUTLINED_FUNCTION_260()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)();
}

uint64_t OUTLINED_FUNCTION_263@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 88) = (v2 - 32) | 0x8000000000000000;
  *(void *)(result + 120) = a2;
  return result;
}

uint64_t ReaderNlIntent.traversableIntentNode.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of NonTerminalIntentNode?(v1, a1);
}

uint64_t outlined init with copy of NonTerminalIntentNode?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ReaderNlIntent.traversableIntentNode.setter(uint64_t a1)
{
  return outlined assign with take of NonTerminalIntentNode?(a1, v1);
}

uint64_t outlined assign with take of NonTerminalIntentNode?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t ReaderNlIntent.traversableOntologyNode.getter()
{
  type metadata accessor for ReaderNlIntent(0);

  return swift_retain();
}

uint64_t type metadata accessor for ReaderNlIntent(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for ReaderNlIntent);
}

uint64_t ReaderNlIntent.traversableOntologyNode.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ReaderNlIntent(0) + 20);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

Swift::Void (__swiftcall *ReaderNlIntent.traversableOntologyNode.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ReaderNlIntent.init(intent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NonTerminalIntentNode();
  __swift_storeEnumTagSinglePayload(a2, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_467710;
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once();
  }
  uint64_t v9 = static ReaderOntologyNode.readerVerbNode;
  *(void *)(v8 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  *(void *)(v8 + 64) = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type TerminalOntologyNode<ReaderVerb> and conformance TerminalOntologyNode<A>, &demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  *(void *)(v8 + 32) = v9;
  type metadata accessor for NonTerminalOntologyNode();
  swift_allocObject();
  swift_retain();
  uint64_t v10 = NonTerminalOntologyNode.init(name:multicardinal:childNodes:)();
  *(void *)(a2 + *(int *)(type metadata accessor for ReaderNlIntent(0) + 20)) = v10;
  ReaderNlIntent.getReaderIntentNode(intent:)((uint64_t)v6);
  type metadata accessor for NLIntent();
  OUTLINED_FUNCTION_39_8();
  (*(void (**)(uint64_t))(v11 + 8))(a1);
  return outlined assign with take of NonTerminalIntentNode?((uint64_t)v6, a2);
}

uint64_t *ReaderOntologyNode.readerVerbNode.unsafeMutableAddressor()
{
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once();
  }
  return &static ReaderOntologyNode.readerVerbNode;
}

uint64_t ReaderNlIntent.getReaderIntentNode(intent:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v102 = (uint64_t)&v91 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v103 = (uint64_t)&v91 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v104 = (uint64_t)&v91 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v91 - v12;
  uint64_t v14 = type metadata accessor for NonTerminalIntentNode();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (uint64_t)&v91 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v91 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v91 - v25;
  NLIntent.rootNode.getter();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentNode);
  if (!swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v14);
    uint64_t v31 = (uint64_t)v13;
LABEL_50:
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v31, &demangling cache variable for type metadata for NonTerminalIntentNode?);
    goto LABEL_51;
  }
  uint64_t v98 = v27;
  uint64_t v92 = v21;
  uint64_t v97 = v24;
  uint64_t v91 = v5;
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v14);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
  uint64_t v95 = v15 + 32;
  unint64_t v94 = v28;
  v28(v26, (uint64_t)v13, v14);
  if (NonTerminalIntentNode.ontologyNodeName.getter() == 0x6973734169726953 && v29 == 0xED0000746E617473)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v26, v14);
LABEL_51:
      uint64_t v55 = a1;
      uint64_t v56 = 1;
      uint64_t v57 = v14;
      return __swift_storeEnumTagSinglePayload(v55, v56, 1, v57);
    }
  }
  uint64_t v99 = v18;
  uint64_t v100 = v26;
  uint64_t v101 = v15;
  uint64_t v32 = NonTerminalIntentNode.childNodes.getter();
  uint64_t v33 = v32;
  uint64_t v34 = _swiftEmptyArrayStorage;
  uint64_t v106 = _swiftEmptyArrayStorage;
  uint64_t v35 = *(void *)(v32 + 16);
  if (!v35) {
    goto LABEL_27;
  }
  uint64_t v96 = v14;
  uint64_t v93 = a1;
  unint64_t v36 = 0;
  a1 = 0x6E6F69746361;
  uint64_t v37 = v32 + 32;
  uint64_t v38 = 0xE600000000000000;
  do
  {
    if (v36 >= *(void *)(v33 + 16))
    {
      __break(1u);
      goto LABEL_102;
    }
    outlined init with copy of SignalProviding(v37, (uint64_t)&v107);
    __swift_project_boxed_opaque_existential_1(&v107, v108);
    if (dispatch thunk of IntentNode.ontologyNodeName.getter() == 0x6E6F69746361 && v39 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
        goto LABEL_25;
      }
    }
    outlined init with take of AppSelectionSignalComponent(&v107, (uint64_t)v105);
    uint64_t v41 = v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v41 = v106;
    }
    unint64_t v42 = v41[2];
    uint64_t v21 = v42 + 1;
    if (v42 >= v41[3] >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v41 = v106;
    }
    uint64_t v41[2] = v21;
    outlined init with take of AppSelectionSignalComponent(v105, (uint64_t)&v41[5 * v42 + 4]);
LABEL_25:
    ++v36;
    v37 += 40;
  }
  while (v35 != v36);
  uint64_t v34 = v106;
  a1 = v93;
  uint64_t v14 = v96;
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t)v100;
  uint64_t v21 = v101;
  uint64_t v43 = (uint64_t)v99;
  if (v34[2] != 1)
  {
    (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v14);
    swift_release();
    goto LABEL_51;
  }
  specialized Collection.first.getter((uint64_t)v34, (uint64_t)&v107);
  swift_release();
  if (!v108)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)&v107, &demangling cache variable for type metadata for IntentNode?);
    uint64_t v44 = v104;
    __swift_storeEnumTagSinglePayload(v104, 1, 1, v14);
    goto LABEL_49;
  }
  uint64_t v44 = v104;
  int v45 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(v44, v45 ^ 1u, 1, v14);
  if (__swift_getEnumTagSinglePayload(v44, 1, v14) == 1)
  {
LABEL_49:
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v33, v14);
    uint64_t v31 = v44;
    goto LABEL_50;
  }
  uint64_t v96 = v14;
  v94(v97, v44, v14);
  uint64_t v46 = NonTerminalIntentNode.childNodes.getter();
  unint64_t v47 = (void *)v46;
  char v48 = _swiftEmptyArrayStorage;
  uint64_t v106 = _swiftEmptyArrayStorage;
  uint64_t v49 = *(void *)(v46 + 16);
  if (!v49) {
    goto LABEL_53;
  }
  uint64_t v93 = a1;
  unint64_t v50 = 0;
  a1 = 0x646E616D6D6F63;
  uint64_t v33 = v46 + 32;
  uint64_t v38 = 0xE700000000000000;
  uint64_t v43 = 40;
  while (2)
  {
    if (v50 >= v47[2])
    {
      __break(1u);
      goto LABEL_105;
    }
    outlined init with copy of SignalProviding(v33, (uint64_t)&v107);
    __swift_project_boxed_opaque_existential_1(&v107, v108);
    if (dispatch thunk of IntentNode.ontologyNodeName.getter() == 0x646E616D6D6F63 && v51 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
        goto LABEL_45;
      }
    }
    outlined init with take of AppSelectionSignalComponent(&v107, (uint64_t)v105);
    os_log_type_t v53 = v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      os_log_type_t v53 = v106;
    }
    unint64_t v54 = v53[2];
    uint64_t v21 = v54 + 1;
    if (v54 >= v53[3] >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      os_log_type_t v53 = v106;
    }
    v53[2] = v21;
    outlined init with take of AppSelectionSignalComponent(v105, (uint64_t)&v53[5 * v54 + 4]);
LABEL_45:
    ++v50;
    v33 += 40;
    if (v49 != v50) {
      continue;
    }
    break;
  }
  char v48 = v106;
  a1 = v93;
  uint64_t v33 = (uint64_t)v100;
  uint64_t v21 = v101;
  uint64_t v43 = (uint64_t)v99;
LABEL_53:
  swift_bridgeObjectRelease();
  if (v48[2] != 1)
  {
    swift_release();
    uint64_t v71 = *(void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v72 = v96;
    v71(v97, v96);
    v71((char *)v33, v72);
    uint64_t v55 = a1;
    uint64_t v56 = 1;
    uint64_t v57 = v72;
    return __swift_storeEnumTagSinglePayload(v55, v56, 1, v57);
  }
  specialized Collection.first.getter((uint64_t)v48, (uint64_t)&v107);
  swift_release();
  uint64_t v38 = v96;
  if (!v108)
  {
    _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)&v107, &demangling cache variable for type metadata for IntentNode?);
    uint64_t v59 = v103;
    __swift_storeEnumTagSinglePayload(v103, 1, 1, v38);
    goto LABEL_75;
  }
  uint64_t v59 = v103;
  int v60 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(v59, v60 ^ 1u, 1, v38);
  if (__swift_getEnumTagSinglePayload(v59, 1, v38) == 1)
  {
LABEL_75:
    uint64_t v73 = *(void (**)(char *, uint64_t))(v21 + 8);
    v73(v97, v38);
    v73((char *)v33, v38);
    uint64_t v74 = v59;
    goto LABEL_76;
  }
  v94((char *)v92, v59, v38);
  uint64_t result = NonTerminalIntentNode.childNodes.getter();
  uint64_t v61 = result;
  uint64_t v62 = _swiftEmptyArrayStorage;
  uint64_t v106 = _swiftEmptyArrayStorage;
  uint64_t v63 = *(void *)(result + 16);
  if (!v63) {
    goto LABEL_79;
  }
  uint64_t v93 = a1;
  unint64_t v64 = 0;
  uint64_t v65 = result + 32;
  while (2)
  {
    if (v64 < *(void *)(v61 + 16))
    {
      outlined init with copy of SignalProviding(v65, (uint64_t)&v107);
      __swift_project_boxed_opaque_existential_1(&v107, v108);
      if (dispatch thunk of IntentNode.ontologyNodeName.getter() == 0x7463656A627573 && v66 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v68 & 1) == 0)
        {
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
          goto LABEL_71;
        }
      }
      outlined init with take of AppSelectionSignalComponent(&v107, (uint64_t)v105);
      uint64_t v69 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v69 = v106;
      }
      unint64_t v70 = v69[2];
      if (v70 >= v69[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v69 = v106;
      }
      v69[2] = v70 + 1;
      uint64_t result = outlined init with take of AppSelectionSignalComponent(v105, (uint64_t)&v69[5 * v70 + 4]);
LABEL_71:
      ++v64;
      v65 += 40;
      if (v63 != v64) {
        continue;
      }
      uint64_t v62 = v106;
      a1 = v93;
      uint64_t v38 = v96;
      uint64_t v33 = (uint64_t)v100;
      uint64_t v21 = v101;
      uint64_t v43 = (uint64_t)v99;
LABEL_79:
      swift_bridgeObjectRelease();
      if (v62[2] != 1)
      {
        swift_release();
        uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
        goto LABEL_100;
      }
      specialized Collection.first.getter((uint64_t)v62, (uint64_t)&v107);
      swift_release();
      if (v108)
      {
        uint64_t v75 = v102;
        int v76 = swift_dynamicCast();
        __swift_storeEnumTagSinglePayload(v75, v76 ^ 1u, 1, v38);
        if (__swift_getEnumTagSinglePayload(v75, 1, v38) != 1)
        {
          v94((char *)v43, v75, v38);
          uint64_t result = NonTerminalIntentNode.childNodes.getter();
          uint64_t v77 = result;
          unint64_t v47 = _swiftEmptyArrayStorage;
          uint64_t v106 = _swiftEmptyArrayStorage;
          uint64_t v78 = *(void *)(result + 16);
          if (v78)
          {
            uint64_t v93 = a1;
            unint64_t v79 = 0;
            uint64_t v80 = result + 32;
            while (1)
            {
              if (v79 >= *(void *)(v77 + 16)) {
                goto LABEL_113;
              }
              outlined init with copy of SignalProviding(v80, (uint64_t)&v107);
              __swift_project_boxed_opaque_existential_1(&v107, v108);
              if (dispatch thunk of IntentNode.ontologyNodeName.getter() == 0x726564616572
                && v81 == 0xE600000000000000)
              {
                break;
              }
              char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v83) {
                goto LABEL_92;
              }
              uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
LABEL_97:
              ++v79;
              v80 += 40;
              if (v78 == v79)
              {
                unint64_t v47 = v106;
                a1 = v93;
                uint64_t v38 = v96;
                uint64_t v33 = (uint64_t)v100;
                uint64_t v21 = v101;
                uint64_t v43 = (uint64_t)v99;
                goto LABEL_105;
              }
            }
            swift_bridgeObjectRelease();
LABEL_92:
            outlined init with take of AppSelectionSignalComponent(&v107, (uint64_t)v105);
            uint64_t v84 = v106;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v84 = v106;
            }
            unint64_t v85 = v84[2];
            if (v85 >= v84[3] >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v84 = v106;
            }
            v84[2] = v85 + 1;
            uint64_t result = outlined init with take of AppSelectionSignalComponent(v105, (uint64_t)&v84[5 * v85 + 4]);
            goto LABEL_97;
          }
LABEL_105:
          swift_bridgeObjectRelease();
          if (v47[2] == 1)
          {
            specialized Collection.first.getter((uint64_t)v47, (uint64_t)&v107);
            swift_release();
            uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
            v88(v43, v38);
            v88(v92, v38);
            v88((uint64_t)v97, v38);
            v88(v33, v38);
            if (v108)
            {
              uint64_t v89 = (uint64_t)v91;
              int v90 = swift_dynamicCast();
              __swift_storeEnumTagSinglePayload(v89, v90 ^ 1u, 1, v38);
              if (__swift_getEnumTagSinglePayload(v89, 1, v38) != 1)
              {
                v94((char *)a1, v89, v38);
                uint64_t v55 = a1;
                uint64_t v56 = 0;
                goto LABEL_78;
              }
            }
            else
            {
              _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)&v107, &demangling cache variable for type metadata for IntentNode?);
              uint64_t v89 = (uint64_t)v91;
              __swift_storeEnumTagSinglePayload((uint64_t)v91, 1, 1, v38);
            }
            uint64_t v74 = v89;
LABEL_76:
            _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1(v74, &demangling cache variable for type metadata for NonTerminalIntentNode?);
LABEL_77:
            uint64_t v55 = a1;
            uint64_t v56 = 1;
LABEL_78:
            uint64_t v57 = v38;
            return __swift_storeEnumTagSinglePayload(v55, v56, 1, v57);
          }
          swift_release();
          uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
          v86(v43, v38);
LABEL_100:
          v86(v92, v38);
          v86((uint64_t)v97, v38);
          v86(v33, v38);
          goto LABEL_77;
        }
LABEL_103:
        uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
        v87(v92, v38);
        v87((uint64_t)v97, v38);
        v87(v33, v38);
        uint64_t v74 = v75;
        goto LABEL_76;
      }
LABEL_102:
      _s16SiriDialogEngine15SpeakableStringVSgWOhTm_1((uint64_t)&v107, &demangling cache variable for type metadata for IntentNode?);
      uint64_t v75 = v102;
      __swift_storeEnumTagSinglePayload(v102, 1, 1, v38);
      goto LABEL_103;
    }
    break;
  }
  __break(1u);
LABEL_113:
  __break(1u);
  return result;
}

uint64_t ReaderNlIntent.getReaderVerb.getter()
{
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once();
  }
  type metadata accessor for ReaderNlIntent(0);
  lazy protocol witness table accessor for type ReaderNlIntent and conformance ReaderNlIntent();
  IntentNodeTraversable.value<A>(forNode:)();
  return v1;
}

uint64_t protocol witness for IntentNodeTraversable.traversableOntologyNode.getter in conformance ReaderNlIntent()
{
  return swift_retain();
}

uint64_t one-time initialization function for readerVerbNode()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  swift_allocObject();
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)();
  static ReaderOntologyNode.readerVerbNode = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type ReaderNlIntent and conformance ReaderNlIntent()
{
  unint64_t result = lazy protocol witness table cache variable for type ReaderNlIntent and conformance ReaderNlIntent;
  if (!lazy protocol witness table cache variable for type ReaderNlIntent and conformance ReaderNlIntent)
  {
    type metadata accessor for ReaderNlIntent(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderNlIntent and conformance ReaderNlIntent);
  }
  return result;
}

uint64_t static ReaderOntologyNode.readerVerbNode.getter()
{
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t ReaderOntologyNode.__allocating_init(name:multicardinal:)()
{
  return ReaderOntologyNode.init(name:multicardinal:)();
}

uint64_t ReaderOntologyNode.init(name:multicardinal:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_467710;
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once();
  }
  uint64_t v1 = static ReaderOntologyNode.readerVerbNode;
  *(void *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  *(void *)(v0 + 64) = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type TerminalOntologyNode<ReaderVerb> and conformance TerminalOntologyNode<A>, &demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  *(void *)(v0 + 32) = v1;
  swift_retain();

  return NonTerminalOntologyNode.init(name:multicardinal:childNodes:)();
}

void ReaderOntologyNode.init(name:multicardinal:childNodes:)()
{
}

uint64_t ReaderOntologyNode.__deallocating_deinit()
{
  NonTerminalOntologyNode.deinit();

  return swift_deallocClassInstance();
}

PhoneCallFlowDelegatePlugin::ReaderVerb_optional __swiftcall ReaderVerb.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ReaderVerb.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::ReaderVerb_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ReaderVerb_optional)v3;
  }
}

_UNKNOWN **static ReaderVerb.allCases.getter()
{
  return &outlined read-only object #0 of static ReaderVerb.allCases.getter;
}

uint64_t ReaderVerb.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x65756E69746E6F63;
  }
  if (a1 == 1) {
    return 1886352499;
  }
  return 0x746165706572;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ReaderVerb(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

unint64_t lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb()
{
  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ReaderVerb()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ReaderVerb(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ReaderVerb()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

PhoneCallFlowDelegatePlugin::ReaderVerb_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReaderVerb@<W0>(Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ReaderVerb_optional *a2@<X8>)
{
  result.value = ReaderVerb.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ReaderVerb@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ReaderVerb.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ReaderVerb()
{
  return lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type [ReaderVerb] and conformance [A], &demangling cache variable for type metadata for [ReaderVerb]);
}

void protocol witness for static CaseIterable.allCases.getter in conformance ReaderVerb(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ReaderVerb.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance ReaderVerb(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v12 = lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb();
  unint64_t v13 = lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb();
  unint64_t v14 = lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v12, v13, v14, v15, v16, v17, a9, a10);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReaderNlIntent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for NonTerminalIntentNode();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ReaderNlIntent(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NonTerminalIntentNode();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }

  return swift_release();
}

char *initializeWithCopy for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  return a1;
}

char *assignWithCopy for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderNlIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23F580);
}

uint64_t sub_23F580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ReaderNlIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23F624);
}

void sub_23F624(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  OUTLINED_FUNCTION_1_6();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void type metadata completion function for ReaderNlIntent()
{
  type metadata accessor for NonTerminalIntentNode?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for NonTerminalIntentNode?()
{
  if (!lazy cache variable for type metadata for NonTerminalIntentNode?)
  {
    type metadata accessor for NonTerminalIntentNode();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for NonTerminalIntentNode?);
    }
  }
}

uint64_t type metadata accessor for ReaderOntologyNode(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State(a1, (uint64_t *)&type metadata singleton initialization cache for ReaderOntologyNode);
}

uint64_t type metadata completion function for ReaderOntologyNode()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for ReaderOntologyNode()
{
  return type metadata accessor for ReaderOntologyNode(0);
}

unsigned char *storeEnumTagSinglePayload for ReaderVerb(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23F8D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderVerb()
{
  return &type metadata for ReaderVerb;
}

void *CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long *a11)
{
  void (*v21)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v27)(uint64_t, uint64_t);
  long long v32[2];

  unint64_t v12 = v11;
  uint64_t v18 = *v11;
  uint64_t v19 = type metadata accessor for DialogPhase();
  __chkstk_darwin(v19 - 8);
  OUTLINED_FUNCTION_65_0();
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)();
  void v12[2] = a1;
  uint64_t v20 = *(void *)(*(void *)(*(void *)(v18 + 88) + 8) + 8);
  uint64_t v21 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v20 + 8);
  uint64_t v22 = *(void *)(v18 + 80);
  swift_unknownObjectRetain();
  v21(v32, v22, v20);
  outlined init with take of AppSelectionSignalComponent(v32, (uint64_t)(v12 + 3));
  v12[8] = a2;
  outlined init with copy of SignalProviding(a3, (uint64_t)(v12 + 9));
  v12[14] = a4;
  v12[15] = a5;
  v12[16] = a6;
  outlined init with copy of SignalProviding(a7, (uint64_t)(v12 + 17));
  v12[22] = a8;
  outlined init with copy of SignalProviding(a9, (uint64_t)(v12 + 23));
  outlined init with copy of SignalProviding(a10, (uint64_t)(v12 + 28));
  uint64_t v23 = v12[6];
  uint64_t v24 = v12[7];
  __swift_project_boxed_opaque_existential_1(v12 + 3, v23);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = v27(v23, v24);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1(a3);
  outlined init with copy of SignalProviding(v25 + 120, (uint64_t)v32);
  swift_release();
  outlined init with take of AppSelectionSignalComponent(v32, (uint64_t)(v12 + 33));
  outlined init with take of AppSelectionSignalComponent(a11, (uint64_t)(v12 + 38));
  return v12;
}

uint64_t CallingIntentBaseFlowStrategy.handleTemplatingResultFailure(_:_:)(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  return CallingIntentBaseFlowStrategy.handleTemplatingResultFailure(_:_:)(a1, a2, a3, "#%s failed to make templating result: %s");
}

uint64_t CallingIntentBaseFlowStrategy.handleAceViewsFailure(_:_:)(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  return CallingIntentBaseFlowStrategy.handleTemplatingResultFailure(_:_:)(a1, a2, a3, "#%s failed to make ace views: %s");
}

uint64_t CallingIntentBaseFlowStrategy.handleTemplatingResultFailure(_:_:)(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, const char *a4)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    uint64_t v13 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v8, v9, a4, (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  v16[0] = a1;
  char v17 = 1;
  swift_errorRetain();
  a2(v16);
  return outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v16, &demangling cache variable for type metadata for Result<Output, Error>);
}

uint64_t CallingIntentBaseFlowStrategy.handleAceViewsFailure(_:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v4 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    uint64_t v6 = String.init<A>(describing:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "#%s failed to make ace views: %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  return swift_errorRetain();
}

uint64_t CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  OUTLINED_FUNCTION_2();
  uint64_t v13 = v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v14 - 8);
  OUTLINED_FUNCTION_65_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  swift_retain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    v38[0] = v19;
    uint64_t v20 = _typeName(_:qualified:)();
    *(void *)&v37[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v16, v17, "#%s slot resolvers enabled, calling multicardinal slot resolver", v18, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v22 = v8 + 24;
  uint64_t v24 = *(void *)(v13 + 80);
  uint64_t v23 = *(void *)(v13 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  static ContactSlotResolver.makeMulticardinalResolver<A>(multicardinalIndex:rchFlowContext:sharedGlobals:)(a4, 0, a3, 0, 0, v22, (uint64_t)v38);
  swift_release();
  uint64_t v25 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v25);
  uint64_t v26 = type metadata accessor for AnyIntentResolver();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(_OWORD *, uint64_t *, uint64_t))(v27 + 16))(v37, v38, v26);
  outlined init with copy of SignalProviding(a2, (uint64_t)v36);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  *(void *)(v28 + 24) = 0;
  *(void *)(v28 + 32) = v24;
  *(void *)(v28 + 40) = v23;
  long long v29 = v37[1];
  *(_OWORD *)(v28 + 48) = v37[0];
  *(_OWORD *)(v28 + 64) = v29;
  long long v30 = v37[3];
  *(_OWORD *)(v28 + 80) = v37[2];
  *(_OWORD *)(v28 + 96) = v30;
  *(void *)(v28 + 112) = a1;
  outlined init with take of AppSelectionSignalComponent(v36, v28 + 120);
  *(void *)(v28 + 160) = a5;
  *(void *)(v28 + 168) = a6;
  id v31 = a1;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v7, (uint64_t)&async function pointer to partial apply for closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:), v28);
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v27 + 8))(v38, v26);
}

uint64_t CallingIntentBaseFlowStrategy.getCompletionOutputManifest(intent:intentResponse:withContextForHandleIntent:responseViewId:printSupportingDialogInDisplayModes:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  v15[1] = a1;
  OUTLINED_FUNCTION_2();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v15 - v10;
  uint64_t v12 = v3 + direct field offset for CallingIntentBaseFlowStrategy.completionOutputManifest;
  type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(a3, v12);
  if (a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    type metadata accessor for PhoneCallNLContextProvider();
    static PhoneCallNLContextProvider.makeContextForHandleIntent(intent:handleIntentResponse:)();
    outlined init with copy of NLContextUpdate?((uint64_t)v11, (uint64_t)v9);
    OutputGenerationManifest.nlContextUpdate.setter();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)((uint64_t)v11, &demangling cache variable for type metadata for NLContextUpdate?);
  }
  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter();
  swift_bridgeObjectRetain();
  return OutputGenerationManifest.responseViewId.setter();
}

uint64_t ButtonBuilder.command.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t HangUpCallIntentRCHFlowStrategy.responseGenerator.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 72, a1);
}

uint64_t SearchCallHistorySharedGlobals.phoneCommonCats.getter()
{
  return swift_retain();
}

uint64_t CallingIntentBaseFlowStrategy.phoneCallCommonCATsSimple.getter()
{
  return swift_retain();
}

uint64_t CallingIntentBaseFlowStrategy.responseGenerator.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 184, a1);
}

uint64_t CallingIntentBaseFlowStrategy.siriKitEventSender.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 224, a1);
}

uint64_t CallingIntentBaseFlowStrategy.referenceResolver.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 264, a1);
}

uint64_t CallingIntentBaseFlowStrategy.appInfoBuilder.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 304, a1);
}

uint64_t CallingIntentBaseFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long *a11)
{
  uint64_t v19 = swift_allocObject();
  CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v19;
}

uint64_t closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a5;
  uint64_t v11 = (void *)swift_task_alloc();
  uint64_t v8[5] = v11;
  swift_getAssociatedTypeWitness();
  type metadata accessor for AnyIntentResolver();
  *uint64_t v11 = v8;
  v11[1] = closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:);
  return AnyIntentResolver.resolve(skIntent:nlIntent:)(a5, a6);
}

uint64_t closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = v3;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    unint64_t v5 = closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:);
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    unint64_t v5 = closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:);
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)()
{
  uint64_t v1 = *(void (**)(void))(v0 + 24);
  id v2 = *(id *)(v0 + 48);
  v1();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

{
  uint64_t v0;
  void (*v1)(void);
  id v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = *(void (**)(void))(v0 + 24);
  id v2 = *(id *)(v0 + 16);
  v1();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t CallingIntentBaseFlowStrategy.__deallocating_deinit()
{
  CallingIntentBaseFlowStrategy.deinit();
  OUTLINED_FUNCTION_2();

  return swift_deallocClassInstance();
}

uint64_t sub_240C64()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_release();

  return _swift_deallocObject(v0, 176, 7);
}

uint64_t partial apply for closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (uint64_t)(v1 + 6);
  uint64_t v6 = v1[14];
  uint64_t v7 = (uint64_t)(v1 + 15);
  uint64_t v9 = v1[20];
  uint64_t v8 = v1[21];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = protocol witness for Flow.execute() in conformance PhoneFlow<A, B>;
  return closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)(a1, v3, v4, v5, v6, v7, v9, v8);
}

uint64_t type metadata completion function for CallingIntentBaseFlowStrategy()
{
  uint64_t result = type metadata accessor for OutputGenerationManifest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CallingIntentBaseFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

void specialized closure #1 in static DICodableOverride.undoEncoding<A>(name:type:)(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v7 & 1) == 0)
  {
    long long v22 = 0u;
    long long v23 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  outlined init with copy of Any(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {
LABEL_9:
    outlined destroy of Any?((uint64_t)&v22);
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
  if (swift_dynamicCast())
  {
    uint64_t v8 = self;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&long long v22 = 0;
    id v10 = [v8 dataWithPropertyList:isa format:200 options:0 error:&v22];

    id v11 = (id)v22;
    if (v10)
    {
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;

      type metadata accessor for PropertyListDecoder();
      swift_allocObject();
      PropertyListDecoder.init()();
      *((void *)&v23 + 1) = type metadata accessor for URL();
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
      lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))&type metadata accessor for URL);
      dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
      swift_release();
      swift_bridgeObjectRetain();
      specialized Dictionary.subscript.setter((uint64_t)&v22, a2, a3);
      outlined consume of Data._Representation(v12, v14);
    }
    else
    {
      uint64_t v15 = v11;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (one-time initialization token for siriPhone != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
      swift_bridgeObjectRetain_n();
      os_log_type_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        *(void *)&long long v22 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315394;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, (uint64_t *)&v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 2080;
        type metadata accessor for URL();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL.Type);
        uint64_t v20 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, (uint64_t *)&v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v17, v18, "Could not undo encoding for property %s of type %s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      swift_errorRelease();
    }
  }
}

void specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t *a7, uint64_t *a8)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  uint64_t v14 = *a1;
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(a2, a3, v14, v25);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a5);
  if (swift_dynamicCast() && v24)
  {
    uint64_t v27 = v24;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
    os_log_type_t v17 = (void (*)(uint64_t *__return_ptr, uint64_t *))a6(v16);
    v17(&v24, &v27);
    swift_release();
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(a7);
    v25[0] = v24;
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)v25, a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once();
    }
    os_log_type_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = Logger.logObject.getter();
    uint64_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v21 = 136315138;
      uint64_t v27 = v15;
      __swift_instantiateConcreteTypeFromMangledName(a8);
      long long v22 = String.init<A>(describing:)();
      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v19, v20, "No entry in userData of type %s to override", v21, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
  }
}

uint64_t one-time initialization function for codableOverrides()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v6 = __chkstk_darwin(v5);
  long long v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - v8;
  __chkstk_darwin(v7);
  id v11 = (char *)&v24 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<DICodableOverride>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_467720;
  if (one-time initialization token for transformer != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0, (uint64_t)static INPersonArrayCodable.transformer);
  unint64_t v13 = *(void (**)(void))(v2 + 16);
  OUTLINED_FUNCTION_42_11();
  v13();
  OUTLINED_FUNCTION_42_11();
  v13();
  uint64_t v14 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v24 = v9;
  uint64_t v27 = v14 | 7;
  uint64_t v28 = v15 + v4;
  uint64_t v16 = swift_allocObject();
  OUTLINED_FUNCTION_10_40();
  *(void *)(v17 + 16) = v18;
  *(void *)(v17 + 24) = 0xEA00000000007374;
  uint64_t v26 = v11;
  uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v25(v17 + v15, v24, v0);
  uint64_t v19 = v29;
  OUTLINED_FUNCTION_42_11();
  v13();
  uint64_t v20 = swift_allocObject();
  OUTLINED_FUNCTION_10_40();
  *(void *)(v21 + 16) = v22;
  *(void *)(v21 + 24) = 0xEA00000000007374;
  v25(v21 + v15, v19, v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v26, v0);
  *(void *)(v12 + 32) = partial apply for specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:);
  *(void *)(v12 + 40) = v16;
  *(void *)(v12 + 48) = partial apply for specialized closure #2 in static DICodableOverride.transform<A, B>(name:transformer:);
  *(void *)(v12 + 56) = v20;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x5255657469766E69;
  *(void *)(result + 24) = 0xE90000000000004CLL;
  *(void *)(v12 + 64) = partial apply for specialized closure #1 in static DICodableOverride.undoEncoding<A>(name:type:);
  *(void *)(v12 + 72) = result;
  *(void *)(v12 + 80) = INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
  *(void *)(v12 + 88) = 0;
  static MessageFlowDirectInvocation.codableOverrides = v12;
  return result;
}

uint64_t *MessageFlowDirectInvocation.codableOverrides.unsafeMutableAddressor()
{
  if (one-time initialization token for codableOverrides != -1) {
    swift_once();
  }
  return &static MessageFlowDirectInvocation.codableOverrides;
}

uint64_t static MessageFlowDirectInvocation.codableOverrides.getter()
{
  if (one-time initialization token for codableOverrides != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void *MessageFlowDirectInvocation.identifier.unsafeMutableAddressor()
{
  return &static MessageFlowDirectInvocation.identifier;
}

unint64_t static MessageFlowDirectInvocation.identifier.getter()
{
  return OUTLINED_FUNCTION_2_82();
}

uint64_t HangUpTipGenerator.templateIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MessageFlowDirectInvocation.content.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t MessageFlowDirectInvocation.inviteURL.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for MessageFlowDirectInvocation();
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_15();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);

  return v5(a1, v1, v3);
}

uint64_t type metadata accessor for MessageFlowDirectInvocation()
{
  uint64_t result = type metadata singleton initialization cache for MessageFlowDirectInvocation;
  if (!type metadata singleton initialization cache for MessageFlowDirectInvocation) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MessageFlowDirectInvocation.inviteURL.setter(uint64_t a1)
{
  type metadata accessor for MessageFlowDirectInvocation();
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_15();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);

  return v5(v1, a1, v3);
}

Swift::Void (__swiftcall *MessageFlowDirectInvocation.inviteURL.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t MessageFlowDirectInvocation.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65697069636572 && a2 == 0xEA00000000007374;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x5255657469766E69 && a2 == 0xE90000000000004CLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t MessageFlowDirectInvocation.CodingKeys.stringValue.getter(char a1)
{
  if (!a1) {
    return 0x6E65697069636572;
  }
  if (a1 == 1) {
    return 0x746E65746E6F63;
  }
  return 0x5255657469766E69;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MessageFlowDirectInvocation.CodingKeys()
{
  return MessageFlowDirectInvocation.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MessageFlowDirectInvocation.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = MessageFlowDirectInvocation.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MessageFlowDirectInvocation.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MessageFlowDirectInvocation.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MessageFlowDirectInvocation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<MessageFlowDirectInvocation.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  lazy protocol witness table accessor for type INPersonArrayCodable and conformance INPersonArrayCodable();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for MessageFlowDirectInvocation();
    type metadata accessor for URL();
    lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type INPersonArrayCodable and conformance INPersonArrayCodable()
{
  unint64_t result = lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable;
  if (!lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable;
  if (!lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable);
  }
  return result;
}

uint64_t MessageFlowDirectInvocation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for URL();
  OUTLINED_FUNCTION_0_0();
  uint64_t v20 = v5;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_4();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MessageFlowDirectInvocation.CodingKeys>);
  OUTLINED_FUNCTION_0_0();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_4();
  uint64_t v11 = type metadata accessor for MessageFlowDirectInvocation();
  OUTLINED_FUNCTION_15();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_4();
  uint64_t v15 = (char *)(v14 - v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  lazy protocol witness table accessor for type INPersonArrayCodable and conformance INPersonArrayCodable();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)uint64_t v15 = v22;
  *((void *)v15 + 1) = KeyedDecodingContainer.decode(_:forKey:)();
  *((void *)v15 + 2) = v16;
  lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))&type metadata accessor for URL);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v17 = OUTLINED_FUNCTION_7_56();
  v18(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v15[*(int *)(v11 + 24)], v9, v4);
  outlined init with copy of MessageFlowDirectInvocation((uint64_t)v15, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return outlined destroy of MessageFlowDirectInvocation((uint64_t)v15);
}

uint64_t outlined init with copy of MessageFlowDirectInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageFlowDirectInvocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of MessageFlowDirectInvocation(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageFlowDirectInvocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MessageFlowDirectInvocation.init(recipients:content:inviteURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  type metadata accessor for MessageFlowDirectInvocation();
  OUTLINED_FUNCTION_5_53();
  OUTLINED_FUNCTION_15();
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 32);

  return v9(a5, a4, v7);
}

uint64_t instantiation function for generic protocol witness table for MessageFlowDirectInvocation(uint64_t a1)
{
  *(void *)(a1 + 8) = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type MessageFlowDirectInvocation and conformance MessageFlowDirectInvocation, (void (*)(uint64_t))type metadata accessor for MessageFlowDirectInvocation);
  uint64_t result = lazy protocol witness table accessor for type URL and conformance URL(&lazy protocol witness table cache variable for type MessageFlowDirectInvocation and conformance MessageFlowDirectInvocation, (void (*)(uint64_t))type metadata accessor for MessageFlowDirectInvocation);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t lazy protocol witness table accessor for type URL and conformance URL(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance MessageFlowDirectInvocation@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MessageFlowDirectInvocation.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance MessageFlowDirectInvocation(void *a1)
{
  return MessageFlowDirectInvocation.encode(to:)(a1);
}

uint64_t sub_242744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ContactDisambiguationPromptResponseParser.personsToDisambiguate.getter();
  *a1 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessageFlowDirectInvocation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for MessageFlowDirectInvocation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for MessageFlowDirectInvocation(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for MessageFlowDirectInvocation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for MessageFlowDirectInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for MessageFlowDirectInvocation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageFlowDirectInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_242B78);
}

uint64_t sub_242B78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MessageFlowDirectInvocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_242C14);
}

void *sub_242C14(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for MessageFlowDirectInvocation()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MessageFlowDirectInvocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x242E04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for MessageFlowDirectInvocation.CodingKeys()
{
  return &unk_55E600;
}

void partial apply for specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
  OUTLINED_FUNCTION_13(v2);
  OUTLINED_FUNCTION_8_63();
  specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)(a1, v3, v4, v5, &demangling cache variable for type metadata for [Data], (uint64_t (*)(uint64_t))&Transformer.transform.getter, &demangling cache variable for type metadata for [INPerson], &demangling cache variable for type metadata for [Data].Type);
}

uint64_t objectdestroyTm_14()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

void partial apply for specialized closure #2 in static DICodableOverride.transform<A, B>(name:transformer:)(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
  OUTLINED_FUNCTION_13(v2);
  OUTLINED_FUNCTION_8_63();
  specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)(a1, v3, v4, v5, &demangling cache variable for type metadata for [INPerson], (uint64_t (*)(uint64_t))&Transformer.reverseTransform.getter, &demangling cache variable for type metadata for [Data], &demangling cache variable for type metadata for [INPerson].Type);
}

uint64_t sub_2430DC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void partial apply for specialized closure #1 in static DICodableOverride.undoEncoding<A>(name:type:)(uint64_t *a1)
{
  specialized closure #1 in static DICodableOverride.undoEncoding<A>(name:type:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t OUTLINED_FUNCTION_2_82()
{
  return 0xD000000000000028;
}

uint64_t OUTLINED_FUNCTION_7_56()
{
  return v0;
}

uint64_t IntentFromParseFlowStrategyHelper.__allocating_init(sharedGlobals:appResolved:)(long long *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  outlined init with take of AppSelectionSignalComponent(a1, v4 + 24);
  *(void *)(v4 + 16) = a2;
  return v4;
}

uint64_t IntentFromParseFlowStrategyHelper.init(sharedGlobals:appResolved:)(long long *a1, uint64_t a2)
{
  outlined init with take of AppSelectionSignalComponent(a1, v2 + 24);
  *(void *)(v2 + 16) = a2;
  return v2;
}

uint64_t IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)(void (*a1)(void), void *a2)
{
  uint64_t v3 = v2;
  uint64_t v142 = a2;
  OUTLINED_FUNCTION_2();
  uint64_t v139 = v5;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_0_0();
  uint64_t v136 = v7;
  uint64_t v137 = v6;
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_3_1();
  uint64_t v135 = v8;
  uint64_t v133 = type metadata accessor for PhoneCallNLv3Intent(0);
  __chkstk_darwin(v133);
  uint64_t v10 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NLIntent();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_5_8();
  uint64_t v140 = v15;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v16);
  uint64_t v138 = (char *)&v123 - v17;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v123 - v19;
  uint64_t v21 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_0_0();
  char v129 = (_DWORD *)v22;
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_3_1();
  uint64_t v128 = v24;
  uint64_t v25 = type metadata accessor for Parse();
  OUTLINED_FUNCTION_0_0();
  long long v145 = v26;
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_5_8();
  uint64_t v134 = v28;
  OUTLINED_FUNCTION_18_0();
  __chkstk_darwin(v29);
  id v31 = (char *)&v123 - v30;
  if (one-time initialization token for siriPhone != -1) {
    swift_once();
  }
  char v130 = (void (*)(uint64_t, char *, uint64_t))v21;
  uint64_t v144 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v141 = v25;
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl(&dword_0, v32, v33, "#IntentFromParseFlowStrategyHelper makeIntentFromParse", v34, 2u);
    uint64_t v25 = v141;
    OUTLINED_FUNCTION_6();
  }

  uint64_t v35 = v145;
  unint64_t v36 = (void (*)(uint64_t, void (*)(void), uint64_t))*((void *)v145 + 2);
  char v132 = v145 + 16;
  char v131 = v36;
  v36((uint64_t)v31, a1, v25);
  int v37 = (*((uint64_t (**)(char *, uint64_t))v35 + 11))(v31, v25);
  uint64_t v143 = a1;
  if (v37 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*((void (**)(char *, uint64_t))v35 + 1))(v31, v25);
    goto LABEL_7;
  }
  int v44 = v37;
  if (v37 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    int v45 = (void (*)(char *, uint64_t))*((void *)v145 + 12);
    uint64_t v141 = v25;
    v45(v31, v25);
    uint64_t v46 = *(void **)&v31[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NLIntent, Parse.ServerConversion))
                                + 48)];
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v31, v11);
    uint64_t v47 = (uint64_t)v138;
    uint64_t v48 = OUTLINED_FUNCTION_36_0();
    char v130 = v49;
    ((void (*)(uint64_t))v49)(v48);
    PhoneCallNLv3Intent.init(intent:)(v47, (uint64_t)v10);
    swift_retain_n();
    unint64_t v50 = (void *)Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.debug.getter();
    BOOL v52 = OUTLINED_FUNCTION_12_32(v51);
    uint64_t v127 = v11;
    char v126 = v10;
    char v124 = v3;
    uint64_t v142 = (void *)(v13 + 16);
    if (v52)
    {
      os_log_type_t v53 = (_DWORD *)OUTLINED_FUNCTION_47();
      v148[0] = OUTLINED_FUNCTION_14_0();
      *os_log_type_t v53 = 136315138;
      uint64_t v138 = (char *)(v53 + 1);
      unint64_t v54 = (void *)Parse.ServerConversion.siriKitIntent.getter();
      id v55 = [v54 _metadata];

      id v56 = [v55 userUtterance];
      *(void *)&long long v146 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _INPBString?);
      uint64_t v57 = String.init<A>(describing:)();
      *(void *)&long long v146 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v58, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_64(&dword_0, v59, v60, "User utterance: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    swift_retain_n();
    uint64_t v61 = (void *)Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.debug.getter();
    BOOL v63 = OUTLINED_FUNCTION_12_32(v62);
    uint64_t v125 = v13;
    if (v63)
    {
      unint64_t v64 = (_DWORD *)OUTLINED_FUNCTION_47();
      uint64_t v138 = (char *)OUTLINED_FUNCTION_14_0();
      v148[0] = (uint64_t)v138;
      *unint64_t v64 = 136315138;
      char v129 = v64 + 1;
      uint64_t v65 = (void *)Parse.ServerConversion.siriKitIntent.getter();
      id v66 = [v65 description];
      uint64_t v67 = v46;
      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v70 = v69;

      uint64_t v71 = v68;
      uint64_t v46 = v67;
      uint64_t v72 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v70, v148);
      OUTLINED_FUNCTION_39_5(v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_64(&dword_0, v73, v74, "SKIntent from server: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v78 = v127;
    uint64_t v79 = v140;
    v130(v140, v20, v127);
    uint64_t v80 = (void *)Logger.logObject.getter();
    os_log_type_t v81 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_12_32(v81))
    {
      uint64_t v82 = (_DWORD *)OUTLINED_FUNCTION_47();
      v148[0] = OUTLINED_FUNCTION_14_0();
      _DWORD *v82 = 136315138;
      lazy protocol witness table accessor for type NLIntent and conformance NLIntent(&lazy protocol witness table cache variable for type NLIntent and conformance NLIntent, (void (*)(uint64_t))&type metadata accessor for NLIntent);
      uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v84, v148);
      OUTLINED_FUNCTION_39_5(v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v86 = *(void (**)(void))(v125 + 8);
      OUTLINED_FUNCTION_12_20();
      v87();
      OUTLINED_FUNCTION_8_64(&dword_0, v88, v89, "NLIntent from server: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      uint64_t v86 = *(void (**)(void))(v125 + 8);
      ((void (*)(uint64_t, uint64_t))v86)(v79, v78);
    }

    uint64_t v90 = (uint64_t)v126;
    uint64_t v91 = v139;
    uint64_t v25 = v141;
    uint64_t v92 = (void *)Parse.ServerConversion.siriKitIntent.getter();
    uint64_t v93 = *(void *)(v91 + 80);
    unint64_t v42 = (void *)INIntent.typed<A>(as:)();

    if (v42)
    {
      uint64_t v143 = v86;
      long long v145 = v20;
      v148[3] = v133;
      v148[4] = (uint64_t)&protocol witness table for PhoneCallNLv3Intent;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v148);
      outlined init with copy of PhoneCallNLv3Intent(v90, (uint64_t)boxed_opaque_existential_1);
      id v95 = v42;
      uint64_t v96 = v91;
      uint64_t v97 = IntentFromParseFlowStrategyHelper.inferApp(from:)();
      uint64_t v142 = v46;
      uint64_t v98 = (uint64_t)(v124 + 3);
      uint64_t v100 = v124[6];
      uint64_t v99 = v124[7];
      __swift_project_boxed_opaque_existential_1(v124 + 3, v100);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v99 + 8))(&v146, v100, v99);
      __swift_project_boxed_opaque_existential_1(&v146, v147);
      uint64_t v101 = v135;
      dispatch thunk of DeviceState.siriLocale.getter();
      specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)((uint64_t)v95, (uint64_t)v148, v97, v101, v98, 0, 1, v93, *(void *)(v96 + 88), v122, v123, (uint64_t)v124, v125, (uint64_t)v126, v127, v128, (uint64_t)v129, (uint64_t)v130, (uint64_t)v131,
        (uint64_t)v132,
        v133);

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v101, v137);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v146);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
      id v102 = v95;
      uint64_t v103 = Logger.logObject.getter();
      os_log_type_t v104 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v103, v104))
      {
        uint64_t v105 = (uint8_t *)OUTLINED_FUNCTION_47();
        v148[0] = OUTLINED_FUNCTION_14_0();
        *(_DWORD *)uint64_t v105 = 136315138;
        *(void *)&long long v146 = v102;
        id v106 = v102;
        swift_getWitnessTable();
        uint64_t v107 = String.init<A>(describing:)();
        *(void *)&long long v146 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, v148);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v103, v104, "SKIntent after NCR replacement: %s", v105, 0xCu);
        OUTLINED_FUNCTION_20_1();
        OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_6();
        swift_release();
      }
      else
      {
        swift_release();
      }
      outlined destroy of PhoneCallNLv3Intent((uint64_t)v126);
      OUTLINED_FUNCTION_12_20();
      v116();
      return (uint64_t)v42;
    }
    swift_release();
    outlined destroy of PhoneCallNLv3Intent(v90);
    OUTLINED_FUNCTION_12_20();
    v86();
    int v76 = v145;
LABEL_28:
    uint64_t v109 = v134;
    v131(v134, v143, v25);
    uint64_t v110 = Logger.logObject.getter();
    os_log_type_t v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = v76;
      uint64_t v113 = (uint8_t *)OUTLINED_FUNCTION_47();
      v148[0] = OUTLINED_FUNCTION_14_0();
      *(_DWORD *)uint64_t v113 = 136315138;
      Swift::String v114 = Parse.typeForLogging()();
      uint64_t v115 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v114._countAndFlagsBits, (unint64_t)v114._object, v148);
      OUTLINED_FUNCTION_39_5(v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*((void (**)(uint64_t, uint64_t))v112 + 1))(v109, v25);
      _os_log_impl(&dword_0, v110, v111, "#IntentFromParseFlowStrategyHelper makeIntentFromParse get unexpected parse: %s", v113, 0xCu);
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_6();
    }
    else
    {
      (*((void (**)(uint64_t, uint64_t))v76 + 1))(v109, v25);
    }

    return 0;
  }
  if (v37 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*((void (**)(char *, uint64_t))v145 + 12))(v31, v25);
    swift_unknownObjectRelease();
  }
  else
  {
    int v75 = enum case for Parse.uso(_:);
    int v76 = v145;
    OUTLINED_FUNCTION_12_20();
    v77();
    if (v44 != v75) {
      goto LABEL_28;
    }
  }
LABEL_7:
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  uint64_t v38 = OUTLINED_FUNCTION_52_4();
  uint64_t v40 = v39(v38);
  uint64_t v41 = (uint64_t)v143;
  (*(void (**)(long long *__return_ptr, void (*)(void)))(*(void *)v40 + 192))(&v146, v143);
  swift_release();
  if (v147)
  {
    outlined init with take of AppSelectionSignalComponent(&v146, (uint64_t)v148);
    unint64_t v42 = (void *)IntentFromParseFlowStrategyHelper.makeIntentFromParseSiriX(parse:nlIntent:previousIntent:)(v41, (uint64_t)v148, v142);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
    return (uint64_t)v42;
  }
  outlined destroy of PhoneCallNLIntent?((uint64_t)&v146);
  (*((void (**)(uint64_t, uint64_t, void))v129 + 2))(v128, v144, v130);
  uint64_t v117 = Logger.logObject.getter();
  os_log_type_t v118 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v117, v118))
  {
    OUTLINED_FUNCTION_47();
    v148[0] = OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_50_7(4.8149e-34);
    *(void *)&long long v146 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000050, v119, v148);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_9_27(&dword_0, v120, v121, "%s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)();
  OUTLINED_FUNCTION_77();
  uint64_t result = OUTLINED_FUNCTION_13_17();
  __break(1u);
  return result;
}